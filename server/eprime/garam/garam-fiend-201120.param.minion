MINION 3
**VARIABLES**
DISCRETE res_00001_00001 #
{-2..9}
DISCRETE res_00001_00002 #
{-2..9}
DISCRETE res_00001_00003 #
{-2..9}
DISCRETE res_00001_00004 #
{-2..9}
DISCRETE res_00001_00005 #
{-2..9}
DISCRETE res_00001_00006 #
{-2..9}
DISCRETE res_00001_00007 #
{-2..9}
DISCRETE res_00002_00001 #
{-2..9}
DISCRETE res_00002_00002 #
{-2..9}
DISCRETE res_00002_00003 #
{-2..9}
DISCRETE res_00002_00004 #
{-2..9}
DISCRETE res_00002_00005 #
{-2..9}
DISCRETE res_00002_00006 #
{-2..9}
DISCRETE res_00002_00007 #
{-2..9}
DISCRETE res_00003_00001 #
{-2..9}
DISCRETE res_00003_00002 #
{-2..9}
DISCRETE res_00003_00003 #
{-2..9}
DISCRETE res_00003_00004 #
{-2..9}
DISCRETE res_00003_00005 #
{-2..9}
DISCRETE res_00003_00006 #
{-2..9}
DISCRETE res_00003_00007 #
{-2..9}
DISCRETE res_00004_00001 #
{-2..9}
DISCRETE res_00004_00002 #
{-2..9}
DISCRETE res_00004_00003 #
{-2..9}
DISCRETE res_00004_00004 #
{-2..9}
DISCRETE res_00004_00005 #
{-2..9}
DISCRETE res_00004_00006 #
{-2..9}
DISCRETE res_00004_00007 #
{-2..9}
DISCRETE res_00005_00001 #
{-2..9}
DISCRETE res_00005_00002 #
{-2..9}
DISCRETE res_00005_00003 #
{-2..9}
DISCRETE res_00005_00004 #
{-2..9}
DISCRETE res_00005_00005 #
{-2..9}
DISCRETE res_00005_00006 #
{-2..9}
DISCRETE res_00005_00007 #
{-2..9}
DISCRETE res_00006_00001 #
{-2..9}
DISCRETE res_00006_00002 #
{-2..9}
DISCRETE res_00006_00003 #
{-2..9}
DISCRETE res_00006_00004 #
{-2..9}
DISCRETE res_00006_00005 #
{-2..9}
DISCRETE res_00006_00006 #
{-2..9}
DISCRETE res_00006_00007 #
{-2..9}
DISCRETE res_00007_00001 #
{-2..9}
DISCRETE res_00007_00002 #
{-2..9}
DISCRETE res_00007_00003 #
{-2..9}
DISCRETE res_00007_00004 #
{-2..9}
DISCRETE res_00007_00005 #
{-2..9}
DISCRETE res_00007_00006 #
{-2..9}
DISCRETE res_00007_00007 #
{-2..9}
DISCRETE res_00008_00001 #
{-2..9}
DISCRETE res_00008_00002 #
{-2..9}
DISCRETE res_00008_00003 #
{-2..9}
DISCRETE res_00008_00004 #
{-2..9}
DISCRETE res_00008_00005 #
{-2..9}
DISCRETE res_00008_00006 #
{-2..9}
DISCRETE res_00008_00007 #
{-2..9}
DISCRETE res_00009_00001 #
{-2..9}
DISCRETE res_00009_00002 #
{-2..9}
DISCRETE res_00009_00003 #
{-2..9}
DISCRETE res_00009_00004 #
{-2..9}
DISCRETE res_00009_00005 #
{-2..9}
DISCRETE res_00009_00006 #
{-2..9}
DISCRETE res_00009_00007 #
{-2..9}
BOOL ops_bool_00001 #
BOOL ops_bool_00002 #
BOOL ops_bool_00003 #
BOOL ops_bool_00004 #
BOOL ops_bool_00005 #
BOOL ops_bool_00006 #
BOOL ops_bool_00007 #
BOOL ops_bool_00008 #
BOOL ops_bool_00009 #
BOOL ops_bool_00010 #
BOOL ops_bool_00011 #
BOOL ops_bool_00012 #
BOOL ops_bool_00013 #
BOOL ops_bool_00014 #
BOOL ops_bool_00015 #
BOOL ops_bool_00016 #
BOOL ops_bool_00017 #
BOOL ops_bool_00018 #
BOOL ops_bool_00019 #
BOOL ops_bool_00020 #
BOOL two_digit_00001 #
BOOL two_digit_00002 #
BOOL two_digit_00003 #
BOOL two_digit_00004 #
BOOL two_digit_00005 #
BOOL two_digit_00006 #
BOOL two_digit_00007 #
BOOL two_digit_00008 #
DISCRETE aux0 #
{-18..81}
**CONSTRAINTS**
w-inintervalset(aux0, [-18,-18,-16,-16,-14,-14,-12,-12,-10,10,12,12,14,16,18,18,20,21,24,25,27,28,30,30,32,32,35,36,40,40,42,42,45,45,48,49,54,54,56,56,63,64,72,72,81,81])
**VARIABLES**
DISCRETE aux1 #
{-18..81}
**CONSTRAINTS**
w-inintervalset(aux1, [-18,-18,-16,-16,-14,-14,-12,-12,-10,10,12,12,14,16,18,18,20,21,24,25,27,28,30,30,32,32,35,36,40,40,42,42,45,45,48,49,54,54,56,56,63,64,72,72,81,81])
**VARIABLES**
DISCRETE aux2 #
{-18..81}
**CONSTRAINTS**
w-inintervalset(aux2, [-18,-18,-16,-16,-14,-14,-12,-12,-10,10,12,12,14,16,18,18,20,21,24,25,27,28,30,30,32,32,35,36,40,40,42,42,45,45,48,49,54,54,56,56,63,64,72,72,81,81])
**VARIABLES**
DISCRETE aux3 #
{-18..81}
**CONSTRAINTS**
w-inintervalset(aux3, [-18,-18,-16,-16,-14,-14,-12,-12,-10,10,12,12,14,16,18,18,20,21,24,25,27,28,30,30,32,32,35,36,40,40,42,42,45,45,48,49,54,54,56,56,63,64,72,72,81,81])
**VARIABLES**
DISCRETE aux4 #
{-18..81}
**CONSTRAINTS**
w-inintervalset(aux4, [-18,-18,-16,-16,-14,-14,-12,-12,-10,10,12,12,14,16,18,18,20,21,24,25,27,28,30,30,32,32,35,36,40,40,42,42,45,45,48,49,54,54,56,56,63,64,72,72,81,81])
**VARIABLES**
DISCRETE aux5 #
{-18..81}
**CONSTRAINTS**
w-inintervalset(aux5, [-18,-18,-16,-16,-14,-14,-12,-12,-10,10,12,12,14,16,18,18,20,21,24,25,27,28,30,30,32,32,35,36,40,40,42,42,45,45,48,49,54,54,56,56,63,64,72,72,81,81])
**VARIABLES**
**TUPLELIST**
presetvals 9 7
-1 1 -1 -2 -1 1 -1 
-1 -2 -1 4 -1 -2 9 
-1 -2 2 -2 -1 -2 -1 
-1 -1 -1 -2 -1 -1 -1 
-2 3 -2 -2 -2 4 -2 
-1 -1 -1 -2 -1 -1 -1 
9 -2 -1 4 -1 -2 -1 
-1 -2 -1 -2 2 -2 -1 
-1 2 -1 -2 -1 5 -1 
**VARIABLES**
ALIAS presetvals[9,7]=[[-1, 1, -1, -2, -1, 1, -1], [-1, -2, -1, 4, -1, -2, 9], [-1, -2, 2, -2, -1, -2, -1], [-1, -1, -1, -2, -1, -1, -1], [-2, 3, -2, -2, -2, 4, -2], [-1, -1, -1, -2, -1, -1, -1], [9, -2, -1, 4, -1, -2, -1], [-1, -2, -1, -2, 2, -2, -1], [-1, 2, -1, -2, -1, 5, -1]]
**VARIABLES**
ALIAS op[20]=[2, 2, 1, 3, 3, 1, 1, 2, 2, 2, 2, 1, 1, 3, 3, 3, 3, 1, 2, 1]
**SEARCH**
PRINT[[res_00001_00001],[res_00001_00002],[res_00001_00003],[res_00001_00004],[res_00001_00005],[res_00001_00006],[res_00001_00007],[res_00002_00001],[res_00002_00002],[res_00002_00003],[res_00002_00004],[res_00002_00005],[res_00002_00006],[res_00002_00007],[res_00003_00001],[res_00003_00002],[res_00003_00003],[res_00003_00004],[res_00003_00005],[res_00003_00006],[res_00003_00007],[res_00004_00001],[res_00004_00002],[res_00004_00003],[res_00004_00004],[res_00004_00005],[res_00004_00006],[res_00004_00007],[res_00005_00001],[res_00005_00002],[res_00005_00003],[res_00005_00004],[res_00005_00005],[res_00005_00006],[res_00005_00007],[res_00006_00001],[res_00006_00002],[res_00006_00003],[res_00006_00004],[res_00006_00005],[res_00006_00006],[res_00006_00007],[res_00007_00001],[res_00007_00002],[res_00007_00003],[res_00007_00004],[res_00007_00005],[res_00007_00006],[res_00007_00007],[res_00008_00001],[res_00008_00002],[res_00008_00003],[res_00008_00004],[res_00008_00005],[res_00008_00006],[res_00008_00007],[res_00009_00001],[res_00009_00002],[res_00009_00003],[res_00009_00004],[res_00009_00005],[res_00009_00006],[res_00009_00007],[ops_bool_00001],[ops_bool_00002],[ops_bool_00003],[ops_bool_00004],[ops_bool_00005],[ops_bool_00006],[ops_bool_00007],[ops_bool_00008],[ops_bool_00009],[ops_bool_00010],[ops_bool_00011],[ops_bool_00012],[ops_bool_00013],[ops_bool_00014],[ops_bool_00015],[ops_bool_00016],[ops_bool_00017],[ops_bool_00018],[ops_bool_00019],[ops_bool_00020],[two_digit_00001],[two_digit_00002],[two_digit_00003],[two_digit_00004],[two_digit_00005],[two_digit_00006],[two_digit_00007],[two_digit_00008]]
**CONSTRAINTS**
product(res_00001_00003, res_00002_00003, aux0)
product(res_00001_00005, res_00002_00005, aux1)
product(res_00006_00001, res_00007_00001, aux2)
product(res_00006_00003, res_00007_00003, aux3)
product(res_00006_00005, res_00007_00005, aux4)
product(res_00006_00007, res_00007_00007, aux5)
reifyimply(ineq(0, res_00003_00001, -1), two_digit_00001)
reifyimply(ineq(0, res_00003_00003, -1), two_digit_00002)
reifyimply(ineq(0, res_00003_00005, -1), two_digit_00003)
reifyimply(ineq(0, res_00003_00007, -1), two_digit_00004)
reifyimply(ineq(0, res_00008_00001, -1), two_digit_00005)
reifyimply(ineq(0, res_00008_00003, -1), two_digit_00006)
reifyimply(ineq(0, res_00008_00005, -1), two_digit_00007)
reifyimply(ineq(0, res_00008_00007, -1), two_digit_00008)
ineq(0, res_00001_00001, 0)
w-literal(res_00001_00002,1)
ineq(0, res_00001_00003, 0)
w-literal(res_00001_00004,-2)
ineq(0, res_00001_00005, 0)
w-literal(res_00001_00006,1)
ineq(0, res_00001_00007, 0)
ineq(0, res_00002_00001, 0)
w-literal(res_00002_00002,-2)
ineq(0, res_00002_00003, 0)
w-literal(res_00002_00004,4)
ineq(0, res_00002_00005, 0)
w-literal(res_00002_00006,-2)
w-literal(res_00002_00007,9)
ineq(0, res_00003_00001, 0)
w-literal(res_00003_00002,-2)
w-literal(res_00003_00003,2)
w-literal(res_00003_00004,-2)
ineq(0, res_00003_00005, 0)
w-literal(res_00003_00006,-2)
ineq(0, res_00003_00007, 0)
ineq(0, res_00004_00001, 0)
ineq(0, res_00004_00002, 0)
ineq(0, res_00004_00003, 0)
w-literal(res_00004_00004,-2)
ineq(0, res_00004_00005, 0)
ineq(0, res_00004_00006, 0)
ineq(0, res_00004_00007, 0)
w-literal(res_00005_00001,-2)
w-literal(res_00005_00002,3)
w-literal(res_00005_00003,-2)
w-literal(res_00005_00004,-2)
w-literal(res_00005_00005,-2)
w-literal(res_00005_00006,4)
w-literal(res_00005_00007,-2)
ineq(0, res_00006_00001, 0)
ineq(0, res_00006_00002, 0)
ineq(0, res_00006_00003, 0)
w-literal(res_00006_00004,-2)
ineq(0, res_00006_00005, 0)
ineq(0, res_00006_00006, 0)
ineq(0, res_00006_00007, 0)
w-literal(res_00007_00001,9)
w-literal(res_00007_00002,-2)
ineq(0, res_00007_00003, 0)
w-literal(res_00007_00004,4)
ineq(0, res_00007_00005, 0)
w-literal(res_00007_00006,-2)
ineq(0, res_00007_00007, 0)
ineq(0, res_00008_00001, 0)
w-literal(res_00008_00002,-2)
ineq(0, res_00008_00003, 0)
w-literal(res_00008_00004,-2)
w-literal(res_00008_00005,2)
w-literal(res_00008_00006,-2)
ineq(0, res_00008_00007, 0)
ineq(0, res_00009_00001, 0)
w-literal(res_00009_00002,2)
ineq(0, res_00009_00003, 0)
w-literal(res_00009_00004,-2)
ineq(0, res_00009_00005, 0)
w-literal(res_00009_00006,5)
ineq(0, res_00009_00007, 0)
reifyimply(weightedsumleq([1,-1],[res_00001_00001,res_00001_00002],res_00001_00003), ops_bool_00001)
reifyimply(weightedsumgeq([1,-1],[res_00001_00001,res_00001_00002],res_00001_00003), ops_bool_00001)
reifyimply(weightedsumleq([1,-1],[res_00001_00005,res_00001_00006],res_00001_00007), ops_bool_00002)
reifyimply(weightedsumgeq([1,-1],[res_00001_00005,res_00001_00006],res_00001_00007), ops_bool_00002)
reifyimply(weightedsumleq([-1,1,1,-10],[res_00004_00001,res_00001_00001,res_00002_00001,res_00003_00001],0), ops_bool_00003)
reifyimply(weightedsumgeq([-1,1,1,-10],[res_00004_00001,res_00001_00001,res_00002_00001,res_00003_00001],0), ops_bool_00003)
reifyimply(weightedsumleq([1,10],[res_00004_00003,res_00003_00003],aux0), ops_bool_00004)
reifyimply(weightedsumgeq([1,10],[res_00004_00003,res_00003_00003],aux0), ops_bool_00004)
reifyimply(weightedsumleq([1,10],[res_00004_00005,res_00003_00005],aux1), ops_bool_00005)
reifyimply(weightedsumgeq([1,10],[res_00004_00005,res_00003_00005],aux1), ops_bool_00005)
reifyimply(weightedsumleq([-1,1,1,-10],[res_00004_00007,res_00001_00007,res_00002_00007,res_00003_00007],0), ops_bool_00006)
reifyimply(weightedsumgeq([-1,1,1,-10],[res_00004_00007,res_00001_00007,res_00002_00007,res_00003_00007],0), ops_bool_00006)
reifyimply(sumleq([res_00002_00003,res_00002_00004],res_00002_00005), ops_bool_00007)
reifyimply(sumgeq([res_00002_00003,res_00002_00004],res_00002_00005), ops_bool_00007)
reifyimply(weightedsumleq([1,-1],[res_00004_00001,res_00004_00002],res_00004_00003), ops_bool_00008)
reifyimply(weightedsumgeq([1,-1],[res_00004_00001,res_00004_00002],res_00004_00003), ops_bool_00008)
reifyimply(weightedsumleq([1,-1],[res_00004_00005,res_00004_00006],res_00004_00007), ops_bool_00009)
reifyimply(weightedsumgeq([1,-1],[res_00004_00005,res_00004_00006],res_00004_00007), ops_bool_00009)
reifyimply(weightedsumleq([1,-1],[res_00004_00002,res_00005_00002],res_00006_00002), ops_bool_00010)
reifyimply(weightedsumgeq([1,-1],[res_00004_00002,res_00005_00002],res_00006_00002), ops_bool_00010)
reifyimply(weightedsumleq([1,-1],[res_00004_00006,res_00005_00006],res_00006_00006), ops_bool_00011)
reifyimply(weightedsumgeq([1,-1],[res_00004_00006,res_00005_00006],res_00006_00006), ops_bool_00011)
reifyimply(sumleq([res_00006_00001,res_00006_00002],res_00006_00003), ops_bool_00012)
reifyimply(sumgeq([res_00006_00001,res_00006_00002],res_00006_00003), ops_bool_00012)
reifyimply(sumleq([res_00006_00005,res_00006_00006],res_00006_00007), ops_bool_00013)
reifyimply(sumgeq([res_00006_00005,res_00006_00006],res_00006_00007), ops_bool_00013)
reifyimply(weightedsumleq([1,10],[res_00009_00001,res_00008_00001],aux2), ops_bool_00014)
reifyimply(weightedsumgeq([1,10],[res_00009_00001,res_00008_00001],aux2), ops_bool_00014)
reifyimply(weightedsumleq([1,10],[res_00009_00003,res_00008_00003],aux3), ops_bool_00015)
reifyimply(weightedsumgeq([1,10],[res_00009_00003,res_00008_00003],aux3), ops_bool_00015)
reifyimply(weightedsumleq([1,10],[res_00009_00005,res_00008_00005],aux4), ops_bool_00016)
reifyimply(weightedsumgeq([1,10],[res_00009_00005,res_00008_00005],aux4), ops_bool_00016)
reifyimply(weightedsumleq([1,10],[res_00009_00007,res_00008_00007],aux5), ops_bool_00017)
reifyimply(weightedsumgeq([1,10],[res_00009_00007,res_00008_00007],aux5), ops_bool_00017)
reifyimply(sumleq([res_00007_00003,res_00007_00004],res_00007_00005), ops_bool_00018)
reifyimply(sumgeq([res_00007_00003,res_00007_00004],res_00007_00005), ops_bool_00018)
reifyimply(weightedsumleq([1,-1],[res_00009_00001,res_00009_00002],res_00009_00003), ops_bool_00019)
reifyimply(weightedsumgeq([1,-1],[res_00009_00001,res_00009_00002],res_00009_00003), ops_bool_00019)
reifyimply(sumleq([res_00009_00005,res_00009_00006],res_00009_00007), ops_bool_00020)
reifyimply(sumgeq([res_00009_00005,res_00009_00006],res_00009_00007), ops_bool_00020)
**EOF**
