p cnf 18685 109372                                                                                  

1 0
c Encoding variable: field_00001_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00001_00001' direct represents '1' with '2'
c Var 'field_00001_00001' direct represents '2' with '3'
c Var 'field_00001_00001' direct represents '3' with '4'
c Var 'field_00001_00001' direct represents '4' with '5'
c Var 'field_00001_00001' direct represents '5' with '6'
c Var 'field_00001_00001' direct represents '6' with '7'
c Var 'field_00001_00001' direct represents '7' with '8'
c Var 'field_00001_00001' direct represents '8' with '9'
c Var 'field_00001_00001' direct represents '9' with '10'
2 3 4 5 6 7 8 9 10 0
-2 11 0
-2 14 0
-3 12 0
-3 14 0
-4 13 0
-4 14 0
-5 11 0
-5 15 0
-6 12 0
-6 15 0
-7 13 0
-7 15 0
-8 11 0
-8 16 0
-9 12 0
-9 16 0
-10 13 0
-10 16 0
-11 -12 0
-11 -13 0
-12 -13 0
-14 -15 0
-14 -16 0
-15 -16 0
c Encoding variable: field_00001_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00001_00002' direct represents '1' with '17'
c Var 'field_00001_00002' direct represents '2' with '18'
c Var 'field_00001_00002' direct represents '3' with '19'
c Var 'field_00001_00002' direct represents '4' with '20'
c Var 'field_00001_00002' direct represents '5' with '21'
c Var 'field_00001_00002' direct represents '6' with '22'
c Var 'field_00001_00002' direct represents '7' with '23'
c Var 'field_00001_00002' direct represents '8' with '24'
c Var 'field_00001_00002' direct represents '9' with '25'
17 18 19 20 21 22 23 24 25 0
-17 26 0
-17 29 0
-18 27 0
-18 29 0
-19 28 0
-19 29 0
-20 26 0
-20 30 0
-21 27 0
-21 30 0
-22 28 0
-22 30 0
-23 26 0
-23 31 0
-24 27 0
-24 31 0
-25 28 0
-25 31 0
-26 -27 0
-26 -28 0
-27 -28 0
-29 -30 0
-29 -31 0
-30 -31 0
c Encoding variable: field_00001_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00001_00003' direct represents '1' with '32'
c Var 'field_00001_00003' direct represents '2' with '33'
c Var 'field_00001_00003' direct represents '3' with '34'
c Var 'field_00001_00003' direct represents '4' with '35'
c Var 'field_00001_00003' direct represents '5' with '36'
c Var 'field_00001_00003' direct represents '6' with '37'
c Var 'field_00001_00003' direct represents '7' with '38'
c Var 'field_00001_00003' direct represents '8' with '39'
c Var 'field_00001_00003' direct represents '9' with '40'
32 33 34 35 36 37 38 39 40 0
-32 41 0
-32 44 0
-33 42 0
-33 44 0
-34 43 0
-34 44 0
-35 41 0
-35 45 0
-36 42 0
-36 45 0
-37 43 0
-37 45 0
-38 41 0
-38 46 0
-39 42 0
-39 46 0
-40 43 0
-40 46 0
-41 -42 0
-41 -43 0
-42 -43 0
-44 -45 0
-44 -46 0
-45 -46 0
c Encoding variable: field_00001_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00001_00004' direct represents '1' with '47'
c Var 'field_00001_00004' direct represents '2' with '48'
c Var 'field_00001_00004' direct represents '3' with '49'
c Var 'field_00001_00004' direct represents '4' with '50'
c Var 'field_00001_00004' direct represents '5' with '51'
c Var 'field_00001_00004' direct represents '6' with '52'
c Var 'field_00001_00004' direct represents '7' with '53'
c Var 'field_00001_00004' direct represents '8' with '54'
c Var 'field_00001_00004' direct represents '9' with '55'
47 48 49 50 51 52 53 54 55 0
-47 56 0
-47 59 0
-48 57 0
-48 59 0
-49 58 0
-49 59 0
-50 56 0
-50 60 0
-51 57 0
-51 60 0
-52 58 0
-52 60 0
-53 56 0
-53 61 0
-54 57 0
-54 61 0
-55 58 0
-55 61 0
-56 -57 0
-56 -58 0
-57 -58 0
-59 -60 0
-59 -61 0
-60 -61 0
c Encoding variable: field_00001_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00001_00005' direct represents '1' with '62'
c Var 'field_00001_00005' direct represents '2' with '63'
c Var 'field_00001_00005' direct represents '3' with '64'
c Var 'field_00001_00005' direct represents '4' with '65'
c Var 'field_00001_00005' direct represents '5' with '66'
c Var 'field_00001_00005' direct represents '6' with '67'
c Var 'field_00001_00005' direct represents '7' with '68'
c Var 'field_00001_00005' direct represents '8' with '69'
c Var 'field_00001_00005' direct represents '9' with '70'
62 63 64 65 66 67 68 69 70 0
-62 71 0
-62 74 0
-63 72 0
-63 74 0
-64 73 0
-64 74 0
-65 71 0
-65 75 0
-66 72 0
-66 75 0
-67 73 0
-67 75 0
-68 71 0
-68 76 0
-69 72 0
-69 76 0
-70 73 0
-70 76 0
-71 -72 0
-71 -73 0
-72 -73 0
-74 -75 0
-74 -76 0
-75 -76 0
c Encoding variable: field_00001_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00001_00006' direct represents '1' with '77'
c Var 'field_00001_00006' direct represents '2' with '78'
c Var 'field_00001_00006' direct represents '3' with '79'
c Var 'field_00001_00006' direct represents '4' with '80'
c Var 'field_00001_00006' direct represents '5' with '81'
c Var 'field_00001_00006' direct represents '6' with '82'
c Var 'field_00001_00006' direct represents '7' with '83'
c Var 'field_00001_00006' direct represents '8' with '84'
c Var 'field_00001_00006' direct represents '9' with '85'
77 78 79 80 81 82 83 84 85 0
-77 86 0
-77 89 0
-78 87 0
-78 89 0
-79 88 0
-79 89 0
-80 86 0
-80 90 0
-81 87 0
-81 90 0
-82 88 0
-82 90 0
-83 86 0
-83 91 0
-84 87 0
-84 91 0
-85 88 0
-85 91 0
-86 -87 0
-86 -88 0
-87 -88 0
-89 -90 0
-89 -91 0
-90 -91 0
c Encoding variable: field_00001_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00001_00007' direct represents '1' with '92'
c Var 'field_00001_00007' direct represents '2' with '93'
c Var 'field_00001_00007' direct represents '3' with '94'
c Var 'field_00001_00007' direct represents '4' with '95'
c Var 'field_00001_00007' direct represents '5' with '96'
c Var 'field_00001_00007' direct represents '6' with '97'
c Var 'field_00001_00007' direct represents '7' with '98'
c Var 'field_00001_00007' direct represents '8' with '99'
c Var 'field_00001_00007' direct represents '9' with '100'
92 93 94 95 96 97 98 99 100 0
-92 101 0
-92 104 0
-93 102 0
-93 104 0
-94 103 0
-94 104 0
-95 101 0
-95 105 0
-96 102 0
-96 105 0
-97 103 0
-97 105 0
-98 101 0
-98 106 0
-99 102 0
-99 106 0
-100 103 0
-100 106 0
-101 -102 0
-101 -103 0
-102 -103 0
-104 -105 0
-104 -106 0
-105 -106 0
c Encoding variable: field_00001_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00001_00008' direct represents '1' with '107'
c Var 'field_00001_00008' direct represents '2' with '108'
c Var 'field_00001_00008' direct represents '3' with '109'
c Var 'field_00001_00008' direct represents '4' with '110'
c Var 'field_00001_00008' direct represents '5' with '111'
c Var 'field_00001_00008' direct represents '6' with '112'
c Var 'field_00001_00008' direct represents '7' with '113'
c Var 'field_00001_00008' direct represents '8' with '114'
c Var 'field_00001_00008' direct represents '9' with '115'
107 108 109 110 111 112 113 114 115 0
-107 116 0
-107 119 0
-108 117 0
-108 119 0
-109 118 0
-109 119 0
-110 116 0
-110 120 0
-111 117 0
-111 120 0
-112 118 0
-112 120 0
-113 116 0
-113 121 0
-114 117 0
-114 121 0
-115 118 0
-115 121 0
-116 -117 0
-116 -118 0
-117 -118 0
-119 -120 0
-119 -121 0
-120 -121 0
c Encoding variable: field_00001_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00001_00009' direct represents '1' with '122'
c Var 'field_00001_00009' direct represents '2' with '123'
c Var 'field_00001_00009' direct represents '3' with '124'
c Var 'field_00001_00009' direct represents '4' with '125'
c Var 'field_00001_00009' direct represents '5' with '126'
c Var 'field_00001_00009' direct represents '6' with '127'
c Var 'field_00001_00009' direct represents '7' with '128'
c Var 'field_00001_00009' direct represents '8' with '129'
c Var 'field_00001_00009' direct represents '9' with '130'
122 123 124 125 126 127 128 129 130 0
-122 131 0
-122 134 0
-123 132 0
-123 134 0
-124 133 0
-124 134 0
-125 131 0
-125 135 0
-126 132 0
-126 135 0
-127 133 0
-127 135 0
-128 131 0
-128 136 0
-129 132 0
-129 136 0
-130 133 0
-130 136 0
-131 -132 0
-131 -133 0
-132 -133 0
-134 -135 0
-134 -136 0
-135 -136 0
c Encoding variable: field_00002_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00002_00001' direct represents '1' with '137'
c Var 'field_00002_00001' direct represents '2' with '138'
c Var 'field_00002_00001' direct represents '3' with '139'
c Var 'field_00002_00001' direct represents '4' with '140'
c Var 'field_00002_00001' direct represents '5' with '141'
c Var 'field_00002_00001' direct represents '6' with '142'
c Var 'field_00002_00001' direct represents '7' with '143'
c Var 'field_00002_00001' direct represents '8' with '144'
c Var 'field_00002_00001' direct represents '9' with '145'
137 138 139 140 141 142 143 144 145 0
-137 146 0
-137 149 0
-138 147 0
-138 149 0
-139 148 0
-139 149 0
-140 146 0
-140 150 0
-141 147 0
-141 150 0
-142 148 0
-142 150 0
-143 146 0
-143 151 0
-144 147 0
-144 151 0
-145 148 0
-145 151 0
-146 -147 0
-146 -148 0
-147 -148 0
-149 -150 0
-149 -151 0
-150 -151 0
c Encoding variable: field_00002_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00002_00002' direct represents '1' with '152'
c Var 'field_00002_00002' direct represents '2' with '153'
c Var 'field_00002_00002' direct represents '3' with '154'
c Var 'field_00002_00002' direct represents '4' with '155'
c Var 'field_00002_00002' direct represents '5' with '156'
c Var 'field_00002_00002' direct represents '6' with '157'
c Var 'field_00002_00002' direct represents '7' with '158'
c Var 'field_00002_00002' direct represents '8' with '159'
c Var 'field_00002_00002' direct represents '9' with '160'
152 153 154 155 156 157 158 159 160 0
-152 161 0
-152 164 0
-153 162 0
-153 164 0
-154 163 0
-154 164 0
-155 161 0
-155 165 0
-156 162 0
-156 165 0
-157 163 0
-157 165 0
-158 161 0
-158 166 0
-159 162 0
-159 166 0
-160 163 0
-160 166 0
-161 -162 0
-161 -163 0
-162 -163 0
-164 -165 0
-164 -166 0
-165 -166 0
c Encoding variable: field_00002_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00002_00003' direct represents '1' with '167'
c Var 'field_00002_00003' direct represents '2' with '168'
c Var 'field_00002_00003' direct represents '3' with '169'
c Var 'field_00002_00003' direct represents '4' with '170'
c Var 'field_00002_00003' direct represents '5' with '171'
c Var 'field_00002_00003' direct represents '6' with '172'
c Var 'field_00002_00003' direct represents '7' with '173'
c Var 'field_00002_00003' direct represents '8' with '174'
c Var 'field_00002_00003' direct represents '9' with '175'
167 168 169 170 171 172 173 174 175 0
-167 176 0
-167 179 0
-168 177 0
-168 179 0
-169 178 0
-169 179 0
-170 176 0
-170 180 0
-171 177 0
-171 180 0
-172 178 0
-172 180 0
-173 176 0
-173 181 0
-174 177 0
-174 181 0
-175 178 0
-175 181 0
-176 -177 0
-176 -178 0
-177 -178 0
-179 -180 0
-179 -181 0
-180 -181 0
c Encoding variable: field_00002_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00002_00004' direct represents '1' with '182'
c Var 'field_00002_00004' direct represents '2' with '183'
c Var 'field_00002_00004' direct represents '3' with '184'
c Var 'field_00002_00004' direct represents '4' with '185'
c Var 'field_00002_00004' direct represents '5' with '186'
c Var 'field_00002_00004' direct represents '6' with '187'
c Var 'field_00002_00004' direct represents '7' with '188'
c Var 'field_00002_00004' direct represents '8' with '189'
c Var 'field_00002_00004' direct represents '9' with '190'
182 183 184 185 186 187 188 189 190 0
-182 191 0
-182 194 0
-183 192 0
-183 194 0
-184 193 0
-184 194 0
-185 191 0
-185 195 0
-186 192 0
-186 195 0
-187 193 0
-187 195 0
-188 191 0
-188 196 0
-189 192 0
-189 196 0
-190 193 0
-190 196 0
-191 -192 0
-191 -193 0
-192 -193 0
-194 -195 0
-194 -196 0
-195 -196 0
c Encoding variable: field_00002_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00002_00005' direct represents '1' with '197'
c Var 'field_00002_00005' direct represents '2' with '198'
c Var 'field_00002_00005' direct represents '3' with '199'
c Var 'field_00002_00005' direct represents '4' with '200'
c Var 'field_00002_00005' direct represents '5' with '201'
c Var 'field_00002_00005' direct represents '6' with '202'
c Var 'field_00002_00005' direct represents '7' with '203'
c Var 'field_00002_00005' direct represents '8' with '204'
c Var 'field_00002_00005' direct represents '9' with '205'
197 198 199 200 201 202 203 204 205 0
-197 206 0
-197 209 0
-198 207 0
-198 209 0
-199 208 0
-199 209 0
-200 206 0
-200 210 0
-201 207 0
-201 210 0
-202 208 0
-202 210 0
-203 206 0
-203 211 0
-204 207 0
-204 211 0
-205 208 0
-205 211 0
-206 -207 0
-206 -208 0
-207 -208 0
-209 -210 0
-209 -211 0
-210 -211 0
c Encoding variable: field_00002_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00002_00006' direct represents '1' with '212'
c Var 'field_00002_00006' direct represents '2' with '213'
c Var 'field_00002_00006' direct represents '3' with '214'
c Var 'field_00002_00006' direct represents '4' with '215'
c Var 'field_00002_00006' direct represents '5' with '216'
c Var 'field_00002_00006' direct represents '6' with '217'
c Var 'field_00002_00006' direct represents '7' with '218'
c Var 'field_00002_00006' direct represents '8' with '219'
c Var 'field_00002_00006' direct represents '9' with '220'
212 213 214 215 216 217 218 219 220 0
-212 221 0
-212 224 0
-213 222 0
-213 224 0
-214 223 0
-214 224 0
-215 221 0
-215 225 0
-216 222 0
-216 225 0
-217 223 0
-217 225 0
-218 221 0
-218 226 0
-219 222 0
-219 226 0
-220 223 0
-220 226 0
-221 -222 0
-221 -223 0
-222 -223 0
-224 -225 0
-224 -226 0
-225 -226 0
c Encoding variable: field_00002_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00002_00007' direct represents '1' with '227'
c Var 'field_00002_00007' direct represents '2' with '228'
c Var 'field_00002_00007' direct represents '3' with '229'
c Var 'field_00002_00007' direct represents '4' with '230'
c Var 'field_00002_00007' direct represents '5' with '231'
c Var 'field_00002_00007' direct represents '6' with '232'
c Var 'field_00002_00007' direct represents '7' with '233'
c Var 'field_00002_00007' direct represents '8' with '234'
c Var 'field_00002_00007' direct represents '9' with '235'
227 228 229 230 231 232 233 234 235 0
-227 236 0
-227 239 0
-228 237 0
-228 239 0
-229 238 0
-229 239 0
-230 236 0
-230 240 0
-231 237 0
-231 240 0
-232 238 0
-232 240 0
-233 236 0
-233 241 0
-234 237 0
-234 241 0
-235 238 0
-235 241 0
-236 -237 0
-236 -238 0
-237 -238 0
-239 -240 0
-239 -241 0
-240 -241 0
c Encoding variable: field_00002_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00002_00008' direct represents '1' with '242'
c Var 'field_00002_00008' direct represents '2' with '243'
c Var 'field_00002_00008' direct represents '3' with '244'
c Var 'field_00002_00008' direct represents '4' with '245'
c Var 'field_00002_00008' direct represents '5' with '246'
c Var 'field_00002_00008' direct represents '6' with '247'
c Var 'field_00002_00008' direct represents '7' with '248'
c Var 'field_00002_00008' direct represents '8' with '249'
c Var 'field_00002_00008' direct represents '9' with '250'
242 243 244 245 246 247 248 249 250 0
-242 251 0
-242 254 0
-243 252 0
-243 254 0
-244 253 0
-244 254 0
-245 251 0
-245 255 0
-246 252 0
-246 255 0
-247 253 0
-247 255 0
-248 251 0
-248 256 0
-249 252 0
-249 256 0
-250 253 0
-250 256 0
-251 -252 0
-251 -253 0
-252 -253 0
-254 -255 0
-254 -256 0
-255 -256 0
c Encoding variable: field_00002_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00002_00009' direct represents '1' with '257'
c Var 'field_00002_00009' direct represents '2' with '258'
c Var 'field_00002_00009' direct represents '3' with '259'
c Var 'field_00002_00009' direct represents '4' with '260'
c Var 'field_00002_00009' direct represents '5' with '261'
c Var 'field_00002_00009' direct represents '6' with '262'
c Var 'field_00002_00009' direct represents '7' with '263'
c Var 'field_00002_00009' direct represents '8' with '264'
c Var 'field_00002_00009' direct represents '9' with '265'
257 258 259 260 261 262 263 264 265 0
-257 266 0
-257 269 0
-258 267 0
-258 269 0
-259 268 0
-259 269 0
-260 266 0
-260 270 0
-261 267 0
-261 270 0
-262 268 0
-262 270 0
-263 266 0
-263 271 0
-264 267 0
-264 271 0
-265 268 0
-265 271 0
-266 -267 0
-266 -268 0
-267 -268 0
-269 -270 0
-269 -271 0
-270 -271 0
c Encoding variable: field_00003_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00003_00001' direct represents '1' with '272'
c Var 'field_00003_00001' direct represents '2' with '273'
c Var 'field_00003_00001' direct represents '3' with '274'
c Var 'field_00003_00001' direct represents '4' with '275'
c Var 'field_00003_00001' direct represents '5' with '276'
c Var 'field_00003_00001' direct represents '6' with '277'
c Var 'field_00003_00001' direct represents '7' with '278'
c Var 'field_00003_00001' direct represents '8' with '279'
c Var 'field_00003_00001' direct represents '9' with '280'
272 273 274 275 276 277 278 279 280 0
-272 281 0
-272 284 0
-273 282 0
-273 284 0
-274 283 0
-274 284 0
-275 281 0
-275 285 0
-276 282 0
-276 285 0
-277 283 0
-277 285 0
-278 281 0
-278 286 0
-279 282 0
-279 286 0
-280 283 0
-280 286 0
-281 -282 0
-281 -283 0
-282 -283 0
-284 -285 0
-284 -286 0
-285 -286 0
c Encoding variable: field_00003_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00003_00002' direct represents '1' with '287'
c Var 'field_00003_00002' direct represents '2' with '288'
c Var 'field_00003_00002' direct represents '3' with '289'
c Var 'field_00003_00002' direct represents '4' with '290'
c Var 'field_00003_00002' direct represents '5' with '291'
c Var 'field_00003_00002' direct represents '6' with '292'
c Var 'field_00003_00002' direct represents '7' with '293'
c Var 'field_00003_00002' direct represents '8' with '294'
c Var 'field_00003_00002' direct represents '9' with '295'
287 288 289 290 291 292 293 294 295 0
-287 296 0
-287 299 0
-288 297 0
-288 299 0
-289 298 0
-289 299 0
-290 296 0
-290 300 0
-291 297 0
-291 300 0
-292 298 0
-292 300 0
-293 296 0
-293 301 0
-294 297 0
-294 301 0
-295 298 0
-295 301 0
-296 -297 0
-296 -298 0
-297 -298 0
-299 -300 0
-299 -301 0
-300 -301 0
c Encoding variable: field_00003_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00003_00003' direct represents '1' with '302'
c Var 'field_00003_00003' direct represents '2' with '303'
c Var 'field_00003_00003' direct represents '3' with '304'
c Var 'field_00003_00003' direct represents '4' with '305'
c Var 'field_00003_00003' direct represents '5' with '306'
c Var 'field_00003_00003' direct represents '6' with '307'
c Var 'field_00003_00003' direct represents '7' with '308'
c Var 'field_00003_00003' direct represents '8' with '309'
c Var 'field_00003_00003' direct represents '9' with '310'
302 303 304 305 306 307 308 309 310 0
-302 311 0
-302 314 0
-303 312 0
-303 314 0
-304 313 0
-304 314 0
-305 311 0
-305 315 0
-306 312 0
-306 315 0
-307 313 0
-307 315 0
-308 311 0
-308 316 0
-309 312 0
-309 316 0
-310 313 0
-310 316 0
-311 -312 0
-311 -313 0
-312 -313 0
-314 -315 0
-314 -316 0
-315 -316 0
c Encoding variable: field_00003_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00003_00004' direct represents '1' with '317'
c Var 'field_00003_00004' direct represents '2' with '318'
c Var 'field_00003_00004' direct represents '3' with '319'
c Var 'field_00003_00004' direct represents '4' with '320'
c Var 'field_00003_00004' direct represents '5' with '321'
c Var 'field_00003_00004' direct represents '6' with '322'
c Var 'field_00003_00004' direct represents '7' with '323'
c Var 'field_00003_00004' direct represents '8' with '324'
c Var 'field_00003_00004' direct represents '9' with '325'
317 318 319 320 321 322 323 324 325 0
-317 326 0
-317 329 0
-318 327 0
-318 329 0
-319 328 0
-319 329 0
-320 326 0
-320 330 0
-321 327 0
-321 330 0
-322 328 0
-322 330 0
-323 326 0
-323 331 0
-324 327 0
-324 331 0
-325 328 0
-325 331 0
-326 -327 0
-326 -328 0
-327 -328 0
-329 -330 0
-329 -331 0
-330 -331 0
c Encoding variable: field_00003_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00003_00005' direct represents '1' with '332'
c Var 'field_00003_00005' direct represents '2' with '333'
c Var 'field_00003_00005' direct represents '3' with '334'
c Var 'field_00003_00005' direct represents '4' with '335'
c Var 'field_00003_00005' direct represents '5' with '336'
c Var 'field_00003_00005' direct represents '6' with '337'
c Var 'field_00003_00005' direct represents '7' with '338'
c Var 'field_00003_00005' direct represents '8' with '339'
c Var 'field_00003_00005' direct represents '9' with '340'
332 333 334 335 336 337 338 339 340 0
-332 341 0
-332 344 0
-333 342 0
-333 344 0
-334 343 0
-334 344 0
-335 341 0
-335 345 0
-336 342 0
-336 345 0
-337 343 0
-337 345 0
-338 341 0
-338 346 0
-339 342 0
-339 346 0
-340 343 0
-340 346 0
-341 -342 0
-341 -343 0
-342 -343 0
-344 -345 0
-344 -346 0
-345 -346 0
c Encoding variable: field_00003_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00003_00006' direct represents '1' with '347'
c Var 'field_00003_00006' direct represents '2' with '348'
c Var 'field_00003_00006' direct represents '3' with '349'
c Var 'field_00003_00006' direct represents '4' with '350'
c Var 'field_00003_00006' direct represents '5' with '351'
c Var 'field_00003_00006' direct represents '6' with '352'
c Var 'field_00003_00006' direct represents '7' with '353'
c Var 'field_00003_00006' direct represents '8' with '354'
c Var 'field_00003_00006' direct represents '9' with '355'
347 348 349 350 351 352 353 354 355 0
-347 356 0
-347 359 0
-348 357 0
-348 359 0
-349 358 0
-349 359 0
-350 356 0
-350 360 0
-351 357 0
-351 360 0
-352 358 0
-352 360 0
-353 356 0
-353 361 0
-354 357 0
-354 361 0
-355 358 0
-355 361 0
-356 -357 0
-356 -358 0
-357 -358 0
-359 -360 0
-359 -361 0
-360 -361 0
c Encoding variable: field_00003_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00003_00007' direct represents '1' with '362'
c Var 'field_00003_00007' direct represents '2' with '363'
c Var 'field_00003_00007' direct represents '3' with '364'
c Var 'field_00003_00007' direct represents '4' with '365'
c Var 'field_00003_00007' direct represents '5' with '366'
c Var 'field_00003_00007' direct represents '6' with '367'
c Var 'field_00003_00007' direct represents '7' with '368'
c Var 'field_00003_00007' direct represents '8' with '369'
c Var 'field_00003_00007' direct represents '9' with '370'
362 363 364 365 366 367 368 369 370 0
-362 371 0
-362 374 0
-363 372 0
-363 374 0
-364 373 0
-364 374 0
-365 371 0
-365 375 0
-366 372 0
-366 375 0
-367 373 0
-367 375 0
-368 371 0
-368 376 0
-369 372 0
-369 376 0
-370 373 0
-370 376 0
-371 -372 0
-371 -373 0
-372 -373 0
-374 -375 0
-374 -376 0
-375 -376 0
c Encoding variable: field_00003_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00003_00008' direct represents '1' with '377'
c Var 'field_00003_00008' direct represents '2' with '378'
c Var 'field_00003_00008' direct represents '3' with '379'
c Var 'field_00003_00008' direct represents '4' with '380'
c Var 'field_00003_00008' direct represents '5' with '381'
c Var 'field_00003_00008' direct represents '6' with '382'
c Var 'field_00003_00008' direct represents '7' with '383'
c Var 'field_00003_00008' direct represents '8' with '384'
c Var 'field_00003_00008' direct represents '9' with '385'
377 378 379 380 381 382 383 384 385 0
-377 386 0
-377 389 0
-378 387 0
-378 389 0
-379 388 0
-379 389 0
-380 386 0
-380 390 0
-381 387 0
-381 390 0
-382 388 0
-382 390 0
-383 386 0
-383 391 0
-384 387 0
-384 391 0
-385 388 0
-385 391 0
-386 -387 0
-386 -388 0
-387 -388 0
-389 -390 0
-389 -391 0
-390 -391 0
c Encoding variable: field_00003_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00003_00009' direct represents '1' with '392'
c Var 'field_00003_00009' direct represents '2' with '393'
c Var 'field_00003_00009' direct represents '3' with '394'
c Var 'field_00003_00009' direct represents '4' with '395'
c Var 'field_00003_00009' direct represents '5' with '396'
c Var 'field_00003_00009' direct represents '6' with '397'
c Var 'field_00003_00009' direct represents '7' with '398'
c Var 'field_00003_00009' direct represents '8' with '399'
c Var 'field_00003_00009' direct represents '9' with '400'
392 393 394 395 396 397 398 399 400 0
-392 401 0
-392 404 0
-393 402 0
-393 404 0
-394 403 0
-394 404 0
-395 401 0
-395 405 0
-396 402 0
-396 405 0
-397 403 0
-397 405 0
-398 401 0
-398 406 0
-399 402 0
-399 406 0
-400 403 0
-400 406 0
-401 -402 0
-401 -403 0
-402 -403 0
-404 -405 0
-404 -406 0
-405 -406 0
c Encoding variable: field_00004_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00004_00001' direct represents '1' with '407'
c Var 'field_00004_00001' direct represents '2' with '408'
c Var 'field_00004_00001' direct represents '3' with '409'
c Var 'field_00004_00001' direct represents '4' with '410'
c Var 'field_00004_00001' direct represents '5' with '411'
c Var 'field_00004_00001' direct represents '6' with '412'
c Var 'field_00004_00001' direct represents '7' with '413'
c Var 'field_00004_00001' direct represents '8' with '414'
c Var 'field_00004_00001' direct represents '9' with '415'
407 408 409 410 411 412 413 414 415 0
-407 416 0
-407 419 0
-408 417 0
-408 419 0
-409 418 0
-409 419 0
-410 416 0
-410 420 0
-411 417 0
-411 420 0
-412 418 0
-412 420 0
-413 416 0
-413 421 0
-414 417 0
-414 421 0
-415 418 0
-415 421 0
-416 -417 0
-416 -418 0
-417 -418 0
-419 -420 0
-419 -421 0
-420 -421 0
c Encoding variable: field_00004_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00004_00002' direct represents '1' with '422'
c Var 'field_00004_00002' direct represents '2' with '423'
c Var 'field_00004_00002' direct represents '3' with '424'
c Var 'field_00004_00002' direct represents '4' with '425'
c Var 'field_00004_00002' direct represents '5' with '426'
c Var 'field_00004_00002' direct represents '6' with '427'
c Var 'field_00004_00002' direct represents '7' with '428'
c Var 'field_00004_00002' direct represents '8' with '429'
c Var 'field_00004_00002' direct represents '9' with '430'
422 423 424 425 426 427 428 429 430 0
-422 431 0
-422 434 0
-423 432 0
-423 434 0
-424 433 0
-424 434 0
-425 431 0
-425 435 0
-426 432 0
-426 435 0
-427 433 0
-427 435 0
-428 431 0
-428 436 0
-429 432 0
-429 436 0
-430 433 0
-430 436 0
-431 -432 0
-431 -433 0
-432 -433 0
-434 -435 0
-434 -436 0
-435 -436 0
c Encoding variable: field_00004_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00004_00003' direct represents '1' with '437'
c Var 'field_00004_00003' direct represents '2' with '438'
c Var 'field_00004_00003' direct represents '3' with '439'
c Var 'field_00004_00003' direct represents '4' with '440'
c Var 'field_00004_00003' direct represents '5' with '441'
c Var 'field_00004_00003' direct represents '6' with '442'
c Var 'field_00004_00003' direct represents '7' with '443'
c Var 'field_00004_00003' direct represents '8' with '444'
c Var 'field_00004_00003' direct represents '9' with '445'
437 438 439 440 441 442 443 444 445 0
-437 446 0
-437 449 0
-438 447 0
-438 449 0
-439 448 0
-439 449 0
-440 446 0
-440 450 0
-441 447 0
-441 450 0
-442 448 0
-442 450 0
-443 446 0
-443 451 0
-444 447 0
-444 451 0
-445 448 0
-445 451 0
-446 -447 0
-446 -448 0
-447 -448 0
-449 -450 0
-449 -451 0
-450 -451 0
c Encoding variable: field_00004_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00004_00004' direct represents '1' with '452'
c Var 'field_00004_00004' direct represents '2' with '453'
c Var 'field_00004_00004' direct represents '3' with '454'
c Var 'field_00004_00004' direct represents '4' with '455'
c Var 'field_00004_00004' direct represents '5' with '456'
c Var 'field_00004_00004' direct represents '6' with '457'
c Var 'field_00004_00004' direct represents '7' with '458'
c Var 'field_00004_00004' direct represents '8' with '459'
c Var 'field_00004_00004' direct represents '9' with '460'
452 453 454 455 456 457 458 459 460 0
-452 461 0
-452 464 0
-453 462 0
-453 464 0
-454 463 0
-454 464 0
-455 461 0
-455 465 0
-456 462 0
-456 465 0
-457 463 0
-457 465 0
-458 461 0
-458 466 0
-459 462 0
-459 466 0
-460 463 0
-460 466 0
-461 -462 0
-461 -463 0
-462 -463 0
-464 -465 0
-464 -466 0
-465 -466 0
c Encoding variable: field_00004_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00004_00005' direct represents '1' with '467'
c Var 'field_00004_00005' direct represents '2' with '468'
c Var 'field_00004_00005' direct represents '3' with '469'
c Var 'field_00004_00005' direct represents '4' with '470'
c Var 'field_00004_00005' direct represents '5' with '471'
c Var 'field_00004_00005' direct represents '6' with '472'
c Var 'field_00004_00005' direct represents '7' with '473'
c Var 'field_00004_00005' direct represents '8' with '474'
c Var 'field_00004_00005' direct represents '9' with '475'
467 468 469 470 471 472 473 474 475 0
-467 476 0
-467 479 0
-468 477 0
-468 479 0
-469 478 0
-469 479 0
-470 476 0
-470 480 0
-471 477 0
-471 480 0
-472 478 0
-472 480 0
-473 476 0
-473 481 0
-474 477 0
-474 481 0
-475 478 0
-475 481 0
-476 -477 0
-476 -478 0
-477 -478 0
-479 -480 0
-479 -481 0
-480 -481 0
c Encoding variable: field_00004_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00004_00006' direct represents '1' with '482'
c Var 'field_00004_00006' direct represents '2' with '483'
c Var 'field_00004_00006' direct represents '3' with '484'
c Var 'field_00004_00006' direct represents '4' with '485'
c Var 'field_00004_00006' direct represents '5' with '486'
c Var 'field_00004_00006' direct represents '6' with '487'
c Var 'field_00004_00006' direct represents '7' with '488'
c Var 'field_00004_00006' direct represents '8' with '489'
c Var 'field_00004_00006' direct represents '9' with '490'
482 483 484 485 486 487 488 489 490 0
-482 491 0
-482 494 0
-483 492 0
-483 494 0
-484 493 0
-484 494 0
-485 491 0
-485 495 0
-486 492 0
-486 495 0
-487 493 0
-487 495 0
-488 491 0
-488 496 0
-489 492 0
-489 496 0
-490 493 0
-490 496 0
-491 -492 0
-491 -493 0
-492 -493 0
-494 -495 0
-494 -496 0
-495 -496 0
c Encoding variable: field_00004_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00004_00007' direct represents '1' with '497'
c Var 'field_00004_00007' direct represents '2' with '498'
c Var 'field_00004_00007' direct represents '3' with '499'
c Var 'field_00004_00007' direct represents '4' with '500'
c Var 'field_00004_00007' direct represents '5' with '501'
c Var 'field_00004_00007' direct represents '6' with '502'
c Var 'field_00004_00007' direct represents '7' with '503'
c Var 'field_00004_00007' direct represents '8' with '504'
c Var 'field_00004_00007' direct represents '9' with '505'
497 498 499 500 501 502 503 504 505 0
-497 506 0
-497 509 0
-498 507 0
-498 509 0
-499 508 0
-499 509 0
-500 506 0
-500 510 0
-501 507 0
-501 510 0
-502 508 0
-502 510 0
-503 506 0
-503 511 0
-504 507 0
-504 511 0
-505 508 0
-505 511 0
-506 -507 0
-506 -508 0
-507 -508 0
-509 -510 0
-509 -511 0
-510 -511 0
c Encoding variable: field_00004_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00004_00008' direct represents '1' with '512'
c Var 'field_00004_00008' direct represents '2' with '513'
c Var 'field_00004_00008' direct represents '3' with '514'
c Var 'field_00004_00008' direct represents '4' with '515'
c Var 'field_00004_00008' direct represents '5' with '516'
c Var 'field_00004_00008' direct represents '6' with '517'
c Var 'field_00004_00008' direct represents '7' with '518'
c Var 'field_00004_00008' direct represents '8' with '519'
c Var 'field_00004_00008' direct represents '9' with '520'
512 513 514 515 516 517 518 519 520 0
-512 521 0
-512 524 0
-513 522 0
-513 524 0
-514 523 0
-514 524 0
-515 521 0
-515 525 0
-516 522 0
-516 525 0
-517 523 0
-517 525 0
-518 521 0
-518 526 0
-519 522 0
-519 526 0
-520 523 0
-520 526 0
-521 -522 0
-521 -523 0
-522 -523 0
-524 -525 0
-524 -526 0
-525 -526 0
c Encoding variable: field_00004_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00004_00009' direct represents '1' with '527'
c Var 'field_00004_00009' direct represents '2' with '528'
c Var 'field_00004_00009' direct represents '3' with '529'
c Var 'field_00004_00009' direct represents '4' with '530'
c Var 'field_00004_00009' direct represents '5' with '531'
c Var 'field_00004_00009' direct represents '6' with '532'
c Var 'field_00004_00009' direct represents '7' with '533'
c Var 'field_00004_00009' direct represents '8' with '534'
c Var 'field_00004_00009' direct represents '9' with '535'
527 528 529 530 531 532 533 534 535 0
-527 536 0
-527 539 0
-528 537 0
-528 539 0
-529 538 0
-529 539 0
-530 536 0
-530 540 0
-531 537 0
-531 540 0
-532 538 0
-532 540 0
-533 536 0
-533 541 0
-534 537 0
-534 541 0
-535 538 0
-535 541 0
-536 -537 0
-536 -538 0
-537 -538 0
-539 -540 0
-539 -541 0
-540 -541 0
c Encoding variable: field_00005_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00005_00001' direct represents '1' with '542'
c Var 'field_00005_00001' direct represents '2' with '543'
c Var 'field_00005_00001' direct represents '3' with '544'
c Var 'field_00005_00001' direct represents '4' with '545'
c Var 'field_00005_00001' direct represents '5' with '546'
c Var 'field_00005_00001' direct represents '6' with '547'
c Var 'field_00005_00001' direct represents '7' with '548'
c Var 'field_00005_00001' direct represents '8' with '549'
c Var 'field_00005_00001' direct represents '9' with '550'
542 543 544 545 546 547 548 549 550 0
-542 551 0
-542 554 0
-543 552 0
-543 554 0
-544 553 0
-544 554 0
-545 551 0
-545 555 0
-546 552 0
-546 555 0
-547 553 0
-547 555 0
-548 551 0
-548 556 0
-549 552 0
-549 556 0
-550 553 0
-550 556 0
-551 -552 0
-551 -553 0
-552 -553 0
-554 -555 0
-554 -556 0
-555 -556 0
c Encoding variable: field_00005_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00005_00002' direct represents '1' with '557'
c Var 'field_00005_00002' direct represents '2' with '558'
c Var 'field_00005_00002' direct represents '3' with '559'
c Var 'field_00005_00002' direct represents '4' with '560'
c Var 'field_00005_00002' direct represents '5' with '561'
c Var 'field_00005_00002' direct represents '6' with '562'
c Var 'field_00005_00002' direct represents '7' with '563'
c Var 'field_00005_00002' direct represents '8' with '564'
c Var 'field_00005_00002' direct represents '9' with '565'
557 558 559 560 561 562 563 564 565 0
-557 566 0
-557 569 0
-558 567 0
-558 569 0
-559 568 0
-559 569 0
-560 566 0
-560 570 0
-561 567 0
-561 570 0
-562 568 0
-562 570 0
-563 566 0
-563 571 0
-564 567 0
-564 571 0
-565 568 0
-565 571 0
-566 -567 0
-566 -568 0
-567 -568 0
-569 -570 0
-569 -571 0
-570 -571 0
c Encoding variable: field_00005_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00005_00003' direct represents '1' with '572'
c Var 'field_00005_00003' direct represents '2' with '573'
c Var 'field_00005_00003' direct represents '3' with '574'
c Var 'field_00005_00003' direct represents '4' with '575'
c Var 'field_00005_00003' direct represents '5' with '576'
c Var 'field_00005_00003' direct represents '6' with '577'
c Var 'field_00005_00003' direct represents '7' with '578'
c Var 'field_00005_00003' direct represents '8' with '579'
c Var 'field_00005_00003' direct represents '9' with '580'
572 573 574 575 576 577 578 579 580 0
-572 581 0
-572 584 0
-573 582 0
-573 584 0
-574 583 0
-574 584 0
-575 581 0
-575 585 0
-576 582 0
-576 585 0
-577 583 0
-577 585 0
-578 581 0
-578 586 0
-579 582 0
-579 586 0
-580 583 0
-580 586 0
-581 -582 0
-581 -583 0
-582 -583 0
-584 -585 0
-584 -586 0
-585 -586 0
c Encoding variable: field_00005_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00005_00004' direct represents '1' with '587'
c Var 'field_00005_00004' direct represents '2' with '588'
c Var 'field_00005_00004' direct represents '3' with '589'
c Var 'field_00005_00004' direct represents '4' with '590'
c Var 'field_00005_00004' direct represents '5' with '591'
c Var 'field_00005_00004' direct represents '6' with '592'
c Var 'field_00005_00004' direct represents '7' with '593'
c Var 'field_00005_00004' direct represents '8' with '594'
c Var 'field_00005_00004' direct represents '9' with '595'
587 588 589 590 591 592 593 594 595 0
-587 596 0
-587 599 0
-588 597 0
-588 599 0
-589 598 0
-589 599 0
-590 596 0
-590 600 0
-591 597 0
-591 600 0
-592 598 0
-592 600 0
-593 596 0
-593 601 0
-594 597 0
-594 601 0
-595 598 0
-595 601 0
-596 -597 0
-596 -598 0
-597 -598 0
-599 -600 0
-599 -601 0
-600 -601 0
c Encoding variable: field_00005_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00005_00005' direct represents '1' with '602'
c Var 'field_00005_00005' direct represents '2' with '603'
c Var 'field_00005_00005' direct represents '3' with '604'
c Var 'field_00005_00005' direct represents '4' with '605'
c Var 'field_00005_00005' direct represents '5' with '606'
c Var 'field_00005_00005' direct represents '6' with '607'
c Var 'field_00005_00005' direct represents '7' with '608'
c Var 'field_00005_00005' direct represents '8' with '609'
c Var 'field_00005_00005' direct represents '9' with '610'
602 603 604 605 606 607 608 609 610 0
-602 611 0
-602 614 0
-603 612 0
-603 614 0
-604 613 0
-604 614 0
-605 611 0
-605 615 0
-606 612 0
-606 615 0
-607 613 0
-607 615 0
-608 611 0
-608 616 0
-609 612 0
-609 616 0
-610 613 0
-610 616 0
-611 -612 0
-611 -613 0
-612 -613 0
-614 -615 0
-614 -616 0
-615 -616 0
c Encoding variable: field_00005_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00005_00006' direct represents '1' with '617'
c Var 'field_00005_00006' direct represents '2' with '618'
c Var 'field_00005_00006' direct represents '3' with '619'
c Var 'field_00005_00006' direct represents '4' with '620'
c Var 'field_00005_00006' direct represents '5' with '621'
c Var 'field_00005_00006' direct represents '6' with '622'
c Var 'field_00005_00006' direct represents '7' with '623'
c Var 'field_00005_00006' direct represents '8' with '624'
c Var 'field_00005_00006' direct represents '9' with '625'
617 618 619 620 621 622 623 624 625 0
-617 626 0
-617 629 0
-618 627 0
-618 629 0
-619 628 0
-619 629 0
-620 626 0
-620 630 0
-621 627 0
-621 630 0
-622 628 0
-622 630 0
-623 626 0
-623 631 0
-624 627 0
-624 631 0
-625 628 0
-625 631 0
-626 -627 0
-626 -628 0
-627 -628 0
-629 -630 0
-629 -631 0
-630 -631 0
c Encoding variable: field_00005_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00005_00007' direct represents '1' with '632'
c Var 'field_00005_00007' direct represents '2' with '633'
c Var 'field_00005_00007' direct represents '3' with '634'
c Var 'field_00005_00007' direct represents '4' with '635'
c Var 'field_00005_00007' direct represents '5' with '636'
c Var 'field_00005_00007' direct represents '6' with '637'
c Var 'field_00005_00007' direct represents '7' with '638'
c Var 'field_00005_00007' direct represents '8' with '639'
c Var 'field_00005_00007' direct represents '9' with '640'
632 633 634 635 636 637 638 639 640 0
-632 641 0
-632 644 0
-633 642 0
-633 644 0
-634 643 0
-634 644 0
-635 641 0
-635 645 0
-636 642 0
-636 645 0
-637 643 0
-637 645 0
-638 641 0
-638 646 0
-639 642 0
-639 646 0
-640 643 0
-640 646 0
-641 -642 0
-641 -643 0
-642 -643 0
-644 -645 0
-644 -646 0
-645 -646 0
c Encoding variable: field_00005_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00005_00008' direct represents '1' with '647'
c Var 'field_00005_00008' direct represents '2' with '648'
c Var 'field_00005_00008' direct represents '3' with '649'
c Var 'field_00005_00008' direct represents '4' with '650'
c Var 'field_00005_00008' direct represents '5' with '651'
c Var 'field_00005_00008' direct represents '6' with '652'
c Var 'field_00005_00008' direct represents '7' with '653'
c Var 'field_00005_00008' direct represents '8' with '654'
c Var 'field_00005_00008' direct represents '9' with '655'
647 648 649 650 651 652 653 654 655 0
-647 656 0
-647 659 0
-648 657 0
-648 659 0
-649 658 0
-649 659 0
-650 656 0
-650 660 0
-651 657 0
-651 660 0
-652 658 0
-652 660 0
-653 656 0
-653 661 0
-654 657 0
-654 661 0
-655 658 0
-655 661 0
-656 -657 0
-656 -658 0
-657 -658 0
-659 -660 0
-659 -661 0
-660 -661 0
c Encoding variable: field_00005_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00005_00009' direct represents '1' with '662'
c Var 'field_00005_00009' direct represents '2' with '663'
c Var 'field_00005_00009' direct represents '3' with '664'
c Var 'field_00005_00009' direct represents '4' with '665'
c Var 'field_00005_00009' direct represents '5' with '666'
c Var 'field_00005_00009' direct represents '6' with '667'
c Var 'field_00005_00009' direct represents '7' with '668'
c Var 'field_00005_00009' direct represents '8' with '669'
c Var 'field_00005_00009' direct represents '9' with '670'
662 663 664 665 666 667 668 669 670 0
-662 671 0
-662 674 0
-663 672 0
-663 674 0
-664 673 0
-664 674 0
-665 671 0
-665 675 0
-666 672 0
-666 675 0
-667 673 0
-667 675 0
-668 671 0
-668 676 0
-669 672 0
-669 676 0
-670 673 0
-670 676 0
-671 -672 0
-671 -673 0
-672 -673 0
-674 -675 0
-674 -676 0
-675 -676 0
c Encoding variable: field_00006_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00006_00001' direct represents '1' with '677'
c Var 'field_00006_00001' direct represents '2' with '678'
c Var 'field_00006_00001' direct represents '3' with '679'
c Var 'field_00006_00001' direct represents '4' with '680'
c Var 'field_00006_00001' direct represents '5' with '681'
c Var 'field_00006_00001' direct represents '6' with '682'
c Var 'field_00006_00001' direct represents '7' with '683'
c Var 'field_00006_00001' direct represents '8' with '684'
c Var 'field_00006_00001' direct represents '9' with '685'
677 678 679 680 681 682 683 684 685 0
-677 686 0
-677 689 0
-678 687 0
-678 689 0
-679 688 0
-679 689 0
-680 686 0
-680 690 0
-681 687 0
-681 690 0
-682 688 0
-682 690 0
-683 686 0
-683 691 0
-684 687 0
-684 691 0
-685 688 0
-685 691 0
-686 -687 0
-686 -688 0
-687 -688 0
-689 -690 0
-689 -691 0
-690 -691 0
c Encoding variable: field_00006_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00006_00002' direct represents '1' with '692'
c Var 'field_00006_00002' direct represents '2' with '693'
c Var 'field_00006_00002' direct represents '3' with '694'
c Var 'field_00006_00002' direct represents '4' with '695'
c Var 'field_00006_00002' direct represents '5' with '696'
c Var 'field_00006_00002' direct represents '6' with '697'
c Var 'field_00006_00002' direct represents '7' with '698'
c Var 'field_00006_00002' direct represents '8' with '699'
c Var 'field_00006_00002' direct represents '9' with '700'
692 693 694 695 696 697 698 699 700 0
-692 701 0
-692 704 0
-693 702 0
-693 704 0
-694 703 0
-694 704 0
-695 701 0
-695 705 0
-696 702 0
-696 705 0
-697 703 0
-697 705 0
-698 701 0
-698 706 0
-699 702 0
-699 706 0
-700 703 0
-700 706 0
-701 -702 0
-701 -703 0
-702 -703 0
-704 -705 0
-704 -706 0
-705 -706 0
c Encoding variable: field_00006_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00006_00003' direct represents '1' with '707'
c Var 'field_00006_00003' direct represents '2' with '708'
c Var 'field_00006_00003' direct represents '3' with '709'
c Var 'field_00006_00003' direct represents '4' with '710'
c Var 'field_00006_00003' direct represents '5' with '711'
c Var 'field_00006_00003' direct represents '6' with '712'
c Var 'field_00006_00003' direct represents '7' with '713'
c Var 'field_00006_00003' direct represents '8' with '714'
c Var 'field_00006_00003' direct represents '9' with '715'
707 708 709 710 711 712 713 714 715 0
-707 716 0
-707 719 0
-708 717 0
-708 719 0
-709 718 0
-709 719 0
-710 716 0
-710 720 0
-711 717 0
-711 720 0
-712 718 0
-712 720 0
-713 716 0
-713 721 0
-714 717 0
-714 721 0
-715 718 0
-715 721 0
-716 -717 0
-716 -718 0
-717 -718 0
-719 -720 0
-719 -721 0
-720 -721 0
c Encoding variable: field_00006_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00006_00004' direct represents '1' with '722'
c Var 'field_00006_00004' direct represents '2' with '723'
c Var 'field_00006_00004' direct represents '3' with '724'
c Var 'field_00006_00004' direct represents '4' with '725'
c Var 'field_00006_00004' direct represents '5' with '726'
c Var 'field_00006_00004' direct represents '6' with '727'
c Var 'field_00006_00004' direct represents '7' with '728'
c Var 'field_00006_00004' direct represents '8' with '729'
c Var 'field_00006_00004' direct represents '9' with '730'
722 723 724 725 726 727 728 729 730 0
-722 731 0
-722 734 0
-723 732 0
-723 734 0
-724 733 0
-724 734 0
-725 731 0
-725 735 0
-726 732 0
-726 735 0
-727 733 0
-727 735 0
-728 731 0
-728 736 0
-729 732 0
-729 736 0
-730 733 0
-730 736 0
-731 -732 0
-731 -733 0
-732 -733 0
-734 -735 0
-734 -736 0
-735 -736 0
c Encoding variable: field_00006_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00006_00005' direct represents '1' with '737'
c Var 'field_00006_00005' direct represents '2' with '738'
c Var 'field_00006_00005' direct represents '3' with '739'
c Var 'field_00006_00005' direct represents '4' with '740'
c Var 'field_00006_00005' direct represents '5' with '741'
c Var 'field_00006_00005' direct represents '6' with '742'
c Var 'field_00006_00005' direct represents '7' with '743'
c Var 'field_00006_00005' direct represents '8' with '744'
c Var 'field_00006_00005' direct represents '9' with '745'
737 738 739 740 741 742 743 744 745 0
-737 746 0
-737 749 0
-738 747 0
-738 749 0
-739 748 0
-739 749 0
-740 746 0
-740 750 0
-741 747 0
-741 750 0
-742 748 0
-742 750 0
-743 746 0
-743 751 0
-744 747 0
-744 751 0
-745 748 0
-745 751 0
-746 -747 0
-746 -748 0
-747 -748 0
-749 -750 0
-749 -751 0
-750 -751 0
c Encoding variable: field_00006_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00006_00006' direct represents '1' with '752'
c Var 'field_00006_00006' direct represents '2' with '753'
c Var 'field_00006_00006' direct represents '3' with '754'
c Var 'field_00006_00006' direct represents '4' with '755'
c Var 'field_00006_00006' direct represents '5' with '756'
c Var 'field_00006_00006' direct represents '6' with '757'
c Var 'field_00006_00006' direct represents '7' with '758'
c Var 'field_00006_00006' direct represents '8' with '759'
c Var 'field_00006_00006' direct represents '9' with '760'
752 753 754 755 756 757 758 759 760 0
-752 761 0
-752 764 0
-753 762 0
-753 764 0
-754 763 0
-754 764 0
-755 761 0
-755 765 0
-756 762 0
-756 765 0
-757 763 0
-757 765 0
-758 761 0
-758 766 0
-759 762 0
-759 766 0
-760 763 0
-760 766 0
-761 -762 0
-761 -763 0
-762 -763 0
-764 -765 0
-764 -766 0
-765 -766 0
c Encoding variable: field_00006_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00006_00007' direct represents '1' with '767'
c Var 'field_00006_00007' direct represents '2' with '768'
c Var 'field_00006_00007' direct represents '3' with '769'
c Var 'field_00006_00007' direct represents '4' with '770'
c Var 'field_00006_00007' direct represents '5' with '771'
c Var 'field_00006_00007' direct represents '6' with '772'
c Var 'field_00006_00007' direct represents '7' with '773'
c Var 'field_00006_00007' direct represents '8' with '774'
c Var 'field_00006_00007' direct represents '9' with '775'
767 768 769 770 771 772 773 774 775 0
-767 776 0
-767 779 0
-768 777 0
-768 779 0
-769 778 0
-769 779 0
-770 776 0
-770 780 0
-771 777 0
-771 780 0
-772 778 0
-772 780 0
-773 776 0
-773 781 0
-774 777 0
-774 781 0
-775 778 0
-775 781 0
-776 -777 0
-776 -778 0
-777 -778 0
-779 -780 0
-779 -781 0
-780 -781 0
c Encoding variable: field_00006_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00006_00008' direct represents '1' with '782'
c Var 'field_00006_00008' direct represents '2' with '783'
c Var 'field_00006_00008' direct represents '3' with '784'
c Var 'field_00006_00008' direct represents '4' with '785'
c Var 'field_00006_00008' direct represents '5' with '786'
c Var 'field_00006_00008' direct represents '6' with '787'
c Var 'field_00006_00008' direct represents '7' with '788'
c Var 'field_00006_00008' direct represents '8' with '789'
c Var 'field_00006_00008' direct represents '9' with '790'
782 783 784 785 786 787 788 789 790 0
-782 791 0
-782 794 0
-783 792 0
-783 794 0
-784 793 0
-784 794 0
-785 791 0
-785 795 0
-786 792 0
-786 795 0
-787 793 0
-787 795 0
-788 791 0
-788 796 0
-789 792 0
-789 796 0
-790 793 0
-790 796 0
-791 -792 0
-791 -793 0
-792 -793 0
-794 -795 0
-794 -796 0
-795 -796 0
c Encoding variable: field_00006_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00006_00009' direct represents '1' with '797'
c Var 'field_00006_00009' direct represents '2' with '798'
c Var 'field_00006_00009' direct represents '3' with '799'
c Var 'field_00006_00009' direct represents '4' with '800'
c Var 'field_00006_00009' direct represents '5' with '801'
c Var 'field_00006_00009' direct represents '6' with '802'
c Var 'field_00006_00009' direct represents '7' with '803'
c Var 'field_00006_00009' direct represents '8' with '804'
c Var 'field_00006_00009' direct represents '9' with '805'
797 798 799 800 801 802 803 804 805 0
-797 806 0
-797 809 0
-798 807 0
-798 809 0
-799 808 0
-799 809 0
-800 806 0
-800 810 0
-801 807 0
-801 810 0
-802 808 0
-802 810 0
-803 806 0
-803 811 0
-804 807 0
-804 811 0
-805 808 0
-805 811 0
-806 -807 0
-806 -808 0
-807 -808 0
-809 -810 0
-809 -811 0
-810 -811 0
c Encoding variable: field_00007_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00007_00001' direct represents '1' with '812'
c Var 'field_00007_00001' direct represents '2' with '813'
c Var 'field_00007_00001' direct represents '3' with '814'
c Var 'field_00007_00001' direct represents '4' with '815'
c Var 'field_00007_00001' direct represents '5' with '816'
c Var 'field_00007_00001' direct represents '6' with '817'
c Var 'field_00007_00001' direct represents '7' with '818'
c Var 'field_00007_00001' direct represents '8' with '819'
c Var 'field_00007_00001' direct represents '9' with '820'
812 813 814 815 816 817 818 819 820 0
-812 821 0
-812 824 0
-813 822 0
-813 824 0
-814 823 0
-814 824 0
-815 821 0
-815 825 0
-816 822 0
-816 825 0
-817 823 0
-817 825 0
-818 821 0
-818 826 0
-819 822 0
-819 826 0
-820 823 0
-820 826 0
-821 -822 0
-821 -823 0
-822 -823 0
-824 -825 0
-824 -826 0
-825 -826 0
c Encoding variable: field_00007_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00007_00002' direct represents '1' with '827'
c Var 'field_00007_00002' direct represents '2' with '828'
c Var 'field_00007_00002' direct represents '3' with '829'
c Var 'field_00007_00002' direct represents '4' with '830'
c Var 'field_00007_00002' direct represents '5' with '831'
c Var 'field_00007_00002' direct represents '6' with '832'
c Var 'field_00007_00002' direct represents '7' with '833'
c Var 'field_00007_00002' direct represents '8' with '834'
c Var 'field_00007_00002' direct represents '9' with '835'
827 828 829 830 831 832 833 834 835 0
-827 836 0
-827 839 0
-828 837 0
-828 839 0
-829 838 0
-829 839 0
-830 836 0
-830 840 0
-831 837 0
-831 840 0
-832 838 0
-832 840 0
-833 836 0
-833 841 0
-834 837 0
-834 841 0
-835 838 0
-835 841 0
-836 -837 0
-836 -838 0
-837 -838 0
-839 -840 0
-839 -841 0
-840 -841 0
c Encoding variable: field_00007_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00007_00003' direct represents '1' with '842'
c Var 'field_00007_00003' direct represents '2' with '843'
c Var 'field_00007_00003' direct represents '3' with '844'
c Var 'field_00007_00003' direct represents '4' with '845'
c Var 'field_00007_00003' direct represents '5' with '846'
c Var 'field_00007_00003' direct represents '6' with '847'
c Var 'field_00007_00003' direct represents '7' with '848'
c Var 'field_00007_00003' direct represents '8' with '849'
c Var 'field_00007_00003' direct represents '9' with '850'
842 843 844 845 846 847 848 849 850 0
-842 851 0
-842 854 0
-843 852 0
-843 854 0
-844 853 0
-844 854 0
-845 851 0
-845 855 0
-846 852 0
-846 855 0
-847 853 0
-847 855 0
-848 851 0
-848 856 0
-849 852 0
-849 856 0
-850 853 0
-850 856 0
-851 -852 0
-851 -853 0
-852 -853 0
-854 -855 0
-854 -856 0
-855 -856 0
c Encoding variable: field_00007_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00007_00004' direct represents '1' with '857'
c Var 'field_00007_00004' direct represents '2' with '858'
c Var 'field_00007_00004' direct represents '3' with '859'
c Var 'field_00007_00004' direct represents '4' with '860'
c Var 'field_00007_00004' direct represents '5' with '861'
c Var 'field_00007_00004' direct represents '6' with '862'
c Var 'field_00007_00004' direct represents '7' with '863'
c Var 'field_00007_00004' direct represents '8' with '864'
c Var 'field_00007_00004' direct represents '9' with '865'
857 858 859 860 861 862 863 864 865 0
-857 866 0
-857 869 0
-858 867 0
-858 869 0
-859 868 0
-859 869 0
-860 866 0
-860 870 0
-861 867 0
-861 870 0
-862 868 0
-862 870 0
-863 866 0
-863 871 0
-864 867 0
-864 871 0
-865 868 0
-865 871 0
-866 -867 0
-866 -868 0
-867 -868 0
-869 -870 0
-869 -871 0
-870 -871 0
c Encoding variable: field_00007_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00007_00005' direct represents '1' with '872'
c Var 'field_00007_00005' direct represents '2' with '873'
c Var 'field_00007_00005' direct represents '3' with '874'
c Var 'field_00007_00005' direct represents '4' with '875'
c Var 'field_00007_00005' direct represents '5' with '876'
c Var 'field_00007_00005' direct represents '6' with '877'
c Var 'field_00007_00005' direct represents '7' with '878'
c Var 'field_00007_00005' direct represents '8' with '879'
c Var 'field_00007_00005' direct represents '9' with '880'
872 873 874 875 876 877 878 879 880 0
-872 881 0
-872 884 0
-873 882 0
-873 884 0
-874 883 0
-874 884 0
-875 881 0
-875 885 0
-876 882 0
-876 885 0
-877 883 0
-877 885 0
-878 881 0
-878 886 0
-879 882 0
-879 886 0
-880 883 0
-880 886 0
-881 -882 0
-881 -883 0
-882 -883 0
-884 -885 0
-884 -886 0
-885 -886 0
c Encoding variable: field_00007_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00007_00006' direct represents '1' with '887'
c Var 'field_00007_00006' direct represents '2' with '888'
c Var 'field_00007_00006' direct represents '3' with '889'
c Var 'field_00007_00006' direct represents '4' with '890'
c Var 'field_00007_00006' direct represents '5' with '891'
c Var 'field_00007_00006' direct represents '6' with '892'
c Var 'field_00007_00006' direct represents '7' with '893'
c Var 'field_00007_00006' direct represents '8' with '894'
c Var 'field_00007_00006' direct represents '9' with '895'
887 888 889 890 891 892 893 894 895 0
-887 896 0
-887 899 0
-888 897 0
-888 899 0
-889 898 0
-889 899 0
-890 896 0
-890 900 0
-891 897 0
-891 900 0
-892 898 0
-892 900 0
-893 896 0
-893 901 0
-894 897 0
-894 901 0
-895 898 0
-895 901 0
-896 -897 0
-896 -898 0
-897 -898 0
-899 -900 0
-899 -901 0
-900 -901 0
c Encoding variable: field_00007_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00007_00007' direct represents '1' with '902'
c Var 'field_00007_00007' direct represents '2' with '903'
c Var 'field_00007_00007' direct represents '3' with '904'
c Var 'field_00007_00007' direct represents '4' with '905'
c Var 'field_00007_00007' direct represents '5' with '906'
c Var 'field_00007_00007' direct represents '6' with '907'
c Var 'field_00007_00007' direct represents '7' with '908'
c Var 'field_00007_00007' direct represents '8' with '909'
c Var 'field_00007_00007' direct represents '9' with '910'
902 903 904 905 906 907 908 909 910 0
-902 911 0
-902 914 0
-903 912 0
-903 914 0
-904 913 0
-904 914 0
-905 911 0
-905 915 0
-906 912 0
-906 915 0
-907 913 0
-907 915 0
-908 911 0
-908 916 0
-909 912 0
-909 916 0
-910 913 0
-910 916 0
-911 -912 0
-911 -913 0
-912 -913 0
-914 -915 0
-914 -916 0
-915 -916 0
c Encoding variable: field_00007_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00007_00008' direct represents '1' with '917'
c Var 'field_00007_00008' direct represents '2' with '918'
c Var 'field_00007_00008' direct represents '3' with '919'
c Var 'field_00007_00008' direct represents '4' with '920'
c Var 'field_00007_00008' direct represents '5' with '921'
c Var 'field_00007_00008' direct represents '6' with '922'
c Var 'field_00007_00008' direct represents '7' with '923'
c Var 'field_00007_00008' direct represents '8' with '924'
c Var 'field_00007_00008' direct represents '9' with '925'
917 918 919 920 921 922 923 924 925 0
-917 926 0
-917 929 0
-918 927 0
-918 929 0
-919 928 0
-919 929 0
-920 926 0
-920 930 0
-921 927 0
-921 930 0
-922 928 0
-922 930 0
-923 926 0
-923 931 0
-924 927 0
-924 931 0
-925 928 0
-925 931 0
-926 -927 0
-926 -928 0
-927 -928 0
-929 -930 0
-929 -931 0
-930 -931 0
c Encoding variable: field_00007_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00007_00009' direct represents '1' with '932'
c Var 'field_00007_00009' direct represents '2' with '933'
c Var 'field_00007_00009' direct represents '3' with '934'
c Var 'field_00007_00009' direct represents '4' with '935'
c Var 'field_00007_00009' direct represents '5' with '936'
c Var 'field_00007_00009' direct represents '6' with '937'
c Var 'field_00007_00009' direct represents '7' with '938'
c Var 'field_00007_00009' direct represents '8' with '939'
c Var 'field_00007_00009' direct represents '9' with '940'
932 933 934 935 936 937 938 939 940 0
-932 941 0
-932 944 0
-933 942 0
-933 944 0
-934 943 0
-934 944 0
-935 941 0
-935 945 0
-936 942 0
-936 945 0
-937 943 0
-937 945 0
-938 941 0
-938 946 0
-939 942 0
-939 946 0
-940 943 0
-940 946 0
-941 -942 0
-941 -943 0
-942 -943 0
-944 -945 0
-944 -946 0
-945 -946 0
c Encoding variable: field_00008_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00008_00001' direct represents '1' with '947'
c Var 'field_00008_00001' direct represents '2' with '948'
c Var 'field_00008_00001' direct represents '3' with '949'
c Var 'field_00008_00001' direct represents '4' with '950'
c Var 'field_00008_00001' direct represents '5' with '951'
c Var 'field_00008_00001' direct represents '6' with '952'
c Var 'field_00008_00001' direct represents '7' with '953'
c Var 'field_00008_00001' direct represents '8' with '954'
c Var 'field_00008_00001' direct represents '9' with '955'
947 948 949 950 951 952 953 954 955 0
-947 956 0
-947 959 0
-948 957 0
-948 959 0
-949 958 0
-949 959 0
-950 956 0
-950 960 0
-951 957 0
-951 960 0
-952 958 0
-952 960 0
-953 956 0
-953 961 0
-954 957 0
-954 961 0
-955 958 0
-955 961 0
-956 -957 0
-956 -958 0
-957 -958 0
-959 -960 0
-959 -961 0
-960 -961 0
c Encoding variable: field_00008_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00008_00002' direct represents '1' with '962'
c Var 'field_00008_00002' direct represents '2' with '963'
c Var 'field_00008_00002' direct represents '3' with '964'
c Var 'field_00008_00002' direct represents '4' with '965'
c Var 'field_00008_00002' direct represents '5' with '966'
c Var 'field_00008_00002' direct represents '6' with '967'
c Var 'field_00008_00002' direct represents '7' with '968'
c Var 'field_00008_00002' direct represents '8' with '969'
c Var 'field_00008_00002' direct represents '9' with '970'
962 963 964 965 966 967 968 969 970 0
-962 971 0
-962 974 0
-963 972 0
-963 974 0
-964 973 0
-964 974 0
-965 971 0
-965 975 0
-966 972 0
-966 975 0
-967 973 0
-967 975 0
-968 971 0
-968 976 0
-969 972 0
-969 976 0
-970 973 0
-970 976 0
-971 -972 0
-971 -973 0
-972 -973 0
-974 -975 0
-974 -976 0
-975 -976 0
c Encoding variable: field_00008_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00008_00003' direct represents '1' with '977'
c Var 'field_00008_00003' direct represents '2' with '978'
c Var 'field_00008_00003' direct represents '3' with '979'
c Var 'field_00008_00003' direct represents '4' with '980'
c Var 'field_00008_00003' direct represents '5' with '981'
c Var 'field_00008_00003' direct represents '6' with '982'
c Var 'field_00008_00003' direct represents '7' with '983'
c Var 'field_00008_00003' direct represents '8' with '984'
c Var 'field_00008_00003' direct represents '9' with '985'
977 978 979 980 981 982 983 984 985 0
-977 986 0
-977 989 0
-978 987 0
-978 989 0
-979 988 0
-979 989 0
-980 986 0
-980 990 0
-981 987 0
-981 990 0
-982 988 0
-982 990 0
-983 986 0
-983 991 0
-984 987 0
-984 991 0
-985 988 0
-985 991 0
-986 -987 0
-986 -988 0
-987 -988 0
-989 -990 0
-989 -991 0
-990 -991 0
c Encoding variable: field_00008_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00008_00004' direct represents '1' with '992'
c Var 'field_00008_00004' direct represents '2' with '993'
c Var 'field_00008_00004' direct represents '3' with '994'
c Var 'field_00008_00004' direct represents '4' with '995'
c Var 'field_00008_00004' direct represents '5' with '996'
c Var 'field_00008_00004' direct represents '6' with '997'
c Var 'field_00008_00004' direct represents '7' with '998'
c Var 'field_00008_00004' direct represents '8' with '999'
c Var 'field_00008_00004' direct represents '9' with '1000'
992 993 994 995 996 997 998 999 1000 0
-992 1001 0
-992 1004 0
-993 1002 0
-993 1004 0
-994 1003 0
-994 1004 0
-995 1001 0
-995 1005 0
-996 1002 0
-996 1005 0
-997 1003 0
-997 1005 0
-998 1001 0
-998 1006 0
-999 1002 0
-999 1006 0
-1000 1003 0
-1000 1006 0
-1001 -1002 0
-1001 -1003 0
-1002 -1003 0
-1004 -1005 0
-1004 -1006 0
-1005 -1006 0
c Encoding variable: field_00008_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00008_00005' direct represents '1' with '1007'
c Var 'field_00008_00005' direct represents '2' with '1008'
c Var 'field_00008_00005' direct represents '3' with '1009'
c Var 'field_00008_00005' direct represents '4' with '1010'
c Var 'field_00008_00005' direct represents '5' with '1011'
c Var 'field_00008_00005' direct represents '6' with '1012'
c Var 'field_00008_00005' direct represents '7' with '1013'
c Var 'field_00008_00005' direct represents '8' with '1014'
c Var 'field_00008_00005' direct represents '9' with '1015'
1007 1008 1009 1010 1011 1012 1013 1014 1015 0
-1007 1016 0
-1007 1019 0
-1008 1017 0
-1008 1019 0
-1009 1018 0
-1009 1019 0
-1010 1016 0
-1010 1020 0
-1011 1017 0
-1011 1020 0
-1012 1018 0
-1012 1020 0
-1013 1016 0
-1013 1021 0
-1014 1017 0
-1014 1021 0
-1015 1018 0
-1015 1021 0
-1016 -1017 0
-1016 -1018 0
-1017 -1018 0
-1019 -1020 0
-1019 -1021 0
-1020 -1021 0
c Encoding variable: field_00008_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00008_00006' direct represents '1' with '1022'
c Var 'field_00008_00006' direct represents '2' with '1023'
c Var 'field_00008_00006' direct represents '3' with '1024'
c Var 'field_00008_00006' direct represents '4' with '1025'
c Var 'field_00008_00006' direct represents '5' with '1026'
c Var 'field_00008_00006' direct represents '6' with '1027'
c Var 'field_00008_00006' direct represents '7' with '1028'
c Var 'field_00008_00006' direct represents '8' with '1029'
c Var 'field_00008_00006' direct represents '9' with '1030'
1022 1023 1024 1025 1026 1027 1028 1029 1030 0
-1022 1031 0
-1022 1034 0
-1023 1032 0
-1023 1034 0
-1024 1033 0
-1024 1034 0
-1025 1031 0
-1025 1035 0
-1026 1032 0
-1026 1035 0
-1027 1033 0
-1027 1035 0
-1028 1031 0
-1028 1036 0
-1029 1032 0
-1029 1036 0
-1030 1033 0
-1030 1036 0
-1031 -1032 0
-1031 -1033 0
-1032 -1033 0
-1034 -1035 0
-1034 -1036 0
-1035 -1036 0
c Encoding variable: field_00008_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00008_00007' direct represents '1' with '1037'
c Var 'field_00008_00007' direct represents '2' with '1038'
c Var 'field_00008_00007' direct represents '3' with '1039'
c Var 'field_00008_00007' direct represents '4' with '1040'
c Var 'field_00008_00007' direct represents '5' with '1041'
c Var 'field_00008_00007' direct represents '6' with '1042'
c Var 'field_00008_00007' direct represents '7' with '1043'
c Var 'field_00008_00007' direct represents '8' with '1044'
c Var 'field_00008_00007' direct represents '9' with '1045'
1037 1038 1039 1040 1041 1042 1043 1044 1045 0
-1037 1046 0
-1037 1049 0
-1038 1047 0
-1038 1049 0
-1039 1048 0
-1039 1049 0
-1040 1046 0
-1040 1050 0
-1041 1047 0
-1041 1050 0
-1042 1048 0
-1042 1050 0
-1043 1046 0
-1043 1051 0
-1044 1047 0
-1044 1051 0
-1045 1048 0
-1045 1051 0
-1046 -1047 0
-1046 -1048 0
-1047 -1048 0
-1049 -1050 0
-1049 -1051 0
-1050 -1051 0
c Encoding variable: field_00008_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00008_00008' direct represents '1' with '1052'
c Var 'field_00008_00008' direct represents '2' with '1053'
c Var 'field_00008_00008' direct represents '3' with '1054'
c Var 'field_00008_00008' direct represents '4' with '1055'
c Var 'field_00008_00008' direct represents '5' with '1056'
c Var 'field_00008_00008' direct represents '6' with '1057'
c Var 'field_00008_00008' direct represents '7' with '1058'
c Var 'field_00008_00008' direct represents '8' with '1059'
c Var 'field_00008_00008' direct represents '9' with '1060'
1052 1053 1054 1055 1056 1057 1058 1059 1060 0
-1052 1061 0
-1052 1064 0
-1053 1062 0
-1053 1064 0
-1054 1063 0
-1054 1064 0
-1055 1061 0
-1055 1065 0
-1056 1062 0
-1056 1065 0
-1057 1063 0
-1057 1065 0
-1058 1061 0
-1058 1066 0
-1059 1062 0
-1059 1066 0
-1060 1063 0
-1060 1066 0
-1061 -1062 0
-1061 -1063 0
-1062 -1063 0
-1064 -1065 0
-1064 -1066 0
-1065 -1066 0
c Encoding variable: field_00008_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00008_00009' direct represents '1' with '1067'
c Var 'field_00008_00009' direct represents '2' with '1068'
c Var 'field_00008_00009' direct represents '3' with '1069'
c Var 'field_00008_00009' direct represents '4' with '1070'
c Var 'field_00008_00009' direct represents '5' with '1071'
c Var 'field_00008_00009' direct represents '6' with '1072'
c Var 'field_00008_00009' direct represents '7' with '1073'
c Var 'field_00008_00009' direct represents '8' with '1074'
c Var 'field_00008_00009' direct represents '9' with '1075'
1067 1068 1069 1070 1071 1072 1073 1074 1075 0
-1067 1076 0
-1067 1079 0
-1068 1077 0
-1068 1079 0
-1069 1078 0
-1069 1079 0
-1070 1076 0
-1070 1080 0
-1071 1077 0
-1071 1080 0
-1072 1078 0
-1072 1080 0
-1073 1076 0
-1073 1081 0
-1074 1077 0
-1074 1081 0
-1075 1078 0
-1075 1081 0
-1076 -1077 0
-1076 -1078 0
-1077 -1078 0
-1079 -1080 0
-1079 -1081 0
-1080 -1081 0
c Encoding variable: field_00009_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00009_00001' direct represents '1' with '1082'
c Var 'field_00009_00001' direct represents '2' with '1083'
c Var 'field_00009_00001' direct represents '3' with '1084'
c Var 'field_00009_00001' direct represents '4' with '1085'
c Var 'field_00009_00001' direct represents '5' with '1086'
c Var 'field_00009_00001' direct represents '6' with '1087'
c Var 'field_00009_00001' direct represents '7' with '1088'
c Var 'field_00009_00001' direct represents '8' with '1089'
c Var 'field_00009_00001' direct represents '9' with '1090'
1082 1083 1084 1085 1086 1087 1088 1089 1090 0
-1082 1091 0
-1082 1094 0
-1083 1092 0
-1083 1094 0
-1084 1093 0
-1084 1094 0
-1085 1091 0
-1085 1095 0
-1086 1092 0
-1086 1095 0
-1087 1093 0
-1087 1095 0
-1088 1091 0
-1088 1096 0
-1089 1092 0
-1089 1096 0
-1090 1093 0
-1090 1096 0
-1091 -1092 0
-1091 -1093 0
-1092 -1093 0
-1094 -1095 0
-1094 -1096 0
-1095 -1096 0
c Encoding variable: field_00009_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00009_00002' direct represents '1' with '1097'
c Var 'field_00009_00002' direct represents '2' with '1098'
c Var 'field_00009_00002' direct represents '3' with '1099'
c Var 'field_00009_00002' direct represents '4' with '1100'
c Var 'field_00009_00002' direct represents '5' with '1101'
c Var 'field_00009_00002' direct represents '6' with '1102'
c Var 'field_00009_00002' direct represents '7' with '1103'
c Var 'field_00009_00002' direct represents '8' with '1104'
c Var 'field_00009_00002' direct represents '9' with '1105'
1097 1098 1099 1100 1101 1102 1103 1104 1105 0
-1097 1106 0
-1097 1109 0
-1098 1107 0
-1098 1109 0
-1099 1108 0
-1099 1109 0
-1100 1106 0
-1100 1110 0
-1101 1107 0
-1101 1110 0
-1102 1108 0
-1102 1110 0
-1103 1106 0
-1103 1111 0
-1104 1107 0
-1104 1111 0
-1105 1108 0
-1105 1111 0
-1106 -1107 0
-1106 -1108 0
-1107 -1108 0
-1109 -1110 0
-1109 -1111 0
-1110 -1111 0
c Encoding variable: field_00009_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00009_00003' direct represents '1' with '1112'
c Var 'field_00009_00003' direct represents '2' with '1113'
c Var 'field_00009_00003' direct represents '3' with '1114'
c Var 'field_00009_00003' direct represents '4' with '1115'
c Var 'field_00009_00003' direct represents '5' with '1116'
c Var 'field_00009_00003' direct represents '6' with '1117'
c Var 'field_00009_00003' direct represents '7' with '1118'
c Var 'field_00009_00003' direct represents '8' with '1119'
c Var 'field_00009_00003' direct represents '9' with '1120'
1112 1113 1114 1115 1116 1117 1118 1119 1120 0
-1112 1121 0
-1112 1124 0
-1113 1122 0
-1113 1124 0
-1114 1123 0
-1114 1124 0
-1115 1121 0
-1115 1125 0
-1116 1122 0
-1116 1125 0
-1117 1123 0
-1117 1125 0
-1118 1121 0
-1118 1126 0
-1119 1122 0
-1119 1126 0
-1120 1123 0
-1120 1126 0
-1121 -1122 0
-1121 -1123 0
-1122 -1123 0
-1124 -1125 0
-1124 -1126 0
-1125 -1126 0
c Encoding variable: field_00009_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00009_00004' direct represents '1' with '1127'
c Var 'field_00009_00004' direct represents '2' with '1128'
c Var 'field_00009_00004' direct represents '3' with '1129'
c Var 'field_00009_00004' direct represents '4' with '1130'
c Var 'field_00009_00004' direct represents '5' with '1131'
c Var 'field_00009_00004' direct represents '6' with '1132'
c Var 'field_00009_00004' direct represents '7' with '1133'
c Var 'field_00009_00004' direct represents '8' with '1134'
c Var 'field_00009_00004' direct represents '9' with '1135'
1127 1128 1129 1130 1131 1132 1133 1134 1135 0
-1127 1136 0
-1127 1139 0
-1128 1137 0
-1128 1139 0
-1129 1138 0
-1129 1139 0
-1130 1136 0
-1130 1140 0
-1131 1137 0
-1131 1140 0
-1132 1138 0
-1132 1140 0
-1133 1136 0
-1133 1141 0
-1134 1137 0
-1134 1141 0
-1135 1138 0
-1135 1141 0
-1136 -1137 0
-1136 -1138 0
-1137 -1138 0
-1139 -1140 0
-1139 -1141 0
-1140 -1141 0
c Encoding variable: field_00009_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00009_00005' direct represents '1' with '1142'
c Var 'field_00009_00005' direct represents '2' with '1143'
c Var 'field_00009_00005' direct represents '3' with '1144'
c Var 'field_00009_00005' direct represents '4' with '1145'
c Var 'field_00009_00005' direct represents '5' with '1146'
c Var 'field_00009_00005' direct represents '6' with '1147'
c Var 'field_00009_00005' direct represents '7' with '1148'
c Var 'field_00009_00005' direct represents '8' with '1149'
c Var 'field_00009_00005' direct represents '9' with '1150'
1142 1143 1144 1145 1146 1147 1148 1149 1150 0
-1142 1151 0
-1142 1154 0
-1143 1152 0
-1143 1154 0
-1144 1153 0
-1144 1154 0
-1145 1151 0
-1145 1155 0
-1146 1152 0
-1146 1155 0
-1147 1153 0
-1147 1155 0
-1148 1151 0
-1148 1156 0
-1149 1152 0
-1149 1156 0
-1150 1153 0
-1150 1156 0
-1151 -1152 0
-1151 -1153 0
-1152 -1153 0
-1154 -1155 0
-1154 -1156 0
-1155 -1156 0
c Encoding variable: field_00009_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00009_00006' direct represents '1' with '1157'
c Var 'field_00009_00006' direct represents '2' with '1158'
c Var 'field_00009_00006' direct represents '3' with '1159'
c Var 'field_00009_00006' direct represents '4' with '1160'
c Var 'field_00009_00006' direct represents '5' with '1161'
c Var 'field_00009_00006' direct represents '6' with '1162'
c Var 'field_00009_00006' direct represents '7' with '1163'
c Var 'field_00009_00006' direct represents '8' with '1164'
c Var 'field_00009_00006' direct represents '9' with '1165'
1157 1158 1159 1160 1161 1162 1163 1164 1165 0
-1157 1166 0
-1157 1169 0
-1158 1167 0
-1158 1169 0
-1159 1168 0
-1159 1169 0
-1160 1166 0
-1160 1170 0
-1161 1167 0
-1161 1170 0
-1162 1168 0
-1162 1170 0
-1163 1166 0
-1163 1171 0
-1164 1167 0
-1164 1171 0
-1165 1168 0
-1165 1171 0
-1166 -1167 0
-1166 -1168 0
-1167 -1168 0
-1169 -1170 0
-1169 -1171 0
-1170 -1171 0
c Encoding variable: field_00009_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00009_00007' direct represents '1' with '1172'
c Var 'field_00009_00007' direct represents '2' with '1173'
c Var 'field_00009_00007' direct represents '3' with '1174'
c Var 'field_00009_00007' direct represents '4' with '1175'
c Var 'field_00009_00007' direct represents '5' with '1176'
c Var 'field_00009_00007' direct represents '6' with '1177'
c Var 'field_00009_00007' direct represents '7' with '1178'
c Var 'field_00009_00007' direct represents '8' with '1179'
c Var 'field_00009_00007' direct represents '9' with '1180'
1172 1173 1174 1175 1176 1177 1178 1179 1180 0
-1172 1181 0
-1172 1184 0
-1173 1182 0
-1173 1184 0
-1174 1183 0
-1174 1184 0
-1175 1181 0
-1175 1185 0
-1176 1182 0
-1176 1185 0
-1177 1183 0
-1177 1185 0
-1178 1181 0
-1178 1186 0
-1179 1182 0
-1179 1186 0
-1180 1183 0
-1180 1186 0
-1181 -1182 0
-1181 -1183 0
-1182 -1183 0
-1184 -1185 0
-1184 -1186 0
-1185 -1186 0
c Encoding variable: field_00009_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00009_00008' direct represents '1' with '1187'
c Var 'field_00009_00008' direct represents '2' with '1188'
c Var 'field_00009_00008' direct represents '3' with '1189'
c Var 'field_00009_00008' direct represents '4' with '1190'
c Var 'field_00009_00008' direct represents '5' with '1191'
c Var 'field_00009_00008' direct represents '6' with '1192'
c Var 'field_00009_00008' direct represents '7' with '1193'
c Var 'field_00009_00008' direct represents '8' with '1194'
c Var 'field_00009_00008' direct represents '9' with '1195'
1187 1188 1189 1190 1191 1192 1193 1194 1195 0
-1187 1196 0
-1187 1199 0
-1188 1197 0
-1188 1199 0
-1189 1198 0
-1189 1199 0
-1190 1196 0
-1190 1200 0
-1191 1197 0
-1191 1200 0
-1192 1198 0
-1192 1200 0
-1193 1196 0
-1193 1201 0
-1194 1197 0
-1194 1201 0
-1195 1198 0
-1195 1201 0
-1196 -1197 0
-1196 -1198 0
-1197 -1198 0
-1199 -1200 0
-1199 -1201 0
-1200 -1201 0
c Encoding variable: field_00009_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'field_00009_00009' direct represents '1' with '1202'
c Var 'field_00009_00009' direct represents '2' with '1203'
c Var 'field_00009_00009' direct represents '3' with '1204'
c Var 'field_00009_00009' direct represents '4' with '1205'
c Var 'field_00009_00009' direct represents '5' with '1206'
c Var 'field_00009_00009' direct represents '6' with '1207'
c Var 'field_00009_00009' direct represents '7' with '1208'
c Var 'field_00009_00009' direct represents '8' with '1209'
c Var 'field_00009_00009' direct represents '9' with '1210'
1202 1203 1204 1205 1206 1207 1208 1209 1210 0
-1202 1211 0
-1202 1214 0
-1203 1212 0
-1203 1214 0
-1204 1213 0
-1204 1214 0
-1205 1211 0
-1205 1215 0
-1206 1212 0
-1206 1215 0
-1207 1213 0
-1207 1215 0
-1208 1211 0
-1208 1216 0
-1209 1212 0
-1209 1216 0
-1210 1213 0
-1210 1216 0
-1211 -1212 0
-1211 -1213 0
-1212 -1213 0
-1214 -1215 0
-1214 -1216 0
-1215 -1216 0
c Encoding variable: variant_fields_00001_00001_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00001_00001' direct represents '1' with '1217'
c Var 'variant_fields_00001_00001_00001' direct represents '2' with '1218'
c Var 'variant_fields_00001_00001_00001' direct represents '3' with '1219'
c Var 'variant_fields_00001_00001_00001' direct represents '4' with '1220'
c Var 'variant_fields_00001_00001_00001' direct represents '5' with '1221'
c Var 'variant_fields_00001_00001_00001' direct represents '6' with '1222'
c Var 'variant_fields_00001_00001_00001' direct represents '7' with '1223'
c Var 'variant_fields_00001_00001_00001' direct represents '8' with '1224'
c Var 'variant_fields_00001_00001_00001' direct represents '9' with '1225'
1217 1218 1219 1220 1221 1222 1223 1224 1225 0
-1217 1226 0
-1217 1229 0
-1218 1227 0
-1218 1229 0
-1219 1228 0
-1219 1229 0
-1220 1226 0
-1220 1230 0
-1221 1227 0
-1221 1230 0
-1222 1228 0
-1222 1230 0
-1223 1226 0
-1223 1231 0
-1224 1227 0
-1224 1231 0
-1225 1228 0
-1225 1231 0
-1226 -1227 0
-1226 -1228 0
-1227 -1228 0
-1229 -1230 0
-1229 -1231 0
-1230 -1231 0
c Encoding variable: variant_fields_00001_00001_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00001_00002' direct represents '1' with '1232'
c Var 'variant_fields_00001_00001_00002' direct represents '2' with '1233'
c Var 'variant_fields_00001_00001_00002' direct represents '3' with '1234'
c Var 'variant_fields_00001_00001_00002' direct represents '4' with '1235'
c Var 'variant_fields_00001_00001_00002' direct represents '5' with '1236'
c Var 'variant_fields_00001_00001_00002' direct represents '6' with '1237'
c Var 'variant_fields_00001_00001_00002' direct represents '7' with '1238'
c Var 'variant_fields_00001_00001_00002' direct represents '8' with '1239'
c Var 'variant_fields_00001_00001_00002' direct represents '9' with '1240'
1232 1233 1234 1235 1236 1237 1238 1239 1240 0
-1232 1241 0
-1232 1244 0
-1233 1242 0
-1233 1244 0
-1234 1243 0
-1234 1244 0
-1235 1241 0
-1235 1245 0
-1236 1242 0
-1236 1245 0
-1237 1243 0
-1237 1245 0
-1238 1241 0
-1238 1246 0
-1239 1242 0
-1239 1246 0
-1240 1243 0
-1240 1246 0
-1241 -1242 0
-1241 -1243 0
-1242 -1243 0
-1244 -1245 0
-1244 -1246 0
-1245 -1246 0
c Encoding variable: variant_fields_00001_00001_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00001_00003' direct represents '1' with '1247'
c Var 'variant_fields_00001_00001_00003' direct represents '2' with '1248'
c Var 'variant_fields_00001_00001_00003' direct represents '3' with '1249'
c Var 'variant_fields_00001_00001_00003' direct represents '4' with '1250'
c Var 'variant_fields_00001_00001_00003' direct represents '5' with '1251'
c Var 'variant_fields_00001_00001_00003' direct represents '6' with '1252'
c Var 'variant_fields_00001_00001_00003' direct represents '7' with '1253'
c Var 'variant_fields_00001_00001_00003' direct represents '8' with '1254'
c Var 'variant_fields_00001_00001_00003' direct represents '9' with '1255'
1247 1248 1249 1250 1251 1252 1253 1254 1255 0
-1247 1256 0
-1247 1259 0
-1248 1257 0
-1248 1259 0
-1249 1258 0
-1249 1259 0
-1250 1256 0
-1250 1260 0
-1251 1257 0
-1251 1260 0
-1252 1258 0
-1252 1260 0
-1253 1256 0
-1253 1261 0
-1254 1257 0
-1254 1261 0
-1255 1258 0
-1255 1261 0
-1256 -1257 0
-1256 -1258 0
-1257 -1258 0
-1259 -1260 0
-1259 -1261 0
-1260 -1261 0
c Encoding variable: variant_fields_00001_00001_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00001_00004' direct represents '1' with '1262'
c Var 'variant_fields_00001_00001_00004' direct represents '2' with '1263'
c Var 'variant_fields_00001_00001_00004' direct represents '3' with '1264'
c Var 'variant_fields_00001_00001_00004' direct represents '4' with '1265'
c Var 'variant_fields_00001_00001_00004' direct represents '5' with '1266'
c Var 'variant_fields_00001_00001_00004' direct represents '6' with '1267'
c Var 'variant_fields_00001_00001_00004' direct represents '7' with '1268'
c Var 'variant_fields_00001_00001_00004' direct represents '8' with '1269'
c Var 'variant_fields_00001_00001_00004' direct represents '9' with '1270'
1262 1263 1264 1265 1266 1267 1268 1269 1270 0
-1262 1271 0
-1262 1274 0
-1263 1272 0
-1263 1274 0
-1264 1273 0
-1264 1274 0
-1265 1271 0
-1265 1275 0
-1266 1272 0
-1266 1275 0
-1267 1273 0
-1267 1275 0
-1268 1271 0
-1268 1276 0
-1269 1272 0
-1269 1276 0
-1270 1273 0
-1270 1276 0
-1271 -1272 0
-1271 -1273 0
-1272 -1273 0
-1274 -1275 0
-1274 -1276 0
-1275 -1276 0
c Encoding variable: variant_fields_00001_00001_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00001_00005' direct represents '1' with '1277'
c Var 'variant_fields_00001_00001_00005' direct represents '2' with '1278'
c Var 'variant_fields_00001_00001_00005' direct represents '3' with '1279'
c Var 'variant_fields_00001_00001_00005' direct represents '4' with '1280'
c Var 'variant_fields_00001_00001_00005' direct represents '5' with '1281'
c Var 'variant_fields_00001_00001_00005' direct represents '6' with '1282'
c Var 'variant_fields_00001_00001_00005' direct represents '7' with '1283'
c Var 'variant_fields_00001_00001_00005' direct represents '8' with '1284'
c Var 'variant_fields_00001_00001_00005' direct represents '9' with '1285'
1277 1278 1279 1280 1281 1282 1283 1284 1285 0
-1277 1286 0
-1277 1289 0
-1278 1287 0
-1278 1289 0
-1279 1288 0
-1279 1289 0
-1280 1286 0
-1280 1290 0
-1281 1287 0
-1281 1290 0
-1282 1288 0
-1282 1290 0
-1283 1286 0
-1283 1291 0
-1284 1287 0
-1284 1291 0
-1285 1288 0
-1285 1291 0
-1286 -1287 0
-1286 -1288 0
-1287 -1288 0
-1289 -1290 0
-1289 -1291 0
-1290 -1291 0
c Encoding variable: variant_fields_00001_00001_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00001_00006' direct represents '1' with '1292'
c Var 'variant_fields_00001_00001_00006' direct represents '2' with '1293'
c Var 'variant_fields_00001_00001_00006' direct represents '3' with '1294'
c Var 'variant_fields_00001_00001_00006' direct represents '4' with '1295'
c Var 'variant_fields_00001_00001_00006' direct represents '5' with '1296'
c Var 'variant_fields_00001_00001_00006' direct represents '6' with '1297'
c Var 'variant_fields_00001_00001_00006' direct represents '7' with '1298'
c Var 'variant_fields_00001_00001_00006' direct represents '8' with '1299'
c Var 'variant_fields_00001_00001_00006' direct represents '9' with '1300'
1292 1293 1294 1295 1296 1297 1298 1299 1300 0
-1292 1301 0
-1292 1304 0
-1293 1302 0
-1293 1304 0
-1294 1303 0
-1294 1304 0
-1295 1301 0
-1295 1305 0
-1296 1302 0
-1296 1305 0
-1297 1303 0
-1297 1305 0
-1298 1301 0
-1298 1306 0
-1299 1302 0
-1299 1306 0
-1300 1303 0
-1300 1306 0
-1301 -1302 0
-1301 -1303 0
-1302 -1303 0
-1304 -1305 0
-1304 -1306 0
-1305 -1306 0
c Encoding variable: variant_fields_00001_00001_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00001_00007' direct represents '1' with '1307'
c Var 'variant_fields_00001_00001_00007' direct represents '2' with '1308'
c Var 'variant_fields_00001_00001_00007' direct represents '3' with '1309'
c Var 'variant_fields_00001_00001_00007' direct represents '4' with '1310'
c Var 'variant_fields_00001_00001_00007' direct represents '5' with '1311'
c Var 'variant_fields_00001_00001_00007' direct represents '6' with '1312'
c Var 'variant_fields_00001_00001_00007' direct represents '7' with '1313'
c Var 'variant_fields_00001_00001_00007' direct represents '8' with '1314'
c Var 'variant_fields_00001_00001_00007' direct represents '9' with '1315'
1307 1308 1309 1310 1311 1312 1313 1314 1315 0
-1307 1316 0
-1307 1319 0
-1308 1317 0
-1308 1319 0
-1309 1318 0
-1309 1319 0
-1310 1316 0
-1310 1320 0
-1311 1317 0
-1311 1320 0
-1312 1318 0
-1312 1320 0
-1313 1316 0
-1313 1321 0
-1314 1317 0
-1314 1321 0
-1315 1318 0
-1315 1321 0
-1316 -1317 0
-1316 -1318 0
-1317 -1318 0
-1319 -1320 0
-1319 -1321 0
-1320 -1321 0
c Encoding variable: variant_fields_00001_00001_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00001_00008' direct represents '1' with '1322'
c Var 'variant_fields_00001_00001_00008' direct represents '2' with '1323'
c Var 'variant_fields_00001_00001_00008' direct represents '3' with '1324'
c Var 'variant_fields_00001_00001_00008' direct represents '4' with '1325'
c Var 'variant_fields_00001_00001_00008' direct represents '5' with '1326'
c Var 'variant_fields_00001_00001_00008' direct represents '6' with '1327'
c Var 'variant_fields_00001_00001_00008' direct represents '7' with '1328'
c Var 'variant_fields_00001_00001_00008' direct represents '8' with '1329'
c Var 'variant_fields_00001_00001_00008' direct represents '9' with '1330'
1322 1323 1324 1325 1326 1327 1328 1329 1330 0
-1322 1331 0
-1322 1334 0
-1323 1332 0
-1323 1334 0
-1324 1333 0
-1324 1334 0
-1325 1331 0
-1325 1335 0
-1326 1332 0
-1326 1335 0
-1327 1333 0
-1327 1335 0
-1328 1331 0
-1328 1336 0
-1329 1332 0
-1329 1336 0
-1330 1333 0
-1330 1336 0
-1331 -1332 0
-1331 -1333 0
-1332 -1333 0
-1334 -1335 0
-1334 -1336 0
-1335 -1336 0
c Encoding variable: variant_fields_00001_00001_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00001_00009' direct represents '1' with '1337'
c Var 'variant_fields_00001_00001_00009' direct represents '2' with '1338'
c Var 'variant_fields_00001_00001_00009' direct represents '3' with '1339'
c Var 'variant_fields_00001_00001_00009' direct represents '4' with '1340'
c Var 'variant_fields_00001_00001_00009' direct represents '5' with '1341'
c Var 'variant_fields_00001_00001_00009' direct represents '6' with '1342'
c Var 'variant_fields_00001_00001_00009' direct represents '7' with '1343'
c Var 'variant_fields_00001_00001_00009' direct represents '8' with '1344'
c Var 'variant_fields_00001_00001_00009' direct represents '9' with '1345'
1337 1338 1339 1340 1341 1342 1343 1344 1345 0
-1337 1346 0
-1337 1349 0
-1338 1347 0
-1338 1349 0
-1339 1348 0
-1339 1349 0
-1340 1346 0
-1340 1350 0
-1341 1347 0
-1341 1350 0
-1342 1348 0
-1342 1350 0
-1343 1346 0
-1343 1351 0
-1344 1347 0
-1344 1351 0
-1345 1348 0
-1345 1351 0
-1346 -1347 0
-1346 -1348 0
-1347 -1348 0
-1349 -1350 0
-1349 -1351 0
-1350 -1351 0
c Encoding variable: variant_fields_00001_00002_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00002_00001' order represents '1' with '1352'
c Var 'variant_fields_00001_00002_00001' direct represents '1' with '1352'
c Var 'variant_fields_00001_00002_00001' order represents '2' with '1353'
-1352 1353 0
c Var 'variant_fields_00001_00002_00001' direct represents '2' with '1354'
1352 -1353 1354 0
-1354 1353 0
-1354 -1352 0
c Var 'variant_fields_00001_00002_00001' order represents '3' with '1355'
-1353 1355 0
c Var 'variant_fields_00001_00002_00001' direct represents '3' with '1356'
1353 -1355 1356 0
-1356 1355 0
-1356 -1353 0
c Var 'variant_fields_00001_00002_00001' order represents '4' with '1357'
-1355 1357 0
c Var 'variant_fields_00001_00002_00001' direct represents '4' with '1358'
1355 -1357 1358 0
-1358 1357 0
-1358 -1355 0
c Var 'variant_fields_00001_00002_00001' order represents '5' with '1359'
-1357 1359 0
c Var 'variant_fields_00001_00002_00001' direct represents '5' with '1360'
1357 -1359 1360 0
-1360 1359 0
-1360 -1357 0
c Var 'variant_fields_00001_00002_00001' order represents '6' with '1361'
-1359 1361 0
c Var 'variant_fields_00001_00002_00001' direct represents '6' with '1362'
1359 -1361 1362 0
-1362 1361 0
-1362 -1359 0
c Var 'variant_fields_00001_00002_00001' order represents '7' with '1363'
-1361 1363 0
c Var 'variant_fields_00001_00002_00001' direct represents '7' with '1364'
1361 -1363 1364 0
-1364 1363 0
-1364 -1361 0
c Var 'variant_fields_00001_00002_00001' order represents '8' with '1365'
-1363 1365 0
c Var 'variant_fields_00001_00002_00001' direct represents '8' with '1366'
1363 -1365 1366 0
-1366 1365 0
-1366 -1363 0
c Var 'variant_fields_00001_00002_00001' direct represents '9' with '-1365'
1352 1354 1356 1358 1360 1362 1364 1366 -1365 0
c Encoding variable: variant_fields_00001_00002_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00002_00002' direct represents '1' with '1367'
c Var 'variant_fields_00001_00002_00002' direct represents '2' with '1368'
c Var 'variant_fields_00001_00002_00002' direct represents '3' with '1369'
c Var 'variant_fields_00001_00002_00002' direct represents '4' with '1370'
c Var 'variant_fields_00001_00002_00002' direct represents '5' with '1371'
c Var 'variant_fields_00001_00002_00002' direct represents '6' with '1372'
c Var 'variant_fields_00001_00002_00002' direct represents '7' with '1373'
c Var 'variant_fields_00001_00002_00002' direct represents '8' with '1374'
c Var 'variant_fields_00001_00002_00002' direct represents '9' with '1375'
1367 1368 1369 1370 1371 1372 1373 1374 1375 0
-1367 1376 0
-1367 1379 0
-1368 1377 0
-1368 1379 0
-1369 1378 0
-1369 1379 0
-1370 1376 0
-1370 1380 0
-1371 1377 0
-1371 1380 0
-1372 1378 0
-1372 1380 0
-1373 1376 0
-1373 1381 0
-1374 1377 0
-1374 1381 0
-1375 1378 0
-1375 1381 0
-1376 -1377 0
-1376 -1378 0
-1377 -1378 0
-1379 -1380 0
-1379 -1381 0
-1380 -1381 0
c Encoding variable: variant_fields_00001_00002_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00002_00003' direct represents '1' with '1382'
c Var 'variant_fields_00001_00002_00003' direct represents '2' with '1383'
c Var 'variant_fields_00001_00002_00003' direct represents '3' with '1384'
c Var 'variant_fields_00001_00002_00003' direct represents '4' with '1385'
c Var 'variant_fields_00001_00002_00003' direct represents '5' with '1386'
c Var 'variant_fields_00001_00002_00003' direct represents '6' with '1387'
c Var 'variant_fields_00001_00002_00003' direct represents '7' with '1388'
c Var 'variant_fields_00001_00002_00003' direct represents '8' with '1389'
c Var 'variant_fields_00001_00002_00003' direct represents '9' with '1390'
1382 1383 1384 1385 1386 1387 1388 1389 1390 0
-1382 1391 0
-1382 1394 0
-1383 1392 0
-1383 1394 0
-1384 1393 0
-1384 1394 0
-1385 1391 0
-1385 1395 0
-1386 1392 0
-1386 1395 0
-1387 1393 0
-1387 1395 0
-1388 1391 0
-1388 1396 0
-1389 1392 0
-1389 1396 0
-1390 1393 0
-1390 1396 0
-1391 -1392 0
-1391 -1393 0
-1392 -1393 0
-1394 -1395 0
-1394 -1396 0
-1395 -1396 0
c Encoding variable: variant_fields_00001_00002_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00002_00004' direct represents '1' with '1397'
c Var 'variant_fields_00001_00002_00004' direct represents '2' with '1398'
c Var 'variant_fields_00001_00002_00004' direct represents '3' with '1399'
c Var 'variant_fields_00001_00002_00004' direct represents '4' with '1400'
c Var 'variant_fields_00001_00002_00004' direct represents '5' with '1401'
c Var 'variant_fields_00001_00002_00004' direct represents '6' with '1402'
c Var 'variant_fields_00001_00002_00004' direct represents '7' with '1403'
c Var 'variant_fields_00001_00002_00004' direct represents '8' with '1404'
c Var 'variant_fields_00001_00002_00004' direct represents '9' with '1405'
1397 1398 1399 1400 1401 1402 1403 1404 1405 0
-1397 1406 0
-1397 1409 0
-1398 1407 0
-1398 1409 0
-1399 1408 0
-1399 1409 0
-1400 1406 0
-1400 1410 0
-1401 1407 0
-1401 1410 0
-1402 1408 0
-1402 1410 0
-1403 1406 0
-1403 1411 0
-1404 1407 0
-1404 1411 0
-1405 1408 0
-1405 1411 0
-1406 -1407 0
-1406 -1408 0
-1407 -1408 0
-1409 -1410 0
-1409 -1411 0
-1410 -1411 0
c Encoding variable: variant_fields_00001_00002_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00002_00005' direct represents '1' with '1412'
c Var 'variant_fields_00001_00002_00005' direct represents '2' with '1413'
c Var 'variant_fields_00001_00002_00005' direct represents '3' with '1414'
c Var 'variant_fields_00001_00002_00005' direct represents '4' with '1415'
c Var 'variant_fields_00001_00002_00005' direct represents '5' with '1416'
c Var 'variant_fields_00001_00002_00005' direct represents '6' with '1417'
c Var 'variant_fields_00001_00002_00005' direct represents '7' with '1418'
c Var 'variant_fields_00001_00002_00005' direct represents '8' with '1419'
c Var 'variant_fields_00001_00002_00005' direct represents '9' with '1420'
1412 1413 1414 1415 1416 1417 1418 1419 1420 0
-1412 1421 0
-1412 1424 0
-1413 1422 0
-1413 1424 0
-1414 1423 0
-1414 1424 0
-1415 1421 0
-1415 1425 0
-1416 1422 0
-1416 1425 0
-1417 1423 0
-1417 1425 0
-1418 1421 0
-1418 1426 0
-1419 1422 0
-1419 1426 0
-1420 1423 0
-1420 1426 0
-1421 -1422 0
-1421 -1423 0
-1422 -1423 0
-1424 -1425 0
-1424 -1426 0
-1425 -1426 0
c Encoding variable: variant_fields_00001_00002_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00002_00006' direct represents '1' with '1427'
c Var 'variant_fields_00001_00002_00006' direct represents '2' with '1428'
c Var 'variant_fields_00001_00002_00006' direct represents '3' with '1429'
c Var 'variant_fields_00001_00002_00006' direct represents '4' with '1430'
c Var 'variant_fields_00001_00002_00006' direct represents '5' with '1431'
c Var 'variant_fields_00001_00002_00006' direct represents '6' with '1432'
c Var 'variant_fields_00001_00002_00006' direct represents '7' with '1433'
c Var 'variant_fields_00001_00002_00006' direct represents '8' with '1434'
c Var 'variant_fields_00001_00002_00006' direct represents '9' with '1435'
1427 1428 1429 1430 1431 1432 1433 1434 1435 0
-1427 1436 0
-1427 1439 0
-1428 1437 0
-1428 1439 0
-1429 1438 0
-1429 1439 0
-1430 1436 0
-1430 1440 0
-1431 1437 0
-1431 1440 0
-1432 1438 0
-1432 1440 0
-1433 1436 0
-1433 1441 0
-1434 1437 0
-1434 1441 0
-1435 1438 0
-1435 1441 0
-1436 -1437 0
-1436 -1438 0
-1437 -1438 0
-1439 -1440 0
-1439 -1441 0
-1440 -1441 0
c Encoding variable: variant_fields_00001_00002_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00002_00007' direct represents '1' with '1442'
c Var 'variant_fields_00001_00002_00007' direct represents '2' with '1443'
c Var 'variant_fields_00001_00002_00007' direct represents '3' with '1444'
c Var 'variant_fields_00001_00002_00007' direct represents '4' with '1445'
c Var 'variant_fields_00001_00002_00007' direct represents '5' with '1446'
c Var 'variant_fields_00001_00002_00007' direct represents '6' with '1447'
c Var 'variant_fields_00001_00002_00007' direct represents '7' with '1448'
c Var 'variant_fields_00001_00002_00007' direct represents '8' with '1449'
c Var 'variant_fields_00001_00002_00007' direct represents '9' with '1450'
1442 1443 1444 1445 1446 1447 1448 1449 1450 0
-1442 1451 0
-1442 1454 0
-1443 1452 0
-1443 1454 0
-1444 1453 0
-1444 1454 0
-1445 1451 0
-1445 1455 0
-1446 1452 0
-1446 1455 0
-1447 1453 0
-1447 1455 0
-1448 1451 0
-1448 1456 0
-1449 1452 0
-1449 1456 0
-1450 1453 0
-1450 1456 0
-1451 -1452 0
-1451 -1453 0
-1452 -1453 0
-1454 -1455 0
-1454 -1456 0
-1455 -1456 0
c Encoding variable: variant_fields_00001_00002_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00002_00008' direct represents '1' with '1457'
c Var 'variant_fields_00001_00002_00008' direct represents '2' with '1458'
c Var 'variant_fields_00001_00002_00008' direct represents '3' with '1459'
c Var 'variant_fields_00001_00002_00008' direct represents '4' with '1460'
c Var 'variant_fields_00001_00002_00008' direct represents '5' with '1461'
c Var 'variant_fields_00001_00002_00008' direct represents '6' with '1462'
c Var 'variant_fields_00001_00002_00008' direct represents '7' with '1463'
c Var 'variant_fields_00001_00002_00008' direct represents '8' with '1464'
c Var 'variant_fields_00001_00002_00008' direct represents '9' with '1465'
1457 1458 1459 1460 1461 1462 1463 1464 1465 0
-1457 1466 0
-1457 1469 0
-1458 1467 0
-1458 1469 0
-1459 1468 0
-1459 1469 0
-1460 1466 0
-1460 1470 0
-1461 1467 0
-1461 1470 0
-1462 1468 0
-1462 1470 0
-1463 1466 0
-1463 1471 0
-1464 1467 0
-1464 1471 0
-1465 1468 0
-1465 1471 0
-1466 -1467 0
-1466 -1468 0
-1467 -1468 0
-1469 -1470 0
-1469 -1471 0
-1470 -1471 0
c Encoding variable: variant_fields_00001_00002_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00002_00009' direct represents '1' with '1472'
c Var 'variant_fields_00001_00002_00009' direct represents '2' with '1473'
c Var 'variant_fields_00001_00002_00009' direct represents '3' with '1474'
c Var 'variant_fields_00001_00002_00009' direct represents '4' with '1475'
c Var 'variant_fields_00001_00002_00009' direct represents '5' with '1476'
c Var 'variant_fields_00001_00002_00009' direct represents '6' with '1477'
c Var 'variant_fields_00001_00002_00009' direct represents '7' with '1478'
c Var 'variant_fields_00001_00002_00009' direct represents '8' with '1479'
c Var 'variant_fields_00001_00002_00009' direct represents '9' with '1480'
1472 1473 1474 1475 1476 1477 1478 1479 1480 0
-1472 1481 0
-1472 1484 0
-1473 1482 0
-1473 1484 0
-1474 1483 0
-1474 1484 0
-1475 1481 0
-1475 1485 0
-1476 1482 0
-1476 1485 0
-1477 1483 0
-1477 1485 0
-1478 1481 0
-1478 1486 0
-1479 1482 0
-1479 1486 0
-1480 1483 0
-1480 1486 0
-1481 -1482 0
-1481 -1483 0
-1482 -1483 0
-1484 -1485 0
-1484 -1486 0
-1485 -1486 0
c Encoding variable: variant_fields_00001_00003_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00003_00001' direct represents '1' with '1487'
c Var 'variant_fields_00001_00003_00001' direct represents '2' with '1488'
c Var 'variant_fields_00001_00003_00001' direct represents '3' with '1489'
c Var 'variant_fields_00001_00003_00001' direct represents '4' with '1490'
c Var 'variant_fields_00001_00003_00001' direct represents '5' with '1491'
c Var 'variant_fields_00001_00003_00001' direct represents '6' with '1492'
c Var 'variant_fields_00001_00003_00001' direct represents '7' with '1493'
c Var 'variant_fields_00001_00003_00001' direct represents '8' with '1494'
c Var 'variant_fields_00001_00003_00001' direct represents '9' with '1495'
1487 1488 1489 1490 1491 1492 1493 1494 1495 0
-1487 1496 0
-1487 1499 0
-1488 1497 0
-1488 1499 0
-1489 1498 0
-1489 1499 0
-1490 1496 0
-1490 1500 0
-1491 1497 0
-1491 1500 0
-1492 1498 0
-1492 1500 0
-1493 1496 0
-1493 1501 0
-1494 1497 0
-1494 1501 0
-1495 1498 0
-1495 1501 0
-1496 -1497 0
-1496 -1498 0
-1497 -1498 0
-1499 -1500 0
-1499 -1501 0
-1500 -1501 0
c Encoding variable: variant_fields_00001_00003_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00003_00002' direct represents '1' with '1502'
c Var 'variant_fields_00001_00003_00002' direct represents '2' with '1503'
c Var 'variant_fields_00001_00003_00002' direct represents '3' with '1504'
c Var 'variant_fields_00001_00003_00002' direct represents '4' with '1505'
c Var 'variant_fields_00001_00003_00002' direct represents '5' with '1506'
c Var 'variant_fields_00001_00003_00002' direct represents '6' with '1507'
c Var 'variant_fields_00001_00003_00002' direct represents '7' with '1508'
c Var 'variant_fields_00001_00003_00002' direct represents '8' with '1509'
c Var 'variant_fields_00001_00003_00002' direct represents '9' with '1510'
1502 1503 1504 1505 1506 1507 1508 1509 1510 0
-1502 1511 0
-1502 1514 0
-1503 1512 0
-1503 1514 0
-1504 1513 0
-1504 1514 0
-1505 1511 0
-1505 1515 0
-1506 1512 0
-1506 1515 0
-1507 1513 0
-1507 1515 0
-1508 1511 0
-1508 1516 0
-1509 1512 0
-1509 1516 0
-1510 1513 0
-1510 1516 0
-1511 -1512 0
-1511 -1513 0
-1512 -1513 0
-1514 -1515 0
-1514 -1516 0
-1515 -1516 0
c Encoding variable: variant_fields_00001_00003_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00003_00003' direct represents '1' with '1517'
c Var 'variant_fields_00001_00003_00003' direct represents '2' with '1518'
c Var 'variant_fields_00001_00003_00003' direct represents '3' with '1519'
c Var 'variant_fields_00001_00003_00003' direct represents '4' with '1520'
c Var 'variant_fields_00001_00003_00003' direct represents '5' with '1521'
c Var 'variant_fields_00001_00003_00003' direct represents '6' with '1522'
c Var 'variant_fields_00001_00003_00003' direct represents '7' with '1523'
c Var 'variant_fields_00001_00003_00003' direct represents '8' with '1524'
c Var 'variant_fields_00001_00003_00003' direct represents '9' with '1525'
1517 1518 1519 1520 1521 1522 1523 1524 1525 0
-1517 1526 0
-1517 1529 0
-1518 1527 0
-1518 1529 0
-1519 1528 0
-1519 1529 0
-1520 1526 0
-1520 1530 0
-1521 1527 0
-1521 1530 0
-1522 1528 0
-1522 1530 0
-1523 1526 0
-1523 1531 0
-1524 1527 0
-1524 1531 0
-1525 1528 0
-1525 1531 0
-1526 -1527 0
-1526 -1528 0
-1527 -1528 0
-1529 -1530 0
-1529 -1531 0
-1530 -1531 0
c Encoding variable: variant_fields_00001_00003_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00003_00004' direct represents '1' with '1532'
c Var 'variant_fields_00001_00003_00004' direct represents '2' with '1533'
c Var 'variant_fields_00001_00003_00004' direct represents '3' with '1534'
c Var 'variant_fields_00001_00003_00004' direct represents '4' with '1535'
c Var 'variant_fields_00001_00003_00004' direct represents '5' with '1536'
c Var 'variant_fields_00001_00003_00004' direct represents '6' with '1537'
c Var 'variant_fields_00001_00003_00004' direct represents '7' with '1538'
c Var 'variant_fields_00001_00003_00004' direct represents '8' with '1539'
c Var 'variant_fields_00001_00003_00004' direct represents '9' with '1540'
1532 1533 1534 1535 1536 1537 1538 1539 1540 0
-1532 1541 0
-1532 1544 0
-1533 1542 0
-1533 1544 0
-1534 1543 0
-1534 1544 0
-1535 1541 0
-1535 1545 0
-1536 1542 0
-1536 1545 0
-1537 1543 0
-1537 1545 0
-1538 1541 0
-1538 1546 0
-1539 1542 0
-1539 1546 0
-1540 1543 0
-1540 1546 0
-1541 -1542 0
-1541 -1543 0
-1542 -1543 0
-1544 -1545 0
-1544 -1546 0
-1545 -1546 0
c Encoding variable: variant_fields_00001_00003_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00003_00005' direct represents '1' with '1547'
c Var 'variant_fields_00001_00003_00005' direct represents '2' with '1548'
c Var 'variant_fields_00001_00003_00005' direct represents '3' with '1549'
c Var 'variant_fields_00001_00003_00005' direct represents '4' with '1550'
c Var 'variant_fields_00001_00003_00005' direct represents '5' with '1551'
c Var 'variant_fields_00001_00003_00005' direct represents '6' with '1552'
c Var 'variant_fields_00001_00003_00005' direct represents '7' with '1553'
c Var 'variant_fields_00001_00003_00005' direct represents '8' with '1554'
c Var 'variant_fields_00001_00003_00005' direct represents '9' with '1555'
1547 1548 1549 1550 1551 1552 1553 1554 1555 0
-1547 1556 0
-1547 1559 0
-1548 1557 0
-1548 1559 0
-1549 1558 0
-1549 1559 0
-1550 1556 0
-1550 1560 0
-1551 1557 0
-1551 1560 0
-1552 1558 0
-1552 1560 0
-1553 1556 0
-1553 1561 0
-1554 1557 0
-1554 1561 0
-1555 1558 0
-1555 1561 0
-1556 -1557 0
-1556 -1558 0
-1557 -1558 0
-1559 -1560 0
-1559 -1561 0
-1560 -1561 0
c Encoding variable: variant_fields_00001_00003_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00003_00006' direct represents '1' with '1562'
c Var 'variant_fields_00001_00003_00006' direct represents '2' with '1563'
c Var 'variant_fields_00001_00003_00006' direct represents '3' with '1564'
c Var 'variant_fields_00001_00003_00006' direct represents '4' with '1565'
c Var 'variant_fields_00001_00003_00006' direct represents '5' with '1566'
c Var 'variant_fields_00001_00003_00006' direct represents '6' with '1567'
c Var 'variant_fields_00001_00003_00006' direct represents '7' with '1568'
c Var 'variant_fields_00001_00003_00006' direct represents '8' with '1569'
c Var 'variant_fields_00001_00003_00006' direct represents '9' with '1570'
1562 1563 1564 1565 1566 1567 1568 1569 1570 0
-1562 1571 0
-1562 1574 0
-1563 1572 0
-1563 1574 0
-1564 1573 0
-1564 1574 0
-1565 1571 0
-1565 1575 0
-1566 1572 0
-1566 1575 0
-1567 1573 0
-1567 1575 0
-1568 1571 0
-1568 1576 0
-1569 1572 0
-1569 1576 0
-1570 1573 0
-1570 1576 0
-1571 -1572 0
-1571 -1573 0
-1572 -1573 0
-1574 -1575 0
-1574 -1576 0
-1575 -1576 0
c Encoding variable: variant_fields_00001_00003_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00003_00007' direct represents '1' with '1577'
c Var 'variant_fields_00001_00003_00007' direct represents '2' with '1578'
c Var 'variant_fields_00001_00003_00007' direct represents '3' with '1579'
c Var 'variant_fields_00001_00003_00007' direct represents '4' with '1580'
c Var 'variant_fields_00001_00003_00007' direct represents '5' with '1581'
c Var 'variant_fields_00001_00003_00007' direct represents '6' with '1582'
c Var 'variant_fields_00001_00003_00007' direct represents '7' with '1583'
c Var 'variant_fields_00001_00003_00007' direct represents '8' with '1584'
c Var 'variant_fields_00001_00003_00007' direct represents '9' with '1585'
1577 1578 1579 1580 1581 1582 1583 1584 1585 0
-1577 1586 0
-1577 1589 0
-1578 1587 0
-1578 1589 0
-1579 1588 0
-1579 1589 0
-1580 1586 0
-1580 1590 0
-1581 1587 0
-1581 1590 0
-1582 1588 0
-1582 1590 0
-1583 1586 0
-1583 1591 0
-1584 1587 0
-1584 1591 0
-1585 1588 0
-1585 1591 0
-1586 -1587 0
-1586 -1588 0
-1587 -1588 0
-1589 -1590 0
-1589 -1591 0
-1590 -1591 0
c Encoding variable: variant_fields_00001_00003_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00003_00008' direct represents '1' with '1592'
c Var 'variant_fields_00001_00003_00008' direct represents '2' with '1593'
c Var 'variant_fields_00001_00003_00008' direct represents '3' with '1594'
c Var 'variant_fields_00001_00003_00008' direct represents '4' with '1595'
c Var 'variant_fields_00001_00003_00008' direct represents '5' with '1596'
c Var 'variant_fields_00001_00003_00008' direct represents '6' with '1597'
c Var 'variant_fields_00001_00003_00008' direct represents '7' with '1598'
c Var 'variant_fields_00001_00003_00008' direct represents '8' with '1599'
c Var 'variant_fields_00001_00003_00008' direct represents '9' with '1600'
1592 1593 1594 1595 1596 1597 1598 1599 1600 0
-1592 1601 0
-1592 1604 0
-1593 1602 0
-1593 1604 0
-1594 1603 0
-1594 1604 0
-1595 1601 0
-1595 1605 0
-1596 1602 0
-1596 1605 0
-1597 1603 0
-1597 1605 0
-1598 1601 0
-1598 1606 0
-1599 1602 0
-1599 1606 0
-1600 1603 0
-1600 1606 0
-1601 -1602 0
-1601 -1603 0
-1602 -1603 0
-1604 -1605 0
-1604 -1606 0
-1605 -1606 0
c Encoding variable: variant_fields_00001_00003_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00003_00009' direct represents '1' with '1607'
c Var 'variant_fields_00001_00003_00009' direct represents '2' with '1608'
c Var 'variant_fields_00001_00003_00009' direct represents '3' with '1609'
c Var 'variant_fields_00001_00003_00009' direct represents '4' with '1610'
c Var 'variant_fields_00001_00003_00009' direct represents '5' with '1611'
c Var 'variant_fields_00001_00003_00009' direct represents '6' with '1612'
c Var 'variant_fields_00001_00003_00009' direct represents '7' with '1613'
c Var 'variant_fields_00001_00003_00009' direct represents '8' with '1614'
c Var 'variant_fields_00001_00003_00009' direct represents '9' with '1615'
1607 1608 1609 1610 1611 1612 1613 1614 1615 0
-1607 1616 0
-1607 1619 0
-1608 1617 0
-1608 1619 0
-1609 1618 0
-1609 1619 0
-1610 1616 0
-1610 1620 0
-1611 1617 0
-1611 1620 0
-1612 1618 0
-1612 1620 0
-1613 1616 0
-1613 1621 0
-1614 1617 0
-1614 1621 0
-1615 1618 0
-1615 1621 0
-1616 -1617 0
-1616 -1618 0
-1617 -1618 0
-1619 -1620 0
-1619 -1621 0
-1620 -1621 0
c Encoding variable: variant_fields_00001_00004_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00004_00001' order represents '1' with '1622'
c Var 'variant_fields_00001_00004_00001' direct represents '1' with '1622'
c Var 'variant_fields_00001_00004_00001' order represents '2' with '1623'
-1622 1623 0
c Var 'variant_fields_00001_00004_00001' direct represents '2' with '1624'
1622 -1623 1624 0
-1624 1623 0
-1624 -1622 0
c Var 'variant_fields_00001_00004_00001' order represents '3' with '1625'
-1623 1625 0
c Var 'variant_fields_00001_00004_00001' direct represents '3' with '1626'
1623 -1625 1626 0
-1626 1625 0
-1626 -1623 0
c Var 'variant_fields_00001_00004_00001' order represents '4' with '1627'
-1625 1627 0
c Var 'variant_fields_00001_00004_00001' direct represents '4' with '1628'
1625 -1627 1628 0
-1628 1627 0
-1628 -1625 0
c Var 'variant_fields_00001_00004_00001' order represents '5' with '1629'
-1627 1629 0
c Var 'variant_fields_00001_00004_00001' direct represents '5' with '1630'
1627 -1629 1630 0
-1630 1629 0
-1630 -1627 0
c Var 'variant_fields_00001_00004_00001' order represents '6' with '1631'
-1629 1631 0
c Var 'variant_fields_00001_00004_00001' direct represents '6' with '1632'
1629 -1631 1632 0
-1632 1631 0
-1632 -1629 0
c Var 'variant_fields_00001_00004_00001' order represents '7' with '1633'
-1631 1633 0
c Var 'variant_fields_00001_00004_00001' direct represents '7' with '1634'
1631 -1633 1634 0
-1634 1633 0
-1634 -1631 0
c Var 'variant_fields_00001_00004_00001' order represents '8' with '1635'
-1633 1635 0
c Var 'variant_fields_00001_00004_00001' direct represents '8' with '1636'
1633 -1635 1636 0
-1636 1635 0
-1636 -1633 0
c Var 'variant_fields_00001_00004_00001' direct represents '9' with '-1635'
1622 1624 1626 1628 1630 1632 1634 1636 -1635 0
c Encoding variable: variant_fields_00001_00004_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00004_00002' direct represents '1' with '1637'
c Var 'variant_fields_00001_00004_00002' direct represents '2' with '1638'
c Var 'variant_fields_00001_00004_00002' direct represents '3' with '1639'
c Var 'variant_fields_00001_00004_00002' direct represents '4' with '1640'
c Var 'variant_fields_00001_00004_00002' direct represents '5' with '1641'
c Var 'variant_fields_00001_00004_00002' direct represents '6' with '1642'
c Var 'variant_fields_00001_00004_00002' direct represents '7' with '1643'
c Var 'variant_fields_00001_00004_00002' direct represents '8' with '1644'
c Var 'variant_fields_00001_00004_00002' direct represents '9' with '1645'
1637 1638 1639 1640 1641 1642 1643 1644 1645 0
-1637 1646 0
-1637 1649 0
-1638 1647 0
-1638 1649 0
-1639 1648 0
-1639 1649 0
-1640 1646 0
-1640 1650 0
-1641 1647 0
-1641 1650 0
-1642 1648 0
-1642 1650 0
-1643 1646 0
-1643 1651 0
-1644 1647 0
-1644 1651 0
-1645 1648 0
-1645 1651 0
-1646 -1647 0
-1646 -1648 0
-1647 -1648 0
-1649 -1650 0
-1649 -1651 0
-1650 -1651 0
c Encoding variable: variant_fields_00001_00004_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00004_00003' direct represents '1' with '1652'
c Var 'variant_fields_00001_00004_00003' direct represents '2' with '1653'
c Var 'variant_fields_00001_00004_00003' direct represents '3' with '1654'
c Var 'variant_fields_00001_00004_00003' direct represents '4' with '1655'
c Var 'variant_fields_00001_00004_00003' direct represents '5' with '1656'
c Var 'variant_fields_00001_00004_00003' direct represents '6' with '1657'
c Var 'variant_fields_00001_00004_00003' direct represents '7' with '1658'
c Var 'variant_fields_00001_00004_00003' direct represents '8' with '1659'
c Var 'variant_fields_00001_00004_00003' direct represents '9' with '1660'
1652 1653 1654 1655 1656 1657 1658 1659 1660 0
-1652 1661 0
-1652 1664 0
-1653 1662 0
-1653 1664 0
-1654 1663 0
-1654 1664 0
-1655 1661 0
-1655 1665 0
-1656 1662 0
-1656 1665 0
-1657 1663 0
-1657 1665 0
-1658 1661 0
-1658 1666 0
-1659 1662 0
-1659 1666 0
-1660 1663 0
-1660 1666 0
-1661 -1662 0
-1661 -1663 0
-1662 -1663 0
-1664 -1665 0
-1664 -1666 0
-1665 -1666 0
c Encoding variable: variant_fields_00001_00004_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00004_00004' direct represents '1' with '1667'
c Var 'variant_fields_00001_00004_00004' direct represents '2' with '1668'
c Var 'variant_fields_00001_00004_00004' direct represents '3' with '1669'
c Var 'variant_fields_00001_00004_00004' direct represents '4' with '1670'
c Var 'variant_fields_00001_00004_00004' direct represents '5' with '1671'
c Var 'variant_fields_00001_00004_00004' direct represents '6' with '1672'
c Var 'variant_fields_00001_00004_00004' direct represents '7' with '1673'
c Var 'variant_fields_00001_00004_00004' direct represents '8' with '1674'
c Var 'variant_fields_00001_00004_00004' direct represents '9' with '1675'
1667 1668 1669 1670 1671 1672 1673 1674 1675 0
-1667 1676 0
-1667 1679 0
-1668 1677 0
-1668 1679 0
-1669 1678 0
-1669 1679 0
-1670 1676 0
-1670 1680 0
-1671 1677 0
-1671 1680 0
-1672 1678 0
-1672 1680 0
-1673 1676 0
-1673 1681 0
-1674 1677 0
-1674 1681 0
-1675 1678 0
-1675 1681 0
-1676 -1677 0
-1676 -1678 0
-1677 -1678 0
-1679 -1680 0
-1679 -1681 0
-1680 -1681 0
c Encoding variable: variant_fields_00001_00004_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00004_00005' direct represents '1' with '1682'
c Var 'variant_fields_00001_00004_00005' direct represents '2' with '1683'
c Var 'variant_fields_00001_00004_00005' direct represents '3' with '1684'
c Var 'variant_fields_00001_00004_00005' direct represents '4' with '1685'
c Var 'variant_fields_00001_00004_00005' direct represents '5' with '1686'
c Var 'variant_fields_00001_00004_00005' direct represents '6' with '1687'
c Var 'variant_fields_00001_00004_00005' direct represents '7' with '1688'
c Var 'variant_fields_00001_00004_00005' direct represents '8' with '1689'
c Var 'variant_fields_00001_00004_00005' direct represents '9' with '1690'
1682 1683 1684 1685 1686 1687 1688 1689 1690 0
-1682 1691 0
-1682 1694 0
-1683 1692 0
-1683 1694 0
-1684 1693 0
-1684 1694 0
-1685 1691 0
-1685 1695 0
-1686 1692 0
-1686 1695 0
-1687 1693 0
-1687 1695 0
-1688 1691 0
-1688 1696 0
-1689 1692 0
-1689 1696 0
-1690 1693 0
-1690 1696 0
-1691 -1692 0
-1691 -1693 0
-1692 -1693 0
-1694 -1695 0
-1694 -1696 0
-1695 -1696 0
c Encoding variable: variant_fields_00001_00004_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00004_00006' direct represents '1' with '1697'
c Var 'variant_fields_00001_00004_00006' direct represents '2' with '1698'
c Var 'variant_fields_00001_00004_00006' direct represents '3' with '1699'
c Var 'variant_fields_00001_00004_00006' direct represents '4' with '1700'
c Var 'variant_fields_00001_00004_00006' direct represents '5' with '1701'
c Var 'variant_fields_00001_00004_00006' direct represents '6' with '1702'
c Var 'variant_fields_00001_00004_00006' direct represents '7' with '1703'
c Var 'variant_fields_00001_00004_00006' direct represents '8' with '1704'
c Var 'variant_fields_00001_00004_00006' direct represents '9' with '1705'
1697 1698 1699 1700 1701 1702 1703 1704 1705 0
-1697 1706 0
-1697 1709 0
-1698 1707 0
-1698 1709 0
-1699 1708 0
-1699 1709 0
-1700 1706 0
-1700 1710 0
-1701 1707 0
-1701 1710 0
-1702 1708 0
-1702 1710 0
-1703 1706 0
-1703 1711 0
-1704 1707 0
-1704 1711 0
-1705 1708 0
-1705 1711 0
-1706 -1707 0
-1706 -1708 0
-1707 -1708 0
-1709 -1710 0
-1709 -1711 0
-1710 -1711 0
c Encoding variable: variant_fields_00001_00004_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00004_00007' direct represents '1' with '1712'
c Var 'variant_fields_00001_00004_00007' direct represents '2' with '1713'
c Var 'variant_fields_00001_00004_00007' direct represents '3' with '1714'
c Var 'variant_fields_00001_00004_00007' direct represents '4' with '1715'
c Var 'variant_fields_00001_00004_00007' direct represents '5' with '1716'
c Var 'variant_fields_00001_00004_00007' direct represents '6' with '1717'
c Var 'variant_fields_00001_00004_00007' direct represents '7' with '1718'
c Var 'variant_fields_00001_00004_00007' direct represents '8' with '1719'
c Var 'variant_fields_00001_00004_00007' direct represents '9' with '1720'
1712 1713 1714 1715 1716 1717 1718 1719 1720 0
-1712 1721 0
-1712 1724 0
-1713 1722 0
-1713 1724 0
-1714 1723 0
-1714 1724 0
-1715 1721 0
-1715 1725 0
-1716 1722 0
-1716 1725 0
-1717 1723 0
-1717 1725 0
-1718 1721 0
-1718 1726 0
-1719 1722 0
-1719 1726 0
-1720 1723 0
-1720 1726 0
-1721 -1722 0
-1721 -1723 0
-1722 -1723 0
-1724 -1725 0
-1724 -1726 0
-1725 -1726 0
c Encoding variable: variant_fields_00001_00004_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00004_00008' direct represents '1' with '1727'
c Var 'variant_fields_00001_00004_00008' direct represents '2' with '1728'
c Var 'variant_fields_00001_00004_00008' direct represents '3' with '1729'
c Var 'variant_fields_00001_00004_00008' direct represents '4' with '1730'
c Var 'variant_fields_00001_00004_00008' direct represents '5' with '1731'
c Var 'variant_fields_00001_00004_00008' direct represents '6' with '1732'
c Var 'variant_fields_00001_00004_00008' direct represents '7' with '1733'
c Var 'variant_fields_00001_00004_00008' direct represents '8' with '1734'
c Var 'variant_fields_00001_00004_00008' direct represents '9' with '1735'
1727 1728 1729 1730 1731 1732 1733 1734 1735 0
-1727 1736 0
-1727 1739 0
-1728 1737 0
-1728 1739 0
-1729 1738 0
-1729 1739 0
-1730 1736 0
-1730 1740 0
-1731 1737 0
-1731 1740 0
-1732 1738 0
-1732 1740 0
-1733 1736 0
-1733 1741 0
-1734 1737 0
-1734 1741 0
-1735 1738 0
-1735 1741 0
-1736 -1737 0
-1736 -1738 0
-1737 -1738 0
-1739 -1740 0
-1739 -1741 0
-1740 -1741 0
c Encoding variable: variant_fields_00001_00004_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00004_00009' direct represents '1' with '1742'
c Var 'variant_fields_00001_00004_00009' direct represents '2' with '1743'
c Var 'variant_fields_00001_00004_00009' direct represents '3' with '1744'
c Var 'variant_fields_00001_00004_00009' direct represents '4' with '1745'
c Var 'variant_fields_00001_00004_00009' direct represents '5' with '1746'
c Var 'variant_fields_00001_00004_00009' direct represents '6' with '1747'
c Var 'variant_fields_00001_00004_00009' direct represents '7' with '1748'
c Var 'variant_fields_00001_00004_00009' direct represents '8' with '1749'
c Var 'variant_fields_00001_00004_00009' direct represents '9' with '1750'
1742 1743 1744 1745 1746 1747 1748 1749 1750 0
-1742 1751 0
-1742 1754 0
-1743 1752 0
-1743 1754 0
-1744 1753 0
-1744 1754 0
-1745 1751 0
-1745 1755 0
-1746 1752 0
-1746 1755 0
-1747 1753 0
-1747 1755 0
-1748 1751 0
-1748 1756 0
-1749 1752 0
-1749 1756 0
-1750 1753 0
-1750 1756 0
-1751 -1752 0
-1751 -1753 0
-1752 -1753 0
-1754 -1755 0
-1754 -1756 0
-1755 -1756 0
c Encoding variable: variant_fields_00001_00005_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00005_00001' direct represents '1' with '1757'
c Var 'variant_fields_00001_00005_00001' direct represents '2' with '1758'
c Var 'variant_fields_00001_00005_00001' direct represents '3' with '1759'
c Var 'variant_fields_00001_00005_00001' direct represents '4' with '1760'
c Var 'variant_fields_00001_00005_00001' direct represents '5' with '1761'
c Var 'variant_fields_00001_00005_00001' direct represents '6' with '1762'
c Var 'variant_fields_00001_00005_00001' direct represents '7' with '1763'
c Var 'variant_fields_00001_00005_00001' direct represents '8' with '1764'
c Var 'variant_fields_00001_00005_00001' direct represents '9' with '1765'
1757 1758 1759 1760 1761 1762 1763 1764 1765 0
-1757 1766 0
-1757 1769 0
-1758 1767 0
-1758 1769 0
-1759 1768 0
-1759 1769 0
-1760 1766 0
-1760 1770 0
-1761 1767 0
-1761 1770 0
-1762 1768 0
-1762 1770 0
-1763 1766 0
-1763 1771 0
-1764 1767 0
-1764 1771 0
-1765 1768 0
-1765 1771 0
-1766 -1767 0
-1766 -1768 0
-1767 -1768 0
-1769 -1770 0
-1769 -1771 0
-1770 -1771 0
c Encoding variable: variant_fields_00001_00005_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00005_00002' direct represents '1' with '1772'
c Var 'variant_fields_00001_00005_00002' direct represents '2' with '1773'
c Var 'variant_fields_00001_00005_00002' direct represents '3' with '1774'
c Var 'variant_fields_00001_00005_00002' direct represents '4' with '1775'
c Var 'variant_fields_00001_00005_00002' direct represents '5' with '1776'
c Var 'variant_fields_00001_00005_00002' direct represents '6' with '1777'
c Var 'variant_fields_00001_00005_00002' direct represents '7' with '1778'
c Var 'variant_fields_00001_00005_00002' direct represents '8' with '1779'
c Var 'variant_fields_00001_00005_00002' direct represents '9' with '1780'
1772 1773 1774 1775 1776 1777 1778 1779 1780 0
-1772 1781 0
-1772 1784 0
-1773 1782 0
-1773 1784 0
-1774 1783 0
-1774 1784 0
-1775 1781 0
-1775 1785 0
-1776 1782 0
-1776 1785 0
-1777 1783 0
-1777 1785 0
-1778 1781 0
-1778 1786 0
-1779 1782 0
-1779 1786 0
-1780 1783 0
-1780 1786 0
-1781 -1782 0
-1781 -1783 0
-1782 -1783 0
-1784 -1785 0
-1784 -1786 0
-1785 -1786 0
c Encoding variable: variant_fields_00001_00005_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00005_00003' direct represents '1' with '1787'
c Var 'variant_fields_00001_00005_00003' direct represents '2' with '1788'
c Var 'variant_fields_00001_00005_00003' direct represents '3' with '1789'
c Var 'variant_fields_00001_00005_00003' direct represents '4' with '1790'
c Var 'variant_fields_00001_00005_00003' direct represents '5' with '1791'
c Var 'variant_fields_00001_00005_00003' direct represents '6' with '1792'
c Var 'variant_fields_00001_00005_00003' direct represents '7' with '1793'
c Var 'variant_fields_00001_00005_00003' direct represents '8' with '1794'
c Var 'variant_fields_00001_00005_00003' direct represents '9' with '1795'
1787 1788 1789 1790 1791 1792 1793 1794 1795 0
-1787 1796 0
-1787 1799 0
-1788 1797 0
-1788 1799 0
-1789 1798 0
-1789 1799 0
-1790 1796 0
-1790 1800 0
-1791 1797 0
-1791 1800 0
-1792 1798 0
-1792 1800 0
-1793 1796 0
-1793 1801 0
-1794 1797 0
-1794 1801 0
-1795 1798 0
-1795 1801 0
-1796 -1797 0
-1796 -1798 0
-1797 -1798 0
-1799 -1800 0
-1799 -1801 0
-1800 -1801 0
c Encoding variable: variant_fields_00001_00005_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00005_00004' direct represents '1' with '1802'
c Var 'variant_fields_00001_00005_00004' direct represents '2' with '1803'
c Var 'variant_fields_00001_00005_00004' direct represents '3' with '1804'
c Var 'variant_fields_00001_00005_00004' direct represents '4' with '1805'
c Var 'variant_fields_00001_00005_00004' direct represents '5' with '1806'
c Var 'variant_fields_00001_00005_00004' direct represents '6' with '1807'
c Var 'variant_fields_00001_00005_00004' direct represents '7' with '1808'
c Var 'variant_fields_00001_00005_00004' direct represents '8' with '1809'
c Var 'variant_fields_00001_00005_00004' direct represents '9' with '1810'
1802 1803 1804 1805 1806 1807 1808 1809 1810 0
-1802 1811 0
-1802 1814 0
-1803 1812 0
-1803 1814 0
-1804 1813 0
-1804 1814 0
-1805 1811 0
-1805 1815 0
-1806 1812 0
-1806 1815 0
-1807 1813 0
-1807 1815 0
-1808 1811 0
-1808 1816 0
-1809 1812 0
-1809 1816 0
-1810 1813 0
-1810 1816 0
-1811 -1812 0
-1811 -1813 0
-1812 -1813 0
-1814 -1815 0
-1814 -1816 0
-1815 -1816 0
c Encoding variable: variant_fields_00001_00005_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00005_00005' direct represents '1' with '1817'
c Var 'variant_fields_00001_00005_00005' direct represents '2' with '1818'
c Var 'variant_fields_00001_00005_00005' direct represents '3' with '1819'
c Var 'variant_fields_00001_00005_00005' direct represents '4' with '1820'
c Var 'variant_fields_00001_00005_00005' direct represents '5' with '1821'
c Var 'variant_fields_00001_00005_00005' direct represents '6' with '1822'
c Var 'variant_fields_00001_00005_00005' direct represents '7' with '1823'
c Var 'variant_fields_00001_00005_00005' direct represents '8' with '1824'
c Var 'variant_fields_00001_00005_00005' direct represents '9' with '1825'
1817 1818 1819 1820 1821 1822 1823 1824 1825 0
-1817 1826 0
-1817 1829 0
-1818 1827 0
-1818 1829 0
-1819 1828 0
-1819 1829 0
-1820 1826 0
-1820 1830 0
-1821 1827 0
-1821 1830 0
-1822 1828 0
-1822 1830 0
-1823 1826 0
-1823 1831 0
-1824 1827 0
-1824 1831 0
-1825 1828 0
-1825 1831 0
-1826 -1827 0
-1826 -1828 0
-1827 -1828 0
-1829 -1830 0
-1829 -1831 0
-1830 -1831 0
c Encoding variable: variant_fields_00001_00005_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00005_00006' direct represents '1' with '1832'
c Var 'variant_fields_00001_00005_00006' direct represents '2' with '1833'
c Var 'variant_fields_00001_00005_00006' direct represents '3' with '1834'
c Var 'variant_fields_00001_00005_00006' direct represents '4' with '1835'
c Var 'variant_fields_00001_00005_00006' direct represents '5' with '1836'
c Var 'variant_fields_00001_00005_00006' direct represents '6' with '1837'
c Var 'variant_fields_00001_00005_00006' direct represents '7' with '1838'
c Var 'variant_fields_00001_00005_00006' direct represents '8' with '1839'
c Var 'variant_fields_00001_00005_00006' direct represents '9' with '1840'
1832 1833 1834 1835 1836 1837 1838 1839 1840 0
-1832 1841 0
-1832 1844 0
-1833 1842 0
-1833 1844 0
-1834 1843 0
-1834 1844 0
-1835 1841 0
-1835 1845 0
-1836 1842 0
-1836 1845 0
-1837 1843 0
-1837 1845 0
-1838 1841 0
-1838 1846 0
-1839 1842 0
-1839 1846 0
-1840 1843 0
-1840 1846 0
-1841 -1842 0
-1841 -1843 0
-1842 -1843 0
-1844 -1845 0
-1844 -1846 0
-1845 -1846 0
c Encoding variable: variant_fields_00001_00005_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00005_00007' direct represents '1' with '1847'
c Var 'variant_fields_00001_00005_00007' direct represents '2' with '1848'
c Var 'variant_fields_00001_00005_00007' direct represents '3' with '1849'
c Var 'variant_fields_00001_00005_00007' direct represents '4' with '1850'
c Var 'variant_fields_00001_00005_00007' direct represents '5' with '1851'
c Var 'variant_fields_00001_00005_00007' direct represents '6' with '1852'
c Var 'variant_fields_00001_00005_00007' direct represents '7' with '1853'
c Var 'variant_fields_00001_00005_00007' direct represents '8' with '1854'
c Var 'variant_fields_00001_00005_00007' direct represents '9' with '1855'
1847 1848 1849 1850 1851 1852 1853 1854 1855 0
-1847 1856 0
-1847 1859 0
-1848 1857 0
-1848 1859 0
-1849 1858 0
-1849 1859 0
-1850 1856 0
-1850 1860 0
-1851 1857 0
-1851 1860 0
-1852 1858 0
-1852 1860 0
-1853 1856 0
-1853 1861 0
-1854 1857 0
-1854 1861 0
-1855 1858 0
-1855 1861 0
-1856 -1857 0
-1856 -1858 0
-1857 -1858 0
-1859 -1860 0
-1859 -1861 0
-1860 -1861 0
c Encoding variable: variant_fields_00001_00005_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00005_00008' direct represents '1' with '1862'
c Var 'variant_fields_00001_00005_00008' direct represents '2' with '1863'
c Var 'variant_fields_00001_00005_00008' direct represents '3' with '1864'
c Var 'variant_fields_00001_00005_00008' direct represents '4' with '1865'
c Var 'variant_fields_00001_00005_00008' direct represents '5' with '1866'
c Var 'variant_fields_00001_00005_00008' direct represents '6' with '1867'
c Var 'variant_fields_00001_00005_00008' direct represents '7' with '1868'
c Var 'variant_fields_00001_00005_00008' direct represents '8' with '1869'
c Var 'variant_fields_00001_00005_00008' direct represents '9' with '1870'
1862 1863 1864 1865 1866 1867 1868 1869 1870 0
-1862 1871 0
-1862 1874 0
-1863 1872 0
-1863 1874 0
-1864 1873 0
-1864 1874 0
-1865 1871 0
-1865 1875 0
-1866 1872 0
-1866 1875 0
-1867 1873 0
-1867 1875 0
-1868 1871 0
-1868 1876 0
-1869 1872 0
-1869 1876 0
-1870 1873 0
-1870 1876 0
-1871 -1872 0
-1871 -1873 0
-1872 -1873 0
-1874 -1875 0
-1874 -1876 0
-1875 -1876 0
c Encoding variable: variant_fields_00001_00005_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00005_00009' direct represents '1' with '1877'
c Var 'variant_fields_00001_00005_00009' direct represents '2' with '1878'
c Var 'variant_fields_00001_00005_00009' direct represents '3' with '1879'
c Var 'variant_fields_00001_00005_00009' direct represents '4' with '1880'
c Var 'variant_fields_00001_00005_00009' direct represents '5' with '1881'
c Var 'variant_fields_00001_00005_00009' direct represents '6' with '1882'
c Var 'variant_fields_00001_00005_00009' direct represents '7' with '1883'
c Var 'variant_fields_00001_00005_00009' direct represents '8' with '1884'
c Var 'variant_fields_00001_00005_00009' direct represents '9' with '1885'
1877 1878 1879 1880 1881 1882 1883 1884 1885 0
-1877 1886 0
-1877 1889 0
-1878 1887 0
-1878 1889 0
-1879 1888 0
-1879 1889 0
-1880 1886 0
-1880 1890 0
-1881 1887 0
-1881 1890 0
-1882 1888 0
-1882 1890 0
-1883 1886 0
-1883 1891 0
-1884 1887 0
-1884 1891 0
-1885 1888 0
-1885 1891 0
-1886 -1887 0
-1886 -1888 0
-1887 -1888 0
-1889 -1890 0
-1889 -1891 0
-1890 -1891 0
c Encoding variable: variant_fields_00001_00006_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00006_00001' order represents '1' with '1892'
c Var 'variant_fields_00001_00006_00001' direct represents '1' with '1892'
c Var 'variant_fields_00001_00006_00001' order represents '2' with '1893'
-1892 1893 0
c Var 'variant_fields_00001_00006_00001' direct represents '2' with '1894'
1892 -1893 1894 0
-1894 1893 0
-1894 -1892 0
c Var 'variant_fields_00001_00006_00001' order represents '3' with '1895'
-1893 1895 0
c Var 'variant_fields_00001_00006_00001' direct represents '3' with '1896'
1893 -1895 1896 0
-1896 1895 0
-1896 -1893 0
c Var 'variant_fields_00001_00006_00001' order represents '4' with '1897'
-1895 1897 0
c Var 'variant_fields_00001_00006_00001' direct represents '4' with '1898'
1895 -1897 1898 0
-1898 1897 0
-1898 -1895 0
c Var 'variant_fields_00001_00006_00001' order represents '5' with '1899'
-1897 1899 0
c Var 'variant_fields_00001_00006_00001' direct represents '5' with '1900'
1897 -1899 1900 0
-1900 1899 0
-1900 -1897 0
c Var 'variant_fields_00001_00006_00001' order represents '6' with '1901'
-1899 1901 0
c Var 'variant_fields_00001_00006_00001' direct represents '6' with '1902'
1899 -1901 1902 0
-1902 1901 0
-1902 -1899 0
c Var 'variant_fields_00001_00006_00001' order represents '7' with '1903'
-1901 1903 0
c Var 'variant_fields_00001_00006_00001' direct represents '7' with '1904'
1901 -1903 1904 0
-1904 1903 0
-1904 -1901 0
c Var 'variant_fields_00001_00006_00001' order represents '8' with '1905'
-1903 1905 0
c Var 'variant_fields_00001_00006_00001' direct represents '8' with '1906'
1903 -1905 1906 0
-1906 1905 0
-1906 -1903 0
c Var 'variant_fields_00001_00006_00001' direct represents '9' with '-1905'
1892 1894 1896 1898 1900 1902 1904 1906 -1905 0
c Encoding variable: variant_fields_00001_00006_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00006_00002' direct represents '1' with '1907'
c Var 'variant_fields_00001_00006_00002' direct represents '2' with '1908'
c Var 'variant_fields_00001_00006_00002' direct represents '3' with '1909'
c Var 'variant_fields_00001_00006_00002' direct represents '4' with '1910'
c Var 'variant_fields_00001_00006_00002' direct represents '5' with '1911'
c Var 'variant_fields_00001_00006_00002' direct represents '6' with '1912'
c Var 'variant_fields_00001_00006_00002' direct represents '7' with '1913'
c Var 'variant_fields_00001_00006_00002' direct represents '8' with '1914'
c Var 'variant_fields_00001_00006_00002' direct represents '9' with '1915'
1907 1908 1909 1910 1911 1912 1913 1914 1915 0
-1907 1916 0
-1907 1919 0
-1908 1917 0
-1908 1919 0
-1909 1918 0
-1909 1919 0
-1910 1916 0
-1910 1920 0
-1911 1917 0
-1911 1920 0
-1912 1918 0
-1912 1920 0
-1913 1916 0
-1913 1921 0
-1914 1917 0
-1914 1921 0
-1915 1918 0
-1915 1921 0
-1916 -1917 0
-1916 -1918 0
-1917 -1918 0
-1919 -1920 0
-1919 -1921 0
-1920 -1921 0
c Encoding variable: variant_fields_00001_00006_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00006_00003' direct represents '1' with '1922'
c Var 'variant_fields_00001_00006_00003' direct represents '2' with '1923'
c Var 'variant_fields_00001_00006_00003' direct represents '3' with '1924'
c Var 'variant_fields_00001_00006_00003' direct represents '4' with '1925'
c Var 'variant_fields_00001_00006_00003' direct represents '5' with '1926'
c Var 'variant_fields_00001_00006_00003' direct represents '6' with '1927'
c Var 'variant_fields_00001_00006_00003' direct represents '7' with '1928'
c Var 'variant_fields_00001_00006_00003' direct represents '8' with '1929'
c Var 'variant_fields_00001_00006_00003' direct represents '9' with '1930'
1922 1923 1924 1925 1926 1927 1928 1929 1930 0
-1922 1931 0
-1922 1934 0
-1923 1932 0
-1923 1934 0
-1924 1933 0
-1924 1934 0
-1925 1931 0
-1925 1935 0
-1926 1932 0
-1926 1935 0
-1927 1933 0
-1927 1935 0
-1928 1931 0
-1928 1936 0
-1929 1932 0
-1929 1936 0
-1930 1933 0
-1930 1936 0
-1931 -1932 0
-1931 -1933 0
-1932 -1933 0
-1934 -1935 0
-1934 -1936 0
-1935 -1936 0
c Encoding variable: variant_fields_00001_00006_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00006_00004' direct represents '1' with '1937'
c Var 'variant_fields_00001_00006_00004' direct represents '2' with '1938'
c Var 'variant_fields_00001_00006_00004' direct represents '3' with '1939'
c Var 'variant_fields_00001_00006_00004' direct represents '4' with '1940'
c Var 'variant_fields_00001_00006_00004' direct represents '5' with '1941'
c Var 'variant_fields_00001_00006_00004' direct represents '6' with '1942'
c Var 'variant_fields_00001_00006_00004' direct represents '7' with '1943'
c Var 'variant_fields_00001_00006_00004' direct represents '8' with '1944'
c Var 'variant_fields_00001_00006_00004' direct represents '9' with '1945'
1937 1938 1939 1940 1941 1942 1943 1944 1945 0
-1937 1946 0
-1937 1949 0
-1938 1947 0
-1938 1949 0
-1939 1948 0
-1939 1949 0
-1940 1946 0
-1940 1950 0
-1941 1947 0
-1941 1950 0
-1942 1948 0
-1942 1950 0
-1943 1946 0
-1943 1951 0
-1944 1947 0
-1944 1951 0
-1945 1948 0
-1945 1951 0
-1946 -1947 0
-1946 -1948 0
-1947 -1948 0
-1949 -1950 0
-1949 -1951 0
-1950 -1951 0
c Encoding variable: variant_fields_00001_00006_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00006_00005' direct represents '1' with '1952'
c Var 'variant_fields_00001_00006_00005' direct represents '2' with '1953'
c Var 'variant_fields_00001_00006_00005' direct represents '3' with '1954'
c Var 'variant_fields_00001_00006_00005' direct represents '4' with '1955'
c Var 'variant_fields_00001_00006_00005' direct represents '5' with '1956'
c Var 'variant_fields_00001_00006_00005' direct represents '6' with '1957'
c Var 'variant_fields_00001_00006_00005' direct represents '7' with '1958'
c Var 'variant_fields_00001_00006_00005' direct represents '8' with '1959'
c Var 'variant_fields_00001_00006_00005' direct represents '9' with '1960'
1952 1953 1954 1955 1956 1957 1958 1959 1960 0
-1952 1961 0
-1952 1964 0
-1953 1962 0
-1953 1964 0
-1954 1963 0
-1954 1964 0
-1955 1961 0
-1955 1965 0
-1956 1962 0
-1956 1965 0
-1957 1963 0
-1957 1965 0
-1958 1961 0
-1958 1966 0
-1959 1962 0
-1959 1966 0
-1960 1963 0
-1960 1966 0
-1961 -1962 0
-1961 -1963 0
-1962 -1963 0
-1964 -1965 0
-1964 -1966 0
-1965 -1966 0
c Encoding variable: variant_fields_00001_00006_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00006_00006' direct represents '1' with '1967'
c Var 'variant_fields_00001_00006_00006' direct represents '2' with '1968'
c Var 'variant_fields_00001_00006_00006' direct represents '3' with '1969'
c Var 'variant_fields_00001_00006_00006' direct represents '4' with '1970'
c Var 'variant_fields_00001_00006_00006' direct represents '5' with '1971'
c Var 'variant_fields_00001_00006_00006' direct represents '6' with '1972'
c Var 'variant_fields_00001_00006_00006' direct represents '7' with '1973'
c Var 'variant_fields_00001_00006_00006' direct represents '8' with '1974'
c Var 'variant_fields_00001_00006_00006' direct represents '9' with '1975'
1967 1968 1969 1970 1971 1972 1973 1974 1975 0
-1967 1976 0
-1967 1979 0
-1968 1977 0
-1968 1979 0
-1969 1978 0
-1969 1979 0
-1970 1976 0
-1970 1980 0
-1971 1977 0
-1971 1980 0
-1972 1978 0
-1972 1980 0
-1973 1976 0
-1973 1981 0
-1974 1977 0
-1974 1981 0
-1975 1978 0
-1975 1981 0
-1976 -1977 0
-1976 -1978 0
-1977 -1978 0
-1979 -1980 0
-1979 -1981 0
-1980 -1981 0
c Encoding variable: variant_fields_00001_00006_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00006_00007' direct represents '1' with '1982'
c Var 'variant_fields_00001_00006_00007' direct represents '2' with '1983'
c Var 'variant_fields_00001_00006_00007' direct represents '3' with '1984'
c Var 'variant_fields_00001_00006_00007' direct represents '4' with '1985'
c Var 'variant_fields_00001_00006_00007' direct represents '5' with '1986'
c Var 'variant_fields_00001_00006_00007' direct represents '6' with '1987'
c Var 'variant_fields_00001_00006_00007' direct represents '7' with '1988'
c Var 'variant_fields_00001_00006_00007' direct represents '8' with '1989'
c Var 'variant_fields_00001_00006_00007' direct represents '9' with '1990'
1982 1983 1984 1985 1986 1987 1988 1989 1990 0
-1982 1991 0
-1982 1994 0
-1983 1992 0
-1983 1994 0
-1984 1993 0
-1984 1994 0
-1985 1991 0
-1985 1995 0
-1986 1992 0
-1986 1995 0
-1987 1993 0
-1987 1995 0
-1988 1991 0
-1988 1996 0
-1989 1992 0
-1989 1996 0
-1990 1993 0
-1990 1996 0
-1991 -1992 0
-1991 -1993 0
-1992 -1993 0
-1994 -1995 0
-1994 -1996 0
-1995 -1996 0
c Encoding variable: variant_fields_00001_00006_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00006_00008' direct represents '1' with '1997'
c Var 'variant_fields_00001_00006_00008' direct represents '2' with '1998'
c Var 'variant_fields_00001_00006_00008' direct represents '3' with '1999'
c Var 'variant_fields_00001_00006_00008' direct represents '4' with '2000'
c Var 'variant_fields_00001_00006_00008' direct represents '5' with '2001'
c Var 'variant_fields_00001_00006_00008' direct represents '6' with '2002'
c Var 'variant_fields_00001_00006_00008' direct represents '7' with '2003'
c Var 'variant_fields_00001_00006_00008' direct represents '8' with '2004'
c Var 'variant_fields_00001_00006_00008' direct represents '9' with '2005'
1997 1998 1999 2000 2001 2002 2003 2004 2005 0
-1997 2006 0
-1997 2009 0
-1998 2007 0
-1998 2009 0
-1999 2008 0
-1999 2009 0
-2000 2006 0
-2000 2010 0
-2001 2007 0
-2001 2010 0
-2002 2008 0
-2002 2010 0
-2003 2006 0
-2003 2011 0
-2004 2007 0
-2004 2011 0
-2005 2008 0
-2005 2011 0
-2006 -2007 0
-2006 -2008 0
-2007 -2008 0
-2009 -2010 0
-2009 -2011 0
-2010 -2011 0
c Encoding variable: variant_fields_00001_00006_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00006_00009' direct represents '1' with '2012'
c Var 'variant_fields_00001_00006_00009' direct represents '2' with '2013'
c Var 'variant_fields_00001_00006_00009' direct represents '3' with '2014'
c Var 'variant_fields_00001_00006_00009' direct represents '4' with '2015'
c Var 'variant_fields_00001_00006_00009' direct represents '5' with '2016'
c Var 'variant_fields_00001_00006_00009' direct represents '6' with '2017'
c Var 'variant_fields_00001_00006_00009' direct represents '7' with '2018'
c Var 'variant_fields_00001_00006_00009' direct represents '8' with '2019'
c Var 'variant_fields_00001_00006_00009' direct represents '9' with '2020'
2012 2013 2014 2015 2016 2017 2018 2019 2020 0
-2012 2021 0
-2012 2024 0
-2013 2022 0
-2013 2024 0
-2014 2023 0
-2014 2024 0
-2015 2021 0
-2015 2025 0
-2016 2022 0
-2016 2025 0
-2017 2023 0
-2017 2025 0
-2018 2021 0
-2018 2026 0
-2019 2022 0
-2019 2026 0
-2020 2023 0
-2020 2026 0
-2021 -2022 0
-2021 -2023 0
-2022 -2023 0
-2024 -2025 0
-2024 -2026 0
-2025 -2026 0
c Encoding variable: variant_fields_00001_00007_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00007_00001' direct represents '1' with '2027'
c Var 'variant_fields_00001_00007_00001' direct represents '2' with '2028'
c Var 'variant_fields_00001_00007_00001' direct represents '3' with '2029'
c Var 'variant_fields_00001_00007_00001' direct represents '4' with '2030'
c Var 'variant_fields_00001_00007_00001' direct represents '5' with '2031'
c Var 'variant_fields_00001_00007_00001' direct represents '6' with '2032'
c Var 'variant_fields_00001_00007_00001' direct represents '7' with '2033'
c Var 'variant_fields_00001_00007_00001' direct represents '8' with '2034'
c Var 'variant_fields_00001_00007_00001' direct represents '9' with '2035'
2027 2028 2029 2030 2031 2032 2033 2034 2035 0
-2027 2036 0
-2027 2039 0
-2028 2037 0
-2028 2039 0
-2029 2038 0
-2029 2039 0
-2030 2036 0
-2030 2040 0
-2031 2037 0
-2031 2040 0
-2032 2038 0
-2032 2040 0
-2033 2036 0
-2033 2041 0
-2034 2037 0
-2034 2041 0
-2035 2038 0
-2035 2041 0
-2036 -2037 0
-2036 -2038 0
-2037 -2038 0
-2039 -2040 0
-2039 -2041 0
-2040 -2041 0
c Encoding variable: variant_fields_00001_00007_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00007_00002' direct represents '1' with '2042'
c Var 'variant_fields_00001_00007_00002' direct represents '2' with '2043'
c Var 'variant_fields_00001_00007_00002' direct represents '3' with '2044'
c Var 'variant_fields_00001_00007_00002' direct represents '4' with '2045'
c Var 'variant_fields_00001_00007_00002' direct represents '5' with '2046'
c Var 'variant_fields_00001_00007_00002' direct represents '6' with '2047'
c Var 'variant_fields_00001_00007_00002' direct represents '7' with '2048'
c Var 'variant_fields_00001_00007_00002' direct represents '8' with '2049'
c Var 'variant_fields_00001_00007_00002' direct represents '9' with '2050'
2042 2043 2044 2045 2046 2047 2048 2049 2050 0
-2042 2051 0
-2042 2054 0
-2043 2052 0
-2043 2054 0
-2044 2053 0
-2044 2054 0
-2045 2051 0
-2045 2055 0
-2046 2052 0
-2046 2055 0
-2047 2053 0
-2047 2055 0
-2048 2051 0
-2048 2056 0
-2049 2052 0
-2049 2056 0
-2050 2053 0
-2050 2056 0
-2051 -2052 0
-2051 -2053 0
-2052 -2053 0
-2054 -2055 0
-2054 -2056 0
-2055 -2056 0
c Encoding variable: variant_fields_00001_00007_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00007_00003' direct represents '1' with '2057'
c Var 'variant_fields_00001_00007_00003' direct represents '2' with '2058'
c Var 'variant_fields_00001_00007_00003' direct represents '3' with '2059'
c Var 'variant_fields_00001_00007_00003' direct represents '4' with '2060'
c Var 'variant_fields_00001_00007_00003' direct represents '5' with '2061'
c Var 'variant_fields_00001_00007_00003' direct represents '6' with '2062'
c Var 'variant_fields_00001_00007_00003' direct represents '7' with '2063'
c Var 'variant_fields_00001_00007_00003' direct represents '8' with '2064'
c Var 'variant_fields_00001_00007_00003' direct represents '9' with '2065'
2057 2058 2059 2060 2061 2062 2063 2064 2065 0
-2057 2066 0
-2057 2069 0
-2058 2067 0
-2058 2069 0
-2059 2068 0
-2059 2069 0
-2060 2066 0
-2060 2070 0
-2061 2067 0
-2061 2070 0
-2062 2068 0
-2062 2070 0
-2063 2066 0
-2063 2071 0
-2064 2067 0
-2064 2071 0
-2065 2068 0
-2065 2071 0
-2066 -2067 0
-2066 -2068 0
-2067 -2068 0
-2069 -2070 0
-2069 -2071 0
-2070 -2071 0
c Encoding variable: variant_fields_00001_00007_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00007_00004' direct represents '1' with '2072'
c Var 'variant_fields_00001_00007_00004' direct represents '2' with '2073'
c Var 'variant_fields_00001_00007_00004' direct represents '3' with '2074'
c Var 'variant_fields_00001_00007_00004' direct represents '4' with '2075'
c Var 'variant_fields_00001_00007_00004' direct represents '5' with '2076'
c Var 'variant_fields_00001_00007_00004' direct represents '6' with '2077'
c Var 'variant_fields_00001_00007_00004' direct represents '7' with '2078'
c Var 'variant_fields_00001_00007_00004' direct represents '8' with '2079'
c Var 'variant_fields_00001_00007_00004' direct represents '9' with '2080'
2072 2073 2074 2075 2076 2077 2078 2079 2080 0
-2072 2081 0
-2072 2084 0
-2073 2082 0
-2073 2084 0
-2074 2083 0
-2074 2084 0
-2075 2081 0
-2075 2085 0
-2076 2082 0
-2076 2085 0
-2077 2083 0
-2077 2085 0
-2078 2081 0
-2078 2086 0
-2079 2082 0
-2079 2086 0
-2080 2083 0
-2080 2086 0
-2081 -2082 0
-2081 -2083 0
-2082 -2083 0
-2084 -2085 0
-2084 -2086 0
-2085 -2086 0
c Encoding variable: variant_fields_00001_00007_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00007_00005' direct represents '1' with '2087'
c Var 'variant_fields_00001_00007_00005' direct represents '2' with '2088'
c Var 'variant_fields_00001_00007_00005' direct represents '3' with '2089'
c Var 'variant_fields_00001_00007_00005' direct represents '4' with '2090'
c Var 'variant_fields_00001_00007_00005' direct represents '5' with '2091'
c Var 'variant_fields_00001_00007_00005' direct represents '6' with '2092'
c Var 'variant_fields_00001_00007_00005' direct represents '7' with '2093'
c Var 'variant_fields_00001_00007_00005' direct represents '8' with '2094'
c Var 'variant_fields_00001_00007_00005' direct represents '9' with '2095'
2087 2088 2089 2090 2091 2092 2093 2094 2095 0
-2087 2096 0
-2087 2099 0
-2088 2097 0
-2088 2099 0
-2089 2098 0
-2089 2099 0
-2090 2096 0
-2090 2100 0
-2091 2097 0
-2091 2100 0
-2092 2098 0
-2092 2100 0
-2093 2096 0
-2093 2101 0
-2094 2097 0
-2094 2101 0
-2095 2098 0
-2095 2101 0
-2096 -2097 0
-2096 -2098 0
-2097 -2098 0
-2099 -2100 0
-2099 -2101 0
-2100 -2101 0
c Encoding variable: variant_fields_00001_00007_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00007_00006' direct represents '1' with '2102'
c Var 'variant_fields_00001_00007_00006' direct represents '2' with '2103'
c Var 'variant_fields_00001_00007_00006' direct represents '3' with '2104'
c Var 'variant_fields_00001_00007_00006' direct represents '4' with '2105'
c Var 'variant_fields_00001_00007_00006' direct represents '5' with '2106'
c Var 'variant_fields_00001_00007_00006' direct represents '6' with '2107'
c Var 'variant_fields_00001_00007_00006' direct represents '7' with '2108'
c Var 'variant_fields_00001_00007_00006' direct represents '8' with '2109'
c Var 'variant_fields_00001_00007_00006' direct represents '9' with '2110'
2102 2103 2104 2105 2106 2107 2108 2109 2110 0
-2102 2111 0
-2102 2114 0
-2103 2112 0
-2103 2114 0
-2104 2113 0
-2104 2114 0
-2105 2111 0
-2105 2115 0
-2106 2112 0
-2106 2115 0
-2107 2113 0
-2107 2115 0
-2108 2111 0
-2108 2116 0
-2109 2112 0
-2109 2116 0
-2110 2113 0
-2110 2116 0
-2111 -2112 0
-2111 -2113 0
-2112 -2113 0
-2114 -2115 0
-2114 -2116 0
-2115 -2116 0
c Encoding variable: variant_fields_00001_00007_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00007_00007' direct represents '1' with '2117'
c Var 'variant_fields_00001_00007_00007' direct represents '2' with '2118'
c Var 'variant_fields_00001_00007_00007' direct represents '3' with '2119'
c Var 'variant_fields_00001_00007_00007' direct represents '4' with '2120'
c Var 'variant_fields_00001_00007_00007' direct represents '5' with '2121'
c Var 'variant_fields_00001_00007_00007' direct represents '6' with '2122'
c Var 'variant_fields_00001_00007_00007' direct represents '7' with '2123'
c Var 'variant_fields_00001_00007_00007' direct represents '8' with '2124'
c Var 'variant_fields_00001_00007_00007' direct represents '9' with '2125'
2117 2118 2119 2120 2121 2122 2123 2124 2125 0
-2117 2126 0
-2117 2129 0
-2118 2127 0
-2118 2129 0
-2119 2128 0
-2119 2129 0
-2120 2126 0
-2120 2130 0
-2121 2127 0
-2121 2130 0
-2122 2128 0
-2122 2130 0
-2123 2126 0
-2123 2131 0
-2124 2127 0
-2124 2131 0
-2125 2128 0
-2125 2131 0
-2126 -2127 0
-2126 -2128 0
-2127 -2128 0
-2129 -2130 0
-2129 -2131 0
-2130 -2131 0
c Encoding variable: variant_fields_00001_00007_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00007_00008' direct represents '1' with '2132'
c Var 'variant_fields_00001_00007_00008' direct represents '2' with '2133'
c Var 'variant_fields_00001_00007_00008' direct represents '3' with '2134'
c Var 'variant_fields_00001_00007_00008' direct represents '4' with '2135'
c Var 'variant_fields_00001_00007_00008' direct represents '5' with '2136'
c Var 'variant_fields_00001_00007_00008' direct represents '6' with '2137'
c Var 'variant_fields_00001_00007_00008' direct represents '7' with '2138'
c Var 'variant_fields_00001_00007_00008' direct represents '8' with '2139'
c Var 'variant_fields_00001_00007_00008' direct represents '9' with '2140'
2132 2133 2134 2135 2136 2137 2138 2139 2140 0
-2132 2141 0
-2132 2144 0
-2133 2142 0
-2133 2144 0
-2134 2143 0
-2134 2144 0
-2135 2141 0
-2135 2145 0
-2136 2142 0
-2136 2145 0
-2137 2143 0
-2137 2145 0
-2138 2141 0
-2138 2146 0
-2139 2142 0
-2139 2146 0
-2140 2143 0
-2140 2146 0
-2141 -2142 0
-2141 -2143 0
-2142 -2143 0
-2144 -2145 0
-2144 -2146 0
-2145 -2146 0
c Encoding variable: variant_fields_00001_00007_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00007_00009' direct represents '1' with '2147'
c Var 'variant_fields_00001_00007_00009' direct represents '2' with '2148'
c Var 'variant_fields_00001_00007_00009' direct represents '3' with '2149'
c Var 'variant_fields_00001_00007_00009' direct represents '4' with '2150'
c Var 'variant_fields_00001_00007_00009' direct represents '5' with '2151'
c Var 'variant_fields_00001_00007_00009' direct represents '6' with '2152'
c Var 'variant_fields_00001_00007_00009' direct represents '7' with '2153'
c Var 'variant_fields_00001_00007_00009' direct represents '8' with '2154'
c Var 'variant_fields_00001_00007_00009' direct represents '9' with '2155'
2147 2148 2149 2150 2151 2152 2153 2154 2155 0
-2147 2156 0
-2147 2159 0
-2148 2157 0
-2148 2159 0
-2149 2158 0
-2149 2159 0
-2150 2156 0
-2150 2160 0
-2151 2157 0
-2151 2160 0
-2152 2158 0
-2152 2160 0
-2153 2156 0
-2153 2161 0
-2154 2157 0
-2154 2161 0
-2155 2158 0
-2155 2161 0
-2156 -2157 0
-2156 -2158 0
-2157 -2158 0
-2159 -2160 0
-2159 -2161 0
-2160 -2161 0
c Encoding variable: variant_fields_00001_00008_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00001_00008_00001' order represents '1' with '2162'
c Var 'variant_fields_00001_00008_00001' direct represents '1' with '2162'
c Var 'variant_fields_00001_00008_00001' order represents '2' with '2163'
-2162 2163 0
c Var 'variant_fields_00001_00008_00001' direct represents '2' with '2164'
2162 -2163 2164 0
-2164 2163 0
-2164 -2162 0
c Var 'variant_fields_00001_00008_00001' order represents '3' with '2165'
-2163 2165 0
c Var 'variant_fields_00001_00008_00001' direct represents '3' with '2166'
2163 -2165 2166 0
-2166 2165 0
-2166 -2163 0
c Var 'variant_fields_00001_00008_00001' order represents '4' with '2167'
-2165 2167 0
c Var 'variant_fields_00001_00008_00001' direct represents '4' with '2168'
2165 -2167 2168 0
-2168 2167 0
-2168 -2165 0
c Var 'variant_fields_00001_00008_00001' order represents '5' with '2169'
-2167 2169 0
c Var 'variant_fields_00001_00008_00001' direct represents '5' with '2170'
2167 -2169 2170 0
-2170 2169 0
-2170 -2167 0
c Var 'variant_fields_00001_00008_00001' order represents '6' with '2171'
-2169 2171 0
c Var 'variant_fields_00001_00008_00001' direct represents '6' with '2172'
2169 -2171 2172 0
-2172 2171 0
-2172 -2169 0
c Var 'variant_fields_00001_00008_00001' order represents '7' with '2173'
-2171 2173 0
c Var 'variant_fields_00001_00008_00001' direct represents '7' with '2174'
2171 -2173 2174 0
-2174 2173 0
-2174 -2171 0
c Var 'variant_fields_00001_00008_00001' order represents '8' with '2175'
-2173 2175 0
c Var 'variant_fields_00001_00008_00001' direct represents '8' with '2176'
2173 -2175 2176 0
-2176 2175 0
-2176 -2173 0
c Var 'variant_fields_00001_00008_00001' direct represents '9' with '-2175'
2162 2164 2166 2168 2170 2172 2174 2176 -2175 0
c Encoding variable: variant_fields_00001_00008_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00008_00002' direct represents '1' with '2177'
c Var 'variant_fields_00001_00008_00002' direct represents '2' with '2178'
c Var 'variant_fields_00001_00008_00002' direct represents '3' with '2179'
c Var 'variant_fields_00001_00008_00002' direct represents '4' with '2180'
c Var 'variant_fields_00001_00008_00002' direct represents '5' with '2181'
c Var 'variant_fields_00001_00008_00002' direct represents '6' with '2182'
c Var 'variant_fields_00001_00008_00002' direct represents '7' with '2183'
c Var 'variant_fields_00001_00008_00002' direct represents '8' with '2184'
c Var 'variant_fields_00001_00008_00002' direct represents '9' with '2185'
2177 2178 2179 2180 2181 2182 2183 2184 2185 0
-2177 2186 0
-2177 2189 0
-2178 2187 0
-2178 2189 0
-2179 2188 0
-2179 2189 0
-2180 2186 0
-2180 2190 0
-2181 2187 0
-2181 2190 0
-2182 2188 0
-2182 2190 0
-2183 2186 0
-2183 2191 0
-2184 2187 0
-2184 2191 0
-2185 2188 0
-2185 2191 0
-2186 -2187 0
-2186 -2188 0
-2187 -2188 0
-2189 -2190 0
-2189 -2191 0
-2190 -2191 0
c Encoding variable: variant_fields_00001_00008_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00008_00003' direct represents '1' with '2192'
c Var 'variant_fields_00001_00008_00003' direct represents '2' with '2193'
c Var 'variant_fields_00001_00008_00003' direct represents '3' with '2194'
c Var 'variant_fields_00001_00008_00003' direct represents '4' with '2195'
c Var 'variant_fields_00001_00008_00003' direct represents '5' with '2196'
c Var 'variant_fields_00001_00008_00003' direct represents '6' with '2197'
c Var 'variant_fields_00001_00008_00003' direct represents '7' with '2198'
c Var 'variant_fields_00001_00008_00003' direct represents '8' with '2199'
c Var 'variant_fields_00001_00008_00003' direct represents '9' with '2200'
2192 2193 2194 2195 2196 2197 2198 2199 2200 0
-2192 2201 0
-2192 2204 0
-2193 2202 0
-2193 2204 0
-2194 2203 0
-2194 2204 0
-2195 2201 0
-2195 2205 0
-2196 2202 0
-2196 2205 0
-2197 2203 0
-2197 2205 0
-2198 2201 0
-2198 2206 0
-2199 2202 0
-2199 2206 0
-2200 2203 0
-2200 2206 0
-2201 -2202 0
-2201 -2203 0
-2202 -2203 0
-2204 -2205 0
-2204 -2206 0
-2205 -2206 0
c Encoding variable: variant_fields_00001_00008_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00008_00004' direct represents '1' with '2207'
c Var 'variant_fields_00001_00008_00004' direct represents '2' with '2208'
c Var 'variant_fields_00001_00008_00004' direct represents '3' with '2209'
c Var 'variant_fields_00001_00008_00004' direct represents '4' with '2210'
c Var 'variant_fields_00001_00008_00004' direct represents '5' with '2211'
c Var 'variant_fields_00001_00008_00004' direct represents '6' with '2212'
c Var 'variant_fields_00001_00008_00004' direct represents '7' with '2213'
c Var 'variant_fields_00001_00008_00004' direct represents '8' with '2214'
c Var 'variant_fields_00001_00008_00004' direct represents '9' with '2215'
2207 2208 2209 2210 2211 2212 2213 2214 2215 0
-2207 2216 0
-2207 2219 0
-2208 2217 0
-2208 2219 0
-2209 2218 0
-2209 2219 0
-2210 2216 0
-2210 2220 0
-2211 2217 0
-2211 2220 0
-2212 2218 0
-2212 2220 0
-2213 2216 0
-2213 2221 0
-2214 2217 0
-2214 2221 0
-2215 2218 0
-2215 2221 0
-2216 -2217 0
-2216 -2218 0
-2217 -2218 0
-2219 -2220 0
-2219 -2221 0
-2220 -2221 0
c Encoding variable: variant_fields_00001_00008_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00008_00005' direct represents '1' with '2222'
c Var 'variant_fields_00001_00008_00005' direct represents '2' with '2223'
c Var 'variant_fields_00001_00008_00005' direct represents '3' with '2224'
c Var 'variant_fields_00001_00008_00005' direct represents '4' with '2225'
c Var 'variant_fields_00001_00008_00005' direct represents '5' with '2226'
c Var 'variant_fields_00001_00008_00005' direct represents '6' with '2227'
c Var 'variant_fields_00001_00008_00005' direct represents '7' with '2228'
c Var 'variant_fields_00001_00008_00005' direct represents '8' with '2229'
c Var 'variant_fields_00001_00008_00005' direct represents '9' with '2230'
2222 2223 2224 2225 2226 2227 2228 2229 2230 0
-2222 2231 0
-2222 2234 0
-2223 2232 0
-2223 2234 0
-2224 2233 0
-2224 2234 0
-2225 2231 0
-2225 2235 0
-2226 2232 0
-2226 2235 0
-2227 2233 0
-2227 2235 0
-2228 2231 0
-2228 2236 0
-2229 2232 0
-2229 2236 0
-2230 2233 0
-2230 2236 0
-2231 -2232 0
-2231 -2233 0
-2232 -2233 0
-2234 -2235 0
-2234 -2236 0
-2235 -2236 0
c Encoding variable: variant_fields_00001_00008_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00008_00006' direct represents '1' with '2237'
c Var 'variant_fields_00001_00008_00006' direct represents '2' with '2238'
c Var 'variant_fields_00001_00008_00006' direct represents '3' with '2239'
c Var 'variant_fields_00001_00008_00006' direct represents '4' with '2240'
c Var 'variant_fields_00001_00008_00006' direct represents '5' with '2241'
c Var 'variant_fields_00001_00008_00006' direct represents '6' with '2242'
c Var 'variant_fields_00001_00008_00006' direct represents '7' with '2243'
c Var 'variant_fields_00001_00008_00006' direct represents '8' with '2244'
c Var 'variant_fields_00001_00008_00006' direct represents '9' with '2245'
2237 2238 2239 2240 2241 2242 2243 2244 2245 0
-2237 2246 0
-2237 2249 0
-2238 2247 0
-2238 2249 0
-2239 2248 0
-2239 2249 0
-2240 2246 0
-2240 2250 0
-2241 2247 0
-2241 2250 0
-2242 2248 0
-2242 2250 0
-2243 2246 0
-2243 2251 0
-2244 2247 0
-2244 2251 0
-2245 2248 0
-2245 2251 0
-2246 -2247 0
-2246 -2248 0
-2247 -2248 0
-2249 -2250 0
-2249 -2251 0
-2250 -2251 0
c Encoding variable: variant_fields_00001_00008_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00008_00007' direct represents '1' with '2252'
c Var 'variant_fields_00001_00008_00007' direct represents '2' with '2253'
c Var 'variant_fields_00001_00008_00007' direct represents '3' with '2254'
c Var 'variant_fields_00001_00008_00007' direct represents '4' with '2255'
c Var 'variant_fields_00001_00008_00007' direct represents '5' with '2256'
c Var 'variant_fields_00001_00008_00007' direct represents '6' with '2257'
c Var 'variant_fields_00001_00008_00007' direct represents '7' with '2258'
c Var 'variant_fields_00001_00008_00007' direct represents '8' with '2259'
c Var 'variant_fields_00001_00008_00007' direct represents '9' with '2260'
2252 2253 2254 2255 2256 2257 2258 2259 2260 0
-2252 2261 0
-2252 2264 0
-2253 2262 0
-2253 2264 0
-2254 2263 0
-2254 2264 0
-2255 2261 0
-2255 2265 0
-2256 2262 0
-2256 2265 0
-2257 2263 0
-2257 2265 0
-2258 2261 0
-2258 2266 0
-2259 2262 0
-2259 2266 0
-2260 2263 0
-2260 2266 0
-2261 -2262 0
-2261 -2263 0
-2262 -2263 0
-2264 -2265 0
-2264 -2266 0
-2265 -2266 0
c Encoding variable: variant_fields_00001_00008_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00008_00008' direct represents '1' with '2267'
c Var 'variant_fields_00001_00008_00008' direct represents '2' with '2268'
c Var 'variant_fields_00001_00008_00008' direct represents '3' with '2269'
c Var 'variant_fields_00001_00008_00008' direct represents '4' with '2270'
c Var 'variant_fields_00001_00008_00008' direct represents '5' with '2271'
c Var 'variant_fields_00001_00008_00008' direct represents '6' with '2272'
c Var 'variant_fields_00001_00008_00008' direct represents '7' with '2273'
c Var 'variant_fields_00001_00008_00008' direct represents '8' with '2274'
c Var 'variant_fields_00001_00008_00008' direct represents '9' with '2275'
2267 2268 2269 2270 2271 2272 2273 2274 2275 0
-2267 2276 0
-2267 2279 0
-2268 2277 0
-2268 2279 0
-2269 2278 0
-2269 2279 0
-2270 2276 0
-2270 2280 0
-2271 2277 0
-2271 2280 0
-2272 2278 0
-2272 2280 0
-2273 2276 0
-2273 2281 0
-2274 2277 0
-2274 2281 0
-2275 2278 0
-2275 2281 0
-2276 -2277 0
-2276 -2278 0
-2277 -2278 0
-2279 -2280 0
-2279 -2281 0
-2280 -2281 0
c Encoding variable: variant_fields_00001_00008_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00008_00009' direct represents '1' with '2282'
c Var 'variant_fields_00001_00008_00009' direct represents '2' with '2283'
c Var 'variant_fields_00001_00008_00009' direct represents '3' with '2284'
c Var 'variant_fields_00001_00008_00009' direct represents '4' with '2285'
c Var 'variant_fields_00001_00008_00009' direct represents '5' with '2286'
c Var 'variant_fields_00001_00008_00009' direct represents '6' with '2287'
c Var 'variant_fields_00001_00008_00009' direct represents '7' with '2288'
c Var 'variant_fields_00001_00008_00009' direct represents '8' with '2289'
c Var 'variant_fields_00001_00008_00009' direct represents '9' with '2290'
2282 2283 2284 2285 2286 2287 2288 2289 2290 0
-2282 2291 0
-2282 2294 0
-2283 2292 0
-2283 2294 0
-2284 2293 0
-2284 2294 0
-2285 2291 0
-2285 2295 0
-2286 2292 0
-2286 2295 0
-2287 2293 0
-2287 2295 0
-2288 2291 0
-2288 2296 0
-2289 2292 0
-2289 2296 0
-2290 2293 0
-2290 2296 0
-2291 -2292 0
-2291 -2293 0
-2292 -2293 0
-2294 -2295 0
-2294 -2296 0
-2295 -2296 0
c Encoding variable: variant_fields_00001_00009_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00009_00001' direct represents '1' with '2297'
c Var 'variant_fields_00001_00009_00001' direct represents '2' with '2298'
c Var 'variant_fields_00001_00009_00001' direct represents '3' with '2299'
c Var 'variant_fields_00001_00009_00001' direct represents '4' with '2300'
c Var 'variant_fields_00001_00009_00001' direct represents '5' with '2301'
c Var 'variant_fields_00001_00009_00001' direct represents '6' with '2302'
c Var 'variant_fields_00001_00009_00001' direct represents '7' with '2303'
c Var 'variant_fields_00001_00009_00001' direct represents '8' with '2304'
c Var 'variant_fields_00001_00009_00001' direct represents '9' with '2305'
2297 2298 2299 2300 2301 2302 2303 2304 2305 0
-2297 2306 0
-2297 2309 0
-2298 2307 0
-2298 2309 0
-2299 2308 0
-2299 2309 0
-2300 2306 0
-2300 2310 0
-2301 2307 0
-2301 2310 0
-2302 2308 0
-2302 2310 0
-2303 2306 0
-2303 2311 0
-2304 2307 0
-2304 2311 0
-2305 2308 0
-2305 2311 0
-2306 -2307 0
-2306 -2308 0
-2307 -2308 0
-2309 -2310 0
-2309 -2311 0
-2310 -2311 0
c Encoding variable: variant_fields_00001_00009_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00009_00002' direct represents '1' with '2312'
c Var 'variant_fields_00001_00009_00002' direct represents '2' with '2313'
c Var 'variant_fields_00001_00009_00002' direct represents '3' with '2314'
c Var 'variant_fields_00001_00009_00002' direct represents '4' with '2315'
c Var 'variant_fields_00001_00009_00002' direct represents '5' with '2316'
c Var 'variant_fields_00001_00009_00002' direct represents '6' with '2317'
c Var 'variant_fields_00001_00009_00002' direct represents '7' with '2318'
c Var 'variant_fields_00001_00009_00002' direct represents '8' with '2319'
c Var 'variant_fields_00001_00009_00002' direct represents '9' with '2320'
2312 2313 2314 2315 2316 2317 2318 2319 2320 0
-2312 2321 0
-2312 2324 0
-2313 2322 0
-2313 2324 0
-2314 2323 0
-2314 2324 0
-2315 2321 0
-2315 2325 0
-2316 2322 0
-2316 2325 0
-2317 2323 0
-2317 2325 0
-2318 2321 0
-2318 2326 0
-2319 2322 0
-2319 2326 0
-2320 2323 0
-2320 2326 0
-2321 -2322 0
-2321 -2323 0
-2322 -2323 0
-2324 -2325 0
-2324 -2326 0
-2325 -2326 0
c Encoding variable: variant_fields_00001_00009_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00009_00003' direct represents '1' with '2327'
c Var 'variant_fields_00001_00009_00003' direct represents '2' with '2328'
c Var 'variant_fields_00001_00009_00003' direct represents '3' with '2329'
c Var 'variant_fields_00001_00009_00003' direct represents '4' with '2330'
c Var 'variant_fields_00001_00009_00003' direct represents '5' with '2331'
c Var 'variant_fields_00001_00009_00003' direct represents '6' with '2332'
c Var 'variant_fields_00001_00009_00003' direct represents '7' with '2333'
c Var 'variant_fields_00001_00009_00003' direct represents '8' with '2334'
c Var 'variant_fields_00001_00009_00003' direct represents '9' with '2335'
2327 2328 2329 2330 2331 2332 2333 2334 2335 0
-2327 2336 0
-2327 2339 0
-2328 2337 0
-2328 2339 0
-2329 2338 0
-2329 2339 0
-2330 2336 0
-2330 2340 0
-2331 2337 0
-2331 2340 0
-2332 2338 0
-2332 2340 0
-2333 2336 0
-2333 2341 0
-2334 2337 0
-2334 2341 0
-2335 2338 0
-2335 2341 0
-2336 -2337 0
-2336 -2338 0
-2337 -2338 0
-2339 -2340 0
-2339 -2341 0
-2340 -2341 0
c Encoding variable: variant_fields_00001_00009_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00009_00004' direct represents '1' with '2342'
c Var 'variant_fields_00001_00009_00004' direct represents '2' with '2343'
c Var 'variant_fields_00001_00009_00004' direct represents '3' with '2344'
c Var 'variant_fields_00001_00009_00004' direct represents '4' with '2345'
c Var 'variant_fields_00001_00009_00004' direct represents '5' with '2346'
c Var 'variant_fields_00001_00009_00004' direct represents '6' with '2347'
c Var 'variant_fields_00001_00009_00004' direct represents '7' with '2348'
c Var 'variant_fields_00001_00009_00004' direct represents '8' with '2349'
c Var 'variant_fields_00001_00009_00004' direct represents '9' with '2350'
2342 2343 2344 2345 2346 2347 2348 2349 2350 0
-2342 2351 0
-2342 2354 0
-2343 2352 0
-2343 2354 0
-2344 2353 0
-2344 2354 0
-2345 2351 0
-2345 2355 0
-2346 2352 0
-2346 2355 0
-2347 2353 0
-2347 2355 0
-2348 2351 0
-2348 2356 0
-2349 2352 0
-2349 2356 0
-2350 2353 0
-2350 2356 0
-2351 -2352 0
-2351 -2353 0
-2352 -2353 0
-2354 -2355 0
-2354 -2356 0
-2355 -2356 0
c Encoding variable: variant_fields_00001_00009_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00009_00005' direct represents '1' with '2357'
c Var 'variant_fields_00001_00009_00005' direct represents '2' with '2358'
c Var 'variant_fields_00001_00009_00005' direct represents '3' with '2359'
c Var 'variant_fields_00001_00009_00005' direct represents '4' with '2360'
c Var 'variant_fields_00001_00009_00005' direct represents '5' with '2361'
c Var 'variant_fields_00001_00009_00005' direct represents '6' with '2362'
c Var 'variant_fields_00001_00009_00005' direct represents '7' with '2363'
c Var 'variant_fields_00001_00009_00005' direct represents '8' with '2364'
c Var 'variant_fields_00001_00009_00005' direct represents '9' with '2365'
2357 2358 2359 2360 2361 2362 2363 2364 2365 0
-2357 2366 0
-2357 2369 0
-2358 2367 0
-2358 2369 0
-2359 2368 0
-2359 2369 0
-2360 2366 0
-2360 2370 0
-2361 2367 0
-2361 2370 0
-2362 2368 0
-2362 2370 0
-2363 2366 0
-2363 2371 0
-2364 2367 0
-2364 2371 0
-2365 2368 0
-2365 2371 0
-2366 -2367 0
-2366 -2368 0
-2367 -2368 0
-2369 -2370 0
-2369 -2371 0
-2370 -2371 0
c Encoding variable: variant_fields_00001_00009_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00009_00006' direct represents '1' with '2372'
c Var 'variant_fields_00001_00009_00006' direct represents '2' with '2373'
c Var 'variant_fields_00001_00009_00006' direct represents '3' with '2374'
c Var 'variant_fields_00001_00009_00006' direct represents '4' with '2375'
c Var 'variant_fields_00001_00009_00006' direct represents '5' with '2376'
c Var 'variant_fields_00001_00009_00006' direct represents '6' with '2377'
c Var 'variant_fields_00001_00009_00006' direct represents '7' with '2378'
c Var 'variant_fields_00001_00009_00006' direct represents '8' with '2379'
c Var 'variant_fields_00001_00009_00006' direct represents '9' with '2380'
2372 2373 2374 2375 2376 2377 2378 2379 2380 0
-2372 2381 0
-2372 2384 0
-2373 2382 0
-2373 2384 0
-2374 2383 0
-2374 2384 0
-2375 2381 0
-2375 2385 0
-2376 2382 0
-2376 2385 0
-2377 2383 0
-2377 2385 0
-2378 2381 0
-2378 2386 0
-2379 2382 0
-2379 2386 0
-2380 2383 0
-2380 2386 0
-2381 -2382 0
-2381 -2383 0
-2382 -2383 0
-2384 -2385 0
-2384 -2386 0
-2385 -2386 0
c Encoding variable: variant_fields_00001_00009_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00009_00007' direct represents '1' with '2387'
c Var 'variant_fields_00001_00009_00007' direct represents '2' with '2388'
c Var 'variant_fields_00001_00009_00007' direct represents '3' with '2389'
c Var 'variant_fields_00001_00009_00007' direct represents '4' with '2390'
c Var 'variant_fields_00001_00009_00007' direct represents '5' with '2391'
c Var 'variant_fields_00001_00009_00007' direct represents '6' with '2392'
c Var 'variant_fields_00001_00009_00007' direct represents '7' with '2393'
c Var 'variant_fields_00001_00009_00007' direct represents '8' with '2394'
c Var 'variant_fields_00001_00009_00007' direct represents '9' with '2395'
2387 2388 2389 2390 2391 2392 2393 2394 2395 0
-2387 2396 0
-2387 2399 0
-2388 2397 0
-2388 2399 0
-2389 2398 0
-2389 2399 0
-2390 2396 0
-2390 2400 0
-2391 2397 0
-2391 2400 0
-2392 2398 0
-2392 2400 0
-2393 2396 0
-2393 2401 0
-2394 2397 0
-2394 2401 0
-2395 2398 0
-2395 2401 0
-2396 -2397 0
-2396 -2398 0
-2397 -2398 0
-2399 -2400 0
-2399 -2401 0
-2400 -2401 0
c Encoding variable: variant_fields_00001_00009_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00009_00008' direct represents '1' with '2402'
c Var 'variant_fields_00001_00009_00008' direct represents '2' with '2403'
c Var 'variant_fields_00001_00009_00008' direct represents '3' with '2404'
c Var 'variant_fields_00001_00009_00008' direct represents '4' with '2405'
c Var 'variant_fields_00001_00009_00008' direct represents '5' with '2406'
c Var 'variant_fields_00001_00009_00008' direct represents '6' with '2407'
c Var 'variant_fields_00001_00009_00008' direct represents '7' with '2408'
c Var 'variant_fields_00001_00009_00008' direct represents '8' with '2409'
c Var 'variant_fields_00001_00009_00008' direct represents '9' with '2410'
2402 2403 2404 2405 2406 2407 2408 2409 2410 0
-2402 2411 0
-2402 2414 0
-2403 2412 0
-2403 2414 0
-2404 2413 0
-2404 2414 0
-2405 2411 0
-2405 2415 0
-2406 2412 0
-2406 2415 0
-2407 2413 0
-2407 2415 0
-2408 2411 0
-2408 2416 0
-2409 2412 0
-2409 2416 0
-2410 2413 0
-2410 2416 0
-2411 -2412 0
-2411 -2413 0
-2412 -2413 0
-2414 -2415 0
-2414 -2416 0
-2415 -2416 0
c Encoding variable: variant_fields_00001_00009_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00001_00009_00009' direct represents '1' with '2417'
c Var 'variant_fields_00001_00009_00009' direct represents '2' with '2418'
c Var 'variant_fields_00001_00009_00009' direct represents '3' with '2419'
c Var 'variant_fields_00001_00009_00009' direct represents '4' with '2420'
c Var 'variant_fields_00001_00009_00009' direct represents '5' with '2421'
c Var 'variant_fields_00001_00009_00009' direct represents '6' with '2422'
c Var 'variant_fields_00001_00009_00009' direct represents '7' with '2423'
c Var 'variant_fields_00001_00009_00009' direct represents '8' with '2424'
c Var 'variant_fields_00001_00009_00009' direct represents '9' with '2425'
2417 2418 2419 2420 2421 2422 2423 2424 2425 0
-2417 2426 0
-2417 2429 0
-2418 2427 0
-2418 2429 0
-2419 2428 0
-2419 2429 0
-2420 2426 0
-2420 2430 0
-2421 2427 0
-2421 2430 0
-2422 2428 0
-2422 2430 0
-2423 2426 0
-2423 2431 0
-2424 2427 0
-2424 2431 0
-2425 2428 0
-2425 2431 0
-2426 -2427 0
-2426 -2428 0
-2427 -2428 0
-2429 -2430 0
-2429 -2431 0
-2430 -2431 0
c Encoding variable: variant_fields_00002_00001_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00001_00001' direct represents '1' with '2432'
c Var 'variant_fields_00002_00001_00001' direct represents '2' with '2433'
c Var 'variant_fields_00002_00001_00001' direct represents '3' with '2434'
c Var 'variant_fields_00002_00001_00001' direct represents '4' with '2435'
c Var 'variant_fields_00002_00001_00001' direct represents '5' with '2436'
c Var 'variant_fields_00002_00001_00001' direct represents '6' with '2437'
c Var 'variant_fields_00002_00001_00001' direct represents '7' with '2438'
c Var 'variant_fields_00002_00001_00001' direct represents '8' with '2439'
c Var 'variant_fields_00002_00001_00001' direct represents '9' with '2440'
2432 2433 2434 2435 2436 2437 2438 2439 2440 0
-2432 2441 0
-2432 2444 0
-2433 2442 0
-2433 2444 0
-2434 2443 0
-2434 2444 0
-2435 2441 0
-2435 2445 0
-2436 2442 0
-2436 2445 0
-2437 2443 0
-2437 2445 0
-2438 2441 0
-2438 2446 0
-2439 2442 0
-2439 2446 0
-2440 2443 0
-2440 2446 0
-2441 -2442 0
-2441 -2443 0
-2442 -2443 0
-2444 -2445 0
-2444 -2446 0
-2445 -2446 0
c Encoding variable: variant_fields_00002_00001_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00001_00002' direct represents '1' with '2447'
c Var 'variant_fields_00002_00001_00002' direct represents '2' with '2448'
c Var 'variant_fields_00002_00001_00002' direct represents '3' with '2449'
c Var 'variant_fields_00002_00001_00002' direct represents '4' with '2450'
c Var 'variant_fields_00002_00001_00002' direct represents '5' with '2451'
c Var 'variant_fields_00002_00001_00002' direct represents '6' with '2452'
c Var 'variant_fields_00002_00001_00002' direct represents '7' with '2453'
c Var 'variant_fields_00002_00001_00002' direct represents '8' with '2454'
c Var 'variant_fields_00002_00001_00002' direct represents '9' with '2455'
2447 2448 2449 2450 2451 2452 2453 2454 2455 0
-2447 2456 0
-2447 2459 0
-2448 2457 0
-2448 2459 0
-2449 2458 0
-2449 2459 0
-2450 2456 0
-2450 2460 0
-2451 2457 0
-2451 2460 0
-2452 2458 0
-2452 2460 0
-2453 2456 0
-2453 2461 0
-2454 2457 0
-2454 2461 0
-2455 2458 0
-2455 2461 0
-2456 -2457 0
-2456 -2458 0
-2457 -2458 0
-2459 -2460 0
-2459 -2461 0
-2460 -2461 0
c Encoding variable: variant_fields_00002_00001_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00001_00003' direct represents '1' with '2462'
c Var 'variant_fields_00002_00001_00003' direct represents '2' with '2463'
c Var 'variant_fields_00002_00001_00003' direct represents '3' with '2464'
c Var 'variant_fields_00002_00001_00003' direct represents '4' with '2465'
c Var 'variant_fields_00002_00001_00003' direct represents '5' with '2466'
c Var 'variant_fields_00002_00001_00003' direct represents '6' with '2467'
c Var 'variant_fields_00002_00001_00003' direct represents '7' with '2468'
c Var 'variant_fields_00002_00001_00003' direct represents '8' with '2469'
c Var 'variant_fields_00002_00001_00003' direct represents '9' with '2470'
2462 2463 2464 2465 2466 2467 2468 2469 2470 0
-2462 2471 0
-2462 2474 0
-2463 2472 0
-2463 2474 0
-2464 2473 0
-2464 2474 0
-2465 2471 0
-2465 2475 0
-2466 2472 0
-2466 2475 0
-2467 2473 0
-2467 2475 0
-2468 2471 0
-2468 2476 0
-2469 2472 0
-2469 2476 0
-2470 2473 0
-2470 2476 0
-2471 -2472 0
-2471 -2473 0
-2472 -2473 0
-2474 -2475 0
-2474 -2476 0
-2475 -2476 0
c Encoding variable: variant_fields_00002_00001_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00001_00004' direct represents '1' with '2477'
c Var 'variant_fields_00002_00001_00004' direct represents '2' with '2478'
c Var 'variant_fields_00002_00001_00004' direct represents '3' with '2479'
c Var 'variant_fields_00002_00001_00004' direct represents '4' with '2480'
c Var 'variant_fields_00002_00001_00004' direct represents '5' with '2481'
c Var 'variant_fields_00002_00001_00004' direct represents '6' with '2482'
c Var 'variant_fields_00002_00001_00004' direct represents '7' with '2483'
c Var 'variant_fields_00002_00001_00004' direct represents '8' with '2484'
c Var 'variant_fields_00002_00001_00004' direct represents '9' with '2485'
2477 2478 2479 2480 2481 2482 2483 2484 2485 0
-2477 2486 0
-2477 2489 0
-2478 2487 0
-2478 2489 0
-2479 2488 0
-2479 2489 0
-2480 2486 0
-2480 2490 0
-2481 2487 0
-2481 2490 0
-2482 2488 0
-2482 2490 0
-2483 2486 0
-2483 2491 0
-2484 2487 0
-2484 2491 0
-2485 2488 0
-2485 2491 0
-2486 -2487 0
-2486 -2488 0
-2487 -2488 0
-2489 -2490 0
-2489 -2491 0
-2490 -2491 0
c Encoding variable: variant_fields_00002_00001_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00001_00005' direct represents '1' with '2492'
c Var 'variant_fields_00002_00001_00005' direct represents '2' with '2493'
c Var 'variant_fields_00002_00001_00005' direct represents '3' with '2494'
c Var 'variant_fields_00002_00001_00005' direct represents '4' with '2495'
c Var 'variant_fields_00002_00001_00005' direct represents '5' with '2496'
c Var 'variant_fields_00002_00001_00005' direct represents '6' with '2497'
c Var 'variant_fields_00002_00001_00005' direct represents '7' with '2498'
c Var 'variant_fields_00002_00001_00005' direct represents '8' with '2499'
c Var 'variant_fields_00002_00001_00005' direct represents '9' with '2500'
2492 2493 2494 2495 2496 2497 2498 2499 2500 0
-2492 2501 0
-2492 2504 0
-2493 2502 0
-2493 2504 0
-2494 2503 0
-2494 2504 0
-2495 2501 0
-2495 2505 0
-2496 2502 0
-2496 2505 0
-2497 2503 0
-2497 2505 0
-2498 2501 0
-2498 2506 0
-2499 2502 0
-2499 2506 0
-2500 2503 0
-2500 2506 0
-2501 -2502 0
-2501 -2503 0
-2502 -2503 0
-2504 -2505 0
-2504 -2506 0
-2505 -2506 0
c Encoding variable: variant_fields_00002_00001_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00001_00006' direct represents '1' with '2507'
c Var 'variant_fields_00002_00001_00006' direct represents '2' with '2508'
c Var 'variant_fields_00002_00001_00006' direct represents '3' with '2509'
c Var 'variant_fields_00002_00001_00006' direct represents '4' with '2510'
c Var 'variant_fields_00002_00001_00006' direct represents '5' with '2511'
c Var 'variant_fields_00002_00001_00006' direct represents '6' with '2512'
c Var 'variant_fields_00002_00001_00006' direct represents '7' with '2513'
c Var 'variant_fields_00002_00001_00006' direct represents '8' with '2514'
c Var 'variant_fields_00002_00001_00006' direct represents '9' with '2515'
2507 2508 2509 2510 2511 2512 2513 2514 2515 0
-2507 2516 0
-2507 2519 0
-2508 2517 0
-2508 2519 0
-2509 2518 0
-2509 2519 0
-2510 2516 0
-2510 2520 0
-2511 2517 0
-2511 2520 0
-2512 2518 0
-2512 2520 0
-2513 2516 0
-2513 2521 0
-2514 2517 0
-2514 2521 0
-2515 2518 0
-2515 2521 0
-2516 -2517 0
-2516 -2518 0
-2517 -2518 0
-2519 -2520 0
-2519 -2521 0
-2520 -2521 0
c Encoding variable: variant_fields_00002_00001_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00001_00007' direct represents '1' with '2522'
c Var 'variant_fields_00002_00001_00007' direct represents '2' with '2523'
c Var 'variant_fields_00002_00001_00007' direct represents '3' with '2524'
c Var 'variant_fields_00002_00001_00007' direct represents '4' with '2525'
c Var 'variant_fields_00002_00001_00007' direct represents '5' with '2526'
c Var 'variant_fields_00002_00001_00007' direct represents '6' with '2527'
c Var 'variant_fields_00002_00001_00007' direct represents '7' with '2528'
c Var 'variant_fields_00002_00001_00007' direct represents '8' with '2529'
c Var 'variant_fields_00002_00001_00007' direct represents '9' with '2530'
2522 2523 2524 2525 2526 2527 2528 2529 2530 0
-2522 2531 0
-2522 2534 0
-2523 2532 0
-2523 2534 0
-2524 2533 0
-2524 2534 0
-2525 2531 0
-2525 2535 0
-2526 2532 0
-2526 2535 0
-2527 2533 0
-2527 2535 0
-2528 2531 0
-2528 2536 0
-2529 2532 0
-2529 2536 0
-2530 2533 0
-2530 2536 0
-2531 -2532 0
-2531 -2533 0
-2532 -2533 0
-2534 -2535 0
-2534 -2536 0
-2535 -2536 0
c Encoding variable: variant_fields_00002_00001_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00001_00008' direct represents '1' with '2537'
c Var 'variant_fields_00002_00001_00008' direct represents '2' with '2538'
c Var 'variant_fields_00002_00001_00008' direct represents '3' with '2539'
c Var 'variant_fields_00002_00001_00008' direct represents '4' with '2540'
c Var 'variant_fields_00002_00001_00008' direct represents '5' with '2541'
c Var 'variant_fields_00002_00001_00008' direct represents '6' with '2542'
c Var 'variant_fields_00002_00001_00008' direct represents '7' with '2543'
c Var 'variant_fields_00002_00001_00008' direct represents '8' with '2544'
c Var 'variant_fields_00002_00001_00008' direct represents '9' with '2545'
2537 2538 2539 2540 2541 2542 2543 2544 2545 0
-2537 2546 0
-2537 2549 0
-2538 2547 0
-2538 2549 0
-2539 2548 0
-2539 2549 0
-2540 2546 0
-2540 2550 0
-2541 2547 0
-2541 2550 0
-2542 2548 0
-2542 2550 0
-2543 2546 0
-2543 2551 0
-2544 2547 0
-2544 2551 0
-2545 2548 0
-2545 2551 0
-2546 -2547 0
-2546 -2548 0
-2547 -2548 0
-2549 -2550 0
-2549 -2551 0
-2550 -2551 0
c Encoding variable: variant_fields_00002_00001_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00001_00009' direct represents '1' with '2552'
c Var 'variant_fields_00002_00001_00009' direct represents '2' with '2553'
c Var 'variant_fields_00002_00001_00009' direct represents '3' with '2554'
c Var 'variant_fields_00002_00001_00009' direct represents '4' with '2555'
c Var 'variant_fields_00002_00001_00009' direct represents '5' with '2556'
c Var 'variant_fields_00002_00001_00009' direct represents '6' with '2557'
c Var 'variant_fields_00002_00001_00009' direct represents '7' with '2558'
c Var 'variant_fields_00002_00001_00009' direct represents '8' with '2559'
c Var 'variant_fields_00002_00001_00009' direct represents '9' with '2560'
2552 2553 2554 2555 2556 2557 2558 2559 2560 0
-2552 2561 0
-2552 2564 0
-2553 2562 0
-2553 2564 0
-2554 2563 0
-2554 2564 0
-2555 2561 0
-2555 2565 0
-2556 2562 0
-2556 2565 0
-2557 2563 0
-2557 2565 0
-2558 2561 0
-2558 2566 0
-2559 2562 0
-2559 2566 0
-2560 2563 0
-2560 2566 0
-2561 -2562 0
-2561 -2563 0
-2562 -2563 0
-2564 -2565 0
-2564 -2566 0
-2565 -2566 0
c Encoding variable: variant_fields_00002_00002_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00002_00001' order represents '1' with '2567'
c Var 'variant_fields_00002_00002_00001' direct represents '1' with '2567'
c Var 'variant_fields_00002_00002_00001' order represents '2' with '2568'
-2567 2568 0
c Var 'variant_fields_00002_00002_00001' direct represents '2' with '2569'
2567 -2568 2569 0
-2569 2568 0
-2569 -2567 0
c Var 'variant_fields_00002_00002_00001' order represents '3' with '2570'
-2568 2570 0
c Var 'variant_fields_00002_00002_00001' direct represents '3' with '2571'
2568 -2570 2571 0
-2571 2570 0
-2571 -2568 0
c Var 'variant_fields_00002_00002_00001' order represents '4' with '2572'
-2570 2572 0
c Var 'variant_fields_00002_00002_00001' direct represents '4' with '2573'
2570 -2572 2573 0
-2573 2572 0
-2573 -2570 0
c Var 'variant_fields_00002_00002_00001' order represents '5' with '2574'
-2572 2574 0
c Var 'variant_fields_00002_00002_00001' direct represents '5' with '2575'
2572 -2574 2575 0
-2575 2574 0
-2575 -2572 0
c Var 'variant_fields_00002_00002_00001' order represents '6' with '2576'
-2574 2576 0
c Var 'variant_fields_00002_00002_00001' direct represents '6' with '2577'
2574 -2576 2577 0
-2577 2576 0
-2577 -2574 0
c Var 'variant_fields_00002_00002_00001' order represents '7' with '2578'
-2576 2578 0
c Var 'variant_fields_00002_00002_00001' direct represents '7' with '2579'
2576 -2578 2579 0
-2579 2578 0
-2579 -2576 0
c Var 'variant_fields_00002_00002_00001' order represents '8' with '2580'
-2578 2580 0
c Var 'variant_fields_00002_00002_00001' direct represents '8' with '2581'
2578 -2580 2581 0
-2581 2580 0
-2581 -2578 0
c Var 'variant_fields_00002_00002_00001' direct represents '9' with '-2580'
2567 2569 2571 2573 2575 2577 2579 2581 -2580 0
c Encoding variable: variant_fields_00002_00002_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00002_00002' direct represents '1' with '2582'
c Var 'variant_fields_00002_00002_00002' direct represents '2' with '2583'
c Var 'variant_fields_00002_00002_00002' direct represents '3' with '2584'
c Var 'variant_fields_00002_00002_00002' direct represents '4' with '2585'
c Var 'variant_fields_00002_00002_00002' direct represents '5' with '2586'
c Var 'variant_fields_00002_00002_00002' direct represents '6' with '2587'
c Var 'variant_fields_00002_00002_00002' direct represents '7' with '2588'
c Var 'variant_fields_00002_00002_00002' direct represents '8' with '2589'
c Var 'variant_fields_00002_00002_00002' direct represents '9' with '2590'
2582 2583 2584 2585 2586 2587 2588 2589 2590 0
-2582 2591 0
-2582 2594 0
-2583 2592 0
-2583 2594 0
-2584 2593 0
-2584 2594 0
-2585 2591 0
-2585 2595 0
-2586 2592 0
-2586 2595 0
-2587 2593 0
-2587 2595 0
-2588 2591 0
-2588 2596 0
-2589 2592 0
-2589 2596 0
-2590 2593 0
-2590 2596 0
-2591 -2592 0
-2591 -2593 0
-2592 -2593 0
-2594 -2595 0
-2594 -2596 0
-2595 -2596 0
c Encoding variable: variant_fields_00002_00002_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00002_00003' direct represents '1' with '2597'
c Var 'variant_fields_00002_00002_00003' direct represents '2' with '2598'
c Var 'variant_fields_00002_00002_00003' direct represents '3' with '2599'
c Var 'variant_fields_00002_00002_00003' direct represents '4' with '2600'
c Var 'variant_fields_00002_00002_00003' direct represents '5' with '2601'
c Var 'variant_fields_00002_00002_00003' direct represents '6' with '2602'
c Var 'variant_fields_00002_00002_00003' direct represents '7' with '2603'
c Var 'variant_fields_00002_00002_00003' direct represents '8' with '2604'
c Var 'variant_fields_00002_00002_00003' direct represents '9' with '2605'
2597 2598 2599 2600 2601 2602 2603 2604 2605 0
-2597 2606 0
-2597 2609 0
-2598 2607 0
-2598 2609 0
-2599 2608 0
-2599 2609 0
-2600 2606 0
-2600 2610 0
-2601 2607 0
-2601 2610 0
-2602 2608 0
-2602 2610 0
-2603 2606 0
-2603 2611 0
-2604 2607 0
-2604 2611 0
-2605 2608 0
-2605 2611 0
-2606 -2607 0
-2606 -2608 0
-2607 -2608 0
-2609 -2610 0
-2609 -2611 0
-2610 -2611 0
c Encoding variable: variant_fields_00002_00002_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00002_00004' direct represents '1' with '2612'
c Var 'variant_fields_00002_00002_00004' direct represents '2' with '2613'
c Var 'variant_fields_00002_00002_00004' direct represents '3' with '2614'
c Var 'variant_fields_00002_00002_00004' direct represents '4' with '2615'
c Var 'variant_fields_00002_00002_00004' direct represents '5' with '2616'
c Var 'variant_fields_00002_00002_00004' direct represents '6' with '2617'
c Var 'variant_fields_00002_00002_00004' direct represents '7' with '2618'
c Var 'variant_fields_00002_00002_00004' direct represents '8' with '2619'
c Var 'variant_fields_00002_00002_00004' direct represents '9' with '2620'
2612 2613 2614 2615 2616 2617 2618 2619 2620 0
-2612 2621 0
-2612 2624 0
-2613 2622 0
-2613 2624 0
-2614 2623 0
-2614 2624 0
-2615 2621 0
-2615 2625 0
-2616 2622 0
-2616 2625 0
-2617 2623 0
-2617 2625 0
-2618 2621 0
-2618 2626 0
-2619 2622 0
-2619 2626 0
-2620 2623 0
-2620 2626 0
-2621 -2622 0
-2621 -2623 0
-2622 -2623 0
-2624 -2625 0
-2624 -2626 0
-2625 -2626 0
c Encoding variable: variant_fields_00002_00002_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00002_00005' direct represents '1' with '2627'
c Var 'variant_fields_00002_00002_00005' direct represents '2' with '2628'
c Var 'variant_fields_00002_00002_00005' direct represents '3' with '2629'
c Var 'variant_fields_00002_00002_00005' direct represents '4' with '2630'
c Var 'variant_fields_00002_00002_00005' direct represents '5' with '2631'
c Var 'variant_fields_00002_00002_00005' direct represents '6' with '2632'
c Var 'variant_fields_00002_00002_00005' direct represents '7' with '2633'
c Var 'variant_fields_00002_00002_00005' direct represents '8' with '2634'
c Var 'variant_fields_00002_00002_00005' direct represents '9' with '2635'
2627 2628 2629 2630 2631 2632 2633 2634 2635 0
-2627 2636 0
-2627 2639 0
-2628 2637 0
-2628 2639 0
-2629 2638 0
-2629 2639 0
-2630 2636 0
-2630 2640 0
-2631 2637 0
-2631 2640 0
-2632 2638 0
-2632 2640 0
-2633 2636 0
-2633 2641 0
-2634 2637 0
-2634 2641 0
-2635 2638 0
-2635 2641 0
-2636 -2637 0
-2636 -2638 0
-2637 -2638 0
-2639 -2640 0
-2639 -2641 0
-2640 -2641 0
c Encoding variable: variant_fields_00002_00002_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00002_00006' direct represents '1' with '2642'
c Var 'variant_fields_00002_00002_00006' direct represents '2' with '2643'
c Var 'variant_fields_00002_00002_00006' direct represents '3' with '2644'
c Var 'variant_fields_00002_00002_00006' direct represents '4' with '2645'
c Var 'variant_fields_00002_00002_00006' direct represents '5' with '2646'
c Var 'variant_fields_00002_00002_00006' direct represents '6' with '2647'
c Var 'variant_fields_00002_00002_00006' direct represents '7' with '2648'
c Var 'variant_fields_00002_00002_00006' direct represents '8' with '2649'
c Var 'variant_fields_00002_00002_00006' direct represents '9' with '2650'
2642 2643 2644 2645 2646 2647 2648 2649 2650 0
-2642 2651 0
-2642 2654 0
-2643 2652 0
-2643 2654 0
-2644 2653 0
-2644 2654 0
-2645 2651 0
-2645 2655 0
-2646 2652 0
-2646 2655 0
-2647 2653 0
-2647 2655 0
-2648 2651 0
-2648 2656 0
-2649 2652 0
-2649 2656 0
-2650 2653 0
-2650 2656 0
-2651 -2652 0
-2651 -2653 0
-2652 -2653 0
-2654 -2655 0
-2654 -2656 0
-2655 -2656 0
c Encoding variable: variant_fields_00002_00002_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00002_00007' direct represents '1' with '2657'
c Var 'variant_fields_00002_00002_00007' direct represents '2' with '2658'
c Var 'variant_fields_00002_00002_00007' direct represents '3' with '2659'
c Var 'variant_fields_00002_00002_00007' direct represents '4' with '2660'
c Var 'variant_fields_00002_00002_00007' direct represents '5' with '2661'
c Var 'variant_fields_00002_00002_00007' direct represents '6' with '2662'
c Var 'variant_fields_00002_00002_00007' direct represents '7' with '2663'
c Var 'variant_fields_00002_00002_00007' direct represents '8' with '2664'
c Var 'variant_fields_00002_00002_00007' direct represents '9' with '2665'
2657 2658 2659 2660 2661 2662 2663 2664 2665 0
-2657 2666 0
-2657 2669 0
-2658 2667 0
-2658 2669 0
-2659 2668 0
-2659 2669 0
-2660 2666 0
-2660 2670 0
-2661 2667 0
-2661 2670 0
-2662 2668 0
-2662 2670 0
-2663 2666 0
-2663 2671 0
-2664 2667 0
-2664 2671 0
-2665 2668 0
-2665 2671 0
-2666 -2667 0
-2666 -2668 0
-2667 -2668 0
-2669 -2670 0
-2669 -2671 0
-2670 -2671 0
c Encoding variable: variant_fields_00002_00002_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00002_00008' direct represents '1' with '2672'
c Var 'variant_fields_00002_00002_00008' direct represents '2' with '2673'
c Var 'variant_fields_00002_00002_00008' direct represents '3' with '2674'
c Var 'variant_fields_00002_00002_00008' direct represents '4' with '2675'
c Var 'variant_fields_00002_00002_00008' direct represents '5' with '2676'
c Var 'variant_fields_00002_00002_00008' direct represents '6' with '2677'
c Var 'variant_fields_00002_00002_00008' direct represents '7' with '2678'
c Var 'variant_fields_00002_00002_00008' direct represents '8' with '2679'
c Var 'variant_fields_00002_00002_00008' direct represents '9' with '2680'
2672 2673 2674 2675 2676 2677 2678 2679 2680 0
-2672 2681 0
-2672 2684 0
-2673 2682 0
-2673 2684 0
-2674 2683 0
-2674 2684 0
-2675 2681 0
-2675 2685 0
-2676 2682 0
-2676 2685 0
-2677 2683 0
-2677 2685 0
-2678 2681 0
-2678 2686 0
-2679 2682 0
-2679 2686 0
-2680 2683 0
-2680 2686 0
-2681 -2682 0
-2681 -2683 0
-2682 -2683 0
-2684 -2685 0
-2684 -2686 0
-2685 -2686 0
c Encoding variable: variant_fields_00002_00002_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00002_00009' direct represents '1' with '2687'
c Var 'variant_fields_00002_00002_00009' direct represents '2' with '2688'
c Var 'variant_fields_00002_00002_00009' direct represents '3' with '2689'
c Var 'variant_fields_00002_00002_00009' direct represents '4' with '2690'
c Var 'variant_fields_00002_00002_00009' direct represents '5' with '2691'
c Var 'variant_fields_00002_00002_00009' direct represents '6' with '2692'
c Var 'variant_fields_00002_00002_00009' direct represents '7' with '2693'
c Var 'variant_fields_00002_00002_00009' direct represents '8' with '2694'
c Var 'variant_fields_00002_00002_00009' direct represents '9' with '2695'
2687 2688 2689 2690 2691 2692 2693 2694 2695 0
-2687 2696 0
-2687 2699 0
-2688 2697 0
-2688 2699 0
-2689 2698 0
-2689 2699 0
-2690 2696 0
-2690 2700 0
-2691 2697 0
-2691 2700 0
-2692 2698 0
-2692 2700 0
-2693 2696 0
-2693 2701 0
-2694 2697 0
-2694 2701 0
-2695 2698 0
-2695 2701 0
-2696 -2697 0
-2696 -2698 0
-2697 -2698 0
-2699 -2700 0
-2699 -2701 0
-2700 -2701 0
c Encoding variable: variant_fields_00002_00003_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00003_00001' direct represents '1' with '2702'
c Var 'variant_fields_00002_00003_00001' direct represents '2' with '2703'
c Var 'variant_fields_00002_00003_00001' direct represents '3' with '2704'
c Var 'variant_fields_00002_00003_00001' direct represents '4' with '2705'
c Var 'variant_fields_00002_00003_00001' direct represents '5' with '2706'
c Var 'variant_fields_00002_00003_00001' direct represents '6' with '2707'
c Var 'variant_fields_00002_00003_00001' direct represents '7' with '2708'
c Var 'variant_fields_00002_00003_00001' direct represents '8' with '2709'
c Var 'variant_fields_00002_00003_00001' direct represents '9' with '2710'
2702 2703 2704 2705 2706 2707 2708 2709 2710 0
-2702 2711 0
-2702 2714 0
-2703 2712 0
-2703 2714 0
-2704 2713 0
-2704 2714 0
-2705 2711 0
-2705 2715 0
-2706 2712 0
-2706 2715 0
-2707 2713 0
-2707 2715 0
-2708 2711 0
-2708 2716 0
-2709 2712 0
-2709 2716 0
-2710 2713 0
-2710 2716 0
-2711 -2712 0
-2711 -2713 0
-2712 -2713 0
-2714 -2715 0
-2714 -2716 0
-2715 -2716 0
c Encoding variable: variant_fields_00002_00003_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00003_00002' direct represents '1' with '2717'
c Var 'variant_fields_00002_00003_00002' direct represents '2' with '2718'
c Var 'variant_fields_00002_00003_00002' direct represents '3' with '2719'
c Var 'variant_fields_00002_00003_00002' direct represents '4' with '2720'
c Var 'variant_fields_00002_00003_00002' direct represents '5' with '2721'
c Var 'variant_fields_00002_00003_00002' direct represents '6' with '2722'
c Var 'variant_fields_00002_00003_00002' direct represents '7' with '2723'
c Var 'variant_fields_00002_00003_00002' direct represents '8' with '2724'
c Var 'variant_fields_00002_00003_00002' direct represents '9' with '2725'
2717 2718 2719 2720 2721 2722 2723 2724 2725 0
-2717 2726 0
-2717 2729 0
-2718 2727 0
-2718 2729 0
-2719 2728 0
-2719 2729 0
-2720 2726 0
-2720 2730 0
-2721 2727 0
-2721 2730 0
-2722 2728 0
-2722 2730 0
-2723 2726 0
-2723 2731 0
-2724 2727 0
-2724 2731 0
-2725 2728 0
-2725 2731 0
-2726 -2727 0
-2726 -2728 0
-2727 -2728 0
-2729 -2730 0
-2729 -2731 0
-2730 -2731 0
c Encoding variable: variant_fields_00002_00003_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00003_00003' direct represents '1' with '2732'
c Var 'variant_fields_00002_00003_00003' direct represents '2' with '2733'
c Var 'variant_fields_00002_00003_00003' direct represents '3' with '2734'
c Var 'variant_fields_00002_00003_00003' direct represents '4' with '2735'
c Var 'variant_fields_00002_00003_00003' direct represents '5' with '2736'
c Var 'variant_fields_00002_00003_00003' direct represents '6' with '2737'
c Var 'variant_fields_00002_00003_00003' direct represents '7' with '2738'
c Var 'variant_fields_00002_00003_00003' direct represents '8' with '2739'
c Var 'variant_fields_00002_00003_00003' direct represents '9' with '2740'
2732 2733 2734 2735 2736 2737 2738 2739 2740 0
-2732 2741 0
-2732 2744 0
-2733 2742 0
-2733 2744 0
-2734 2743 0
-2734 2744 0
-2735 2741 0
-2735 2745 0
-2736 2742 0
-2736 2745 0
-2737 2743 0
-2737 2745 0
-2738 2741 0
-2738 2746 0
-2739 2742 0
-2739 2746 0
-2740 2743 0
-2740 2746 0
-2741 -2742 0
-2741 -2743 0
-2742 -2743 0
-2744 -2745 0
-2744 -2746 0
-2745 -2746 0
c Encoding variable: variant_fields_00002_00003_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00003_00004' direct represents '1' with '2747'
c Var 'variant_fields_00002_00003_00004' direct represents '2' with '2748'
c Var 'variant_fields_00002_00003_00004' direct represents '3' with '2749'
c Var 'variant_fields_00002_00003_00004' direct represents '4' with '2750'
c Var 'variant_fields_00002_00003_00004' direct represents '5' with '2751'
c Var 'variant_fields_00002_00003_00004' direct represents '6' with '2752'
c Var 'variant_fields_00002_00003_00004' direct represents '7' with '2753'
c Var 'variant_fields_00002_00003_00004' direct represents '8' with '2754'
c Var 'variant_fields_00002_00003_00004' direct represents '9' with '2755'
2747 2748 2749 2750 2751 2752 2753 2754 2755 0
-2747 2756 0
-2747 2759 0
-2748 2757 0
-2748 2759 0
-2749 2758 0
-2749 2759 0
-2750 2756 0
-2750 2760 0
-2751 2757 0
-2751 2760 0
-2752 2758 0
-2752 2760 0
-2753 2756 0
-2753 2761 0
-2754 2757 0
-2754 2761 0
-2755 2758 0
-2755 2761 0
-2756 -2757 0
-2756 -2758 0
-2757 -2758 0
-2759 -2760 0
-2759 -2761 0
-2760 -2761 0
c Encoding variable: variant_fields_00002_00003_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00003_00005' direct represents '1' with '2762'
c Var 'variant_fields_00002_00003_00005' direct represents '2' with '2763'
c Var 'variant_fields_00002_00003_00005' direct represents '3' with '2764'
c Var 'variant_fields_00002_00003_00005' direct represents '4' with '2765'
c Var 'variant_fields_00002_00003_00005' direct represents '5' with '2766'
c Var 'variant_fields_00002_00003_00005' direct represents '6' with '2767'
c Var 'variant_fields_00002_00003_00005' direct represents '7' with '2768'
c Var 'variant_fields_00002_00003_00005' direct represents '8' with '2769'
c Var 'variant_fields_00002_00003_00005' direct represents '9' with '2770'
2762 2763 2764 2765 2766 2767 2768 2769 2770 0
-2762 2771 0
-2762 2774 0
-2763 2772 0
-2763 2774 0
-2764 2773 0
-2764 2774 0
-2765 2771 0
-2765 2775 0
-2766 2772 0
-2766 2775 0
-2767 2773 0
-2767 2775 0
-2768 2771 0
-2768 2776 0
-2769 2772 0
-2769 2776 0
-2770 2773 0
-2770 2776 0
-2771 -2772 0
-2771 -2773 0
-2772 -2773 0
-2774 -2775 0
-2774 -2776 0
-2775 -2776 0
c Encoding variable: variant_fields_00002_00003_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00003_00006' direct represents '1' with '2777'
c Var 'variant_fields_00002_00003_00006' direct represents '2' with '2778'
c Var 'variant_fields_00002_00003_00006' direct represents '3' with '2779'
c Var 'variant_fields_00002_00003_00006' direct represents '4' with '2780'
c Var 'variant_fields_00002_00003_00006' direct represents '5' with '2781'
c Var 'variant_fields_00002_00003_00006' direct represents '6' with '2782'
c Var 'variant_fields_00002_00003_00006' direct represents '7' with '2783'
c Var 'variant_fields_00002_00003_00006' direct represents '8' with '2784'
c Var 'variant_fields_00002_00003_00006' direct represents '9' with '2785'
2777 2778 2779 2780 2781 2782 2783 2784 2785 0
-2777 2786 0
-2777 2789 0
-2778 2787 0
-2778 2789 0
-2779 2788 0
-2779 2789 0
-2780 2786 0
-2780 2790 0
-2781 2787 0
-2781 2790 0
-2782 2788 0
-2782 2790 0
-2783 2786 0
-2783 2791 0
-2784 2787 0
-2784 2791 0
-2785 2788 0
-2785 2791 0
-2786 -2787 0
-2786 -2788 0
-2787 -2788 0
-2789 -2790 0
-2789 -2791 0
-2790 -2791 0
c Encoding variable: variant_fields_00002_00003_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00003_00007' direct represents '1' with '2792'
c Var 'variant_fields_00002_00003_00007' direct represents '2' with '2793'
c Var 'variant_fields_00002_00003_00007' direct represents '3' with '2794'
c Var 'variant_fields_00002_00003_00007' direct represents '4' with '2795'
c Var 'variant_fields_00002_00003_00007' direct represents '5' with '2796'
c Var 'variant_fields_00002_00003_00007' direct represents '6' with '2797'
c Var 'variant_fields_00002_00003_00007' direct represents '7' with '2798'
c Var 'variant_fields_00002_00003_00007' direct represents '8' with '2799'
c Var 'variant_fields_00002_00003_00007' direct represents '9' with '2800'
2792 2793 2794 2795 2796 2797 2798 2799 2800 0
-2792 2801 0
-2792 2804 0
-2793 2802 0
-2793 2804 0
-2794 2803 0
-2794 2804 0
-2795 2801 0
-2795 2805 0
-2796 2802 0
-2796 2805 0
-2797 2803 0
-2797 2805 0
-2798 2801 0
-2798 2806 0
-2799 2802 0
-2799 2806 0
-2800 2803 0
-2800 2806 0
-2801 -2802 0
-2801 -2803 0
-2802 -2803 0
-2804 -2805 0
-2804 -2806 0
-2805 -2806 0
c Encoding variable: variant_fields_00002_00003_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00003_00008' direct represents '1' with '2807'
c Var 'variant_fields_00002_00003_00008' direct represents '2' with '2808'
c Var 'variant_fields_00002_00003_00008' direct represents '3' with '2809'
c Var 'variant_fields_00002_00003_00008' direct represents '4' with '2810'
c Var 'variant_fields_00002_00003_00008' direct represents '5' with '2811'
c Var 'variant_fields_00002_00003_00008' direct represents '6' with '2812'
c Var 'variant_fields_00002_00003_00008' direct represents '7' with '2813'
c Var 'variant_fields_00002_00003_00008' direct represents '8' with '2814'
c Var 'variant_fields_00002_00003_00008' direct represents '9' with '2815'
2807 2808 2809 2810 2811 2812 2813 2814 2815 0
-2807 2816 0
-2807 2819 0
-2808 2817 0
-2808 2819 0
-2809 2818 0
-2809 2819 0
-2810 2816 0
-2810 2820 0
-2811 2817 0
-2811 2820 0
-2812 2818 0
-2812 2820 0
-2813 2816 0
-2813 2821 0
-2814 2817 0
-2814 2821 0
-2815 2818 0
-2815 2821 0
-2816 -2817 0
-2816 -2818 0
-2817 -2818 0
-2819 -2820 0
-2819 -2821 0
-2820 -2821 0
c Encoding variable: variant_fields_00002_00003_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00003_00009' direct represents '1' with '2822'
c Var 'variant_fields_00002_00003_00009' direct represents '2' with '2823'
c Var 'variant_fields_00002_00003_00009' direct represents '3' with '2824'
c Var 'variant_fields_00002_00003_00009' direct represents '4' with '2825'
c Var 'variant_fields_00002_00003_00009' direct represents '5' with '2826'
c Var 'variant_fields_00002_00003_00009' direct represents '6' with '2827'
c Var 'variant_fields_00002_00003_00009' direct represents '7' with '2828'
c Var 'variant_fields_00002_00003_00009' direct represents '8' with '2829'
c Var 'variant_fields_00002_00003_00009' direct represents '9' with '2830'
2822 2823 2824 2825 2826 2827 2828 2829 2830 0
-2822 2831 0
-2822 2834 0
-2823 2832 0
-2823 2834 0
-2824 2833 0
-2824 2834 0
-2825 2831 0
-2825 2835 0
-2826 2832 0
-2826 2835 0
-2827 2833 0
-2827 2835 0
-2828 2831 0
-2828 2836 0
-2829 2832 0
-2829 2836 0
-2830 2833 0
-2830 2836 0
-2831 -2832 0
-2831 -2833 0
-2832 -2833 0
-2834 -2835 0
-2834 -2836 0
-2835 -2836 0
c Encoding variable: variant_fields_00002_00004_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00004_00001' order represents '1' with '2837'
c Var 'variant_fields_00002_00004_00001' direct represents '1' with '2837'
c Var 'variant_fields_00002_00004_00001' order represents '2' with '2838'
-2837 2838 0
c Var 'variant_fields_00002_00004_00001' direct represents '2' with '2839'
2837 -2838 2839 0
-2839 2838 0
-2839 -2837 0
c Var 'variant_fields_00002_00004_00001' order represents '3' with '2840'
-2838 2840 0
c Var 'variant_fields_00002_00004_00001' direct represents '3' with '2841'
2838 -2840 2841 0
-2841 2840 0
-2841 -2838 0
c Var 'variant_fields_00002_00004_00001' order represents '4' with '2842'
-2840 2842 0
c Var 'variant_fields_00002_00004_00001' direct represents '4' with '2843'
2840 -2842 2843 0
-2843 2842 0
-2843 -2840 0
c Var 'variant_fields_00002_00004_00001' order represents '5' with '2844'
-2842 2844 0
c Var 'variant_fields_00002_00004_00001' direct represents '5' with '2845'
2842 -2844 2845 0
-2845 2844 0
-2845 -2842 0
c Var 'variant_fields_00002_00004_00001' order represents '6' with '2846'
-2844 2846 0
c Var 'variant_fields_00002_00004_00001' direct represents '6' with '2847'
2844 -2846 2847 0
-2847 2846 0
-2847 -2844 0
c Var 'variant_fields_00002_00004_00001' order represents '7' with '2848'
-2846 2848 0
c Var 'variant_fields_00002_00004_00001' direct represents '7' with '2849'
2846 -2848 2849 0
-2849 2848 0
-2849 -2846 0
c Var 'variant_fields_00002_00004_00001' order represents '8' with '2850'
-2848 2850 0
c Var 'variant_fields_00002_00004_00001' direct represents '8' with '2851'
2848 -2850 2851 0
-2851 2850 0
-2851 -2848 0
c Var 'variant_fields_00002_00004_00001' direct represents '9' with '-2850'
2837 2839 2841 2843 2845 2847 2849 2851 -2850 0
c Encoding variable: variant_fields_00002_00004_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00004_00002' direct represents '1' with '2852'
c Var 'variant_fields_00002_00004_00002' direct represents '2' with '2853'
c Var 'variant_fields_00002_00004_00002' direct represents '3' with '2854'
c Var 'variant_fields_00002_00004_00002' direct represents '4' with '2855'
c Var 'variant_fields_00002_00004_00002' direct represents '5' with '2856'
c Var 'variant_fields_00002_00004_00002' direct represents '6' with '2857'
c Var 'variant_fields_00002_00004_00002' direct represents '7' with '2858'
c Var 'variant_fields_00002_00004_00002' direct represents '8' with '2859'
c Var 'variant_fields_00002_00004_00002' direct represents '9' with '2860'
2852 2853 2854 2855 2856 2857 2858 2859 2860 0
-2852 2861 0
-2852 2864 0
-2853 2862 0
-2853 2864 0
-2854 2863 0
-2854 2864 0
-2855 2861 0
-2855 2865 0
-2856 2862 0
-2856 2865 0
-2857 2863 0
-2857 2865 0
-2858 2861 0
-2858 2866 0
-2859 2862 0
-2859 2866 0
-2860 2863 0
-2860 2866 0
-2861 -2862 0
-2861 -2863 0
-2862 -2863 0
-2864 -2865 0
-2864 -2866 0
-2865 -2866 0
c Encoding variable: variant_fields_00002_00004_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00004_00003' direct represents '1' with '2867'
c Var 'variant_fields_00002_00004_00003' direct represents '2' with '2868'
c Var 'variant_fields_00002_00004_00003' direct represents '3' with '2869'
c Var 'variant_fields_00002_00004_00003' direct represents '4' with '2870'
c Var 'variant_fields_00002_00004_00003' direct represents '5' with '2871'
c Var 'variant_fields_00002_00004_00003' direct represents '6' with '2872'
c Var 'variant_fields_00002_00004_00003' direct represents '7' with '2873'
c Var 'variant_fields_00002_00004_00003' direct represents '8' with '2874'
c Var 'variant_fields_00002_00004_00003' direct represents '9' with '2875'
2867 2868 2869 2870 2871 2872 2873 2874 2875 0
-2867 2876 0
-2867 2879 0
-2868 2877 0
-2868 2879 0
-2869 2878 0
-2869 2879 0
-2870 2876 0
-2870 2880 0
-2871 2877 0
-2871 2880 0
-2872 2878 0
-2872 2880 0
-2873 2876 0
-2873 2881 0
-2874 2877 0
-2874 2881 0
-2875 2878 0
-2875 2881 0
-2876 -2877 0
-2876 -2878 0
-2877 -2878 0
-2879 -2880 0
-2879 -2881 0
-2880 -2881 0
c Encoding variable: variant_fields_00002_00004_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00004_00004' direct represents '1' with '2882'
c Var 'variant_fields_00002_00004_00004' direct represents '2' with '2883'
c Var 'variant_fields_00002_00004_00004' direct represents '3' with '2884'
c Var 'variant_fields_00002_00004_00004' direct represents '4' with '2885'
c Var 'variant_fields_00002_00004_00004' direct represents '5' with '2886'
c Var 'variant_fields_00002_00004_00004' direct represents '6' with '2887'
c Var 'variant_fields_00002_00004_00004' direct represents '7' with '2888'
c Var 'variant_fields_00002_00004_00004' direct represents '8' with '2889'
c Var 'variant_fields_00002_00004_00004' direct represents '9' with '2890'
2882 2883 2884 2885 2886 2887 2888 2889 2890 0
-2882 2891 0
-2882 2894 0
-2883 2892 0
-2883 2894 0
-2884 2893 0
-2884 2894 0
-2885 2891 0
-2885 2895 0
-2886 2892 0
-2886 2895 0
-2887 2893 0
-2887 2895 0
-2888 2891 0
-2888 2896 0
-2889 2892 0
-2889 2896 0
-2890 2893 0
-2890 2896 0
-2891 -2892 0
-2891 -2893 0
-2892 -2893 0
-2894 -2895 0
-2894 -2896 0
-2895 -2896 0
c Encoding variable: variant_fields_00002_00004_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00004_00005' direct represents '1' with '2897'
c Var 'variant_fields_00002_00004_00005' direct represents '2' with '2898'
c Var 'variant_fields_00002_00004_00005' direct represents '3' with '2899'
c Var 'variant_fields_00002_00004_00005' direct represents '4' with '2900'
c Var 'variant_fields_00002_00004_00005' direct represents '5' with '2901'
c Var 'variant_fields_00002_00004_00005' direct represents '6' with '2902'
c Var 'variant_fields_00002_00004_00005' direct represents '7' with '2903'
c Var 'variant_fields_00002_00004_00005' direct represents '8' with '2904'
c Var 'variant_fields_00002_00004_00005' direct represents '9' with '2905'
2897 2898 2899 2900 2901 2902 2903 2904 2905 0
-2897 2906 0
-2897 2909 0
-2898 2907 0
-2898 2909 0
-2899 2908 0
-2899 2909 0
-2900 2906 0
-2900 2910 0
-2901 2907 0
-2901 2910 0
-2902 2908 0
-2902 2910 0
-2903 2906 0
-2903 2911 0
-2904 2907 0
-2904 2911 0
-2905 2908 0
-2905 2911 0
-2906 -2907 0
-2906 -2908 0
-2907 -2908 0
-2909 -2910 0
-2909 -2911 0
-2910 -2911 0
c Encoding variable: variant_fields_00002_00004_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00004_00006' direct represents '1' with '2912'
c Var 'variant_fields_00002_00004_00006' direct represents '2' with '2913'
c Var 'variant_fields_00002_00004_00006' direct represents '3' with '2914'
c Var 'variant_fields_00002_00004_00006' direct represents '4' with '2915'
c Var 'variant_fields_00002_00004_00006' direct represents '5' with '2916'
c Var 'variant_fields_00002_00004_00006' direct represents '6' with '2917'
c Var 'variant_fields_00002_00004_00006' direct represents '7' with '2918'
c Var 'variant_fields_00002_00004_00006' direct represents '8' with '2919'
c Var 'variant_fields_00002_00004_00006' direct represents '9' with '2920'
2912 2913 2914 2915 2916 2917 2918 2919 2920 0
-2912 2921 0
-2912 2924 0
-2913 2922 0
-2913 2924 0
-2914 2923 0
-2914 2924 0
-2915 2921 0
-2915 2925 0
-2916 2922 0
-2916 2925 0
-2917 2923 0
-2917 2925 0
-2918 2921 0
-2918 2926 0
-2919 2922 0
-2919 2926 0
-2920 2923 0
-2920 2926 0
-2921 -2922 0
-2921 -2923 0
-2922 -2923 0
-2924 -2925 0
-2924 -2926 0
-2925 -2926 0
c Encoding variable: variant_fields_00002_00004_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00004_00007' direct represents '1' with '2927'
c Var 'variant_fields_00002_00004_00007' direct represents '2' with '2928'
c Var 'variant_fields_00002_00004_00007' direct represents '3' with '2929'
c Var 'variant_fields_00002_00004_00007' direct represents '4' with '2930'
c Var 'variant_fields_00002_00004_00007' direct represents '5' with '2931'
c Var 'variant_fields_00002_00004_00007' direct represents '6' with '2932'
c Var 'variant_fields_00002_00004_00007' direct represents '7' with '2933'
c Var 'variant_fields_00002_00004_00007' direct represents '8' with '2934'
c Var 'variant_fields_00002_00004_00007' direct represents '9' with '2935'
2927 2928 2929 2930 2931 2932 2933 2934 2935 0
-2927 2936 0
-2927 2939 0
-2928 2937 0
-2928 2939 0
-2929 2938 0
-2929 2939 0
-2930 2936 0
-2930 2940 0
-2931 2937 0
-2931 2940 0
-2932 2938 0
-2932 2940 0
-2933 2936 0
-2933 2941 0
-2934 2937 0
-2934 2941 0
-2935 2938 0
-2935 2941 0
-2936 -2937 0
-2936 -2938 0
-2937 -2938 0
-2939 -2940 0
-2939 -2941 0
-2940 -2941 0
c Encoding variable: variant_fields_00002_00004_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00004_00008' direct represents '1' with '2942'
c Var 'variant_fields_00002_00004_00008' direct represents '2' with '2943'
c Var 'variant_fields_00002_00004_00008' direct represents '3' with '2944'
c Var 'variant_fields_00002_00004_00008' direct represents '4' with '2945'
c Var 'variant_fields_00002_00004_00008' direct represents '5' with '2946'
c Var 'variant_fields_00002_00004_00008' direct represents '6' with '2947'
c Var 'variant_fields_00002_00004_00008' direct represents '7' with '2948'
c Var 'variant_fields_00002_00004_00008' direct represents '8' with '2949'
c Var 'variant_fields_00002_00004_00008' direct represents '9' with '2950'
2942 2943 2944 2945 2946 2947 2948 2949 2950 0
-2942 2951 0
-2942 2954 0
-2943 2952 0
-2943 2954 0
-2944 2953 0
-2944 2954 0
-2945 2951 0
-2945 2955 0
-2946 2952 0
-2946 2955 0
-2947 2953 0
-2947 2955 0
-2948 2951 0
-2948 2956 0
-2949 2952 0
-2949 2956 0
-2950 2953 0
-2950 2956 0
-2951 -2952 0
-2951 -2953 0
-2952 -2953 0
-2954 -2955 0
-2954 -2956 0
-2955 -2956 0
c Encoding variable: variant_fields_00002_00004_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00004_00009' direct represents '1' with '2957'
c Var 'variant_fields_00002_00004_00009' direct represents '2' with '2958'
c Var 'variant_fields_00002_00004_00009' direct represents '3' with '2959'
c Var 'variant_fields_00002_00004_00009' direct represents '4' with '2960'
c Var 'variant_fields_00002_00004_00009' direct represents '5' with '2961'
c Var 'variant_fields_00002_00004_00009' direct represents '6' with '2962'
c Var 'variant_fields_00002_00004_00009' direct represents '7' with '2963'
c Var 'variant_fields_00002_00004_00009' direct represents '8' with '2964'
c Var 'variant_fields_00002_00004_00009' direct represents '9' with '2965'
2957 2958 2959 2960 2961 2962 2963 2964 2965 0
-2957 2966 0
-2957 2969 0
-2958 2967 0
-2958 2969 0
-2959 2968 0
-2959 2969 0
-2960 2966 0
-2960 2970 0
-2961 2967 0
-2961 2970 0
-2962 2968 0
-2962 2970 0
-2963 2966 0
-2963 2971 0
-2964 2967 0
-2964 2971 0
-2965 2968 0
-2965 2971 0
-2966 -2967 0
-2966 -2968 0
-2967 -2968 0
-2969 -2970 0
-2969 -2971 0
-2970 -2971 0
c Encoding variable: variant_fields_00002_00005_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00005_00001' direct represents '1' with '2972'
c Var 'variant_fields_00002_00005_00001' direct represents '2' with '2973'
c Var 'variant_fields_00002_00005_00001' direct represents '3' with '2974'
c Var 'variant_fields_00002_00005_00001' direct represents '4' with '2975'
c Var 'variant_fields_00002_00005_00001' direct represents '5' with '2976'
c Var 'variant_fields_00002_00005_00001' direct represents '6' with '2977'
c Var 'variant_fields_00002_00005_00001' direct represents '7' with '2978'
c Var 'variant_fields_00002_00005_00001' direct represents '8' with '2979'
c Var 'variant_fields_00002_00005_00001' direct represents '9' with '2980'
2972 2973 2974 2975 2976 2977 2978 2979 2980 0
-2972 2981 0
-2972 2984 0
-2973 2982 0
-2973 2984 0
-2974 2983 0
-2974 2984 0
-2975 2981 0
-2975 2985 0
-2976 2982 0
-2976 2985 0
-2977 2983 0
-2977 2985 0
-2978 2981 0
-2978 2986 0
-2979 2982 0
-2979 2986 0
-2980 2983 0
-2980 2986 0
-2981 -2982 0
-2981 -2983 0
-2982 -2983 0
-2984 -2985 0
-2984 -2986 0
-2985 -2986 0
c Encoding variable: variant_fields_00002_00005_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00005_00002' direct represents '1' with '2987'
c Var 'variant_fields_00002_00005_00002' direct represents '2' with '2988'
c Var 'variant_fields_00002_00005_00002' direct represents '3' with '2989'
c Var 'variant_fields_00002_00005_00002' direct represents '4' with '2990'
c Var 'variant_fields_00002_00005_00002' direct represents '5' with '2991'
c Var 'variant_fields_00002_00005_00002' direct represents '6' with '2992'
c Var 'variant_fields_00002_00005_00002' direct represents '7' with '2993'
c Var 'variant_fields_00002_00005_00002' direct represents '8' with '2994'
c Var 'variant_fields_00002_00005_00002' direct represents '9' with '2995'
2987 2988 2989 2990 2991 2992 2993 2994 2995 0
-2987 2996 0
-2987 2999 0
-2988 2997 0
-2988 2999 0
-2989 2998 0
-2989 2999 0
-2990 2996 0
-2990 3000 0
-2991 2997 0
-2991 3000 0
-2992 2998 0
-2992 3000 0
-2993 2996 0
-2993 3001 0
-2994 2997 0
-2994 3001 0
-2995 2998 0
-2995 3001 0
-2996 -2997 0
-2996 -2998 0
-2997 -2998 0
-2999 -3000 0
-2999 -3001 0
-3000 -3001 0
c Encoding variable: variant_fields_00002_00005_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00005_00003' direct represents '1' with '3002'
c Var 'variant_fields_00002_00005_00003' direct represents '2' with '3003'
c Var 'variant_fields_00002_00005_00003' direct represents '3' with '3004'
c Var 'variant_fields_00002_00005_00003' direct represents '4' with '3005'
c Var 'variant_fields_00002_00005_00003' direct represents '5' with '3006'
c Var 'variant_fields_00002_00005_00003' direct represents '6' with '3007'
c Var 'variant_fields_00002_00005_00003' direct represents '7' with '3008'
c Var 'variant_fields_00002_00005_00003' direct represents '8' with '3009'
c Var 'variant_fields_00002_00005_00003' direct represents '9' with '3010'
3002 3003 3004 3005 3006 3007 3008 3009 3010 0
-3002 3011 0
-3002 3014 0
-3003 3012 0
-3003 3014 0
-3004 3013 0
-3004 3014 0
-3005 3011 0
-3005 3015 0
-3006 3012 0
-3006 3015 0
-3007 3013 0
-3007 3015 0
-3008 3011 0
-3008 3016 0
-3009 3012 0
-3009 3016 0
-3010 3013 0
-3010 3016 0
-3011 -3012 0
-3011 -3013 0
-3012 -3013 0
-3014 -3015 0
-3014 -3016 0
-3015 -3016 0
c Encoding variable: variant_fields_00002_00005_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00005_00004' direct represents '1' with '3017'
c Var 'variant_fields_00002_00005_00004' direct represents '2' with '3018'
c Var 'variant_fields_00002_00005_00004' direct represents '3' with '3019'
c Var 'variant_fields_00002_00005_00004' direct represents '4' with '3020'
c Var 'variant_fields_00002_00005_00004' direct represents '5' with '3021'
c Var 'variant_fields_00002_00005_00004' direct represents '6' with '3022'
c Var 'variant_fields_00002_00005_00004' direct represents '7' with '3023'
c Var 'variant_fields_00002_00005_00004' direct represents '8' with '3024'
c Var 'variant_fields_00002_00005_00004' direct represents '9' with '3025'
3017 3018 3019 3020 3021 3022 3023 3024 3025 0
-3017 3026 0
-3017 3029 0
-3018 3027 0
-3018 3029 0
-3019 3028 0
-3019 3029 0
-3020 3026 0
-3020 3030 0
-3021 3027 0
-3021 3030 0
-3022 3028 0
-3022 3030 0
-3023 3026 0
-3023 3031 0
-3024 3027 0
-3024 3031 0
-3025 3028 0
-3025 3031 0
-3026 -3027 0
-3026 -3028 0
-3027 -3028 0
-3029 -3030 0
-3029 -3031 0
-3030 -3031 0
c Encoding variable: variant_fields_00002_00005_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00005_00005' direct represents '1' with '3032'
c Var 'variant_fields_00002_00005_00005' direct represents '2' with '3033'
c Var 'variant_fields_00002_00005_00005' direct represents '3' with '3034'
c Var 'variant_fields_00002_00005_00005' direct represents '4' with '3035'
c Var 'variant_fields_00002_00005_00005' direct represents '5' with '3036'
c Var 'variant_fields_00002_00005_00005' direct represents '6' with '3037'
c Var 'variant_fields_00002_00005_00005' direct represents '7' with '3038'
c Var 'variant_fields_00002_00005_00005' direct represents '8' with '3039'
c Var 'variant_fields_00002_00005_00005' direct represents '9' with '3040'
3032 3033 3034 3035 3036 3037 3038 3039 3040 0
-3032 3041 0
-3032 3044 0
-3033 3042 0
-3033 3044 0
-3034 3043 0
-3034 3044 0
-3035 3041 0
-3035 3045 0
-3036 3042 0
-3036 3045 0
-3037 3043 0
-3037 3045 0
-3038 3041 0
-3038 3046 0
-3039 3042 0
-3039 3046 0
-3040 3043 0
-3040 3046 0
-3041 -3042 0
-3041 -3043 0
-3042 -3043 0
-3044 -3045 0
-3044 -3046 0
-3045 -3046 0
c Encoding variable: variant_fields_00002_00005_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00005_00006' direct represents '1' with '3047'
c Var 'variant_fields_00002_00005_00006' direct represents '2' with '3048'
c Var 'variant_fields_00002_00005_00006' direct represents '3' with '3049'
c Var 'variant_fields_00002_00005_00006' direct represents '4' with '3050'
c Var 'variant_fields_00002_00005_00006' direct represents '5' with '3051'
c Var 'variant_fields_00002_00005_00006' direct represents '6' with '3052'
c Var 'variant_fields_00002_00005_00006' direct represents '7' with '3053'
c Var 'variant_fields_00002_00005_00006' direct represents '8' with '3054'
c Var 'variant_fields_00002_00005_00006' direct represents '9' with '3055'
3047 3048 3049 3050 3051 3052 3053 3054 3055 0
-3047 3056 0
-3047 3059 0
-3048 3057 0
-3048 3059 0
-3049 3058 0
-3049 3059 0
-3050 3056 0
-3050 3060 0
-3051 3057 0
-3051 3060 0
-3052 3058 0
-3052 3060 0
-3053 3056 0
-3053 3061 0
-3054 3057 0
-3054 3061 0
-3055 3058 0
-3055 3061 0
-3056 -3057 0
-3056 -3058 0
-3057 -3058 0
-3059 -3060 0
-3059 -3061 0
-3060 -3061 0
c Encoding variable: variant_fields_00002_00005_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00005_00007' direct represents '1' with '3062'
c Var 'variant_fields_00002_00005_00007' direct represents '2' with '3063'
c Var 'variant_fields_00002_00005_00007' direct represents '3' with '3064'
c Var 'variant_fields_00002_00005_00007' direct represents '4' with '3065'
c Var 'variant_fields_00002_00005_00007' direct represents '5' with '3066'
c Var 'variant_fields_00002_00005_00007' direct represents '6' with '3067'
c Var 'variant_fields_00002_00005_00007' direct represents '7' with '3068'
c Var 'variant_fields_00002_00005_00007' direct represents '8' with '3069'
c Var 'variant_fields_00002_00005_00007' direct represents '9' with '3070'
3062 3063 3064 3065 3066 3067 3068 3069 3070 0
-3062 3071 0
-3062 3074 0
-3063 3072 0
-3063 3074 0
-3064 3073 0
-3064 3074 0
-3065 3071 0
-3065 3075 0
-3066 3072 0
-3066 3075 0
-3067 3073 0
-3067 3075 0
-3068 3071 0
-3068 3076 0
-3069 3072 0
-3069 3076 0
-3070 3073 0
-3070 3076 0
-3071 -3072 0
-3071 -3073 0
-3072 -3073 0
-3074 -3075 0
-3074 -3076 0
-3075 -3076 0
c Encoding variable: variant_fields_00002_00005_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00005_00008' direct represents '1' with '3077'
c Var 'variant_fields_00002_00005_00008' direct represents '2' with '3078'
c Var 'variant_fields_00002_00005_00008' direct represents '3' with '3079'
c Var 'variant_fields_00002_00005_00008' direct represents '4' with '3080'
c Var 'variant_fields_00002_00005_00008' direct represents '5' with '3081'
c Var 'variant_fields_00002_00005_00008' direct represents '6' with '3082'
c Var 'variant_fields_00002_00005_00008' direct represents '7' with '3083'
c Var 'variant_fields_00002_00005_00008' direct represents '8' with '3084'
c Var 'variant_fields_00002_00005_00008' direct represents '9' with '3085'
3077 3078 3079 3080 3081 3082 3083 3084 3085 0
-3077 3086 0
-3077 3089 0
-3078 3087 0
-3078 3089 0
-3079 3088 0
-3079 3089 0
-3080 3086 0
-3080 3090 0
-3081 3087 0
-3081 3090 0
-3082 3088 0
-3082 3090 0
-3083 3086 0
-3083 3091 0
-3084 3087 0
-3084 3091 0
-3085 3088 0
-3085 3091 0
-3086 -3087 0
-3086 -3088 0
-3087 -3088 0
-3089 -3090 0
-3089 -3091 0
-3090 -3091 0
c Encoding variable: variant_fields_00002_00005_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00005_00009' direct represents '1' with '3092'
c Var 'variant_fields_00002_00005_00009' direct represents '2' with '3093'
c Var 'variant_fields_00002_00005_00009' direct represents '3' with '3094'
c Var 'variant_fields_00002_00005_00009' direct represents '4' with '3095'
c Var 'variant_fields_00002_00005_00009' direct represents '5' with '3096'
c Var 'variant_fields_00002_00005_00009' direct represents '6' with '3097'
c Var 'variant_fields_00002_00005_00009' direct represents '7' with '3098'
c Var 'variant_fields_00002_00005_00009' direct represents '8' with '3099'
c Var 'variant_fields_00002_00005_00009' direct represents '9' with '3100'
3092 3093 3094 3095 3096 3097 3098 3099 3100 0
-3092 3101 0
-3092 3104 0
-3093 3102 0
-3093 3104 0
-3094 3103 0
-3094 3104 0
-3095 3101 0
-3095 3105 0
-3096 3102 0
-3096 3105 0
-3097 3103 0
-3097 3105 0
-3098 3101 0
-3098 3106 0
-3099 3102 0
-3099 3106 0
-3100 3103 0
-3100 3106 0
-3101 -3102 0
-3101 -3103 0
-3102 -3103 0
-3104 -3105 0
-3104 -3106 0
-3105 -3106 0
c Encoding variable: variant_fields_00002_00006_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00006_00001' order represents '1' with '3107'
c Var 'variant_fields_00002_00006_00001' direct represents '1' with '3107'
c Var 'variant_fields_00002_00006_00001' order represents '2' with '3108'
-3107 3108 0
c Var 'variant_fields_00002_00006_00001' direct represents '2' with '3109'
3107 -3108 3109 0
-3109 3108 0
-3109 -3107 0
c Var 'variant_fields_00002_00006_00001' order represents '3' with '3110'
-3108 3110 0
c Var 'variant_fields_00002_00006_00001' direct represents '3' with '3111'
3108 -3110 3111 0
-3111 3110 0
-3111 -3108 0
c Var 'variant_fields_00002_00006_00001' order represents '4' with '3112'
-3110 3112 0
c Var 'variant_fields_00002_00006_00001' direct represents '4' with '3113'
3110 -3112 3113 0
-3113 3112 0
-3113 -3110 0
c Var 'variant_fields_00002_00006_00001' order represents '5' with '3114'
-3112 3114 0
c Var 'variant_fields_00002_00006_00001' direct represents '5' with '3115'
3112 -3114 3115 0
-3115 3114 0
-3115 -3112 0
c Var 'variant_fields_00002_00006_00001' order represents '6' with '3116'
-3114 3116 0
c Var 'variant_fields_00002_00006_00001' direct represents '6' with '3117'
3114 -3116 3117 0
-3117 3116 0
-3117 -3114 0
c Var 'variant_fields_00002_00006_00001' order represents '7' with '3118'
-3116 3118 0
c Var 'variant_fields_00002_00006_00001' direct represents '7' with '3119'
3116 -3118 3119 0
-3119 3118 0
-3119 -3116 0
c Var 'variant_fields_00002_00006_00001' order represents '8' with '3120'
-3118 3120 0
c Var 'variant_fields_00002_00006_00001' direct represents '8' with '3121'
3118 -3120 3121 0
-3121 3120 0
-3121 -3118 0
c Var 'variant_fields_00002_00006_00001' direct represents '9' with '-3120'
3107 3109 3111 3113 3115 3117 3119 3121 -3120 0
c Encoding variable: variant_fields_00002_00006_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00006_00002' direct represents '1' with '3122'
c Var 'variant_fields_00002_00006_00002' direct represents '2' with '3123'
c Var 'variant_fields_00002_00006_00002' direct represents '3' with '3124'
c Var 'variant_fields_00002_00006_00002' direct represents '4' with '3125'
c Var 'variant_fields_00002_00006_00002' direct represents '5' with '3126'
c Var 'variant_fields_00002_00006_00002' direct represents '6' with '3127'
c Var 'variant_fields_00002_00006_00002' direct represents '7' with '3128'
c Var 'variant_fields_00002_00006_00002' direct represents '8' with '3129'
c Var 'variant_fields_00002_00006_00002' direct represents '9' with '3130'
3122 3123 3124 3125 3126 3127 3128 3129 3130 0
-3122 3131 0
-3122 3134 0
-3123 3132 0
-3123 3134 0
-3124 3133 0
-3124 3134 0
-3125 3131 0
-3125 3135 0
-3126 3132 0
-3126 3135 0
-3127 3133 0
-3127 3135 0
-3128 3131 0
-3128 3136 0
-3129 3132 0
-3129 3136 0
-3130 3133 0
-3130 3136 0
-3131 -3132 0
-3131 -3133 0
-3132 -3133 0
-3134 -3135 0
-3134 -3136 0
-3135 -3136 0
c Encoding variable: variant_fields_00002_00006_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00006_00003' direct represents '1' with '3137'
c Var 'variant_fields_00002_00006_00003' direct represents '2' with '3138'
c Var 'variant_fields_00002_00006_00003' direct represents '3' with '3139'
c Var 'variant_fields_00002_00006_00003' direct represents '4' with '3140'
c Var 'variant_fields_00002_00006_00003' direct represents '5' with '3141'
c Var 'variant_fields_00002_00006_00003' direct represents '6' with '3142'
c Var 'variant_fields_00002_00006_00003' direct represents '7' with '3143'
c Var 'variant_fields_00002_00006_00003' direct represents '8' with '3144'
c Var 'variant_fields_00002_00006_00003' direct represents '9' with '3145'
3137 3138 3139 3140 3141 3142 3143 3144 3145 0
-3137 3146 0
-3137 3149 0
-3138 3147 0
-3138 3149 0
-3139 3148 0
-3139 3149 0
-3140 3146 0
-3140 3150 0
-3141 3147 0
-3141 3150 0
-3142 3148 0
-3142 3150 0
-3143 3146 0
-3143 3151 0
-3144 3147 0
-3144 3151 0
-3145 3148 0
-3145 3151 0
-3146 -3147 0
-3146 -3148 0
-3147 -3148 0
-3149 -3150 0
-3149 -3151 0
-3150 -3151 0
c Encoding variable: variant_fields_00002_00006_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00006_00004' direct represents '1' with '3152'
c Var 'variant_fields_00002_00006_00004' direct represents '2' with '3153'
c Var 'variant_fields_00002_00006_00004' direct represents '3' with '3154'
c Var 'variant_fields_00002_00006_00004' direct represents '4' with '3155'
c Var 'variant_fields_00002_00006_00004' direct represents '5' with '3156'
c Var 'variant_fields_00002_00006_00004' direct represents '6' with '3157'
c Var 'variant_fields_00002_00006_00004' direct represents '7' with '3158'
c Var 'variant_fields_00002_00006_00004' direct represents '8' with '3159'
c Var 'variant_fields_00002_00006_00004' direct represents '9' with '3160'
3152 3153 3154 3155 3156 3157 3158 3159 3160 0
-3152 3161 0
-3152 3164 0
-3153 3162 0
-3153 3164 0
-3154 3163 0
-3154 3164 0
-3155 3161 0
-3155 3165 0
-3156 3162 0
-3156 3165 0
-3157 3163 0
-3157 3165 0
-3158 3161 0
-3158 3166 0
-3159 3162 0
-3159 3166 0
-3160 3163 0
-3160 3166 0
-3161 -3162 0
-3161 -3163 0
-3162 -3163 0
-3164 -3165 0
-3164 -3166 0
-3165 -3166 0
c Encoding variable: variant_fields_00002_00006_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00006_00005' direct represents '1' with '3167'
c Var 'variant_fields_00002_00006_00005' direct represents '2' with '3168'
c Var 'variant_fields_00002_00006_00005' direct represents '3' with '3169'
c Var 'variant_fields_00002_00006_00005' direct represents '4' with '3170'
c Var 'variant_fields_00002_00006_00005' direct represents '5' with '3171'
c Var 'variant_fields_00002_00006_00005' direct represents '6' with '3172'
c Var 'variant_fields_00002_00006_00005' direct represents '7' with '3173'
c Var 'variant_fields_00002_00006_00005' direct represents '8' with '3174'
c Var 'variant_fields_00002_00006_00005' direct represents '9' with '3175'
3167 3168 3169 3170 3171 3172 3173 3174 3175 0
-3167 3176 0
-3167 3179 0
-3168 3177 0
-3168 3179 0
-3169 3178 0
-3169 3179 0
-3170 3176 0
-3170 3180 0
-3171 3177 0
-3171 3180 0
-3172 3178 0
-3172 3180 0
-3173 3176 0
-3173 3181 0
-3174 3177 0
-3174 3181 0
-3175 3178 0
-3175 3181 0
-3176 -3177 0
-3176 -3178 0
-3177 -3178 0
-3179 -3180 0
-3179 -3181 0
-3180 -3181 0
c Encoding variable: variant_fields_00002_00006_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00006_00006' direct represents '1' with '3182'
c Var 'variant_fields_00002_00006_00006' direct represents '2' with '3183'
c Var 'variant_fields_00002_00006_00006' direct represents '3' with '3184'
c Var 'variant_fields_00002_00006_00006' direct represents '4' with '3185'
c Var 'variant_fields_00002_00006_00006' direct represents '5' with '3186'
c Var 'variant_fields_00002_00006_00006' direct represents '6' with '3187'
c Var 'variant_fields_00002_00006_00006' direct represents '7' with '3188'
c Var 'variant_fields_00002_00006_00006' direct represents '8' with '3189'
c Var 'variant_fields_00002_00006_00006' direct represents '9' with '3190'
3182 3183 3184 3185 3186 3187 3188 3189 3190 0
-3182 3191 0
-3182 3194 0
-3183 3192 0
-3183 3194 0
-3184 3193 0
-3184 3194 0
-3185 3191 0
-3185 3195 0
-3186 3192 0
-3186 3195 0
-3187 3193 0
-3187 3195 0
-3188 3191 0
-3188 3196 0
-3189 3192 0
-3189 3196 0
-3190 3193 0
-3190 3196 0
-3191 -3192 0
-3191 -3193 0
-3192 -3193 0
-3194 -3195 0
-3194 -3196 0
-3195 -3196 0
c Encoding variable: variant_fields_00002_00006_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00006_00007' direct represents '1' with '3197'
c Var 'variant_fields_00002_00006_00007' direct represents '2' with '3198'
c Var 'variant_fields_00002_00006_00007' direct represents '3' with '3199'
c Var 'variant_fields_00002_00006_00007' direct represents '4' with '3200'
c Var 'variant_fields_00002_00006_00007' direct represents '5' with '3201'
c Var 'variant_fields_00002_00006_00007' direct represents '6' with '3202'
c Var 'variant_fields_00002_00006_00007' direct represents '7' with '3203'
c Var 'variant_fields_00002_00006_00007' direct represents '8' with '3204'
c Var 'variant_fields_00002_00006_00007' direct represents '9' with '3205'
3197 3198 3199 3200 3201 3202 3203 3204 3205 0
-3197 3206 0
-3197 3209 0
-3198 3207 0
-3198 3209 0
-3199 3208 0
-3199 3209 0
-3200 3206 0
-3200 3210 0
-3201 3207 0
-3201 3210 0
-3202 3208 0
-3202 3210 0
-3203 3206 0
-3203 3211 0
-3204 3207 0
-3204 3211 0
-3205 3208 0
-3205 3211 0
-3206 -3207 0
-3206 -3208 0
-3207 -3208 0
-3209 -3210 0
-3209 -3211 0
-3210 -3211 0
c Encoding variable: variant_fields_00002_00006_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00006_00008' direct represents '1' with '3212'
c Var 'variant_fields_00002_00006_00008' direct represents '2' with '3213'
c Var 'variant_fields_00002_00006_00008' direct represents '3' with '3214'
c Var 'variant_fields_00002_00006_00008' direct represents '4' with '3215'
c Var 'variant_fields_00002_00006_00008' direct represents '5' with '3216'
c Var 'variant_fields_00002_00006_00008' direct represents '6' with '3217'
c Var 'variant_fields_00002_00006_00008' direct represents '7' with '3218'
c Var 'variant_fields_00002_00006_00008' direct represents '8' with '3219'
c Var 'variant_fields_00002_00006_00008' direct represents '9' with '3220'
3212 3213 3214 3215 3216 3217 3218 3219 3220 0
-3212 3221 0
-3212 3224 0
-3213 3222 0
-3213 3224 0
-3214 3223 0
-3214 3224 0
-3215 3221 0
-3215 3225 0
-3216 3222 0
-3216 3225 0
-3217 3223 0
-3217 3225 0
-3218 3221 0
-3218 3226 0
-3219 3222 0
-3219 3226 0
-3220 3223 0
-3220 3226 0
-3221 -3222 0
-3221 -3223 0
-3222 -3223 0
-3224 -3225 0
-3224 -3226 0
-3225 -3226 0
c Encoding variable: variant_fields_00002_00006_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00006_00009' direct represents '1' with '3227'
c Var 'variant_fields_00002_00006_00009' direct represents '2' with '3228'
c Var 'variant_fields_00002_00006_00009' direct represents '3' with '3229'
c Var 'variant_fields_00002_00006_00009' direct represents '4' with '3230'
c Var 'variant_fields_00002_00006_00009' direct represents '5' with '3231'
c Var 'variant_fields_00002_00006_00009' direct represents '6' with '3232'
c Var 'variant_fields_00002_00006_00009' direct represents '7' with '3233'
c Var 'variant_fields_00002_00006_00009' direct represents '8' with '3234'
c Var 'variant_fields_00002_00006_00009' direct represents '9' with '3235'
3227 3228 3229 3230 3231 3232 3233 3234 3235 0
-3227 3236 0
-3227 3239 0
-3228 3237 0
-3228 3239 0
-3229 3238 0
-3229 3239 0
-3230 3236 0
-3230 3240 0
-3231 3237 0
-3231 3240 0
-3232 3238 0
-3232 3240 0
-3233 3236 0
-3233 3241 0
-3234 3237 0
-3234 3241 0
-3235 3238 0
-3235 3241 0
-3236 -3237 0
-3236 -3238 0
-3237 -3238 0
-3239 -3240 0
-3239 -3241 0
-3240 -3241 0
c Encoding variable: variant_fields_00002_00007_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00002_00007_00001' order represents '1' with '3242'
c Var 'variant_fields_00002_00007_00001' direct represents '1' with '3242'
c Var 'variant_fields_00002_00007_00001' order represents '2' with '3243'
-3242 3243 0
c Var 'variant_fields_00002_00007_00001' direct represents '2' with '3244'
3242 -3243 3244 0
-3244 3243 0
-3244 -3242 0
c Var 'variant_fields_00002_00007_00001' order represents '3' with '3245'
-3243 3245 0
c Var 'variant_fields_00002_00007_00001' direct represents '3' with '3246'
3243 -3245 3246 0
-3246 3245 0
-3246 -3243 0
c Var 'variant_fields_00002_00007_00001' order represents '4' with '3247'
-3245 3247 0
c Var 'variant_fields_00002_00007_00001' direct represents '4' with '3248'
3245 -3247 3248 0
-3248 3247 0
-3248 -3245 0
c Var 'variant_fields_00002_00007_00001' order represents '5' with '3249'
-3247 3249 0
c Var 'variant_fields_00002_00007_00001' direct represents '5' with '3250'
3247 -3249 3250 0
-3250 3249 0
-3250 -3247 0
c Var 'variant_fields_00002_00007_00001' order represents '6' with '3251'
-3249 3251 0
c Var 'variant_fields_00002_00007_00001' direct represents '6' with '3252'
3249 -3251 3252 0
-3252 3251 0
-3252 -3249 0
c Var 'variant_fields_00002_00007_00001' order represents '7' with '3253'
-3251 3253 0
c Var 'variant_fields_00002_00007_00001' direct represents '7' with '3254'
3251 -3253 3254 0
-3254 3253 0
-3254 -3251 0
c Var 'variant_fields_00002_00007_00001' order represents '8' with '3255'
-3253 3255 0
c Var 'variant_fields_00002_00007_00001' direct represents '8' with '3256'
3253 -3255 3256 0
-3256 3255 0
-3256 -3253 0
c Var 'variant_fields_00002_00007_00001' direct represents '9' with '-3255'
3242 3244 3246 3248 3250 3252 3254 3256 -3255 0
c Encoding variable: variant_fields_00002_00007_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00007_00002' direct represents '1' with '3257'
c Var 'variant_fields_00002_00007_00002' direct represents '2' with '3258'
c Var 'variant_fields_00002_00007_00002' direct represents '3' with '3259'
c Var 'variant_fields_00002_00007_00002' direct represents '4' with '3260'
c Var 'variant_fields_00002_00007_00002' direct represents '5' with '3261'
c Var 'variant_fields_00002_00007_00002' direct represents '6' with '3262'
c Var 'variant_fields_00002_00007_00002' direct represents '7' with '3263'
c Var 'variant_fields_00002_00007_00002' direct represents '8' with '3264'
c Var 'variant_fields_00002_00007_00002' direct represents '9' with '3265'
3257 3258 3259 3260 3261 3262 3263 3264 3265 0
-3257 3266 0
-3257 3269 0
-3258 3267 0
-3258 3269 0
-3259 3268 0
-3259 3269 0
-3260 3266 0
-3260 3270 0
-3261 3267 0
-3261 3270 0
-3262 3268 0
-3262 3270 0
-3263 3266 0
-3263 3271 0
-3264 3267 0
-3264 3271 0
-3265 3268 0
-3265 3271 0
-3266 -3267 0
-3266 -3268 0
-3267 -3268 0
-3269 -3270 0
-3269 -3271 0
-3270 -3271 0
c Encoding variable: variant_fields_00002_00007_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00007_00003' direct represents '1' with '3272'
c Var 'variant_fields_00002_00007_00003' direct represents '2' with '3273'
c Var 'variant_fields_00002_00007_00003' direct represents '3' with '3274'
c Var 'variant_fields_00002_00007_00003' direct represents '4' with '3275'
c Var 'variant_fields_00002_00007_00003' direct represents '5' with '3276'
c Var 'variant_fields_00002_00007_00003' direct represents '6' with '3277'
c Var 'variant_fields_00002_00007_00003' direct represents '7' with '3278'
c Var 'variant_fields_00002_00007_00003' direct represents '8' with '3279'
c Var 'variant_fields_00002_00007_00003' direct represents '9' with '3280'
3272 3273 3274 3275 3276 3277 3278 3279 3280 0
-3272 3281 0
-3272 3284 0
-3273 3282 0
-3273 3284 0
-3274 3283 0
-3274 3284 0
-3275 3281 0
-3275 3285 0
-3276 3282 0
-3276 3285 0
-3277 3283 0
-3277 3285 0
-3278 3281 0
-3278 3286 0
-3279 3282 0
-3279 3286 0
-3280 3283 0
-3280 3286 0
-3281 -3282 0
-3281 -3283 0
-3282 -3283 0
-3284 -3285 0
-3284 -3286 0
-3285 -3286 0
c Encoding variable: variant_fields_00002_00007_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00007_00004' direct represents '1' with '3287'
c Var 'variant_fields_00002_00007_00004' direct represents '2' with '3288'
c Var 'variant_fields_00002_00007_00004' direct represents '3' with '3289'
c Var 'variant_fields_00002_00007_00004' direct represents '4' with '3290'
c Var 'variant_fields_00002_00007_00004' direct represents '5' with '3291'
c Var 'variant_fields_00002_00007_00004' direct represents '6' with '3292'
c Var 'variant_fields_00002_00007_00004' direct represents '7' with '3293'
c Var 'variant_fields_00002_00007_00004' direct represents '8' with '3294'
c Var 'variant_fields_00002_00007_00004' direct represents '9' with '3295'
3287 3288 3289 3290 3291 3292 3293 3294 3295 0
-3287 3296 0
-3287 3299 0
-3288 3297 0
-3288 3299 0
-3289 3298 0
-3289 3299 0
-3290 3296 0
-3290 3300 0
-3291 3297 0
-3291 3300 0
-3292 3298 0
-3292 3300 0
-3293 3296 0
-3293 3301 0
-3294 3297 0
-3294 3301 0
-3295 3298 0
-3295 3301 0
-3296 -3297 0
-3296 -3298 0
-3297 -3298 0
-3299 -3300 0
-3299 -3301 0
-3300 -3301 0
c Encoding variable: variant_fields_00002_00007_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00007_00005' direct represents '1' with '3302'
c Var 'variant_fields_00002_00007_00005' direct represents '2' with '3303'
c Var 'variant_fields_00002_00007_00005' direct represents '3' with '3304'
c Var 'variant_fields_00002_00007_00005' direct represents '4' with '3305'
c Var 'variant_fields_00002_00007_00005' direct represents '5' with '3306'
c Var 'variant_fields_00002_00007_00005' direct represents '6' with '3307'
c Var 'variant_fields_00002_00007_00005' direct represents '7' with '3308'
c Var 'variant_fields_00002_00007_00005' direct represents '8' with '3309'
c Var 'variant_fields_00002_00007_00005' direct represents '9' with '3310'
3302 3303 3304 3305 3306 3307 3308 3309 3310 0
-3302 3311 0
-3302 3314 0
-3303 3312 0
-3303 3314 0
-3304 3313 0
-3304 3314 0
-3305 3311 0
-3305 3315 0
-3306 3312 0
-3306 3315 0
-3307 3313 0
-3307 3315 0
-3308 3311 0
-3308 3316 0
-3309 3312 0
-3309 3316 0
-3310 3313 0
-3310 3316 0
-3311 -3312 0
-3311 -3313 0
-3312 -3313 0
-3314 -3315 0
-3314 -3316 0
-3315 -3316 0
c Encoding variable: variant_fields_00002_00007_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00007_00006' direct represents '1' with '3317'
c Var 'variant_fields_00002_00007_00006' direct represents '2' with '3318'
c Var 'variant_fields_00002_00007_00006' direct represents '3' with '3319'
c Var 'variant_fields_00002_00007_00006' direct represents '4' with '3320'
c Var 'variant_fields_00002_00007_00006' direct represents '5' with '3321'
c Var 'variant_fields_00002_00007_00006' direct represents '6' with '3322'
c Var 'variant_fields_00002_00007_00006' direct represents '7' with '3323'
c Var 'variant_fields_00002_00007_00006' direct represents '8' with '3324'
c Var 'variant_fields_00002_00007_00006' direct represents '9' with '3325'
3317 3318 3319 3320 3321 3322 3323 3324 3325 0
-3317 3326 0
-3317 3329 0
-3318 3327 0
-3318 3329 0
-3319 3328 0
-3319 3329 0
-3320 3326 0
-3320 3330 0
-3321 3327 0
-3321 3330 0
-3322 3328 0
-3322 3330 0
-3323 3326 0
-3323 3331 0
-3324 3327 0
-3324 3331 0
-3325 3328 0
-3325 3331 0
-3326 -3327 0
-3326 -3328 0
-3327 -3328 0
-3329 -3330 0
-3329 -3331 0
-3330 -3331 0
c Encoding variable: variant_fields_00002_00007_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00007_00007' direct represents '1' with '3332'
c Var 'variant_fields_00002_00007_00007' direct represents '2' with '3333'
c Var 'variant_fields_00002_00007_00007' direct represents '3' with '3334'
c Var 'variant_fields_00002_00007_00007' direct represents '4' with '3335'
c Var 'variant_fields_00002_00007_00007' direct represents '5' with '3336'
c Var 'variant_fields_00002_00007_00007' direct represents '6' with '3337'
c Var 'variant_fields_00002_00007_00007' direct represents '7' with '3338'
c Var 'variant_fields_00002_00007_00007' direct represents '8' with '3339'
c Var 'variant_fields_00002_00007_00007' direct represents '9' with '3340'
3332 3333 3334 3335 3336 3337 3338 3339 3340 0
-3332 3341 0
-3332 3344 0
-3333 3342 0
-3333 3344 0
-3334 3343 0
-3334 3344 0
-3335 3341 0
-3335 3345 0
-3336 3342 0
-3336 3345 0
-3337 3343 0
-3337 3345 0
-3338 3341 0
-3338 3346 0
-3339 3342 0
-3339 3346 0
-3340 3343 0
-3340 3346 0
-3341 -3342 0
-3341 -3343 0
-3342 -3343 0
-3344 -3345 0
-3344 -3346 0
-3345 -3346 0
c Encoding variable: variant_fields_00002_00007_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00007_00008' direct represents '1' with '3347'
c Var 'variant_fields_00002_00007_00008' direct represents '2' with '3348'
c Var 'variant_fields_00002_00007_00008' direct represents '3' with '3349'
c Var 'variant_fields_00002_00007_00008' direct represents '4' with '3350'
c Var 'variant_fields_00002_00007_00008' direct represents '5' with '3351'
c Var 'variant_fields_00002_00007_00008' direct represents '6' with '3352'
c Var 'variant_fields_00002_00007_00008' direct represents '7' with '3353'
c Var 'variant_fields_00002_00007_00008' direct represents '8' with '3354'
c Var 'variant_fields_00002_00007_00008' direct represents '9' with '3355'
3347 3348 3349 3350 3351 3352 3353 3354 3355 0
-3347 3356 0
-3347 3359 0
-3348 3357 0
-3348 3359 0
-3349 3358 0
-3349 3359 0
-3350 3356 0
-3350 3360 0
-3351 3357 0
-3351 3360 0
-3352 3358 0
-3352 3360 0
-3353 3356 0
-3353 3361 0
-3354 3357 0
-3354 3361 0
-3355 3358 0
-3355 3361 0
-3356 -3357 0
-3356 -3358 0
-3357 -3358 0
-3359 -3360 0
-3359 -3361 0
-3360 -3361 0
c Encoding variable: variant_fields_00002_00007_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00007_00009' direct represents '1' with '3362'
c Var 'variant_fields_00002_00007_00009' direct represents '2' with '3363'
c Var 'variant_fields_00002_00007_00009' direct represents '3' with '3364'
c Var 'variant_fields_00002_00007_00009' direct represents '4' with '3365'
c Var 'variant_fields_00002_00007_00009' direct represents '5' with '3366'
c Var 'variant_fields_00002_00007_00009' direct represents '6' with '3367'
c Var 'variant_fields_00002_00007_00009' direct represents '7' with '3368'
c Var 'variant_fields_00002_00007_00009' direct represents '8' with '3369'
c Var 'variant_fields_00002_00007_00009' direct represents '9' with '3370'
3362 3363 3364 3365 3366 3367 3368 3369 3370 0
-3362 3371 0
-3362 3374 0
-3363 3372 0
-3363 3374 0
-3364 3373 0
-3364 3374 0
-3365 3371 0
-3365 3375 0
-3366 3372 0
-3366 3375 0
-3367 3373 0
-3367 3375 0
-3368 3371 0
-3368 3376 0
-3369 3372 0
-3369 3376 0
-3370 3373 0
-3370 3376 0
-3371 -3372 0
-3371 -3373 0
-3372 -3373 0
-3374 -3375 0
-3374 -3376 0
-3375 -3376 0
c Encoding variable: variant_fields_00002_00008_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00008_00001' direct represents '1' with '3377'
c Var 'variant_fields_00002_00008_00001' direct represents '2' with '3378'
c Var 'variant_fields_00002_00008_00001' direct represents '3' with '3379'
c Var 'variant_fields_00002_00008_00001' direct represents '4' with '3380'
c Var 'variant_fields_00002_00008_00001' direct represents '5' with '3381'
c Var 'variant_fields_00002_00008_00001' direct represents '6' with '3382'
c Var 'variant_fields_00002_00008_00001' direct represents '7' with '3383'
c Var 'variant_fields_00002_00008_00001' direct represents '8' with '3384'
c Var 'variant_fields_00002_00008_00001' direct represents '9' with '3385'
3377 3378 3379 3380 3381 3382 3383 3384 3385 0
-3377 3386 0
-3377 3389 0
-3378 3387 0
-3378 3389 0
-3379 3388 0
-3379 3389 0
-3380 3386 0
-3380 3390 0
-3381 3387 0
-3381 3390 0
-3382 3388 0
-3382 3390 0
-3383 3386 0
-3383 3391 0
-3384 3387 0
-3384 3391 0
-3385 3388 0
-3385 3391 0
-3386 -3387 0
-3386 -3388 0
-3387 -3388 0
-3389 -3390 0
-3389 -3391 0
-3390 -3391 0
c Encoding variable: variant_fields_00002_00008_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00008_00002' direct represents '1' with '3392'
c Var 'variant_fields_00002_00008_00002' direct represents '2' with '3393'
c Var 'variant_fields_00002_00008_00002' direct represents '3' with '3394'
c Var 'variant_fields_00002_00008_00002' direct represents '4' with '3395'
c Var 'variant_fields_00002_00008_00002' direct represents '5' with '3396'
c Var 'variant_fields_00002_00008_00002' direct represents '6' with '3397'
c Var 'variant_fields_00002_00008_00002' direct represents '7' with '3398'
c Var 'variant_fields_00002_00008_00002' direct represents '8' with '3399'
c Var 'variant_fields_00002_00008_00002' direct represents '9' with '3400'
3392 3393 3394 3395 3396 3397 3398 3399 3400 0
-3392 3401 0
-3392 3404 0
-3393 3402 0
-3393 3404 0
-3394 3403 0
-3394 3404 0
-3395 3401 0
-3395 3405 0
-3396 3402 0
-3396 3405 0
-3397 3403 0
-3397 3405 0
-3398 3401 0
-3398 3406 0
-3399 3402 0
-3399 3406 0
-3400 3403 0
-3400 3406 0
-3401 -3402 0
-3401 -3403 0
-3402 -3403 0
-3404 -3405 0
-3404 -3406 0
-3405 -3406 0
c Encoding variable: variant_fields_00002_00008_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00008_00003' direct represents '1' with '3407'
c Var 'variant_fields_00002_00008_00003' direct represents '2' with '3408'
c Var 'variant_fields_00002_00008_00003' direct represents '3' with '3409'
c Var 'variant_fields_00002_00008_00003' direct represents '4' with '3410'
c Var 'variant_fields_00002_00008_00003' direct represents '5' with '3411'
c Var 'variant_fields_00002_00008_00003' direct represents '6' with '3412'
c Var 'variant_fields_00002_00008_00003' direct represents '7' with '3413'
c Var 'variant_fields_00002_00008_00003' direct represents '8' with '3414'
c Var 'variant_fields_00002_00008_00003' direct represents '9' with '3415'
3407 3408 3409 3410 3411 3412 3413 3414 3415 0
-3407 3416 0
-3407 3419 0
-3408 3417 0
-3408 3419 0
-3409 3418 0
-3409 3419 0
-3410 3416 0
-3410 3420 0
-3411 3417 0
-3411 3420 0
-3412 3418 0
-3412 3420 0
-3413 3416 0
-3413 3421 0
-3414 3417 0
-3414 3421 0
-3415 3418 0
-3415 3421 0
-3416 -3417 0
-3416 -3418 0
-3417 -3418 0
-3419 -3420 0
-3419 -3421 0
-3420 -3421 0
c Encoding variable: variant_fields_00002_00008_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00008_00004' direct represents '1' with '3422'
c Var 'variant_fields_00002_00008_00004' direct represents '2' with '3423'
c Var 'variant_fields_00002_00008_00004' direct represents '3' with '3424'
c Var 'variant_fields_00002_00008_00004' direct represents '4' with '3425'
c Var 'variant_fields_00002_00008_00004' direct represents '5' with '3426'
c Var 'variant_fields_00002_00008_00004' direct represents '6' with '3427'
c Var 'variant_fields_00002_00008_00004' direct represents '7' with '3428'
c Var 'variant_fields_00002_00008_00004' direct represents '8' with '3429'
c Var 'variant_fields_00002_00008_00004' direct represents '9' with '3430'
3422 3423 3424 3425 3426 3427 3428 3429 3430 0
-3422 3431 0
-3422 3434 0
-3423 3432 0
-3423 3434 0
-3424 3433 0
-3424 3434 0
-3425 3431 0
-3425 3435 0
-3426 3432 0
-3426 3435 0
-3427 3433 0
-3427 3435 0
-3428 3431 0
-3428 3436 0
-3429 3432 0
-3429 3436 0
-3430 3433 0
-3430 3436 0
-3431 -3432 0
-3431 -3433 0
-3432 -3433 0
-3434 -3435 0
-3434 -3436 0
-3435 -3436 0
c Encoding variable: variant_fields_00002_00008_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00008_00005' direct represents '1' with '3437'
c Var 'variant_fields_00002_00008_00005' direct represents '2' with '3438'
c Var 'variant_fields_00002_00008_00005' direct represents '3' with '3439'
c Var 'variant_fields_00002_00008_00005' direct represents '4' with '3440'
c Var 'variant_fields_00002_00008_00005' direct represents '5' with '3441'
c Var 'variant_fields_00002_00008_00005' direct represents '6' with '3442'
c Var 'variant_fields_00002_00008_00005' direct represents '7' with '3443'
c Var 'variant_fields_00002_00008_00005' direct represents '8' with '3444'
c Var 'variant_fields_00002_00008_00005' direct represents '9' with '3445'
3437 3438 3439 3440 3441 3442 3443 3444 3445 0
-3437 3446 0
-3437 3449 0
-3438 3447 0
-3438 3449 0
-3439 3448 0
-3439 3449 0
-3440 3446 0
-3440 3450 0
-3441 3447 0
-3441 3450 0
-3442 3448 0
-3442 3450 0
-3443 3446 0
-3443 3451 0
-3444 3447 0
-3444 3451 0
-3445 3448 0
-3445 3451 0
-3446 -3447 0
-3446 -3448 0
-3447 -3448 0
-3449 -3450 0
-3449 -3451 0
-3450 -3451 0
c Encoding variable: variant_fields_00002_00008_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00008_00006' direct represents '1' with '3452'
c Var 'variant_fields_00002_00008_00006' direct represents '2' with '3453'
c Var 'variant_fields_00002_00008_00006' direct represents '3' with '3454'
c Var 'variant_fields_00002_00008_00006' direct represents '4' with '3455'
c Var 'variant_fields_00002_00008_00006' direct represents '5' with '3456'
c Var 'variant_fields_00002_00008_00006' direct represents '6' with '3457'
c Var 'variant_fields_00002_00008_00006' direct represents '7' with '3458'
c Var 'variant_fields_00002_00008_00006' direct represents '8' with '3459'
c Var 'variant_fields_00002_00008_00006' direct represents '9' with '3460'
3452 3453 3454 3455 3456 3457 3458 3459 3460 0
-3452 3461 0
-3452 3464 0
-3453 3462 0
-3453 3464 0
-3454 3463 0
-3454 3464 0
-3455 3461 0
-3455 3465 0
-3456 3462 0
-3456 3465 0
-3457 3463 0
-3457 3465 0
-3458 3461 0
-3458 3466 0
-3459 3462 0
-3459 3466 0
-3460 3463 0
-3460 3466 0
-3461 -3462 0
-3461 -3463 0
-3462 -3463 0
-3464 -3465 0
-3464 -3466 0
-3465 -3466 0
c Encoding variable: variant_fields_00002_00008_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00008_00007' direct represents '1' with '3467'
c Var 'variant_fields_00002_00008_00007' direct represents '2' with '3468'
c Var 'variant_fields_00002_00008_00007' direct represents '3' with '3469'
c Var 'variant_fields_00002_00008_00007' direct represents '4' with '3470'
c Var 'variant_fields_00002_00008_00007' direct represents '5' with '3471'
c Var 'variant_fields_00002_00008_00007' direct represents '6' with '3472'
c Var 'variant_fields_00002_00008_00007' direct represents '7' with '3473'
c Var 'variant_fields_00002_00008_00007' direct represents '8' with '3474'
c Var 'variant_fields_00002_00008_00007' direct represents '9' with '3475'
3467 3468 3469 3470 3471 3472 3473 3474 3475 0
-3467 3476 0
-3467 3479 0
-3468 3477 0
-3468 3479 0
-3469 3478 0
-3469 3479 0
-3470 3476 0
-3470 3480 0
-3471 3477 0
-3471 3480 0
-3472 3478 0
-3472 3480 0
-3473 3476 0
-3473 3481 0
-3474 3477 0
-3474 3481 0
-3475 3478 0
-3475 3481 0
-3476 -3477 0
-3476 -3478 0
-3477 -3478 0
-3479 -3480 0
-3479 -3481 0
-3480 -3481 0
c Encoding variable: variant_fields_00002_00008_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00008_00008' direct represents '1' with '3482'
c Var 'variant_fields_00002_00008_00008' direct represents '2' with '3483'
c Var 'variant_fields_00002_00008_00008' direct represents '3' with '3484'
c Var 'variant_fields_00002_00008_00008' direct represents '4' with '3485'
c Var 'variant_fields_00002_00008_00008' direct represents '5' with '3486'
c Var 'variant_fields_00002_00008_00008' direct represents '6' with '3487'
c Var 'variant_fields_00002_00008_00008' direct represents '7' with '3488'
c Var 'variant_fields_00002_00008_00008' direct represents '8' with '3489'
c Var 'variant_fields_00002_00008_00008' direct represents '9' with '3490'
3482 3483 3484 3485 3486 3487 3488 3489 3490 0
-3482 3491 0
-3482 3494 0
-3483 3492 0
-3483 3494 0
-3484 3493 0
-3484 3494 0
-3485 3491 0
-3485 3495 0
-3486 3492 0
-3486 3495 0
-3487 3493 0
-3487 3495 0
-3488 3491 0
-3488 3496 0
-3489 3492 0
-3489 3496 0
-3490 3493 0
-3490 3496 0
-3491 -3492 0
-3491 -3493 0
-3492 -3493 0
-3494 -3495 0
-3494 -3496 0
-3495 -3496 0
c Encoding variable: variant_fields_00002_00008_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00008_00009' direct represents '1' with '3497'
c Var 'variant_fields_00002_00008_00009' direct represents '2' with '3498'
c Var 'variant_fields_00002_00008_00009' direct represents '3' with '3499'
c Var 'variant_fields_00002_00008_00009' direct represents '4' with '3500'
c Var 'variant_fields_00002_00008_00009' direct represents '5' with '3501'
c Var 'variant_fields_00002_00008_00009' direct represents '6' with '3502'
c Var 'variant_fields_00002_00008_00009' direct represents '7' with '3503'
c Var 'variant_fields_00002_00008_00009' direct represents '8' with '3504'
c Var 'variant_fields_00002_00008_00009' direct represents '9' with '3505'
3497 3498 3499 3500 3501 3502 3503 3504 3505 0
-3497 3506 0
-3497 3509 0
-3498 3507 0
-3498 3509 0
-3499 3508 0
-3499 3509 0
-3500 3506 0
-3500 3510 0
-3501 3507 0
-3501 3510 0
-3502 3508 0
-3502 3510 0
-3503 3506 0
-3503 3511 0
-3504 3507 0
-3504 3511 0
-3505 3508 0
-3505 3511 0
-3506 -3507 0
-3506 -3508 0
-3507 -3508 0
-3509 -3510 0
-3509 -3511 0
-3510 -3511 0
c Encoding variable: variant_fields_00002_00009_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00009_00001' direct represents '1' with '3512'
c Var 'variant_fields_00002_00009_00001' direct represents '2' with '3513'
c Var 'variant_fields_00002_00009_00001' direct represents '3' with '3514'
c Var 'variant_fields_00002_00009_00001' direct represents '4' with '3515'
c Var 'variant_fields_00002_00009_00001' direct represents '5' with '3516'
c Var 'variant_fields_00002_00009_00001' direct represents '6' with '3517'
c Var 'variant_fields_00002_00009_00001' direct represents '7' with '3518'
c Var 'variant_fields_00002_00009_00001' direct represents '8' with '3519'
c Var 'variant_fields_00002_00009_00001' direct represents '9' with '3520'
3512 3513 3514 3515 3516 3517 3518 3519 3520 0
-3512 3521 0
-3512 3524 0
-3513 3522 0
-3513 3524 0
-3514 3523 0
-3514 3524 0
-3515 3521 0
-3515 3525 0
-3516 3522 0
-3516 3525 0
-3517 3523 0
-3517 3525 0
-3518 3521 0
-3518 3526 0
-3519 3522 0
-3519 3526 0
-3520 3523 0
-3520 3526 0
-3521 -3522 0
-3521 -3523 0
-3522 -3523 0
-3524 -3525 0
-3524 -3526 0
-3525 -3526 0
c Encoding variable: variant_fields_00002_00009_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00009_00002' direct represents '1' with '3527'
c Var 'variant_fields_00002_00009_00002' direct represents '2' with '3528'
c Var 'variant_fields_00002_00009_00002' direct represents '3' with '3529'
c Var 'variant_fields_00002_00009_00002' direct represents '4' with '3530'
c Var 'variant_fields_00002_00009_00002' direct represents '5' with '3531'
c Var 'variant_fields_00002_00009_00002' direct represents '6' with '3532'
c Var 'variant_fields_00002_00009_00002' direct represents '7' with '3533'
c Var 'variant_fields_00002_00009_00002' direct represents '8' with '3534'
c Var 'variant_fields_00002_00009_00002' direct represents '9' with '3535'
3527 3528 3529 3530 3531 3532 3533 3534 3535 0
-3527 3536 0
-3527 3539 0
-3528 3537 0
-3528 3539 0
-3529 3538 0
-3529 3539 0
-3530 3536 0
-3530 3540 0
-3531 3537 0
-3531 3540 0
-3532 3538 0
-3532 3540 0
-3533 3536 0
-3533 3541 0
-3534 3537 0
-3534 3541 0
-3535 3538 0
-3535 3541 0
-3536 -3537 0
-3536 -3538 0
-3537 -3538 0
-3539 -3540 0
-3539 -3541 0
-3540 -3541 0
c Encoding variable: variant_fields_00002_00009_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00009_00003' direct represents '1' with '3542'
c Var 'variant_fields_00002_00009_00003' direct represents '2' with '3543'
c Var 'variant_fields_00002_00009_00003' direct represents '3' with '3544'
c Var 'variant_fields_00002_00009_00003' direct represents '4' with '3545'
c Var 'variant_fields_00002_00009_00003' direct represents '5' with '3546'
c Var 'variant_fields_00002_00009_00003' direct represents '6' with '3547'
c Var 'variant_fields_00002_00009_00003' direct represents '7' with '3548'
c Var 'variant_fields_00002_00009_00003' direct represents '8' with '3549'
c Var 'variant_fields_00002_00009_00003' direct represents '9' with '3550'
3542 3543 3544 3545 3546 3547 3548 3549 3550 0
-3542 3551 0
-3542 3554 0
-3543 3552 0
-3543 3554 0
-3544 3553 0
-3544 3554 0
-3545 3551 0
-3545 3555 0
-3546 3552 0
-3546 3555 0
-3547 3553 0
-3547 3555 0
-3548 3551 0
-3548 3556 0
-3549 3552 0
-3549 3556 0
-3550 3553 0
-3550 3556 0
-3551 -3552 0
-3551 -3553 0
-3552 -3553 0
-3554 -3555 0
-3554 -3556 0
-3555 -3556 0
c Encoding variable: variant_fields_00002_00009_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00009_00004' direct represents '1' with '3557'
c Var 'variant_fields_00002_00009_00004' direct represents '2' with '3558'
c Var 'variant_fields_00002_00009_00004' direct represents '3' with '3559'
c Var 'variant_fields_00002_00009_00004' direct represents '4' with '3560'
c Var 'variant_fields_00002_00009_00004' direct represents '5' with '3561'
c Var 'variant_fields_00002_00009_00004' direct represents '6' with '3562'
c Var 'variant_fields_00002_00009_00004' direct represents '7' with '3563'
c Var 'variant_fields_00002_00009_00004' direct represents '8' with '3564'
c Var 'variant_fields_00002_00009_00004' direct represents '9' with '3565'
3557 3558 3559 3560 3561 3562 3563 3564 3565 0
-3557 3566 0
-3557 3569 0
-3558 3567 0
-3558 3569 0
-3559 3568 0
-3559 3569 0
-3560 3566 0
-3560 3570 0
-3561 3567 0
-3561 3570 0
-3562 3568 0
-3562 3570 0
-3563 3566 0
-3563 3571 0
-3564 3567 0
-3564 3571 0
-3565 3568 0
-3565 3571 0
-3566 -3567 0
-3566 -3568 0
-3567 -3568 0
-3569 -3570 0
-3569 -3571 0
-3570 -3571 0
c Encoding variable: variant_fields_00002_00009_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00009_00005' direct represents '1' with '3572'
c Var 'variant_fields_00002_00009_00005' direct represents '2' with '3573'
c Var 'variant_fields_00002_00009_00005' direct represents '3' with '3574'
c Var 'variant_fields_00002_00009_00005' direct represents '4' with '3575'
c Var 'variant_fields_00002_00009_00005' direct represents '5' with '3576'
c Var 'variant_fields_00002_00009_00005' direct represents '6' with '3577'
c Var 'variant_fields_00002_00009_00005' direct represents '7' with '3578'
c Var 'variant_fields_00002_00009_00005' direct represents '8' with '3579'
c Var 'variant_fields_00002_00009_00005' direct represents '9' with '3580'
3572 3573 3574 3575 3576 3577 3578 3579 3580 0
-3572 3581 0
-3572 3584 0
-3573 3582 0
-3573 3584 0
-3574 3583 0
-3574 3584 0
-3575 3581 0
-3575 3585 0
-3576 3582 0
-3576 3585 0
-3577 3583 0
-3577 3585 0
-3578 3581 0
-3578 3586 0
-3579 3582 0
-3579 3586 0
-3580 3583 0
-3580 3586 0
-3581 -3582 0
-3581 -3583 0
-3582 -3583 0
-3584 -3585 0
-3584 -3586 0
-3585 -3586 0
c Encoding variable: variant_fields_00002_00009_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00009_00006' direct represents '1' with '3587'
c Var 'variant_fields_00002_00009_00006' direct represents '2' with '3588'
c Var 'variant_fields_00002_00009_00006' direct represents '3' with '3589'
c Var 'variant_fields_00002_00009_00006' direct represents '4' with '3590'
c Var 'variant_fields_00002_00009_00006' direct represents '5' with '3591'
c Var 'variant_fields_00002_00009_00006' direct represents '6' with '3592'
c Var 'variant_fields_00002_00009_00006' direct represents '7' with '3593'
c Var 'variant_fields_00002_00009_00006' direct represents '8' with '3594'
c Var 'variant_fields_00002_00009_00006' direct represents '9' with '3595'
3587 3588 3589 3590 3591 3592 3593 3594 3595 0
-3587 3596 0
-3587 3599 0
-3588 3597 0
-3588 3599 0
-3589 3598 0
-3589 3599 0
-3590 3596 0
-3590 3600 0
-3591 3597 0
-3591 3600 0
-3592 3598 0
-3592 3600 0
-3593 3596 0
-3593 3601 0
-3594 3597 0
-3594 3601 0
-3595 3598 0
-3595 3601 0
-3596 -3597 0
-3596 -3598 0
-3597 -3598 0
-3599 -3600 0
-3599 -3601 0
-3600 -3601 0
c Encoding variable: variant_fields_00002_00009_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00009_00007' direct represents '1' with '3602'
c Var 'variant_fields_00002_00009_00007' direct represents '2' with '3603'
c Var 'variant_fields_00002_00009_00007' direct represents '3' with '3604'
c Var 'variant_fields_00002_00009_00007' direct represents '4' with '3605'
c Var 'variant_fields_00002_00009_00007' direct represents '5' with '3606'
c Var 'variant_fields_00002_00009_00007' direct represents '6' with '3607'
c Var 'variant_fields_00002_00009_00007' direct represents '7' with '3608'
c Var 'variant_fields_00002_00009_00007' direct represents '8' with '3609'
c Var 'variant_fields_00002_00009_00007' direct represents '9' with '3610'
3602 3603 3604 3605 3606 3607 3608 3609 3610 0
-3602 3611 0
-3602 3614 0
-3603 3612 0
-3603 3614 0
-3604 3613 0
-3604 3614 0
-3605 3611 0
-3605 3615 0
-3606 3612 0
-3606 3615 0
-3607 3613 0
-3607 3615 0
-3608 3611 0
-3608 3616 0
-3609 3612 0
-3609 3616 0
-3610 3613 0
-3610 3616 0
-3611 -3612 0
-3611 -3613 0
-3612 -3613 0
-3614 -3615 0
-3614 -3616 0
-3615 -3616 0
c Encoding variable: variant_fields_00002_00009_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00009_00008' direct represents '1' with '3617'
c Var 'variant_fields_00002_00009_00008' direct represents '2' with '3618'
c Var 'variant_fields_00002_00009_00008' direct represents '3' with '3619'
c Var 'variant_fields_00002_00009_00008' direct represents '4' with '3620'
c Var 'variant_fields_00002_00009_00008' direct represents '5' with '3621'
c Var 'variant_fields_00002_00009_00008' direct represents '6' with '3622'
c Var 'variant_fields_00002_00009_00008' direct represents '7' with '3623'
c Var 'variant_fields_00002_00009_00008' direct represents '8' with '3624'
c Var 'variant_fields_00002_00009_00008' direct represents '9' with '3625'
3617 3618 3619 3620 3621 3622 3623 3624 3625 0
-3617 3626 0
-3617 3629 0
-3618 3627 0
-3618 3629 0
-3619 3628 0
-3619 3629 0
-3620 3626 0
-3620 3630 0
-3621 3627 0
-3621 3630 0
-3622 3628 0
-3622 3630 0
-3623 3626 0
-3623 3631 0
-3624 3627 0
-3624 3631 0
-3625 3628 0
-3625 3631 0
-3626 -3627 0
-3626 -3628 0
-3627 -3628 0
-3629 -3630 0
-3629 -3631 0
-3630 -3631 0
c Encoding variable: variant_fields_00002_00009_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00002_00009_00009' direct represents '1' with '3632'
c Var 'variant_fields_00002_00009_00009' direct represents '2' with '3633'
c Var 'variant_fields_00002_00009_00009' direct represents '3' with '3634'
c Var 'variant_fields_00002_00009_00009' direct represents '4' with '3635'
c Var 'variant_fields_00002_00009_00009' direct represents '5' with '3636'
c Var 'variant_fields_00002_00009_00009' direct represents '6' with '3637'
c Var 'variant_fields_00002_00009_00009' direct represents '7' with '3638'
c Var 'variant_fields_00002_00009_00009' direct represents '8' with '3639'
c Var 'variant_fields_00002_00009_00009' direct represents '9' with '3640'
3632 3633 3634 3635 3636 3637 3638 3639 3640 0
-3632 3641 0
-3632 3644 0
-3633 3642 0
-3633 3644 0
-3634 3643 0
-3634 3644 0
-3635 3641 0
-3635 3645 0
-3636 3642 0
-3636 3645 0
-3637 3643 0
-3637 3645 0
-3638 3641 0
-3638 3646 0
-3639 3642 0
-3639 3646 0
-3640 3643 0
-3640 3646 0
-3641 -3642 0
-3641 -3643 0
-3642 -3643 0
-3644 -3645 0
-3644 -3646 0
-3645 -3646 0
c Encoding variable: variant_fields_00003_00001_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00001_00001' direct represents '1' with '3647'
c Var 'variant_fields_00003_00001_00001' direct represents '2' with '3648'
c Var 'variant_fields_00003_00001_00001' direct represents '3' with '3649'
c Var 'variant_fields_00003_00001_00001' direct represents '4' with '3650'
c Var 'variant_fields_00003_00001_00001' direct represents '5' with '3651'
c Var 'variant_fields_00003_00001_00001' direct represents '6' with '3652'
c Var 'variant_fields_00003_00001_00001' direct represents '7' with '3653'
c Var 'variant_fields_00003_00001_00001' direct represents '8' with '3654'
c Var 'variant_fields_00003_00001_00001' direct represents '9' with '3655'
3647 3648 3649 3650 3651 3652 3653 3654 3655 0
-3647 3656 0
-3647 3659 0
-3648 3657 0
-3648 3659 0
-3649 3658 0
-3649 3659 0
-3650 3656 0
-3650 3660 0
-3651 3657 0
-3651 3660 0
-3652 3658 0
-3652 3660 0
-3653 3656 0
-3653 3661 0
-3654 3657 0
-3654 3661 0
-3655 3658 0
-3655 3661 0
-3656 -3657 0
-3656 -3658 0
-3657 -3658 0
-3659 -3660 0
-3659 -3661 0
-3660 -3661 0
c Encoding variable: variant_fields_00003_00001_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00001_00002' direct represents '1' with '3662'
c Var 'variant_fields_00003_00001_00002' direct represents '2' with '3663'
c Var 'variant_fields_00003_00001_00002' direct represents '3' with '3664'
c Var 'variant_fields_00003_00001_00002' direct represents '4' with '3665'
c Var 'variant_fields_00003_00001_00002' direct represents '5' with '3666'
c Var 'variant_fields_00003_00001_00002' direct represents '6' with '3667'
c Var 'variant_fields_00003_00001_00002' direct represents '7' with '3668'
c Var 'variant_fields_00003_00001_00002' direct represents '8' with '3669'
c Var 'variant_fields_00003_00001_00002' direct represents '9' with '3670'
3662 3663 3664 3665 3666 3667 3668 3669 3670 0
-3662 3671 0
-3662 3674 0
-3663 3672 0
-3663 3674 0
-3664 3673 0
-3664 3674 0
-3665 3671 0
-3665 3675 0
-3666 3672 0
-3666 3675 0
-3667 3673 0
-3667 3675 0
-3668 3671 0
-3668 3676 0
-3669 3672 0
-3669 3676 0
-3670 3673 0
-3670 3676 0
-3671 -3672 0
-3671 -3673 0
-3672 -3673 0
-3674 -3675 0
-3674 -3676 0
-3675 -3676 0
c Encoding variable: variant_fields_00003_00001_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00001_00003' direct represents '1' with '3677'
c Var 'variant_fields_00003_00001_00003' direct represents '2' with '3678'
c Var 'variant_fields_00003_00001_00003' direct represents '3' with '3679'
c Var 'variant_fields_00003_00001_00003' direct represents '4' with '3680'
c Var 'variant_fields_00003_00001_00003' direct represents '5' with '3681'
c Var 'variant_fields_00003_00001_00003' direct represents '6' with '3682'
c Var 'variant_fields_00003_00001_00003' direct represents '7' with '3683'
c Var 'variant_fields_00003_00001_00003' direct represents '8' with '3684'
c Var 'variant_fields_00003_00001_00003' direct represents '9' with '3685'
3677 3678 3679 3680 3681 3682 3683 3684 3685 0
-3677 3686 0
-3677 3689 0
-3678 3687 0
-3678 3689 0
-3679 3688 0
-3679 3689 0
-3680 3686 0
-3680 3690 0
-3681 3687 0
-3681 3690 0
-3682 3688 0
-3682 3690 0
-3683 3686 0
-3683 3691 0
-3684 3687 0
-3684 3691 0
-3685 3688 0
-3685 3691 0
-3686 -3687 0
-3686 -3688 0
-3687 -3688 0
-3689 -3690 0
-3689 -3691 0
-3690 -3691 0
c Encoding variable: variant_fields_00003_00001_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00001_00004' direct represents '1' with '3692'
c Var 'variant_fields_00003_00001_00004' direct represents '2' with '3693'
c Var 'variant_fields_00003_00001_00004' direct represents '3' with '3694'
c Var 'variant_fields_00003_00001_00004' direct represents '4' with '3695'
c Var 'variant_fields_00003_00001_00004' direct represents '5' with '3696'
c Var 'variant_fields_00003_00001_00004' direct represents '6' with '3697'
c Var 'variant_fields_00003_00001_00004' direct represents '7' with '3698'
c Var 'variant_fields_00003_00001_00004' direct represents '8' with '3699'
c Var 'variant_fields_00003_00001_00004' direct represents '9' with '3700'
3692 3693 3694 3695 3696 3697 3698 3699 3700 0
-3692 3701 0
-3692 3704 0
-3693 3702 0
-3693 3704 0
-3694 3703 0
-3694 3704 0
-3695 3701 0
-3695 3705 0
-3696 3702 0
-3696 3705 0
-3697 3703 0
-3697 3705 0
-3698 3701 0
-3698 3706 0
-3699 3702 0
-3699 3706 0
-3700 3703 0
-3700 3706 0
-3701 -3702 0
-3701 -3703 0
-3702 -3703 0
-3704 -3705 0
-3704 -3706 0
-3705 -3706 0
c Encoding variable: variant_fields_00003_00001_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00001_00005' direct represents '1' with '3707'
c Var 'variant_fields_00003_00001_00005' direct represents '2' with '3708'
c Var 'variant_fields_00003_00001_00005' direct represents '3' with '3709'
c Var 'variant_fields_00003_00001_00005' direct represents '4' with '3710'
c Var 'variant_fields_00003_00001_00005' direct represents '5' with '3711'
c Var 'variant_fields_00003_00001_00005' direct represents '6' with '3712'
c Var 'variant_fields_00003_00001_00005' direct represents '7' with '3713'
c Var 'variant_fields_00003_00001_00005' direct represents '8' with '3714'
c Var 'variant_fields_00003_00001_00005' direct represents '9' with '3715'
3707 3708 3709 3710 3711 3712 3713 3714 3715 0
-3707 3716 0
-3707 3719 0
-3708 3717 0
-3708 3719 0
-3709 3718 0
-3709 3719 0
-3710 3716 0
-3710 3720 0
-3711 3717 0
-3711 3720 0
-3712 3718 0
-3712 3720 0
-3713 3716 0
-3713 3721 0
-3714 3717 0
-3714 3721 0
-3715 3718 0
-3715 3721 0
-3716 -3717 0
-3716 -3718 0
-3717 -3718 0
-3719 -3720 0
-3719 -3721 0
-3720 -3721 0
c Encoding variable: variant_fields_00003_00001_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00001_00006' direct represents '1' with '3722'
c Var 'variant_fields_00003_00001_00006' direct represents '2' with '3723'
c Var 'variant_fields_00003_00001_00006' direct represents '3' with '3724'
c Var 'variant_fields_00003_00001_00006' direct represents '4' with '3725'
c Var 'variant_fields_00003_00001_00006' direct represents '5' with '3726'
c Var 'variant_fields_00003_00001_00006' direct represents '6' with '3727'
c Var 'variant_fields_00003_00001_00006' direct represents '7' with '3728'
c Var 'variant_fields_00003_00001_00006' direct represents '8' with '3729'
c Var 'variant_fields_00003_00001_00006' direct represents '9' with '3730'
3722 3723 3724 3725 3726 3727 3728 3729 3730 0
-3722 3731 0
-3722 3734 0
-3723 3732 0
-3723 3734 0
-3724 3733 0
-3724 3734 0
-3725 3731 0
-3725 3735 0
-3726 3732 0
-3726 3735 0
-3727 3733 0
-3727 3735 0
-3728 3731 0
-3728 3736 0
-3729 3732 0
-3729 3736 0
-3730 3733 0
-3730 3736 0
-3731 -3732 0
-3731 -3733 0
-3732 -3733 0
-3734 -3735 0
-3734 -3736 0
-3735 -3736 0
c Encoding variable: variant_fields_00003_00001_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00001_00007' direct represents '1' with '3737'
c Var 'variant_fields_00003_00001_00007' direct represents '2' with '3738'
c Var 'variant_fields_00003_00001_00007' direct represents '3' with '3739'
c Var 'variant_fields_00003_00001_00007' direct represents '4' with '3740'
c Var 'variant_fields_00003_00001_00007' direct represents '5' with '3741'
c Var 'variant_fields_00003_00001_00007' direct represents '6' with '3742'
c Var 'variant_fields_00003_00001_00007' direct represents '7' with '3743'
c Var 'variant_fields_00003_00001_00007' direct represents '8' with '3744'
c Var 'variant_fields_00003_00001_00007' direct represents '9' with '3745'
3737 3738 3739 3740 3741 3742 3743 3744 3745 0
-3737 3746 0
-3737 3749 0
-3738 3747 0
-3738 3749 0
-3739 3748 0
-3739 3749 0
-3740 3746 0
-3740 3750 0
-3741 3747 0
-3741 3750 0
-3742 3748 0
-3742 3750 0
-3743 3746 0
-3743 3751 0
-3744 3747 0
-3744 3751 0
-3745 3748 0
-3745 3751 0
-3746 -3747 0
-3746 -3748 0
-3747 -3748 0
-3749 -3750 0
-3749 -3751 0
-3750 -3751 0
c Encoding variable: variant_fields_00003_00001_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00001_00008' direct represents '1' with '3752'
c Var 'variant_fields_00003_00001_00008' direct represents '2' with '3753'
c Var 'variant_fields_00003_00001_00008' direct represents '3' with '3754'
c Var 'variant_fields_00003_00001_00008' direct represents '4' with '3755'
c Var 'variant_fields_00003_00001_00008' direct represents '5' with '3756'
c Var 'variant_fields_00003_00001_00008' direct represents '6' with '3757'
c Var 'variant_fields_00003_00001_00008' direct represents '7' with '3758'
c Var 'variant_fields_00003_00001_00008' direct represents '8' with '3759'
c Var 'variant_fields_00003_00001_00008' direct represents '9' with '3760'
3752 3753 3754 3755 3756 3757 3758 3759 3760 0
-3752 3761 0
-3752 3764 0
-3753 3762 0
-3753 3764 0
-3754 3763 0
-3754 3764 0
-3755 3761 0
-3755 3765 0
-3756 3762 0
-3756 3765 0
-3757 3763 0
-3757 3765 0
-3758 3761 0
-3758 3766 0
-3759 3762 0
-3759 3766 0
-3760 3763 0
-3760 3766 0
-3761 -3762 0
-3761 -3763 0
-3762 -3763 0
-3764 -3765 0
-3764 -3766 0
-3765 -3766 0
c Encoding variable: variant_fields_00003_00001_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00001_00009' direct represents '1' with '3767'
c Var 'variant_fields_00003_00001_00009' direct represents '2' with '3768'
c Var 'variant_fields_00003_00001_00009' direct represents '3' with '3769'
c Var 'variant_fields_00003_00001_00009' direct represents '4' with '3770'
c Var 'variant_fields_00003_00001_00009' direct represents '5' with '3771'
c Var 'variant_fields_00003_00001_00009' direct represents '6' with '3772'
c Var 'variant_fields_00003_00001_00009' direct represents '7' with '3773'
c Var 'variant_fields_00003_00001_00009' direct represents '8' with '3774'
c Var 'variant_fields_00003_00001_00009' direct represents '9' with '3775'
3767 3768 3769 3770 3771 3772 3773 3774 3775 0
-3767 3776 0
-3767 3779 0
-3768 3777 0
-3768 3779 0
-3769 3778 0
-3769 3779 0
-3770 3776 0
-3770 3780 0
-3771 3777 0
-3771 3780 0
-3772 3778 0
-3772 3780 0
-3773 3776 0
-3773 3781 0
-3774 3777 0
-3774 3781 0
-3775 3778 0
-3775 3781 0
-3776 -3777 0
-3776 -3778 0
-3777 -3778 0
-3779 -3780 0
-3779 -3781 0
-3780 -3781 0
c Encoding variable: variant_fields_00003_00002_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00002_00001' order represents '1' with '3782'
c Var 'variant_fields_00003_00002_00001' direct represents '1' with '3782'
c Var 'variant_fields_00003_00002_00001' order represents '2' with '3783'
-3782 3783 0
c Var 'variant_fields_00003_00002_00001' direct represents '2' with '3784'
3782 -3783 3784 0
-3784 3783 0
-3784 -3782 0
c Var 'variant_fields_00003_00002_00001' order represents '3' with '3785'
-3783 3785 0
c Var 'variant_fields_00003_00002_00001' direct represents '3' with '3786'
3783 -3785 3786 0
-3786 3785 0
-3786 -3783 0
c Var 'variant_fields_00003_00002_00001' order represents '4' with '3787'
-3785 3787 0
c Var 'variant_fields_00003_00002_00001' direct represents '4' with '3788'
3785 -3787 3788 0
-3788 3787 0
-3788 -3785 0
c Var 'variant_fields_00003_00002_00001' order represents '5' with '3789'
-3787 3789 0
c Var 'variant_fields_00003_00002_00001' direct represents '5' with '3790'
3787 -3789 3790 0
-3790 3789 0
-3790 -3787 0
c Var 'variant_fields_00003_00002_00001' order represents '6' with '3791'
-3789 3791 0
c Var 'variant_fields_00003_00002_00001' direct represents '6' with '3792'
3789 -3791 3792 0
-3792 3791 0
-3792 -3789 0
c Var 'variant_fields_00003_00002_00001' order represents '7' with '3793'
-3791 3793 0
c Var 'variant_fields_00003_00002_00001' direct represents '7' with '3794'
3791 -3793 3794 0
-3794 3793 0
-3794 -3791 0
c Var 'variant_fields_00003_00002_00001' order represents '8' with '3795'
-3793 3795 0
c Var 'variant_fields_00003_00002_00001' direct represents '8' with '3796'
3793 -3795 3796 0
-3796 3795 0
-3796 -3793 0
c Var 'variant_fields_00003_00002_00001' direct represents '9' with '-3795'
3782 3784 3786 3788 3790 3792 3794 3796 -3795 0
c Encoding variable: variant_fields_00003_00002_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00002_00002' direct represents '1' with '3797'
c Var 'variant_fields_00003_00002_00002' direct represents '2' with '3798'
c Var 'variant_fields_00003_00002_00002' direct represents '3' with '3799'
c Var 'variant_fields_00003_00002_00002' direct represents '4' with '3800'
c Var 'variant_fields_00003_00002_00002' direct represents '5' with '3801'
c Var 'variant_fields_00003_00002_00002' direct represents '6' with '3802'
c Var 'variant_fields_00003_00002_00002' direct represents '7' with '3803'
c Var 'variant_fields_00003_00002_00002' direct represents '8' with '3804'
c Var 'variant_fields_00003_00002_00002' direct represents '9' with '3805'
3797 3798 3799 3800 3801 3802 3803 3804 3805 0
-3797 3806 0
-3797 3809 0
-3798 3807 0
-3798 3809 0
-3799 3808 0
-3799 3809 0
-3800 3806 0
-3800 3810 0
-3801 3807 0
-3801 3810 0
-3802 3808 0
-3802 3810 0
-3803 3806 0
-3803 3811 0
-3804 3807 0
-3804 3811 0
-3805 3808 0
-3805 3811 0
-3806 -3807 0
-3806 -3808 0
-3807 -3808 0
-3809 -3810 0
-3809 -3811 0
-3810 -3811 0
c Encoding variable: variant_fields_00003_00002_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00002_00003' direct represents '1' with '3812'
c Var 'variant_fields_00003_00002_00003' direct represents '2' with '3813'
c Var 'variant_fields_00003_00002_00003' direct represents '3' with '3814'
c Var 'variant_fields_00003_00002_00003' direct represents '4' with '3815'
c Var 'variant_fields_00003_00002_00003' direct represents '5' with '3816'
c Var 'variant_fields_00003_00002_00003' direct represents '6' with '3817'
c Var 'variant_fields_00003_00002_00003' direct represents '7' with '3818'
c Var 'variant_fields_00003_00002_00003' direct represents '8' with '3819'
c Var 'variant_fields_00003_00002_00003' direct represents '9' with '3820'
3812 3813 3814 3815 3816 3817 3818 3819 3820 0
-3812 3821 0
-3812 3824 0
-3813 3822 0
-3813 3824 0
-3814 3823 0
-3814 3824 0
-3815 3821 0
-3815 3825 0
-3816 3822 0
-3816 3825 0
-3817 3823 0
-3817 3825 0
-3818 3821 0
-3818 3826 0
-3819 3822 0
-3819 3826 0
-3820 3823 0
-3820 3826 0
-3821 -3822 0
-3821 -3823 0
-3822 -3823 0
-3824 -3825 0
-3824 -3826 0
-3825 -3826 0
c Encoding variable: variant_fields_00003_00002_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00002_00004' direct represents '1' with '3827'
c Var 'variant_fields_00003_00002_00004' direct represents '2' with '3828'
c Var 'variant_fields_00003_00002_00004' direct represents '3' with '3829'
c Var 'variant_fields_00003_00002_00004' direct represents '4' with '3830'
c Var 'variant_fields_00003_00002_00004' direct represents '5' with '3831'
c Var 'variant_fields_00003_00002_00004' direct represents '6' with '3832'
c Var 'variant_fields_00003_00002_00004' direct represents '7' with '3833'
c Var 'variant_fields_00003_00002_00004' direct represents '8' with '3834'
c Var 'variant_fields_00003_00002_00004' direct represents '9' with '3835'
3827 3828 3829 3830 3831 3832 3833 3834 3835 0
-3827 3836 0
-3827 3839 0
-3828 3837 0
-3828 3839 0
-3829 3838 0
-3829 3839 0
-3830 3836 0
-3830 3840 0
-3831 3837 0
-3831 3840 0
-3832 3838 0
-3832 3840 0
-3833 3836 0
-3833 3841 0
-3834 3837 0
-3834 3841 0
-3835 3838 0
-3835 3841 0
-3836 -3837 0
-3836 -3838 0
-3837 -3838 0
-3839 -3840 0
-3839 -3841 0
-3840 -3841 0
c Encoding variable: variant_fields_00003_00002_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00002_00005' direct represents '1' with '3842'
c Var 'variant_fields_00003_00002_00005' direct represents '2' with '3843'
c Var 'variant_fields_00003_00002_00005' direct represents '3' with '3844'
c Var 'variant_fields_00003_00002_00005' direct represents '4' with '3845'
c Var 'variant_fields_00003_00002_00005' direct represents '5' with '3846'
c Var 'variant_fields_00003_00002_00005' direct represents '6' with '3847'
c Var 'variant_fields_00003_00002_00005' direct represents '7' with '3848'
c Var 'variant_fields_00003_00002_00005' direct represents '8' with '3849'
c Var 'variant_fields_00003_00002_00005' direct represents '9' with '3850'
3842 3843 3844 3845 3846 3847 3848 3849 3850 0
-3842 3851 0
-3842 3854 0
-3843 3852 0
-3843 3854 0
-3844 3853 0
-3844 3854 0
-3845 3851 0
-3845 3855 0
-3846 3852 0
-3846 3855 0
-3847 3853 0
-3847 3855 0
-3848 3851 0
-3848 3856 0
-3849 3852 0
-3849 3856 0
-3850 3853 0
-3850 3856 0
-3851 -3852 0
-3851 -3853 0
-3852 -3853 0
-3854 -3855 0
-3854 -3856 0
-3855 -3856 0
c Encoding variable: variant_fields_00003_00002_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00002_00006' direct represents '1' with '3857'
c Var 'variant_fields_00003_00002_00006' direct represents '2' with '3858'
c Var 'variant_fields_00003_00002_00006' direct represents '3' with '3859'
c Var 'variant_fields_00003_00002_00006' direct represents '4' with '3860'
c Var 'variant_fields_00003_00002_00006' direct represents '5' with '3861'
c Var 'variant_fields_00003_00002_00006' direct represents '6' with '3862'
c Var 'variant_fields_00003_00002_00006' direct represents '7' with '3863'
c Var 'variant_fields_00003_00002_00006' direct represents '8' with '3864'
c Var 'variant_fields_00003_00002_00006' direct represents '9' with '3865'
3857 3858 3859 3860 3861 3862 3863 3864 3865 0
-3857 3866 0
-3857 3869 0
-3858 3867 0
-3858 3869 0
-3859 3868 0
-3859 3869 0
-3860 3866 0
-3860 3870 0
-3861 3867 0
-3861 3870 0
-3862 3868 0
-3862 3870 0
-3863 3866 0
-3863 3871 0
-3864 3867 0
-3864 3871 0
-3865 3868 0
-3865 3871 0
-3866 -3867 0
-3866 -3868 0
-3867 -3868 0
-3869 -3870 0
-3869 -3871 0
-3870 -3871 0
c Encoding variable: variant_fields_00003_00002_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00002_00007' direct represents '1' with '3872'
c Var 'variant_fields_00003_00002_00007' direct represents '2' with '3873'
c Var 'variant_fields_00003_00002_00007' direct represents '3' with '3874'
c Var 'variant_fields_00003_00002_00007' direct represents '4' with '3875'
c Var 'variant_fields_00003_00002_00007' direct represents '5' with '3876'
c Var 'variant_fields_00003_00002_00007' direct represents '6' with '3877'
c Var 'variant_fields_00003_00002_00007' direct represents '7' with '3878'
c Var 'variant_fields_00003_00002_00007' direct represents '8' with '3879'
c Var 'variant_fields_00003_00002_00007' direct represents '9' with '3880'
3872 3873 3874 3875 3876 3877 3878 3879 3880 0
-3872 3881 0
-3872 3884 0
-3873 3882 0
-3873 3884 0
-3874 3883 0
-3874 3884 0
-3875 3881 0
-3875 3885 0
-3876 3882 0
-3876 3885 0
-3877 3883 0
-3877 3885 0
-3878 3881 0
-3878 3886 0
-3879 3882 0
-3879 3886 0
-3880 3883 0
-3880 3886 0
-3881 -3882 0
-3881 -3883 0
-3882 -3883 0
-3884 -3885 0
-3884 -3886 0
-3885 -3886 0
c Encoding variable: variant_fields_00003_00002_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00002_00008' direct represents '1' with '3887'
c Var 'variant_fields_00003_00002_00008' direct represents '2' with '3888'
c Var 'variant_fields_00003_00002_00008' direct represents '3' with '3889'
c Var 'variant_fields_00003_00002_00008' direct represents '4' with '3890'
c Var 'variant_fields_00003_00002_00008' direct represents '5' with '3891'
c Var 'variant_fields_00003_00002_00008' direct represents '6' with '3892'
c Var 'variant_fields_00003_00002_00008' direct represents '7' with '3893'
c Var 'variant_fields_00003_00002_00008' direct represents '8' with '3894'
c Var 'variant_fields_00003_00002_00008' direct represents '9' with '3895'
3887 3888 3889 3890 3891 3892 3893 3894 3895 0
-3887 3896 0
-3887 3899 0
-3888 3897 0
-3888 3899 0
-3889 3898 0
-3889 3899 0
-3890 3896 0
-3890 3900 0
-3891 3897 0
-3891 3900 0
-3892 3898 0
-3892 3900 0
-3893 3896 0
-3893 3901 0
-3894 3897 0
-3894 3901 0
-3895 3898 0
-3895 3901 0
-3896 -3897 0
-3896 -3898 0
-3897 -3898 0
-3899 -3900 0
-3899 -3901 0
-3900 -3901 0
c Encoding variable: variant_fields_00003_00002_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00002_00009' direct represents '1' with '3902'
c Var 'variant_fields_00003_00002_00009' direct represents '2' with '3903'
c Var 'variant_fields_00003_00002_00009' direct represents '3' with '3904'
c Var 'variant_fields_00003_00002_00009' direct represents '4' with '3905'
c Var 'variant_fields_00003_00002_00009' direct represents '5' with '3906'
c Var 'variant_fields_00003_00002_00009' direct represents '6' with '3907'
c Var 'variant_fields_00003_00002_00009' direct represents '7' with '3908'
c Var 'variant_fields_00003_00002_00009' direct represents '8' with '3909'
c Var 'variant_fields_00003_00002_00009' direct represents '9' with '3910'
3902 3903 3904 3905 3906 3907 3908 3909 3910 0
-3902 3911 0
-3902 3914 0
-3903 3912 0
-3903 3914 0
-3904 3913 0
-3904 3914 0
-3905 3911 0
-3905 3915 0
-3906 3912 0
-3906 3915 0
-3907 3913 0
-3907 3915 0
-3908 3911 0
-3908 3916 0
-3909 3912 0
-3909 3916 0
-3910 3913 0
-3910 3916 0
-3911 -3912 0
-3911 -3913 0
-3912 -3913 0
-3914 -3915 0
-3914 -3916 0
-3915 -3916 0
c Encoding variable: variant_fields_00003_00003_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00003_00001' direct represents '1' with '3917'
c Var 'variant_fields_00003_00003_00001' direct represents '2' with '3918'
c Var 'variant_fields_00003_00003_00001' direct represents '3' with '3919'
c Var 'variant_fields_00003_00003_00001' direct represents '4' with '3920'
c Var 'variant_fields_00003_00003_00001' direct represents '5' with '3921'
c Var 'variant_fields_00003_00003_00001' direct represents '6' with '3922'
c Var 'variant_fields_00003_00003_00001' direct represents '7' with '3923'
c Var 'variant_fields_00003_00003_00001' direct represents '8' with '3924'
c Var 'variant_fields_00003_00003_00001' direct represents '9' with '3925'
3917 3918 3919 3920 3921 3922 3923 3924 3925 0
-3917 3926 0
-3917 3929 0
-3918 3927 0
-3918 3929 0
-3919 3928 0
-3919 3929 0
-3920 3926 0
-3920 3930 0
-3921 3927 0
-3921 3930 0
-3922 3928 0
-3922 3930 0
-3923 3926 0
-3923 3931 0
-3924 3927 0
-3924 3931 0
-3925 3928 0
-3925 3931 0
-3926 -3927 0
-3926 -3928 0
-3927 -3928 0
-3929 -3930 0
-3929 -3931 0
-3930 -3931 0
c Encoding variable: variant_fields_00003_00003_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00003_00002' direct represents '1' with '3932'
c Var 'variant_fields_00003_00003_00002' direct represents '2' with '3933'
c Var 'variant_fields_00003_00003_00002' direct represents '3' with '3934'
c Var 'variant_fields_00003_00003_00002' direct represents '4' with '3935'
c Var 'variant_fields_00003_00003_00002' direct represents '5' with '3936'
c Var 'variant_fields_00003_00003_00002' direct represents '6' with '3937'
c Var 'variant_fields_00003_00003_00002' direct represents '7' with '3938'
c Var 'variant_fields_00003_00003_00002' direct represents '8' with '3939'
c Var 'variant_fields_00003_00003_00002' direct represents '9' with '3940'
3932 3933 3934 3935 3936 3937 3938 3939 3940 0
-3932 3941 0
-3932 3944 0
-3933 3942 0
-3933 3944 0
-3934 3943 0
-3934 3944 0
-3935 3941 0
-3935 3945 0
-3936 3942 0
-3936 3945 0
-3937 3943 0
-3937 3945 0
-3938 3941 0
-3938 3946 0
-3939 3942 0
-3939 3946 0
-3940 3943 0
-3940 3946 0
-3941 -3942 0
-3941 -3943 0
-3942 -3943 0
-3944 -3945 0
-3944 -3946 0
-3945 -3946 0
c Encoding variable: variant_fields_00003_00003_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00003_00003' direct represents '1' with '3947'
c Var 'variant_fields_00003_00003_00003' direct represents '2' with '3948'
c Var 'variant_fields_00003_00003_00003' direct represents '3' with '3949'
c Var 'variant_fields_00003_00003_00003' direct represents '4' with '3950'
c Var 'variant_fields_00003_00003_00003' direct represents '5' with '3951'
c Var 'variant_fields_00003_00003_00003' direct represents '6' with '3952'
c Var 'variant_fields_00003_00003_00003' direct represents '7' with '3953'
c Var 'variant_fields_00003_00003_00003' direct represents '8' with '3954'
c Var 'variant_fields_00003_00003_00003' direct represents '9' with '3955'
3947 3948 3949 3950 3951 3952 3953 3954 3955 0
-3947 3956 0
-3947 3959 0
-3948 3957 0
-3948 3959 0
-3949 3958 0
-3949 3959 0
-3950 3956 0
-3950 3960 0
-3951 3957 0
-3951 3960 0
-3952 3958 0
-3952 3960 0
-3953 3956 0
-3953 3961 0
-3954 3957 0
-3954 3961 0
-3955 3958 0
-3955 3961 0
-3956 -3957 0
-3956 -3958 0
-3957 -3958 0
-3959 -3960 0
-3959 -3961 0
-3960 -3961 0
c Encoding variable: variant_fields_00003_00003_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00003_00004' direct represents '1' with '3962'
c Var 'variant_fields_00003_00003_00004' direct represents '2' with '3963'
c Var 'variant_fields_00003_00003_00004' direct represents '3' with '3964'
c Var 'variant_fields_00003_00003_00004' direct represents '4' with '3965'
c Var 'variant_fields_00003_00003_00004' direct represents '5' with '3966'
c Var 'variant_fields_00003_00003_00004' direct represents '6' with '3967'
c Var 'variant_fields_00003_00003_00004' direct represents '7' with '3968'
c Var 'variant_fields_00003_00003_00004' direct represents '8' with '3969'
c Var 'variant_fields_00003_00003_00004' direct represents '9' with '3970'
3962 3963 3964 3965 3966 3967 3968 3969 3970 0
-3962 3971 0
-3962 3974 0
-3963 3972 0
-3963 3974 0
-3964 3973 0
-3964 3974 0
-3965 3971 0
-3965 3975 0
-3966 3972 0
-3966 3975 0
-3967 3973 0
-3967 3975 0
-3968 3971 0
-3968 3976 0
-3969 3972 0
-3969 3976 0
-3970 3973 0
-3970 3976 0
-3971 -3972 0
-3971 -3973 0
-3972 -3973 0
-3974 -3975 0
-3974 -3976 0
-3975 -3976 0
c Encoding variable: variant_fields_00003_00003_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00003_00005' direct represents '1' with '3977'
c Var 'variant_fields_00003_00003_00005' direct represents '2' with '3978'
c Var 'variant_fields_00003_00003_00005' direct represents '3' with '3979'
c Var 'variant_fields_00003_00003_00005' direct represents '4' with '3980'
c Var 'variant_fields_00003_00003_00005' direct represents '5' with '3981'
c Var 'variant_fields_00003_00003_00005' direct represents '6' with '3982'
c Var 'variant_fields_00003_00003_00005' direct represents '7' with '3983'
c Var 'variant_fields_00003_00003_00005' direct represents '8' with '3984'
c Var 'variant_fields_00003_00003_00005' direct represents '9' with '3985'
3977 3978 3979 3980 3981 3982 3983 3984 3985 0
-3977 3986 0
-3977 3989 0
-3978 3987 0
-3978 3989 0
-3979 3988 0
-3979 3989 0
-3980 3986 0
-3980 3990 0
-3981 3987 0
-3981 3990 0
-3982 3988 0
-3982 3990 0
-3983 3986 0
-3983 3991 0
-3984 3987 0
-3984 3991 0
-3985 3988 0
-3985 3991 0
-3986 -3987 0
-3986 -3988 0
-3987 -3988 0
-3989 -3990 0
-3989 -3991 0
-3990 -3991 0
c Encoding variable: variant_fields_00003_00003_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00003_00006' direct represents '1' with '3992'
c Var 'variant_fields_00003_00003_00006' direct represents '2' with '3993'
c Var 'variant_fields_00003_00003_00006' direct represents '3' with '3994'
c Var 'variant_fields_00003_00003_00006' direct represents '4' with '3995'
c Var 'variant_fields_00003_00003_00006' direct represents '5' with '3996'
c Var 'variant_fields_00003_00003_00006' direct represents '6' with '3997'
c Var 'variant_fields_00003_00003_00006' direct represents '7' with '3998'
c Var 'variant_fields_00003_00003_00006' direct represents '8' with '3999'
c Var 'variant_fields_00003_00003_00006' direct represents '9' with '4000'
3992 3993 3994 3995 3996 3997 3998 3999 4000 0
-3992 4001 0
-3992 4004 0
-3993 4002 0
-3993 4004 0
-3994 4003 0
-3994 4004 0
-3995 4001 0
-3995 4005 0
-3996 4002 0
-3996 4005 0
-3997 4003 0
-3997 4005 0
-3998 4001 0
-3998 4006 0
-3999 4002 0
-3999 4006 0
-4000 4003 0
-4000 4006 0
-4001 -4002 0
-4001 -4003 0
-4002 -4003 0
-4004 -4005 0
-4004 -4006 0
-4005 -4006 0
c Encoding variable: variant_fields_00003_00003_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00003_00007' direct represents '1' with '4007'
c Var 'variant_fields_00003_00003_00007' direct represents '2' with '4008'
c Var 'variant_fields_00003_00003_00007' direct represents '3' with '4009'
c Var 'variant_fields_00003_00003_00007' direct represents '4' with '4010'
c Var 'variant_fields_00003_00003_00007' direct represents '5' with '4011'
c Var 'variant_fields_00003_00003_00007' direct represents '6' with '4012'
c Var 'variant_fields_00003_00003_00007' direct represents '7' with '4013'
c Var 'variant_fields_00003_00003_00007' direct represents '8' with '4014'
c Var 'variant_fields_00003_00003_00007' direct represents '9' with '4015'
4007 4008 4009 4010 4011 4012 4013 4014 4015 0
-4007 4016 0
-4007 4019 0
-4008 4017 0
-4008 4019 0
-4009 4018 0
-4009 4019 0
-4010 4016 0
-4010 4020 0
-4011 4017 0
-4011 4020 0
-4012 4018 0
-4012 4020 0
-4013 4016 0
-4013 4021 0
-4014 4017 0
-4014 4021 0
-4015 4018 0
-4015 4021 0
-4016 -4017 0
-4016 -4018 0
-4017 -4018 0
-4019 -4020 0
-4019 -4021 0
-4020 -4021 0
c Encoding variable: variant_fields_00003_00003_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00003_00008' direct represents '1' with '4022'
c Var 'variant_fields_00003_00003_00008' direct represents '2' with '4023'
c Var 'variant_fields_00003_00003_00008' direct represents '3' with '4024'
c Var 'variant_fields_00003_00003_00008' direct represents '4' with '4025'
c Var 'variant_fields_00003_00003_00008' direct represents '5' with '4026'
c Var 'variant_fields_00003_00003_00008' direct represents '6' with '4027'
c Var 'variant_fields_00003_00003_00008' direct represents '7' with '4028'
c Var 'variant_fields_00003_00003_00008' direct represents '8' with '4029'
c Var 'variant_fields_00003_00003_00008' direct represents '9' with '4030'
4022 4023 4024 4025 4026 4027 4028 4029 4030 0
-4022 4031 0
-4022 4034 0
-4023 4032 0
-4023 4034 0
-4024 4033 0
-4024 4034 0
-4025 4031 0
-4025 4035 0
-4026 4032 0
-4026 4035 0
-4027 4033 0
-4027 4035 0
-4028 4031 0
-4028 4036 0
-4029 4032 0
-4029 4036 0
-4030 4033 0
-4030 4036 0
-4031 -4032 0
-4031 -4033 0
-4032 -4033 0
-4034 -4035 0
-4034 -4036 0
-4035 -4036 0
c Encoding variable: variant_fields_00003_00003_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00003_00009' direct represents '1' with '4037'
c Var 'variant_fields_00003_00003_00009' direct represents '2' with '4038'
c Var 'variant_fields_00003_00003_00009' direct represents '3' with '4039'
c Var 'variant_fields_00003_00003_00009' direct represents '4' with '4040'
c Var 'variant_fields_00003_00003_00009' direct represents '5' with '4041'
c Var 'variant_fields_00003_00003_00009' direct represents '6' with '4042'
c Var 'variant_fields_00003_00003_00009' direct represents '7' with '4043'
c Var 'variant_fields_00003_00003_00009' direct represents '8' with '4044'
c Var 'variant_fields_00003_00003_00009' direct represents '9' with '4045'
4037 4038 4039 4040 4041 4042 4043 4044 4045 0
-4037 4046 0
-4037 4049 0
-4038 4047 0
-4038 4049 0
-4039 4048 0
-4039 4049 0
-4040 4046 0
-4040 4050 0
-4041 4047 0
-4041 4050 0
-4042 4048 0
-4042 4050 0
-4043 4046 0
-4043 4051 0
-4044 4047 0
-4044 4051 0
-4045 4048 0
-4045 4051 0
-4046 -4047 0
-4046 -4048 0
-4047 -4048 0
-4049 -4050 0
-4049 -4051 0
-4050 -4051 0
c Encoding variable: variant_fields_00003_00004_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00004_00001' order represents '1' with '4052'
c Var 'variant_fields_00003_00004_00001' direct represents '1' with '4052'
c Var 'variant_fields_00003_00004_00001' order represents '2' with '4053'
-4052 4053 0
c Var 'variant_fields_00003_00004_00001' direct represents '2' with '4054'
4052 -4053 4054 0
-4054 4053 0
-4054 -4052 0
c Var 'variant_fields_00003_00004_00001' order represents '3' with '4055'
-4053 4055 0
c Var 'variant_fields_00003_00004_00001' direct represents '3' with '4056'
4053 -4055 4056 0
-4056 4055 0
-4056 -4053 0
c Var 'variant_fields_00003_00004_00001' order represents '4' with '4057'
-4055 4057 0
c Var 'variant_fields_00003_00004_00001' direct represents '4' with '4058'
4055 -4057 4058 0
-4058 4057 0
-4058 -4055 0
c Var 'variant_fields_00003_00004_00001' order represents '5' with '4059'
-4057 4059 0
c Var 'variant_fields_00003_00004_00001' direct represents '5' with '4060'
4057 -4059 4060 0
-4060 4059 0
-4060 -4057 0
c Var 'variant_fields_00003_00004_00001' order represents '6' with '4061'
-4059 4061 0
c Var 'variant_fields_00003_00004_00001' direct represents '6' with '4062'
4059 -4061 4062 0
-4062 4061 0
-4062 -4059 0
c Var 'variant_fields_00003_00004_00001' order represents '7' with '4063'
-4061 4063 0
c Var 'variant_fields_00003_00004_00001' direct represents '7' with '4064'
4061 -4063 4064 0
-4064 4063 0
-4064 -4061 0
c Var 'variant_fields_00003_00004_00001' order represents '8' with '4065'
-4063 4065 0
c Var 'variant_fields_00003_00004_00001' direct represents '8' with '4066'
4063 -4065 4066 0
-4066 4065 0
-4066 -4063 0
c Var 'variant_fields_00003_00004_00001' direct represents '9' with '-4065'
4052 4054 4056 4058 4060 4062 4064 4066 -4065 0
c Encoding variable: variant_fields_00003_00004_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00004_00002' direct represents '1' with '4067'
c Var 'variant_fields_00003_00004_00002' direct represents '2' with '4068'
c Var 'variant_fields_00003_00004_00002' direct represents '3' with '4069'
c Var 'variant_fields_00003_00004_00002' direct represents '4' with '4070'
c Var 'variant_fields_00003_00004_00002' direct represents '5' with '4071'
c Var 'variant_fields_00003_00004_00002' direct represents '6' with '4072'
c Var 'variant_fields_00003_00004_00002' direct represents '7' with '4073'
c Var 'variant_fields_00003_00004_00002' direct represents '8' with '4074'
c Var 'variant_fields_00003_00004_00002' direct represents '9' with '4075'
4067 4068 4069 4070 4071 4072 4073 4074 4075 0
-4067 4076 0
-4067 4079 0
-4068 4077 0
-4068 4079 0
-4069 4078 0
-4069 4079 0
-4070 4076 0
-4070 4080 0
-4071 4077 0
-4071 4080 0
-4072 4078 0
-4072 4080 0
-4073 4076 0
-4073 4081 0
-4074 4077 0
-4074 4081 0
-4075 4078 0
-4075 4081 0
-4076 -4077 0
-4076 -4078 0
-4077 -4078 0
-4079 -4080 0
-4079 -4081 0
-4080 -4081 0
c Encoding variable: variant_fields_00003_00004_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00004_00003' direct represents '1' with '4082'
c Var 'variant_fields_00003_00004_00003' direct represents '2' with '4083'
c Var 'variant_fields_00003_00004_00003' direct represents '3' with '4084'
c Var 'variant_fields_00003_00004_00003' direct represents '4' with '4085'
c Var 'variant_fields_00003_00004_00003' direct represents '5' with '4086'
c Var 'variant_fields_00003_00004_00003' direct represents '6' with '4087'
c Var 'variant_fields_00003_00004_00003' direct represents '7' with '4088'
c Var 'variant_fields_00003_00004_00003' direct represents '8' with '4089'
c Var 'variant_fields_00003_00004_00003' direct represents '9' with '4090'
4082 4083 4084 4085 4086 4087 4088 4089 4090 0
-4082 4091 0
-4082 4094 0
-4083 4092 0
-4083 4094 0
-4084 4093 0
-4084 4094 0
-4085 4091 0
-4085 4095 0
-4086 4092 0
-4086 4095 0
-4087 4093 0
-4087 4095 0
-4088 4091 0
-4088 4096 0
-4089 4092 0
-4089 4096 0
-4090 4093 0
-4090 4096 0
-4091 -4092 0
-4091 -4093 0
-4092 -4093 0
-4094 -4095 0
-4094 -4096 0
-4095 -4096 0
c Encoding variable: variant_fields_00003_00004_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00004_00004' direct represents '1' with '4097'
c Var 'variant_fields_00003_00004_00004' direct represents '2' with '4098'
c Var 'variant_fields_00003_00004_00004' direct represents '3' with '4099'
c Var 'variant_fields_00003_00004_00004' direct represents '4' with '4100'
c Var 'variant_fields_00003_00004_00004' direct represents '5' with '4101'
c Var 'variant_fields_00003_00004_00004' direct represents '6' with '4102'
c Var 'variant_fields_00003_00004_00004' direct represents '7' with '4103'
c Var 'variant_fields_00003_00004_00004' direct represents '8' with '4104'
c Var 'variant_fields_00003_00004_00004' direct represents '9' with '4105'
4097 4098 4099 4100 4101 4102 4103 4104 4105 0
-4097 4106 0
-4097 4109 0
-4098 4107 0
-4098 4109 0
-4099 4108 0
-4099 4109 0
-4100 4106 0
-4100 4110 0
-4101 4107 0
-4101 4110 0
-4102 4108 0
-4102 4110 0
-4103 4106 0
-4103 4111 0
-4104 4107 0
-4104 4111 0
-4105 4108 0
-4105 4111 0
-4106 -4107 0
-4106 -4108 0
-4107 -4108 0
-4109 -4110 0
-4109 -4111 0
-4110 -4111 0
c Encoding variable: variant_fields_00003_00004_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00004_00005' direct represents '1' with '4112'
c Var 'variant_fields_00003_00004_00005' direct represents '2' with '4113'
c Var 'variant_fields_00003_00004_00005' direct represents '3' with '4114'
c Var 'variant_fields_00003_00004_00005' direct represents '4' with '4115'
c Var 'variant_fields_00003_00004_00005' direct represents '5' with '4116'
c Var 'variant_fields_00003_00004_00005' direct represents '6' with '4117'
c Var 'variant_fields_00003_00004_00005' direct represents '7' with '4118'
c Var 'variant_fields_00003_00004_00005' direct represents '8' with '4119'
c Var 'variant_fields_00003_00004_00005' direct represents '9' with '4120'
4112 4113 4114 4115 4116 4117 4118 4119 4120 0
-4112 4121 0
-4112 4124 0
-4113 4122 0
-4113 4124 0
-4114 4123 0
-4114 4124 0
-4115 4121 0
-4115 4125 0
-4116 4122 0
-4116 4125 0
-4117 4123 0
-4117 4125 0
-4118 4121 0
-4118 4126 0
-4119 4122 0
-4119 4126 0
-4120 4123 0
-4120 4126 0
-4121 -4122 0
-4121 -4123 0
-4122 -4123 0
-4124 -4125 0
-4124 -4126 0
-4125 -4126 0
c Encoding variable: variant_fields_00003_00004_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00004_00006' direct represents '1' with '4127'
c Var 'variant_fields_00003_00004_00006' direct represents '2' with '4128'
c Var 'variant_fields_00003_00004_00006' direct represents '3' with '4129'
c Var 'variant_fields_00003_00004_00006' direct represents '4' with '4130'
c Var 'variant_fields_00003_00004_00006' direct represents '5' with '4131'
c Var 'variant_fields_00003_00004_00006' direct represents '6' with '4132'
c Var 'variant_fields_00003_00004_00006' direct represents '7' with '4133'
c Var 'variant_fields_00003_00004_00006' direct represents '8' with '4134'
c Var 'variant_fields_00003_00004_00006' direct represents '9' with '4135'
4127 4128 4129 4130 4131 4132 4133 4134 4135 0
-4127 4136 0
-4127 4139 0
-4128 4137 0
-4128 4139 0
-4129 4138 0
-4129 4139 0
-4130 4136 0
-4130 4140 0
-4131 4137 0
-4131 4140 0
-4132 4138 0
-4132 4140 0
-4133 4136 0
-4133 4141 0
-4134 4137 0
-4134 4141 0
-4135 4138 0
-4135 4141 0
-4136 -4137 0
-4136 -4138 0
-4137 -4138 0
-4139 -4140 0
-4139 -4141 0
-4140 -4141 0
c Encoding variable: variant_fields_00003_00004_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00004_00007' direct represents '1' with '4142'
c Var 'variant_fields_00003_00004_00007' direct represents '2' with '4143'
c Var 'variant_fields_00003_00004_00007' direct represents '3' with '4144'
c Var 'variant_fields_00003_00004_00007' direct represents '4' with '4145'
c Var 'variant_fields_00003_00004_00007' direct represents '5' with '4146'
c Var 'variant_fields_00003_00004_00007' direct represents '6' with '4147'
c Var 'variant_fields_00003_00004_00007' direct represents '7' with '4148'
c Var 'variant_fields_00003_00004_00007' direct represents '8' with '4149'
c Var 'variant_fields_00003_00004_00007' direct represents '9' with '4150'
4142 4143 4144 4145 4146 4147 4148 4149 4150 0
-4142 4151 0
-4142 4154 0
-4143 4152 0
-4143 4154 0
-4144 4153 0
-4144 4154 0
-4145 4151 0
-4145 4155 0
-4146 4152 0
-4146 4155 0
-4147 4153 0
-4147 4155 0
-4148 4151 0
-4148 4156 0
-4149 4152 0
-4149 4156 0
-4150 4153 0
-4150 4156 0
-4151 -4152 0
-4151 -4153 0
-4152 -4153 0
-4154 -4155 0
-4154 -4156 0
-4155 -4156 0
c Encoding variable: variant_fields_00003_00004_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00004_00008' direct represents '1' with '4157'
c Var 'variant_fields_00003_00004_00008' direct represents '2' with '4158'
c Var 'variant_fields_00003_00004_00008' direct represents '3' with '4159'
c Var 'variant_fields_00003_00004_00008' direct represents '4' with '4160'
c Var 'variant_fields_00003_00004_00008' direct represents '5' with '4161'
c Var 'variant_fields_00003_00004_00008' direct represents '6' with '4162'
c Var 'variant_fields_00003_00004_00008' direct represents '7' with '4163'
c Var 'variant_fields_00003_00004_00008' direct represents '8' with '4164'
c Var 'variant_fields_00003_00004_00008' direct represents '9' with '4165'
4157 4158 4159 4160 4161 4162 4163 4164 4165 0
-4157 4166 0
-4157 4169 0
-4158 4167 0
-4158 4169 0
-4159 4168 0
-4159 4169 0
-4160 4166 0
-4160 4170 0
-4161 4167 0
-4161 4170 0
-4162 4168 0
-4162 4170 0
-4163 4166 0
-4163 4171 0
-4164 4167 0
-4164 4171 0
-4165 4168 0
-4165 4171 0
-4166 -4167 0
-4166 -4168 0
-4167 -4168 0
-4169 -4170 0
-4169 -4171 0
-4170 -4171 0
c Encoding variable: variant_fields_00003_00004_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00004_00009' direct represents '1' with '4172'
c Var 'variant_fields_00003_00004_00009' direct represents '2' with '4173'
c Var 'variant_fields_00003_00004_00009' direct represents '3' with '4174'
c Var 'variant_fields_00003_00004_00009' direct represents '4' with '4175'
c Var 'variant_fields_00003_00004_00009' direct represents '5' with '4176'
c Var 'variant_fields_00003_00004_00009' direct represents '6' with '4177'
c Var 'variant_fields_00003_00004_00009' direct represents '7' with '4178'
c Var 'variant_fields_00003_00004_00009' direct represents '8' with '4179'
c Var 'variant_fields_00003_00004_00009' direct represents '9' with '4180'
4172 4173 4174 4175 4176 4177 4178 4179 4180 0
-4172 4181 0
-4172 4184 0
-4173 4182 0
-4173 4184 0
-4174 4183 0
-4174 4184 0
-4175 4181 0
-4175 4185 0
-4176 4182 0
-4176 4185 0
-4177 4183 0
-4177 4185 0
-4178 4181 0
-4178 4186 0
-4179 4182 0
-4179 4186 0
-4180 4183 0
-4180 4186 0
-4181 -4182 0
-4181 -4183 0
-4182 -4183 0
-4184 -4185 0
-4184 -4186 0
-4185 -4186 0
c Encoding variable: variant_fields_00003_00005_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00005_00001' direct represents '1' with '4187'
c Var 'variant_fields_00003_00005_00001' direct represents '2' with '4188'
c Var 'variant_fields_00003_00005_00001' direct represents '3' with '4189'
c Var 'variant_fields_00003_00005_00001' direct represents '4' with '4190'
c Var 'variant_fields_00003_00005_00001' direct represents '5' with '4191'
c Var 'variant_fields_00003_00005_00001' direct represents '6' with '4192'
c Var 'variant_fields_00003_00005_00001' direct represents '7' with '4193'
c Var 'variant_fields_00003_00005_00001' direct represents '8' with '4194'
c Var 'variant_fields_00003_00005_00001' direct represents '9' with '4195'
4187 4188 4189 4190 4191 4192 4193 4194 4195 0
-4187 4196 0
-4187 4199 0
-4188 4197 0
-4188 4199 0
-4189 4198 0
-4189 4199 0
-4190 4196 0
-4190 4200 0
-4191 4197 0
-4191 4200 0
-4192 4198 0
-4192 4200 0
-4193 4196 0
-4193 4201 0
-4194 4197 0
-4194 4201 0
-4195 4198 0
-4195 4201 0
-4196 -4197 0
-4196 -4198 0
-4197 -4198 0
-4199 -4200 0
-4199 -4201 0
-4200 -4201 0
c Encoding variable: variant_fields_00003_00005_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00005_00002' direct represents '1' with '4202'
c Var 'variant_fields_00003_00005_00002' direct represents '2' with '4203'
c Var 'variant_fields_00003_00005_00002' direct represents '3' with '4204'
c Var 'variant_fields_00003_00005_00002' direct represents '4' with '4205'
c Var 'variant_fields_00003_00005_00002' direct represents '5' with '4206'
c Var 'variant_fields_00003_00005_00002' direct represents '6' with '4207'
c Var 'variant_fields_00003_00005_00002' direct represents '7' with '4208'
c Var 'variant_fields_00003_00005_00002' direct represents '8' with '4209'
c Var 'variant_fields_00003_00005_00002' direct represents '9' with '4210'
4202 4203 4204 4205 4206 4207 4208 4209 4210 0
-4202 4211 0
-4202 4214 0
-4203 4212 0
-4203 4214 0
-4204 4213 0
-4204 4214 0
-4205 4211 0
-4205 4215 0
-4206 4212 0
-4206 4215 0
-4207 4213 0
-4207 4215 0
-4208 4211 0
-4208 4216 0
-4209 4212 0
-4209 4216 0
-4210 4213 0
-4210 4216 0
-4211 -4212 0
-4211 -4213 0
-4212 -4213 0
-4214 -4215 0
-4214 -4216 0
-4215 -4216 0
c Encoding variable: variant_fields_00003_00005_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00005_00003' direct represents '1' with '4217'
c Var 'variant_fields_00003_00005_00003' direct represents '2' with '4218'
c Var 'variant_fields_00003_00005_00003' direct represents '3' with '4219'
c Var 'variant_fields_00003_00005_00003' direct represents '4' with '4220'
c Var 'variant_fields_00003_00005_00003' direct represents '5' with '4221'
c Var 'variant_fields_00003_00005_00003' direct represents '6' with '4222'
c Var 'variant_fields_00003_00005_00003' direct represents '7' with '4223'
c Var 'variant_fields_00003_00005_00003' direct represents '8' with '4224'
c Var 'variant_fields_00003_00005_00003' direct represents '9' with '4225'
4217 4218 4219 4220 4221 4222 4223 4224 4225 0
-4217 4226 0
-4217 4229 0
-4218 4227 0
-4218 4229 0
-4219 4228 0
-4219 4229 0
-4220 4226 0
-4220 4230 0
-4221 4227 0
-4221 4230 0
-4222 4228 0
-4222 4230 0
-4223 4226 0
-4223 4231 0
-4224 4227 0
-4224 4231 0
-4225 4228 0
-4225 4231 0
-4226 -4227 0
-4226 -4228 0
-4227 -4228 0
-4229 -4230 0
-4229 -4231 0
-4230 -4231 0
c Encoding variable: variant_fields_00003_00005_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00005_00004' direct represents '1' with '4232'
c Var 'variant_fields_00003_00005_00004' direct represents '2' with '4233'
c Var 'variant_fields_00003_00005_00004' direct represents '3' with '4234'
c Var 'variant_fields_00003_00005_00004' direct represents '4' with '4235'
c Var 'variant_fields_00003_00005_00004' direct represents '5' with '4236'
c Var 'variant_fields_00003_00005_00004' direct represents '6' with '4237'
c Var 'variant_fields_00003_00005_00004' direct represents '7' with '4238'
c Var 'variant_fields_00003_00005_00004' direct represents '8' with '4239'
c Var 'variant_fields_00003_00005_00004' direct represents '9' with '4240'
4232 4233 4234 4235 4236 4237 4238 4239 4240 0
-4232 4241 0
-4232 4244 0
-4233 4242 0
-4233 4244 0
-4234 4243 0
-4234 4244 0
-4235 4241 0
-4235 4245 0
-4236 4242 0
-4236 4245 0
-4237 4243 0
-4237 4245 0
-4238 4241 0
-4238 4246 0
-4239 4242 0
-4239 4246 0
-4240 4243 0
-4240 4246 0
-4241 -4242 0
-4241 -4243 0
-4242 -4243 0
-4244 -4245 0
-4244 -4246 0
-4245 -4246 0
c Encoding variable: variant_fields_00003_00005_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00005_00005' direct represents '1' with '4247'
c Var 'variant_fields_00003_00005_00005' direct represents '2' with '4248'
c Var 'variant_fields_00003_00005_00005' direct represents '3' with '4249'
c Var 'variant_fields_00003_00005_00005' direct represents '4' with '4250'
c Var 'variant_fields_00003_00005_00005' direct represents '5' with '4251'
c Var 'variant_fields_00003_00005_00005' direct represents '6' with '4252'
c Var 'variant_fields_00003_00005_00005' direct represents '7' with '4253'
c Var 'variant_fields_00003_00005_00005' direct represents '8' with '4254'
c Var 'variant_fields_00003_00005_00005' direct represents '9' with '4255'
4247 4248 4249 4250 4251 4252 4253 4254 4255 0
-4247 4256 0
-4247 4259 0
-4248 4257 0
-4248 4259 0
-4249 4258 0
-4249 4259 0
-4250 4256 0
-4250 4260 0
-4251 4257 0
-4251 4260 0
-4252 4258 0
-4252 4260 0
-4253 4256 0
-4253 4261 0
-4254 4257 0
-4254 4261 0
-4255 4258 0
-4255 4261 0
-4256 -4257 0
-4256 -4258 0
-4257 -4258 0
-4259 -4260 0
-4259 -4261 0
-4260 -4261 0
c Encoding variable: variant_fields_00003_00005_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00005_00006' direct represents '1' with '4262'
c Var 'variant_fields_00003_00005_00006' direct represents '2' with '4263'
c Var 'variant_fields_00003_00005_00006' direct represents '3' with '4264'
c Var 'variant_fields_00003_00005_00006' direct represents '4' with '4265'
c Var 'variant_fields_00003_00005_00006' direct represents '5' with '4266'
c Var 'variant_fields_00003_00005_00006' direct represents '6' with '4267'
c Var 'variant_fields_00003_00005_00006' direct represents '7' with '4268'
c Var 'variant_fields_00003_00005_00006' direct represents '8' with '4269'
c Var 'variant_fields_00003_00005_00006' direct represents '9' with '4270'
4262 4263 4264 4265 4266 4267 4268 4269 4270 0
-4262 4271 0
-4262 4274 0
-4263 4272 0
-4263 4274 0
-4264 4273 0
-4264 4274 0
-4265 4271 0
-4265 4275 0
-4266 4272 0
-4266 4275 0
-4267 4273 0
-4267 4275 0
-4268 4271 0
-4268 4276 0
-4269 4272 0
-4269 4276 0
-4270 4273 0
-4270 4276 0
-4271 -4272 0
-4271 -4273 0
-4272 -4273 0
-4274 -4275 0
-4274 -4276 0
-4275 -4276 0
c Encoding variable: variant_fields_00003_00005_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00005_00007' direct represents '1' with '4277'
c Var 'variant_fields_00003_00005_00007' direct represents '2' with '4278'
c Var 'variant_fields_00003_00005_00007' direct represents '3' with '4279'
c Var 'variant_fields_00003_00005_00007' direct represents '4' with '4280'
c Var 'variant_fields_00003_00005_00007' direct represents '5' with '4281'
c Var 'variant_fields_00003_00005_00007' direct represents '6' with '4282'
c Var 'variant_fields_00003_00005_00007' direct represents '7' with '4283'
c Var 'variant_fields_00003_00005_00007' direct represents '8' with '4284'
c Var 'variant_fields_00003_00005_00007' direct represents '9' with '4285'
4277 4278 4279 4280 4281 4282 4283 4284 4285 0
-4277 4286 0
-4277 4289 0
-4278 4287 0
-4278 4289 0
-4279 4288 0
-4279 4289 0
-4280 4286 0
-4280 4290 0
-4281 4287 0
-4281 4290 0
-4282 4288 0
-4282 4290 0
-4283 4286 0
-4283 4291 0
-4284 4287 0
-4284 4291 0
-4285 4288 0
-4285 4291 0
-4286 -4287 0
-4286 -4288 0
-4287 -4288 0
-4289 -4290 0
-4289 -4291 0
-4290 -4291 0
c Encoding variable: variant_fields_00003_00005_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00005_00008' direct represents '1' with '4292'
c Var 'variant_fields_00003_00005_00008' direct represents '2' with '4293'
c Var 'variant_fields_00003_00005_00008' direct represents '3' with '4294'
c Var 'variant_fields_00003_00005_00008' direct represents '4' with '4295'
c Var 'variant_fields_00003_00005_00008' direct represents '5' with '4296'
c Var 'variant_fields_00003_00005_00008' direct represents '6' with '4297'
c Var 'variant_fields_00003_00005_00008' direct represents '7' with '4298'
c Var 'variant_fields_00003_00005_00008' direct represents '8' with '4299'
c Var 'variant_fields_00003_00005_00008' direct represents '9' with '4300'
4292 4293 4294 4295 4296 4297 4298 4299 4300 0
-4292 4301 0
-4292 4304 0
-4293 4302 0
-4293 4304 0
-4294 4303 0
-4294 4304 0
-4295 4301 0
-4295 4305 0
-4296 4302 0
-4296 4305 0
-4297 4303 0
-4297 4305 0
-4298 4301 0
-4298 4306 0
-4299 4302 0
-4299 4306 0
-4300 4303 0
-4300 4306 0
-4301 -4302 0
-4301 -4303 0
-4302 -4303 0
-4304 -4305 0
-4304 -4306 0
-4305 -4306 0
c Encoding variable: variant_fields_00003_00005_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00005_00009' direct represents '1' with '4307'
c Var 'variant_fields_00003_00005_00009' direct represents '2' with '4308'
c Var 'variant_fields_00003_00005_00009' direct represents '3' with '4309'
c Var 'variant_fields_00003_00005_00009' direct represents '4' with '4310'
c Var 'variant_fields_00003_00005_00009' direct represents '5' with '4311'
c Var 'variant_fields_00003_00005_00009' direct represents '6' with '4312'
c Var 'variant_fields_00003_00005_00009' direct represents '7' with '4313'
c Var 'variant_fields_00003_00005_00009' direct represents '8' with '4314'
c Var 'variant_fields_00003_00005_00009' direct represents '9' with '4315'
4307 4308 4309 4310 4311 4312 4313 4314 4315 0
-4307 4316 0
-4307 4319 0
-4308 4317 0
-4308 4319 0
-4309 4318 0
-4309 4319 0
-4310 4316 0
-4310 4320 0
-4311 4317 0
-4311 4320 0
-4312 4318 0
-4312 4320 0
-4313 4316 0
-4313 4321 0
-4314 4317 0
-4314 4321 0
-4315 4318 0
-4315 4321 0
-4316 -4317 0
-4316 -4318 0
-4317 -4318 0
-4319 -4320 0
-4319 -4321 0
-4320 -4321 0
c Encoding variable: variant_fields_00003_00006_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00006_00001' order represents '1' with '4322'
c Var 'variant_fields_00003_00006_00001' direct represents '1' with '4322'
c Var 'variant_fields_00003_00006_00001' order represents '2' with '4323'
-4322 4323 0
c Var 'variant_fields_00003_00006_00001' direct represents '2' with '4324'
4322 -4323 4324 0
-4324 4323 0
-4324 -4322 0
c Var 'variant_fields_00003_00006_00001' order represents '3' with '4325'
-4323 4325 0
c Var 'variant_fields_00003_00006_00001' direct represents '3' with '4326'
4323 -4325 4326 0
-4326 4325 0
-4326 -4323 0
c Var 'variant_fields_00003_00006_00001' order represents '4' with '4327'
-4325 4327 0
c Var 'variant_fields_00003_00006_00001' direct represents '4' with '4328'
4325 -4327 4328 0
-4328 4327 0
-4328 -4325 0
c Var 'variant_fields_00003_00006_00001' order represents '5' with '4329'
-4327 4329 0
c Var 'variant_fields_00003_00006_00001' direct represents '5' with '4330'
4327 -4329 4330 0
-4330 4329 0
-4330 -4327 0
c Var 'variant_fields_00003_00006_00001' order represents '6' with '4331'
-4329 4331 0
c Var 'variant_fields_00003_00006_00001' direct represents '6' with '4332'
4329 -4331 4332 0
-4332 4331 0
-4332 -4329 0
c Var 'variant_fields_00003_00006_00001' order represents '7' with '4333'
-4331 4333 0
c Var 'variant_fields_00003_00006_00001' direct represents '7' with '4334'
4331 -4333 4334 0
-4334 4333 0
-4334 -4331 0
c Var 'variant_fields_00003_00006_00001' order represents '8' with '4335'
-4333 4335 0
c Var 'variant_fields_00003_00006_00001' direct represents '8' with '4336'
4333 -4335 4336 0
-4336 4335 0
-4336 -4333 0
c Var 'variant_fields_00003_00006_00001' direct represents '9' with '-4335'
4322 4324 4326 4328 4330 4332 4334 4336 -4335 0
c Encoding variable: variant_fields_00003_00006_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00006_00002' direct represents '1' with '4337'
c Var 'variant_fields_00003_00006_00002' direct represents '2' with '4338'
c Var 'variant_fields_00003_00006_00002' direct represents '3' with '4339'
c Var 'variant_fields_00003_00006_00002' direct represents '4' with '4340'
c Var 'variant_fields_00003_00006_00002' direct represents '5' with '4341'
c Var 'variant_fields_00003_00006_00002' direct represents '6' with '4342'
c Var 'variant_fields_00003_00006_00002' direct represents '7' with '4343'
c Var 'variant_fields_00003_00006_00002' direct represents '8' with '4344'
c Var 'variant_fields_00003_00006_00002' direct represents '9' with '4345'
4337 4338 4339 4340 4341 4342 4343 4344 4345 0
-4337 4346 0
-4337 4349 0
-4338 4347 0
-4338 4349 0
-4339 4348 0
-4339 4349 0
-4340 4346 0
-4340 4350 0
-4341 4347 0
-4341 4350 0
-4342 4348 0
-4342 4350 0
-4343 4346 0
-4343 4351 0
-4344 4347 0
-4344 4351 0
-4345 4348 0
-4345 4351 0
-4346 -4347 0
-4346 -4348 0
-4347 -4348 0
-4349 -4350 0
-4349 -4351 0
-4350 -4351 0
c Encoding variable: variant_fields_00003_00006_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00006_00003' direct represents '1' with '4352'
c Var 'variant_fields_00003_00006_00003' direct represents '2' with '4353'
c Var 'variant_fields_00003_00006_00003' direct represents '3' with '4354'
c Var 'variant_fields_00003_00006_00003' direct represents '4' with '4355'
c Var 'variant_fields_00003_00006_00003' direct represents '5' with '4356'
c Var 'variant_fields_00003_00006_00003' direct represents '6' with '4357'
c Var 'variant_fields_00003_00006_00003' direct represents '7' with '4358'
c Var 'variant_fields_00003_00006_00003' direct represents '8' with '4359'
c Var 'variant_fields_00003_00006_00003' direct represents '9' with '4360'
4352 4353 4354 4355 4356 4357 4358 4359 4360 0
-4352 4361 0
-4352 4364 0
-4353 4362 0
-4353 4364 0
-4354 4363 0
-4354 4364 0
-4355 4361 0
-4355 4365 0
-4356 4362 0
-4356 4365 0
-4357 4363 0
-4357 4365 0
-4358 4361 0
-4358 4366 0
-4359 4362 0
-4359 4366 0
-4360 4363 0
-4360 4366 0
-4361 -4362 0
-4361 -4363 0
-4362 -4363 0
-4364 -4365 0
-4364 -4366 0
-4365 -4366 0
c Encoding variable: variant_fields_00003_00006_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00006_00004' direct represents '1' with '4367'
c Var 'variant_fields_00003_00006_00004' direct represents '2' with '4368'
c Var 'variant_fields_00003_00006_00004' direct represents '3' with '4369'
c Var 'variant_fields_00003_00006_00004' direct represents '4' with '4370'
c Var 'variant_fields_00003_00006_00004' direct represents '5' with '4371'
c Var 'variant_fields_00003_00006_00004' direct represents '6' with '4372'
c Var 'variant_fields_00003_00006_00004' direct represents '7' with '4373'
c Var 'variant_fields_00003_00006_00004' direct represents '8' with '4374'
c Var 'variant_fields_00003_00006_00004' direct represents '9' with '4375'
4367 4368 4369 4370 4371 4372 4373 4374 4375 0
-4367 4376 0
-4367 4379 0
-4368 4377 0
-4368 4379 0
-4369 4378 0
-4369 4379 0
-4370 4376 0
-4370 4380 0
-4371 4377 0
-4371 4380 0
-4372 4378 0
-4372 4380 0
-4373 4376 0
-4373 4381 0
-4374 4377 0
-4374 4381 0
-4375 4378 0
-4375 4381 0
-4376 -4377 0
-4376 -4378 0
-4377 -4378 0
-4379 -4380 0
-4379 -4381 0
-4380 -4381 0
c Encoding variable: variant_fields_00003_00006_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00006_00005' direct represents '1' with '4382'
c Var 'variant_fields_00003_00006_00005' direct represents '2' with '4383'
c Var 'variant_fields_00003_00006_00005' direct represents '3' with '4384'
c Var 'variant_fields_00003_00006_00005' direct represents '4' with '4385'
c Var 'variant_fields_00003_00006_00005' direct represents '5' with '4386'
c Var 'variant_fields_00003_00006_00005' direct represents '6' with '4387'
c Var 'variant_fields_00003_00006_00005' direct represents '7' with '4388'
c Var 'variant_fields_00003_00006_00005' direct represents '8' with '4389'
c Var 'variant_fields_00003_00006_00005' direct represents '9' with '4390'
4382 4383 4384 4385 4386 4387 4388 4389 4390 0
-4382 4391 0
-4382 4394 0
-4383 4392 0
-4383 4394 0
-4384 4393 0
-4384 4394 0
-4385 4391 0
-4385 4395 0
-4386 4392 0
-4386 4395 0
-4387 4393 0
-4387 4395 0
-4388 4391 0
-4388 4396 0
-4389 4392 0
-4389 4396 0
-4390 4393 0
-4390 4396 0
-4391 -4392 0
-4391 -4393 0
-4392 -4393 0
-4394 -4395 0
-4394 -4396 0
-4395 -4396 0
c Encoding variable: variant_fields_00003_00006_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00006_00006' direct represents '1' with '4397'
c Var 'variant_fields_00003_00006_00006' direct represents '2' with '4398'
c Var 'variant_fields_00003_00006_00006' direct represents '3' with '4399'
c Var 'variant_fields_00003_00006_00006' direct represents '4' with '4400'
c Var 'variant_fields_00003_00006_00006' direct represents '5' with '4401'
c Var 'variant_fields_00003_00006_00006' direct represents '6' with '4402'
c Var 'variant_fields_00003_00006_00006' direct represents '7' with '4403'
c Var 'variant_fields_00003_00006_00006' direct represents '8' with '4404'
c Var 'variant_fields_00003_00006_00006' direct represents '9' with '4405'
4397 4398 4399 4400 4401 4402 4403 4404 4405 0
-4397 4406 0
-4397 4409 0
-4398 4407 0
-4398 4409 0
-4399 4408 0
-4399 4409 0
-4400 4406 0
-4400 4410 0
-4401 4407 0
-4401 4410 0
-4402 4408 0
-4402 4410 0
-4403 4406 0
-4403 4411 0
-4404 4407 0
-4404 4411 0
-4405 4408 0
-4405 4411 0
-4406 -4407 0
-4406 -4408 0
-4407 -4408 0
-4409 -4410 0
-4409 -4411 0
-4410 -4411 0
c Encoding variable: variant_fields_00003_00006_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00006_00007' direct represents '1' with '4412'
c Var 'variant_fields_00003_00006_00007' direct represents '2' with '4413'
c Var 'variant_fields_00003_00006_00007' direct represents '3' with '4414'
c Var 'variant_fields_00003_00006_00007' direct represents '4' with '4415'
c Var 'variant_fields_00003_00006_00007' direct represents '5' with '4416'
c Var 'variant_fields_00003_00006_00007' direct represents '6' with '4417'
c Var 'variant_fields_00003_00006_00007' direct represents '7' with '4418'
c Var 'variant_fields_00003_00006_00007' direct represents '8' with '4419'
c Var 'variant_fields_00003_00006_00007' direct represents '9' with '4420'
4412 4413 4414 4415 4416 4417 4418 4419 4420 0
-4412 4421 0
-4412 4424 0
-4413 4422 0
-4413 4424 0
-4414 4423 0
-4414 4424 0
-4415 4421 0
-4415 4425 0
-4416 4422 0
-4416 4425 0
-4417 4423 0
-4417 4425 0
-4418 4421 0
-4418 4426 0
-4419 4422 0
-4419 4426 0
-4420 4423 0
-4420 4426 0
-4421 -4422 0
-4421 -4423 0
-4422 -4423 0
-4424 -4425 0
-4424 -4426 0
-4425 -4426 0
c Encoding variable: variant_fields_00003_00006_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00006_00008' direct represents '1' with '4427'
c Var 'variant_fields_00003_00006_00008' direct represents '2' with '4428'
c Var 'variant_fields_00003_00006_00008' direct represents '3' with '4429'
c Var 'variant_fields_00003_00006_00008' direct represents '4' with '4430'
c Var 'variant_fields_00003_00006_00008' direct represents '5' with '4431'
c Var 'variant_fields_00003_00006_00008' direct represents '6' with '4432'
c Var 'variant_fields_00003_00006_00008' direct represents '7' with '4433'
c Var 'variant_fields_00003_00006_00008' direct represents '8' with '4434'
c Var 'variant_fields_00003_00006_00008' direct represents '9' with '4435'
4427 4428 4429 4430 4431 4432 4433 4434 4435 0
-4427 4436 0
-4427 4439 0
-4428 4437 0
-4428 4439 0
-4429 4438 0
-4429 4439 0
-4430 4436 0
-4430 4440 0
-4431 4437 0
-4431 4440 0
-4432 4438 0
-4432 4440 0
-4433 4436 0
-4433 4441 0
-4434 4437 0
-4434 4441 0
-4435 4438 0
-4435 4441 0
-4436 -4437 0
-4436 -4438 0
-4437 -4438 0
-4439 -4440 0
-4439 -4441 0
-4440 -4441 0
c Encoding variable: variant_fields_00003_00006_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00006_00009' direct represents '1' with '4442'
c Var 'variant_fields_00003_00006_00009' direct represents '2' with '4443'
c Var 'variant_fields_00003_00006_00009' direct represents '3' with '4444'
c Var 'variant_fields_00003_00006_00009' direct represents '4' with '4445'
c Var 'variant_fields_00003_00006_00009' direct represents '5' with '4446'
c Var 'variant_fields_00003_00006_00009' direct represents '6' with '4447'
c Var 'variant_fields_00003_00006_00009' direct represents '7' with '4448'
c Var 'variant_fields_00003_00006_00009' direct represents '8' with '4449'
c Var 'variant_fields_00003_00006_00009' direct represents '9' with '4450'
4442 4443 4444 4445 4446 4447 4448 4449 4450 0
-4442 4451 0
-4442 4454 0
-4443 4452 0
-4443 4454 0
-4444 4453 0
-4444 4454 0
-4445 4451 0
-4445 4455 0
-4446 4452 0
-4446 4455 0
-4447 4453 0
-4447 4455 0
-4448 4451 0
-4448 4456 0
-4449 4452 0
-4449 4456 0
-4450 4453 0
-4450 4456 0
-4451 -4452 0
-4451 -4453 0
-4452 -4453 0
-4454 -4455 0
-4454 -4456 0
-4455 -4456 0
c Encoding variable: variant_fields_00003_00007_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00007_00001' direct represents '1' with '4457'
c Var 'variant_fields_00003_00007_00001' direct represents '2' with '4458'
c Var 'variant_fields_00003_00007_00001' direct represents '3' with '4459'
c Var 'variant_fields_00003_00007_00001' direct represents '4' with '4460'
c Var 'variant_fields_00003_00007_00001' direct represents '5' with '4461'
c Var 'variant_fields_00003_00007_00001' direct represents '6' with '4462'
c Var 'variant_fields_00003_00007_00001' direct represents '7' with '4463'
c Var 'variant_fields_00003_00007_00001' direct represents '8' with '4464'
c Var 'variant_fields_00003_00007_00001' direct represents '9' with '4465'
4457 4458 4459 4460 4461 4462 4463 4464 4465 0
-4457 4466 0
-4457 4469 0
-4458 4467 0
-4458 4469 0
-4459 4468 0
-4459 4469 0
-4460 4466 0
-4460 4470 0
-4461 4467 0
-4461 4470 0
-4462 4468 0
-4462 4470 0
-4463 4466 0
-4463 4471 0
-4464 4467 0
-4464 4471 0
-4465 4468 0
-4465 4471 0
-4466 -4467 0
-4466 -4468 0
-4467 -4468 0
-4469 -4470 0
-4469 -4471 0
-4470 -4471 0
c Encoding variable: variant_fields_00003_00007_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00007_00002' direct represents '1' with '4472'
c Var 'variant_fields_00003_00007_00002' direct represents '2' with '4473'
c Var 'variant_fields_00003_00007_00002' direct represents '3' with '4474'
c Var 'variant_fields_00003_00007_00002' direct represents '4' with '4475'
c Var 'variant_fields_00003_00007_00002' direct represents '5' with '4476'
c Var 'variant_fields_00003_00007_00002' direct represents '6' with '4477'
c Var 'variant_fields_00003_00007_00002' direct represents '7' with '4478'
c Var 'variant_fields_00003_00007_00002' direct represents '8' with '4479'
c Var 'variant_fields_00003_00007_00002' direct represents '9' with '4480'
4472 4473 4474 4475 4476 4477 4478 4479 4480 0
-4472 4481 0
-4472 4484 0
-4473 4482 0
-4473 4484 0
-4474 4483 0
-4474 4484 0
-4475 4481 0
-4475 4485 0
-4476 4482 0
-4476 4485 0
-4477 4483 0
-4477 4485 0
-4478 4481 0
-4478 4486 0
-4479 4482 0
-4479 4486 0
-4480 4483 0
-4480 4486 0
-4481 -4482 0
-4481 -4483 0
-4482 -4483 0
-4484 -4485 0
-4484 -4486 0
-4485 -4486 0
c Encoding variable: variant_fields_00003_00007_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00007_00003' direct represents '1' with '4487'
c Var 'variant_fields_00003_00007_00003' direct represents '2' with '4488'
c Var 'variant_fields_00003_00007_00003' direct represents '3' with '4489'
c Var 'variant_fields_00003_00007_00003' direct represents '4' with '4490'
c Var 'variant_fields_00003_00007_00003' direct represents '5' with '4491'
c Var 'variant_fields_00003_00007_00003' direct represents '6' with '4492'
c Var 'variant_fields_00003_00007_00003' direct represents '7' with '4493'
c Var 'variant_fields_00003_00007_00003' direct represents '8' with '4494'
c Var 'variant_fields_00003_00007_00003' direct represents '9' with '4495'
4487 4488 4489 4490 4491 4492 4493 4494 4495 0
-4487 4496 0
-4487 4499 0
-4488 4497 0
-4488 4499 0
-4489 4498 0
-4489 4499 0
-4490 4496 0
-4490 4500 0
-4491 4497 0
-4491 4500 0
-4492 4498 0
-4492 4500 0
-4493 4496 0
-4493 4501 0
-4494 4497 0
-4494 4501 0
-4495 4498 0
-4495 4501 0
-4496 -4497 0
-4496 -4498 0
-4497 -4498 0
-4499 -4500 0
-4499 -4501 0
-4500 -4501 0
c Encoding variable: variant_fields_00003_00007_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00007_00004' direct represents '1' with '4502'
c Var 'variant_fields_00003_00007_00004' direct represents '2' with '4503'
c Var 'variant_fields_00003_00007_00004' direct represents '3' with '4504'
c Var 'variant_fields_00003_00007_00004' direct represents '4' with '4505'
c Var 'variant_fields_00003_00007_00004' direct represents '5' with '4506'
c Var 'variant_fields_00003_00007_00004' direct represents '6' with '4507'
c Var 'variant_fields_00003_00007_00004' direct represents '7' with '4508'
c Var 'variant_fields_00003_00007_00004' direct represents '8' with '4509'
c Var 'variant_fields_00003_00007_00004' direct represents '9' with '4510'
4502 4503 4504 4505 4506 4507 4508 4509 4510 0
-4502 4511 0
-4502 4514 0
-4503 4512 0
-4503 4514 0
-4504 4513 0
-4504 4514 0
-4505 4511 0
-4505 4515 0
-4506 4512 0
-4506 4515 0
-4507 4513 0
-4507 4515 0
-4508 4511 0
-4508 4516 0
-4509 4512 0
-4509 4516 0
-4510 4513 0
-4510 4516 0
-4511 -4512 0
-4511 -4513 0
-4512 -4513 0
-4514 -4515 0
-4514 -4516 0
-4515 -4516 0
c Encoding variable: variant_fields_00003_00007_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00007_00005' direct represents '1' with '4517'
c Var 'variant_fields_00003_00007_00005' direct represents '2' with '4518'
c Var 'variant_fields_00003_00007_00005' direct represents '3' with '4519'
c Var 'variant_fields_00003_00007_00005' direct represents '4' with '4520'
c Var 'variant_fields_00003_00007_00005' direct represents '5' with '4521'
c Var 'variant_fields_00003_00007_00005' direct represents '6' with '4522'
c Var 'variant_fields_00003_00007_00005' direct represents '7' with '4523'
c Var 'variant_fields_00003_00007_00005' direct represents '8' with '4524'
c Var 'variant_fields_00003_00007_00005' direct represents '9' with '4525'
4517 4518 4519 4520 4521 4522 4523 4524 4525 0
-4517 4526 0
-4517 4529 0
-4518 4527 0
-4518 4529 0
-4519 4528 0
-4519 4529 0
-4520 4526 0
-4520 4530 0
-4521 4527 0
-4521 4530 0
-4522 4528 0
-4522 4530 0
-4523 4526 0
-4523 4531 0
-4524 4527 0
-4524 4531 0
-4525 4528 0
-4525 4531 0
-4526 -4527 0
-4526 -4528 0
-4527 -4528 0
-4529 -4530 0
-4529 -4531 0
-4530 -4531 0
c Encoding variable: variant_fields_00003_00007_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00007_00006' direct represents '1' with '4532'
c Var 'variant_fields_00003_00007_00006' direct represents '2' with '4533'
c Var 'variant_fields_00003_00007_00006' direct represents '3' with '4534'
c Var 'variant_fields_00003_00007_00006' direct represents '4' with '4535'
c Var 'variant_fields_00003_00007_00006' direct represents '5' with '4536'
c Var 'variant_fields_00003_00007_00006' direct represents '6' with '4537'
c Var 'variant_fields_00003_00007_00006' direct represents '7' with '4538'
c Var 'variant_fields_00003_00007_00006' direct represents '8' with '4539'
c Var 'variant_fields_00003_00007_00006' direct represents '9' with '4540'
4532 4533 4534 4535 4536 4537 4538 4539 4540 0
-4532 4541 0
-4532 4544 0
-4533 4542 0
-4533 4544 0
-4534 4543 0
-4534 4544 0
-4535 4541 0
-4535 4545 0
-4536 4542 0
-4536 4545 0
-4537 4543 0
-4537 4545 0
-4538 4541 0
-4538 4546 0
-4539 4542 0
-4539 4546 0
-4540 4543 0
-4540 4546 0
-4541 -4542 0
-4541 -4543 0
-4542 -4543 0
-4544 -4545 0
-4544 -4546 0
-4545 -4546 0
c Encoding variable: variant_fields_00003_00007_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00007_00007' direct represents '1' with '4547'
c Var 'variant_fields_00003_00007_00007' direct represents '2' with '4548'
c Var 'variant_fields_00003_00007_00007' direct represents '3' with '4549'
c Var 'variant_fields_00003_00007_00007' direct represents '4' with '4550'
c Var 'variant_fields_00003_00007_00007' direct represents '5' with '4551'
c Var 'variant_fields_00003_00007_00007' direct represents '6' with '4552'
c Var 'variant_fields_00003_00007_00007' direct represents '7' with '4553'
c Var 'variant_fields_00003_00007_00007' direct represents '8' with '4554'
c Var 'variant_fields_00003_00007_00007' direct represents '9' with '4555'
4547 4548 4549 4550 4551 4552 4553 4554 4555 0
-4547 4556 0
-4547 4559 0
-4548 4557 0
-4548 4559 0
-4549 4558 0
-4549 4559 0
-4550 4556 0
-4550 4560 0
-4551 4557 0
-4551 4560 0
-4552 4558 0
-4552 4560 0
-4553 4556 0
-4553 4561 0
-4554 4557 0
-4554 4561 0
-4555 4558 0
-4555 4561 0
-4556 -4557 0
-4556 -4558 0
-4557 -4558 0
-4559 -4560 0
-4559 -4561 0
-4560 -4561 0
c Encoding variable: variant_fields_00003_00007_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00007_00008' direct represents '1' with '4562'
c Var 'variant_fields_00003_00007_00008' direct represents '2' with '4563'
c Var 'variant_fields_00003_00007_00008' direct represents '3' with '4564'
c Var 'variant_fields_00003_00007_00008' direct represents '4' with '4565'
c Var 'variant_fields_00003_00007_00008' direct represents '5' with '4566'
c Var 'variant_fields_00003_00007_00008' direct represents '6' with '4567'
c Var 'variant_fields_00003_00007_00008' direct represents '7' with '4568'
c Var 'variant_fields_00003_00007_00008' direct represents '8' with '4569'
c Var 'variant_fields_00003_00007_00008' direct represents '9' with '4570'
4562 4563 4564 4565 4566 4567 4568 4569 4570 0
-4562 4571 0
-4562 4574 0
-4563 4572 0
-4563 4574 0
-4564 4573 0
-4564 4574 0
-4565 4571 0
-4565 4575 0
-4566 4572 0
-4566 4575 0
-4567 4573 0
-4567 4575 0
-4568 4571 0
-4568 4576 0
-4569 4572 0
-4569 4576 0
-4570 4573 0
-4570 4576 0
-4571 -4572 0
-4571 -4573 0
-4572 -4573 0
-4574 -4575 0
-4574 -4576 0
-4575 -4576 0
c Encoding variable: variant_fields_00003_00007_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00007_00009' direct represents '1' with '4577'
c Var 'variant_fields_00003_00007_00009' direct represents '2' with '4578'
c Var 'variant_fields_00003_00007_00009' direct represents '3' with '4579'
c Var 'variant_fields_00003_00007_00009' direct represents '4' with '4580'
c Var 'variant_fields_00003_00007_00009' direct represents '5' with '4581'
c Var 'variant_fields_00003_00007_00009' direct represents '6' with '4582'
c Var 'variant_fields_00003_00007_00009' direct represents '7' with '4583'
c Var 'variant_fields_00003_00007_00009' direct represents '8' with '4584'
c Var 'variant_fields_00003_00007_00009' direct represents '9' with '4585'
4577 4578 4579 4580 4581 4582 4583 4584 4585 0
-4577 4586 0
-4577 4589 0
-4578 4587 0
-4578 4589 0
-4579 4588 0
-4579 4589 0
-4580 4586 0
-4580 4590 0
-4581 4587 0
-4581 4590 0
-4582 4588 0
-4582 4590 0
-4583 4586 0
-4583 4591 0
-4584 4587 0
-4584 4591 0
-4585 4588 0
-4585 4591 0
-4586 -4587 0
-4586 -4588 0
-4587 -4588 0
-4589 -4590 0
-4589 -4591 0
-4590 -4591 0
c Encoding variable: variant_fields_00003_00008_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00003_00008_00001' order represents '1' with '4592'
c Var 'variant_fields_00003_00008_00001' direct represents '1' with '4592'
c Var 'variant_fields_00003_00008_00001' order represents '2' with '4593'
-4592 4593 0
c Var 'variant_fields_00003_00008_00001' direct represents '2' with '4594'
4592 -4593 4594 0
-4594 4593 0
-4594 -4592 0
c Var 'variant_fields_00003_00008_00001' order represents '3' with '4595'
-4593 4595 0
c Var 'variant_fields_00003_00008_00001' direct represents '3' with '4596'
4593 -4595 4596 0
-4596 4595 0
-4596 -4593 0
c Var 'variant_fields_00003_00008_00001' order represents '4' with '4597'
-4595 4597 0
c Var 'variant_fields_00003_00008_00001' direct represents '4' with '4598'
4595 -4597 4598 0
-4598 4597 0
-4598 -4595 0
c Var 'variant_fields_00003_00008_00001' order represents '5' with '4599'
-4597 4599 0
c Var 'variant_fields_00003_00008_00001' direct represents '5' with '4600'
4597 -4599 4600 0
-4600 4599 0
-4600 -4597 0
c Var 'variant_fields_00003_00008_00001' order represents '6' with '4601'
-4599 4601 0
c Var 'variant_fields_00003_00008_00001' direct represents '6' with '4602'
4599 -4601 4602 0
-4602 4601 0
-4602 -4599 0
c Var 'variant_fields_00003_00008_00001' order represents '7' with '4603'
-4601 4603 0
c Var 'variant_fields_00003_00008_00001' direct represents '7' with '4604'
4601 -4603 4604 0
-4604 4603 0
-4604 -4601 0
c Var 'variant_fields_00003_00008_00001' order represents '8' with '4605'
-4603 4605 0
c Var 'variant_fields_00003_00008_00001' direct represents '8' with '4606'
4603 -4605 4606 0
-4606 4605 0
-4606 -4603 0
c Var 'variant_fields_00003_00008_00001' direct represents '9' with '-4605'
4592 4594 4596 4598 4600 4602 4604 4606 -4605 0
c Encoding variable: variant_fields_00003_00008_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00008_00002' direct represents '1' with '4607'
c Var 'variant_fields_00003_00008_00002' direct represents '2' with '4608'
c Var 'variant_fields_00003_00008_00002' direct represents '3' with '4609'
c Var 'variant_fields_00003_00008_00002' direct represents '4' with '4610'
c Var 'variant_fields_00003_00008_00002' direct represents '5' with '4611'
c Var 'variant_fields_00003_00008_00002' direct represents '6' with '4612'
c Var 'variant_fields_00003_00008_00002' direct represents '7' with '4613'
c Var 'variant_fields_00003_00008_00002' direct represents '8' with '4614'
c Var 'variant_fields_00003_00008_00002' direct represents '9' with '4615'
4607 4608 4609 4610 4611 4612 4613 4614 4615 0
-4607 4616 0
-4607 4619 0
-4608 4617 0
-4608 4619 0
-4609 4618 0
-4609 4619 0
-4610 4616 0
-4610 4620 0
-4611 4617 0
-4611 4620 0
-4612 4618 0
-4612 4620 0
-4613 4616 0
-4613 4621 0
-4614 4617 0
-4614 4621 0
-4615 4618 0
-4615 4621 0
-4616 -4617 0
-4616 -4618 0
-4617 -4618 0
-4619 -4620 0
-4619 -4621 0
-4620 -4621 0
c Encoding variable: variant_fields_00003_00008_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00008_00003' direct represents '1' with '4622'
c Var 'variant_fields_00003_00008_00003' direct represents '2' with '4623'
c Var 'variant_fields_00003_00008_00003' direct represents '3' with '4624'
c Var 'variant_fields_00003_00008_00003' direct represents '4' with '4625'
c Var 'variant_fields_00003_00008_00003' direct represents '5' with '4626'
c Var 'variant_fields_00003_00008_00003' direct represents '6' with '4627'
c Var 'variant_fields_00003_00008_00003' direct represents '7' with '4628'
c Var 'variant_fields_00003_00008_00003' direct represents '8' with '4629'
c Var 'variant_fields_00003_00008_00003' direct represents '9' with '4630'
4622 4623 4624 4625 4626 4627 4628 4629 4630 0
-4622 4631 0
-4622 4634 0
-4623 4632 0
-4623 4634 0
-4624 4633 0
-4624 4634 0
-4625 4631 0
-4625 4635 0
-4626 4632 0
-4626 4635 0
-4627 4633 0
-4627 4635 0
-4628 4631 0
-4628 4636 0
-4629 4632 0
-4629 4636 0
-4630 4633 0
-4630 4636 0
-4631 -4632 0
-4631 -4633 0
-4632 -4633 0
-4634 -4635 0
-4634 -4636 0
-4635 -4636 0
c Encoding variable: variant_fields_00003_00008_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00008_00004' direct represents '1' with '4637'
c Var 'variant_fields_00003_00008_00004' direct represents '2' with '4638'
c Var 'variant_fields_00003_00008_00004' direct represents '3' with '4639'
c Var 'variant_fields_00003_00008_00004' direct represents '4' with '4640'
c Var 'variant_fields_00003_00008_00004' direct represents '5' with '4641'
c Var 'variant_fields_00003_00008_00004' direct represents '6' with '4642'
c Var 'variant_fields_00003_00008_00004' direct represents '7' with '4643'
c Var 'variant_fields_00003_00008_00004' direct represents '8' with '4644'
c Var 'variant_fields_00003_00008_00004' direct represents '9' with '4645'
4637 4638 4639 4640 4641 4642 4643 4644 4645 0
-4637 4646 0
-4637 4649 0
-4638 4647 0
-4638 4649 0
-4639 4648 0
-4639 4649 0
-4640 4646 0
-4640 4650 0
-4641 4647 0
-4641 4650 0
-4642 4648 0
-4642 4650 0
-4643 4646 0
-4643 4651 0
-4644 4647 0
-4644 4651 0
-4645 4648 0
-4645 4651 0
-4646 -4647 0
-4646 -4648 0
-4647 -4648 0
-4649 -4650 0
-4649 -4651 0
-4650 -4651 0
c Encoding variable: variant_fields_00003_00008_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00008_00005' direct represents '1' with '4652'
c Var 'variant_fields_00003_00008_00005' direct represents '2' with '4653'
c Var 'variant_fields_00003_00008_00005' direct represents '3' with '4654'
c Var 'variant_fields_00003_00008_00005' direct represents '4' with '4655'
c Var 'variant_fields_00003_00008_00005' direct represents '5' with '4656'
c Var 'variant_fields_00003_00008_00005' direct represents '6' with '4657'
c Var 'variant_fields_00003_00008_00005' direct represents '7' with '4658'
c Var 'variant_fields_00003_00008_00005' direct represents '8' with '4659'
c Var 'variant_fields_00003_00008_00005' direct represents '9' with '4660'
4652 4653 4654 4655 4656 4657 4658 4659 4660 0
-4652 4661 0
-4652 4664 0
-4653 4662 0
-4653 4664 0
-4654 4663 0
-4654 4664 0
-4655 4661 0
-4655 4665 0
-4656 4662 0
-4656 4665 0
-4657 4663 0
-4657 4665 0
-4658 4661 0
-4658 4666 0
-4659 4662 0
-4659 4666 0
-4660 4663 0
-4660 4666 0
-4661 -4662 0
-4661 -4663 0
-4662 -4663 0
-4664 -4665 0
-4664 -4666 0
-4665 -4666 0
c Encoding variable: variant_fields_00003_00008_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00008_00006' direct represents '1' with '4667'
c Var 'variant_fields_00003_00008_00006' direct represents '2' with '4668'
c Var 'variant_fields_00003_00008_00006' direct represents '3' with '4669'
c Var 'variant_fields_00003_00008_00006' direct represents '4' with '4670'
c Var 'variant_fields_00003_00008_00006' direct represents '5' with '4671'
c Var 'variant_fields_00003_00008_00006' direct represents '6' with '4672'
c Var 'variant_fields_00003_00008_00006' direct represents '7' with '4673'
c Var 'variant_fields_00003_00008_00006' direct represents '8' with '4674'
c Var 'variant_fields_00003_00008_00006' direct represents '9' with '4675'
4667 4668 4669 4670 4671 4672 4673 4674 4675 0
-4667 4676 0
-4667 4679 0
-4668 4677 0
-4668 4679 0
-4669 4678 0
-4669 4679 0
-4670 4676 0
-4670 4680 0
-4671 4677 0
-4671 4680 0
-4672 4678 0
-4672 4680 0
-4673 4676 0
-4673 4681 0
-4674 4677 0
-4674 4681 0
-4675 4678 0
-4675 4681 0
-4676 -4677 0
-4676 -4678 0
-4677 -4678 0
-4679 -4680 0
-4679 -4681 0
-4680 -4681 0
c Encoding variable: variant_fields_00003_00008_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00008_00007' direct represents '1' with '4682'
c Var 'variant_fields_00003_00008_00007' direct represents '2' with '4683'
c Var 'variant_fields_00003_00008_00007' direct represents '3' with '4684'
c Var 'variant_fields_00003_00008_00007' direct represents '4' with '4685'
c Var 'variant_fields_00003_00008_00007' direct represents '5' with '4686'
c Var 'variant_fields_00003_00008_00007' direct represents '6' with '4687'
c Var 'variant_fields_00003_00008_00007' direct represents '7' with '4688'
c Var 'variant_fields_00003_00008_00007' direct represents '8' with '4689'
c Var 'variant_fields_00003_00008_00007' direct represents '9' with '4690'
4682 4683 4684 4685 4686 4687 4688 4689 4690 0
-4682 4691 0
-4682 4694 0
-4683 4692 0
-4683 4694 0
-4684 4693 0
-4684 4694 0
-4685 4691 0
-4685 4695 0
-4686 4692 0
-4686 4695 0
-4687 4693 0
-4687 4695 0
-4688 4691 0
-4688 4696 0
-4689 4692 0
-4689 4696 0
-4690 4693 0
-4690 4696 0
-4691 -4692 0
-4691 -4693 0
-4692 -4693 0
-4694 -4695 0
-4694 -4696 0
-4695 -4696 0
c Encoding variable: variant_fields_00003_00008_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00008_00008' direct represents '1' with '4697'
c Var 'variant_fields_00003_00008_00008' direct represents '2' with '4698'
c Var 'variant_fields_00003_00008_00008' direct represents '3' with '4699'
c Var 'variant_fields_00003_00008_00008' direct represents '4' with '4700'
c Var 'variant_fields_00003_00008_00008' direct represents '5' with '4701'
c Var 'variant_fields_00003_00008_00008' direct represents '6' with '4702'
c Var 'variant_fields_00003_00008_00008' direct represents '7' with '4703'
c Var 'variant_fields_00003_00008_00008' direct represents '8' with '4704'
c Var 'variant_fields_00003_00008_00008' direct represents '9' with '4705'
4697 4698 4699 4700 4701 4702 4703 4704 4705 0
-4697 4706 0
-4697 4709 0
-4698 4707 0
-4698 4709 0
-4699 4708 0
-4699 4709 0
-4700 4706 0
-4700 4710 0
-4701 4707 0
-4701 4710 0
-4702 4708 0
-4702 4710 0
-4703 4706 0
-4703 4711 0
-4704 4707 0
-4704 4711 0
-4705 4708 0
-4705 4711 0
-4706 -4707 0
-4706 -4708 0
-4707 -4708 0
-4709 -4710 0
-4709 -4711 0
-4710 -4711 0
c Encoding variable: variant_fields_00003_00008_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00008_00009' direct represents '1' with '4712'
c Var 'variant_fields_00003_00008_00009' direct represents '2' with '4713'
c Var 'variant_fields_00003_00008_00009' direct represents '3' with '4714'
c Var 'variant_fields_00003_00008_00009' direct represents '4' with '4715'
c Var 'variant_fields_00003_00008_00009' direct represents '5' with '4716'
c Var 'variant_fields_00003_00008_00009' direct represents '6' with '4717'
c Var 'variant_fields_00003_00008_00009' direct represents '7' with '4718'
c Var 'variant_fields_00003_00008_00009' direct represents '8' with '4719'
c Var 'variant_fields_00003_00008_00009' direct represents '9' with '4720'
4712 4713 4714 4715 4716 4717 4718 4719 4720 0
-4712 4721 0
-4712 4724 0
-4713 4722 0
-4713 4724 0
-4714 4723 0
-4714 4724 0
-4715 4721 0
-4715 4725 0
-4716 4722 0
-4716 4725 0
-4717 4723 0
-4717 4725 0
-4718 4721 0
-4718 4726 0
-4719 4722 0
-4719 4726 0
-4720 4723 0
-4720 4726 0
-4721 -4722 0
-4721 -4723 0
-4722 -4723 0
-4724 -4725 0
-4724 -4726 0
-4725 -4726 0
c Encoding variable: variant_fields_00003_00009_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00009_00001' direct represents '1' with '4727'
c Var 'variant_fields_00003_00009_00001' direct represents '2' with '4728'
c Var 'variant_fields_00003_00009_00001' direct represents '3' with '4729'
c Var 'variant_fields_00003_00009_00001' direct represents '4' with '4730'
c Var 'variant_fields_00003_00009_00001' direct represents '5' with '4731'
c Var 'variant_fields_00003_00009_00001' direct represents '6' with '4732'
c Var 'variant_fields_00003_00009_00001' direct represents '7' with '4733'
c Var 'variant_fields_00003_00009_00001' direct represents '8' with '4734'
c Var 'variant_fields_00003_00009_00001' direct represents '9' with '4735'
4727 4728 4729 4730 4731 4732 4733 4734 4735 0
-4727 4736 0
-4727 4739 0
-4728 4737 0
-4728 4739 0
-4729 4738 0
-4729 4739 0
-4730 4736 0
-4730 4740 0
-4731 4737 0
-4731 4740 0
-4732 4738 0
-4732 4740 0
-4733 4736 0
-4733 4741 0
-4734 4737 0
-4734 4741 0
-4735 4738 0
-4735 4741 0
-4736 -4737 0
-4736 -4738 0
-4737 -4738 0
-4739 -4740 0
-4739 -4741 0
-4740 -4741 0
c Encoding variable: variant_fields_00003_00009_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00009_00002' direct represents '1' with '4742'
c Var 'variant_fields_00003_00009_00002' direct represents '2' with '4743'
c Var 'variant_fields_00003_00009_00002' direct represents '3' with '4744'
c Var 'variant_fields_00003_00009_00002' direct represents '4' with '4745'
c Var 'variant_fields_00003_00009_00002' direct represents '5' with '4746'
c Var 'variant_fields_00003_00009_00002' direct represents '6' with '4747'
c Var 'variant_fields_00003_00009_00002' direct represents '7' with '4748'
c Var 'variant_fields_00003_00009_00002' direct represents '8' with '4749'
c Var 'variant_fields_00003_00009_00002' direct represents '9' with '4750'
4742 4743 4744 4745 4746 4747 4748 4749 4750 0
-4742 4751 0
-4742 4754 0
-4743 4752 0
-4743 4754 0
-4744 4753 0
-4744 4754 0
-4745 4751 0
-4745 4755 0
-4746 4752 0
-4746 4755 0
-4747 4753 0
-4747 4755 0
-4748 4751 0
-4748 4756 0
-4749 4752 0
-4749 4756 0
-4750 4753 0
-4750 4756 0
-4751 -4752 0
-4751 -4753 0
-4752 -4753 0
-4754 -4755 0
-4754 -4756 0
-4755 -4756 0
c Encoding variable: variant_fields_00003_00009_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00009_00003' direct represents '1' with '4757'
c Var 'variant_fields_00003_00009_00003' direct represents '2' with '4758'
c Var 'variant_fields_00003_00009_00003' direct represents '3' with '4759'
c Var 'variant_fields_00003_00009_00003' direct represents '4' with '4760'
c Var 'variant_fields_00003_00009_00003' direct represents '5' with '4761'
c Var 'variant_fields_00003_00009_00003' direct represents '6' with '4762'
c Var 'variant_fields_00003_00009_00003' direct represents '7' with '4763'
c Var 'variant_fields_00003_00009_00003' direct represents '8' with '4764'
c Var 'variant_fields_00003_00009_00003' direct represents '9' with '4765'
4757 4758 4759 4760 4761 4762 4763 4764 4765 0
-4757 4766 0
-4757 4769 0
-4758 4767 0
-4758 4769 0
-4759 4768 0
-4759 4769 0
-4760 4766 0
-4760 4770 0
-4761 4767 0
-4761 4770 0
-4762 4768 0
-4762 4770 0
-4763 4766 0
-4763 4771 0
-4764 4767 0
-4764 4771 0
-4765 4768 0
-4765 4771 0
-4766 -4767 0
-4766 -4768 0
-4767 -4768 0
-4769 -4770 0
-4769 -4771 0
-4770 -4771 0
c Encoding variable: variant_fields_00003_00009_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00009_00004' direct represents '1' with '4772'
c Var 'variant_fields_00003_00009_00004' direct represents '2' with '4773'
c Var 'variant_fields_00003_00009_00004' direct represents '3' with '4774'
c Var 'variant_fields_00003_00009_00004' direct represents '4' with '4775'
c Var 'variant_fields_00003_00009_00004' direct represents '5' with '4776'
c Var 'variant_fields_00003_00009_00004' direct represents '6' with '4777'
c Var 'variant_fields_00003_00009_00004' direct represents '7' with '4778'
c Var 'variant_fields_00003_00009_00004' direct represents '8' with '4779'
c Var 'variant_fields_00003_00009_00004' direct represents '9' with '4780'
4772 4773 4774 4775 4776 4777 4778 4779 4780 0
-4772 4781 0
-4772 4784 0
-4773 4782 0
-4773 4784 0
-4774 4783 0
-4774 4784 0
-4775 4781 0
-4775 4785 0
-4776 4782 0
-4776 4785 0
-4777 4783 0
-4777 4785 0
-4778 4781 0
-4778 4786 0
-4779 4782 0
-4779 4786 0
-4780 4783 0
-4780 4786 0
-4781 -4782 0
-4781 -4783 0
-4782 -4783 0
-4784 -4785 0
-4784 -4786 0
-4785 -4786 0
c Encoding variable: variant_fields_00003_00009_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00009_00005' direct represents '1' with '4787'
c Var 'variant_fields_00003_00009_00005' direct represents '2' with '4788'
c Var 'variant_fields_00003_00009_00005' direct represents '3' with '4789'
c Var 'variant_fields_00003_00009_00005' direct represents '4' with '4790'
c Var 'variant_fields_00003_00009_00005' direct represents '5' with '4791'
c Var 'variant_fields_00003_00009_00005' direct represents '6' with '4792'
c Var 'variant_fields_00003_00009_00005' direct represents '7' with '4793'
c Var 'variant_fields_00003_00009_00005' direct represents '8' with '4794'
c Var 'variant_fields_00003_00009_00005' direct represents '9' with '4795'
4787 4788 4789 4790 4791 4792 4793 4794 4795 0
-4787 4796 0
-4787 4799 0
-4788 4797 0
-4788 4799 0
-4789 4798 0
-4789 4799 0
-4790 4796 0
-4790 4800 0
-4791 4797 0
-4791 4800 0
-4792 4798 0
-4792 4800 0
-4793 4796 0
-4793 4801 0
-4794 4797 0
-4794 4801 0
-4795 4798 0
-4795 4801 0
-4796 -4797 0
-4796 -4798 0
-4797 -4798 0
-4799 -4800 0
-4799 -4801 0
-4800 -4801 0
c Encoding variable: variant_fields_00003_00009_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00009_00006' direct represents '1' with '4802'
c Var 'variant_fields_00003_00009_00006' direct represents '2' with '4803'
c Var 'variant_fields_00003_00009_00006' direct represents '3' with '4804'
c Var 'variant_fields_00003_00009_00006' direct represents '4' with '4805'
c Var 'variant_fields_00003_00009_00006' direct represents '5' with '4806'
c Var 'variant_fields_00003_00009_00006' direct represents '6' with '4807'
c Var 'variant_fields_00003_00009_00006' direct represents '7' with '4808'
c Var 'variant_fields_00003_00009_00006' direct represents '8' with '4809'
c Var 'variant_fields_00003_00009_00006' direct represents '9' with '4810'
4802 4803 4804 4805 4806 4807 4808 4809 4810 0
-4802 4811 0
-4802 4814 0
-4803 4812 0
-4803 4814 0
-4804 4813 0
-4804 4814 0
-4805 4811 0
-4805 4815 0
-4806 4812 0
-4806 4815 0
-4807 4813 0
-4807 4815 0
-4808 4811 0
-4808 4816 0
-4809 4812 0
-4809 4816 0
-4810 4813 0
-4810 4816 0
-4811 -4812 0
-4811 -4813 0
-4812 -4813 0
-4814 -4815 0
-4814 -4816 0
-4815 -4816 0
c Encoding variable: variant_fields_00003_00009_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00009_00007' direct represents '1' with '4817'
c Var 'variant_fields_00003_00009_00007' direct represents '2' with '4818'
c Var 'variant_fields_00003_00009_00007' direct represents '3' with '4819'
c Var 'variant_fields_00003_00009_00007' direct represents '4' with '4820'
c Var 'variant_fields_00003_00009_00007' direct represents '5' with '4821'
c Var 'variant_fields_00003_00009_00007' direct represents '6' with '4822'
c Var 'variant_fields_00003_00009_00007' direct represents '7' with '4823'
c Var 'variant_fields_00003_00009_00007' direct represents '8' with '4824'
c Var 'variant_fields_00003_00009_00007' direct represents '9' with '4825'
4817 4818 4819 4820 4821 4822 4823 4824 4825 0
-4817 4826 0
-4817 4829 0
-4818 4827 0
-4818 4829 0
-4819 4828 0
-4819 4829 0
-4820 4826 0
-4820 4830 0
-4821 4827 0
-4821 4830 0
-4822 4828 0
-4822 4830 0
-4823 4826 0
-4823 4831 0
-4824 4827 0
-4824 4831 0
-4825 4828 0
-4825 4831 0
-4826 -4827 0
-4826 -4828 0
-4827 -4828 0
-4829 -4830 0
-4829 -4831 0
-4830 -4831 0
c Encoding variable: variant_fields_00003_00009_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00009_00008' direct represents '1' with '4832'
c Var 'variant_fields_00003_00009_00008' direct represents '2' with '4833'
c Var 'variant_fields_00003_00009_00008' direct represents '3' with '4834'
c Var 'variant_fields_00003_00009_00008' direct represents '4' with '4835'
c Var 'variant_fields_00003_00009_00008' direct represents '5' with '4836'
c Var 'variant_fields_00003_00009_00008' direct represents '6' with '4837'
c Var 'variant_fields_00003_00009_00008' direct represents '7' with '4838'
c Var 'variant_fields_00003_00009_00008' direct represents '8' with '4839'
c Var 'variant_fields_00003_00009_00008' direct represents '9' with '4840'
4832 4833 4834 4835 4836 4837 4838 4839 4840 0
-4832 4841 0
-4832 4844 0
-4833 4842 0
-4833 4844 0
-4834 4843 0
-4834 4844 0
-4835 4841 0
-4835 4845 0
-4836 4842 0
-4836 4845 0
-4837 4843 0
-4837 4845 0
-4838 4841 0
-4838 4846 0
-4839 4842 0
-4839 4846 0
-4840 4843 0
-4840 4846 0
-4841 -4842 0
-4841 -4843 0
-4842 -4843 0
-4844 -4845 0
-4844 -4846 0
-4845 -4846 0
c Encoding variable: variant_fields_00003_00009_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00003_00009_00009' direct represents '1' with '4847'
c Var 'variant_fields_00003_00009_00009' direct represents '2' with '4848'
c Var 'variant_fields_00003_00009_00009' direct represents '3' with '4849'
c Var 'variant_fields_00003_00009_00009' direct represents '4' with '4850'
c Var 'variant_fields_00003_00009_00009' direct represents '5' with '4851'
c Var 'variant_fields_00003_00009_00009' direct represents '6' with '4852'
c Var 'variant_fields_00003_00009_00009' direct represents '7' with '4853'
c Var 'variant_fields_00003_00009_00009' direct represents '8' with '4854'
c Var 'variant_fields_00003_00009_00009' direct represents '9' with '4855'
4847 4848 4849 4850 4851 4852 4853 4854 4855 0
-4847 4856 0
-4847 4859 0
-4848 4857 0
-4848 4859 0
-4849 4858 0
-4849 4859 0
-4850 4856 0
-4850 4860 0
-4851 4857 0
-4851 4860 0
-4852 4858 0
-4852 4860 0
-4853 4856 0
-4853 4861 0
-4854 4857 0
-4854 4861 0
-4855 4858 0
-4855 4861 0
-4856 -4857 0
-4856 -4858 0
-4857 -4858 0
-4859 -4860 0
-4859 -4861 0
-4860 -4861 0
c Encoding variable: variant_fields_00004_00001_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00001_00001' direct represents '1' with '4862'
c Var 'variant_fields_00004_00001_00001' direct represents '2' with '4863'
c Var 'variant_fields_00004_00001_00001' direct represents '3' with '4864'
c Var 'variant_fields_00004_00001_00001' direct represents '4' with '4865'
c Var 'variant_fields_00004_00001_00001' direct represents '5' with '4866'
c Var 'variant_fields_00004_00001_00001' direct represents '6' with '4867'
c Var 'variant_fields_00004_00001_00001' direct represents '7' with '4868'
c Var 'variant_fields_00004_00001_00001' direct represents '8' with '4869'
c Var 'variant_fields_00004_00001_00001' direct represents '9' with '4870'
4862 4863 4864 4865 4866 4867 4868 4869 4870 0
-4862 4871 0
-4862 4874 0
-4863 4872 0
-4863 4874 0
-4864 4873 0
-4864 4874 0
-4865 4871 0
-4865 4875 0
-4866 4872 0
-4866 4875 0
-4867 4873 0
-4867 4875 0
-4868 4871 0
-4868 4876 0
-4869 4872 0
-4869 4876 0
-4870 4873 0
-4870 4876 0
-4871 -4872 0
-4871 -4873 0
-4872 -4873 0
-4874 -4875 0
-4874 -4876 0
-4875 -4876 0
c Encoding variable: variant_fields_00004_00001_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00001_00002' direct represents '1' with '4877'
c Var 'variant_fields_00004_00001_00002' direct represents '2' with '4878'
c Var 'variant_fields_00004_00001_00002' direct represents '3' with '4879'
c Var 'variant_fields_00004_00001_00002' direct represents '4' with '4880'
c Var 'variant_fields_00004_00001_00002' direct represents '5' with '4881'
c Var 'variant_fields_00004_00001_00002' direct represents '6' with '4882'
c Var 'variant_fields_00004_00001_00002' direct represents '7' with '4883'
c Var 'variant_fields_00004_00001_00002' direct represents '8' with '4884'
c Var 'variant_fields_00004_00001_00002' direct represents '9' with '4885'
4877 4878 4879 4880 4881 4882 4883 4884 4885 0
-4877 4886 0
-4877 4889 0
-4878 4887 0
-4878 4889 0
-4879 4888 0
-4879 4889 0
-4880 4886 0
-4880 4890 0
-4881 4887 0
-4881 4890 0
-4882 4888 0
-4882 4890 0
-4883 4886 0
-4883 4891 0
-4884 4887 0
-4884 4891 0
-4885 4888 0
-4885 4891 0
-4886 -4887 0
-4886 -4888 0
-4887 -4888 0
-4889 -4890 0
-4889 -4891 0
-4890 -4891 0
c Encoding variable: variant_fields_00004_00001_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00001_00003' direct represents '1' with '4892'
c Var 'variant_fields_00004_00001_00003' direct represents '2' with '4893'
c Var 'variant_fields_00004_00001_00003' direct represents '3' with '4894'
c Var 'variant_fields_00004_00001_00003' direct represents '4' with '4895'
c Var 'variant_fields_00004_00001_00003' direct represents '5' with '4896'
c Var 'variant_fields_00004_00001_00003' direct represents '6' with '4897'
c Var 'variant_fields_00004_00001_00003' direct represents '7' with '4898'
c Var 'variant_fields_00004_00001_00003' direct represents '8' with '4899'
c Var 'variant_fields_00004_00001_00003' direct represents '9' with '4900'
4892 4893 4894 4895 4896 4897 4898 4899 4900 0
-4892 4901 0
-4892 4904 0
-4893 4902 0
-4893 4904 0
-4894 4903 0
-4894 4904 0
-4895 4901 0
-4895 4905 0
-4896 4902 0
-4896 4905 0
-4897 4903 0
-4897 4905 0
-4898 4901 0
-4898 4906 0
-4899 4902 0
-4899 4906 0
-4900 4903 0
-4900 4906 0
-4901 -4902 0
-4901 -4903 0
-4902 -4903 0
-4904 -4905 0
-4904 -4906 0
-4905 -4906 0
c Encoding variable: variant_fields_00004_00001_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00001_00004' direct represents '1' with '4907'
c Var 'variant_fields_00004_00001_00004' direct represents '2' with '4908'
c Var 'variant_fields_00004_00001_00004' direct represents '3' with '4909'
c Var 'variant_fields_00004_00001_00004' direct represents '4' with '4910'
c Var 'variant_fields_00004_00001_00004' direct represents '5' with '4911'
c Var 'variant_fields_00004_00001_00004' direct represents '6' with '4912'
c Var 'variant_fields_00004_00001_00004' direct represents '7' with '4913'
c Var 'variant_fields_00004_00001_00004' direct represents '8' with '4914'
c Var 'variant_fields_00004_00001_00004' direct represents '9' with '4915'
4907 4908 4909 4910 4911 4912 4913 4914 4915 0
-4907 4916 0
-4907 4919 0
-4908 4917 0
-4908 4919 0
-4909 4918 0
-4909 4919 0
-4910 4916 0
-4910 4920 0
-4911 4917 0
-4911 4920 0
-4912 4918 0
-4912 4920 0
-4913 4916 0
-4913 4921 0
-4914 4917 0
-4914 4921 0
-4915 4918 0
-4915 4921 0
-4916 -4917 0
-4916 -4918 0
-4917 -4918 0
-4919 -4920 0
-4919 -4921 0
-4920 -4921 0
c Encoding variable: variant_fields_00004_00001_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00001_00005' direct represents '1' with '4922'
c Var 'variant_fields_00004_00001_00005' direct represents '2' with '4923'
c Var 'variant_fields_00004_00001_00005' direct represents '3' with '4924'
c Var 'variant_fields_00004_00001_00005' direct represents '4' with '4925'
c Var 'variant_fields_00004_00001_00005' direct represents '5' with '4926'
c Var 'variant_fields_00004_00001_00005' direct represents '6' with '4927'
c Var 'variant_fields_00004_00001_00005' direct represents '7' with '4928'
c Var 'variant_fields_00004_00001_00005' direct represents '8' with '4929'
c Var 'variant_fields_00004_00001_00005' direct represents '9' with '4930'
4922 4923 4924 4925 4926 4927 4928 4929 4930 0
-4922 4931 0
-4922 4934 0
-4923 4932 0
-4923 4934 0
-4924 4933 0
-4924 4934 0
-4925 4931 0
-4925 4935 0
-4926 4932 0
-4926 4935 0
-4927 4933 0
-4927 4935 0
-4928 4931 0
-4928 4936 0
-4929 4932 0
-4929 4936 0
-4930 4933 0
-4930 4936 0
-4931 -4932 0
-4931 -4933 0
-4932 -4933 0
-4934 -4935 0
-4934 -4936 0
-4935 -4936 0
c Encoding variable: variant_fields_00004_00001_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00001_00006' direct represents '1' with '4937'
c Var 'variant_fields_00004_00001_00006' direct represents '2' with '4938'
c Var 'variant_fields_00004_00001_00006' direct represents '3' with '4939'
c Var 'variant_fields_00004_00001_00006' direct represents '4' with '4940'
c Var 'variant_fields_00004_00001_00006' direct represents '5' with '4941'
c Var 'variant_fields_00004_00001_00006' direct represents '6' with '4942'
c Var 'variant_fields_00004_00001_00006' direct represents '7' with '4943'
c Var 'variant_fields_00004_00001_00006' direct represents '8' with '4944'
c Var 'variant_fields_00004_00001_00006' direct represents '9' with '4945'
4937 4938 4939 4940 4941 4942 4943 4944 4945 0
-4937 4946 0
-4937 4949 0
-4938 4947 0
-4938 4949 0
-4939 4948 0
-4939 4949 0
-4940 4946 0
-4940 4950 0
-4941 4947 0
-4941 4950 0
-4942 4948 0
-4942 4950 0
-4943 4946 0
-4943 4951 0
-4944 4947 0
-4944 4951 0
-4945 4948 0
-4945 4951 0
-4946 -4947 0
-4946 -4948 0
-4947 -4948 0
-4949 -4950 0
-4949 -4951 0
-4950 -4951 0
c Encoding variable: variant_fields_00004_00001_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00001_00007' direct represents '1' with '4952'
c Var 'variant_fields_00004_00001_00007' direct represents '2' with '4953'
c Var 'variant_fields_00004_00001_00007' direct represents '3' with '4954'
c Var 'variant_fields_00004_00001_00007' direct represents '4' with '4955'
c Var 'variant_fields_00004_00001_00007' direct represents '5' with '4956'
c Var 'variant_fields_00004_00001_00007' direct represents '6' with '4957'
c Var 'variant_fields_00004_00001_00007' direct represents '7' with '4958'
c Var 'variant_fields_00004_00001_00007' direct represents '8' with '4959'
c Var 'variant_fields_00004_00001_00007' direct represents '9' with '4960'
4952 4953 4954 4955 4956 4957 4958 4959 4960 0
-4952 4961 0
-4952 4964 0
-4953 4962 0
-4953 4964 0
-4954 4963 0
-4954 4964 0
-4955 4961 0
-4955 4965 0
-4956 4962 0
-4956 4965 0
-4957 4963 0
-4957 4965 0
-4958 4961 0
-4958 4966 0
-4959 4962 0
-4959 4966 0
-4960 4963 0
-4960 4966 0
-4961 -4962 0
-4961 -4963 0
-4962 -4963 0
-4964 -4965 0
-4964 -4966 0
-4965 -4966 0
c Encoding variable: variant_fields_00004_00001_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00001_00008' direct represents '1' with '4967'
c Var 'variant_fields_00004_00001_00008' direct represents '2' with '4968'
c Var 'variant_fields_00004_00001_00008' direct represents '3' with '4969'
c Var 'variant_fields_00004_00001_00008' direct represents '4' with '4970'
c Var 'variant_fields_00004_00001_00008' direct represents '5' with '4971'
c Var 'variant_fields_00004_00001_00008' direct represents '6' with '4972'
c Var 'variant_fields_00004_00001_00008' direct represents '7' with '4973'
c Var 'variant_fields_00004_00001_00008' direct represents '8' with '4974'
c Var 'variant_fields_00004_00001_00008' direct represents '9' with '4975'
4967 4968 4969 4970 4971 4972 4973 4974 4975 0
-4967 4976 0
-4967 4979 0
-4968 4977 0
-4968 4979 0
-4969 4978 0
-4969 4979 0
-4970 4976 0
-4970 4980 0
-4971 4977 0
-4971 4980 0
-4972 4978 0
-4972 4980 0
-4973 4976 0
-4973 4981 0
-4974 4977 0
-4974 4981 0
-4975 4978 0
-4975 4981 0
-4976 -4977 0
-4976 -4978 0
-4977 -4978 0
-4979 -4980 0
-4979 -4981 0
-4980 -4981 0
c Encoding variable: variant_fields_00004_00001_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00001_00009' direct represents '1' with '4982'
c Var 'variant_fields_00004_00001_00009' direct represents '2' with '4983'
c Var 'variant_fields_00004_00001_00009' direct represents '3' with '4984'
c Var 'variant_fields_00004_00001_00009' direct represents '4' with '4985'
c Var 'variant_fields_00004_00001_00009' direct represents '5' with '4986'
c Var 'variant_fields_00004_00001_00009' direct represents '6' with '4987'
c Var 'variant_fields_00004_00001_00009' direct represents '7' with '4988'
c Var 'variant_fields_00004_00001_00009' direct represents '8' with '4989'
c Var 'variant_fields_00004_00001_00009' direct represents '9' with '4990'
4982 4983 4984 4985 4986 4987 4988 4989 4990 0
-4982 4991 0
-4982 4994 0
-4983 4992 0
-4983 4994 0
-4984 4993 0
-4984 4994 0
-4985 4991 0
-4985 4995 0
-4986 4992 0
-4986 4995 0
-4987 4993 0
-4987 4995 0
-4988 4991 0
-4988 4996 0
-4989 4992 0
-4989 4996 0
-4990 4993 0
-4990 4996 0
-4991 -4992 0
-4991 -4993 0
-4992 -4993 0
-4994 -4995 0
-4994 -4996 0
-4995 -4996 0
c Encoding variable: variant_fields_00004_00002_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00002_00001' order represents '1' with '4997'
c Var 'variant_fields_00004_00002_00001' direct represents '1' with '4997'
c Var 'variant_fields_00004_00002_00001' order represents '2' with '4998'
-4997 4998 0
c Var 'variant_fields_00004_00002_00001' direct represents '2' with '4999'
4997 -4998 4999 0
-4999 4998 0
-4999 -4997 0
c Var 'variant_fields_00004_00002_00001' order represents '3' with '5000'
-4998 5000 0
c Var 'variant_fields_00004_00002_00001' direct represents '3' with '5001'
4998 -5000 5001 0
-5001 5000 0
-5001 -4998 0
c Var 'variant_fields_00004_00002_00001' order represents '4' with '5002'
-5000 5002 0
c Var 'variant_fields_00004_00002_00001' direct represents '4' with '5003'
5000 -5002 5003 0
-5003 5002 0
-5003 -5000 0
c Var 'variant_fields_00004_00002_00001' order represents '5' with '5004'
-5002 5004 0
c Var 'variant_fields_00004_00002_00001' direct represents '5' with '5005'
5002 -5004 5005 0
-5005 5004 0
-5005 -5002 0
c Var 'variant_fields_00004_00002_00001' order represents '6' with '5006'
-5004 5006 0
c Var 'variant_fields_00004_00002_00001' direct represents '6' with '5007'
5004 -5006 5007 0
-5007 5006 0
-5007 -5004 0
c Var 'variant_fields_00004_00002_00001' order represents '7' with '5008'
-5006 5008 0
c Var 'variant_fields_00004_00002_00001' direct represents '7' with '5009'
5006 -5008 5009 0
-5009 5008 0
-5009 -5006 0
c Var 'variant_fields_00004_00002_00001' order represents '8' with '5010'
-5008 5010 0
c Var 'variant_fields_00004_00002_00001' direct represents '8' with '5011'
5008 -5010 5011 0
-5011 5010 0
-5011 -5008 0
c Var 'variant_fields_00004_00002_00001' direct represents '9' with '-5010'
4997 4999 5001 5003 5005 5007 5009 5011 -5010 0
c Encoding variable: variant_fields_00004_00002_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00002_00002' direct represents '1' with '5012'
c Var 'variant_fields_00004_00002_00002' direct represents '2' with '5013'
c Var 'variant_fields_00004_00002_00002' direct represents '3' with '5014'
c Var 'variant_fields_00004_00002_00002' direct represents '4' with '5015'
c Var 'variant_fields_00004_00002_00002' direct represents '5' with '5016'
c Var 'variant_fields_00004_00002_00002' direct represents '6' with '5017'
c Var 'variant_fields_00004_00002_00002' direct represents '7' with '5018'
c Var 'variant_fields_00004_00002_00002' direct represents '8' with '5019'
c Var 'variant_fields_00004_00002_00002' direct represents '9' with '5020'
5012 5013 5014 5015 5016 5017 5018 5019 5020 0
-5012 5021 0
-5012 5024 0
-5013 5022 0
-5013 5024 0
-5014 5023 0
-5014 5024 0
-5015 5021 0
-5015 5025 0
-5016 5022 0
-5016 5025 0
-5017 5023 0
-5017 5025 0
-5018 5021 0
-5018 5026 0
-5019 5022 0
-5019 5026 0
-5020 5023 0
-5020 5026 0
-5021 -5022 0
-5021 -5023 0
-5022 -5023 0
-5024 -5025 0
-5024 -5026 0
-5025 -5026 0
c Encoding variable: variant_fields_00004_00002_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00002_00003' direct represents '1' with '5027'
c Var 'variant_fields_00004_00002_00003' direct represents '2' with '5028'
c Var 'variant_fields_00004_00002_00003' direct represents '3' with '5029'
c Var 'variant_fields_00004_00002_00003' direct represents '4' with '5030'
c Var 'variant_fields_00004_00002_00003' direct represents '5' with '5031'
c Var 'variant_fields_00004_00002_00003' direct represents '6' with '5032'
c Var 'variant_fields_00004_00002_00003' direct represents '7' with '5033'
c Var 'variant_fields_00004_00002_00003' direct represents '8' with '5034'
c Var 'variant_fields_00004_00002_00003' direct represents '9' with '5035'
5027 5028 5029 5030 5031 5032 5033 5034 5035 0
-5027 5036 0
-5027 5039 0
-5028 5037 0
-5028 5039 0
-5029 5038 0
-5029 5039 0
-5030 5036 0
-5030 5040 0
-5031 5037 0
-5031 5040 0
-5032 5038 0
-5032 5040 0
-5033 5036 0
-5033 5041 0
-5034 5037 0
-5034 5041 0
-5035 5038 0
-5035 5041 0
-5036 -5037 0
-5036 -5038 0
-5037 -5038 0
-5039 -5040 0
-5039 -5041 0
-5040 -5041 0
c Encoding variable: variant_fields_00004_00002_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00002_00004' direct represents '1' with '5042'
c Var 'variant_fields_00004_00002_00004' direct represents '2' with '5043'
c Var 'variant_fields_00004_00002_00004' direct represents '3' with '5044'
c Var 'variant_fields_00004_00002_00004' direct represents '4' with '5045'
c Var 'variant_fields_00004_00002_00004' direct represents '5' with '5046'
c Var 'variant_fields_00004_00002_00004' direct represents '6' with '5047'
c Var 'variant_fields_00004_00002_00004' direct represents '7' with '5048'
c Var 'variant_fields_00004_00002_00004' direct represents '8' with '5049'
c Var 'variant_fields_00004_00002_00004' direct represents '9' with '5050'
5042 5043 5044 5045 5046 5047 5048 5049 5050 0
-5042 5051 0
-5042 5054 0
-5043 5052 0
-5043 5054 0
-5044 5053 0
-5044 5054 0
-5045 5051 0
-5045 5055 0
-5046 5052 0
-5046 5055 0
-5047 5053 0
-5047 5055 0
-5048 5051 0
-5048 5056 0
-5049 5052 0
-5049 5056 0
-5050 5053 0
-5050 5056 0
-5051 -5052 0
-5051 -5053 0
-5052 -5053 0
-5054 -5055 0
-5054 -5056 0
-5055 -5056 0
c Encoding variable: variant_fields_00004_00002_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00002_00005' direct represents '1' with '5057'
c Var 'variant_fields_00004_00002_00005' direct represents '2' with '5058'
c Var 'variant_fields_00004_00002_00005' direct represents '3' with '5059'
c Var 'variant_fields_00004_00002_00005' direct represents '4' with '5060'
c Var 'variant_fields_00004_00002_00005' direct represents '5' with '5061'
c Var 'variant_fields_00004_00002_00005' direct represents '6' with '5062'
c Var 'variant_fields_00004_00002_00005' direct represents '7' with '5063'
c Var 'variant_fields_00004_00002_00005' direct represents '8' with '5064'
c Var 'variant_fields_00004_00002_00005' direct represents '9' with '5065'
5057 5058 5059 5060 5061 5062 5063 5064 5065 0
-5057 5066 0
-5057 5069 0
-5058 5067 0
-5058 5069 0
-5059 5068 0
-5059 5069 0
-5060 5066 0
-5060 5070 0
-5061 5067 0
-5061 5070 0
-5062 5068 0
-5062 5070 0
-5063 5066 0
-5063 5071 0
-5064 5067 0
-5064 5071 0
-5065 5068 0
-5065 5071 0
-5066 -5067 0
-5066 -5068 0
-5067 -5068 0
-5069 -5070 0
-5069 -5071 0
-5070 -5071 0
c Encoding variable: variant_fields_00004_00002_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00002_00006' direct represents '1' with '5072'
c Var 'variant_fields_00004_00002_00006' direct represents '2' with '5073'
c Var 'variant_fields_00004_00002_00006' direct represents '3' with '5074'
c Var 'variant_fields_00004_00002_00006' direct represents '4' with '5075'
c Var 'variant_fields_00004_00002_00006' direct represents '5' with '5076'
c Var 'variant_fields_00004_00002_00006' direct represents '6' with '5077'
c Var 'variant_fields_00004_00002_00006' direct represents '7' with '5078'
c Var 'variant_fields_00004_00002_00006' direct represents '8' with '5079'
c Var 'variant_fields_00004_00002_00006' direct represents '9' with '5080'
5072 5073 5074 5075 5076 5077 5078 5079 5080 0
-5072 5081 0
-5072 5084 0
-5073 5082 0
-5073 5084 0
-5074 5083 0
-5074 5084 0
-5075 5081 0
-5075 5085 0
-5076 5082 0
-5076 5085 0
-5077 5083 0
-5077 5085 0
-5078 5081 0
-5078 5086 0
-5079 5082 0
-5079 5086 0
-5080 5083 0
-5080 5086 0
-5081 -5082 0
-5081 -5083 0
-5082 -5083 0
-5084 -5085 0
-5084 -5086 0
-5085 -5086 0
c Encoding variable: variant_fields_00004_00002_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00002_00007' direct represents '1' with '5087'
c Var 'variant_fields_00004_00002_00007' direct represents '2' with '5088'
c Var 'variant_fields_00004_00002_00007' direct represents '3' with '5089'
c Var 'variant_fields_00004_00002_00007' direct represents '4' with '5090'
c Var 'variant_fields_00004_00002_00007' direct represents '5' with '5091'
c Var 'variant_fields_00004_00002_00007' direct represents '6' with '5092'
c Var 'variant_fields_00004_00002_00007' direct represents '7' with '5093'
c Var 'variant_fields_00004_00002_00007' direct represents '8' with '5094'
c Var 'variant_fields_00004_00002_00007' direct represents '9' with '5095'
5087 5088 5089 5090 5091 5092 5093 5094 5095 0
-5087 5096 0
-5087 5099 0
-5088 5097 0
-5088 5099 0
-5089 5098 0
-5089 5099 0
-5090 5096 0
-5090 5100 0
-5091 5097 0
-5091 5100 0
-5092 5098 0
-5092 5100 0
-5093 5096 0
-5093 5101 0
-5094 5097 0
-5094 5101 0
-5095 5098 0
-5095 5101 0
-5096 -5097 0
-5096 -5098 0
-5097 -5098 0
-5099 -5100 0
-5099 -5101 0
-5100 -5101 0
c Encoding variable: variant_fields_00004_00002_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00002_00008' direct represents '1' with '5102'
c Var 'variant_fields_00004_00002_00008' direct represents '2' with '5103'
c Var 'variant_fields_00004_00002_00008' direct represents '3' with '5104'
c Var 'variant_fields_00004_00002_00008' direct represents '4' with '5105'
c Var 'variant_fields_00004_00002_00008' direct represents '5' with '5106'
c Var 'variant_fields_00004_00002_00008' direct represents '6' with '5107'
c Var 'variant_fields_00004_00002_00008' direct represents '7' with '5108'
c Var 'variant_fields_00004_00002_00008' direct represents '8' with '5109'
c Var 'variant_fields_00004_00002_00008' direct represents '9' with '5110'
5102 5103 5104 5105 5106 5107 5108 5109 5110 0
-5102 5111 0
-5102 5114 0
-5103 5112 0
-5103 5114 0
-5104 5113 0
-5104 5114 0
-5105 5111 0
-5105 5115 0
-5106 5112 0
-5106 5115 0
-5107 5113 0
-5107 5115 0
-5108 5111 0
-5108 5116 0
-5109 5112 0
-5109 5116 0
-5110 5113 0
-5110 5116 0
-5111 -5112 0
-5111 -5113 0
-5112 -5113 0
-5114 -5115 0
-5114 -5116 0
-5115 -5116 0
c Encoding variable: variant_fields_00004_00002_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00002_00009' direct represents '1' with '5117'
c Var 'variant_fields_00004_00002_00009' direct represents '2' with '5118'
c Var 'variant_fields_00004_00002_00009' direct represents '3' with '5119'
c Var 'variant_fields_00004_00002_00009' direct represents '4' with '5120'
c Var 'variant_fields_00004_00002_00009' direct represents '5' with '5121'
c Var 'variant_fields_00004_00002_00009' direct represents '6' with '5122'
c Var 'variant_fields_00004_00002_00009' direct represents '7' with '5123'
c Var 'variant_fields_00004_00002_00009' direct represents '8' with '5124'
c Var 'variant_fields_00004_00002_00009' direct represents '9' with '5125'
5117 5118 5119 5120 5121 5122 5123 5124 5125 0
-5117 5126 0
-5117 5129 0
-5118 5127 0
-5118 5129 0
-5119 5128 0
-5119 5129 0
-5120 5126 0
-5120 5130 0
-5121 5127 0
-5121 5130 0
-5122 5128 0
-5122 5130 0
-5123 5126 0
-5123 5131 0
-5124 5127 0
-5124 5131 0
-5125 5128 0
-5125 5131 0
-5126 -5127 0
-5126 -5128 0
-5127 -5128 0
-5129 -5130 0
-5129 -5131 0
-5130 -5131 0
c Encoding variable: variant_fields_00004_00003_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00003_00001' direct represents '1' with '5132'
c Var 'variant_fields_00004_00003_00001' direct represents '2' with '5133'
c Var 'variant_fields_00004_00003_00001' direct represents '3' with '5134'
c Var 'variant_fields_00004_00003_00001' direct represents '4' with '5135'
c Var 'variant_fields_00004_00003_00001' direct represents '5' with '5136'
c Var 'variant_fields_00004_00003_00001' direct represents '6' with '5137'
c Var 'variant_fields_00004_00003_00001' direct represents '7' with '5138'
c Var 'variant_fields_00004_00003_00001' direct represents '8' with '5139'
c Var 'variant_fields_00004_00003_00001' direct represents '9' with '5140'
5132 5133 5134 5135 5136 5137 5138 5139 5140 0
-5132 5141 0
-5132 5144 0
-5133 5142 0
-5133 5144 0
-5134 5143 0
-5134 5144 0
-5135 5141 0
-5135 5145 0
-5136 5142 0
-5136 5145 0
-5137 5143 0
-5137 5145 0
-5138 5141 0
-5138 5146 0
-5139 5142 0
-5139 5146 0
-5140 5143 0
-5140 5146 0
-5141 -5142 0
-5141 -5143 0
-5142 -5143 0
-5144 -5145 0
-5144 -5146 0
-5145 -5146 0
c Encoding variable: variant_fields_00004_00003_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00003_00002' direct represents '1' with '5147'
c Var 'variant_fields_00004_00003_00002' direct represents '2' with '5148'
c Var 'variant_fields_00004_00003_00002' direct represents '3' with '5149'
c Var 'variant_fields_00004_00003_00002' direct represents '4' with '5150'
c Var 'variant_fields_00004_00003_00002' direct represents '5' with '5151'
c Var 'variant_fields_00004_00003_00002' direct represents '6' with '5152'
c Var 'variant_fields_00004_00003_00002' direct represents '7' with '5153'
c Var 'variant_fields_00004_00003_00002' direct represents '8' with '5154'
c Var 'variant_fields_00004_00003_00002' direct represents '9' with '5155'
5147 5148 5149 5150 5151 5152 5153 5154 5155 0
-5147 5156 0
-5147 5159 0
-5148 5157 0
-5148 5159 0
-5149 5158 0
-5149 5159 0
-5150 5156 0
-5150 5160 0
-5151 5157 0
-5151 5160 0
-5152 5158 0
-5152 5160 0
-5153 5156 0
-5153 5161 0
-5154 5157 0
-5154 5161 0
-5155 5158 0
-5155 5161 0
-5156 -5157 0
-5156 -5158 0
-5157 -5158 0
-5159 -5160 0
-5159 -5161 0
-5160 -5161 0
c Encoding variable: variant_fields_00004_00003_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00003_00003' direct represents '1' with '5162'
c Var 'variant_fields_00004_00003_00003' direct represents '2' with '5163'
c Var 'variant_fields_00004_00003_00003' direct represents '3' with '5164'
c Var 'variant_fields_00004_00003_00003' direct represents '4' with '5165'
c Var 'variant_fields_00004_00003_00003' direct represents '5' with '5166'
c Var 'variant_fields_00004_00003_00003' direct represents '6' with '5167'
c Var 'variant_fields_00004_00003_00003' direct represents '7' with '5168'
c Var 'variant_fields_00004_00003_00003' direct represents '8' with '5169'
c Var 'variant_fields_00004_00003_00003' direct represents '9' with '5170'
5162 5163 5164 5165 5166 5167 5168 5169 5170 0
-5162 5171 0
-5162 5174 0
-5163 5172 0
-5163 5174 0
-5164 5173 0
-5164 5174 0
-5165 5171 0
-5165 5175 0
-5166 5172 0
-5166 5175 0
-5167 5173 0
-5167 5175 0
-5168 5171 0
-5168 5176 0
-5169 5172 0
-5169 5176 0
-5170 5173 0
-5170 5176 0
-5171 -5172 0
-5171 -5173 0
-5172 -5173 0
-5174 -5175 0
-5174 -5176 0
-5175 -5176 0
c Encoding variable: variant_fields_00004_00003_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00003_00004' direct represents '1' with '5177'
c Var 'variant_fields_00004_00003_00004' direct represents '2' with '5178'
c Var 'variant_fields_00004_00003_00004' direct represents '3' with '5179'
c Var 'variant_fields_00004_00003_00004' direct represents '4' with '5180'
c Var 'variant_fields_00004_00003_00004' direct represents '5' with '5181'
c Var 'variant_fields_00004_00003_00004' direct represents '6' with '5182'
c Var 'variant_fields_00004_00003_00004' direct represents '7' with '5183'
c Var 'variant_fields_00004_00003_00004' direct represents '8' with '5184'
c Var 'variant_fields_00004_00003_00004' direct represents '9' with '5185'
5177 5178 5179 5180 5181 5182 5183 5184 5185 0
-5177 5186 0
-5177 5189 0
-5178 5187 0
-5178 5189 0
-5179 5188 0
-5179 5189 0
-5180 5186 0
-5180 5190 0
-5181 5187 0
-5181 5190 0
-5182 5188 0
-5182 5190 0
-5183 5186 0
-5183 5191 0
-5184 5187 0
-5184 5191 0
-5185 5188 0
-5185 5191 0
-5186 -5187 0
-5186 -5188 0
-5187 -5188 0
-5189 -5190 0
-5189 -5191 0
-5190 -5191 0
c Encoding variable: variant_fields_00004_00003_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00003_00005' direct represents '1' with '5192'
c Var 'variant_fields_00004_00003_00005' direct represents '2' with '5193'
c Var 'variant_fields_00004_00003_00005' direct represents '3' with '5194'
c Var 'variant_fields_00004_00003_00005' direct represents '4' with '5195'
c Var 'variant_fields_00004_00003_00005' direct represents '5' with '5196'
c Var 'variant_fields_00004_00003_00005' direct represents '6' with '5197'
c Var 'variant_fields_00004_00003_00005' direct represents '7' with '5198'
c Var 'variant_fields_00004_00003_00005' direct represents '8' with '5199'
c Var 'variant_fields_00004_00003_00005' direct represents '9' with '5200'
5192 5193 5194 5195 5196 5197 5198 5199 5200 0
-5192 5201 0
-5192 5204 0
-5193 5202 0
-5193 5204 0
-5194 5203 0
-5194 5204 0
-5195 5201 0
-5195 5205 0
-5196 5202 0
-5196 5205 0
-5197 5203 0
-5197 5205 0
-5198 5201 0
-5198 5206 0
-5199 5202 0
-5199 5206 0
-5200 5203 0
-5200 5206 0
-5201 -5202 0
-5201 -5203 0
-5202 -5203 0
-5204 -5205 0
-5204 -5206 0
-5205 -5206 0
c Encoding variable: variant_fields_00004_00003_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00003_00006' direct represents '1' with '5207'
c Var 'variant_fields_00004_00003_00006' direct represents '2' with '5208'
c Var 'variant_fields_00004_00003_00006' direct represents '3' with '5209'
c Var 'variant_fields_00004_00003_00006' direct represents '4' with '5210'
c Var 'variant_fields_00004_00003_00006' direct represents '5' with '5211'
c Var 'variant_fields_00004_00003_00006' direct represents '6' with '5212'
c Var 'variant_fields_00004_00003_00006' direct represents '7' with '5213'
c Var 'variant_fields_00004_00003_00006' direct represents '8' with '5214'
c Var 'variant_fields_00004_00003_00006' direct represents '9' with '5215'
5207 5208 5209 5210 5211 5212 5213 5214 5215 0
-5207 5216 0
-5207 5219 0
-5208 5217 0
-5208 5219 0
-5209 5218 0
-5209 5219 0
-5210 5216 0
-5210 5220 0
-5211 5217 0
-5211 5220 0
-5212 5218 0
-5212 5220 0
-5213 5216 0
-5213 5221 0
-5214 5217 0
-5214 5221 0
-5215 5218 0
-5215 5221 0
-5216 -5217 0
-5216 -5218 0
-5217 -5218 0
-5219 -5220 0
-5219 -5221 0
-5220 -5221 0
c Encoding variable: variant_fields_00004_00003_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00003_00007' direct represents '1' with '5222'
c Var 'variant_fields_00004_00003_00007' direct represents '2' with '5223'
c Var 'variant_fields_00004_00003_00007' direct represents '3' with '5224'
c Var 'variant_fields_00004_00003_00007' direct represents '4' with '5225'
c Var 'variant_fields_00004_00003_00007' direct represents '5' with '5226'
c Var 'variant_fields_00004_00003_00007' direct represents '6' with '5227'
c Var 'variant_fields_00004_00003_00007' direct represents '7' with '5228'
c Var 'variant_fields_00004_00003_00007' direct represents '8' with '5229'
c Var 'variant_fields_00004_00003_00007' direct represents '9' with '5230'
5222 5223 5224 5225 5226 5227 5228 5229 5230 0
-5222 5231 0
-5222 5234 0
-5223 5232 0
-5223 5234 0
-5224 5233 0
-5224 5234 0
-5225 5231 0
-5225 5235 0
-5226 5232 0
-5226 5235 0
-5227 5233 0
-5227 5235 0
-5228 5231 0
-5228 5236 0
-5229 5232 0
-5229 5236 0
-5230 5233 0
-5230 5236 0
-5231 -5232 0
-5231 -5233 0
-5232 -5233 0
-5234 -5235 0
-5234 -5236 0
-5235 -5236 0
c Encoding variable: variant_fields_00004_00003_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00003_00008' direct represents '1' with '5237'
c Var 'variant_fields_00004_00003_00008' direct represents '2' with '5238'
c Var 'variant_fields_00004_00003_00008' direct represents '3' with '5239'
c Var 'variant_fields_00004_00003_00008' direct represents '4' with '5240'
c Var 'variant_fields_00004_00003_00008' direct represents '5' with '5241'
c Var 'variant_fields_00004_00003_00008' direct represents '6' with '5242'
c Var 'variant_fields_00004_00003_00008' direct represents '7' with '5243'
c Var 'variant_fields_00004_00003_00008' direct represents '8' with '5244'
c Var 'variant_fields_00004_00003_00008' direct represents '9' with '5245'
5237 5238 5239 5240 5241 5242 5243 5244 5245 0
-5237 5246 0
-5237 5249 0
-5238 5247 0
-5238 5249 0
-5239 5248 0
-5239 5249 0
-5240 5246 0
-5240 5250 0
-5241 5247 0
-5241 5250 0
-5242 5248 0
-5242 5250 0
-5243 5246 0
-5243 5251 0
-5244 5247 0
-5244 5251 0
-5245 5248 0
-5245 5251 0
-5246 -5247 0
-5246 -5248 0
-5247 -5248 0
-5249 -5250 0
-5249 -5251 0
-5250 -5251 0
c Encoding variable: variant_fields_00004_00003_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00003_00009' direct represents '1' with '5252'
c Var 'variant_fields_00004_00003_00009' direct represents '2' with '5253'
c Var 'variant_fields_00004_00003_00009' direct represents '3' with '5254'
c Var 'variant_fields_00004_00003_00009' direct represents '4' with '5255'
c Var 'variant_fields_00004_00003_00009' direct represents '5' with '5256'
c Var 'variant_fields_00004_00003_00009' direct represents '6' with '5257'
c Var 'variant_fields_00004_00003_00009' direct represents '7' with '5258'
c Var 'variant_fields_00004_00003_00009' direct represents '8' with '5259'
c Var 'variant_fields_00004_00003_00009' direct represents '9' with '5260'
5252 5253 5254 5255 5256 5257 5258 5259 5260 0
-5252 5261 0
-5252 5264 0
-5253 5262 0
-5253 5264 0
-5254 5263 0
-5254 5264 0
-5255 5261 0
-5255 5265 0
-5256 5262 0
-5256 5265 0
-5257 5263 0
-5257 5265 0
-5258 5261 0
-5258 5266 0
-5259 5262 0
-5259 5266 0
-5260 5263 0
-5260 5266 0
-5261 -5262 0
-5261 -5263 0
-5262 -5263 0
-5264 -5265 0
-5264 -5266 0
-5265 -5266 0
c Encoding variable: variant_fields_00004_00004_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00004_00001' order represents '1' with '5267'
c Var 'variant_fields_00004_00004_00001' direct represents '1' with '5267'
c Var 'variant_fields_00004_00004_00001' order represents '2' with '5268'
-5267 5268 0
c Var 'variant_fields_00004_00004_00001' direct represents '2' with '5269'
5267 -5268 5269 0
-5269 5268 0
-5269 -5267 0
c Var 'variant_fields_00004_00004_00001' order represents '3' with '5270'
-5268 5270 0
c Var 'variant_fields_00004_00004_00001' direct represents '3' with '5271'
5268 -5270 5271 0
-5271 5270 0
-5271 -5268 0
c Var 'variant_fields_00004_00004_00001' order represents '4' with '5272'
-5270 5272 0
c Var 'variant_fields_00004_00004_00001' direct represents '4' with '5273'
5270 -5272 5273 0
-5273 5272 0
-5273 -5270 0
c Var 'variant_fields_00004_00004_00001' order represents '5' with '5274'
-5272 5274 0
c Var 'variant_fields_00004_00004_00001' direct represents '5' with '5275'
5272 -5274 5275 0
-5275 5274 0
-5275 -5272 0
c Var 'variant_fields_00004_00004_00001' order represents '6' with '5276'
-5274 5276 0
c Var 'variant_fields_00004_00004_00001' direct represents '6' with '5277'
5274 -5276 5277 0
-5277 5276 0
-5277 -5274 0
c Var 'variant_fields_00004_00004_00001' order represents '7' with '5278'
-5276 5278 0
c Var 'variant_fields_00004_00004_00001' direct represents '7' with '5279'
5276 -5278 5279 0
-5279 5278 0
-5279 -5276 0
c Var 'variant_fields_00004_00004_00001' order represents '8' with '5280'
-5278 5280 0
c Var 'variant_fields_00004_00004_00001' direct represents '8' with '5281'
5278 -5280 5281 0
-5281 5280 0
-5281 -5278 0
c Var 'variant_fields_00004_00004_00001' direct represents '9' with '-5280'
5267 5269 5271 5273 5275 5277 5279 5281 -5280 0
c Encoding variable: variant_fields_00004_00004_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00004_00002' direct represents '1' with '5282'
c Var 'variant_fields_00004_00004_00002' direct represents '2' with '5283'
c Var 'variant_fields_00004_00004_00002' direct represents '3' with '5284'
c Var 'variant_fields_00004_00004_00002' direct represents '4' with '5285'
c Var 'variant_fields_00004_00004_00002' direct represents '5' with '5286'
c Var 'variant_fields_00004_00004_00002' direct represents '6' with '5287'
c Var 'variant_fields_00004_00004_00002' direct represents '7' with '5288'
c Var 'variant_fields_00004_00004_00002' direct represents '8' with '5289'
c Var 'variant_fields_00004_00004_00002' direct represents '9' with '5290'
5282 5283 5284 5285 5286 5287 5288 5289 5290 0
-5282 5291 0
-5282 5294 0
-5283 5292 0
-5283 5294 0
-5284 5293 0
-5284 5294 0
-5285 5291 0
-5285 5295 0
-5286 5292 0
-5286 5295 0
-5287 5293 0
-5287 5295 0
-5288 5291 0
-5288 5296 0
-5289 5292 0
-5289 5296 0
-5290 5293 0
-5290 5296 0
-5291 -5292 0
-5291 -5293 0
-5292 -5293 0
-5294 -5295 0
-5294 -5296 0
-5295 -5296 0
c Encoding variable: variant_fields_00004_00004_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00004_00003' direct represents '1' with '5297'
c Var 'variant_fields_00004_00004_00003' direct represents '2' with '5298'
c Var 'variant_fields_00004_00004_00003' direct represents '3' with '5299'
c Var 'variant_fields_00004_00004_00003' direct represents '4' with '5300'
c Var 'variant_fields_00004_00004_00003' direct represents '5' with '5301'
c Var 'variant_fields_00004_00004_00003' direct represents '6' with '5302'
c Var 'variant_fields_00004_00004_00003' direct represents '7' with '5303'
c Var 'variant_fields_00004_00004_00003' direct represents '8' with '5304'
c Var 'variant_fields_00004_00004_00003' direct represents '9' with '5305'
5297 5298 5299 5300 5301 5302 5303 5304 5305 0
-5297 5306 0
-5297 5309 0
-5298 5307 0
-5298 5309 0
-5299 5308 0
-5299 5309 0
-5300 5306 0
-5300 5310 0
-5301 5307 0
-5301 5310 0
-5302 5308 0
-5302 5310 0
-5303 5306 0
-5303 5311 0
-5304 5307 0
-5304 5311 0
-5305 5308 0
-5305 5311 0
-5306 -5307 0
-5306 -5308 0
-5307 -5308 0
-5309 -5310 0
-5309 -5311 0
-5310 -5311 0
c Encoding variable: variant_fields_00004_00004_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00004_00004' direct represents '1' with '5312'
c Var 'variant_fields_00004_00004_00004' direct represents '2' with '5313'
c Var 'variant_fields_00004_00004_00004' direct represents '3' with '5314'
c Var 'variant_fields_00004_00004_00004' direct represents '4' with '5315'
c Var 'variant_fields_00004_00004_00004' direct represents '5' with '5316'
c Var 'variant_fields_00004_00004_00004' direct represents '6' with '5317'
c Var 'variant_fields_00004_00004_00004' direct represents '7' with '5318'
c Var 'variant_fields_00004_00004_00004' direct represents '8' with '5319'
c Var 'variant_fields_00004_00004_00004' direct represents '9' with '5320'
5312 5313 5314 5315 5316 5317 5318 5319 5320 0
-5312 5321 0
-5312 5324 0
-5313 5322 0
-5313 5324 0
-5314 5323 0
-5314 5324 0
-5315 5321 0
-5315 5325 0
-5316 5322 0
-5316 5325 0
-5317 5323 0
-5317 5325 0
-5318 5321 0
-5318 5326 0
-5319 5322 0
-5319 5326 0
-5320 5323 0
-5320 5326 0
-5321 -5322 0
-5321 -5323 0
-5322 -5323 0
-5324 -5325 0
-5324 -5326 0
-5325 -5326 0
c Encoding variable: variant_fields_00004_00004_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00004_00005' direct represents '1' with '5327'
c Var 'variant_fields_00004_00004_00005' direct represents '2' with '5328'
c Var 'variant_fields_00004_00004_00005' direct represents '3' with '5329'
c Var 'variant_fields_00004_00004_00005' direct represents '4' with '5330'
c Var 'variant_fields_00004_00004_00005' direct represents '5' with '5331'
c Var 'variant_fields_00004_00004_00005' direct represents '6' with '5332'
c Var 'variant_fields_00004_00004_00005' direct represents '7' with '5333'
c Var 'variant_fields_00004_00004_00005' direct represents '8' with '5334'
c Var 'variant_fields_00004_00004_00005' direct represents '9' with '5335'
5327 5328 5329 5330 5331 5332 5333 5334 5335 0
-5327 5336 0
-5327 5339 0
-5328 5337 0
-5328 5339 0
-5329 5338 0
-5329 5339 0
-5330 5336 0
-5330 5340 0
-5331 5337 0
-5331 5340 0
-5332 5338 0
-5332 5340 0
-5333 5336 0
-5333 5341 0
-5334 5337 0
-5334 5341 0
-5335 5338 0
-5335 5341 0
-5336 -5337 0
-5336 -5338 0
-5337 -5338 0
-5339 -5340 0
-5339 -5341 0
-5340 -5341 0
c Encoding variable: variant_fields_00004_00004_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00004_00006' direct represents '1' with '5342'
c Var 'variant_fields_00004_00004_00006' direct represents '2' with '5343'
c Var 'variant_fields_00004_00004_00006' direct represents '3' with '5344'
c Var 'variant_fields_00004_00004_00006' direct represents '4' with '5345'
c Var 'variant_fields_00004_00004_00006' direct represents '5' with '5346'
c Var 'variant_fields_00004_00004_00006' direct represents '6' with '5347'
c Var 'variant_fields_00004_00004_00006' direct represents '7' with '5348'
c Var 'variant_fields_00004_00004_00006' direct represents '8' with '5349'
c Var 'variant_fields_00004_00004_00006' direct represents '9' with '5350'
5342 5343 5344 5345 5346 5347 5348 5349 5350 0
-5342 5351 0
-5342 5354 0
-5343 5352 0
-5343 5354 0
-5344 5353 0
-5344 5354 0
-5345 5351 0
-5345 5355 0
-5346 5352 0
-5346 5355 0
-5347 5353 0
-5347 5355 0
-5348 5351 0
-5348 5356 0
-5349 5352 0
-5349 5356 0
-5350 5353 0
-5350 5356 0
-5351 -5352 0
-5351 -5353 0
-5352 -5353 0
-5354 -5355 0
-5354 -5356 0
-5355 -5356 0
c Encoding variable: variant_fields_00004_00004_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00004_00007' direct represents '1' with '5357'
c Var 'variant_fields_00004_00004_00007' direct represents '2' with '5358'
c Var 'variant_fields_00004_00004_00007' direct represents '3' with '5359'
c Var 'variant_fields_00004_00004_00007' direct represents '4' with '5360'
c Var 'variant_fields_00004_00004_00007' direct represents '5' with '5361'
c Var 'variant_fields_00004_00004_00007' direct represents '6' with '5362'
c Var 'variant_fields_00004_00004_00007' direct represents '7' with '5363'
c Var 'variant_fields_00004_00004_00007' direct represents '8' with '5364'
c Var 'variant_fields_00004_00004_00007' direct represents '9' with '5365'
5357 5358 5359 5360 5361 5362 5363 5364 5365 0
-5357 5366 0
-5357 5369 0
-5358 5367 0
-5358 5369 0
-5359 5368 0
-5359 5369 0
-5360 5366 0
-5360 5370 0
-5361 5367 0
-5361 5370 0
-5362 5368 0
-5362 5370 0
-5363 5366 0
-5363 5371 0
-5364 5367 0
-5364 5371 0
-5365 5368 0
-5365 5371 0
-5366 -5367 0
-5366 -5368 0
-5367 -5368 0
-5369 -5370 0
-5369 -5371 0
-5370 -5371 0
c Encoding variable: variant_fields_00004_00004_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00004_00008' direct represents '1' with '5372'
c Var 'variant_fields_00004_00004_00008' direct represents '2' with '5373'
c Var 'variant_fields_00004_00004_00008' direct represents '3' with '5374'
c Var 'variant_fields_00004_00004_00008' direct represents '4' with '5375'
c Var 'variant_fields_00004_00004_00008' direct represents '5' with '5376'
c Var 'variant_fields_00004_00004_00008' direct represents '6' with '5377'
c Var 'variant_fields_00004_00004_00008' direct represents '7' with '5378'
c Var 'variant_fields_00004_00004_00008' direct represents '8' with '5379'
c Var 'variant_fields_00004_00004_00008' direct represents '9' with '5380'
5372 5373 5374 5375 5376 5377 5378 5379 5380 0
-5372 5381 0
-5372 5384 0
-5373 5382 0
-5373 5384 0
-5374 5383 0
-5374 5384 0
-5375 5381 0
-5375 5385 0
-5376 5382 0
-5376 5385 0
-5377 5383 0
-5377 5385 0
-5378 5381 0
-5378 5386 0
-5379 5382 0
-5379 5386 0
-5380 5383 0
-5380 5386 0
-5381 -5382 0
-5381 -5383 0
-5382 -5383 0
-5384 -5385 0
-5384 -5386 0
-5385 -5386 0
c Encoding variable: variant_fields_00004_00004_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00004_00009' direct represents '1' with '5387'
c Var 'variant_fields_00004_00004_00009' direct represents '2' with '5388'
c Var 'variant_fields_00004_00004_00009' direct represents '3' with '5389'
c Var 'variant_fields_00004_00004_00009' direct represents '4' with '5390'
c Var 'variant_fields_00004_00004_00009' direct represents '5' with '5391'
c Var 'variant_fields_00004_00004_00009' direct represents '6' with '5392'
c Var 'variant_fields_00004_00004_00009' direct represents '7' with '5393'
c Var 'variant_fields_00004_00004_00009' direct represents '8' with '5394'
c Var 'variant_fields_00004_00004_00009' direct represents '9' with '5395'
5387 5388 5389 5390 5391 5392 5393 5394 5395 0
-5387 5396 0
-5387 5399 0
-5388 5397 0
-5388 5399 0
-5389 5398 0
-5389 5399 0
-5390 5396 0
-5390 5400 0
-5391 5397 0
-5391 5400 0
-5392 5398 0
-5392 5400 0
-5393 5396 0
-5393 5401 0
-5394 5397 0
-5394 5401 0
-5395 5398 0
-5395 5401 0
-5396 -5397 0
-5396 -5398 0
-5397 -5398 0
-5399 -5400 0
-5399 -5401 0
-5400 -5401 0
c Encoding variable: variant_fields_00004_00005_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00005_00001' direct represents '1' with '5402'
c Var 'variant_fields_00004_00005_00001' direct represents '2' with '5403'
c Var 'variant_fields_00004_00005_00001' direct represents '3' with '5404'
c Var 'variant_fields_00004_00005_00001' direct represents '4' with '5405'
c Var 'variant_fields_00004_00005_00001' direct represents '5' with '5406'
c Var 'variant_fields_00004_00005_00001' direct represents '6' with '5407'
c Var 'variant_fields_00004_00005_00001' direct represents '7' with '5408'
c Var 'variant_fields_00004_00005_00001' direct represents '8' with '5409'
c Var 'variant_fields_00004_00005_00001' direct represents '9' with '5410'
5402 5403 5404 5405 5406 5407 5408 5409 5410 0
-5402 5411 0
-5402 5414 0
-5403 5412 0
-5403 5414 0
-5404 5413 0
-5404 5414 0
-5405 5411 0
-5405 5415 0
-5406 5412 0
-5406 5415 0
-5407 5413 0
-5407 5415 0
-5408 5411 0
-5408 5416 0
-5409 5412 0
-5409 5416 0
-5410 5413 0
-5410 5416 0
-5411 -5412 0
-5411 -5413 0
-5412 -5413 0
-5414 -5415 0
-5414 -5416 0
-5415 -5416 0
c Encoding variable: variant_fields_00004_00005_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00005_00002' direct represents '1' with '5417'
c Var 'variant_fields_00004_00005_00002' direct represents '2' with '5418'
c Var 'variant_fields_00004_00005_00002' direct represents '3' with '5419'
c Var 'variant_fields_00004_00005_00002' direct represents '4' with '5420'
c Var 'variant_fields_00004_00005_00002' direct represents '5' with '5421'
c Var 'variant_fields_00004_00005_00002' direct represents '6' with '5422'
c Var 'variant_fields_00004_00005_00002' direct represents '7' with '5423'
c Var 'variant_fields_00004_00005_00002' direct represents '8' with '5424'
c Var 'variant_fields_00004_00005_00002' direct represents '9' with '5425'
5417 5418 5419 5420 5421 5422 5423 5424 5425 0
-5417 5426 0
-5417 5429 0
-5418 5427 0
-5418 5429 0
-5419 5428 0
-5419 5429 0
-5420 5426 0
-5420 5430 0
-5421 5427 0
-5421 5430 0
-5422 5428 0
-5422 5430 0
-5423 5426 0
-5423 5431 0
-5424 5427 0
-5424 5431 0
-5425 5428 0
-5425 5431 0
-5426 -5427 0
-5426 -5428 0
-5427 -5428 0
-5429 -5430 0
-5429 -5431 0
-5430 -5431 0
c Encoding variable: variant_fields_00004_00005_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00005_00003' direct represents '1' with '5432'
c Var 'variant_fields_00004_00005_00003' direct represents '2' with '5433'
c Var 'variant_fields_00004_00005_00003' direct represents '3' with '5434'
c Var 'variant_fields_00004_00005_00003' direct represents '4' with '5435'
c Var 'variant_fields_00004_00005_00003' direct represents '5' with '5436'
c Var 'variant_fields_00004_00005_00003' direct represents '6' with '5437'
c Var 'variant_fields_00004_00005_00003' direct represents '7' with '5438'
c Var 'variant_fields_00004_00005_00003' direct represents '8' with '5439'
c Var 'variant_fields_00004_00005_00003' direct represents '9' with '5440'
5432 5433 5434 5435 5436 5437 5438 5439 5440 0
-5432 5441 0
-5432 5444 0
-5433 5442 0
-5433 5444 0
-5434 5443 0
-5434 5444 0
-5435 5441 0
-5435 5445 0
-5436 5442 0
-5436 5445 0
-5437 5443 0
-5437 5445 0
-5438 5441 0
-5438 5446 0
-5439 5442 0
-5439 5446 0
-5440 5443 0
-5440 5446 0
-5441 -5442 0
-5441 -5443 0
-5442 -5443 0
-5444 -5445 0
-5444 -5446 0
-5445 -5446 0
c Encoding variable: variant_fields_00004_00005_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00005_00004' direct represents '1' with '5447'
c Var 'variant_fields_00004_00005_00004' direct represents '2' with '5448'
c Var 'variant_fields_00004_00005_00004' direct represents '3' with '5449'
c Var 'variant_fields_00004_00005_00004' direct represents '4' with '5450'
c Var 'variant_fields_00004_00005_00004' direct represents '5' with '5451'
c Var 'variant_fields_00004_00005_00004' direct represents '6' with '5452'
c Var 'variant_fields_00004_00005_00004' direct represents '7' with '5453'
c Var 'variant_fields_00004_00005_00004' direct represents '8' with '5454'
c Var 'variant_fields_00004_00005_00004' direct represents '9' with '5455'
5447 5448 5449 5450 5451 5452 5453 5454 5455 0
-5447 5456 0
-5447 5459 0
-5448 5457 0
-5448 5459 0
-5449 5458 0
-5449 5459 0
-5450 5456 0
-5450 5460 0
-5451 5457 0
-5451 5460 0
-5452 5458 0
-5452 5460 0
-5453 5456 0
-5453 5461 0
-5454 5457 0
-5454 5461 0
-5455 5458 0
-5455 5461 0
-5456 -5457 0
-5456 -5458 0
-5457 -5458 0
-5459 -5460 0
-5459 -5461 0
-5460 -5461 0
c Encoding variable: variant_fields_00004_00005_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00005_00005' direct represents '1' with '5462'
c Var 'variant_fields_00004_00005_00005' direct represents '2' with '5463'
c Var 'variant_fields_00004_00005_00005' direct represents '3' with '5464'
c Var 'variant_fields_00004_00005_00005' direct represents '4' with '5465'
c Var 'variant_fields_00004_00005_00005' direct represents '5' with '5466'
c Var 'variant_fields_00004_00005_00005' direct represents '6' with '5467'
c Var 'variant_fields_00004_00005_00005' direct represents '7' with '5468'
c Var 'variant_fields_00004_00005_00005' direct represents '8' with '5469'
c Var 'variant_fields_00004_00005_00005' direct represents '9' with '5470'
5462 5463 5464 5465 5466 5467 5468 5469 5470 0
-5462 5471 0
-5462 5474 0
-5463 5472 0
-5463 5474 0
-5464 5473 0
-5464 5474 0
-5465 5471 0
-5465 5475 0
-5466 5472 0
-5466 5475 0
-5467 5473 0
-5467 5475 0
-5468 5471 0
-5468 5476 0
-5469 5472 0
-5469 5476 0
-5470 5473 0
-5470 5476 0
-5471 -5472 0
-5471 -5473 0
-5472 -5473 0
-5474 -5475 0
-5474 -5476 0
-5475 -5476 0
c Encoding variable: variant_fields_00004_00005_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00005_00006' direct represents '1' with '5477'
c Var 'variant_fields_00004_00005_00006' direct represents '2' with '5478'
c Var 'variant_fields_00004_00005_00006' direct represents '3' with '5479'
c Var 'variant_fields_00004_00005_00006' direct represents '4' with '5480'
c Var 'variant_fields_00004_00005_00006' direct represents '5' with '5481'
c Var 'variant_fields_00004_00005_00006' direct represents '6' with '5482'
c Var 'variant_fields_00004_00005_00006' direct represents '7' with '5483'
c Var 'variant_fields_00004_00005_00006' direct represents '8' with '5484'
c Var 'variant_fields_00004_00005_00006' direct represents '9' with '5485'
5477 5478 5479 5480 5481 5482 5483 5484 5485 0
-5477 5486 0
-5477 5489 0
-5478 5487 0
-5478 5489 0
-5479 5488 0
-5479 5489 0
-5480 5486 0
-5480 5490 0
-5481 5487 0
-5481 5490 0
-5482 5488 0
-5482 5490 0
-5483 5486 0
-5483 5491 0
-5484 5487 0
-5484 5491 0
-5485 5488 0
-5485 5491 0
-5486 -5487 0
-5486 -5488 0
-5487 -5488 0
-5489 -5490 0
-5489 -5491 0
-5490 -5491 0
c Encoding variable: variant_fields_00004_00005_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00005_00007' direct represents '1' with '5492'
c Var 'variant_fields_00004_00005_00007' direct represents '2' with '5493'
c Var 'variant_fields_00004_00005_00007' direct represents '3' with '5494'
c Var 'variant_fields_00004_00005_00007' direct represents '4' with '5495'
c Var 'variant_fields_00004_00005_00007' direct represents '5' with '5496'
c Var 'variant_fields_00004_00005_00007' direct represents '6' with '5497'
c Var 'variant_fields_00004_00005_00007' direct represents '7' with '5498'
c Var 'variant_fields_00004_00005_00007' direct represents '8' with '5499'
c Var 'variant_fields_00004_00005_00007' direct represents '9' with '5500'
5492 5493 5494 5495 5496 5497 5498 5499 5500 0
-5492 5501 0
-5492 5504 0
-5493 5502 0
-5493 5504 0
-5494 5503 0
-5494 5504 0
-5495 5501 0
-5495 5505 0
-5496 5502 0
-5496 5505 0
-5497 5503 0
-5497 5505 0
-5498 5501 0
-5498 5506 0
-5499 5502 0
-5499 5506 0
-5500 5503 0
-5500 5506 0
-5501 -5502 0
-5501 -5503 0
-5502 -5503 0
-5504 -5505 0
-5504 -5506 0
-5505 -5506 0
c Encoding variable: variant_fields_00004_00005_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00005_00008' direct represents '1' with '5507'
c Var 'variant_fields_00004_00005_00008' direct represents '2' with '5508'
c Var 'variant_fields_00004_00005_00008' direct represents '3' with '5509'
c Var 'variant_fields_00004_00005_00008' direct represents '4' with '5510'
c Var 'variant_fields_00004_00005_00008' direct represents '5' with '5511'
c Var 'variant_fields_00004_00005_00008' direct represents '6' with '5512'
c Var 'variant_fields_00004_00005_00008' direct represents '7' with '5513'
c Var 'variant_fields_00004_00005_00008' direct represents '8' with '5514'
c Var 'variant_fields_00004_00005_00008' direct represents '9' with '5515'
5507 5508 5509 5510 5511 5512 5513 5514 5515 0
-5507 5516 0
-5507 5519 0
-5508 5517 0
-5508 5519 0
-5509 5518 0
-5509 5519 0
-5510 5516 0
-5510 5520 0
-5511 5517 0
-5511 5520 0
-5512 5518 0
-5512 5520 0
-5513 5516 0
-5513 5521 0
-5514 5517 0
-5514 5521 0
-5515 5518 0
-5515 5521 0
-5516 -5517 0
-5516 -5518 0
-5517 -5518 0
-5519 -5520 0
-5519 -5521 0
-5520 -5521 0
c Encoding variable: variant_fields_00004_00005_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00005_00009' direct represents '1' with '5522'
c Var 'variant_fields_00004_00005_00009' direct represents '2' with '5523'
c Var 'variant_fields_00004_00005_00009' direct represents '3' with '5524'
c Var 'variant_fields_00004_00005_00009' direct represents '4' with '5525'
c Var 'variant_fields_00004_00005_00009' direct represents '5' with '5526'
c Var 'variant_fields_00004_00005_00009' direct represents '6' with '5527'
c Var 'variant_fields_00004_00005_00009' direct represents '7' with '5528'
c Var 'variant_fields_00004_00005_00009' direct represents '8' with '5529'
c Var 'variant_fields_00004_00005_00009' direct represents '9' with '5530'
5522 5523 5524 5525 5526 5527 5528 5529 5530 0
-5522 5531 0
-5522 5534 0
-5523 5532 0
-5523 5534 0
-5524 5533 0
-5524 5534 0
-5525 5531 0
-5525 5535 0
-5526 5532 0
-5526 5535 0
-5527 5533 0
-5527 5535 0
-5528 5531 0
-5528 5536 0
-5529 5532 0
-5529 5536 0
-5530 5533 0
-5530 5536 0
-5531 -5532 0
-5531 -5533 0
-5532 -5533 0
-5534 -5535 0
-5534 -5536 0
-5535 -5536 0
c Encoding variable: variant_fields_00004_00006_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00006_00001' direct represents '1' with '5537'
c Var 'variant_fields_00004_00006_00001' direct represents '2' with '5538'
c Var 'variant_fields_00004_00006_00001' direct represents '3' with '5539'
c Var 'variant_fields_00004_00006_00001' direct represents '4' with '5540'
c Var 'variant_fields_00004_00006_00001' direct represents '5' with '5541'
c Var 'variant_fields_00004_00006_00001' direct represents '6' with '5542'
c Var 'variant_fields_00004_00006_00001' direct represents '7' with '5543'
c Var 'variant_fields_00004_00006_00001' direct represents '8' with '5544'
c Var 'variant_fields_00004_00006_00001' direct represents '9' with '5545'
5537 5538 5539 5540 5541 5542 5543 5544 5545 0
-5537 5546 0
-5537 5549 0
-5538 5547 0
-5538 5549 0
-5539 5548 0
-5539 5549 0
-5540 5546 0
-5540 5550 0
-5541 5547 0
-5541 5550 0
-5542 5548 0
-5542 5550 0
-5543 5546 0
-5543 5551 0
-5544 5547 0
-5544 5551 0
-5545 5548 0
-5545 5551 0
-5546 -5547 0
-5546 -5548 0
-5547 -5548 0
-5549 -5550 0
-5549 -5551 0
-5550 -5551 0
c Encoding variable: variant_fields_00004_00006_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00006_00002' direct represents '1' with '5552'
c Var 'variant_fields_00004_00006_00002' direct represents '2' with '5553'
c Var 'variant_fields_00004_00006_00002' direct represents '3' with '5554'
c Var 'variant_fields_00004_00006_00002' direct represents '4' with '5555'
c Var 'variant_fields_00004_00006_00002' direct represents '5' with '5556'
c Var 'variant_fields_00004_00006_00002' direct represents '6' with '5557'
c Var 'variant_fields_00004_00006_00002' direct represents '7' with '5558'
c Var 'variant_fields_00004_00006_00002' direct represents '8' with '5559'
c Var 'variant_fields_00004_00006_00002' direct represents '9' with '5560'
5552 5553 5554 5555 5556 5557 5558 5559 5560 0
-5552 5561 0
-5552 5564 0
-5553 5562 0
-5553 5564 0
-5554 5563 0
-5554 5564 0
-5555 5561 0
-5555 5565 0
-5556 5562 0
-5556 5565 0
-5557 5563 0
-5557 5565 0
-5558 5561 0
-5558 5566 0
-5559 5562 0
-5559 5566 0
-5560 5563 0
-5560 5566 0
-5561 -5562 0
-5561 -5563 0
-5562 -5563 0
-5564 -5565 0
-5564 -5566 0
-5565 -5566 0
c Encoding variable: variant_fields_00004_00006_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00006_00003' direct represents '1' with '5567'
c Var 'variant_fields_00004_00006_00003' direct represents '2' with '5568'
c Var 'variant_fields_00004_00006_00003' direct represents '3' with '5569'
c Var 'variant_fields_00004_00006_00003' direct represents '4' with '5570'
c Var 'variant_fields_00004_00006_00003' direct represents '5' with '5571'
c Var 'variant_fields_00004_00006_00003' direct represents '6' with '5572'
c Var 'variant_fields_00004_00006_00003' direct represents '7' with '5573'
c Var 'variant_fields_00004_00006_00003' direct represents '8' with '5574'
c Var 'variant_fields_00004_00006_00003' direct represents '9' with '5575'
5567 5568 5569 5570 5571 5572 5573 5574 5575 0
-5567 5576 0
-5567 5579 0
-5568 5577 0
-5568 5579 0
-5569 5578 0
-5569 5579 0
-5570 5576 0
-5570 5580 0
-5571 5577 0
-5571 5580 0
-5572 5578 0
-5572 5580 0
-5573 5576 0
-5573 5581 0
-5574 5577 0
-5574 5581 0
-5575 5578 0
-5575 5581 0
-5576 -5577 0
-5576 -5578 0
-5577 -5578 0
-5579 -5580 0
-5579 -5581 0
-5580 -5581 0
c Encoding variable: variant_fields_00004_00006_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00006_00004' direct represents '1' with '5582'
c Var 'variant_fields_00004_00006_00004' direct represents '2' with '5583'
c Var 'variant_fields_00004_00006_00004' direct represents '3' with '5584'
c Var 'variant_fields_00004_00006_00004' direct represents '4' with '5585'
c Var 'variant_fields_00004_00006_00004' direct represents '5' with '5586'
c Var 'variant_fields_00004_00006_00004' direct represents '6' with '5587'
c Var 'variant_fields_00004_00006_00004' direct represents '7' with '5588'
c Var 'variant_fields_00004_00006_00004' direct represents '8' with '5589'
c Var 'variant_fields_00004_00006_00004' direct represents '9' with '5590'
5582 5583 5584 5585 5586 5587 5588 5589 5590 0
-5582 5591 0
-5582 5594 0
-5583 5592 0
-5583 5594 0
-5584 5593 0
-5584 5594 0
-5585 5591 0
-5585 5595 0
-5586 5592 0
-5586 5595 0
-5587 5593 0
-5587 5595 0
-5588 5591 0
-5588 5596 0
-5589 5592 0
-5589 5596 0
-5590 5593 0
-5590 5596 0
-5591 -5592 0
-5591 -5593 0
-5592 -5593 0
-5594 -5595 0
-5594 -5596 0
-5595 -5596 0
c Encoding variable: variant_fields_00004_00006_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00006_00005' direct represents '1' with '5597'
c Var 'variant_fields_00004_00006_00005' direct represents '2' with '5598'
c Var 'variant_fields_00004_00006_00005' direct represents '3' with '5599'
c Var 'variant_fields_00004_00006_00005' direct represents '4' with '5600'
c Var 'variant_fields_00004_00006_00005' direct represents '5' with '5601'
c Var 'variant_fields_00004_00006_00005' direct represents '6' with '5602'
c Var 'variant_fields_00004_00006_00005' direct represents '7' with '5603'
c Var 'variant_fields_00004_00006_00005' direct represents '8' with '5604'
c Var 'variant_fields_00004_00006_00005' direct represents '9' with '5605'
5597 5598 5599 5600 5601 5602 5603 5604 5605 0
-5597 5606 0
-5597 5609 0
-5598 5607 0
-5598 5609 0
-5599 5608 0
-5599 5609 0
-5600 5606 0
-5600 5610 0
-5601 5607 0
-5601 5610 0
-5602 5608 0
-5602 5610 0
-5603 5606 0
-5603 5611 0
-5604 5607 0
-5604 5611 0
-5605 5608 0
-5605 5611 0
-5606 -5607 0
-5606 -5608 0
-5607 -5608 0
-5609 -5610 0
-5609 -5611 0
-5610 -5611 0
c Encoding variable: variant_fields_00004_00006_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00006_00006' direct represents '1' with '5612'
c Var 'variant_fields_00004_00006_00006' direct represents '2' with '5613'
c Var 'variant_fields_00004_00006_00006' direct represents '3' with '5614'
c Var 'variant_fields_00004_00006_00006' direct represents '4' with '5615'
c Var 'variant_fields_00004_00006_00006' direct represents '5' with '5616'
c Var 'variant_fields_00004_00006_00006' direct represents '6' with '5617'
c Var 'variant_fields_00004_00006_00006' direct represents '7' with '5618'
c Var 'variant_fields_00004_00006_00006' direct represents '8' with '5619'
c Var 'variant_fields_00004_00006_00006' direct represents '9' with '5620'
5612 5613 5614 5615 5616 5617 5618 5619 5620 0
-5612 5621 0
-5612 5624 0
-5613 5622 0
-5613 5624 0
-5614 5623 0
-5614 5624 0
-5615 5621 0
-5615 5625 0
-5616 5622 0
-5616 5625 0
-5617 5623 0
-5617 5625 0
-5618 5621 0
-5618 5626 0
-5619 5622 0
-5619 5626 0
-5620 5623 0
-5620 5626 0
-5621 -5622 0
-5621 -5623 0
-5622 -5623 0
-5624 -5625 0
-5624 -5626 0
-5625 -5626 0
c Encoding variable: variant_fields_00004_00006_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00006_00007' direct represents '1' with '5627'
c Var 'variant_fields_00004_00006_00007' direct represents '2' with '5628'
c Var 'variant_fields_00004_00006_00007' direct represents '3' with '5629'
c Var 'variant_fields_00004_00006_00007' direct represents '4' with '5630'
c Var 'variant_fields_00004_00006_00007' direct represents '5' with '5631'
c Var 'variant_fields_00004_00006_00007' direct represents '6' with '5632'
c Var 'variant_fields_00004_00006_00007' direct represents '7' with '5633'
c Var 'variant_fields_00004_00006_00007' direct represents '8' with '5634'
c Var 'variant_fields_00004_00006_00007' direct represents '9' with '5635'
5627 5628 5629 5630 5631 5632 5633 5634 5635 0
-5627 5636 0
-5627 5639 0
-5628 5637 0
-5628 5639 0
-5629 5638 0
-5629 5639 0
-5630 5636 0
-5630 5640 0
-5631 5637 0
-5631 5640 0
-5632 5638 0
-5632 5640 0
-5633 5636 0
-5633 5641 0
-5634 5637 0
-5634 5641 0
-5635 5638 0
-5635 5641 0
-5636 -5637 0
-5636 -5638 0
-5637 -5638 0
-5639 -5640 0
-5639 -5641 0
-5640 -5641 0
c Encoding variable: variant_fields_00004_00006_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00006_00008' direct represents '1' with '5642'
c Var 'variant_fields_00004_00006_00008' direct represents '2' with '5643'
c Var 'variant_fields_00004_00006_00008' direct represents '3' with '5644'
c Var 'variant_fields_00004_00006_00008' direct represents '4' with '5645'
c Var 'variant_fields_00004_00006_00008' direct represents '5' with '5646'
c Var 'variant_fields_00004_00006_00008' direct represents '6' with '5647'
c Var 'variant_fields_00004_00006_00008' direct represents '7' with '5648'
c Var 'variant_fields_00004_00006_00008' direct represents '8' with '5649'
c Var 'variant_fields_00004_00006_00008' direct represents '9' with '5650'
5642 5643 5644 5645 5646 5647 5648 5649 5650 0
-5642 5651 0
-5642 5654 0
-5643 5652 0
-5643 5654 0
-5644 5653 0
-5644 5654 0
-5645 5651 0
-5645 5655 0
-5646 5652 0
-5646 5655 0
-5647 5653 0
-5647 5655 0
-5648 5651 0
-5648 5656 0
-5649 5652 0
-5649 5656 0
-5650 5653 0
-5650 5656 0
-5651 -5652 0
-5651 -5653 0
-5652 -5653 0
-5654 -5655 0
-5654 -5656 0
-5655 -5656 0
c Encoding variable: variant_fields_00004_00006_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00006_00009' direct represents '1' with '5657'
c Var 'variant_fields_00004_00006_00009' direct represents '2' with '5658'
c Var 'variant_fields_00004_00006_00009' direct represents '3' with '5659'
c Var 'variant_fields_00004_00006_00009' direct represents '4' with '5660'
c Var 'variant_fields_00004_00006_00009' direct represents '5' with '5661'
c Var 'variant_fields_00004_00006_00009' direct represents '6' with '5662'
c Var 'variant_fields_00004_00006_00009' direct represents '7' with '5663'
c Var 'variant_fields_00004_00006_00009' direct represents '8' with '5664'
c Var 'variant_fields_00004_00006_00009' direct represents '9' with '5665'
5657 5658 5659 5660 5661 5662 5663 5664 5665 0
-5657 5666 0
-5657 5669 0
-5658 5667 0
-5658 5669 0
-5659 5668 0
-5659 5669 0
-5660 5666 0
-5660 5670 0
-5661 5667 0
-5661 5670 0
-5662 5668 0
-5662 5670 0
-5663 5666 0
-5663 5671 0
-5664 5667 0
-5664 5671 0
-5665 5668 0
-5665 5671 0
-5666 -5667 0
-5666 -5668 0
-5667 -5668 0
-5669 -5670 0
-5669 -5671 0
-5670 -5671 0
c Encoding variable: variant_fields_00004_00007_00001 with domain: int(1..9) (representing constraint )
c Both direct and order encoding.
c Var 'variant_fields_00004_00007_00001' order represents '1' with '5672'
c Var 'variant_fields_00004_00007_00001' direct represents '1' with '5672'
c Var 'variant_fields_00004_00007_00001' order represents '2' with '5673'
-5672 5673 0
c Var 'variant_fields_00004_00007_00001' direct represents '2' with '5674'
5672 -5673 5674 0
-5674 5673 0
-5674 -5672 0
c Var 'variant_fields_00004_00007_00001' order represents '3' with '5675'
-5673 5675 0
c Var 'variant_fields_00004_00007_00001' direct represents '3' with '5676'
5673 -5675 5676 0
-5676 5675 0
-5676 -5673 0
c Var 'variant_fields_00004_00007_00001' order represents '4' with '5677'
-5675 5677 0
c Var 'variant_fields_00004_00007_00001' direct represents '4' with '5678'
5675 -5677 5678 0
-5678 5677 0
-5678 -5675 0
c Var 'variant_fields_00004_00007_00001' order represents '5' with '5679'
-5677 5679 0
c Var 'variant_fields_00004_00007_00001' direct represents '5' with '5680'
5677 -5679 5680 0
-5680 5679 0
-5680 -5677 0
c Var 'variant_fields_00004_00007_00001' order represents '6' with '5681'
-5679 5681 0
c Var 'variant_fields_00004_00007_00001' direct represents '6' with '5682'
5679 -5681 5682 0
-5682 5681 0
-5682 -5679 0
c Var 'variant_fields_00004_00007_00001' order represents '7' with '5683'
-5681 5683 0
c Var 'variant_fields_00004_00007_00001' direct represents '7' with '5684'
5681 -5683 5684 0
-5684 5683 0
-5684 -5681 0
c Var 'variant_fields_00004_00007_00001' order represents '8' with '5685'
-5683 5685 0
c Var 'variant_fields_00004_00007_00001' direct represents '8' with '5686'
5683 -5685 5686 0
-5686 5685 0
-5686 -5683 0
c Var 'variant_fields_00004_00007_00001' direct represents '9' with '-5685'
5672 5674 5676 5678 5680 5682 5684 5686 -5685 0
c Encoding variable: variant_fields_00004_00007_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00007_00002' direct represents '1' with '5687'
c Var 'variant_fields_00004_00007_00002' direct represents '2' with '5688'
c Var 'variant_fields_00004_00007_00002' direct represents '3' with '5689'
c Var 'variant_fields_00004_00007_00002' direct represents '4' with '5690'
c Var 'variant_fields_00004_00007_00002' direct represents '5' with '5691'
c Var 'variant_fields_00004_00007_00002' direct represents '6' with '5692'
c Var 'variant_fields_00004_00007_00002' direct represents '7' with '5693'
c Var 'variant_fields_00004_00007_00002' direct represents '8' with '5694'
c Var 'variant_fields_00004_00007_00002' direct represents '9' with '5695'
5687 5688 5689 5690 5691 5692 5693 5694 5695 0
-5687 5696 0
-5687 5699 0
-5688 5697 0
-5688 5699 0
-5689 5698 0
-5689 5699 0
-5690 5696 0
-5690 5700 0
-5691 5697 0
-5691 5700 0
-5692 5698 0
-5692 5700 0
-5693 5696 0
-5693 5701 0
-5694 5697 0
-5694 5701 0
-5695 5698 0
-5695 5701 0
-5696 -5697 0
-5696 -5698 0
-5697 -5698 0
-5699 -5700 0
-5699 -5701 0
-5700 -5701 0
c Encoding variable: variant_fields_00004_00007_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00007_00003' direct represents '1' with '5702'
c Var 'variant_fields_00004_00007_00003' direct represents '2' with '5703'
c Var 'variant_fields_00004_00007_00003' direct represents '3' with '5704'
c Var 'variant_fields_00004_00007_00003' direct represents '4' with '5705'
c Var 'variant_fields_00004_00007_00003' direct represents '5' with '5706'
c Var 'variant_fields_00004_00007_00003' direct represents '6' with '5707'
c Var 'variant_fields_00004_00007_00003' direct represents '7' with '5708'
c Var 'variant_fields_00004_00007_00003' direct represents '8' with '5709'
c Var 'variant_fields_00004_00007_00003' direct represents '9' with '5710'
5702 5703 5704 5705 5706 5707 5708 5709 5710 0
-5702 5711 0
-5702 5714 0
-5703 5712 0
-5703 5714 0
-5704 5713 0
-5704 5714 0
-5705 5711 0
-5705 5715 0
-5706 5712 0
-5706 5715 0
-5707 5713 0
-5707 5715 0
-5708 5711 0
-5708 5716 0
-5709 5712 0
-5709 5716 0
-5710 5713 0
-5710 5716 0
-5711 -5712 0
-5711 -5713 0
-5712 -5713 0
-5714 -5715 0
-5714 -5716 0
-5715 -5716 0
c Encoding variable: variant_fields_00004_00007_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00007_00004' direct represents '1' with '5717'
c Var 'variant_fields_00004_00007_00004' direct represents '2' with '5718'
c Var 'variant_fields_00004_00007_00004' direct represents '3' with '5719'
c Var 'variant_fields_00004_00007_00004' direct represents '4' with '5720'
c Var 'variant_fields_00004_00007_00004' direct represents '5' with '5721'
c Var 'variant_fields_00004_00007_00004' direct represents '6' with '5722'
c Var 'variant_fields_00004_00007_00004' direct represents '7' with '5723'
c Var 'variant_fields_00004_00007_00004' direct represents '8' with '5724'
c Var 'variant_fields_00004_00007_00004' direct represents '9' with '5725'
5717 5718 5719 5720 5721 5722 5723 5724 5725 0
-5717 5726 0
-5717 5729 0
-5718 5727 0
-5718 5729 0
-5719 5728 0
-5719 5729 0
-5720 5726 0
-5720 5730 0
-5721 5727 0
-5721 5730 0
-5722 5728 0
-5722 5730 0
-5723 5726 0
-5723 5731 0
-5724 5727 0
-5724 5731 0
-5725 5728 0
-5725 5731 0
-5726 -5727 0
-5726 -5728 0
-5727 -5728 0
-5729 -5730 0
-5729 -5731 0
-5730 -5731 0
c Encoding variable: variant_fields_00004_00007_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00007_00005' direct represents '1' with '5732'
c Var 'variant_fields_00004_00007_00005' direct represents '2' with '5733'
c Var 'variant_fields_00004_00007_00005' direct represents '3' with '5734'
c Var 'variant_fields_00004_00007_00005' direct represents '4' with '5735'
c Var 'variant_fields_00004_00007_00005' direct represents '5' with '5736'
c Var 'variant_fields_00004_00007_00005' direct represents '6' with '5737'
c Var 'variant_fields_00004_00007_00005' direct represents '7' with '5738'
c Var 'variant_fields_00004_00007_00005' direct represents '8' with '5739'
c Var 'variant_fields_00004_00007_00005' direct represents '9' with '5740'
5732 5733 5734 5735 5736 5737 5738 5739 5740 0
-5732 5741 0
-5732 5744 0
-5733 5742 0
-5733 5744 0
-5734 5743 0
-5734 5744 0
-5735 5741 0
-5735 5745 0
-5736 5742 0
-5736 5745 0
-5737 5743 0
-5737 5745 0
-5738 5741 0
-5738 5746 0
-5739 5742 0
-5739 5746 0
-5740 5743 0
-5740 5746 0
-5741 -5742 0
-5741 -5743 0
-5742 -5743 0
-5744 -5745 0
-5744 -5746 0
-5745 -5746 0
c Encoding variable: variant_fields_00004_00007_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00007_00006' direct represents '1' with '5747'
c Var 'variant_fields_00004_00007_00006' direct represents '2' with '5748'
c Var 'variant_fields_00004_00007_00006' direct represents '3' with '5749'
c Var 'variant_fields_00004_00007_00006' direct represents '4' with '5750'
c Var 'variant_fields_00004_00007_00006' direct represents '5' with '5751'
c Var 'variant_fields_00004_00007_00006' direct represents '6' with '5752'
c Var 'variant_fields_00004_00007_00006' direct represents '7' with '5753'
c Var 'variant_fields_00004_00007_00006' direct represents '8' with '5754'
c Var 'variant_fields_00004_00007_00006' direct represents '9' with '5755'
5747 5748 5749 5750 5751 5752 5753 5754 5755 0
-5747 5756 0
-5747 5759 0
-5748 5757 0
-5748 5759 0
-5749 5758 0
-5749 5759 0
-5750 5756 0
-5750 5760 0
-5751 5757 0
-5751 5760 0
-5752 5758 0
-5752 5760 0
-5753 5756 0
-5753 5761 0
-5754 5757 0
-5754 5761 0
-5755 5758 0
-5755 5761 0
-5756 -5757 0
-5756 -5758 0
-5757 -5758 0
-5759 -5760 0
-5759 -5761 0
-5760 -5761 0
c Encoding variable: variant_fields_00004_00007_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00007_00007' direct represents '1' with '5762'
c Var 'variant_fields_00004_00007_00007' direct represents '2' with '5763'
c Var 'variant_fields_00004_00007_00007' direct represents '3' with '5764'
c Var 'variant_fields_00004_00007_00007' direct represents '4' with '5765'
c Var 'variant_fields_00004_00007_00007' direct represents '5' with '5766'
c Var 'variant_fields_00004_00007_00007' direct represents '6' with '5767'
c Var 'variant_fields_00004_00007_00007' direct represents '7' with '5768'
c Var 'variant_fields_00004_00007_00007' direct represents '8' with '5769'
c Var 'variant_fields_00004_00007_00007' direct represents '9' with '5770'
5762 5763 5764 5765 5766 5767 5768 5769 5770 0
-5762 5771 0
-5762 5774 0
-5763 5772 0
-5763 5774 0
-5764 5773 0
-5764 5774 0
-5765 5771 0
-5765 5775 0
-5766 5772 0
-5766 5775 0
-5767 5773 0
-5767 5775 0
-5768 5771 0
-5768 5776 0
-5769 5772 0
-5769 5776 0
-5770 5773 0
-5770 5776 0
-5771 -5772 0
-5771 -5773 0
-5772 -5773 0
-5774 -5775 0
-5774 -5776 0
-5775 -5776 0
c Encoding variable: variant_fields_00004_00007_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00007_00008' direct represents '1' with '5777'
c Var 'variant_fields_00004_00007_00008' direct represents '2' with '5778'
c Var 'variant_fields_00004_00007_00008' direct represents '3' with '5779'
c Var 'variant_fields_00004_00007_00008' direct represents '4' with '5780'
c Var 'variant_fields_00004_00007_00008' direct represents '5' with '5781'
c Var 'variant_fields_00004_00007_00008' direct represents '6' with '5782'
c Var 'variant_fields_00004_00007_00008' direct represents '7' with '5783'
c Var 'variant_fields_00004_00007_00008' direct represents '8' with '5784'
c Var 'variant_fields_00004_00007_00008' direct represents '9' with '5785'
5777 5778 5779 5780 5781 5782 5783 5784 5785 0
-5777 5786 0
-5777 5789 0
-5778 5787 0
-5778 5789 0
-5779 5788 0
-5779 5789 0
-5780 5786 0
-5780 5790 0
-5781 5787 0
-5781 5790 0
-5782 5788 0
-5782 5790 0
-5783 5786 0
-5783 5791 0
-5784 5787 0
-5784 5791 0
-5785 5788 0
-5785 5791 0
-5786 -5787 0
-5786 -5788 0
-5787 -5788 0
-5789 -5790 0
-5789 -5791 0
-5790 -5791 0
c Encoding variable: variant_fields_00004_00007_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00007_00009' direct represents '1' with '5792'
c Var 'variant_fields_00004_00007_00009' direct represents '2' with '5793'
c Var 'variant_fields_00004_00007_00009' direct represents '3' with '5794'
c Var 'variant_fields_00004_00007_00009' direct represents '4' with '5795'
c Var 'variant_fields_00004_00007_00009' direct represents '5' with '5796'
c Var 'variant_fields_00004_00007_00009' direct represents '6' with '5797'
c Var 'variant_fields_00004_00007_00009' direct represents '7' with '5798'
c Var 'variant_fields_00004_00007_00009' direct represents '8' with '5799'
c Var 'variant_fields_00004_00007_00009' direct represents '9' with '5800'
5792 5793 5794 5795 5796 5797 5798 5799 5800 0
-5792 5801 0
-5792 5804 0
-5793 5802 0
-5793 5804 0
-5794 5803 0
-5794 5804 0
-5795 5801 0
-5795 5805 0
-5796 5802 0
-5796 5805 0
-5797 5803 0
-5797 5805 0
-5798 5801 0
-5798 5806 0
-5799 5802 0
-5799 5806 0
-5800 5803 0
-5800 5806 0
-5801 -5802 0
-5801 -5803 0
-5802 -5803 0
-5804 -5805 0
-5804 -5806 0
-5805 -5806 0
c Encoding variable: variant_fields_00004_00008_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00008_00001' direct represents '1' with '5807'
c Var 'variant_fields_00004_00008_00001' direct represents '2' with '5808'
c Var 'variant_fields_00004_00008_00001' direct represents '3' with '5809'
c Var 'variant_fields_00004_00008_00001' direct represents '4' with '5810'
c Var 'variant_fields_00004_00008_00001' direct represents '5' with '5811'
c Var 'variant_fields_00004_00008_00001' direct represents '6' with '5812'
c Var 'variant_fields_00004_00008_00001' direct represents '7' with '5813'
c Var 'variant_fields_00004_00008_00001' direct represents '8' with '5814'
c Var 'variant_fields_00004_00008_00001' direct represents '9' with '5815'
5807 5808 5809 5810 5811 5812 5813 5814 5815 0
-5807 5816 0
-5807 5819 0
-5808 5817 0
-5808 5819 0
-5809 5818 0
-5809 5819 0
-5810 5816 0
-5810 5820 0
-5811 5817 0
-5811 5820 0
-5812 5818 0
-5812 5820 0
-5813 5816 0
-5813 5821 0
-5814 5817 0
-5814 5821 0
-5815 5818 0
-5815 5821 0
-5816 -5817 0
-5816 -5818 0
-5817 -5818 0
-5819 -5820 0
-5819 -5821 0
-5820 -5821 0
c Encoding variable: variant_fields_00004_00008_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00008_00002' direct represents '1' with '5822'
c Var 'variant_fields_00004_00008_00002' direct represents '2' with '5823'
c Var 'variant_fields_00004_00008_00002' direct represents '3' with '5824'
c Var 'variant_fields_00004_00008_00002' direct represents '4' with '5825'
c Var 'variant_fields_00004_00008_00002' direct represents '5' with '5826'
c Var 'variant_fields_00004_00008_00002' direct represents '6' with '5827'
c Var 'variant_fields_00004_00008_00002' direct represents '7' with '5828'
c Var 'variant_fields_00004_00008_00002' direct represents '8' with '5829'
c Var 'variant_fields_00004_00008_00002' direct represents '9' with '5830'
5822 5823 5824 5825 5826 5827 5828 5829 5830 0
-5822 5831 0
-5822 5834 0
-5823 5832 0
-5823 5834 0
-5824 5833 0
-5824 5834 0
-5825 5831 0
-5825 5835 0
-5826 5832 0
-5826 5835 0
-5827 5833 0
-5827 5835 0
-5828 5831 0
-5828 5836 0
-5829 5832 0
-5829 5836 0
-5830 5833 0
-5830 5836 0
-5831 -5832 0
-5831 -5833 0
-5832 -5833 0
-5834 -5835 0
-5834 -5836 0
-5835 -5836 0
c Encoding variable: variant_fields_00004_00008_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00008_00003' direct represents '1' with '5837'
c Var 'variant_fields_00004_00008_00003' direct represents '2' with '5838'
c Var 'variant_fields_00004_00008_00003' direct represents '3' with '5839'
c Var 'variant_fields_00004_00008_00003' direct represents '4' with '5840'
c Var 'variant_fields_00004_00008_00003' direct represents '5' with '5841'
c Var 'variant_fields_00004_00008_00003' direct represents '6' with '5842'
c Var 'variant_fields_00004_00008_00003' direct represents '7' with '5843'
c Var 'variant_fields_00004_00008_00003' direct represents '8' with '5844'
c Var 'variant_fields_00004_00008_00003' direct represents '9' with '5845'
5837 5838 5839 5840 5841 5842 5843 5844 5845 0
-5837 5846 0
-5837 5849 0
-5838 5847 0
-5838 5849 0
-5839 5848 0
-5839 5849 0
-5840 5846 0
-5840 5850 0
-5841 5847 0
-5841 5850 0
-5842 5848 0
-5842 5850 0
-5843 5846 0
-5843 5851 0
-5844 5847 0
-5844 5851 0
-5845 5848 0
-5845 5851 0
-5846 -5847 0
-5846 -5848 0
-5847 -5848 0
-5849 -5850 0
-5849 -5851 0
-5850 -5851 0
c Encoding variable: variant_fields_00004_00008_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00008_00004' direct represents '1' with '5852'
c Var 'variant_fields_00004_00008_00004' direct represents '2' with '5853'
c Var 'variant_fields_00004_00008_00004' direct represents '3' with '5854'
c Var 'variant_fields_00004_00008_00004' direct represents '4' with '5855'
c Var 'variant_fields_00004_00008_00004' direct represents '5' with '5856'
c Var 'variant_fields_00004_00008_00004' direct represents '6' with '5857'
c Var 'variant_fields_00004_00008_00004' direct represents '7' with '5858'
c Var 'variant_fields_00004_00008_00004' direct represents '8' with '5859'
c Var 'variant_fields_00004_00008_00004' direct represents '9' with '5860'
5852 5853 5854 5855 5856 5857 5858 5859 5860 0
-5852 5861 0
-5852 5864 0
-5853 5862 0
-5853 5864 0
-5854 5863 0
-5854 5864 0
-5855 5861 0
-5855 5865 0
-5856 5862 0
-5856 5865 0
-5857 5863 0
-5857 5865 0
-5858 5861 0
-5858 5866 0
-5859 5862 0
-5859 5866 0
-5860 5863 0
-5860 5866 0
-5861 -5862 0
-5861 -5863 0
-5862 -5863 0
-5864 -5865 0
-5864 -5866 0
-5865 -5866 0
c Encoding variable: variant_fields_00004_00008_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00008_00005' direct represents '1' with '5867'
c Var 'variant_fields_00004_00008_00005' direct represents '2' with '5868'
c Var 'variant_fields_00004_00008_00005' direct represents '3' with '5869'
c Var 'variant_fields_00004_00008_00005' direct represents '4' with '5870'
c Var 'variant_fields_00004_00008_00005' direct represents '5' with '5871'
c Var 'variant_fields_00004_00008_00005' direct represents '6' with '5872'
c Var 'variant_fields_00004_00008_00005' direct represents '7' with '5873'
c Var 'variant_fields_00004_00008_00005' direct represents '8' with '5874'
c Var 'variant_fields_00004_00008_00005' direct represents '9' with '5875'
5867 5868 5869 5870 5871 5872 5873 5874 5875 0
-5867 5876 0
-5867 5879 0
-5868 5877 0
-5868 5879 0
-5869 5878 0
-5869 5879 0
-5870 5876 0
-5870 5880 0
-5871 5877 0
-5871 5880 0
-5872 5878 0
-5872 5880 0
-5873 5876 0
-5873 5881 0
-5874 5877 0
-5874 5881 0
-5875 5878 0
-5875 5881 0
-5876 -5877 0
-5876 -5878 0
-5877 -5878 0
-5879 -5880 0
-5879 -5881 0
-5880 -5881 0
c Encoding variable: variant_fields_00004_00008_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00008_00006' direct represents '1' with '5882'
c Var 'variant_fields_00004_00008_00006' direct represents '2' with '5883'
c Var 'variant_fields_00004_00008_00006' direct represents '3' with '5884'
c Var 'variant_fields_00004_00008_00006' direct represents '4' with '5885'
c Var 'variant_fields_00004_00008_00006' direct represents '5' with '5886'
c Var 'variant_fields_00004_00008_00006' direct represents '6' with '5887'
c Var 'variant_fields_00004_00008_00006' direct represents '7' with '5888'
c Var 'variant_fields_00004_00008_00006' direct represents '8' with '5889'
c Var 'variant_fields_00004_00008_00006' direct represents '9' with '5890'
5882 5883 5884 5885 5886 5887 5888 5889 5890 0
-5882 5891 0
-5882 5894 0
-5883 5892 0
-5883 5894 0
-5884 5893 0
-5884 5894 0
-5885 5891 0
-5885 5895 0
-5886 5892 0
-5886 5895 0
-5887 5893 0
-5887 5895 0
-5888 5891 0
-5888 5896 0
-5889 5892 0
-5889 5896 0
-5890 5893 0
-5890 5896 0
-5891 -5892 0
-5891 -5893 0
-5892 -5893 0
-5894 -5895 0
-5894 -5896 0
-5895 -5896 0
c Encoding variable: variant_fields_00004_00008_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00008_00007' direct represents '1' with '5897'
c Var 'variant_fields_00004_00008_00007' direct represents '2' with '5898'
c Var 'variant_fields_00004_00008_00007' direct represents '3' with '5899'
c Var 'variant_fields_00004_00008_00007' direct represents '4' with '5900'
c Var 'variant_fields_00004_00008_00007' direct represents '5' with '5901'
c Var 'variant_fields_00004_00008_00007' direct represents '6' with '5902'
c Var 'variant_fields_00004_00008_00007' direct represents '7' with '5903'
c Var 'variant_fields_00004_00008_00007' direct represents '8' with '5904'
c Var 'variant_fields_00004_00008_00007' direct represents '9' with '5905'
5897 5898 5899 5900 5901 5902 5903 5904 5905 0
-5897 5906 0
-5897 5909 0
-5898 5907 0
-5898 5909 0
-5899 5908 0
-5899 5909 0
-5900 5906 0
-5900 5910 0
-5901 5907 0
-5901 5910 0
-5902 5908 0
-5902 5910 0
-5903 5906 0
-5903 5911 0
-5904 5907 0
-5904 5911 0
-5905 5908 0
-5905 5911 0
-5906 -5907 0
-5906 -5908 0
-5907 -5908 0
-5909 -5910 0
-5909 -5911 0
-5910 -5911 0
c Encoding variable: variant_fields_00004_00008_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00008_00008' direct represents '1' with '5912'
c Var 'variant_fields_00004_00008_00008' direct represents '2' with '5913'
c Var 'variant_fields_00004_00008_00008' direct represents '3' with '5914'
c Var 'variant_fields_00004_00008_00008' direct represents '4' with '5915'
c Var 'variant_fields_00004_00008_00008' direct represents '5' with '5916'
c Var 'variant_fields_00004_00008_00008' direct represents '6' with '5917'
c Var 'variant_fields_00004_00008_00008' direct represents '7' with '5918'
c Var 'variant_fields_00004_00008_00008' direct represents '8' with '5919'
c Var 'variant_fields_00004_00008_00008' direct represents '9' with '5920'
5912 5913 5914 5915 5916 5917 5918 5919 5920 0
-5912 5921 0
-5912 5924 0
-5913 5922 0
-5913 5924 0
-5914 5923 0
-5914 5924 0
-5915 5921 0
-5915 5925 0
-5916 5922 0
-5916 5925 0
-5917 5923 0
-5917 5925 0
-5918 5921 0
-5918 5926 0
-5919 5922 0
-5919 5926 0
-5920 5923 0
-5920 5926 0
-5921 -5922 0
-5921 -5923 0
-5922 -5923 0
-5924 -5925 0
-5924 -5926 0
-5925 -5926 0
c Encoding variable: variant_fields_00004_00008_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00008_00009' direct represents '1' with '5927'
c Var 'variant_fields_00004_00008_00009' direct represents '2' with '5928'
c Var 'variant_fields_00004_00008_00009' direct represents '3' with '5929'
c Var 'variant_fields_00004_00008_00009' direct represents '4' with '5930'
c Var 'variant_fields_00004_00008_00009' direct represents '5' with '5931'
c Var 'variant_fields_00004_00008_00009' direct represents '6' with '5932'
c Var 'variant_fields_00004_00008_00009' direct represents '7' with '5933'
c Var 'variant_fields_00004_00008_00009' direct represents '8' with '5934'
c Var 'variant_fields_00004_00008_00009' direct represents '9' with '5935'
5927 5928 5929 5930 5931 5932 5933 5934 5935 0
-5927 5936 0
-5927 5939 0
-5928 5937 0
-5928 5939 0
-5929 5938 0
-5929 5939 0
-5930 5936 0
-5930 5940 0
-5931 5937 0
-5931 5940 0
-5932 5938 0
-5932 5940 0
-5933 5936 0
-5933 5941 0
-5934 5937 0
-5934 5941 0
-5935 5938 0
-5935 5941 0
-5936 -5937 0
-5936 -5938 0
-5937 -5938 0
-5939 -5940 0
-5939 -5941 0
-5940 -5941 0
c Encoding variable: variant_fields_00004_00009_00001 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00009_00001' direct represents '1' with '5942'
c Var 'variant_fields_00004_00009_00001' direct represents '2' with '5943'
c Var 'variant_fields_00004_00009_00001' direct represents '3' with '5944'
c Var 'variant_fields_00004_00009_00001' direct represents '4' with '5945'
c Var 'variant_fields_00004_00009_00001' direct represents '5' with '5946'
c Var 'variant_fields_00004_00009_00001' direct represents '6' with '5947'
c Var 'variant_fields_00004_00009_00001' direct represents '7' with '5948'
c Var 'variant_fields_00004_00009_00001' direct represents '8' with '5949'
c Var 'variant_fields_00004_00009_00001' direct represents '9' with '5950'
5942 5943 5944 5945 5946 5947 5948 5949 5950 0
-5942 5951 0
-5942 5954 0
-5943 5952 0
-5943 5954 0
-5944 5953 0
-5944 5954 0
-5945 5951 0
-5945 5955 0
-5946 5952 0
-5946 5955 0
-5947 5953 0
-5947 5955 0
-5948 5951 0
-5948 5956 0
-5949 5952 0
-5949 5956 0
-5950 5953 0
-5950 5956 0
-5951 -5952 0
-5951 -5953 0
-5952 -5953 0
-5954 -5955 0
-5954 -5956 0
-5955 -5956 0
c Encoding variable: variant_fields_00004_00009_00002 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00009_00002' direct represents '1' with '5957'
c Var 'variant_fields_00004_00009_00002' direct represents '2' with '5958'
c Var 'variant_fields_00004_00009_00002' direct represents '3' with '5959'
c Var 'variant_fields_00004_00009_00002' direct represents '4' with '5960'
c Var 'variant_fields_00004_00009_00002' direct represents '5' with '5961'
c Var 'variant_fields_00004_00009_00002' direct represents '6' with '5962'
c Var 'variant_fields_00004_00009_00002' direct represents '7' with '5963'
c Var 'variant_fields_00004_00009_00002' direct represents '8' with '5964'
c Var 'variant_fields_00004_00009_00002' direct represents '9' with '5965'
5957 5958 5959 5960 5961 5962 5963 5964 5965 0
-5957 5966 0
-5957 5969 0
-5958 5967 0
-5958 5969 0
-5959 5968 0
-5959 5969 0
-5960 5966 0
-5960 5970 0
-5961 5967 0
-5961 5970 0
-5962 5968 0
-5962 5970 0
-5963 5966 0
-5963 5971 0
-5964 5967 0
-5964 5971 0
-5965 5968 0
-5965 5971 0
-5966 -5967 0
-5966 -5968 0
-5967 -5968 0
-5969 -5970 0
-5969 -5971 0
-5970 -5971 0
c Encoding variable: variant_fields_00004_00009_00003 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00009_00003' direct represents '1' with '5972'
c Var 'variant_fields_00004_00009_00003' direct represents '2' with '5973'
c Var 'variant_fields_00004_00009_00003' direct represents '3' with '5974'
c Var 'variant_fields_00004_00009_00003' direct represents '4' with '5975'
c Var 'variant_fields_00004_00009_00003' direct represents '5' with '5976'
c Var 'variant_fields_00004_00009_00003' direct represents '6' with '5977'
c Var 'variant_fields_00004_00009_00003' direct represents '7' with '5978'
c Var 'variant_fields_00004_00009_00003' direct represents '8' with '5979'
c Var 'variant_fields_00004_00009_00003' direct represents '9' with '5980'
5972 5973 5974 5975 5976 5977 5978 5979 5980 0
-5972 5981 0
-5972 5984 0
-5973 5982 0
-5973 5984 0
-5974 5983 0
-5974 5984 0
-5975 5981 0
-5975 5985 0
-5976 5982 0
-5976 5985 0
-5977 5983 0
-5977 5985 0
-5978 5981 0
-5978 5986 0
-5979 5982 0
-5979 5986 0
-5980 5983 0
-5980 5986 0
-5981 -5982 0
-5981 -5983 0
-5982 -5983 0
-5984 -5985 0
-5984 -5986 0
-5985 -5986 0
c Encoding variable: variant_fields_00004_00009_00004 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00009_00004' direct represents '1' with '5987'
c Var 'variant_fields_00004_00009_00004' direct represents '2' with '5988'
c Var 'variant_fields_00004_00009_00004' direct represents '3' with '5989'
c Var 'variant_fields_00004_00009_00004' direct represents '4' with '5990'
c Var 'variant_fields_00004_00009_00004' direct represents '5' with '5991'
c Var 'variant_fields_00004_00009_00004' direct represents '6' with '5992'
c Var 'variant_fields_00004_00009_00004' direct represents '7' with '5993'
c Var 'variant_fields_00004_00009_00004' direct represents '8' with '5994'
c Var 'variant_fields_00004_00009_00004' direct represents '9' with '5995'
5987 5988 5989 5990 5991 5992 5993 5994 5995 0
-5987 5996 0
-5987 5999 0
-5988 5997 0
-5988 5999 0
-5989 5998 0
-5989 5999 0
-5990 5996 0
-5990 6000 0
-5991 5997 0
-5991 6000 0
-5992 5998 0
-5992 6000 0
-5993 5996 0
-5993 6001 0
-5994 5997 0
-5994 6001 0
-5995 5998 0
-5995 6001 0
-5996 -5997 0
-5996 -5998 0
-5997 -5998 0
-5999 -6000 0
-5999 -6001 0
-6000 -6001 0
c Encoding variable: variant_fields_00004_00009_00005 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00009_00005' direct represents '1' with '6002'
c Var 'variant_fields_00004_00009_00005' direct represents '2' with '6003'
c Var 'variant_fields_00004_00009_00005' direct represents '3' with '6004'
c Var 'variant_fields_00004_00009_00005' direct represents '4' with '6005'
c Var 'variant_fields_00004_00009_00005' direct represents '5' with '6006'
c Var 'variant_fields_00004_00009_00005' direct represents '6' with '6007'
c Var 'variant_fields_00004_00009_00005' direct represents '7' with '6008'
c Var 'variant_fields_00004_00009_00005' direct represents '8' with '6009'
c Var 'variant_fields_00004_00009_00005' direct represents '9' with '6010'
6002 6003 6004 6005 6006 6007 6008 6009 6010 0
-6002 6011 0
-6002 6014 0
-6003 6012 0
-6003 6014 0
-6004 6013 0
-6004 6014 0
-6005 6011 0
-6005 6015 0
-6006 6012 0
-6006 6015 0
-6007 6013 0
-6007 6015 0
-6008 6011 0
-6008 6016 0
-6009 6012 0
-6009 6016 0
-6010 6013 0
-6010 6016 0
-6011 -6012 0
-6011 -6013 0
-6012 -6013 0
-6014 -6015 0
-6014 -6016 0
-6015 -6016 0
c Encoding variable: variant_fields_00004_00009_00006 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00009_00006' direct represents '1' with '6017'
c Var 'variant_fields_00004_00009_00006' direct represents '2' with '6018'
c Var 'variant_fields_00004_00009_00006' direct represents '3' with '6019'
c Var 'variant_fields_00004_00009_00006' direct represents '4' with '6020'
c Var 'variant_fields_00004_00009_00006' direct represents '5' with '6021'
c Var 'variant_fields_00004_00009_00006' direct represents '6' with '6022'
c Var 'variant_fields_00004_00009_00006' direct represents '7' with '6023'
c Var 'variant_fields_00004_00009_00006' direct represents '8' with '6024'
c Var 'variant_fields_00004_00009_00006' direct represents '9' with '6025'
6017 6018 6019 6020 6021 6022 6023 6024 6025 0
-6017 6026 0
-6017 6029 0
-6018 6027 0
-6018 6029 0
-6019 6028 0
-6019 6029 0
-6020 6026 0
-6020 6030 0
-6021 6027 0
-6021 6030 0
-6022 6028 0
-6022 6030 0
-6023 6026 0
-6023 6031 0
-6024 6027 0
-6024 6031 0
-6025 6028 0
-6025 6031 0
-6026 -6027 0
-6026 -6028 0
-6027 -6028 0
-6029 -6030 0
-6029 -6031 0
-6030 -6031 0
c Encoding variable: variant_fields_00004_00009_00007 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00009_00007' direct represents '1' with '6032'
c Var 'variant_fields_00004_00009_00007' direct represents '2' with '6033'
c Var 'variant_fields_00004_00009_00007' direct represents '3' with '6034'
c Var 'variant_fields_00004_00009_00007' direct represents '4' with '6035'
c Var 'variant_fields_00004_00009_00007' direct represents '5' with '6036'
c Var 'variant_fields_00004_00009_00007' direct represents '6' with '6037'
c Var 'variant_fields_00004_00009_00007' direct represents '7' with '6038'
c Var 'variant_fields_00004_00009_00007' direct represents '8' with '6039'
c Var 'variant_fields_00004_00009_00007' direct represents '9' with '6040'
6032 6033 6034 6035 6036 6037 6038 6039 6040 0
-6032 6041 0
-6032 6044 0
-6033 6042 0
-6033 6044 0
-6034 6043 0
-6034 6044 0
-6035 6041 0
-6035 6045 0
-6036 6042 0
-6036 6045 0
-6037 6043 0
-6037 6045 0
-6038 6041 0
-6038 6046 0
-6039 6042 0
-6039 6046 0
-6040 6043 0
-6040 6046 0
-6041 -6042 0
-6041 -6043 0
-6042 -6043 0
-6044 -6045 0
-6044 -6046 0
-6045 -6046 0
c Encoding variable: variant_fields_00004_00009_00008 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00009_00008' direct represents '1' with '6047'
c Var 'variant_fields_00004_00009_00008' direct represents '2' with '6048'
c Var 'variant_fields_00004_00009_00008' direct represents '3' with '6049'
c Var 'variant_fields_00004_00009_00008' direct represents '4' with '6050'
c Var 'variant_fields_00004_00009_00008' direct represents '5' with '6051'
c Var 'variant_fields_00004_00009_00008' direct represents '6' with '6052'
c Var 'variant_fields_00004_00009_00008' direct represents '7' with '6053'
c Var 'variant_fields_00004_00009_00008' direct represents '8' with '6054'
c Var 'variant_fields_00004_00009_00008' direct represents '9' with '6055'
6047 6048 6049 6050 6051 6052 6053 6054 6055 0
-6047 6056 0
-6047 6059 0
-6048 6057 0
-6048 6059 0
-6049 6058 0
-6049 6059 0
-6050 6056 0
-6050 6060 0
-6051 6057 0
-6051 6060 0
-6052 6058 0
-6052 6060 0
-6053 6056 0
-6053 6061 0
-6054 6057 0
-6054 6061 0
-6055 6058 0
-6055 6061 0
-6056 -6057 0
-6056 -6058 0
-6057 -6058 0
-6059 -6060 0
-6059 -6061 0
-6060 -6061 0
c Encoding variable: variant_fields_00004_00009_00009 with domain: int(1..9) (representing constraint )
c Direct encoding.
c Var 'variant_fields_00004_00009_00009' direct represents '1' with '6062'
c Var 'variant_fields_00004_00009_00009' direct represents '2' with '6063'
c Var 'variant_fields_00004_00009_00009' direct represents '3' with '6064'
c Var 'variant_fields_00004_00009_00009' direct represents '4' with '6065'
c Var 'variant_fields_00004_00009_00009' direct represents '5' with '6066'
c Var 'variant_fields_00004_00009_00009' direct represents '6' with '6067'
c Var 'variant_fields_00004_00009_00009' direct represents '7' with '6068'
c Var 'variant_fields_00004_00009_00009' direct represents '8' with '6069'
c Var 'variant_fields_00004_00009_00009' direct represents '9' with '6070'
6062 6063 6064 6065 6066 6067 6068 6069 6070 0
-6062 6071 0
-6062 6074 0
-6063 6072 0
-6063 6074 0
-6064 6073 0
-6064 6074 0
-6065 6071 0
-6065 6075 0
-6066 6072 0
-6066 6075 0
-6067 6073 0
-6067 6075 0
-6068 6071 0
-6068 6076 0
-6069 6072 0
-6069 6076 0
-6070 6073 0
-6070 6076 0
-6071 -6072 0
-6071 -6073 0
-6072 -6073 0
-6074 -6075 0
-6074 -6076 0
-6075 -6076 0
c Encoding variable: alldiff_row_00001 with domain: bool (representing constraint )
c Var 'alldiff_row_00001' direct represents '0' with '-6077'
c Var 'alldiff_row_00001' direct represents '1' with '6077'
c Var 'alldiff_row_00001' order represents '1' with '1'
c Var 'alldiff_row_00001' order represents '0' with '-6077'
c Encoding variable: alldiff_row_00002 with domain: bool (representing constraint )
c Var 'alldiff_row_00002' direct represents '0' with '-6078'
c Var 'alldiff_row_00002' direct represents '1' with '6078'
c Var 'alldiff_row_00002' order represents '1' with '1'
c Var 'alldiff_row_00002' order represents '0' with '-6078'
c Encoding variable: alldiff_row_00003 with domain: bool (representing constraint )
c Var 'alldiff_row_00003' direct represents '0' with '-6079'
c Var 'alldiff_row_00003' direct represents '1' with '6079'
c Var 'alldiff_row_00003' order represents '1' with '1'
c Var 'alldiff_row_00003' order represents '0' with '-6079'
c Encoding variable: alldiff_row_00004 with domain: bool (representing constraint )
c Var 'alldiff_row_00004' direct represents '0' with '-6080'
c Var 'alldiff_row_00004' direct represents '1' with '6080'
c Var 'alldiff_row_00004' order represents '1' with '1'
c Var 'alldiff_row_00004' order represents '0' with '-6080'
c Encoding variable: alldiff_row_00005 with domain: bool (representing constraint )
c Var 'alldiff_row_00005' direct represents '0' with '-6081'
c Var 'alldiff_row_00005' direct represents '1' with '6081'
c Var 'alldiff_row_00005' order represents '1' with '1'
c Var 'alldiff_row_00005' order represents '0' with '-6081'
c Encoding variable: alldiff_row_00006 with domain: bool (representing constraint )
c Var 'alldiff_row_00006' direct represents '0' with '-6082'
c Var 'alldiff_row_00006' direct represents '1' with '6082'
c Var 'alldiff_row_00006' order represents '1' with '1'
c Var 'alldiff_row_00006' order represents '0' with '-6082'
c Encoding variable: alldiff_row_00007 with domain: bool (representing constraint )
c Var 'alldiff_row_00007' direct represents '0' with '-6083'
c Var 'alldiff_row_00007' direct represents '1' with '6083'
c Var 'alldiff_row_00007' order represents '1' with '1'
c Var 'alldiff_row_00007' order represents '0' with '-6083'
c Encoding variable: alldiff_row_00008 with domain: bool (representing constraint )
c Var 'alldiff_row_00008' direct represents '0' with '-6084'
c Var 'alldiff_row_00008' direct represents '1' with '6084'
c Var 'alldiff_row_00008' order represents '1' with '1'
c Var 'alldiff_row_00008' order represents '0' with '-6084'
c Encoding variable: alldiff_row_00009 with domain: bool (representing constraint )
c Var 'alldiff_row_00009' direct represents '0' with '-6085'
c Var 'alldiff_row_00009' direct represents '1' with '6085'
c Var 'alldiff_row_00009' order represents '1' with '1'
c Var 'alldiff_row_00009' order represents '0' with '-6085'
c Encoding variable: alldiff_col_00001 with domain: bool (representing constraint )
c Var 'alldiff_col_00001' direct represents '0' with '-6086'
c Var 'alldiff_col_00001' direct represents '1' with '6086'
c Var 'alldiff_col_00001' order represents '1' with '1'
c Var 'alldiff_col_00001' order represents '0' with '-6086'
c Encoding variable: alldiff_col_00002 with domain: bool (representing constraint )
c Var 'alldiff_col_00002' direct represents '0' with '-6087'
c Var 'alldiff_col_00002' direct represents '1' with '6087'
c Var 'alldiff_col_00002' order represents '1' with '1'
c Var 'alldiff_col_00002' order represents '0' with '-6087'
c Encoding variable: alldiff_col_00003 with domain: bool (representing constraint )
c Var 'alldiff_col_00003' direct represents '0' with '-6088'
c Var 'alldiff_col_00003' direct represents '1' with '6088'
c Var 'alldiff_col_00003' order represents '1' with '1'
c Var 'alldiff_col_00003' order represents '0' with '-6088'
c Encoding variable: alldiff_col_00004 with domain: bool (representing constraint )
c Var 'alldiff_col_00004' direct represents '0' with '-6089'
c Var 'alldiff_col_00004' direct represents '1' with '6089'
c Var 'alldiff_col_00004' order represents '1' with '1'
c Var 'alldiff_col_00004' order represents '0' with '-6089'
c Encoding variable: alldiff_col_00005 with domain: bool (representing constraint )
c Var 'alldiff_col_00005' direct represents '0' with '-6090'
c Var 'alldiff_col_00005' direct represents '1' with '6090'
c Var 'alldiff_col_00005' order represents '1' with '1'
c Var 'alldiff_col_00005' order represents '0' with '-6090'
c Encoding variable: alldiff_col_00006 with domain: bool (representing constraint )
c Var 'alldiff_col_00006' direct represents '0' with '-6091'
c Var 'alldiff_col_00006' direct represents '1' with '6091'
c Var 'alldiff_col_00006' order represents '1' with '1'
c Var 'alldiff_col_00006' order represents '0' with '-6091'
c Encoding variable: alldiff_col_00007 with domain: bool (representing constraint )
c Var 'alldiff_col_00007' direct represents '0' with '-6092'
c Var 'alldiff_col_00007' direct represents '1' with '6092'
c Var 'alldiff_col_00007' order represents '1' with '1'
c Var 'alldiff_col_00007' order represents '0' with '-6092'
c Encoding variable: alldiff_col_00008 with domain: bool (representing constraint )
c Var 'alldiff_col_00008' direct represents '0' with '-6093'
c Var 'alldiff_col_00008' direct represents '1' with '6093'
c Var 'alldiff_col_00008' order represents '1' with '1'
c Var 'alldiff_col_00008' order represents '0' with '-6093'
c Encoding variable: alldiff_col_00009 with domain: bool (representing constraint )
c Var 'alldiff_col_00009' direct represents '0' with '-6094'
c Var 'alldiff_col_00009' direct represents '1' with '6094'
c Var 'alldiff_col_00009' order represents '1' with '1'
c Var 'alldiff_col_00009' order represents '0' with '-6094'
c Encoding variable: alldiff_box_00001 with domain: bool (representing constraint )
c Var 'alldiff_box_00001' direct represents '0' with '-6095'
c Var 'alldiff_box_00001' direct represents '1' with '6095'
c Var 'alldiff_box_00001' order represents '1' with '1'
c Var 'alldiff_box_00001' order represents '0' with '-6095'
c Encoding variable: alldiff_box_00002 with domain: bool (representing constraint )
c Var 'alldiff_box_00002' direct represents '0' with '-6096'
c Var 'alldiff_box_00002' direct represents '1' with '6096'
c Var 'alldiff_box_00002' order represents '1' with '1'
c Var 'alldiff_box_00002' order represents '0' with '-6096'
c Encoding variable: alldiff_box_00003 with domain: bool (representing constraint )
c Var 'alldiff_box_00003' direct represents '0' with '-6097'
c Var 'alldiff_box_00003' direct represents '1' with '6097'
c Var 'alldiff_box_00003' order represents '1' with '1'
c Var 'alldiff_box_00003' order represents '0' with '-6097'
c Encoding variable: alldiff_box_00004 with domain: bool (representing constraint )
c Var 'alldiff_box_00004' direct represents '0' with '-6098'
c Var 'alldiff_box_00004' direct represents '1' with '6098'
c Var 'alldiff_box_00004' order represents '1' with '1'
c Var 'alldiff_box_00004' order represents '0' with '-6098'
c Encoding variable: alldiff_box_00005 with domain: bool (representing constraint )
c Var 'alldiff_box_00005' direct represents '0' with '-6099'
c Var 'alldiff_box_00005' direct represents '1' with '6099'
c Var 'alldiff_box_00005' order represents '1' with '1'
c Var 'alldiff_box_00005' order represents '0' with '-6099'
c Encoding variable: alldiff_box_00006 with domain: bool (representing constraint )
c Var 'alldiff_box_00006' direct represents '0' with '-6100'
c Var 'alldiff_box_00006' direct represents '1' with '6100'
c Var 'alldiff_box_00006' order represents '1' with '1'
c Var 'alldiff_box_00006' order represents '0' with '-6100'
c Encoding variable: alldiff_box_00007 with domain: bool (representing constraint )
c Var 'alldiff_box_00007' direct represents '0' with '-6101'
c Var 'alldiff_box_00007' direct represents '1' with '6101'
c Var 'alldiff_box_00007' order represents '1' with '1'
c Var 'alldiff_box_00007' order represents '0' with '-6101'
c Encoding variable: alldiff_box_00008 with domain: bool (representing constraint )
c Var 'alldiff_box_00008' direct represents '0' with '-6102'
c Var 'alldiff_box_00008' direct represents '1' with '6102'
c Var 'alldiff_box_00008' order represents '1' with '1'
c Var 'alldiff_box_00008' order represents '0' with '-6102'
c Encoding variable: alldiff_box_00009 with domain: bool (representing constraint )
c Var 'alldiff_box_00009' direct represents '0' with '-6103'
c Var 'alldiff_box_00009' direct represents '1' with '6103'
c Var 'alldiff_box_00009' order represents '1' with '1'
c Var 'alldiff_box_00009' order represents '0' with '-6103'
c Encoding variable: clues_left_on_00001_00001 with domain: bool (representing constraint )
c Var 'clues_left_on_00001_00001' direct represents '0' with '-6104'
c Var 'clues_left_on_00001_00001' direct represents '1' with '6104'
c Var 'clues_left_on_00001_00001' order represents '1' with '1'
c Var 'clues_left_on_00001_00001' order represents '0' with '-6104'
6104 -6104 0
c Encoding variable: clues_left_on_00001_00002 with domain: bool (representing constraint )
c Var 'clues_left_on_00001_00002' direct represents '0' with '-6105'
c Var 'clues_left_on_00001_00002' direct represents '1' with '6105'
c Var 'clues_left_on_00001_00002' order represents '1' with '1'
c Var 'clues_left_on_00001_00002' order represents '0' with '-6105'
c Encoding variable: clues_left_on_00001_00003 with domain: bool (representing constraint )
c Var 'clues_left_on_00001_00003' direct represents '0' with '-6106'
c Var 'clues_left_on_00001_00003' direct represents '1' with '6106'
c Var 'clues_left_on_00001_00003' order represents '1' with '1'
c Var 'clues_left_on_00001_00003' order represents '0' with '-6106'
6106 -6106 0
c Encoding variable: clues_left_on_00001_00004 with domain: bool (representing constraint )
c Var 'clues_left_on_00001_00004' direct represents '0' with '-6107'
c Var 'clues_left_on_00001_00004' direct represents '1' with '6107'
c Var 'clues_left_on_00001_00004' order represents '1' with '1'
c Var 'clues_left_on_00001_00004' order represents '0' with '-6107'
c Encoding variable: clues_left_on_00001_00005 with domain: bool (representing constraint )
c Var 'clues_left_on_00001_00005' direct represents '0' with '-6108'
c Var 'clues_left_on_00001_00005' direct represents '1' with '6108'
c Var 'clues_left_on_00001_00005' order represents '1' with '1'
c Var 'clues_left_on_00001_00005' order represents '0' with '-6108'
6108 -6108 0
c Encoding variable: clues_left_on_00001_00006 with domain: bool (representing constraint )
c Var 'clues_left_on_00001_00006' direct represents '0' with '-6109'
c Var 'clues_left_on_00001_00006' direct represents '1' with '6109'
c Var 'clues_left_on_00001_00006' order represents '1' with '1'
c Var 'clues_left_on_00001_00006' order represents '0' with '-6109'
c Encoding variable: clues_left_on_00001_00007 with domain: bool (representing constraint )
c Var 'clues_left_on_00001_00007' direct represents '0' with '-6110'
c Var 'clues_left_on_00001_00007' direct represents '1' with '6110'
c Var 'clues_left_on_00001_00007' order represents '1' with '1'
c Var 'clues_left_on_00001_00007' order represents '0' with '-6110'
6110 -6110 0
c Encoding variable: clues_left_on_00001_00008 with domain: bool (representing constraint )
c Var 'clues_left_on_00001_00008' direct represents '0' with '-6111'
c Var 'clues_left_on_00001_00008' direct represents '1' with '6111'
c Var 'clues_left_on_00001_00008' order represents '1' with '1'
c Var 'clues_left_on_00001_00008' order represents '0' with '-6111'
c Encoding variable: clues_left_on_00001_00009 with domain: bool (representing constraint )
c Var 'clues_left_on_00001_00009' direct represents '0' with '-6112'
c Var 'clues_left_on_00001_00009' direct represents '1' with '6112'
c Var 'clues_left_on_00001_00009' order represents '1' with '1'
c Var 'clues_left_on_00001_00009' order represents '0' with '-6112'
6112 -6112 0
c Encoding variable: clues_left_on_00002_00001 with domain: bool (representing constraint )
c Var 'clues_left_on_00002_00001' direct represents '0' with '-6113'
c Var 'clues_left_on_00002_00001' direct represents '1' with '6113'
c Var 'clues_left_on_00002_00001' order represents '1' with '1'
c Var 'clues_left_on_00002_00001' order represents '0' with '-6113'
6113 -6113 0
c Encoding variable: clues_left_on_00002_00002 with domain: bool (representing constraint )
c Var 'clues_left_on_00002_00002' direct represents '0' with '-6114'
c Var 'clues_left_on_00002_00002' direct represents '1' with '6114'
c Var 'clues_left_on_00002_00002' order represents '1' with '1'
c Var 'clues_left_on_00002_00002' order represents '0' with '-6114'
c Encoding variable: clues_left_on_00002_00003 with domain: bool (representing constraint )
c Var 'clues_left_on_00002_00003' direct represents '0' with '-6115'
c Var 'clues_left_on_00002_00003' direct represents '1' with '6115'
c Var 'clues_left_on_00002_00003' order represents '1' with '1'
c Var 'clues_left_on_00002_00003' order represents '0' with '-6115'
6115 -6115 0
c Encoding variable: clues_left_on_00002_00004 with domain: bool (representing constraint )
c Var 'clues_left_on_00002_00004' direct represents '0' with '-6116'
c Var 'clues_left_on_00002_00004' direct represents '1' with '6116'
c Var 'clues_left_on_00002_00004' order represents '1' with '1'
c Var 'clues_left_on_00002_00004' order represents '0' with '-6116'
c Encoding variable: clues_left_on_00002_00005 with domain: bool (representing constraint )
c Var 'clues_left_on_00002_00005' direct represents '0' with '-6117'
c Var 'clues_left_on_00002_00005' direct represents '1' with '6117'
c Var 'clues_left_on_00002_00005' order represents '1' with '1'
c Var 'clues_left_on_00002_00005' order represents '0' with '-6117'
6117 -6117 0
c Encoding variable: clues_left_on_00002_00006 with domain: bool (representing constraint )
c Var 'clues_left_on_00002_00006' direct represents '0' with '-6118'
c Var 'clues_left_on_00002_00006' direct represents '1' with '6118'
c Var 'clues_left_on_00002_00006' order represents '1' with '1'
c Var 'clues_left_on_00002_00006' order represents '0' with '-6118'
c Encoding variable: clues_left_on_00002_00007 with domain: bool (representing constraint )
c Var 'clues_left_on_00002_00007' direct represents '0' with '-6119'
c Var 'clues_left_on_00002_00007' direct represents '1' with '6119'
c Var 'clues_left_on_00002_00007' order represents '1' with '1'
c Var 'clues_left_on_00002_00007' order represents '0' with '-6119'
c Encoding variable: clues_left_on_00002_00008 with domain: bool (representing constraint )
c Var 'clues_left_on_00002_00008' direct represents '0' with '-6120'
c Var 'clues_left_on_00002_00008' direct represents '1' with '6120'
c Var 'clues_left_on_00002_00008' order represents '1' with '1'
c Var 'clues_left_on_00002_00008' order represents '0' with '-6120'
6120 -6120 0
c Encoding variable: clues_left_on_00002_00009 with domain: bool (representing constraint )
c Var 'clues_left_on_00002_00009' direct represents '0' with '-6121'
c Var 'clues_left_on_00002_00009' direct represents '1' with '6121'
c Var 'clues_left_on_00002_00009' order represents '1' with '1'
c Var 'clues_left_on_00002_00009' order represents '0' with '-6121'
6121 -6121 0
c Encoding variable: clues_left_on_00003_00001 with domain: bool (representing constraint )
c Var 'clues_left_on_00003_00001' direct represents '0' with '-6122'
c Var 'clues_left_on_00003_00001' direct represents '1' with '6122'
c Var 'clues_left_on_00003_00001' order represents '1' with '1'
c Var 'clues_left_on_00003_00001' order represents '0' with '-6122'
6122 -6122 0
c Encoding variable: clues_left_on_00003_00002 with domain: bool (representing constraint )
c Var 'clues_left_on_00003_00002' direct represents '0' with '-6123'
c Var 'clues_left_on_00003_00002' direct represents '1' with '6123'
c Var 'clues_left_on_00003_00002' order represents '1' with '1'
c Var 'clues_left_on_00003_00002' order represents '0' with '-6123'
c Encoding variable: clues_left_on_00003_00003 with domain: bool (representing constraint )
c Var 'clues_left_on_00003_00003' direct represents '0' with '-6124'
c Var 'clues_left_on_00003_00003' direct represents '1' with '6124'
c Var 'clues_left_on_00003_00003' order represents '1' with '1'
c Var 'clues_left_on_00003_00003' order represents '0' with '-6124'
6124 -6124 0
c Encoding variable: clues_left_on_00003_00004 with domain: bool (representing constraint )
c Var 'clues_left_on_00003_00004' direct represents '0' with '-6125'
c Var 'clues_left_on_00003_00004' direct represents '1' with '6125'
c Var 'clues_left_on_00003_00004' order represents '1' with '1'
c Var 'clues_left_on_00003_00004' order represents '0' with '-6125'
c Encoding variable: clues_left_on_00003_00005 with domain: bool (representing constraint )
c Var 'clues_left_on_00003_00005' direct represents '0' with '-6126'
c Var 'clues_left_on_00003_00005' direct represents '1' with '6126'
c Var 'clues_left_on_00003_00005' order represents '1' with '1'
c Var 'clues_left_on_00003_00005' order represents '0' with '-6126'
6126 -6126 0
c Encoding variable: clues_left_on_00003_00006 with domain: bool (representing constraint )
c Var 'clues_left_on_00003_00006' direct represents '0' with '-6127'
c Var 'clues_left_on_00003_00006' direct represents '1' with '6127'
c Var 'clues_left_on_00003_00006' order represents '1' with '1'
c Var 'clues_left_on_00003_00006' order represents '0' with '-6127'
c Encoding variable: clues_left_on_00003_00007 with domain: bool (representing constraint )
c Var 'clues_left_on_00003_00007' direct represents '0' with '-6128'
c Var 'clues_left_on_00003_00007' direct represents '1' with '6128'
c Var 'clues_left_on_00003_00007' order represents '1' with '1'
c Var 'clues_left_on_00003_00007' order represents '0' with '-6128'
6128 -6128 0
c Encoding variable: clues_left_on_00003_00008 with domain: bool (representing constraint )
c Var 'clues_left_on_00003_00008' direct represents '0' with '-6129'
c Var 'clues_left_on_00003_00008' direct represents '1' with '6129'
c Var 'clues_left_on_00003_00008' order represents '1' with '1'
c Var 'clues_left_on_00003_00008' order represents '0' with '-6129'
c Encoding variable: clues_left_on_00003_00009 with domain: bool (representing constraint )
c Var 'clues_left_on_00003_00009' direct represents '0' with '-6130'
c Var 'clues_left_on_00003_00009' direct represents '1' with '6130'
c Var 'clues_left_on_00003_00009' order represents '1' with '1'
c Var 'clues_left_on_00003_00009' order represents '0' with '-6130'
6130 -6130 0
c Encoding variable: clues_left_on_00004_00001 with domain: bool (representing constraint )
c Var 'clues_left_on_00004_00001' direct represents '0' with '-6131'
c Var 'clues_left_on_00004_00001' direct represents '1' with '6131'
c Var 'clues_left_on_00004_00001' order represents '1' with '1'
c Var 'clues_left_on_00004_00001' order represents '0' with '-6131'
6131 -6131 0
c Encoding variable: clues_left_on_00004_00002 with domain: bool (representing constraint )
c Var 'clues_left_on_00004_00002' direct represents '0' with '-6132'
c Var 'clues_left_on_00004_00002' direct represents '1' with '6132'
c Var 'clues_left_on_00004_00002' order represents '1' with '1'
c Var 'clues_left_on_00004_00002' order represents '0' with '-6132'
c Encoding variable: clues_left_on_00004_00003 with domain: bool (representing constraint )
c Var 'clues_left_on_00004_00003' direct represents '0' with '-6133'
c Var 'clues_left_on_00004_00003' direct represents '1' with '6133'
c Var 'clues_left_on_00004_00003' order represents '1' with '1'
c Var 'clues_left_on_00004_00003' order represents '0' with '-6133'
6133 -6133 0
c Encoding variable: clues_left_on_00004_00004 with domain: bool (representing constraint )
c Var 'clues_left_on_00004_00004' direct represents '0' with '-6134'
c Var 'clues_left_on_00004_00004' direct represents '1' with '6134'
c Var 'clues_left_on_00004_00004' order represents '1' with '1'
c Var 'clues_left_on_00004_00004' order represents '0' with '-6134'
c Encoding variable: clues_left_on_00004_00005 with domain: bool (representing constraint )
c Var 'clues_left_on_00004_00005' direct represents '0' with '-6135'
c Var 'clues_left_on_00004_00005' direct represents '1' with '6135'
c Var 'clues_left_on_00004_00005' order represents '1' with '1'
c Var 'clues_left_on_00004_00005' order represents '0' with '-6135'
6135 -6135 0
c Encoding variable: clues_left_on_00004_00006 with domain: bool (representing constraint )
c Var 'clues_left_on_00004_00006' direct represents '0' with '-6136'
c Var 'clues_left_on_00004_00006' direct represents '1' with '6136'
c Var 'clues_left_on_00004_00006' order represents '1' with '1'
c Var 'clues_left_on_00004_00006' order represents '0' with '-6136'
6136 -6136 0
c Encoding variable: clues_left_on_00004_00007 with domain: bool (representing constraint )
c Var 'clues_left_on_00004_00007' direct represents '0' with '-6137'
c Var 'clues_left_on_00004_00007' direct represents '1' with '6137'
c Var 'clues_left_on_00004_00007' order represents '1' with '1'
c Var 'clues_left_on_00004_00007' order represents '0' with '-6137'
c Encoding variable: clues_left_on_00004_00008 with domain: bool (representing constraint )
c Var 'clues_left_on_00004_00008' direct represents '0' with '-6138'
c Var 'clues_left_on_00004_00008' direct represents '1' with '6138'
c Var 'clues_left_on_00004_00008' order represents '1' with '1'
c Var 'clues_left_on_00004_00008' order represents '0' with '-6138'
6138 -6138 0
c Encoding variable: clues_left_on_00004_00009 with domain: bool (representing constraint )
c Var 'clues_left_on_00004_00009' direct represents '0' with '-6139'
c Var 'clues_left_on_00004_00009' direct represents '1' with '6139'
c Var 'clues_left_on_00004_00009' order represents '1' with '1'
c Var 'clues_left_on_00004_00009' order represents '0' with '-6139'
6139 -6139 0
c Encoding variable: aux0 with domain: int(0..9) (representing constraint (variant_fields_00001_00002_00002 * (2<=variant_fields_00001_00002_00001)))
c Both direct and order encoding.
c Var 'aux0' order represents '0' with '6140'
c Var 'aux0' direct represents '0' with '6140'
c Var 'aux0' order represents '1' with '6141'
-6140 6141 0
c Var 'aux0' direct represents '1' with '6142'
6140 -6141 6142 0
-6142 6141 0
-6142 -6140 0
c Var 'aux0' order represents '2' with '6143'
-6141 6143 0
c Var 'aux0' direct represents '2' with '6144'
6141 -6143 6144 0
-6144 6143 0
-6144 -6141 0
c Var 'aux0' order represents '3' with '6145'
-6143 6145 0
c Var 'aux0' direct represents '3' with '6146'
6143 -6145 6146 0
-6146 6145 0
-6146 -6143 0
c Var 'aux0' order represents '4' with '6147'
-6145 6147 0
c Var 'aux0' direct represents '4' with '6148'
6145 -6147 6148 0
-6148 6147 0
-6148 -6145 0
c Var 'aux0' order represents '5' with '6149'
-6147 6149 0
c Var 'aux0' direct represents '5' with '6150'
6147 -6149 6150 0
-6150 6149 0
-6150 -6147 0
c Var 'aux0' order represents '6' with '6151'
-6149 6151 0
c Var 'aux0' direct represents '6' with '6152'
6149 -6151 6152 0
-6152 6151 0
-6152 -6149 0
c Var 'aux0' order represents '7' with '6153'
-6151 6153 0
c Var 'aux0' direct represents '7' with '6154'
6151 -6153 6154 0
-6154 6153 0
-6154 -6151 0
c Var 'aux0' order represents '8' with '6155'
-6153 6155 0
c Var 'aux0' direct represents '8' with '6156'
6153 -6155 6156 0
-6156 6155 0
-6156 -6153 0
c Var 'aux0' direct represents '9' with '-6155'
6140 6142 6144 6146 6148 6150 6152 6154 6156 -6155 0
c Encoding variable: aux1 with domain: int(0..9) (representing constraint (variant_fields_00001_00002_00003 * (3<=variant_fields_00001_00002_00001)))
c Both direct and order encoding.
c Var 'aux1' order represents '0' with '6157'
c Var 'aux1' direct represents '0' with '6157'
c Var 'aux1' order represents '1' with '6158'
-6157 6158 0
c Var 'aux1' direct represents '1' with '6159'
6157 -6158 6159 0
-6159 6158 0
-6159 -6157 0
c Var 'aux1' order represents '2' with '6160'
-6158 6160 0
c Var 'aux1' direct represents '2' with '6161'
6158 -6160 6161 0
-6161 6160 0
-6161 -6158 0
c Var 'aux1' order represents '3' with '6162'
-6160 6162 0
c Var 'aux1' direct represents '3' with '6163'
6160 -6162 6163 0
-6163 6162 0
-6163 -6160 0
c Var 'aux1' order represents '4' with '6164'
-6162 6164 0
c Var 'aux1' direct represents '4' with '6165'
6162 -6164 6165 0
-6165 6164 0
-6165 -6162 0
c Var 'aux1' order represents '5' with '6166'
-6164 6166 0
c Var 'aux1' direct represents '5' with '6167'
6164 -6166 6167 0
-6167 6166 0
-6167 -6164 0
c Var 'aux1' order represents '6' with '6168'
-6166 6168 0
c Var 'aux1' direct represents '6' with '6169'
6166 -6168 6169 0
-6169 6168 0
-6169 -6166 0
c Var 'aux1' order represents '7' with '6170'
-6168 6170 0
c Var 'aux1' direct represents '7' with '6171'
6168 -6170 6171 0
-6171 6170 0
-6171 -6168 0
c Var 'aux1' order represents '8' with '6172'
-6170 6172 0
c Var 'aux1' direct represents '8' with '6173'
6170 -6172 6173 0
-6173 6172 0
-6173 -6170 0
c Var 'aux1' direct represents '9' with '-6172'
6157 6159 6161 6163 6165 6167 6169 6171 6173 -6172 0
c Encoding variable: aux2 with domain: int(0..9) (representing constraint (variant_fields_00001_00002_00004 * (4<=variant_fields_00001_00002_00001)))
c Both direct and order encoding.
c Var 'aux2' order represents '0' with '6174'
c Var 'aux2' direct represents '0' with '6174'
c Var 'aux2' order represents '1' with '6175'
-6174 6175 0
c Var 'aux2' direct represents '1' with '6176'
6174 -6175 6176 0
-6176 6175 0
-6176 -6174 0
c Var 'aux2' order represents '2' with '6177'
-6175 6177 0
c Var 'aux2' direct represents '2' with '6178'
6175 -6177 6178 0
-6178 6177 0
-6178 -6175 0
c Var 'aux2' order represents '3' with '6179'
-6177 6179 0
c Var 'aux2' direct represents '3' with '6180'
6177 -6179 6180 0
-6180 6179 0
-6180 -6177 0
c Var 'aux2' order represents '4' with '6181'
-6179 6181 0
c Var 'aux2' direct represents '4' with '6182'
6179 -6181 6182 0
-6182 6181 0
-6182 -6179 0
c Var 'aux2' order represents '5' with '6183'
-6181 6183 0
c Var 'aux2' direct represents '5' with '6184'
6181 -6183 6184 0
-6184 6183 0
-6184 -6181 0
c Var 'aux2' order represents '6' with '6185'
-6183 6185 0
c Var 'aux2' direct represents '6' with '6186'
6183 -6185 6186 0
-6186 6185 0
-6186 -6183 0
c Var 'aux2' order represents '7' with '6187'
-6185 6187 0
c Var 'aux2' direct represents '7' with '6188'
6185 -6187 6188 0
-6188 6187 0
-6188 -6185 0
c Var 'aux2' order represents '8' with '6189'
-6187 6189 0
c Var 'aux2' direct represents '8' with '6190'
6187 -6189 6190 0
-6190 6189 0
-6190 -6187 0
c Var 'aux2' direct represents '9' with '-6189'
6174 6176 6178 6180 6182 6184 6186 6188 6190 -6189 0
c Encoding variable: aux3 with domain: int(0..9) (representing constraint (variant_fields_00001_00002_00005 * (5<=variant_fields_00001_00002_00001)))
c Both direct and order encoding.
c Var 'aux3' order represents '0' with '6191'
c Var 'aux3' direct represents '0' with '6191'
c Var 'aux3' order represents '1' with '6192'
-6191 6192 0
c Var 'aux3' direct represents '1' with '6193'
6191 -6192 6193 0
-6193 6192 0
-6193 -6191 0
c Var 'aux3' order represents '2' with '6194'
-6192 6194 0
c Var 'aux3' direct represents '2' with '6195'
6192 -6194 6195 0
-6195 6194 0
-6195 -6192 0
c Var 'aux3' order represents '3' with '6196'
-6194 6196 0
c Var 'aux3' direct represents '3' with '6197'
6194 -6196 6197 0
-6197 6196 0
-6197 -6194 0
c Var 'aux3' order represents '4' with '6198'
-6196 6198 0
c Var 'aux3' direct represents '4' with '6199'
6196 -6198 6199 0
-6199 6198 0
-6199 -6196 0
c Var 'aux3' order represents '5' with '6200'
-6198 6200 0
c Var 'aux3' direct represents '5' with '6201'
6198 -6200 6201 0
-6201 6200 0
-6201 -6198 0
c Var 'aux3' order represents '6' with '6202'
-6200 6202 0
c Var 'aux3' direct represents '6' with '6203'
6200 -6202 6203 0
-6203 6202 0
-6203 -6200 0
c Var 'aux3' order represents '7' with '6204'
-6202 6204 0
c Var 'aux3' direct represents '7' with '6205'
6202 -6204 6205 0
-6205 6204 0
-6205 -6202 0
c Var 'aux3' order represents '8' with '6206'
-6204 6206 0
c Var 'aux3' direct represents '8' with '6207'
6204 -6206 6207 0
-6207 6206 0
-6207 -6204 0
c Var 'aux3' direct represents '9' with '-6206'
6191 6193 6195 6197 6199 6201 6203 6205 6207 -6206 0
c Encoding variable: aux4 with domain: int(0..9) (representing constraint (variant_fields_00001_00002_00006 * (6<=variant_fields_00001_00002_00001)))
c Both direct and order encoding.
c Var 'aux4' order represents '0' with '6208'
c Var 'aux4' direct represents '0' with '6208'
c Var 'aux4' order represents '1' with '6209'
-6208 6209 0
c Var 'aux4' direct represents '1' with '6210'
6208 -6209 6210 0
-6210 6209 0
-6210 -6208 0
c Var 'aux4' order represents '2' with '6211'
-6209 6211 0
c Var 'aux4' direct represents '2' with '6212'
6209 -6211 6212 0
-6212 6211 0
-6212 -6209 0
c Var 'aux4' order represents '3' with '6213'
-6211 6213 0
c Var 'aux4' direct represents '3' with '6214'
6211 -6213 6214 0
-6214 6213 0
-6214 -6211 0
c Var 'aux4' order represents '4' with '6215'
-6213 6215 0
c Var 'aux4' direct represents '4' with '6216'
6213 -6215 6216 0
-6216 6215 0
-6216 -6213 0
c Var 'aux4' order represents '5' with '6217'
-6215 6217 0
c Var 'aux4' direct represents '5' with '6218'
6215 -6217 6218 0
-6218 6217 0
-6218 -6215 0
c Var 'aux4' order represents '6' with '6219'
-6217 6219 0
c Var 'aux4' direct represents '6' with '6220'
6217 -6219 6220 0
-6220 6219 0
-6220 -6217 0
c Var 'aux4' order represents '7' with '6221'
-6219 6221 0
c Var 'aux4' direct represents '7' with '6222'
6219 -6221 6222 0
-6222 6221 0
-6222 -6219 0
c Var 'aux4' order represents '8' with '6223'
-6221 6223 0
c Var 'aux4' direct represents '8' with '6224'
6221 -6223 6224 0
-6224 6223 0
-6224 -6221 0
c Var 'aux4' direct represents '9' with '-6223'
6208 6210 6212 6214 6216 6218 6220 6222 6224 -6223 0
c Encoding variable: aux5 with domain: int(0..9) (representing constraint (variant_fields_00001_00002_00007 * (7<=variant_fields_00001_00002_00001)))
c Both direct and order encoding.
c Var 'aux5' order represents '0' with '6225'
c Var 'aux5' direct represents '0' with '6225'
c Var 'aux5' order represents '1' with '6226'
-6225 6226 0
c Var 'aux5' direct represents '1' with '6227'
6225 -6226 6227 0
-6227 6226 0
-6227 -6225 0
c Var 'aux5' order represents '2' with '6228'
-6226 6228 0
c Var 'aux5' direct represents '2' with '6229'
6226 -6228 6229 0
-6229 6228 0
-6229 -6226 0
c Var 'aux5' order represents '3' with '6230'
-6228 6230 0
c Var 'aux5' direct represents '3' with '6231'
6228 -6230 6231 0
-6231 6230 0
-6231 -6228 0
c Var 'aux5' order represents '4' with '6232'
-6230 6232 0
c Var 'aux5' direct represents '4' with '6233'
6230 -6232 6233 0
-6233 6232 0
-6233 -6230 0
c Var 'aux5' order represents '5' with '6234'
-6232 6234 0
c Var 'aux5' direct represents '5' with '6235'
6232 -6234 6235 0
-6235 6234 0
-6235 -6232 0
c Var 'aux5' order represents '6' with '6236'
-6234 6236 0
c Var 'aux5' direct represents '6' with '6237'
6234 -6236 6237 0
-6237 6236 0
-6237 -6234 0
c Var 'aux5' order represents '7' with '6238'
-6236 6238 0
c Var 'aux5' direct represents '7' with '6239'
6236 -6238 6239 0
-6239 6238 0
-6239 -6236 0
c Var 'aux5' order represents '8' with '6240'
-6238 6240 0
c Var 'aux5' direct represents '8' with '6241'
6238 -6240 6241 0
-6241 6240 0
-6241 -6238 0
c Var 'aux5' direct represents '9' with '-6240'
6225 6227 6229 6231 6233 6235 6237 6239 6241 -6240 0
c Encoding variable: aux6 with domain: int(0..9) (representing constraint (variant_fields_00001_00002_00008 * (8<=variant_fields_00001_00002_00001)))
c Both direct and order encoding.
c Var 'aux6' order represents '0' with '6242'
c Var 'aux6' direct represents '0' with '6242'
c Var 'aux6' order represents '1' with '6243'
-6242 6243 0
c Var 'aux6' direct represents '1' with '6244'
6242 -6243 6244 0
-6244 6243 0
-6244 -6242 0
c Var 'aux6' order represents '2' with '6245'
-6243 6245 0
c Var 'aux6' direct represents '2' with '6246'
6243 -6245 6246 0
-6246 6245 0
-6246 -6243 0
c Var 'aux6' order represents '3' with '6247'
-6245 6247 0
c Var 'aux6' direct represents '3' with '6248'
6245 -6247 6248 0
-6248 6247 0
-6248 -6245 0
c Var 'aux6' order represents '4' with '6249'
-6247 6249 0
c Var 'aux6' direct represents '4' with '6250'
6247 -6249 6250 0
-6250 6249 0
-6250 -6247 0
c Var 'aux6' order represents '5' with '6251'
-6249 6251 0
c Var 'aux6' direct represents '5' with '6252'
6249 -6251 6252 0
-6252 6251 0
-6252 -6249 0
c Var 'aux6' order represents '6' with '6253'
-6251 6253 0
c Var 'aux6' direct represents '6' with '6254'
6251 -6253 6254 0
-6254 6253 0
-6254 -6251 0
c Var 'aux6' order represents '7' with '6255'
-6253 6255 0
c Var 'aux6' direct represents '7' with '6256'
6253 -6255 6256 0
-6256 6255 0
-6256 -6253 0
c Var 'aux6' order represents '8' with '6257'
-6255 6257 0
c Var 'aux6' direct represents '8' with '6258'
6255 -6257 6258 0
-6258 6257 0
-6258 -6255 0
c Var 'aux6' direct represents '9' with '-6257'
6242 6244 6246 6248 6250 6252 6254 6256 6258 -6257 0
c Encoding variable: aux7 with domain: int(0..9) (representing constraint (variant_fields_00001_00002_00009 * (9<=variant_fields_00001_00002_00001)))
c Both direct and order encoding.
c Var 'aux7' order represents '0' with '6259'
c Var 'aux7' direct represents '0' with '6259'
c Var 'aux7' order represents '1' with '6260'
-6259 6260 0
c Var 'aux7' direct represents '1' with '6261'
6259 -6260 6261 0
-6261 6260 0
-6261 -6259 0
c Var 'aux7' order represents '2' with '6262'
-6260 6262 0
c Var 'aux7' direct represents '2' with '6263'
6260 -6262 6263 0
-6263 6262 0
-6263 -6260 0
c Var 'aux7' order represents '3' with '6264'
-6262 6264 0
c Var 'aux7' direct represents '3' with '6265'
6262 -6264 6265 0
-6265 6264 0
-6265 -6262 0
c Var 'aux7' order represents '4' with '6266'
-6264 6266 0
c Var 'aux7' direct represents '4' with '6267'
6264 -6266 6267 0
-6267 6266 0
-6267 -6264 0
c Var 'aux7' order represents '5' with '6268'
-6266 6268 0
c Var 'aux7' direct represents '5' with '6269'
6266 -6268 6269 0
-6269 6268 0
-6269 -6266 0
c Var 'aux7' order represents '6' with '6270'
-6268 6270 0
c Var 'aux7' direct represents '6' with '6271'
6268 -6270 6271 0
-6271 6270 0
-6271 -6268 0
c Var 'aux7' order represents '7' with '6272'
-6270 6272 0
c Var 'aux7' direct represents '7' with '6273'
6270 -6272 6273 0
-6273 6272 0
-6273 -6270 0
c Var 'aux7' order represents '8' with '6274'
-6272 6274 0
c Var 'aux7' direct represents '8' with '6275'
6272 -6274 6275 0
-6275 6274 0
-6275 -6272 0
c Var 'aux7' direct represents '9' with '-6274'
6259 6261 6263 6265 6267 6269 6271 6273 6275 -6274 0
c Encoding variable: aux8 with domain: bool (representing constraint ((variant_fields_00001_00002_00001 + aux0 + aux1 + aux2 + aux3 + aux4 + aux5 + aux6 + aux7)=tv=8))
c Var 'aux8' direct represents '0' with '-6276'
c Var 'aux8' direct represents '1' with '6276'
c Var 'aux8' order represents '1' with '1'
c Var 'aux8' order represents '0' with '-6276'
c Encoding variable: aux9 with domain: int(0..9) (representing constraint ((2<=variant_fields_00001_00004_00001) * variant_fields_00001_00004_00002))
c Both direct and order encoding.
c Var 'aux9' order represents '0' with '6277'
c Var 'aux9' direct represents '0' with '6277'
c Var 'aux9' order represents '1' with '6278'
-6277 6278 0
c Var 'aux9' direct represents '1' with '6279'
6277 -6278 6279 0
-6279 6278 0
-6279 -6277 0
c Var 'aux9' order represents '2' with '6280'
-6278 6280 0
c Var 'aux9' direct represents '2' with '6281'
6278 -6280 6281 0
-6281 6280 0
-6281 -6278 0
c Var 'aux9' order represents '3' with '6282'
-6280 6282 0
c Var 'aux9' direct represents '3' with '6283'
6280 -6282 6283 0
-6283 6282 0
-6283 -6280 0
c Var 'aux9' order represents '4' with '6284'
-6282 6284 0
c Var 'aux9' direct represents '4' with '6285'
6282 -6284 6285 0
-6285 6284 0
-6285 -6282 0
c Var 'aux9' order represents '5' with '6286'
-6284 6286 0
c Var 'aux9' direct represents '5' with '6287'
6284 -6286 6287 0
-6287 6286 0
-6287 -6284 0
c Var 'aux9' order represents '6' with '6288'
-6286 6288 0
c Var 'aux9' direct represents '6' with '6289'
6286 -6288 6289 0
-6289 6288 0
-6289 -6286 0
c Var 'aux9' order represents '7' with '6290'
-6288 6290 0
c Var 'aux9' direct represents '7' with '6291'
6288 -6290 6291 0
-6291 6290 0
-6291 -6288 0
c Var 'aux9' order represents '8' with '6292'
-6290 6292 0
c Var 'aux9' direct represents '8' with '6293'
6290 -6292 6293 0
-6293 6292 0
-6293 -6290 0
c Var 'aux9' direct represents '9' with '-6292'
6277 6279 6281 6283 6285 6287 6289 6291 6293 -6292 0
c Encoding variable: aux10 with domain: int(0..9) (representing constraint ((3<=variant_fields_00001_00004_00001) * variant_fields_00001_00004_00003))
c Both direct and order encoding.
c Var 'aux10' order represents '0' with '6294'
c Var 'aux10' direct represents '0' with '6294'
c Var 'aux10' order represents '1' with '6295'
-6294 6295 0
c Var 'aux10' direct represents '1' with '6296'
6294 -6295 6296 0
-6296 6295 0
-6296 -6294 0
c Var 'aux10' order represents '2' with '6297'
-6295 6297 0
c Var 'aux10' direct represents '2' with '6298'
6295 -6297 6298 0
-6298 6297 0
-6298 -6295 0
c Var 'aux10' order represents '3' with '6299'
-6297 6299 0
c Var 'aux10' direct represents '3' with '6300'
6297 -6299 6300 0
-6300 6299 0
-6300 -6297 0
c Var 'aux10' order represents '4' with '6301'
-6299 6301 0
c Var 'aux10' direct represents '4' with '6302'
6299 -6301 6302 0
-6302 6301 0
-6302 -6299 0
c Var 'aux10' order represents '5' with '6303'
-6301 6303 0
c Var 'aux10' direct represents '5' with '6304'
6301 -6303 6304 0
-6304 6303 0
-6304 -6301 0
c Var 'aux10' order represents '6' with '6305'
-6303 6305 0
c Var 'aux10' direct represents '6' with '6306'
6303 -6305 6306 0
-6306 6305 0
-6306 -6303 0
c Var 'aux10' order represents '7' with '6307'
-6305 6307 0
c Var 'aux10' direct represents '7' with '6308'
6305 -6307 6308 0
-6308 6307 0
-6308 -6305 0
c Var 'aux10' order represents '8' with '6309'
-6307 6309 0
c Var 'aux10' direct represents '8' with '6310'
6307 -6309 6310 0
-6310 6309 0
-6310 -6307 0
c Var 'aux10' direct represents '9' with '-6309'
6294 6296 6298 6300 6302 6304 6306 6308 6310 -6309 0
c Encoding variable: aux11 with domain: int(0..9) (representing constraint ((4<=variant_fields_00001_00004_00001) * variant_fields_00001_00004_00004))
c Both direct and order encoding.
c Var 'aux11' order represents '0' with '6311'
c Var 'aux11' direct represents '0' with '6311'
c Var 'aux11' order represents '1' with '6312'
-6311 6312 0
c Var 'aux11' direct represents '1' with '6313'
6311 -6312 6313 0
-6313 6312 0
-6313 -6311 0
c Var 'aux11' order represents '2' with '6314'
-6312 6314 0
c Var 'aux11' direct represents '2' with '6315'
6312 -6314 6315 0
-6315 6314 0
-6315 -6312 0
c Var 'aux11' order represents '3' with '6316'
-6314 6316 0
c Var 'aux11' direct represents '3' with '6317'
6314 -6316 6317 0
-6317 6316 0
-6317 -6314 0
c Var 'aux11' order represents '4' with '6318'
-6316 6318 0
c Var 'aux11' direct represents '4' with '6319'
6316 -6318 6319 0
-6319 6318 0
-6319 -6316 0
c Var 'aux11' order represents '5' with '6320'
-6318 6320 0
c Var 'aux11' direct represents '5' with '6321'
6318 -6320 6321 0
-6321 6320 0
-6321 -6318 0
c Var 'aux11' order represents '6' with '6322'
-6320 6322 0
c Var 'aux11' direct represents '6' with '6323'
6320 -6322 6323 0
-6323 6322 0
-6323 -6320 0
c Var 'aux11' order represents '7' with '6324'
-6322 6324 0
c Var 'aux11' direct represents '7' with '6325'
6322 -6324 6325 0
-6325 6324 0
-6325 -6322 0
c Var 'aux11' order represents '8' with '6326'
-6324 6326 0
c Var 'aux11' direct represents '8' with '6327'
6324 -6326 6327 0
-6327 6326 0
-6327 -6324 0
c Var 'aux11' direct represents '9' with '-6326'
6311 6313 6315 6317 6319 6321 6323 6325 6327 -6326 0
c Encoding variable: aux12 with domain: int(0..9) (representing constraint ((5<=variant_fields_00001_00004_00001) * variant_fields_00001_00004_00005))
c Both direct and order encoding.
c Var 'aux12' order represents '0' with '6328'
c Var 'aux12' direct represents '0' with '6328'
c Var 'aux12' order represents '1' with '6329'
-6328 6329 0
c Var 'aux12' direct represents '1' with '6330'
6328 -6329 6330 0
-6330 6329 0
-6330 -6328 0
c Var 'aux12' order represents '2' with '6331'
-6329 6331 0
c Var 'aux12' direct represents '2' with '6332'
6329 -6331 6332 0
-6332 6331 0
-6332 -6329 0
c Var 'aux12' order represents '3' with '6333'
-6331 6333 0
c Var 'aux12' direct represents '3' with '6334'
6331 -6333 6334 0
-6334 6333 0
-6334 -6331 0
c Var 'aux12' order represents '4' with '6335'
-6333 6335 0
c Var 'aux12' direct represents '4' with '6336'
6333 -6335 6336 0
-6336 6335 0
-6336 -6333 0
c Var 'aux12' order represents '5' with '6337'
-6335 6337 0
c Var 'aux12' direct represents '5' with '6338'
6335 -6337 6338 0
-6338 6337 0
-6338 -6335 0
c Var 'aux12' order represents '6' with '6339'
-6337 6339 0
c Var 'aux12' direct represents '6' with '6340'
6337 -6339 6340 0
-6340 6339 0
-6340 -6337 0
c Var 'aux12' order represents '7' with '6341'
-6339 6341 0
c Var 'aux12' direct represents '7' with '6342'
6339 -6341 6342 0
-6342 6341 0
-6342 -6339 0
c Var 'aux12' order represents '8' with '6343'
-6341 6343 0
c Var 'aux12' direct represents '8' with '6344'
6341 -6343 6344 0
-6344 6343 0
-6344 -6341 0
c Var 'aux12' direct represents '9' with '-6343'
6328 6330 6332 6334 6336 6338 6340 6342 6344 -6343 0
c Encoding variable: aux13 with domain: int(0..9) (representing constraint ((6<=variant_fields_00001_00004_00001) * variant_fields_00001_00004_00006))
c Both direct and order encoding.
c Var 'aux13' order represents '0' with '6345'
c Var 'aux13' direct represents '0' with '6345'
c Var 'aux13' order represents '1' with '6346'
-6345 6346 0
c Var 'aux13' direct represents '1' with '6347'
6345 -6346 6347 0
-6347 6346 0
-6347 -6345 0
c Var 'aux13' order represents '2' with '6348'
-6346 6348 0
c Var 'aux13' direct represents '2' with '6349'
6346 -6348 6349 0
-6349 6348 0
-6349 -6346 0
c Var 'aux13' order represents '3' with '6350'
-6348 6350 0
c Var 'aux13' direct represents '3' with '6351'
6348 -6350 6351 0
-6351 6350 0
-6351 -6348 0
c Var 'aux13' order represents '4' with '6352'
-6350 6352 0
c Var 'aux13' direct represents '4' with '6353'
6350 -6352 6353 0
-6353 6352 0
-6353 -6350 0
c Var 'aux13' order represents '5' with '6354'
-6352 6354 0
c Var 'aux13' direct represents '5' with '6355'
6352 -6354 6355 0
-6355 6354 0
-6355 -6352 0
c Var 'aux13' order represents '6' with '6356'
-6354 6356 0
c Var 'aux13' direct represents '6' with '6357'
6354 -6356 6357 0
-6357 6356 0
-6357 -6354 0
c Var 'aux13' order represents '7' with '6358'
-6356 6358 0
c Var 'aux13' direct represents '7' with '6359'
6356 -6358 6359 0
-6359 6358 0
-6359 -6356 0
c Var 'aux13' order represents '8' with '6360'
-6358 6360 0
c Var 'aux13' direct represents '8' with '6361'
6358 -6360 6361 0
-6361 6360 0
-6361 -6358 0
c Var 'aux13' direct represents '9' with '-6360'
6345 6347 6349 6351 6353 6355 6357 6359 6361 -6360 0
c Encoding variable: aux14 with domain: int(0..9) (representing constraint ((7<=variant_fields_00001_00004_00001) * variant_fields_00001_00004_00007))
c Both direct and order encoding.
c Var 'aux14' order represents '0' with '6362'
c Var 'aux14' direct represents '0' with '6362'
c Var 'aux14' order represents '1' with '6363'
-6362 6363 0
c Var 'aux14' direct represents '1' with '6364'
6362 -6363 6364 0
-6364 6363 0
-6364 -6362 0
c Var 'aux14' order represents '2' with '6365'
-6363 6365 0
c Var 'aux14' direct represents '2' with '6366'
6363 -6365 6366 0
-6366 6365 0
-6366 -6363 0
c Var 'aux14' order represents '3' with '6367'
-6365 6367 0
c Var 'aux14' direct represents '3' with '6368'
6365 -6367 6368 0
-6368 6367 0
-6368 -6365 0
c Var 'aux14' order represents '4' with '6369'
-6367 6369 0
c Var 'aux14' direct represents '4' with '6370'
6367 -6369 6370 0
-6370 6369 0
-6370 -6367 0
c Var 'aux14' order represents '5' with '6371'
-6369 6371 0
c Var 'aux14' direct represents '5' with '6372'
6369 -6371 6372 0
-6372 6371 0
-6372 -6369 0
c Var 'aux14' order represents '6' with '6373'
-6371 6373 0
c Var 'aux14' direct represents '6' with '6374'
6371 -6373 6374 0
-6374 6373 0
-6374 -6371 0
c Var 'aux14' order represents '7' with '6375'
-6373 6375 0
c Var 'aux14' direct represents '7' with '6376'
6373 -6375 6376 0
-6376 6375 0
-6376 -6373 0
c Var 'aux14' order represents '8' with '6377'
-6375 6377 0
c Var 'aux14' direct represents '8' with '6378'
6375 -6377 6378 0
-6378 6377 0
-6378 -6375 0
c Var 'aux14' direct represents '9' with '-6377'
6362 6364 6366 6368 6370 6372 6374 6376 6378 -6377 0
c Encoding variable: aux15 with domain: int(0..9) (representing constraint ((8<=variant_fields_00001_00004_00001) * variant_fields_00001_00004_00008))
c Both direct and order encoding.
c Var 'aux15' order represents '0' with '6379'
c Var 'aux15' direct represents '0' with '6379'
c Var 'aux15' order represents '1' with '6380'
-6379 6380 0
c Var 'aux15' direct represents '1' with '6381'
6379 -6380 6381 0
-6381 6380 0
-6381 -6379 0
c Var 'aux15' order represents '2' with '6382'
-6380 6382 0
c Var 'aux15' direct represents '2' with '6383'
6380 -6382 6383 0
-6383 6382 0
-6383 -6380 0
c Var 'aux15' order represents '3' with '6384'
-6382 6384 0
c Var 'aux15' direct represents '3' with '6385'
6382 -6384 6385 0
-6385 6384 0
-6385 -6382 0
c Var 'aux15' order represents '4' with '6386'
-6384 6386 0
c Var 'aux15' direct represents '4' with '6387'
6384 -6386 6387 0
-6387 6386 0
-6387 -6384 0
c Var 'aux15' order represents '5' with '6388'
-6386 6388 0
c Var 'aux15' direct represents '5' with '6389'
6386 -6388 6389 0
-6389 6388 0
-6389 -6386 0
c Var 'aux15' order represents '6' with '6390'
-6388 6390 0
c Var 'aux15' direct represents '6' with '6391'
6388 -6390 6391 0
-6391 6390 0
-6391 -6388 0
c Var 'aux15' order represents '7' with '6392'
-6390 6392 0
c Var 'aux15' direct represents '7' with '6393'
6390 -6392 6393 0
-6393 6392 0
-6393 -6390 0
c Var 'aux15' order represents '8' with '6394'
-6392 6394 0
c Var 'aux15' direct represents '8' with '6395'
6392 -6394 6395 0
-6395 6394 0
-6395 -6392 0
c Var 'aux15' direct represents '9' with '-6394'
6379 6381 6383 6385 6387 6389 6391 6393 6395 -6394 0
c Encoding variable: aux16 with domain: int(0..9) (representing constraint ((9<=variant_fields_00001_00004_00001) * variant_fields_00001_00004_00009))
c Both direct and order encoding.
c Var 'aux16' order represents '0' with '6396'
c Var 'aux16' direct represents '0' with '6396'
c Var 'aux16' order represents '1' with '6397'
-6396 6397 0
c Var 'aux16' direct represents '1' with '6398'
6396 -6397 6398 0
-6398 6397 0
-6398 -6396 0
c Var 'aux16' order represents '2' with '6399'
-6397 6399 0
c Var 'aux16' direct represents '2' with '6400'
6397 -6399 6400 0
-6400 6399 0
-6400 -6397 0
c Var 'aux16' order represents '3' with '6401'
-6399 6401 0
c Var 'aux16' direct represents '3' with '6402'
6399 -6401 6402 0
-6402 6401 0
-6402 -6399 0
c Var 'aux16' order represents '4' with '6403'
-6401 6403 0
c Var 'aux16' direct represents '4' with '6404'
6401 -6403 6404 0
-6404 6403 0
-6404 -6401 0
c Var 'aux16' order represents '5' with '6405'
-6403 6405 0
c Var 'aux16' direct represents '5' with '6406'
6403 -6405 6406 0
-6406 6405 0
-6406 -6403 0
c Var 'aux16' order represents '6' with '6407'
-6405 6407 0
c Var 'aux16' direct represents '6' with '6408'
6405 -6407 6408 0
-6408 6407 0
-6408 -6405 0
c Var 'aux16' order represents '7' with '6409'
-6407 6409 0
c Var 'aux16' direct represents '7' with '6410'
6407 -6409 6410 0
-6410 6409 0
-6410 -6407 0
c Var 'aux16' order represents '8' with '6411'
-6409 6411 0
c Var 'aux16' direct represents '8' with '6412'
6409 -6411 6412 0
-6412 6411 0
-6412 -6409 0
c Var 'aux16' direct represents '9' with '-6411'
6396 6398 6400 6402 6404 6406 6408 6410 6412 -6411 0
c Encoding variable: aux17 with domain: bool (representing constraint ((variant_fields_00001_00004_00001 + aux9 + aux10 + aux11 + aux12 + aux13 + aux14 + aux15 + aux16)=tv=17))
c Var 'aux17' direct represents '0' with '-6413'
c Var 'aux17' direct represents '1' with '6413'
c Var 'aux17' order represents '1' with '1'
c Var 'aux17' order represents '0' with '-6413'
c Encoding variable: aux18 with domain: int(0..9) (representing constraint (variant_fields_00001_00006_00002 * (2<=variant_fields_00001_00006_00001)))
c Both direct and order encoding.
c Var 'aux18' order represents '0' with '6414'
c Var 'aux18' direct represents '0' with '6414'
c Var 'aux18' order represents '1' with '6415'
-6414 6415 0
c Var 'aux18' direct represents '1' with '6416'
6414 -6415 6416 0
-6416 6415 0
-6416 -6414 0
c Var 'aux18' order represents '2' with '6417'
-6415 6417 0
c Var 'aux18' direct represents '2' with '6418'
6415 -6417 6418 0
-6418 6417 0
-6418 -6415 0
c Var 'aux18' order represents '3' with '6419'
-6417 6419 0
c Var 'aux18' direct represents '3' with '6420'
6417 -6419 6420 0
-6420 6419 0
-6420 -6417 0
c Var 'aux18' order represents '4' with '6421'
-6419 6421 0
c Var 'aux18' direct represents '4' with '6422'
6419 -6421 6422 0
-6422 6421 0
-6422 -6419 0
c Var 'aux18' order represents '5' with '6423'
-6421 6423 0
c Var 'aux18' direct represents '5' with '6424'
6421 -6423 6424 0
-6424 6423 0
-6424 -6421 0
c Var 'aux18' order represents '6' with '6425'
-6423 6425 0
c Var 'aux18' direct represents '6' with '6426'
6423 -6425 6426 0
-6426 6425 0
-6426 -6423 0
c Var 'aux18' order represents '7' with '6427'
-6425 6427 0
c Var 'aux18' direct represents '7' with '6428'
6425 -6427 6428 0
-6428 6427 0
-6428 -6425 0
c Var 'aux18' order represents '8' with '6429'
-6427 6429 0
c Var 'aux18' direct represents '8' with '6430'
6427 -6429 6430 0
-6430 6429 0
-6430 -6427 0
c Var 'aux18' direct represents '9' with '-6429'
6414 6416 6418 6420 6422 6424 6426 6428 6430 -6429 0
c Encoding variable: aux19 with domain: int(0..9) (representing constraint (variant_fields_00001_00006_00003 * (3<=variant_fields_00001_00006_00001)))
c Both direct and order encoding.
c Var 'aux19' order represents '0' with '6431'
c Var 'aux19' direct represents '0' with '6431'
c Var 'aux19' order represents '1' with '6432'
-6431 6432 0
c Var 'aux19' direct represents '1' with '6433'
6431 -6432 6433 0
-6433 6432 0
-6433 -6431 0
c Var 'aux19' order represents '2' with '6434'
-6432 6434 0
c Var 'aux19' direct represents '2' with '6435'
6432 -6434 6435 0
-6435 6434 0
-6435 -6432 0
c Var 'aux19' order represents '3' with '6436'
-6434 6436 0
c Var 'aux19' direct represents '3' with '6437'
6434 -6436 6437 0
-6437 6436 0
-6437 -6434 0
c Var 'aux19' order represents '4' with '6438'
-6436 6438 0
c Var 'aux19' direct represents '4' with '6439'
6436 -6438 6439 0
-6439 6438 0
-6439 -6436 0
c Var 'aux19' order represents '5' with '6440'
-6438 6440 0
c Var 'aux19' direct represents '5' with '6441'
6438 -6440 6441 0
-6441 6440 0
-6441 -6438 0
c Var 'aux19' order represents '6' with '6442'
-6440 6442 0
c Var 'aux19' direct represents '6' with '6443'
6440 -6442 6443 0
-6443 6442 0
-6443 -6440 0
c Var 'aux19' order represents '7' with '6444'
-6442 6444 0
c Var 'aux19' direct represents '7' with '6445'
6442 -6444 6445 0
-6445 6444 0
-6445 -6442 0
c Var 'aux19' order represents '8' with '6446'
-6444 6446 0
c Var 'aux19' direct represents '8' with '6447'
6444 -6446 6447 0
-6447 6446 0
-6447 -6444 0
c Var 'aux19' direct represents '9' with '-6446'
6431 6433 6435 6437 6439 6441 6443 6445 6447 -6446 0
c Encoding variable: aux20 with domain: int(0..9) (representing constraint (variant_fields_00001_00006_00004 * (4<=variant_fields_00001_00006_00001)))
c Both direct and order encoding.
c Var 'aux20' order represents '0' with '6448'
c Var 'aux20' direct represents '0' with '6448'
c Var 'aux20' order represents '1' with '6449'
-6448 6449 0
c Var 'aux20' direct represents '1' with '6450'
6448 -6449 6450 0
-6450 6449 0
-6450 -6448 0
c Var 'aux20' order represents '2' with '6451'
-6449 6451 0
c Var 'aux20' direct represents '2' with '6452'
6449 -6451 6452 0
-6452 6451 0
-6452 -6449 0
c Var 'aux20' order represents '3' with '6453'
-6451 6453 0
c Var 'aux20' direct represents '3' with '6454'
6451 -6453 6454 0
-6454 6453 0
-6454 -6451 0
c Var 'aux20' order represents '4' with '6455'
-6453 6455 0
c Var 'aux20' direct represents '4' with '6456'
6453 -6455 6456 0
-6456 6455 0
-6456 -6453 0
c Var 'aux20' order represents '5' with '6457'
-6455 6457 0
c Var 'aux20' direct represents '5' with '6458'
6455 -6457 6458 0
-6458 6457 0
-6458 -6455 0
c Var 'aux20' order represents '6' with '6459'
-6457 6459 0
c Var 'aux20' direct represents '6' with '6460'
6457 -6459 6460 0
-6460 6459 0
-6460 -6457 0
c Var 'aux20' order represents '7' with '6461'
-6459 6461 0
c Var 'aux20' direct represents '7' with '6462'
6459 -6461 6462 0
-6462 6461 0
-6462 -6459 0
c Var 'aux20' order represents '8' with '6463'
-6461 6463 0
c Var 'aux20' direct represents '8' with '6464'
6461 -6463 6464 0
-6464 6463 0
-6464 -6461 0
c Var 'aux20' direct represents '9' with '-6463'
6448 6450 6452 6454 6456 6458 6460 6462 6464 -6463 0
c Encoding variable: aux21 with domain: int(0..9) (representing constraint (variant_fields_00001_00006_00005 * (5<=variant_fields_00001_00006_00001)))
c Both direct and order encoding.
c Var 'aux21' order represents '0' with '6465'
c Var 'aux21' direct represents '0' with '6465'
c Var 'aux21' order represents '1' with '6466'
-6465 6466 0
c Var 'aux21' direct represents '1' with '6467'
6465 -6466 6467 0
-6467 6466 0
-6467 -6465 0
c Var 'aux21' order represents '2' with '6468'
-6466 6468 0
c Var 'aux21' direct represents '2' with '6469'
6466 -6468 6469 0
-6469 6468 0
-6469 -6466 0
c Var 'aux21' order represents '3' with '6470'
-6468 6470 0
c Var 'aux21' direct represents '3' with '6471'
6468 -6470 6471 0
-6471 6470 0
-6471 -6468 0
c Var 'aux21' order represents '4' with '6472'
-6470 6472 0
c Var 'aux21' direct represents '4' with '6473'
6470 -6472 6473 0
-6473 6472 0
-6473 -6470 0
c Var 'aux21' order represents '5' with '6474'
-6472 6474 0
c Var 'aux21' direct represents '5' with '6475'
6472 -6474 6475 0
-6475 6474 0
-6475 -6472 0
c Var 'aux21' order represents '6' with '6476'
-6474 6476 0
c Var 'aux21' direct represents '6' with '6477'
6474 -6476 6477 0
-6477 6476 0
-6477 -6474 0
c Var 'aux21' order represents '7' with '6478'
-6476 6478 0
c Var 'aux21' direct represents '7' with '6479'
6476 -6478 6479 0
-6479 6478 0
-6479 -6476 0
c Var 'aux21' order represents '8' with '6480'
-6478 6480 0
c Var 'aux21' direct represents '8' with '6481'
6478 -6480 6481 0
-6481 6480 0
-6481 -6478 0
c Var 'aux21' direct represents '9' with '-6480'
6465 6467 6469 6471 6473 6475 6477 6479 6481 -6480 0
c Encoding variable: aux22 with domain: int(0..9) (representing constraint (variant_fields_00001_00006_00006 * (6<=variant_fields_00001_00006_00001)))
c Both direct and order encoding.
c Var 'aux22' order represents '0' with '6482'
c Var 'aux22' direct represents '0' with '6482'
c Var 'aux22' order represents '1' with '6483'
-6482 6483 0
c Var 'aux22' direct represents '1' with '6484'
6482 -6483 6484 0
-6484 6483 0
-6484 -6482 0
c Var 'aux22' order represents '2' with '6485'
-6483 6485 0
c Var 'aux22' direct represents '2' with '6486'
6483 -6485 6486 0
-6486 6485 0
-6486 -6483 0
c Var 'aux22' order represents '3' with '6487'
-6485 6487 0
c Var 'aux22' direct represents '3' with '6488'
6485 -6487 6488 0
-6488 6487 0
-6488 -6485 0
c Var 'aux22' order represents '4' with '6489'
-6487 6489 0
c Var 'aux22' direct represents '4' with '6490'
6487 -6489 6490 0
-6490 6489 0
-6490 -6487 0
c Var 'aux22' order represents '5' with '6491'
-6489 6491 0
c Var 'aux22' direct represents '5' with '6492'
6489 -6491 6492 0
-6492 6491 0
-6492 -6489 0
c Var 'aux22' order represents '6' with '6493'
-6491 6493 0
c Var 'aux22' direct represents '6' with '6494'
6491 -6493 6494 0
-6494 6493 0
-6494 -6491 0
c Var 'aux22' order represents '7' with '6495'
-6493 6495 0
c Var 'aux22' direct represents '7' with '6496'
6493 -6495 6496 0
-6496 6495 0
-6496 -6493 0
c Var 'aux22' order represents '8' with '6497'
-6495 6497 0
c Var 'aux22' direct represents '8' with '6498'
6495 -6497 6498 0
-6498 6497 0
-6498 -6495 0
c Var 'aux22' direct represents '9' with '-6497'
6482 6484 6486 6488 6490 6492 6494 6496 6498 -6497 0
c Encoding variable: aux23 with domain: int(0..9) (representing constraint (variant_fields_00001_00006_00007 * (7<=variant_fields_00001_00006_00001)))
c Both direct and order encoding.
c Var 'aux23' order represents '0' with '6499'
c Var 'aux23' direct represents '0' with '6499'
c Var 'aux23' order represents '1' with '6500'
-6499 6500 0
c Var 'aux23' direct represents '1' with '6501'
6499 -6500 6501 0
-6501 6500 0
-6501 -6499 0
c Var 'aux23' order represents '2' with '6502'
-6500 6502 0
c Var 'aux23' direct represents '2' with '6503'
6500 -6502 6503 0
-6503 6502 0
-6503 -6500 0
c Var 'aux23' order represents '3' with '6504'
-6502 6504 0
c Var 'aux23' direct represents '3' with '6505'
6502 -6504 6505 0
-6505 6504 0
-6505 -6502 0
c Var 'aux23' order represents '4' with '6506'
-6504 6506 0
c Var 'aux23' direct represents '4' with '6507'
6504 -6506 6507 0
-6507 6506 0
-6507 -6504 0
c Var 'aux23' order represents '5' with '6508'
-6506 6508 0
c Var 'aux23' direct represents '5' with '6509'
6506 -6508 6509 0
-6509 6508 0
-6509 -6506 0
c Var 'aux23' order represents '6' with '6510'
-6508 6510 0
c Var 'aux23' direct represents '6' with '6511'
6508 -6510 6511 0
-6511 6510 0
-6511 -6508 0
c Var 'aux23' order represents '7' with '6512'
-6510 6512 0
c Var 'aux23' direct represents '7' with '6513'
6510 -6512 6513 0
-6513 6512 0
-6513 -6510 0
c Var 'aux23' order represents '8' with '6514'
-6512 6514 0
c Var 'aux23' direct represents '8' with '6515'
6512 -6514 6515 0
-6515 6514 0
-6515 -6512 0
c Var 'aux23' direct represents '9' with '-6514'
6499 6501 6503 6505 6507 6509 6511 6513 6515 -6514 0
c Encoding variable: aux24 with domain: int(0..9) (representing constraint (variant_fields_00001_00006_00008 * (8<=variant_fields_00001_00006_00001)))
c Both direct and order encoding.
c Var 'aux24' order represents '0' with '6516'
c Var 'aux24' direct represents '0' with '6516'
c Var 'aux24' order represents '1' with '6517'
-6516 6517 0
c Var 'aux24' direct represents '1' with '6518'
6516 -6517 6518 0
-6518 6517 0
-6518 -6516 0
c Var 'aux24' order represents '2' with '6519'
-6517 6519 0
c Var 'aux24' direct represents '2' with '6520'
6517 -6519 6520 0
-6520 6519 0
-6520 -6517 0
c Var 'aux24' order represents '3' with '6521'
-6519 6521 0
c Var 'aux24' direct represents '3' with '6522'
6519 -6521 6522 0
-6522 6521 0
-6522 -6519 0
c Var 'aux24' order represents '4' with '6523'
-6521 6523 0
c Var 'aux24' direct represents '4' with '6524'
6521 -6523 6524 0
-6524 6523 0
-6524 -6521 0
c Var 'aux24' order represents '5' with '6525'
-6523 6525 0
c Var 'aux24' direct represents '5' with '6526'
6523 -6525 6526 0
-6526 6525 0
-6526 -6523 0
c Var 'aux24' order represents '6' with '6527'
-6525 6527 0
c Var 'aux24' direct represents '6' with '6528'
6525 -6527 6528 0
-6528 6527 0
-6528 -6525 0
c Var 'aux24' order represents '7' with '6529'
-6527 6529 0
c Var 'aux24' direct represents '7' with '6530'
6527 -6529 6530 0
-6530 6529 0
-6530 -6527 0
c Var 'aux24' order represents '8' with '6531'
-6529 6531 0
c Var 'aux24' direct represents '8' with '6532'
6529 -6531 6532 0
-6532 6531 0
-6532 -6529 0
c Var 'aux24' direct represents '9' with '-6531'
6516 6518 6520 6522 6524 6526 6528 6530 6532 -6531 0
c Encoding variable: aux25 with domain: int(0..9) (representing constraint (variant_fields_00001_00006_00009 * (9<=variant_fields_00001_00006_00001)))
c Both direct and order encoding.
c Var 'aux25' order represents '0' with '6533'
c Var 'aux25' direct represents '0' with '6533'
c Var 'aux25' order represents '1' with '6534'
-6533 6534 0
c Var 'aux25' direct represents '1' with '6535'
6533 -6534 6535 0
-6535 6534 0
-6535 -6533 0
c Var 'aux25' order represents '2' with '6536'
-6534 6536 0
c Var 'aux25' direct represents '2' with '6537'
6534 -6536 6537 0
-6537 6536 0
-6537 -6534 0
c Var 'aux25' order represents '3' with '6538'
-6536 6538 0
c Var 'aux25' direct represents '3' with '6539'
6536 -6538 6539 0
-6539 6538 0
-6539 -6536 0
c Var 'aux25' order represents '4' with '6540'
-6538 6540 0
c Var 'aux25' direct represents '4' with '6541'
6538 -6540 6541 0
-6541 6540 0
-6541 -6538 0
c Var 'aux25' order represents '5' with '6542'
-6540 6542 0
c Var 'aux25' direct represents '5' with '6543'
6540 -6542 6543 0
-6543 6542 0
-6543 -6540 0
c Var 'aux25' order represents '6' with '6544'
-6542 6544 0
c Var 'aux25' direct represents '6' with '6545'
6542 -6544 6545 0
-6545 6544 0
-6545 -6542 0
c Var 'aux25' order represents '7' with '6546'
-6544 6546 0
c Var 'aux25' direct represents '7' with '6547'
6544 -6546 6547 0
-6547 6546 0
-6547 -6544 0
c Var 'aux25' order represents '8' with '6548'
-6546 6548 0
c Var 'aux25' direct represents '8' with '6549'
6546 -6548 6549 0
-6549 6548 0
-6549 -6546 0
c Var 'aux25' direct represents '9' with '-6548'
6533 6535 6537 6539 6541 6543 6545 6547 6549 -6548 0
c Encoding variable: aux26 with domain: bool (representing constraint ((variant_fields_00001_00006_00001 + aux18 + aux19 + aux20 + aux21 + aux22 + aux23 + aux24 + aux25)=tv=30))
c Var 'aux26' direct represents '0' with '-6550'
c Var 'aux26' direct represents '1' with '6550'
c Var 'aux26' order represents '1' with '1'
c Var 'aux26' order represents '0' with '-6550'
c Encoding variable: aux27 with domain: int(0..9) (representing constraint (variant_fields_00001_00008_00002 * (2<=variant_fields_00001_00008_00001)))
c Both direct and order encoding.
c Var 'aux27' order represents '0' with '6551'
c Var 'aux27' direct represents '0' with '6551'
c Var 'aux27' order represents '1' with '6552'
-6551 6552 0
c Var 'aux27' direct represents '1' with '6553'
6551 -6552 6553 0
-6553 6552 0
-6553 -6551 0
c Var 'aux27' order represents '2' with '6554'
-6552 6554 0
c Var 'aux27' direct represents '2' with '6555'
6552 -6554 6555 0
-6555 6554 0
-6555 -6552 0
c Var 'aux27' order represents '3' with '6556'
-6554 6556 0
c Var 'aux27' direct represents '3' with '6557'
6554 -6556 6557 0
-6557 6556 0
-6557 -6554 0
c Var 'aux27' order represents '4' with '6558'
-6556 6558 0
c Var 'aux27' direct represents '4' with '6559'
6556 -6558 6559 0
-6559 6558 0
-6559 -6556 0
c Var 'aux27' order represents '5' with '6560'
-6558 6560 0
c Var 'aux27' direct represents '5' with '6561'
6558 -6560 6561 0
-6561 6560 0
-6561 -6558 0
c Var 'aux27' order represents '6' with '6562'
-6560 6562 0
c Var 'aux27' direct represents '6' with '6563'
6560 -6562 6563 0
-6563 6562 0
-6563 -6560 0
c Var 'aux27' order represents '7' with '6564'
-6562 6564 0
c Var 'aux27' direct represents '7' with '6565'
6562 -6564 6565 0
-6565 6564 0
-6565 -6562 0
c Var 'aux27' order represents '8' with '6566'
-6564 6566 0
c Var 'aux27' direct represents '8' with '6567'
6564 -6566 6567 0
-6567 6566 0
-6567 -6564 0
c Var 'aux27' direct represents '9' with '-6566'
6551 6553 6555 6557 6559 6561 6563 6565 6567 -6566 0
c Encoding variable: aux28 with domain: int(0..9) (representing constraint (variant_fields_00001_00008_00003 * (3<=variant_fields_00001_00008_00001)))
c Both direct and order encoding.
c Var 'aux28' order represents '0' with '6568'
c Var 'aux28' direct represents '0' with '6568'
c Var 'aux28' order represents '1' with '6569'
-6568 6569 0
c Var 'aux28' direct represents '1' with '6570'
6568 -6569 6570 0
-6570 6569 0
-6570 -6568 0
c Var 'aux28' order represents '2' with '6571'
-6569 6571 0
c Var 'aux28' direct represents '2' with '6572'
6569 -6571 6572 0
-6572 6571 0
-6572 -6569 0
c Var 'aux28' order represents '3' with '6573'
-6571 6573 0
c Var 'aux28' direct represents '3' with '6574'
6571 -6573 6574 0
-6574 6573 0
-6574 -6571 0
c Var 'aux28' order represents '4' with '6575'
-6573 6575 0
c Var 'aux28' direct represents '4' with '6576'
6573 -6575 6576 0
-6576 6575 0
-6576 -6573 0
c Var 'aux28' order represents '5' with '6577'
-6575 6577 0
c Var 'aux28' direct represents '5' with '6578'
6575 -6577 6578 0
-6578 6577 0
-6578 -6575 0
c Var 'aux28' order represents '6' with '6579'
-6577 6579 0
c Var 'aux28' direct represents '6' with '6580'
6577 -6579 6580 0
-6580 6579 0
-6580 -6577 0
c Var 'aux28' order represents '7' with '6581'
-6579 6581 0
c Var 'aux28' direct represents '7' with '6582'
6579 -6581 6582 0
-6582 6581 0
-6582 -6579 0
c Var 'aux28' order represents '8' with '6583'
-6581 6583 0
c Var 'aux28' direct represents '8' with '6584'
6581 -6583 6584 0
-6584 6583 0
-6584 -6581 0
c Var 'aux28' direct represents '9' with '-6583'
6568 6570 6572 6574 6576 6578 6580 6582 6584 -6583 0
c Encoding variable: aux29 with domain: int(0..9) (representing constraint (variant_fields_00001_00008_00004 * (4<=variant_fields_00001_00008_00001)))
c Both direct and order encoding.
c Var 'aux29' order represents '0' with '6585'
c Var 'aux29' direct represents '0' with '6585'
c Var 'aux29' order represents '1' with '6586'
-6585 6586 0
c Var 'aux29' direct represents '1' with '6587'
6585 -6586 6587 0
-6587 6586 0
-6587 -6585 0
c Var 'aux29' order represents '2' with '6588'
-6586 6588 0
c Var 'aux29' direct represents '2' with '6589'
6586 -6588 6589 0
-6589 6588 0
-6589 -6586 0
c Var 'aux29' order represents '3' with '6590'
-6588 6590 0
c Var 'aux29' direct represents '3' with '6591'
6588 -6590 6591 0
-6591 6590 0
-6591 -6588 0
c Var 'aux29' order represents '4' with '6592'
-6590 6592 0
c Var 'aux29' direct represents '4' with '6593'
6590 -6592 6593 0
-6593 6592 0
-6593 -6590 0
c Var 'aux29' order represents '5' with '6594'
-6592 6594 0
c Var 'aux29' direct represents '5' with '6595'
6592 -6594 6595 0
-6595 6594 0
-6595 -6592 0
c Var 'aux29' order represents '6' with '6596'
-6594 6596 0
c Var 'aux29' direct represents '6' with '6597'
6594 -6596 6597 0
-6597 6596 0
-6597 -6594 0
c Var 'aux29' order represents '7' with '6598'
-6596 6598 0
c Var 'aux29' direct represents '7' with '6599'
6596 -6598 6599 0
-6599 6598 0
-6599 -6596 0
c Var 'aux29' order represents '8' with '6600'
-6598 6600 0
c Var 'aux29' direct represents '8' with '6601'
6598 -6600 6601 0
-6601 6600 0
-6601 -6598 0
c Var 'aux29' direct represents '9' with '-6600'
6585 6587 6589 6591 6593 6595 6597 6599 6601 -6600 0
c Encoding variable: aux30 with domain: int(0..9) (representing constraint (variant_fields_00001_00008_00005 * (5<=variant_fields_00001_00008_00001)))
c Both direct and order encoding.
c Var 'aux30' order represents '0' with '6602'
c Var 'aux30' direct represents '0' with '6602'
c Var 'aux30' order represents '1' with '6603'
-6602 6603 0
c Var 'aux30' direct represents '1' with '6604'
6602 -6603 6604 0
-6604 6603 0
-6604 -6602 0
c Var 'aux30' order represents '2' with '6605'
-6603 6605 0
c Var 'aux30' direct represents '2' with '6606'
6603 -6605 6606 0
-6606 6605 0
-6606 -6603 0
c Var 'aux30' order represents '3' with '6607'
-6605 6607 0
c Var 'aux30' direct represents '3' with '6608'
6605 -6607 6608 0
-6608 6607 0
-6608 -6605 0
c Var 'aux30' order represents '4' with '6609'
-6607 6609 0
c Var 'aux30' direct represents '4' with '6610'
6607 -6609 6610 0
-6610 6609 0
-6610 -6607 0
c Var 'aux30' order represents '5' with '6611'
-6609 6611 0
c Var 'aux30' direct represents '5' with '6612'
6609 -6611 6612 0
-6612 6611 0
-6612 -6609 0
c Var 'aux30' order represents '6' with '6613'
-6611 6613 0
c Var 'aux30' direct represents '6' with '6614'
6611 -6613 6614 0
-6614 6613 0
-6614 -6611 0
c Var 'aux30' order represents '7' with '6615'
-6613 6615 0
c Var 'aux30' direct represents '7' with '6616'
6613 -6615 6616 0
-6616 6615 0
-6616 -6613 0
c Var 'aux30' order represents '8' with '6617'
-6615 6617 0
c Var 'aux30' direct represents '8' with '6618'
6615 -6617 6618 0
-6618 6617 0
-6618 -6615 0
c Var 'aux30' direct represents '9' with '-6617'
6602 6604 6606 6608 6610 6612 6614 6616 6618 -6617 0
c Encoding variable: aux31 with domain: int(0..9) (representing constraint (variant_fields_00001_00008_00006 * (6<=variant_fields_00001_00008_00001)))
c Both direct and order encoding.
c Var 'aux31' order represents '0' with '6619'
c Var 'aux31' direct represents '0' with '6619'
c Var 'aux31' order represents '1' with '6620'
-6619 6620 0
c Var 'aux31' direct represents '1' with '6621'
6619 -6620 6621 0
-6621 6620 0
-6621 -6619 0
c Var 'aux31' order represents '2' with '6622'
-6620 6622 0
c Var 'aux31' direct represents '2' with '6623'
6620 -6622 6623 0
-6623 6622 0
-6623 -6620 0
c Var 'aux31' order represents '3' with '6624'
-6622 6624 0
c Var 'aux31' direct represents '3' with '6625'
6622 -6624 6625 0
-6625 6624 0
-6625 -6622 0
c Var 'aux31' order represents '4' with '6626'
-6624 6626 0
c Var 'aux31' direct represents '4' with '6627'
6624 -6626 6627 0
-6627 6626 0
-6627 -6624 0
c Var 'aux31' order represents '5' with '6628'
-6626 6628 0
c Var 'aux31' direct represents '5' with '6629'
6626 -6628 6629 0
-6629 6628 0
-6629 -6626 0
c Var 'aux31' order represents '6' with '6630'
-6628 6630 0
c Var 'aux31' direct represents '6' with '6631'
6628 -6630 6631 0
-6631 6630 0
-6631 -6628 0
c Var 'aux31' order represents '7' with '6632'
-6630 6632 0
c Var 'aux31' direct represents '7' with '6633'
6630 -6632 6633 0
-6633 6632 0
-6633 -6630 0
c Var 'aux31' order represents '8' with '6634'
-6632 6634 0
c Var 'aux31' direct represents '8' with '6635'
6632 -6634 6635 0
-6635 6634 0
-6635 -6632 0
c Var 'aux31' direct represents '9' with '-6634'
6619 6621 6623 6625 6627 6629 6631 6633 6635 -6634 0
c Encoding variable: aux32 with domain: int(0..9) (representing constraint (variant_fields_00001_00008_00007 * (7<=variant_fields_00001_00008_00001)))
c Both direct and order encoding.
c Var 'aux32' order represents '0' with '6636'
c Var 'aux32' direct represents '0' with '6636'
c Var 'aux32' order represents '1' with '6637'
-6636 6637 0
c Var 'aux32' direct represents '1' with '6638'
6636 -6637 6638 0
-6638 6637 0
-6638 -6636 0
c Var 'aux32' order represents '2' with '6639'
-6637 6639 0
c Var 'aux32' direct represents '2' with '6640'
6637 -6639 6640 0
-6640 6639 0
-6640 -6637 0
c Var 'aux32' order represents '3' with '6641'
-6639 6641 0
c Var 'aux32' direct represents '3' with '6642'
6639 -6641 6642 0
-6642 6641 0
-6642 -6639 0
c Var 'aux32' order represents '4' with '6643'
-6641 6643 0
c Var 'aux32' direct represents '4' with '6644'
6641 -6643 6644 0
-6644 6643 0
-6644 -6641 0
c Var 'aux32' order represents '5' with '6645'
-6643 6645 0
c Var 'aux32' direct represents '5' with '6646'
6643 -6645 6646 0
-6646 6645 0
-6646 -6643 0
c Var 'aux32' order represents '6' with '6647'
-6645 6647 0
c Var 'aux32' direct represents '6' with '6648'
6645 -6647 6648 0
-6648 6647 0
-6648 -6645 0
c Var 'aux32' order represents '7' with '6649'
-6647 6649 0
c Var 'aux32' direct represents '7' with '6650'
6647 -6649 6650 0
-6650 6649 0
-6650 -6647 0
c Var 'aux32' order represents '8' with '6651'
-6649 6651 0
c Var 'aux32' direct represents '8' with '6652'
6649 -6651 6652 0
-6652 6651 0
-6652 -6649 0
c Var 'aux32' direct represents '9' with '-6651'
6636 6638 6640 6642 6644 6646 6648 6650 6652 -6651 0
c Encoding variable: aux33 with domain: int(0..9) (representing constraint (variant_fields_00001_00008_00008 * (8<=variant_fields_00001_00008_00001)))
c Both direct and order encoding.
c Var 'aux33' order represents '0' with '6653'
c Var 'aux33' direct represents '0' with '6653'
c Var 'aux33' order represents '1' with '6654'
-6653 6654 0
c Var 'aux33' direct represents '1' with '6655'
6653 -6654 6655 0
-6655 6654 0
-6655 -6653 0
c Var 'aux33' order represents '2' with '6656'
-6654 6656 0
c Var 'aux33' direct represents '2' with '6657'
6654 -6656 6657 0
-6657 6656 0
-6657 -6654 0
c Var 'aux33' order represents '3' with '6658'
-6656 6658 0
c Var 'aux33' direct represents '3' with '6659'
6656 -6658 6659 0
-6659 6658 0
-6659 -6656 0
c Var 'aux33' order represents '4' with '6660'
-6658 6660 0
c Var 'aux33' direct represents '4' with '6661'
6658 -6660 6661 0
-6661 6660 0
-6661 -6658 0
c Var 'aux33' order represents '5' with '6662'
-6660 6662 0
c Var 'aux33' direct represents '5' with '6663'
6660 -6662 6663 0
-6663 6662 0
-6663 -6660 0
c Var 'aux33' order represents '6' with '6664'
-6662 6664 0
c Var 'aux33' direct represents '6' with '6665'
6662 -6664 6665 0
-6665 6664 0
-6665 -6662 0
c Var 'aux33' order represents '7' with '6666'
-6664 6666 0
c Var 'aux33' direct represents '7' with '6667'
6664 -6666 6667 0
-6667 6666 0
-6667 -6664 0
c Var 'aux33' order represents '8' with '6668'
-6666 6668 0
c Var 'aux33' direct represents '8' with '6669'
6666 -6668 6669 0
-6669 6668 0
-6669 -6666 0
c Var 'aux33' direct represents '9' with '-6668'
6653 6655 6657 6659 6661 6663 6665 6667 6669 -6668 0
c Encoding variable: aux34 with domain: int(0..9) (representing constraint (variant_fields_00001_00008_00009 * (9<=variant_fields_00001_00008_00001)))
c Both direct and order encoding.
c Var 'aux34' order represents '0' with '6670'
c Var 'aux34' direct represents '0' with '6670'
c Var 'aux34' order represents '1' with '6671'
-6670 6671 0
c Var 'aux34' direct represents '1' with '6672'
6670 -6671 6672 0
-6672 6671 0
-6672 -6670 0
c Var 'aux34' order represents '2' with '6673'
-6671 6673 0
c Var 'aux34' direct represents '2' with '6674'
6671 -6673 6674 0
-6674 6673 0
-6674 -6671 0
c Var 'aux34' order represents '3' with '6675'
-6673 6675 0
c Var 'aux34' direct represents '3' with '6676'
6673 -6675 6676 0
-6676 6675 0
-6676 -6673 0
c Var 'aux34' order represents '4' with '6677'
-6675 6677 0
c Var 'aux34' direct represents '4' with '6678'
6675 -6677 6678 0
-6678 6677 0
-6678 -6675 0
c Var 'aux34' order represents '5' with '6679'
-6677 6679 0
c Var 'aux34' direct represents '5' with '6680'
6677 -6679 6680 0
-6680 6679 0
-6680 -6677 0
c Var 'aux34' order represents '6' with '6681'
-6679 6681 0
c Var 'aux34' direct represents '6' with '6682'
6679 -6681 6682 0
-6682 6681 0
-6682 -6679 0
c Var 'aux34' order represents '7' with '6683'
-6681 6683 0
c Var 'aux34' direct represents '7' with '6684'
6681 -6683 6684 0
-6684 6683 0
-6684 -6681 0
c Var 'aux34' order represents '8' with '6685'
-6683 6685 0
c Var 'aux34' direct represents '8' with '6686'
6683 -6685 6686 0
-6686 6685 0
-6686 -6683 0
c Var 'aux34' direct represents '9' with '-6685'
6670 6672 6674 6676 6678 6680 6682 6684 6686 -6685 0
c Encoding variable: aux35 with domain: bool (representing constraint ((aux27 + aux28 + aux29 + aux30 + aux31 + aux32 + aux33 + aux34 + variant_fields_00001_00008_00001)=tv=28))
c Var 'aux35' direct represents '0' with '-6687'
c Var 'aux35' direct represents '1' with '6687'
c Var 'aux35' order represents '1' with '1'
c Var 'aux35' order represents '0' with '-6687'
c Encoding variable: aux36 with domain: int(0..9) (representing constraint (variant_fields_00002_00002_00002 * (2<=variant_fields_00002_00002_00001)))
c Both direct and order encoding.
c Var 'aux36' order represents '0' with '6688'
c Var 'aux36' direct represents '0' with '6688'
c Var 'aux36' order represents '1' with '6689'
-6688 6689 0
c Var 'aux36' direct represents '1' with '6690'
6688 -6689 6690 0
-6690 6689 0
-6690 -6688 0
c Var 'aux36' order represents '2' with '6691'
-6689 6691 0
c Var 'aux36' direct represents '2' with '6692'
6689 -6691 6692 0
-6692 6691 0
-6692 -6689 0
c Var 'aux36' order represents '3' with '6693'
-6691 6693 0
c Var 'aux36' direct represents '3' with '6694'
6691 -6693 6694 0
-6694 6693 0
-6694 -6691 0
c Var 'aux36' order represents '4' with '6695'
-6693 6695 0
c Var 'aux36' direct represents '4' with '6696'
6693 -6695 6696 0
-6696 6695 0
-6696 -6693 0
c Var 'aux36' order represents '5' with '6697'
-6695 6697 0
c Var 'aux36' direct represents '5' with '6698'
6695 -6697 6698 0
-6698 6697 0
-6698 -6695 0
c Var 'aux36' order represents '6' with '6699'
-6697 6699 0
c Var 'aux36' direct represents '6' with '6700'
6697 -6699 6700 0
-6700 6699 0
-6700 -6697 0
c Var 'aux36' order represents '7' with '6701'
-6699 6701 0
c Var 'aux36' direct represents '7' with '6702'
6699 -6701 6702 0
-6702 6701 0
-6702 -6699 0
c Var 'aux36' order represents '8' with '6703'
-6701 6703 0
c Var 'aux36' direct represents '8' with '6704'
6701 -6703 6704 0
-6704 6703 0
-6704 -6701 0
c Var 'aux36' direct represents '9' with '-6703'
6688 6690 6692 6694 6696 6698 6700 6702 6704 -6703 0
c Encoding variable: aux37 with domain: int(0..9) (representing constraint (variant_fields_00002_00002_00003 * (3<=variant_fields_00002_00002_00001)))
c Both direct and order encoding.
c Var 'aux37' order represents '0' with '6705'
c Var 'aux37' direct represents '0' with '6705'
c Var 'aux37' order represents '1' with '6706'
-6705 6706 0
c Var 'aux37' direct represents '1' with '6707'
6705 -6706 6707 0
-6707 6706 0
-6707 -6705 0
c Var 'aux37' order represents '2' with '6708'
-6706 6708 0
c Var 'aux37' direct represents '2' with '6709'
6706 -6708 6709 0
-6709 6708 0
-6709 -6706 0
c Var 'aux37' order represents '3' with '6710'
-6708 6710 0
c Var 'aux37' direct represents '3' with '6711'
6708 -6710 6711 0
-6711 6710 0
-6711 -6708 0
c Var 'aux37' order represents '4' with '6712'
-6710 6712 0
c Var 'aux37' direct represents '4' with '6713'
6710 -6712 6713 0
-6713 6712 0
-6713 -6710 0
c Var 'aux37' order represents '5' with '6714'
-6712 6714 0
c Var 'aux37' direct represents '5' with '6715'
6712 -6714 6715 0
-6715 6714 0
-6715 -6712 0
c Var 'aux37' order represents '6' with '6716'
-6714 6716 0
c Var 'aux37' direct represents '6' with '6717'
6714 -6716 6717 0
-6717 6716 0
-6717 -6714 0
c Var 'aux37' order represents '7' with '6718'
-6716 6718 0
c Var 'aux37' direct represents '7' with '6719'
6716 -6718 6719 0
-6719 6718 0
-6719 -6716 0
c Var 'aux37' order represents '8' with '6720'
-6718 6720 0
c Var 'aux37' direct represents '8' with '6721'
6718 -6720 6721 0
-6721 6720 0
-6721 -6718 0
c Var 'aux37' direct represents '9' with '-6720'
6705 6707 6709 6711 6713 6715 6717 6719 6721 -6720 0
c Encoding variable: aux38 with domain: int(0..9) (representing constraint (variant_fields_00002_00002_00004 * (4<=variant_fields_00002_00002_00001)))
c Both direct and order encoding.
c Var 'aux38' order represents '0' with '6722'
c Var 'aux38' direct represents '0' with '6722'
c Var 'aux38' order represents '1' with '6723'
-6722 6723 0
c Var 'aux38' direct represents '1' with '6724'
6722 -6723 6724 0
-6724 6723 0
-6724 -6722 0
c Var 'aux38' order represents '2' with '6725'
-6723 6725 0
c Var 'aux38' direct represents '2' with '6726'
6723 -6725 6726 0
-6726 6725 0
-6726 -6723 0
c Var 'aux38' order represents '3' with '6727'
-6725 6727 0
c Var 'aux38' direct represents '3' with '6728'
6725 -6727 6728 0
-6728 6727 0
-6728 -6725 0
c Var 'aux38' order represents '4' with '6729'
-6727 6729 0
c Var 'aux38' direct represents '4' with '6730'
6727 -6729 6730 0
-6730 6729 0
-6730 -6727 0
c Var 'aux38' order represents '5' with '6731'
-6729 6731 0
c Var 'aux38' direct represents '5' with '6732'
6729 -6731 6732 0
-6732 6731 0
-6732 -6729 0
c Var 'aux38' order represents '6' with '6733'
-6731 6733 0
c Var 'aux38' direct represents '6' with '6734'
6731 -6733 6734 0
-6734 6733 0
-6734 -6731 0
c Var 'aux38' order represents '7' with '6735'
-6733 6735 0
c Var 'aux38' direct represents '7' with '6736'
6733 -6735 6736 0
-6736 6735 0
-6736 -6733 0
c Var 'aux38' order represents '8' with '6737'
-6735 6737 0
c Var 'aux38' direct represents '8' with '6738'
6735 -6737 6738 0
-6738 6737 0
-6738 -6735 0
c Var 'aux38' direct represents '9' with '-6737'
6722 6724 6726 6728 6730 6732 6734 6736 6738 -6737 0
c Encoding variable: aux39 with domain: int(0..9) (representing constraint (variant_fields_00002_00002_00005 * (5<=variant_fields_00002_00002_00001)))
c Both direct and order encoding.
c Var 'aux39' order represents '0' with '6739'
c Var 'aux39' direct represents '0' with '6739'
c Var 'aux39' order represents '1' with '6740'
-6739 6740 0
c Var 'aux39' direct represents '1' with '6741'
6739 -6740 6741 0
-6741 6740 0
-6741 -6739 0
c Var 'aux39' order represents '2' with '6742'
-6740 6742 0
c Var 'aux39' direct represents '2' with '6743'
6740 -6742 6743 0
-6743 6742 0
-6743 -6740 0
c Var 'aux39' order represents '3' with '6744'
-6742 6744 0
c Var 'aux39' direct represents '3' with '6745'
6742 -6744 6745 0
-6745 6744 0
-6745 -6742 0
c Var 'aux39' order represents '4' with '6746'
-6744 6746 0
c Var 'aux39' direct represents '4' with '6747'
6744 -6746 6747 0
-6747 6746 0
-6747 -6744 0
c Var 'aux39' order represents '5' with '6748'
-6746 6748 0
c Var 'aux39' direct represents '5' with '6749'
6746 -6748 6749 0
-6749 6748 0
-6749 -6746 0
c Var 'aux39' order represents '6' with '6750'
-6748 6750 0
c Var 'aux39' direct represents '6' with '6751'
6748 -6750 6751 0
-6751 6750 0
-6751 -6748 0
c Var 'aux39' order represents '7' with '6752'
-6750 6752 0
c Var 'aux39' direct represents '7' with '6753'
6750 -6752 6753 0
-6753 6752 0
-6753 -6750 0
c Var 'aux39' order represents '8' with '6754'
-6752 6754 0
c Var 'aux39' direct represents '8' with '6755'
6752 -6754 6755 0
-6755 6754 0
-6755 -6752 0
c Var 'aux39' direct represents '9' with '-6754'
6739 6741 6743 6745 6747 6749 6751 6753 6755 -6754 0
c Encoding variable: aux40 with domain: int(0..9) (representing constraint (variant_fields_00002_00002_00006 * (6<=variant_fields_00002_00002_00001)))
c Both direct and order encoding.
c Var 'aux40' order represents '0' with '6756'
c Var 'aux40' direct represents '0' with '6756'
c Var 'aux40' order represents '1' with '6757'
-6756 6757 0
c Var 'aux40' direct represents '1' with '6758'
6756 -6757 6758 0
-6758 6757 0
-6758 -6756 0
c Var 'aux40' order represents '2' with '6759'
-6757 6759 0
c Var 'aux40' direct represents '2' with '6760'
6757 -6759 6760 0
-6760 6759 0
-6760 -6757 0
c Var 'aux40' order represents '3' with '6761'
-6759 6761 0
c Var 'aux40' direct represents '3' with '6762'
6759 -6761 6762 0
-6762 6761 0
-6762 -6759 0
c Var 'aux40' order represents '4' with '6763'
-6761 6763 0
c Var 'aux40' direct represents '4' with '6764'
6761 -6763 6764 0
-6764 6763 0
-6764 -6761 0
c Var 'aux40' order represents '5' with '6765'
-6763 6765 0
c Var 'aux40' direct represents '5' with '6766'
6763 -6765 6766 0
-6766 6765 0
-6766 -6763 0
c Var 'aux40' order represents '6' with '6767'
-6765 6767 0
c Var 'aux40' direct represents '6' with '6768'
6765 -6767 6768 0
-6768 6767 0
-6768 -6765 0
c Var 'aux40' order represents '7' with '6769'
-6767 6769 0
c Var 'aux40' direct represents '7' with '6770'
6767 -6769 6770 0
-6770 6769 0
-6770 -6767 0
c Var 'aux40' order represents '8' with '6771'
-6769 6771 0
c Var 'aux40' direct represents '8' with '6772'
6769 -6771 6772 0
-6772 6771 0
-6772 -6769 0
c Var 'aux40' direct represents '9' with '-6771'
6756 6758 6760 6762 6764 6766 6768 6770 6772 -6771 0
c Encoding variable: aux41 with domain: int(0..9) (representing constraint (variant_fields_00002_00002_00007 * (7<=variant_fields_00002_00002_00001)))
c Both direct and order encoding.
c Var 'aux41' order represents '0' with '6773'
c Var 'aux41' direct represents '0' with '6773'
c Var 'aux41' order represents '1' with '6774'
-6773 6774 0
c Var 'aux41' direct represents '1' with '6775'
6773 -6774 6775 0
-6775 6774 0
-6775 -6773 0
c Var 'aux41' order represents '2' with '6776'
-6774 6776 0
c Var 'aux41' direct represents '2' with '6777'
6774 -6776 6777 0
-6777 6776 0
-6777 -6774 0
c Var 'aux41' order represents '3' with '6778'
-6776 6778 0
c Var 'aux41' direct represents '3' with '6779'
6776 -6778 6779 0
-6779 6778 0
-6779 -6776 0
c Var 'aux41' order represents '4' with '6780'
-6778 6780 0
c Var 'aux41' direct represents '4' with '6781'
6778 -6780 6781 0
-6781 6780 0
-6781 -6778 0
c Var 'aux41' order represents '5' with '6782'
-6780 6782 0
c Var 'aux41' direct represents '5' with '6783'
6780 -6782 6783 0
-6783 6782 0
-6783 -6780 0
c Var 'aux41' order represents '6' with '6784'
-6782 6784 0
c Var 'aux41' direct represents '6' with '6785'
6782 -6784 6785 0
-6785 6784 0
-6785 -6782 0
c Var 'aux41' order represents '7' with '6786'
-6784 6786 0
c Var 'aux41' direct represents '7' with '6787'
6784 -6786 6787 0
-6787 6786 0
-6787 -6784 0
c Var 'aux41' order represents '8' with '6788'
-6786 6788 0
c Var 'aux41' direct represents '8' with '6789'
6786 -6788 6789 0
-6789 6788 0
-6789 -6786 0
c Var 'aux41' direct represents '9' with '-6788'
6773 6775 6777 6779 6781 6783 6785 6787 6789 -6788 0
c Encoding variable: aux42 with domain: int(0..9) (representing constraint (variant_fields_00002_00002_00008 * (8<=variant_fields_00002_00002_00001)))
c Both direct and order encoding.
c Var 'aux42' order represents '0' with '6790'
c Var 'aux42' direct represents '0' with '6790'
c Var 'aux42' order represents '1' with '6791'
-6790 6791 0
c Var 'aux42' direct represents '1' with '6792'
6790 -6791 6792 0
-6792 6791 0
-6792 -6790 0
c Var 'aux42' order represents '2' with '6793'
-6791 6793 0
c Var 'aux42' direct represents '2' with '6794'
6791 -6793 6794 0
-6794 6793 0
-6794 -6791 0
c Var 'aux42' order represents '3' with '6795'
-6793 6795 0
c Var 'aux42' direct represents '3' with '6796'
6793 -6795 6796 0
-6796 6795 0
-6796 -6793 0
c Var 'aux42' order represents '4' with '6797'
-6795 6797 0
c Var 'aux42' direct represents '4' with '6798'
6795 -6797 6798 0
-6798 6797 0
-6798 -6795 0
c Var 'aux42' order represents '5' with '6799'
-6797 6799 0
c Var 'aux42' direct represents '5' with '6800'
6797 -6799 6800 0
-6800 6799 0
-6800 -6797 0
c Var 'aux42' order represents '6' with '6801'
-6799 6801 0
c Var 'aux42' direct represents '6' with '6802'
6799 -6801 6802 0
-6802 6801 0
-6802 -6799 0
c Var 'aux42' order represents '7' with '6803'
-6801 6803 0
c Var 'aux42' direct represents '7' with '6804'
6801 -6803 6804 0
-6804 6803 0
-6804 -6801 0
c Var 'aux42' order represents '8' with '6805'
-6803 6805 0
c Var 'aux42' direct represents '8' with '6806'
6803 -6805 6806 0
-6806 6805 0
-6806 -6803 0
c Var 'aux42' direct represents '9' with '-6805'
6790 6792 6794 6796 6798 6800 6802 6804 6806 -6805 0
c Encoding variable: aux43 with domain: int(0..9) (representing constraint (variant_fields_00002_00002_00009 * (9<=variant_fields_00002_00002_00001)))
c Both direct and order encoding.
c Var 'aux43' order represents '0' with '6807'
c Var 'aux43' direct represents '0' with '6807'
c Var 'aux43' order represents '1' with '6808'
-6807 6808 0
c Var 'aux43' direct represents '1' with '6809'
6807 -6808 6809 0
-6809 6808 0
-6809 -6807 0
c Var 'aux43' order represents '2' with '6810'
-6808 6810 0
c Var 'aux43' direct represents '2' with '6811'
6808 -6810 6811 0
-6811 6810 0
-6811 -6808 0
c Var 'aux43' order represents '3' with '6812'
-6810 6812 0
c Var 'aux43' direct represents '3' with '6813'
6810 -6812 6813 0
-6813 6812 0
-6813 -6810 0
c Var 'aux43' order represents '4' with '6814'
-6812 6814 0
c Var 'aux43' direct represents '4' with '6815'
6812 -6814 6815 0
-6815 6814 0
-6815 -6812 0
c Var 'aux43' order represents '5' with '6816'
-6814 6816 0
c Var 'aux43' direct represents '5' with '6817'
6814 -6816 6817 0
-6817 6816 0
-6817 -6814 0
c Var 'aux43' order represents '6' with '6818'
-6816 6818 0
c Var 'aux43' direct represents '6' with '6819'
6816 -6818 6819 0
-6819 6818 0
-6819 -6816 0
c Var 'aux43' order represents '7' with '6820'
-6818 6820 0
c Var 'aux43' direct represents '7' with '6821'
6818 -6820 6821 0
-6821 6820 0
-6821 -6818 0
c Var 'aux43' order represents '8' with '6822'
-6820 6822 0
c Var 'aux43' direct represents '8' with '6823'
6820 -6822 6823 0
-6823 6822 0
-6823 -6820 0
c Var 'aux43' direct represents '9' with '-6822'
6807 6809 6811 6813 6815 6817 6819 6821 6823 -6822 0
c Encoding variable: aux44 with domain: bool (representing constraint ((variant_fields_00002_00002_00001 + aux36 + aux37 + aux38 + aux39 + aux40 + aux41 + aux42 + aux43)=tv=27))
c Var 'aux44' direct represents '0' with '-6824'
c Var 'aux44' direct represents '1' with '6824'
c Var 'aux44' order represents '1' with '1'
c Var 'aux44' order represents '0' with '-6824'
c Encoding variable: aux45 with domain: int(0..9) (representing constraint (variant_fields_00002_00004_00002 * (2<=variant_fields_00002_00004_00001)))
c Both direct and order encoding.
c Var 'aux45' order represents '0' with '6825'
c Var 'aux45' direct represents '0' with '6825'
c Var 'aux45' order represents '1' with '6826'
-6825 6826 0
c Var 'aux45' direct represents '1' with '6827'
6825 -6826 6827 0
-6827 6826 0
-6827 -6825 0
c Var 'aux45' order represents '2' with '6828'
-6826 6828 0
c Var 'aux45' direct represents '2' with '6829'
6826 -6828 6829 0
-6829 6828 0
-6829 -6826 0
c Var 'aux45' order represents '3' with '6830'
-6828 6830 0
c Var 'aux45' direct represents '3' with '6831'
6828 -6830 6831 0
-6831 6830 0
-6831 -6828 0
c Var 'aux45' order represents '4' with '6832'
-6830 6832 0
c Var 'aux45' direct represents '4' with '6833'
6830 -6832 6833 0
-6833 6832 0
-6833 -6830 0
c Var 'aux45' order represents '5' with '6834'
-6832 6834 0
c Var 'aux45' direct represents '5' with '6835'
6832 -6834 6835 0
-6835 6834 0
-6835 -6832 0
c Var 'aux45' order represents '6' with '6836'
-6834 6836 0
c Var 'aux45' direct represents '6' with '6837'
6834 -6836 6837 0
-6837 6836 0
-6837 -6834 0
c Var 'aux45' order represents '7' with '6838'
-6836 6838 0
c Var 'aux45' direct represents '7' with '6839'
6836 -6838 6839 0
-6839 6838 0
-6839 -6836 0
c Var 'aux45' order represents '8' with '6840'
-6838 6840 0
c Var 'aux45' direct represents '8' with '6841'
6838 -6840 6841 0
-6841 6840 0
-6841 -6838 0
c Var 'aux45' direct represents '9' with '-6840'
6825 6827 6829 6831 6833 6835 6837 6839 6841 -6840 0
c Encoding variable: aux46 with domain: int(0..9) (representing constraint (variant_fields_00002_00004_00003 * (3<=variant_fields_00002_00004_00001)))
c Both direct and order encoding.
c Var 'aux46' order represents '0' with '6842'
c Var 'aux46' direct represents '0' with '6842'
c Var 'aux46' order represents '1' with '6843'
-6842 6843 0
c Var 'aux46' direct represents '1' with '6844'
6842 -6843 6844 0
-6844 6843 0
-6844 -6842 0
c Var 'aux46' order represents '2' with '6845'
-6843 6845 0
c Var 'aux46' direct represents '2' with '6846'
6843 -6845 6846 0
-6846 6845 0
-6846 -6843 0
c Var 'aux46' order represents '3' with '6847'
-6845 6847 0
c Var 'aux46' direct represents '3' with '6848'
6845 -6847 6848 0
-6848 6847 0
-6848 -6845 0
c Var 'aux46' order represents '4' with '6849'
-6847 6849 0
c Var 'aux46' direct represents '4' with '6850'
6847 -6849 6850 0
-6850 6849 0
-6850 -6847 0
c Var 'aux46' order represents '5' with '6851'
-6849 6851 0
c Var 'aux46' direct represents '5' with '6852'
6849 -6851 6852 0
-6852 6851 0
-6852 -6849 0
c Var 'aux46' order represents '6' with '6853'
-6851 6853 0
c Var 'aux46' direct represents '6' with '6854'
6851 -6853 6854 0
-6854 6853 0
-6854 -6851 0
c Var 'aux46' order represents '7' with '6855'
-6853 6855 0
c Var 'aux46' direct represents '7' with '6856'
6853 -6855 6856 0
-6856 6855 0
-6856 -6853 0
c Var 'aux46' order represents '8' with '6857'
-6855 6857 0
c Var 'aux46' direct represents '8' with '6858'
6855 -6857 6858 0
-6858 6857 0
-6858 -6855 0
c Var 'aux46' direct represents '9' with '-6857'
6842 6844 6846 6848 6850 6852 6854 6856 6858 -6857 0
c Encoding variable: aux47 with domain: int(0..9) (representing constraint (variant_fields_00002_00004_00004 * (4<=variant_fields_00002_00004_00001)))
c Both direct and order encoding.
c Var 'aux47' order represents '0' with '6859'
c Var 'aux47' direct represents '0' with '6859'
c Var 'aux47' order represents '1' with '6860'
-6859 6860 0
c Var 'aux47' direct represents '1' with '6861'
6859 -6860 6861 0
-6861 6860 0
-6861 -6859 0
c Var 'aux47' order represents '2' with '6862'
-6860 6862 0
c Var 'aux47' direct represents '2' with '6863'
6860 -6862 6863 0
-6863 6862 0
-6863 -6860 0
c Var 'aux47' order represents '3' with '6864'
-6862 6864 0
c Var 'aux47' direct represents '3' with '6865'
6862 -6864 6865 0
-6865 6864 0
-6865 -6862 0
c Var 'aux47' order represents '4' with '6866'
-6864 6866 0
c Var 'aux47' direct represents '4' with '6867'
6864 -6866 6867 0
-6867 6866 0
-6867 -6864 0
c Var 'aux47' order represents '5' with '6868'
-6866 6868 0
c Var 'aux47' direct represents '5' with '6869'
6866 -6868 6869 0
-6869 6868 0
-6869 -6866 0
c Var 'aux47' order represents '6' with '6870'
-6868 6870 0
c Var 'aux47' direct represents '6' with '6871'
6868 -6870 6871 0
-6871 6870 0
-6871 -6868 0
c Var 'aux47' order represents '7' with '6872'
-6870 6872 0
c Var 'aux47' direct represents '7' with '6873'
6870 -6872 6873 0
-6873 6872 0
-6873 -6870 0
c Var 'aux47' order represents '8' with '6874'
-6872 6874 0
c Var 'aux47' direct represents '8' with '6875'
6872 -6874 6875 0
-6875 6874 0
-6875 -6872 0
c Var 'aux47' direct represents '9' with '-6874'
6859 6861 6863 6865 6867 6869 6871 6873 6875 -6874 0
c Encoding variable: aux48 with domain: int(0..9) (representing constraint (variant_fields_00002_00004_00005 * (5<=variant_fields_00002_00004_00001)))
c Both direct and order encoding.
c Var 'aux48' order represents '0' with '6876'
c Var 'aux48' direct represents '0' with '6876'
c Var 'aux48' order represents '1' with '6877'
-6876 6877 0
c Var 'aux48' direct represents '1' with '6878'
6876 -6877 6878 0
-6878 6877 0
-6878 -6876 0
c Var 'aux48' order represents '2' with '6879'
-6877 6879 0
c Var 'aux48' direct represents '2' with '6880'
6877 -6879 6880 0
-6880 6879 0
-6880 -6877 0
c Var 'aux48' order represents '3' with '6881'
-6879 6881 0
c Var 'aux48' direct represents '3' with '6882'
6879 -6881 6882 0
-6882 6881 0
-6882 -6879 0
c Var 'aux48' order represents '4' with '6883'
-6881 6883 0
c Var 'aux48' direct represents '4' with '6884'
6881 -6883 6884 0
-6884 6883 0
-6884 -6881 0
c Var 'aux48' order represents '5' with '6885'
-6883 6885 0
c Var 'aux48' direct represents '5' with '6886'
6883 -6885 6886 0
-6886 6885 0
-6886 -6883 0
c Var 'aux48' order represents '6' with '6887'
-6885 6887 0
c Var 'aux48' direct represents '6' with '6888'
6885 -6887 6888 0
-6888 6887 0
-6888 -6885 0
c Var 'aux48' order represents '7' with '6889'
-6887 6889 0
c Var 'aux48' direct represents '7' with '6890'
6887 -6889 6890 0
-6890 6889 0
-6890 -6887 0
c Var 'aux48' order represents '8' with '6891'
-6889 6891 0
c Var 'aux48' direct represents '8' with '6892'
6889 -6891 6892 0
-6892 6891 0
-6892 -6889 0
c Var 'aux48' direct represents '9' with '-6891'
6876 6878 6880 6882 6884 6886 6888 6890 6892 -6891 0
c Encoding variable: aux49 with domain: int(0..9) (representing constraint (variant_fields_00002_00004_00006 * (6<=variant_fields_00002_00004_00001)))
c Both direct and order encoding.
c Var 'aux49' order represents '0' with '6893'
c Var 'aux49' direct represents '0' with '6893'
c Var 'aux49' order represents '1' with '6894'
-6893 6894 0
c Var 'aux49' direct represents '1' with '6895'
6893 -6894 6895 0
-6895 6894 0
-6895 -6893 0
c Var 'aux49' order represents '2' with '6896'
-6894 6896 0
c Var 'aux49' direct represents '2' with '6897'
6894 -6896 6897 0
-6897 6896 0
-6897 -6894 0
c Var 'aux49' order represents '3' with '6898'
-6896 6898 0
c Var 'aux49' direct represents '3' with '6899'
6896 -6898 6899 0
-6899 6898 0
-6899 -6896 0
c Var 'aux49' order represents '4' with '6900'
-6898 6900 0
c Var 'aux49' direct represents '4' with '6901'
6898 -6900 6901 0
-6901 6900 0
-6901 -6898 0
c Var 'aux49' order represents '5' with '6902'
-6900 6902 0
c Var 'aux49' direct represents '5' with '6903'
6900 -6902 6903 0
-6903 6902 0
-6903 -6900 0
c Var 'aux49' order represents '6' with '6904'
-6902 6904 0
c Var 'aux49' direct represents '6' with '6905'
6902 -6904 6905 0
-6905 6904 0
-6905 -6902 0
c Var 'aux49' order represents '7' with '6906'
-6904 6906 0
c Var 'aux49' direct represents '7' with '6907'
6904 -6906 6907 0
-6907 6906 0
-6907 -6904 0
c Var 'aux49' order represents '8' with '6908'
-6906 6908 0
c Var 'aux49' direct represents '8' with '6909'
6906 -6908 6909 0
-6909 6908 0
-6909 -6906 0
c Var 'aux49' direct represents '9' with '-6908'
6893 6895 6897 6899 6901 6903 6905 6907 6909 -6908 0
c Encoding variable: aux50 with domain: int(0..9) (representing constraint (variant_fields_00002_00004_00007 * (7<=variant_fields_00002_00004_00001)))
c Both direct and order encoding.
c Var 'aux50' order represents '0' with '6910'
c Var 'aux50' direct represents '0' with '6910'
c Var 'aux50' order represents '1' with '6911'
-6910 6911 0
c Var 'aux50' direct represents '1' with '6912'
6910 -6911 6912 0
-6912 6911 0
-6912 -6910 0
c Var 'aux50' order represents '2' with '6913'
-6911 6913 0
c Var 'aux50' direct represents '2' with '6914'
6911 -6913 6914 0
-6914 6913 0
-6914 -6911 0
c Var 'aux50' order represents '3' with '6915'
-6913 6915 0
c Var 'aux50' direct represents '3' with '6916'
6913 -6915 6916 0
-6916 6915 0
-6916 -6913 0
c Var 'aux50' order represents '4' with '6917'
-6915 6917 0
c Var 'aux50' direct represents '4' with '6918'
6915 -6917 6918 0
-6918 6917 0
-6918 -6915 0
c Var 'aux50' order represents '5' with '6919'
-6917 6919 0
c Var 'aux50' direct represents '5' with '6920'
6917 -6919 6920 0
-6920 6919 0
-6920 -6917 0
c Var 'aux50' order represents '6' with '6921'
-6919 6921 0
c Var 'aux50' direct represents '6' with '6922'
6919 -6921 6922 0
-6922 6921 0
-6922 -6919 0
c Var 'aux50' order represents '7' with '6923'
-6921 6923 0
c Var 'aux50' direct represents '7' with '6924'
6921 -6923 6924 0
-6924 6923 0
-6924 -6921 0
c Var 'aux50' order represents '8' with '6925'
-6923 6925 0
c Var 'aux50' direct represents '8' with '6926'
6923 -6925 6926 0
-6926 6925 0
-6926 -6923 0
c Var 'aux50' direct represents '9' with '-6925'
6910 6912 6914 6916 6918 6920 6922 6924 6926 -6925 0
c Encoding variable: aux51 with domain: int(0..9) (representing constraint (variant_fields_00002_00004_00008 * (8<=variant_fields_00002_00004_00001)))
c Both direct and order encoding.
c Var 'aux51' order represents '0' with '6927'
c Var 'aux51' direct represents '0' with '6927'
c Var 'aux51' order represents '1' with '6928'
-6927 6928 0
c Var 'aux51' direct represents '1' with '6929'
6927 -6928 6929 0
-6929 6928 0
-6929 -6927 0
c Var 'aux51' order represents '2' with '6930'
-6928 6930 0
c Var 'aux51' direct represents '2' with '6931'
6928 -6930 6931 0
-6931 6930 0
-6931 -6928 0
c Var 'aux51' order represents '3' with '6932'
-6930 6932 0
c Var 'aux51' direct represents '3' with '6933'
6930 -6932 6933 0
-6933 6932 0
-6933 -6930 0
c Var 'aux51' order represents '4' with '6934'
-6932 6934 0
c Var 'aux51' direct represents '4' with '6935'
6932 -6934 6935 0
-6935 6934 0
-6935 -6932 0
c Var 'aux51' order represents '5' with '6936'
-6934 6936 0
c Var 'aux51' direct represents '5' with '6937'
6934 -6936 6937 0
-6937 6936 0
-6937 -6934 0
c Var 'aux51' order represents '6' with '6938'
-6936 6938 0
c Var 'aux51' direct represents '6' with '6939'
6936 -6938 6939 0
-6939 6938 0
-6939 -6936 0
c Var 'aux51' order represents '7' with '6940'
-6938 6940 0
c Var 'aux51' direct represents '7' with '6941'
6938 -6940 6941 0
-6941 6940 0
-6941 -6938 0
c Var 'aux51' order represents '8' with '6942'
-6940 6942 0
c Var 'aux51' direct represents '8' with '6943'
6940 -6942 6943 0
-6943 6942 0
-6943 -6940 0
c Var 'aux51' direct represents '9' with '-6942'
6927 6929 6931 6933 6935 6937 6939 6941 6943 -6942 0
c Encoding variable: aux52 with domain: int(0..9) (representing constraint (variant_fields_00002_00004_00009 * (9<=variant_fields_00002_00004_00001)))
c Both direct and order encoding.
c Var 'aux52' order represents '0' with '6944'
c Var 'aux52' direct represents '0' with '6944'
c Var 'aux52' order represents '1' with '6945'
-6944 6945 0
c Var 'aux52' direct represents '1' with '6946'
6944 -6945 6946 0
-6946 6945 0
-6946 -6944 0
c Var 'aux52' order represents '2' with '6947'
-6945 6947 0
c Var 'aux52' direct represents '2' with '6948'
6945 -6947 6948 0
-6948 6947 0
-6948 -6945 0
c Var 'aux52' order represents '3' with '6949'
-6947 6949 0
c Var 'aux52' direct represents '3' with '6950'
6947 -6949 6950 0
-6950 6949 0
-6950 -6947 0
c Var 'aux52' order represents '4' with '6951'
-6949 6951 0
c Var 'aux52' direct represents '4' with '6952'
6949 -6951 6952 0
-6952 6951 0
-6952 -6949 0
c Var 'aux52' order represents '5' with '6953'
-6951 6953 0
c Var 'aux52' direct represents '5' with '6954'
6951 -6953 6954 0
-6954 6953 0
-6954 -6951 0
c Var 'aux52' order represents '6' with '6955'
-6953 6955 0
c Var 'aux52' direct represents '6' with '6956'
6953 -6955 6956 0
-6956 6955 0
-6956 -6953 0
c Var 'aux52' order represents '7' with '6957'
-6955 6957 0
c Var 'aux52' direct represents '7' with '6958'
6955 -6957 6958 0
-6958 6957 0
-6958 -6955 0
c Var 'aux52' order represents '8' with '6959'
-6957 6959 0
c Var 'aux52' direct represents '8' with '6960'
6957 -6959 6960 0
-6960 6959 0
-6960 -6957 0
c Var 'aux52' direct represents '9' with '-6959'
6944 6946 6948 6950 6952 6954 6956 6958 6960 -6959 0
c Encoding variable: aux53 with domain: bool (representing constraint ((variant_fields_00002_00004_00001 + aux45 + aux46 + aux47 + aux48 + aux49 + aux50 + aux51 + aux52)=tv=11))
c Var 'aux53' direct represents '0' with '-6961'
c Var 'aux53' direct represents '1' with '6961'
c Var 'aux53' order represents '1' with '1'
c Var 'aux53' order represents '0' with '-6961'
c Encoding variable: aux54 with domain: int(0..9) (representing constraint (variant_fields_00002_00006_00002 * (2<=variant_fields_00002_00006_00001)))
c Both direct and order encoding.
c Var 'aux54' order represents '0' with '6962'
c Var 'aux54' direct represents '0' with '6962'
c Var 'aux54' order represents '1' with '6963'
-6962 6963 0
c Var 'aux54' direct represents '1' with '6964'
6962 -6963 6964 0
-6964 6963 0
-6964 -6962 0
c Var 'aux54' order represents '2' with '6965'
-6963 6965 0
c Var 'aux54' direct represents '2' with '6966'
6963 -6965 6966 0
-6966 6965 0
-6966 -6963 0
c Var 'aux54' order represents '3' with '6967'
-6965 6967 0
c Var 'aux54' direct represents '3' with '6968'
6965 -6967 6968 0
-6968 6967 0
-6968 -6965 0
c Var 'aux54' order represents '4' with '6969'
-6967 6969 0
c Var 'aux54' direct represents '4' with '6970'
6967 -6969 6970 0
-6970 6969 0
-6970 -6967 0
c Var 'aux54' order represents '5' with '6971'
-6969 6971 0
c Var 'aux54' direct represents '5' with '6972'
6969 -6971 6972 0
-6972 6971 0
-6972 -6969 0
c Var 'aux54' order represents '6' with '6973'
-6971 6973 0
c Var 'aux54' direct represents '6' with '6974'
6971 -6973 6974 0
-6974 6973 0
-6974 -6971 0
c Var 'aux54' order represents '7' with '6975'
-6973 6975 0
c Var 'aux54' direct represents '7' with '6976'
6973 -6975 6976 0
-6976 6975 0
-6976 -6973 0
c Var 'aux54' order represents '8' with '6977'
-6975 6977 0
c Var 'aux54' direct represents '8' with '6978'
6975 -6977 6978 0
-6978 6977 0
-6978 -6975 0
c Var 'aux54' direct represents '9' with '-6977'
6962 6964 6966 6968 6970 6972 6974 6976 6978 -6977 0
c Encoding variable: aux55 with domain: int(0..9) (representing constraint (variant_fields_00002_00006_00003 * (3<=variant_fields_00002_00006_00001)))
c Both direct and order encoding.
c Var 'aux55' order represents '0' with '6979'
c Var 'aux55' direct represents '0' with '6979'
c Var 'aux55' order represents '1' with '6980'
-6979 6980 0
c Var 'aux55' direct represents '1' with '6981'
6979 -6980 6981 0
-6981 6980 0
-6981 -6979 0
c Var 'aux55' order represents '2' with '6982'
-6980 6982 0
c Var 'aux55' direct represents '2' with '6983'
6980 -6982 6983 0
-6983 6982 0
-6983 -6980 0
c Var 'aux55' order represents '3' with '6984'
-6982 6984 0
c Var 'aux55' direct represents '3' with '6985'
6982 -6984 6985 0
-6985 6984 0
-6985 -6982 0
c Var 'aux55' order represents '4' with '6986'
-6984 6986 0
c Var 'aux55' direct represents '4' with '6987'
6984 -6986 6987 0
-6987 6986 0
-6987 -6984 0
c Var 'aux55' order represents '5' with '6988'
-6986 6988 0
c Var 'aux55' direct represents '5' with '6989'
6986 -6988 6989 0
-6989 6988 0
-6989 -6986 0
c Var 'aux55' order represents '6' with '6990'
-6988 6990 0
c Var 'aux55' direct represents '6' with '6991'
6988 -6990 6991 0
-6991 6990 0
-6991 -6988 0
c Var 'aux55' order represents '7' with '6992'
-6990 6992 0
c Var 'aux55' direct represents '7' with '6993'
6990 -6992 6993 0
-6993 6992 0
-6993 -6990 0
c Var 'aux55' order represents '8' with '6994'
-6992 6994 0
c Var 'aux55' direct represents '8' with '6995'
6992 -6994 6995 0
-6995 6994 0
-6995 -6992 0
c Var 'aux55' direct represents '9' with '-6994'
6979 6981 6983 6985 6987 6989 6991 6993 6995 -6994 0
c Encoding variable: aux56 with domain: int(0..9) (representing constraint (variant_fields_00002_00006_00004 * (4<=variant_fields_00002_00006_00001)))
c Both direct and order encoding.
c Var 'aux56' order represents '0' with '6996'
c Var 'aux56' direct represents '0' with '6996'
c Var 'aux56' order represents '1' with '6997'
-6996 6997 0
c Var 'aux56' direct represents '1' with '6998'
6996 -6997 6998 0
-6998 6997 0
-6998 -6996 0
c Var 'aux56' order represents '2' with '6999'
-6997 6999 0
c Var 'aux56' direct represents '2' with '7000'
6997 -6999 7000 0
-7000 6999 0
-7000 -6997 0
c Var 'aux56' order represents '3' with '7001'
-6999 7001 0
c Var 'aux56' direct represents '3' with '7002'
6999 -7001 7002 0
-7002 7001 0
-7002 -6999 0
c Var 'aux56' order represents '4' with '7003'
-7001 7003 0
c Var 'aux56' direct represents '4' with '7004'
7001 -7003 7004 0
-7004 7003 0
-7004 -7001 0
c Var 'aux56' order represents '5' with '7005'
-7003 7005 0
c Var 'aux56' direct represents '5' with '7006'
7003 -7005 7006 0
-7006 7005 0
-7006 -7003 0
c Var 'aux56' order represents '6' with '7007'
-7005 7007 0
c Var 'aux56' direct represents '6' with '7008'
7005 -7007 7008 0
-7008 7007 0
-7008 -7005 0
c Var 'aux56' order represents '7' with '7009'
-7007 7009 0
c Var 'aux56' direct represents '7' with '7010'
7007 -7009 7010 0
-7010 7009 0
-7010 -7007 0
c Var 'aux56' order represents '8' with '7011'
-7009 7011 0
c Var 'aux56' direct represents '8' with '7012'
7009 -7011 7012 0
-7012 7011 0
-7012 -7009 0
c Var 'aux56' direct represents '9' with '-7011'
6996 6998 7000 7002 7004 7006 7008 7010 7012 -7011 0
c Encoding variable: aux57 with domain: int(0..9) (representing constraint (variant_fields_00002_00006_00005 * (5<=variant_fields_00002_00006_00001)))
c Both direct and order encoding.
c Var 'aux57' order represents '0' with '7013'
c Var 'aux57' direct represents '0' with '7013'
c Var 'aux57' order represents '1' with '7014'
-7013 7014 0
c Var 'aux57' direct represents '1' with '7015'
7013 -7014 7015 0
-7015 7014 0
-7015 -7013 0
c Var 'aux57' order represents '2' with '7016'
-7014 7016 0
c Var 'aux57' direct represents '2' with '7017'
7014 -7016 7017 0
-7017 7016 0
-7017 -7014 0
c Var 'aux57' order represents '3' with '7018'
-7016 7018 0
c Var 'aux57' direct represents '3' with '7019'
7016 -7018 7019 0
-7019 7018 0
-7019 -7016 0
c Var 'aux57' order represents '4' with '7020'
-7018 7020 0
c Var 'aux57' direct represents '4' with '7021'
7018 -7020 7021 0
-7021 7020 0
-7021 -7018 0
c Var 'aux57' order represents '5' with '7022'
-7020 7022 0
c Var 'aux57' direct represents '5' with '7023'
7020 -7022 7023 0
-7023 7022 0
-7023 -7020 0
c Var 'aux57' order represents '6' with '7024'
-7022 7024 0
c Var 'aux57' direct represents '6' with '7025'
7022 -7024 7025 0
-7025 7024 0
-7025 -7022 0
c Var 'aux57' order represents '7' with '7026'
-7024 7026 0
c Var 'aux57' direct represents '7' with '7027'
7024 -7026 7027 0
-7027 7026 0
-7027 -7024 0
c Var 'aux57' order represents '8' with '7028'
-7026 7028 0
c Var 'aux57' direct represents '8' with '7029'
7026 -7028 7029 0
-7029 7028 0
-7029 -7026 0
c Var 'aux57' direct represents '9' with '-7028'
7013 7015 7017 7019 7021 7023 7025 7027 7029 -7028 0
c Encoding variable: aux58 with domain: int(0..9) (representing constraint (variant_fields_00002_00006_00006 * (6<=variant_fields_00002_00006_00001)))
c Both direct and order encoding.
c Var 'aux58' order represents '0' with '7030'
c Var 'aux58' direct represents '0' with '7030'
c Var 'aux58' order represents '1' with '7031'
-7030 7031 0
c Var 'aux58' direct represents '1' with '7032'
7030 -7031 7032 0
-7032 7031 0
-7032 -7030 0
c Var 'aux58' order represents '2' with '7033'
-7031 7033 0
c Var 'aux58' direct represents '2' with '7034'
7031 -7033 7034 0
-7034 7033 0
-7034 -7031 0
c Var 'aux58' order represents '3' with '7035'
-7033 7035 0
c Var 'aux58' direct represents '3' with '7036'
7033 -7035 7036 0
-7036 7035 0
-7036 -7033 0
c Var 'aux58' order represents '4' with '7037'
-7035 7037 0
c Var 'aux58' direct represents '4' with '7038'
7035 -7037 7038 0
-7038 7037 0
-7038 -7035 0
c Var 'aux58' order represents '5' with '7039'
-7037 7039 0
c Var 'aux58' direct represents '5' with '7040'
7037 -7039 7040 0
-7040 7039 0
-7040 -7037 0
c Var 'aux58' order represents '6' with '7041'
-7039 7041 0
c Var 'aux58' direct represents '6' with '7042'
7039 -7041 7042 0
-7042 7041 0
-7042 -7039 0
c Var 'aux58' order represents '7' with '7043'
-7041 7043 0
c Var 'aux58' direct represents '7' with '7044'
7041 -7043 7044 0
-7044 7043 0
-7044 -7041 0
c Var 'aux58' order represents '8' with '7045'
-7043 7045 0
c Var 'aux58' direct represents '8' with '7046'
7043 -7045 7046 0
-7046 7045 0
-7046 -7043 0
c Var 'aux58' direct represents '9' with '-7045'
7030 7032 7034 7036 7038 7040 7042 7044 7046 -7045 0
c Encoding variable: aux59 with domain: int(0..9) (representing constraint (variant_fields_00002_00006_00007 * (7<=variant_fields_00002_00006_00001)))
c Both direct and order encoding.
c Var 'aux59' order represents '0' with '7047'
c Var 'aux59' direct represents '0' with '7047'
c Var 'aux59' order represents '1' with '7048'
-7047 7048 0
c Var 'aux59' direct represents '1' with '7049'
7047 -7048 7049 0
-7049 7048 0
-7049 -7047 0
c Var 'aux59' order represents '2' with '7050'
-7048 7050 0
c Var 'aux59' direct represents '2' with '7051'
7048 -7050 7051 0
-7051 7050 0
-7051 -7048 0
c Var 'aux59' order represents '3' with '7052'
-7050 7052 0
c Var 'aux59' direct represents '3' with '7053'
7050 -7052 7053 0
-7053 7052 0
-7053 -7050 0
c Var 'aux59' order represents '4' with '7054'
-7052 7054 0
c Var 'aux59' direct represents '4' with '7055'
7052 -7054 7055 0
-7055 7054 0
-7055 -7052 0
c Var 'aux59' order represents '5' with '7056'
-7054 7056 0
c Var 'aux59' direct represents '5' with '7057'
7054 -7056 7057 0
-7057 7056 0
-7057 -7054 0
c Var 'aux59' order represents '6' with '7058'
-7056 7058 0
c Var 'aux59' direct represents '6' with '7059'
7056 -7058 7059 0
-7059 7058 0
-7059 -7056 0
c Var 'aux59' order represents '7' with '7060'
-7058 7060 0
c Var 'aux59' direct represents '7' with '7061'
7058 -7060 7061 0
-7061 7060 0
-7061 -7058 0
c Var 'aux59' order represents '8' with '7062'
-7060 7062 0
c Var 'aux59' direct represents '8' with '7063'
7060 -7062 7063 0
-7063 7062 0
-7063 -7060 0
c Var 'aux59' direct represents '9' with '-7062'
7047 7049 7051 7053 7055 7057 7059 7061 7063 -7062 0
c Encoding variable: aux60 with domain: int(0..9) (representing constraint (variant_fields_00002_00006_00008 * (8<=variant_fields_00002_00006_00001)))
c Both direct and order encoding.
c Var 'aux60' order represents '0' with '7064'
c Var 'aux60' direct represents '0' with '7064'
c Var 'aux60' order represents '1' with '7065'
-7064 7065 0
c Var 'aux60' direct represents '1' with '7066'
7064 -7065 7066 0
-7066 7065 0
-7066 -7064 0
c Var 'aux60' order represents '2' with '7067'
-7065 7067 0
c Var 'aux60' direct represents '2' with '7068'
7065 -7067 7068 0
-7068 7067 0
-7068 -7065 0
c Var 'aux60' order represents '3' with '7069'
-7067 7069 0
c Var 'aux60' direct represents '3' with '7070'
7067 -7069 7070 0
-7070 7069 0
-7070 -7067 0
c Var 'aux60' order represents '4' with '7071'
-7069 7071 0
c Var 'aux60' direct represents '4' with '7072'
7069 -7071 7072 0
-7072 7071 0
-7072 -7069 0
c Var 'aux60' order represents '5' with '7073'
-7071 7073 0
c Var 'aux60' direct represents '5' with '7074'
7071 -7073 7074 0
-7074 7073 0
-7074 -7071 0
c Var 'aux60' order represents '6' with '7075'
-7073 7075 0
c Var 'aux60' direct represents '6' with '7076'
7073 -7075 7076 0
-7076 7075 0
-7076 -7073 0
c Var 'aux60' order represents '7' with '7077'
-7075 7077 0
c Var 'aux60' direct represents '7' with '7078'
7075 -7077 7078 0
-7078 7077 0
-7078 -7075 0
c Var 'aux60' order represents '8' with '7079'
-7077 7079 0
c Var 'aux60' direct represents '8' with '7080'
7077 -7079 7080 0
-7080 7079 0
-7080 -7077 0
c Var 'aux60' direct represents '9' with '-7079'
7064 7066 7068 7070 7072 7074 7076 7078 7080 -7079 0
c Encoding variable: aux61 with domain: int(0..9) (representing constraint (variant_fields_00002_00006_00009 * (9<=variant_fields_00002_00006_00001)))
c Both direct and order encoding.
c Var 'aux61' order represents '0' with '7081'
c Var 'aux61' direct represents '0' with '7081'
c Var 'aux61' order represents '1' with '7082'
-7081 7082 0
c Var 'aux61' direct represents '1' with '7083'
7081 -7082 7083 0
-7083 7082 0
-7083 -7081 0
c Var 'aux61' order represents '2' with '7084'
-7082 7084 0
c Var 'aux61' direct represents '2' with '7085'
7082 -7084 7085 0
-7085 7084 0
-7085 -7082 0
c Var 'aux61' order represents '3' with '7086'
-7084 7086 0
c Var 'aux61' direct represents '3' with '7087'
7084 -7086 7087 0
-7087 7086 0
-7087 -7084 0
c Var 'aux61' order represents '4' with '7088'
-7086 7088 0
c Var 'aux61' direct represents '4' with '7089'
7086 -7088 7089 0
-7089 7088 0
-7089 -7086 0
c Var 'aux61' order represents '5' with '7090'
-7088 7090 0
c Var 'aux61' direct represents '5' with '7091'
7088 -7090 7091 0
-7091 7090 0
-7091 -7088 0
c Var 'aux61' order represents '6' with '7092'
-7090 7092 0
c Var 'aux61' direct represents '6' with '7093'
7090 -7092 7093 0
-7093 7092 0
-7093 -7090 0
c Var 'aux61' order represents '7' with '7094'
-7092 7094 0
c Var 'aux61' direct represents '7' with '7095'
7092 -7094 7095 0
-7095 7094 0
-7095 -7092 0
c Var 'aux61' order represents '8' with '7096'
-7094 7096 0
c Var 'aux61' direct represents '8' with '7097'
7094 -7096 7097 0
-7097 7096 0
-7097 -7094 0
c Var 'aux61' direct represents '9' with '-7096'
7081 7083 7085 7087 7089 7091 7093 7095 7097 -7096 0
c Encoding variable: aux62 with domain: bool (representing constraint ((variant_fields_00002_00006_00001 + aux54 + aux55 + aux56 + aux57 + aux58 + aux59 + aux60 + aux61)=tv=21))
c Var 'aux62' direct represents '0' with '-7098'
c Var 'aux62' direct represents '1' with '7098'
c Var 'aux62' order represents '1' with '1'
c Var 'aux62' order represents '0' with '-7098'
c Encoding variable: aux63 with domain: int(0..9) (representing constraint (variant_fields_00002_00007_00002 * (2<=variant_fields_00002_00007_00001)))
c Both direct and order encoding.
c Var 'aux63' order represents '0' with '7099'
c Var 'aux63' direct represents '0' with '7099'
c Var 'aux63' order represents '1' with '7100'
-7099 7100 0
c Var 'aux63' direct represents '1' with '7101'
7099 -7100 7101 0
-7101 7100 0
-7101 -7099 0
c Var 'aux63' order represents '2' with '7102'
-7100 7102 0
c Var 'aux63' direct represents '2' with '7103'
7100 -7102 7103 0
-7103 7102 0
-7103 -7100 0
c Var 'aux63' order represents '3' with '7104'
-7102 7104 0
c Var 'aux63' direct represents '3' with '7105'
7102 -7104 7105 0
-7105 7104 0
-7105 -7102 0
c Var 'aux63' order represents '4' with '7106'
-7104 7106 0
c Var 'aux63' direct represents '4' with '7107'
7104 -7106 7107 0
-7107 7106 0
-7107 -7104 0
c Var 'aux63' order represents '5' with '7108'
-7106 7108 0
c Var 'aux63' direct represents '5' with '7109'
7106 -7108 7109 0
-7109 7108 0
-7109 -7106 0
c Var 'aux63' order represents '6' with '7110'
-7108 7110 0
c Var 'aux63' direct represents '6' with '7111'
7108 -7110 7111 0
-7111 7110 0
-7111 -7108 0
c Var 'aux63' order represents '7' with '7112'
-7110 7112 0
c Var 'aux63' direct represents '7' with '7113'
7110 -7112 7113 0
-7113 7112 0
-7113 -7110 0
c Var 'aux63' order represents '8' with '7114'
-7112 7114 0
c Var 'aux63' direct represents '8' with '7115'
7112 -7114 7115 0
-7115 7114 0
-7115 -7112 0
c Var 'aux63' direct represents '9' with '-7114'
7099 7101 7103 7105 7107 7109 7111 7113 7115 -7114 0
c Encoding variable: aux64 with domain: int(0..9) (representing constraint (variant_fields_00002_00007_00003 * (3<=variant_fields_00002_00007_00001)))
c Both direct and order encoding.
c Var 'aux64' order represents '0' with '7116'
c Var 'aux64' direct represents '0' with '7116'
c Var 'aux64' order represents '1' with '7117'
-7116 7117 0
c Var 'aux64' direct represents '1' with '7118'
7116 -7117 7118 0
-7118 7117 0
-7118 -7116 0
c Var 'aux64' order represents '2' with '7119'
-7117 7119 0
c Var 'aux64' direct represents '2' with '7120'
7117 -7119 7120 0
-7120 7119 0
-7120 -7117 0
c Var 'aux64' order represents '3' with '7121'
-7119 7121 0
c Var 'aux64' direct represents '3' with '7122'
7119 -7121 7122 0
-7122 7121 0
-7122 -7119 0
c Var 'aux64' order represents '4' with '7123'
-7121 7123 0
c Var 'aux64' direct represents '4' with '7124'
7121 -7123 7124 0
-7124 7123 0
-7124 -7121 0
c Var 'aux64' order represents '5' with '7125'
-7123 7125 0
c Var 'aux64' direct represents '5' with '7126'
7123 -7125 7126 0
-7126 7125 0
-7126 -7123 0
c Var 'aux64' order represents '6' with '7127'
-7125 7127 0
c Var 'aux64' direct represents '6' with '7128'
7125 -7127 7128 0
-7128 7127 0
-7128 -7125 0
c Var 'aux64' order represents '7' with '7129'
-7127 7129 0
c Var 'aux64' direct represents '7' with '7130'
7127 -7129 7130 0
-7130 7129 0
-7130 -7127 0
c Var 'aux64' order represents '8' with '7131'
-7129 7131 0
c Var 'aux64' direct represents '8' with '7132'
7129 -7131 7132 0
-7132 7131 0
-7132 -7129 0
c Var 'aux64' direct represents '9' with '-7131'
7116 7118 7120 7122 7124 7126 7128 7130 7132 -7131 0
c Encoding variable: aux65 with domain: int(0..9) (representing constraint (variant_fields_00002_00007_00004 * (4<=variant_fields_00002_00007_00001)))
c Both direct and order encoding.
c Var 'aux65' order represents '0' with '7133'
c Var 'aux65' direct represents '0' with '7133'
c Var 'aux65' order represents '1' with '7134'
-7133 7134 0
c Var 'aux65' direct represents '1' with '7135'
7133 -7134 7135 0
-7135 7134 0
-7135 -7133 0
c Var 'aux65' order represents '2' with '7136'
-7134 7136 0
c Var 'aux65' direct represents '2' with '7137'
7134 -7136 7137 0
-7137 7136 0
-7137 -7134 0
c Var 'aux65' order represents '3' with '7138'
-7136 7138 0
c Var 'aux65' direct represents '3' with '7139'
7136 -7138 7139 0
-7139 7138 0
-7139 -7136 0
c Var 'aux65' order represents '4' with '7140'
-7138 7140 0
c Var 'aux65' direct represents '4' with '7141'
7138 -7140 7141 0
-7141 7140 0
-7141 -7138 0
c Var 'aux65' order represents '5' with '7142'
-7140 7142 0
c Var 'aux65' direct represents '5' with '7143'
7140 -7142 7143 0
-7143 7142 0
-7143 -7140 0
c Var 'aux65' order represents '6' with '7144'
-7142 7144 0
c Var 'aux65' direct represents '6' with '7145'
7142 -7144 7145 0
-7145 7144 0
-7145 -7142 0
c Var 'aux65' order represents '7' with '7146'
-7144 7146 0
c Var 'aux65' direct represents '7' with '7147'
7144 -7146 7147 0
-7147 7146 0
-7147 -7144 0
c Var 'aux65' order represents '8' with '7148'
-7146 7148 0
c Var 'aux65' direct represents '8' with '7149'
7146 -7148 7149 0
-7149 7148 0
-7149 -7146 0
c Var 'aux65' direct represents '9' with '-7148'
7133 7135 7137 7139 7141 7143 7145 7147 7149 -7148 0
c Encoding variable: aux66 with domain: int(0..9) (representing constraint (variant_fields_00002_00007_00005 * (5<=variant_fields_00002_00007_00001)))
c Both direct and order encoding.
c Var 'aux66' order represents '0' with '7150'
c Var 'aux66' direct represents '0' with '7150'
c Var 'aux66' order represents '1' with '7151'
-7150 7151 0
c Var 'aux66' direct represents '1' with '7152'
7150 -7151 7152 0
-7152 7151 0
-7152 -7150 0
c Var 'aux66' order represents '2' with '7153'
-7151 7153 0
c Var 'aux66' direct represents '2' with '7154'
7151 -7153 7154 0
-7154 7153 0
-7154 -7151 0
c Var 'aux66' order represents '3' with '7155'
-7153 7155 0
c Var 'aux66' direct represents '3' with '7156'
7153 -7155 7156 0
-7156 7155 0
-7156 -7153 0
c Var 'aux66' order represents '4' with '7157'
-7155 7157 0
c Var 'aux66' direct represents '4' with '7158'
7155 -7157 7158 0
-7158 7157 0
-7158 -7155 0
c Var 'aux66' order represents '5' with '7159'
-7157 7159 0
c Var 'aux66' direct represents '5' with '7160'
7157 -7159 7160 0
-7160 7159 0
-7160 -7157 0
c Var 'aux66' order represents '6' with '7161'
-7159 7161 0
c Var 'aux66' direct represents '6' with '7162'
7159 -7161 7162 0
-7162 7161 0
-7162 -7159 0
c Var 'aux66' order represents '7' with '7163'
-7161 7163 0
c Var 'aux66' direct represents '7' with '7164'
7161 -7163 7164 0
-7164 7163 0
-7164 -7161 0
c Var 'aux66' order represents '8' with '7165'
-7163 7165 0
c Var 'aux66' direct represents '8' with '7166'
7163 -7165 7166 0
-7166 7165 0
-7166 -7163 0
c Var 'aux66' direct represents '9' with '-7165'
7150 7152 7154 7156 7158 7160 7162 7164 7166 -7165 0
c Encoding variable: aux67 with domain: int(0..9) (representing constraint (variant_fields_00002_00007_00006 * (6<=variant_fields_00002_00007_00001)))
c Both direct and order encoding.
c Var 'aux67' order represents '0' with '7167'
c Var 'aux67' direct represents '0' with '7167'
c Var 'aux67' order represents '1' with '7168'
-7167 7168 0
c Var 'aux67' direct represents '1' with '7169'
7167 -7168 7169 0
-7169 7168 0
-7169 -7167 0
c Var 'aux67' order represents '2' with '7170'
-7168 7170 0
c Var 'aux67' direct represents '2' with '7171'
7168 -7170 7171 0
-7171 7170 0
-7171 -7168 0
c Var 'aux67' order represents '3' with '7172'
-7170 7172 0
c Var 'aux67' direct represents '3' with '7173'
7170 -7172 7173 0
-7173 7172 0
-7173 -7170 0
c Var 'aux67' order represents '4' with '7174'
-7172 7174 0
c Var 'aux67' direct represents '4' with '7175'
7172 -7174 7175 0
-7175 7174 0
-7175 -7172 0
c Var 'aux67' order represents '5' with '7176'
-7174 7176 0
c Var 'aux67' direct represents '5' with '7177'
7174 -7176 7177 0
-7177 7176 0
-7177 -7174 0
c Var 'aux67' order represents '6' with '7178'
-7176 7178 0
c Var 'aux67' direct represents '6' with '7179'
7176 -7178 7179 0
-7179 7178 0
-7179 -7176 0
c Var 'aux67' order represents '7' with '7180'
-7178 7180 0
c Var 'aux67' direct represents '7' with '7181'
7178 -7180 7181 0
-7181 7180 0
-7181 -7178 0
c Var 'aux67' order represents '8' with '7182'
-7180 7182 0
c Var 'aux67' direct represents '8' with '7183'
7180 -7182 7183 0
-7183 7182 0
-7183 -7180 0
c Var 'aux67' direct represents '9' with '-7182'
7167 7169 7171 7173 7175 7177 7179 7181 7183 -7182 0
c Encoding variable: aux68 with domain: int(0..9) (representing constraint (variant_fields_00002_00007_00007 * (7<=variant_fields_00002_00007_00001)))
c Both direct and order encoding.
c Var 'aux68' order represents '0' with '7184'
c Var 'aux68' direct represents '0' with '7184'
c Var 'aux68' order represents '1' with '7185'
-7184 7185 0
c Var 'aux68' direct represents '1' with '7186'
7184 -7185 7186 0
-7186 7185 0
-7186 -7184 0
c Var 'aux68' order represents '2' with '7187'
-7185 7187 0
c Var 'aux68' direct represents '2' with '7188'
7185 -7187 7188 0
-7188 7187 0
-7188 -7185 0
c Var 'aux68' order represents '3' with '7189'
-7187 7189 0
c Var 'aux68' direct represents '3' with '7190'
7187 -7189 7190 0
-7190 7189 0
-7190 -7187 0
c Var 'aux68' order represents '4' with '7191'
-7189 7191 0
c Var 'aux68' direct represents '4' with '7192'
7189 -7191 7192 0
-7192 7191 0
-7192 -7189 0
c Var 'aux68' order represents '5' with '7193'
-7191 7193 0
c Var 'aux68' direct represents '5' with '7194'
7191 -7193 7194 0
-7194 7193 0
-7194 -7191 0
c Var 'aux68' order represents '6' with '7195'
-7193 7195 0
c Var 'aux68' direct represents '6' with '7196'
7193 -7195 7196 0
-7196 7195 0
-7196 -7193 0
c Var 'aux68' order represents '7' with '7197'
-7195 7197 0
c Var 'aux68' direct represents '7' with '7198'
7195 -7197 7198 0
-7198 7197 0
-7198 -7195 0
c Var 'aux68' order represents '8' with '7199'
-7197 7199 0
c Var 'aux68' direct represents '8' with '7200'
7197 -7199 7200 0
-7200 7199 0
-7200 -7197 0
c Var 'aux68' direct represents '9' with '-7199'
7184 7186 7188 7190 7192 7194 7196 7198 7200 -7199 0
c Encoding variable: aux69 with domain: int(0..9) (representing constraint (variant_fields_00002_00007_00008 * (8<=variant_fields_00002_00007_00001)))
c Both direct and order encoding.
c Var 'aux69' order represents '0' with '7201'
c Var 'aux69' direct represents '0' with '7201'
c Var 'aux69' order represents '1' with '7202'
-7201 7202 0
c Var 'aux69' direct represents '1' with '7203'
7201 -7202 7203 0
-7203 7202 0
-7203 -7201 0
c Var 'aux69' order represents '2' with '7204'
-7202 7204 0
c Var 'aux69' direct represents '2' with '7205'
7202 -7204 7205 0
-7205 7204 0
-7205 -7202 0
c Var 'aux69' order represents '3' with '7206'
-7204 7206 0
c Var 'aux69' direct represents '3' with '7207'
7204 -7206 7207 0
-7207 7206 0
-7207 -7204 0
c Var 'aux69' order represents '4' with '7208'
-7206 7208 0
c Var 'aux69' direct represents '4' with '7209'
7206 -7208 7209 0
-7209 7208 0
-7209 -7206 0
c Var 'aux69' order represents '5' with '7210'
-7208 7210 0
c Var 'aux69' direct represents '5' with '7211'
7208 -7210 7211 0
-7211 7210 0
-7211 -7208 0
c Var 'aux69' order represents '6' with '7212'
-7210 7212 0
c Var 'aux69' direct represents '6' with '7213'
7210 -7212 7213 0
-7213 7212 0
-7213 -7210 0
c Var 'aux69' order represents '7' with '7214'
-7212 7214 0
c Var 'aux69' direct represents '7' with '7215'
7212 -7214 7215 0
-7215 7214 0
-7215 -7212 0
c Var 'aux69' order represents '8' with '7216'
-7214 7216 0
c Var 'aux69' direct represents '8' with '7217'
7214 -7216 7217 0
-7217 7216 0
-7217 -7214 0
c Var 'aux69' direct represents '9' with '-7216'
7201 7203 7205 7207 7209 7211 7213 7215 7217 -7216 0
c Encoding variable: aux70 with domain: int(0..9) (representing constraint (variant_fields_00002_00007_00009 * (9<=variant_fields_00002_00007_00001)))
c Both direct and order encoding.
c Var 'aux70' order represents '0' with '7218'
c Var 'aux70' direct represents '0' with '7218'
c Var 'aux70' order represents '1' with '7219'
-7218 7219 0
c Var 'aux70' direct represents '1' with '7220'
7218 -7219 7220 0
-7220 7219 0
-7220 -7218 0
c Var 'aux70' order represents '2' with '7221'
-7219 7221 0
c Var 'aux70' direct represents '2' with '7222'
7219 -7221 7222 0
-7222 7221 0
-7222 -7219 0
c Var 'aux70' order represents '3' with '7223'
-7221 7223 0
c Var 'aux70' direct represents '3' with '7224'
7221 -7223 7224 0
-7224 7223 0
-7224 -7221 0
c Var 'aux70' order represents '4' with '7225'
-7223 7225 0
c Var 'aux70' direct represents '4' with '7226'
7223 -7225 7226 0
-7226 7225 0
-7226 -7223 0
c Var 'aux70' order represents '5' with '7227'
-7225 7227 0
c Var 'aux70' direct represents '5' with '7228'
7225 -7227 7228 0
-7228 7227 0
-7228 -7225 0
c Var 'aux70' order represents '6' with '7229'
-7227 7229 0
c Var 'aux70' direct represents '6' with '7230'
7227 -7229 7230 0
-7230 7229 0
-7230 -7227 0
c Var 'aux70' order represents '7' with '7231'
-7229 7231 0
c Var 'aux70' direct represents '7' with '7232'
7229 -7231 7232 0
-7232 7231 0
-7232 -7229 0
c Var 'aux70' order represents '8' with '7233'
-7231 7233 0
c Var 'aux70' direct represents '8' with '7234'
7231 -7233 7234 0
-7234 7233 0
-7234 -7231 0
c Var 'aux70' direct represents '9' with '-7233'
7218 7220 7222 7224 7226 7228 7230 7232 7234 -7233 0
c Encoding variable: aux71 with domain: bool (representing constraint ((variant_fields_00002_00007_00001 + aux63 + aux64 + aux65 + aux66 + aux67 + aux68 + aux69 + aux70)=tv=16))
c Var 'aux71' direct represents '0' with '-7235'
c Var 'aux71' direct represents '1' with '7235'
c Var 'aux71' order represents '1' with '1'
c Var 'aux71' order represents '0' with '-7235'
c Encoding variable: aux72 with domain: int(0..9) (representing constraint (variant_fields_00003_00002_00002 * (2<=variant_fields_00003_00002_00001)))
c Both direct and order encoding.
c Var 'aux72' order represents '0' with '7236'
c Var 'aux72' direct represents '0' with '7236'
c Var 'aux72' order represents '1' with '7237'
-7236 7237 0
c Var 'aux72' direct represents '1' with '7238'
7236 -7237 7238 0
-7238 7237 0
-7238 -7236 0
c Var 'aux72' order represents '2' with '7239'
-7237 7239 0
c Var 'aux72' direct represents '2' with '7240'
7237 -7239 7240 0
-7240 7239 0
-7240 -7237 0
c Var 'aux72' order represents '3' with '7241'
-7239 7241 0
c Var 'aux72' direct represents '3' with '7242'
7239 -7241 7242 0
-7242 7241 0
-7242 -7239 0
c Var 'aux72' order represents '4' with '7243'
-7241 7243 0
c Var 'aux72' direct represents '4' with '7244'
7241 -7243 7244 0
-7244 7243 0
-7244 -7241 0
c Var 'aux72' order represents '5' with '7245'
-7243 7245 0
c Var 'aux72' direct represents '5' with '7246'
7243 -7245 7246 0
-7246 7245 0
-7246 -7243 0
c Var 'aux72' order represents '6' with '7247'
-7245 7247 0
c Var 'aux72' direct represents '6' with '7248'
7245 -7247 7248 0
-7248 7247 0
-7248 -7245 0
c Var 'aux72' order represents '7' with '7249'
-7247 7249 0
c Var 'aux72' direct represents '7' with '7250'
7247 -7249 7250 0
-7250 7249 0
-7250 -7247 0
c Var 'aux72' order represents '8' with '7251'
-7249 7251 0
c Var 'aux72' direct represents '8' with '7252'
7249 -7251 7252 0
-7252 7251 0
-7252 -7249 0
c Var 'aux72' direct represents '9' with '-7251'
7236 7238 7240 7242 7244 7246 7248 7250 7252 -7251 0
c Encoding variable: aux73 with domain: int(0..9) (representing constraint (variant_fields_00003_00002_00003 * (3<=variant_fields_00003_00002_00001)))
c Both direct and order encoding.
c Var 'aux73' order represents '0' with '7253'
c Var 'aux73' direct represents '0' with '7253'
c Var 'aux73' order represents '1' with '7254'
-7253 7254 0
c Var 'aux73' direct represents '1' with '7255'
7253 -7254 7255 0
-7255 7254 0
-7255 -7253 0
c Var 'aux73' order represents '2' with '7256'
-7254 7256 0
c Var 'aux73' direct represents '2' with '7257'
7254 -7256 7257 0
-7257 7256 0
-7257 -7254 0
c Var 'aux73' order represents '3' with '7258'
-7256 7258 0
c Var 'aux73' direct represents '3' with '7259'
7256 -7258 7259 0
-7259 7258 0
-7259 -7256 0
c Var 'aux73' order represents '4' with '7260'
-7258 7260 0
c Var 'aux73' direct represents '4' with '7261'
7258 -7260 7261 0
-7261 7260 0
-7261 -7258 0
c Var 'aux73' order represents '5' with '7262'
-7260 7262 0
c Var 'aux73' direct represents '5' with '7263'
7260 -7262 7263 0
-7263 7262 0
-7263 -7260 0
c Var 'aux73' order represents '6' with '7264'
-7262 7264 0
c Var 'aux73' direct represents '6' with '7265'
7262 -7264 7265 0
-7265 7264 0
-7265 -7262 0
c Var 'aux73' order represents '7' with '7266'
-7264 7266 0
c Var 'aux73' direct represents '7' with '7267'
7264 -7266 7267 0
-7267 7266 0
-7267 -7264 0
c Var 'aux73' order represents '8' with '7268'
-7266 7268 0
c Var 'aux73' direct represents '8' with '7269'
7266 -7268 7269 0
-7269 7268 0
-7269 -7266 0
c Var 'aux73' direct represents '9' with '-7268'
7253 7255 7257 7259 7261 7263 7265 7267 7269 -7268 0
c Encoding variable: aux74 with domain: int(0..9) (representing constraint (variant_fields_00003_00002_00004 * (4<=variant_fields_00003_00002_00001)))
c Both direct and order encoding.
c Var 'aux74' order represents '0' with '7270'
c Var 'aux74' direct represents '0' with '7270'
c Var 'aux74' order represents '1' with '7271'
-7270 7271 0
c Var 'aux74' direct represents '1' with '7272'
7270 -7271 7272 0
-7272 7271 0
-7272 -7270 0
c Var 'aux74' order represents '2' with '7273'
-7271 7273 0
c Var 'aux74' direct represents '2' with '7274'
7271 -7273 7274 0
-7274 7273 0
-7274 -7271 0
c Var 'aux74' order represents '3' with '7275'
-7273 7275 0
c Var 'aux74' direct represents '3' with '7276'
7273 -7275 7276 0
-7276 7275 0
-7276 -7273 0
c Var 'aux74' order represents '4' with '7277'
-7275 7277 0
c Var 'aux74' direct represents '4' with '7278'
7275 -7277 7278 0
-7278 7277 0
-7278 -7275 0
c Var 'aux74' order represents '5' with '7279'
-7277 7279 0
c Var 'aux74' direct represents '5' with '7280'
7277 -7279 7280 0
-7280 7279 0
-7280 -7277 0
c Var 'aux74' order represents '6' with '7281'
-7279 7281 0
c Var 'aux74' direct represents '6' with '7282'
7279 -7281 7282 0
-7282 7281 0
-7282 -7279 0
c Var 'aux74' order represents '7' with '7283'
-7281 7283 0
c Var 'aux74' direct represents '7' with '7284'
7281 -7283 7284 0
-7284 7283 0
-7284 -7281 0
c Var 'aux74' order represents '8' with '7285'
-7283 7285 0
c Var 'aux74' direct represents '8' with '7286'
7283 -7285 7286 0
-7286 7285 0
-7286 -7283 0
c Var 'aux74' direct represents '9' with '-7285'
7270 7272 7274 7276 7278 7280 7282 7284 7286 -7285 0
c Encoding variable: aux75 with domain: int(0..9) (representing constraint (variant_fields_00003_00002_00005 * (5<=variant_fields_00003_00002_00001)))
c Both direct and order encoding.
c Var 'aux75' order represents '0' with '7287'
c Var 'aux75' direct represents '0' with '7287'
c Var 'aux75' order represents '1' with '7288'
-7287 7288 0
c Var 'aux75' direct represents '1' with '7289'
7287 -7288 7289 0
-7289 7288 0
-7289 -7287 0
c Var 'aux75' order represents '2' with '7290'
-7288 7290 0
c Var 'aux75' direct represents '2' with '7291'
7288 -7290 7291 0
-7291 7290 0
-7291 -7288 0
c Var 'aux75' order represents '3' with '7292'
-7290 7292 0
c Var 'aux75' direct represents '3' with '7293'
7290 -7292 7293 0
-7293 7292 0
-7293 -7290 0
c Var 'aux75' order represents '4' with '7294'
-7292 7294 0
c Var 'aux75' direct represents '4' with '7295'
7292 -7294 7295 0
-7295 7294 0
-7295 -7292 0
c Var 'aux75' order represents '5' with '7296'
-7294 7296 0
c Var 'aux75' direct represents '5' with '7297'
7294 -7296 7297 0
-7297 7296 0
-7297 -7294 0
c Var 'aux75' order represents '6' with '7298'
-7296 7298 0
c Var 'aux75' direct represents '6' with '7299'
7296 -7298 7299 0
-7299 7298 0
-7299 -7296 0
c Var 'aux75' order represents '7' with '7300'
-7298 7300 0
c Var 'aux75' direct represents '7' with '7301'
7298 -7300 7301 0
-7301 7300 0
-7301 -7298 0
c Var 'aux75' order represents '8' with '7302'
-7300 7302 0
c Var 'aux75' direct represents '8' with '7303'
7300 -7302 7303 0
-7303 7302 0
-7303 -7300 0
c Var 'aux75' direct represents '9' with '-7302'
7287 7289 7291 7293 7295 7297 7299 7301 7303 -7302 0
c Encoding variable: aux76 with domain: int(0..9) (representing constraint (variant_fields_00003_00002_00006 * (6<=variant_fields_00003_00002_00001)))
c Both direct and order encoding.
c Var 'aux76' order represents '0' with '7304'
c Var 'aux76' direct represents '0' with '7304'
c Var 'aux76' order represents '1' with '7305'
-7304 7305 0
c Var 'aux76' direct represents '1' with '7306'
7304 -7305 7306 0
-7306 7305 0
-7306 -7304 0
c Var 'aux76' order represents '2' with '7307'
-7305 7307 0
c Var 'aux76' direct represents '2' with '7308'
7305 -7307 7308 0
-7308 7307 0
-7308 -7305 0
c Var 'aux76' order represents '3' with '7309'
-7307 7309 0
c Var 'aux76' direct represents '3' with '7310'
7307 -7309 7310 0
-7310 7309 0
-7310 -7307 0
c Var 'aux76' order represents '4' with '7311'
-7309 7311 0
c Var 'aux76' direct represents '4' with '7312'
7309 -7311 7312 0
-7312 7311 0
-7312 -7309 0
c Var 'aux76' order represents '5' with '7313'
-7311 7313 0
c Var 'aux76' direct represents '5' with '7314'
7311 -7313 7314 0
-7314 7313 0
-7314 -7311 0
c Var 'aux76' order represents '6' with '7315'
-7313 7315 0
c Var 'aux76' direct represents '6' with '7316'
7313 -7315 7316 0
-7316 7315 0
-7316 -7313 0
c Var 'aux76' order represents '7' with '7317'
-7315 7317 0
c Var 'aux76' direct represents '7' with '7318'
7315 -7317 7318 0
-7318 7317 0
-7318 -7315 0
c Var 'aux76' order represents '8' with '7319'
-7317 7319 0
c Var 'aux76' direct represents '8' with '7320'
7317 -7319 7320 0
-7320 7319 0
-7320 -7317 0
c Var 'aux76' direct represents '9' with '-7319'
7304 7306 7308 7310 7312 7314 7316 7318 7320 -7319 0
c Encoding variable: aux77 with domain: int(0..9) (representing constraint (variant_fields_00003_00002_00007 * (7<=variant_fields_00003_00002_00001)))
c Both direct and order encoding.
c Var 'aux77' order represents '0' with '7321'
c Var 'aux77' direct represents '0' with '7321'
c Var 'aux77' order represents '1' with '7322'
-7321 7322 0
c Var 'aux77' direct represents '1' with '7323'
7321 -7322 7323 0
-7323 7322 0
-7323 -7321 0
c Var 'aux77' order represents '2' with '7324'
-7322 7324 0
c Var 'aux77' direct represents '2' with '7325'
7322 -7324 7325 0
-7325 7324 0
-7325 -7322 0
c Var 'aux77' order represents '3' with '7326'
-7324 7326 0
c Var 'aux77' direct represents '3' with '7327'
7324 -7326 7327 0
-7327 7326 0
-7327 -7324 0
c Var 'aux77' order represents '4' with '7328'
-7326 7328 0
c Var 'aux77' direct represents '4' with '7329'
7326 -7328 7329 0
-7329 7328 0
-7329 -7326 0
c Var 'aux77' order represents '5' with '7330'
-7328 7330 0
c Var 'aux77' direct represents '5' with '7331'
7328 -7330 7331 0
-7331 7330 0
-7331 -7328 0
c Var 'aux77' order represents '6' with '7332'
-7330 7332 0
c Var 'aux77' direct represents '6' with '7333'
7330 -7332 7333 0
-7333 7332 0
-7333 -7330 0
c Var 'aux77' order represents '7' with '7334'
-7332 7334 0
c Var 'aux77' direct represents '7' with '7335'
7332 -7334 7335 0
-7335 7334 0
-7335 -7332 0
c Var 'aux77' order represents '8' with '7336'
-7334 7336 0
c Var 'aux77' direct represents '8' with '7337'
7334 -7336 7337 0
-7337 7336 0
-7337 -7334 0
c Var 'aux77' direct represents '9' with '-7336'
7321 7323 7325 7327 7329 7331 7333 7335 7337 -7336 0
c Encoding variable: aux78 with domain: int(0..9) (representing constraint (variant_fields_00003_00002_00008 * (8<=variant_fields_00003_00002_00001)))
c Both direct and order encoding.
c Var 'aux78' order represents '0' with '7338'
c Var 'aux78' direct represents '0' with '7338'
c Var 'aux78' order represents '1' with '7339'
-7338 7339 0
c Var 'aux78' direct represents '1' with '7340'
7338 -7339 7340 0
-7340 7339 0
-7340 -7338 0
c Var 'aux78' order represents '2' with '7341'
-7339 7341 0
c Var 'aux78' direct represents '2' with '7342'
7339 -7341 7342 0
-7342 7341 0
-7342 -7339 0
c Var 'aux78' order represents '3' with '7343'
-7341 7343 0
c Var 'aux78' direct represents '3' with '7344'
7341 -7343 7344 0
-7344 7343 0
-7344 -7341 0
c Var 'aux78' order represents '4' with '7345'
-7343 7345 0
c Var 'aux78' direct represents '4' with '7346'
7343 -7345 7346 0
-7346 7345 0
-7346 -7343 0
c Var 'aux78' order represents '5' with '7347'
-7345 7347 0
c Var 'aux78' direct represents '5' with '7348'
7345 -7347 7348 0
-7348 7347 0
-7348 -7345 0
c Var 'aux78' order represents '6' with '7349'
-7347 7349 0
c Var 'aux78' direct represents '6' with '7350'
7347 -7349 7350 0
-7350 7349 0
-7350 -7347 0
c Var 'aux78' order represents '7' with '7351'
-7349 7351 0
c Var 'aux78' direct represents '7' with '7352'
7349 -7351 7352 0
-7352 7351 0
-7352 -7349 0
c Var 'aux78' order represents '8' with '7353'
-7351 7353 0
c Var 'aux78' direct represents '8' with '7354'
7351 -7353 7354 0
-7354 7353 0
-7354 -7351 0
c Var 'aux78' direct represents '9' with '-7353'
7338 7340 7342 7344 7346 7348 7350 7352 7354 -7353 0
c Encoding variable: aux79 with domain: int(0..9) (representing constraint (variant_fields_00003_00002_00009 * (9<=variant_fields_00003_00002_00001)))
c Both direct and order encoding.
c Var 'aux79' order represents '0' with '7355'
c Var 'aux79' direct represents '0' with '7355'
c Var 'aux79' order represents '1' with '7356'
-7355 7356 0
c Var 'aux79' direct represents '1' with '7357'
7355 -7356 7357 0
-7357 7356 0
-7357 -7355 0
c Var 'aux79' order represents '2' with '7358'
-7356 7358 0
c Var 'aux79' direct represents '2' with '7359'
7356 -7358 7359 0
-7359 7358 0
-7359 -7356 0
c Var 'aux79' order represents '3' with '7360'
-7358 7360 0
c Var 'aux79' direct represents '3' with '7361'
7358 -7360 7361 0
-7361 7360 0
-7361 -7358 0
c Var 'aux79' order represents '4' with '7362'
-7360 7362 0
c Var 'aux79' direct represents '4' with '7363'
7360 -7362 7363 0
-7363 7362 0
-7363 -7360 0
c Var 'aux79' order represents '5' with '7364'
-7362 7364 0
c Var 'aux79' direct represents '5' with '7365'
7362 -7364 7365 0
-7365 7364 0
-7365 -7362 0
c Var 'aux79' order represents '6' with '7366'
-7364 7366 0
c Var 'aux79' direct represents '6' with '7367'
7364 -7366 7367 0
-7367 7366 0
-7367 -7364 0
c Var 'aux79' order represents '7' with '7368'
-7366 7368 0
c Var 'aux79' direct represents '7' with '7369'
7366 -7368 7369 0
-7369 7368 0
-7369 -7366 0
c Var 'aux79' order represents '8' with '7370'
-7368 7370 0
c Var 'aux79' direct represents '8' with '7371'
7368 -7370 7371 0
-7371 7370 0
-7371 -7368 0
c Var 'aux79' direct represents '9' with '-7370'
7355 7357 7359 7361 7363 7365 7367 7369 7371 -7370 0
c Encoding variable: aux80 with domain: bool (representing constraint ((variant_fields_00003_00002_00001 + aux72 + aux73 + aux74 + aux75 + aux76 + aux77 + aux78 + aux79)=tv=8))
c Var 'aux80' direct represents '0' with '-7372'
c Var 'aux80' direct represents '1' with '7372'
c Var 'aux80' order represents '1' with '1'
c Var 'aux80' order represents '0' with '-7372'
c Encoding variable: aux81 with domain: int(0..9) (representing constraint (variant_fields_00003_00004_00002 * (2<=variant_fields_00003_00004_00001)))
c Both direct and order encoding.
c Var 'aux81' order represents '0' with '7373'
c Var 'aux81' direct represents '0' with '7373'
c Var 'aux81' order represents '1' with '7374'
-7373 7374 0
c Var 'aux81' direct represents '1' with '7375'
7373 -7374 7375 0
-7375 7374 0
-7375 -7373 0
c Var 'aux81' order represents '2' with '7376'
-7374 7376 0
c Var 'aux81' direct represents '2' with '7377'
7374 -7376 7377 0
-7377 7376 0
-7377 -7374 0
c Var 'aux81' order represents '3' with '7378'
-7376 7378 0
c Var 'aux81' direct represents '3' with '7379'
7376 -7378 7379 0
-7379 7378 0
-7379 -7376 0
c Var 'aux81' order represents '4' with '7380'
-7378 7380 0
c Var 'aux81' direct represents '4' with '7381'
7378 -7380 7381 0
-7381 7380 0
-7381 -7378 0
c Var 'aux81' order represents '5' with '7382'
-7380 7382 0
c Var 'aux81' direct represents '5' with '7383'
7380 -7382 7383 0
-7383 7382 0
-7383 -7380 0
c Var 'aux81' order represents '6' with '7384'
-7382 7384 0
c Var 'aux81' direct represents '6' with '7385'
7382 -7384 7385 0
-7385 7384 0
-7385 -7382 0
c Var 'aux81' order represents '7' with '7386'
-7384 7386 0
c Var 'aux81' direct represents '7' with '7387'
7384 -7386 7387 0
-7387 7386 0
-7387 -7384 0
c Var 'aux81' order represents '8' with '7388'
-7386 7388 0
c Var 'aux81' direct represents '8' with '7389'
7386 -7388 7389 0
-7389 7388 0
-7389 -7386 0
c Var 'aux81' direct represents '9' with '-7388'
7373 7375 7377 7379 7381 7383 7385 7387 7389 -7388 0
c Encoding variable: aux82 with domain: int(0..9) (representing constraint (variant_fields_00003_00004_00003 * (3<=variant_fields_00003_00004_00001)))
c Both direct and order encoding.
c Var 'aux82' order represents '0' with '7390'
c Var 'aux82' direct represents '0' with '7390'
c Var 'aux82' order represents '1' with '7391'
-7390 7391 0
c Var 'aux82' direct represents '1' with '7392'
7390 -7391 7392 0
-7392 7391 0
-7392 -7390 0
c Var 'aux82' order represents '2' with '7393'
-7391 7393 0
c Var 'aux82' direct represents '2' with '7394'
7391 -7393 7394 0
-7394 7393 0
-7394 -7391 0
c Var 'aux82' order represents '3' with '7395'
-7393 7395 0
c Var 'aux82' direct represents '3' with '7396'
7393 -7395 7396 0
-7396 7395 0
-7396 -7393 0
c Var 'aux82' order represents '4' with '7397'
-7395 7397 0
c Var 'aux82' direct represents '4' with '7398'
7395 -7397 7398 0
-7398 7397 0
-7398 -7395 0
c Var 'aux82' order represents '5' with '7399'
-7397 7399 0
c Var 'aux82' direct represents '5' with '7400'
7397 -7399 7400 0
-7400 7399 0
-7400 -7397 0
c Var 'aux82' order represents '6' with '7401'
-7399 7401 0
c Var 'aux82' direct represents '6' with '7402'
7399 -7401 7402 0
-7402 7401 0
-7402 -7399 0
c Var 'aux82' order represents '7' with '7403'
-7401 7403 0
c Var 'aux82' direct represents '7' with '7404'
7401 -7403 7404 0
-7404 7403 0
-7404 -7401 0
c Var 'aux82' order represents '8' with '7405'
-7403 7405 0
c Var 'aux82' direct represents '8' with '7406'
7403 -7405 7406 0
-7406 7405 0
-7406 -7403 0
c Var 'aux82' direct represents '9' with '-7405'
7390 7392 7394 7396 7398 7400 7402 7404 7406 -7405 0
c Encoding variable: aux83 with domain: int(0..9) (representing constraint (variant_fields_00003_00004_00004 * (4<=variant_fields_00003_00004_00001)))
c Both direct and order encoding.
c Var 'aux83' order represents '0' with '7407'
c Var 'aux83' direct represents '0' with '7407'
c Var 'aux83' order represents '1' with '7408'
-7407 7408 0
c Var 'aux83' direct represents '1' with '7409'
7407 -7408 7409 0
-7409 7408 0
-7409 -7407 0
c Var 'aux83' order represents '2' with '7410'
-7408 7410 0
c Var 'aux83' direct represents '2' with '7411'
7408 -7410 7411 0
-7411 7410 0
-7411 -7408 0
c Var 'aux83' order represents '3' with '7412'
-7410 7412 0
c Var 'aux83' direct represents '3' with '7413'
7410 -7412 7413 0
-7413 7412 0
-7413 -7410 0
c Var 'aux83' order represents '4' with '7414'
-7412 7414 0
c Var 'aux83' direct represents '4' with '7415'
7412 -7414 7415 0
-7415 7414 0
-7415 -7412 0
c Var 'aux83' order represents '5' with '7416'
-7414 7416 0
c Var 'aux83' direct represents '5' with '7417'
7414 -7416 7417 0
-7417 7416 0
-7417 -7414 0
c Var 'aux83' order represents '6' with '7418'
-7416 7418 0
c Var 'aux83' direct represents '6' with '7419'
7416 -7418 7419 0
-7419 7418 0
-7419 -7416 0
c Var 'aux83' order represents '7' with '7420'
-7418 7420 0
c Var 'aux83' direct represents '7' with '7421'
7418 -7420 7421 0
-7421 7420 0
-7421 -7418 0
c Var 'aux83' order represents '8' with '7422'
-7420 7422 0
c Var 'aux83' direct represents '8' with '7423'
7420 -7422 7423 0
-7423 7422 0
-7423 -7420 0
c Var 'aux83' direct represents '9' with '-7422'
7407 7409 7411 7413 7415 7417 7419 7421 7423 -7422 0
c Encoding variable: aux84 with domain: int(0..9) (representing constraint (variant_fields_00003_00004_00005 * (5<=variant_fields_00003_00004_00001)))
c Both direct and order encoding.
c Var 'aux84' order represents '0' with '7424'
c Var 'aux84' direct represents '0' with '7424'
c Var 'aux84' order represents '1' with '7425'
-7424 7425 0
c Var 'aux84' direct represents '1' with '7426'
7424 -7425 7426 0
-7426 7425 0
-7426 -7424 0
c Var 'aux84' order represents '2' with '7427'
-7425 7427 0
c Var 'aux84' direct represents '2' with '7428'
7425 -7427 7428 0
-7428 7427 0
-7428 -7425 0
c Var 'aux84' order represents '3' with '7429'
-7427 7429 0
c Var 'aux84' direct represents '3' with '7430'
7427 -7429 7430 0
-7430 7429 0
-7430 -7427 0
c Var 'aux84' order represents '4' with '7431'
-7429 7431 0
c Var 'aux84' direct represents '4' with '7432'
7429 -7431 7432 0
-7432 7431 0
-7432 -7429 0
c Var 'aux84' order represents '5' with '7433'
-7431 7433 0
c Var 'aux84' direct represents '5' with '7434'
7431 -7433 7434 0
-7434 7433 0
-7434 -7431 0
c Var 'aux84' order represents '6' with '7435'
-7433 7435 0
c Var 'aux84' direct represents '6' with '7436'
7433 -7435 7436 0
-7436 7435 0
-7436 -7433 0
c Var 'aux84' order represents '7' with '7437'
-7435 7437 0
c Var 'aux84' direct represents '7' with '7438'
7435 -7437 7438 0
-7438 7437 0
-7438 -7435 0
c Var 'aux84' order represents '8' with '7439'
-7437 7439 0
c Var 'aux84' direct represents '8' with '7440'
7437 -7439 7440 0
-7440 7439 0
-7440 -7437 0
c Var 'aux84' direct represents '9' with '-7439'
7424 7426 7428 7430 7432 7434 7436 7438 7440 -7439 0
c Encoding variable: aux85 with domain: int(0..9) (representing constraint (variant_fields_00003_00004_00006 * (6<=variant_fields_00003_00004_00001)))
c Both direct and order encoding.
c Var 'aux85' order represents '0' with '7441'
c Var 'aux85' direct represents '0' with '7441'
c Var 'aux85' order represents '1' with '7442'
-7441 7442 0
c Var 'aux85' direct represents '1' with '7443'
7441 -7442 7443 0
-7443 7442 0
-7443 -7441 0
c Var 'aux85' order represents '2' with '7444'
-7442 7444 0
c Var 'aux85' direct represents '2' with '7445'
7442 -7444 7445 0
-7445 7444 0
-7445 -7442 0
c Var 'aux85' order represents '3' with '7446'
-7444 7446 0
c Var 'aux85' direct represents '3' with '7447'
7444 -7446 7447 0
-7447 7446 0
-7447 -7444 0
c Var 'aux85' order represents '4' with '7448'
-7446 7448 0
c Var 'aux85' direct represents '4' with '7449'
7446 -7448 7449 0
-7449 7448 0
-7449 -7446 0
c Var 'aux85' order represents '5' with '7450'
-7448 7450 0
c Var 'aux85' direct represents '5' with '7451'
7448 -7450 7451 0
-7451 7450 0
-7451 -7448 0
c Var 'aux85' order represents '6' with '7452'
-7450 7452 0
c Var 'aux85' direct represents '6' with '7453'
7450 -7452 7453 0
-7453 7452 0
-7453 -7450 0
c Var 'aux85' order represents '7' with '7454'
-7452 7454 0
c Var 'aux85' direct represents '7' with '7455'
7452 -7454 7455 0
-7455 7454 0
-7455 -7452 0
c Var 'aux85' order represents '8' with '7456'
-7454 7456 0
c Var 'aux85' direct represents '8' with '7457'
7454 -7456 7457 0
-7457 7456 0
-7457 -7454 0
c Var 'aux85' direct represents '9' with '-7456'
7441 7443 7445 7447 7449 7451 7453 7455 7457 -7456 0
c Encoding variable: aux86 with domain: int(0..9) (representing constraint (variant_fields_00003_00004_00007 * (7<=variant_fields_00003_00004_00001)))
c Both direct and order encoding.
c Var 'aux86' order represents '0' with '7458'
c Var 'aux86' direct represents '0' with '7458'
c Var 'aux86' order represents '1' with '7459'
-7458 7459 0
c Var 'aux86' direct represents '1' with '7460'
7458 -7459 7460 0
-7460 7459 0
-7460 -7458 0
c Var 'aux86' order represents '2' with '7461'
-7459 7461 0
c Var 'aux86' direct represents '2' with '7462'
7459 -7461 7462 0
-7462 7461 0
-7462 -7459 0
c Var 'aux86' order represents '3' with '7463'
-7461 7463 0
c Var 'aux86' direct represents '3' with '7464'
7461 -7463 7464 0
-7464 7463 0
-7464 -7461 0
c Var 'aux86' order represents '4' with '7465'
-7463 7465 0
c Var 'aux86' direct represents '4' with '7466'
7463 -7465 7466 0
-7466 7465 0
-7466 -7463 0
c Var 'aux86' order represents '5' with '7467'
-7465 7467 0
c Var 'aux86' direct represents '5' with '7468'
7465 -7467 7468 0
-7468 7467 0
-7468 -7465 0
c Var 'aux86' order represents '6' with '7469'
-7467 7469 0
c Var 'aux86' direct represents '6' with '7470'
7467 -7469 7470 0
-7470 7469 0
-7470 -7467 0
c Var 'aux86' order represents '7' with '7471'
-7469 7471 0
c Var 'aux86' direct represents '7' with '7472'
7469 -7471 7472 0
-7472 7471 0
-7472 -7469 0
c Var 'aux86' order represents '8' with '7473'
-7471 7473 0
c Var 'aux86' direct represents '8' with '7474'
7471 -7473 7474 0
-7474 7473 0
-7474 -7471 0
c Var 'aux86' direct represents '9' with '-7473'
7458 7460 7462 7464 7466 7468 7470 7472 7474 -7473 0
c Encoding variable: aux87 with domain: int(0..9) (representing constraint (variant_fields_00003_00004_00008 * (8<=variant_fields_00003_00004_00001)))
c Both direct and order encoding.
c Var 'aux87' order represents '0' with '7475'
c Var 'aux87' direct represents '0' with '7475'
c Var 'aux87' order represents '1' with '7476'
-7475 7476 0
c Var 'aux87' direct represents '1' with '7477'
7475 -7476 7477 0
-7477 7476 0
-7477 -7475 0
c Var 'aux87' order represents '2' with '7478'
-7476 7478 0
c Var 'aux87' direct represents '2' with '7479'
7476 -7478 7479 0
-7479 7478 0
-7479 -7476 0
c Var 'aux87' order represents '3' with '7480'
-7478 7480 0
c Var 'aux87' direct represents '3' with '7481'
7478 -7480 7481 0
-7481 7480 0
-7481 -7478 0
c Var 'aux87' order represents '4' with '7482'
-7480 7482 0
c Var 'aux87' direct represents '4' with '7483'
7480 -7482 7483 0
-7483 7482 0
-7483 -7480 0
c Var 'aux87' order represents '5' with '7484'
-7482 7484 0
c Var 'aux87' direct represents '5' with '7485'
7482 -7484 7485 0
-7485 7484 0
-7485 -7482 0
c Var 'aux87' order represents '6' with '7486'
-7484 7486 0
c Var 'aux87' direct represents '6' with '7487'
7484 -7486 7487 0
-7487 7486 0
-7487 -7484 0
c Var 'aux87' order represents '7' with '7488'
-7486 7488 0
c Var 'aux87' direct represents '7' with '7489'
7486 -7488 7489 0
-7489 7488 0
-7489 -7486 0
c Var 'aux87' order represents '8' with '7490'
-7488 7490 0
c Var 'aux87' direct represents '8' with '7491'
7488 -7490 7491 0
-7491 7490 0
-7491 -7488 0
c Var 'aux87' direct represents '9' with '-7490'
7475 7477 7479 7481 7483 7485 7487 7489 7491 -7490 0
c Encoding variable: aux88 with domain: int(0..9) (representing constraint (variant_fields_00003_00004_00009 * (9<=variant_fields_00003_00004_00001)))
c Both direct and order encoding.
c Var 'aux88' order represents '0' with '7492'
c Var 'aux88' direct represents '0' with '7492'
c Var 'aux88' order represents '1' with '7493'
-7492 7493 0
c Var 'aux88' direct represents '1' with '7494'
7492 -7493 7494 0
-7494 7493 0
-7494 -7492 0
c Var 'aux88' order represents '2' with '7495'
-7493 7495 0
c Var 'aux88' direct represents '2' with '7496'
7493 -7495 7496 0
-7496 7495 0
-7496 -7493 0
c Var 'aux88' order represents '3' with '7497'
-7495 7497 0
c Var 'aux88' direct represents '3' with '7498'
7495 -7497 7498 0
-7498 7497 0
-7498 -7495 0
c Var 'aux88' order represents '4' with '7499'
-7497 7499 0
c Var 'aux88' direct represents '4' with '7500'
7497 -7499 7500 0
-7500 7499 0
-7500 -7497 0
c Var 'aux88' order represents '5' with '7501'
-7499 7501 0
c Var 'aux88' direct represents '5' with '7502'
7499 -7501 7502 0
-7502 7501 0
-7502 -7499 0
c Var 'aux88' order represents '6' with '7503'
-7501 7503 0
c Var 'aux88' direct represents '6' with '7504'
7501 -7503 7504 0
-7504 7503 0
-7504 -7501 0
c Var 'aux88' order represents '7' with '7505'
-7503 7505 0
c Var 'aux88' direct represents '7' with '7506'
7503 -7505 7506 0
-7506 7505 0
-7506 -7503 0
c Var 'aux88' order represents '8' with '7507'
-7505 7507 0
c Var 'aux88' direct represents '8' with '7508'
7505 -7507 7508 0
-7508 7507 0
-7508 -7505 0
c Var 'aux88' direct represents '9' with '-7507'
7492 7494 7496 7498 7500 7502 7504 7506 7508 -7507 0
c Encoding variable: aux89 with domain: bool (representing constraint ((variant_fields_00003_00004_00001 + aux81 + aux82 + aux83 + aux84 + aux85 + aux86 + aux87 + aux88)=tv=17))
c Var 'aux89' direct represents '0' with '-7509'
c Var 'aux89' direct represents '1' with '7509'
c Var 'aux89' order represents '1' with '1'
c Var 'aux89' order represents '0' with '-7509'
c Encoding variable: aux90 with domain: int(0..9) (representing constraint (variant_fields_00003_00006_00002 * (2<=variant_fields_00003_00006_00001)))
c Both direct and order encoding.
c Var 'aux90' order represents '0' with '7510'
c Var 'aux90' direct represents '0' with '7510'
c Var 'aux90' order represents '1' with '7511'
-7510 7511 0
c Var 'aux90' direct represents '1' with '7512'
7510 -7511 7512 0
-7512 7511 0
-7512 -7510 0
c Var 'aux90' order represents '2' with '7513'
-7511 7513 0
c Var 'aux90' direct represents '2' with '7514'
7511 -7513 7514 0
-7514 7513 0
-7514 -7511 0
c Var 'aux90' order represents '3' with '7515'
-7513 7515 0
c Var 'aux90' direct represents '3' with '7516'
7513 -7515 7516 0
-7516 7515 0
-7516 -7513 0
c Var 'aux90' order represents '4' with '7517'
-7515 7517 0
c Var 'aux90' direct represents '4' with '7518'
7515 -7517 7518 0
-7518 7517 0
-7518 -7515 0
c Var 'aux90' order represents '5' with '7519'
-7517 7519 0
c Var 'aux90' direct represents '5' with '7520'
7517 -7519 7520 0
-7520 7519 0
-7520 -7517 0
c Var 'aux90' order represents '6' with '7521'
-7519 7521 0
c Var 'aux90' direct represents '6' with '7522'
7519 -7521 7522 0
-7522 7521 0
-7522 -7519 0
c Var 'aux90' order represents '7' with '7523'
-7521 7523 0
c Var 'aux90' direct represents '7' with '7524'
7521 -7523 7524 0
-7524 7523 0
-7524 -7521 0
c Var 'aux90' order represents '8' with '7525'
-7523 7525 0
c Var 'aux90' direct represents '8' with '7526'
7523 -7525 7526 0
-7526 7525 0
-7526 -7523 0
c Var 'aux90' direct represents '9' with '-7525'
7510 7512 7514 7516 7518 7520 7522 7524 7526 -7525 0
c Encoding variable: aux91 with domain: int(0..9) (representing constraint (variant_fields_00003_00006_00003 * (3<=variant_fields_00003_00006_00001)))
c Both direct and order encoding.
c Var 'aux91' order represents '0' with '7527'
c Var 'aux91' direct represents '0' with '7527'
c Var 'aux91' order represents '1' with '7528'
-7527 7528 0
c Var 'aux91' direct represents '1' with '7529'
7527 -7528 7529 0
-7529 7528 0
-7529 -7527 0
c Var 'aux91' order represents '2' with '7530'
-7528 7530 0
c Var 'aux91' direct represents '2' with '7531'
7528 -7530 7531 0
-7531 7530 0
-7531 -7528 0
c Var 'aux91' order represents '3' with '7532'
-7530 7532 0
c Var 'aux91' direct represents '3' with '7533'
7530 -7532 7533 0
-7533 7532 0
-7533 -7530 0
c Var 'aux91' order represents '4' with '7534'
-7532 7534 0
c Var 'aux91' direct represents '4' with '7535'
7532 -7534 7535 0
-7535 7534 0
-7535 -7532 0
c Var 'aux91' order represents '5' with '7536'
-7534 7536 0
c Var 'aux91' direct represents '5' with '7537'
7534 -7536 7537 0
-7537 7536 0
-7537 -7534 0
c Var 'aux91' order represents '6' with '7538'
-7536 7538 0
c Var 'aux91' direct represents '6' with '7539'
7536 -7538 7539 0
-7539 7538 0
-7539 -7536 0
c Var 'aux91' order represents '7' with '7540'
-7538 7540 0
c Var 'aux91' direct represents '7' with '7541'
7538 -7540 7541 0
-7541 7540 0
-7541 -7538 0
c Var 'aux91' order represents '8' with '7542'
-7540 7542 0
c Var 'aux91' direct represents '8' with '7543'
7540 -7542 7543 0
-7543 7542 0
-7543 -7540 0
c Var 'aux91' direct represents '9' with '-7542'
7527 7529 7531 7533 7535 7537 7539 7541 7543 -7542 0
c Encoding variable: aux92 with domain: int(0..9) (representing constraint (variant_fields_00003_00006_00004 * (4<=variant_fields_00003_00006_00001)))
c Both direct and order encoding.
c Var 'aux92' order represents '0' with '7544'
c Var 'aux92' direct represents '0' with '7544'
c Var 'aux92' order represents '1' with '7545'
-7544 7545 0
c Var 'aux92' direct represents '1' with '7546'
7544 -7545 7546 0
-7546 7545 0
-7546 -7544 0
c Var 'aux92' order represents '2' with '7547'
-7545 7547 0
c Var 'aux92' direct represents '2' with '7548'
7545 -7547 7548 0
-7548 7547 0
-7548 -7545 0
c Var 'aux92' order represents '3' with '7549'
-7547 7549 0
c Var 'aux92' direct represents '3' with '7550'
7547 -7549 7550 0
-7550 7549 0
-7550 -7547 0
c Var 'aux92' order represents '4' with '7551'
-7549 7551 0
c Var 'aux92' direct represents '4' with '7552'
7549 -7551 7552 0
-7552 7551 0
-7552 -7549 0
c Var 'aux92' order represents '5' with '7553'
-7551 7553 0
c Var 'aux92' direct represents '5' with '7554'
7551 -7553 7554 0
-7554 7553 0
-7554 -7551 0
c Var 'aux92' order represents '6' with '7555'
-7553 7555 0
c Var 'aux92' direct represents '6' with '7556'
7553 -7555 7556 0
-7556 7555 0
-7556 -7553 0
c Var 'aux92' order represents '7' with '7557'
-7555 7557 0
c Var 'aux92' direct represents '7' with '7558'
7555 -7557 7558 0
-7558 7557 0
-7558 -7555 0
c Var 'aux92' order represents '8' with '7559'
-7557 7559 0
c Var 'aux92' direct represents '8' with '7560'
7557 -7559 7560 0
-7560 7559 0
-7560 -7557 0
c Var 'aux92' direct represents '9' with '-7559'
7544 7546 7548 7550 7552 7554 7556 7558 7560 -7559 0
c Encoding variable: aux93 with domain: int(0..9) (representing constraint (variant_fields_00003_00006_00005 * (5<=variant_fields_00003_00006_00001)))
c Both direct and order encoding.
c Var 'aux93' order represents '0' with '7561'
c Var 'aux93' direct represents '0' with '7561'
c Var 'aux93' order represents '1' with '7562'
-7561 7562 0
c Var 'aux93' direct represents '1' with '7563'
7561 -7562 7563 0
-7563 7562 0
-7563 -7561 0
c Var 'aux93' order represents '2' with '7564'
-7562 7564 0
c Var 'aux93' direct represents '2' with '7565'
7562 -7564 7565 0
-7565 7564 0
-7565 -7562 0
c Var 'aux93' order represents '3' with '7566'
-7564 7566 0
c Var 'aux93' direct represents '3' with '7567'
7564 -7566 7567 0
-7567 7566 0
-7567 -7564 0
c Var 'aux93' order represents '4' with '7568'
-7566 7568 0
c Var 'aux93' direct represents '4' with '7569'
7566 -7568 7569 0
-7569 7568 0
-7569 -7566 0
c Var 'aux93' order represents '5' with '7570'
-7568 7570 0
c Var 'aux93' direct represents '5' with '7571'
7568 -7570 7571 0
-7571 7570 0
-7571 -7568 0
c Var 'aux93' order represents '6' with '7572'
-7570 7572 0
c Var 'aux93' direct represents '6' with '7573'
7570 -7572 7573 0
-7573 7572 0
-7573 -7570 0
c Var 'aux93' order represents '7' with '7574'
-7572 7574 0
c Var 'aux93' direct represents '7' with '7575'
7572 -7574 7575 0
-7575 7574 0
-7575 -7572 0
c Var 'aux93' order represents '8' with '7576'
-7574 7576 0
c Var 'aux93' direct represents '8' with '7577'
7574 -7576 7577 0
-7577 7576 0
-7577 -7574 0
c Var 'aux93' direct represents '9' with '-7576'
7561 7563 7565 7567 7569 7571 7573 7575 7577 -7576 0
c Encoding variable: aux94 with domain: int(0..9) (representing constraint (variant_fields_00003_00006_00006 * (6<=variant_fields_00003_00006_00001)))
c Both direct and order encoding.
c Var 'aux94' order represents '0' with '7578'
c Var 'aux94' direct represents '0' with '7578'
c Var 'aux94' order represents '1' with '7579'
-7578 7579 0
c Var 'aux94' direct represents '1' with '7580'
7578 -7579 7580 0
-7580 7579 0
-7580 -7578 0
c Var 'aux94' order represents '2' with '7581'
-7579 7581 0
c Var 'aux94' direct represents '2' with '7582'
7579 -7581 7582 0
-7582 7581 0
-7582 -7579 0
c Var 'aux94' order represents '3' with '7583'
-7581 7583 0
c Var 'aux94' direct represents '3' with '7584'
7581 -7583 7584 0
-7584 7583 0
-7584 -7581 0
c Var 'aux94' order represents '4' with '7585'
-7583 7585 0
c Var 'aux94' direct represents '4' with '7586'
7583 -7585 7586 0
-7586 7585 0
-7586 -7583 0
c Var 'aux94' order represents '5' with '7587'
-7585 7587 0
c Var 'aux94' direct represents '5' with '7588'
7585 -7587 7588 0
-7588 7587 0
-7588 -7585 0
c Var 'aux94' order represents '6' with '7589'
-7587 7589 0
c Var 'aux94' direct represents '6' with '7590'
7587 -7589 7590 0
-7590 7589 0
-7590 -7587 0
c Var 'aux94' order represents '7' with '7591'
-7589 7591 0
c Var 'aux94' direct represents '7' with '7592'
7589 -7591 7592 0
-7592 7591 0
-7592 -7589 0
c Var 'aux94' order represents '8' with '7593'
-7591 7593 0
c Var 'aux94' direct represents '8' with '7594'
7591 -7593 7594 0
-7594 7593 0
-7594 -7591 0
c Var 'aux94' direct represents '9' with '-7593'
7578 7580 7582 7584 7586 7588 7590 7592 7594 -7593 0
c Encoding variable: aux95 with domain: int(0..9) (representing constraint (variant_fields_00003_00006_00007 * (7<=variant_fields_00003_00006_00001)))
c Both direct and order encoding.
c Var 'aux95' order represents '0' with '7595'
c Var 'aux95' direct represents '0' with '7595'
c Var 'aux95' order represents '1' with '7596'
-7595 7596 0
c Var 'aux95' direct represents '1' with '7597'
7595 -7596 7597 0
-7597 7596 0
-7597 -7595 0
c Var 'aux95' order represents '2' with '7598'
-7596 7598 0
c Var 'aux95' direct represents '2' with '7599'
7596 -7598 7599 0
-7599 7598 0
-7599 -7596 0
c Var 'aux95' order represents '3' with '7600'
-7598 7600 0
c Var 'aux95' direct represents '3' with '7601'
7598 -7600 7601 0
-7601 7600 0
-7601 -7598 0
c Var 'aux95' order represents '4' with '7602'
-7600 7602 0
c Var 'aux95' direct represents '4' with '7603'
7600 -7602 7603 0
-7603 7602 0
-7603 -7600 0
c Var 'aux95' order represents '5' with '7604'
-7602 7604 0
c Var 'aux95' direct represents '5' with '7605'
7602 -7604 7605 0
-7605 7604 0
-7605 -7602 0
c Var 'aux95' order represents '6' with '7606'
-7604 7606 0
c Var 'aux95' direct represents '6' with '7607'
7604 -7606 7607 0
-7607 7606 0
-7607 -7604 0
c Var 'aux95' order represents '7' with '7608'
-7606 7608 0
c Var 'aux95' direct represents '7' with '7609'
7606 -7608 7609 0
-7609 7608 0
-7609 -7606 0
c Var 'aux95' order represents '8' with '7610'
-7608 7610 0
c Var 'aux95' direct represents '8' with '7611'
7608 -7610 7611 0
-7611 7610 0
-7611 -7608 0
c Var 'aux95' direct represents '9' with '-7610'
7595 7597 7599 7601 7603 7605 7607 7609 7611 -7610 0
c Encoding variable: aux96 with domain: int(0..9) (representing constraint (variant_fields_00003_00006_00008 * (8<=variant_fields_00003_00006_00001)))
c Both direct and order encoding.
c Var 'aux96' order represents '0' with '7612'
c Var 'aux96' direct represents '0' with '7612'
c Var 'aux96' order represents '1' with '7613'
-7612 7613 0
c Var 'aux96' direct represents '1' with '7614'
7612 -7613 7614 0
-7614 7613 0
-7614 -7612 0
c Var 'aux96' order represents '2' with '7615'
-7613 7615 0
c Var 'aux96' direct represents '2' with '7616'
7613 -7615 7616 0
-7616 7615 0
-7616 -7613 0
c Var 'aux96' order represents '3' with '7617'
-7615 7617 0
c Var 'aux96' direct represents '3' with '7618'
7615 -7617 7618 0
-7618 7617 0
-7618 -7615 0
c Var 'aux96' order represents '4' with '7619'
-7617 7619 0
c Var 'aux96' direct represents '4' with '7620'
7617 -7619 7620 0
-7620 7619 0
-7620 -7617 0
c Var 'aux96' order represents '5' with '7621'
-7619 7621 0
c Var 'aux96' direct represents '5' with '7622'
7619 -7621 7622 0
-7622 7621 0
-7622 -7619 0
c Var 'aux96' order represents '6' with '7623'
-7621 7623 0
c Var 'aux96' direct represents '6' with '7624'
7621 -7623 7624 0
-7624 7623 0
-7624 -7621 0
c Var 'aux96' order represents '7' with '7625'
-7623 7625 0
c Var 'aux96' direct represents '7' with '7626'
7623 -7625 7626 0
-7626 7625 0
-7626 -7623 0
c Var 'aux96' order represents '8' with '7627'
-7625 7627 0
c Var 'aux96' direct represents '8' with '7628'
7625 -7627 7628 0
-7628 7627 0
-7628 -7625 0
c Var 'aux96' direct represents '9' with '-7627'
7612 7614 7616 7618 7620 7622 7624 7626 7628 -7627 0
c Encoding variable: aux97 with domain: int(0..9) (representing constraint (variant_fields_00003_00006_00009 * (9<=variant_fields_00003_00006_00001)))
c Both direct and order encoding.
c Var 'aux97' order represents '0' with '7629'
c Var 'aux97' direct represents '0' with '7629'
c Var 'aux97' order represents '1' with '7630'
-7629 7630 0
c Var 'aux97' direct represents '1' with '7631'
7629 -7630 7631 0
-7631 7630 0
-7631 -7629 0
c Var 'aux97' order represents '2' with '7632'
-7630 7632 0
c Var 'aux97' direct represents '2' with '7633'
7630 -7632 7633 0
-7633 7632 0
-7633 -7630 0
c Var 'aux97' order represents '3' with '7634'
-7632 7634 0
c Var 'aux97' direct represents '3' with '7635'
7632 -7634 7635 0
-7635 7634 0
-7635 -7632 0
c Var 'aux97' order represents '4' with '7636'
-7634 7636 0
c Var 'aux97' direct represents '4' with '7637'
7634 -7636 7637 0
-7637 7636 0
-7637 -7634 0
c Var 'aux97' order represents '5' with '7638'
-7636 7638 0
c Var 'aux97' direct represents '5' with '7639'
7636 -7638 7639 0
-7639 7638 0
-7639 -7636 0
c Var 'aux97' order represents '6' with '7640'
-7638 7640 0
c Var 'aux97' direct represents '6' with '7641'
7638 -7640 7641 0
-7641 7640 0
-7641 -7638 0
c Var 'aux97' order represents '7' with '7642'
-7640 7642 0
c Var 'aux97' direct represents '7' with '7643'
7640 -7642 7643 0
-7643 7642 0
-7643 -7640 0
c Var 'aux97' order represents '8' with '7644'
-7642 7644 0
c Var 'aux97' direct represents '8' with '7645'
7642 -7644 7645 0
-7645 7644 0
-7645 -7642 0
c Var 'aux97' direct represents '9' with '-7644'
7629 7631 7633 7635 7637 7639 7641 7643 7645 -7644 0
c Encoding variable: aux98 with domain: bool (representing constraint ((variant_fields_00003_00006_00001 + aux90 + aux91 + aux92 + aux93 + aux94 + aux95 + aux96 + aux97)=tv=30))
c Var 'aux98' direct represents '0' with '-7646'
c Var 'aux98' direct represents '1' with '7646'
c Var 'aux98' order represents '1' with '1'
c Var 'aux98' order represents '0' with '-7646'
c Encoding variable: aux99 with domain: int(0..9) (representing constraint (variant_fields_00003_00008_00002 * (2<=variant_fields_00003_00008_00001)))
c Both direct and order encoding.
c Var 'aux99' order represents '0' with '7647'
c Var 'aux99' direct represents '0' with '7647'
c Var 'aux99' order represents '1' with '7648'
-7647 7648 0
c Var 'aux99' direct represents '1' with '7649'
7647 -7648 7649 0
-7649 7648 0
-7649 -7647 0
c Var 'aux99' order represents '2' with '7650'
-7648 7650 0
c Var 'aux99' direct represents '2' with '7651'
7648 -7650 7651 0
-7651 7650 0
-7651 -7648 0
c Var 'aux99' order represents '3' with '7652'
-7650 7652 0
c Var 'aux99' direct represents '3' with '7653'
7650 -7652 7653 0
-7653 7652 0
-7653 -7650 0
c Var 'aux99' order represents '4' with '7654'
-7652 7654 0
c Var 'aux99' direct represents '4' with '7655'
7652 -7654 7655 0
-7655 7654 0
-7655 -7652 0
c Var 'aux99' order represents '5' with '7656'
-7654 7656 0
c Var 'aux99' direct represents '5' with '7657'
7654 -7656 7657 0
-7657 7656 0
-7657 -7654 0
c Var 'aux99' order represents '6' with '7658'
-7656 7658 0
c Var 'aux99' direct represents '6' with '7659'
7656 -7658 7659 0
-7659 7658 0
-7659 -7656 0
c Var 'aux99' order represents '7' with '7660'
-7658 7660 0
c Var 'aux99' direct represents '7' with '7661'
7658 -7660 7661 0
-7661 7660 0
-7661 -7658 0
c Var 'aux99' order represents '8' with '7662'
-7660 7662 0
c Var 'aux99' direct represents '8' with '7663'
7660 -7662 7663 0
-7663 7662 0
-7663 -7660 0
c Var 'aux99' direct represents '9' with '-7662'
7647 7649 7651 7653 7655 7657 7659 7661 7663 -7662 0
c Encoding variable: aux100 with domain: int(0..9) (representing constraint (variant_fields_00003_00008_00003 * (3<=variant_fields_00003_00008_00001)))
c Both direct and order encoding.
c Var 'aux100' order represents '0' with '7664'
c Var 'aux100' direct represents '0' with '7664'
c Var 'aux100' order represents '1' with '7665'
-7664 7665 0
c Var 'aux100' direct represents '1' with '7666'
7664 -7665 7666 0
-7666 7665 0
-7666 -7664 0
c Var 'aux100' order represents '2' with '7667'
-7665 7667 0
c Var 'aux100' direct represents '2' with '7668'
7665 -7667 7668 0
-7668 7667 0
-7668 -7665 0
c Var 'aux100' order represents '3' with '7669'
-7667 7669 0
c Var 'aux100' direct represents '3' with '7670'
7667 -7669 7670 0
-7670 7669 0
-7670 -7667 0
c Var 'aux100' order represents '4' with '7671'
-7669 7671 0
c Var 'aux100' direct represents '4' with '7672'
7669 -7671 7672 0
-7672 7671 0
-7672 -7669 0
c Var 'aux100' order represents '5' with '7673'
-7671 7673 0
c Var 'aux100' direct represents '5' with '7674'
7671 -7673 7674 0
-7674 7673 0
-7674 -7671 0
c Var 'aux100' order represents '6' with '7675'
-7673 7675 0
c Var 'aux100' direct represents '6' with '7676'
7673 -7675 7676 0
-7676 7675 0
-7676 -7673 0
c Var 'aux100' order represents '7' with '7677'
-7675 7677 0
c Var 'aux100' direct represents '7' with '7678'
7675 -7677 7678 0
-7678 7677 0
-7678 -7675 0
c Var 'aux100' order represents '8' with '7679'
-7677 7679 0
c Var 'aux100' direct represents '8' with '7680'
7677 -7679 7680 0
-7680 7679 0
-7680 -7677 0
c Var 'aux100' direct represents '9' with '-7679'
7664 7666 7668 7670 7672 7674 7676 7678 7680 -7679 0
c Encoding variable: aux101 with domain: int(0..9) (representing constraint (variant_fields_00003_00008_00004 * (4<=variant_fields_00003_00008_00001)))
c Both direct and order encoding.
c Var 'aux101' order represents '0' with '7681'
c Var 'aux101' direct represents '0' with '7681'
c Var 'aux101' order represents '1' with '7682'
-7681 7682 0
c Var 'aux101' direct represents '1' with '7683'
7681 -7682 7683 0
-7683 7682 0
-7683 -7681 0
c Var 'aux101' order represents '2' with '7684'
-7682 7684 0
c Var 'aux101' direct represents '2' with '7685'
7682 -7684 7685 0
-7685 7684 0
-7685 -7682 0
c Var 'aux101' order represents '3' with '7686'
-7684 7686 0
c Var 'aux101' direct represents '3' with '7687'
7684 -7686 7687 0
-7687 7686 0
-7687 -7684 0
c Var 'aux101' order represents '4' with '7688'
-7686 7688 0
c Var 'aux101' direct represents '4' with '7689'
7686 -7688 7689 0
-7689 7688 0
-7689 -7686 0
c Var 'aux101' order represents '5' with '7690'
-7688 7690 0
c Var 'aux101' direct represents '5' with '7691'
7688 -7690 7691 0
-7691 7690 0
-7691 -7688 0
c Var 'aux101' order represents '6' with '7692'
-7690 7692 0
c Var 'aux101' direct represents '6' with '7693'
7690 -7692 7693 0
-7693 7692 0
-7693 -7690 0
c Var 'aux101' order represents '7' with '7694'
-7692 7694 0
c Var 'aux101' direct represents '7' with '7695'
7692 -7694 7695 0
-7695 7694 0
-7695 -7692 0
c Var 'aux101' order represents '8' with '7696'
-7694 7696 0
c Var 'aux101' direct represents '8' with '7697'
7694 -7696 7697 0
-7697 7696 0
-7697 -7694 0
c Var 'aux101' direct represents '9' with '-7696'
7681 7683 7685 7687 7689 7691 7693 7695 7697 -7696 0
c Encoding variable: aux102 with domain: int(0..9) (representing constraint (variant_fields_00003_00008_00005 * (5<=variant_fields_00003_00008_00001)))
c Both direct and order encoding.
c Var 'aux102' order represents '0' with '7698'
c Var 'aux102' direct represents '0' with '7698'
c Var 'aux102' order represents '1' with '7699'
-7698 7699 0
c Var 'aux102' direct represents '1' with '7700'
7698 -7699 7700 0
-7700 7699 0
-7700 -7698 0
c Var 'aux102' order represents '2' with '7701'
-7699 7701 0
c Var 'aux102' direct represents '2' with '7702'
7699 -7701 7702 0
-7702 7701 0
-7702 -7699 0
c Var 'aux102' order represents '3' with '7703'
-7701 7703 0
c Var 'aux102' direct represents '3' with '7704'
7701 -7703 7704 0
-7704 7703 0
-7704 -7701 0
c Var 'aux102' order represents '4' with '7705'
-7703 7705 0
c Var 'aux102' direct represents '4' with '7706'
7703 -7705 7706 0
-7706 7705 0
-7706 -7703 0
c Var 'aux102' order represents '5' with '7707'
-7705 7707 0
c Var 'aux102' direct represents '5' with '7708'
7705 -7707 7708 0
-7708 7707 0
-7708 -7705 0
c Var 'aux102' order represents '6' with '7709'
-7707 7709 0
c Var 'aux102' direct represents '6' with '7710'
7707 -7709 7710 0
-7710 7709 0
-7710 -7707 0
c Var 'aux102' order represents '7' with '7711'
-7709 7711 0
c Var 'aux102' direct represents '7' with '7712'
7709 -7711 7712 0
-7712 7711 0
-7712 -7709 0
c Var 'aux102' order represents '8' with '7713'
-7711 7713 0
c Var 'aux102' direct represents '8' with '7714'
7711 -7713 7714 0
-7714 7713 0
-7714 -7711 0
c Var 'aux102' direct represents '9' with '-7713'
7698 7700 7702 7704 7706 7708 7710 7712 7714 -7713 0
c Encoding variable: aux103 with domain: int(0..9) (representing constraint (variant_fields_00003_00008_00006 * (6<=variant_fields_00003_00008_00001)))
c Both direct and order encoding.
c Var 'aux103' order represents '0' with '7715'
c Var 'aux103' direct represents '0' with '7715'
c Var 'aux103' order represents '1' with '7716'
-7715 7716 0
c Var 'aux103' direct represents '1' with '7717'
7715 -7716 7717 0
-7717 7716 0
-7717 -7715 0
c Var 'aux103' order represents '2' with '7718'
-7716 7718 0
c Var 'aux103' direct represents '2' with '7719'
7716 -7718 7719 0
-7719 7718 0
-7719 -7716 0
c Var 'aux103' order represents '3' with '7720'
-7718 7720 0
c Var 'aux103' direct represents '3' with '7721'
7718 -7720 7721 0
-7721 7720 0
-7721 -7718 0
c Var 'aux103' order represents '4' with '7722'
-7720 7722 0
c Var 'aux103' direct represents '4' with '7723'
7720 -7722 7723 0
-7723 7722 0
-7723 -7720 0
c Var 'aux103' order represents '5' with '7724'
-7722 7724 0
c Var 'aux103' direct represents '5' with '7725'
7722 -7724 7725 0
-7725 7724 0
-7725 -7722 0
c Var 'aux103' order represents '6' with '7726'
-7724 7726 0
c Var 'aux103' direct represents '6' with '7727'
7724 -7726 7727 0
-7727 7726 0
-7727 -7724 0
c Var 'aux103' order represents '7' with '7728'
-7726 7728 0
c Var 'aux103' direct represents '7' with '7729'
7726 -7728 7729 0
-7729 7728 0
-7729 -7726 0
c Var 'aux103' order represents '8' with '7730'
-7728 7730 0
c Var 'aux103' direct represents '8' with '7731'
7728 -7730 7731 0
-7731 7730 0
-7731 -7728 0
c Var 'aux103' direct represents '9' with '-7730'
7715 7717 7719 7721 7723 7725 7727 7729 7731 -7730 0
c Encoding variable: aux104 with domain: int(0..9) (representing constraint (variant_fields_00003_00008_00007 * (7<=variant_fields_00003_00008_00001)))
c Both direct and order encoding.
c Var 'aux104' order represents '0' with '7732'
c Var 'aux104' direct represents '0' with '7732'
c Var 'aux104' order represents '1' with '7733'
-7732 7733 0
c Var 'aux104' direct represents '1' with '7734'
7732 -7733 7734 0
-7734 7733 0
-7734 -7732 0
c Var 'aux104' order represents '2' with '7735'
-7733 7735 0
c Var 'aux104' direct represents '2' with '7736'
7733 -7735 7736 0
-7736 7735 0
-7736 -7733 0
c Var 'aux104' order represents '3' with '7737'
-7735 7737 0
c Var 'aux104' direct represents '3' with '7738'
7735 -7737 7738 0
-7738 7737 0
-7738 -7735 0
c Var 'aux104' order represents '4' with '7739'
-7737 7739 0
c Var 'aux104' direct represents '4' with '7740'
7737 -7739 7740 0
-7740 7739 0
-7740 -7737 0
c Var 'aux104' order represents '5' with '7741'
-7739 7741 0
c Var 'aux104' direct represents '5' with '7742'
7739 -7741 7742 0
-7742 7741 0
-7742 -7739 0
c Var 'aux104' order represents '6' with '7743'
-7741 7743 0
c Var 'aux104' direct represents '6' with '7744'
7741 -7743 7744 0
-7744 7743 0
-7744 -7741 0
c Var 'aux104' order represents '7' with '7745'
-7743 7745 0
c Var 'aux104' direct represents '7' with '7746'
7743 -7745 7746 0
-7746 7745 0
-7746 -7743 0
c Var 'aux104' order represents '8' with '7747'
-7745 7747 0
c Var 'aux104' direct represents '8' with '7748'
7745 -7747 7748 0
-7748 7747 0
-7748 -7745 0
c Var 'aux104' direct represents '9' with '-7747'
7732 7734 7736 7738 7740 7742 7744 7746 7748 -7747 0
c Encoding variable: aux105 with domain: int(0..9) (representing constraint (variant_fields_00003_00008_00008 * (8<=variant_fields_00003_00008_00001)))
c Both direct and order encoding.
c Var 'aux105' order represents '0' with '7749'
c Var 'aux105' direct represents '0' with '7749'
c Var 'aux105' order represents '1' with '7750'
-7749 7750 0
c Var 'aux105' direct represents '1' with '7751'
7749 -7750 7751 0
-7751 7750 0
-7751 -7749 0
c Var 'aux105' order represents '2' with '7752'
-7750 7752 0
c Var 'aux105' direct represents '2' with '7753'
7750 -7752 7753 0
-7753 7752 0
-7753 -7750 0
c Var 'aux105' order represents '3' with '7754'
-7752 7754 0
c Var 'aux105' direct represents '3' with '7755'
7752 -7754 7755 0
-7755 7754 0
-7755 -7752 0
c Var 'aux105' order represents '4' with '7756'
-7754 7756 0
c Var 'aux105' direct represents '4' with '7757'
7754 -7756 7757 0
-7757 7756 0
-7757 -7754 0
c Var 'aux105' order represents '5' with '7758'
-7756 7758 0
c Var 'aux105' direct represents '5' with '7759'
7756 -7758 7759 0
-7759 7758 0
-7759 -7756 0
c Var 'aux105' order represents '6' with '7760'
-7758 7760 0
c Var 'aux105' direct represents '6' with '7761'
7758 -7760 7761 0
-7761 7760 0
-7761 -7758 0
c Var 'aux105' order represents '7' with '7762'
-7760 7762 0
c Var 'aux105' direct represents '7' with '7763'
7760 -7762 7763 0
-7763 7762 0
-7763 -7760 0
c Var 'aux105' order represents '8' with '7764'
-7762 7764 0
c Var 'aux105' direct represents '8' with '7765'
7762 -7764 7765 0
-7765 7764 0
-7765 -7762 0
c Var 'aux105' direct represents '9' with '-7764'
7749 7751 7753 7755 7757 7759 7761 7763 7765 -7764 0
c Encoding variable: aux106 with domain: int(0..9) (representing constraint (variant_fields_00003_00008_00009 * (9<=variant_fields_00003_00008_00001)))
c Both direct and order encoding.
c Var 'aux106' order represents '0' with '7766'
c Var 'aux106' direct represents '0' with '7766'
c Var 'aux106' order represents '1' with '7767'
-7766 7767 0
c Var 'aux106' direct represents '1' with '7768'
7766 -7767 7768 0
-7768 7767 0
-7768 -7766 0
c Var 'aux106' order represents '2' with '7769'
-7767 7769 0
c Var 'aux106' direct represents '2' with '7770'
7767 -7769 7770 0
-7770 7769 0
-7770 -7767 0
c Var 'aux106' order represents '3' with '7771'
-7769 7771 0
c Var 'aux106' direct represents '3' with '7772'
7769 -7771 7772 0
-7772 7771 0
-7772 -7769 0
c Var 'aux106' order represents '4' with '7773'
-7771 7773 0
c Var 'aux106' direct represents '4' with '7774'
7771 -7773 7774 0
-7774 7773 0
-7774 -7771 0
c Var 'aux106' order represents '5' with '7775'
-7773 7775 0
c Var 'aux106' direct represents '5' with '7776'
7773 -7775 7776 0
-7776 7775 0
-7776 -7773 0
c Var 'aux106' order represents '6' with '7777'
-7775 7777 0
c Var 'aux106' direct represents '6' with '7778'
7775 -7777 7778 0
-7778 7777 0
-7778 -7775 0
c Var 'aux106' order represents '7' with '7779'
-7777 7779 0
c Var 'aux106' direct represents '7' with '7780'
7777 -7779 7780 0
-7780 7779 0
-7780 -7777 0
c Var 'aux106' order represents '8' with '7781'
-7779 7781 0
c Var 'aux106' direct represents '8' with '7782'
7779 -7781 7782 0
-7782 7781 0
-7782 -7779 0
c Var 'aux106' direct represents '9' with '-7781'
7766 7768 7770 7772 7774 7776 7778 7780 7782 -7781 0
c Encoding variable: aux107 with domain: bool (representing constraint ((aux99 + aux100 + aux101 + aux102 + aux103 + aux104 + aux105 + aux106 + variant_fields_00003_00008_00001)=tv=28))
c Var 'aux107' direct represents '0' with '-7783'
c Var 'aux107' direct represents '1' with '7783'
c Var 'aux107' order represents '1' with '1'
c Var 'aux107' order represents '0' with '-7783'
c Encoding variable: aux108 with domain: int(0..9) (representing constraint (variant_fields_00004_00002_00002 * (2<=variant_fields_00004_00002_00001)))
c Both direct and order encoding.
c Var 'aux108' order represents '0' with '7784'
c Var 'aux108' direct represents '0' with '7784'
c Var 'aux108' order represents '1' with '7785'
-7784 7785 0
c Var 'aux108' direct represents '1' with '7786'
7784 -7785 7786 0
-7786 7785 0
-7786 -7784 0
c Var 'aux108' order represents '2' with '7787'
-7785 7787 0
c Var 'aux108' direct represents '2' with '7788'
7785 -7787 7788 0
-7788 7787 0
-7788 -7785 0
c Var 'aux108' order represents '3' with '7789'
-7787 7789 0
c Var 'aux108' direct represents '3' with '7790'
7787 -7789 7790 0
-7790 7789 0
-7790 -7787 0
c Var 'aux108' order represents '4' with '7791'
-7789 7791 0
c Var 'aux108' direct represents '4' with '7792'
7789 -7791 7792 0
-7792 7791 0
-7792 -7789 0
c Var 'aux108' order represents '5' with '7793'
-7791 7793 0
c Var 'aux108' direct represents '5' with '7794'
7791 -7793 7794 0
-7794 7793 0
-7794 -7791 0
c Var 'aux108' order represents '6' with '7795'
-7793 7795 0
c Var 'aux108' direct represents '6' with '7796'
7793 -7795 7796 0
-7796 7795 0
-7796 -7793 0
c Var 'aux108' order represents '7' with '7797'
-7795 7797 0
c Var 'aux108' direct represents '7' with '7798'
7795 -7797 7798 0
-7798 7797 0
-7798 -7795 0
c Var 'aux108' order represents '8' with '7799'
-7797 7799 0
c Var 'aux108' direct represents '8' with '7800'
7797 -7799 7800 0
-7800 7799 0
-7800 -7797 0
c Var 'aux108' direct represents '9' with '-7799'
7784 7786 7788 7790 7792 7794 7796 7798 7800 -7799 0
c Encoding variable: aux109 with domain: int(0..9) (representing constraint (variant_fields_00004_00002_00003 * (3<=variant_fields_00004_00002_00001)))
c Both direct and order encoding.
c Var 'aux109' order represents '0' with '7801'
c Var 'aux109' direct represents '0' with '7801'
c Var 'aux109' order represents '1' with '7802'
-7801 7802 0
c Var 'aux109' direct represents '1' with '7803'
7801 -7802 7803 0
-7803 7802 0
-7803 -7801 0
c Var 'aux109' order represents '2' with '7804'
-7802 7804 0
c Var 'aux109' direct represents '2' with '7805'
7802 -7804 7805 0
-7805 7804 0
-7805 -7802 0
c Var 'aux109' order represents '3' with '7806'
-7804 7806 0
c Var 'aux109' direct represents '3' with '7807'
7804 -7806 7807 0
-7807 7806 0
-7807 -7804 0
c Var 'aux109' order represents '4' with '7808'
-7806 7808 0
c Var 'aux109' direct represents '4' with '7809'
7806 -7808 7809 0
-7809 7808 0
-7809 -7806 0
c Var 'aux109' order represents '5' with '7810'
-7808 7810 0
c Var 'aux109' direct represents '5' with '7811'
7808 -7810 7811 0
-7811 7810 0
-7811 -7808 0
c Var 'aux109' order represents '6' with '7812'
-7810 7812 0
c Var 'aux109' direct represents '6' with '7813'
7810 -7812 7813 0
-7813 7812 0
-7813 -7810 0
c Var 'aux109' order represents '7' with '7814'
-7812 7814 0
c Var 'aux109' direct represents '7' with '7815'
7812 -7814 7815 0
-7815 7814 0
-7815 -7812 0
c Var 'aux109' order represents '8' with '7816'
-7814 7816 0
c Var 'aux109' direct represents '8' with '7817'
7814 -7816 7817 0
-7817 7816 0
-7817 -7814 0
c Var 'aux109' direct represents '9' with '-7816'
7801 7803 7805 7807 7809 7811 7813 7815 7817 -7816 0
c Encoding variable: aux110 with domain: int(0..9) (representing constraint (variant_fields_00004_00002_00004 * (4<=variant_fields_00004_00002_00001)))
c Both direct and order encoding.
c Var 'aux110' order represents '0' with '7818'
c Var 'aux110' direct represents '0' with '7818'
c Var 'aux110' order represents '1' with '7819'
-7818 7819 0
c Var 'aux110' direct represents '1' with '7820'
7818 -7819 7820 0
-7820 7819 0
-7820 -7818 0
c Var 'aux110' order represents '2' with '7821'
-7819 7821 0
c Var 'aux110' direct represents '2' with '7822'
7819 -7821 7822 0
-7822 7821 0
-7822 -7819 0
c Var 'aux110' order represents '3' with '7823'
-7821 7823 0
c Var 'aux110' direct represents '3' with '7824'
7821 -7823 7824 0
-7824 7823 0
-7824 -7821 0
c Var 'aux110' order represents '4' with '7825'
-7823 7825 0
c Var 'aux110' direct represents '4' with '7826'
7823 -7825 7826 0
-7826 7825 0
-7826 -7823 0
c Var 'aux110' order represents '5' with '7827'
-7825 7827 0
c Var 'aux110' direct represents '5' with '7828'
7825 -7827 7828 0
-7828 7827 0
-7828 -7825 0
c Var 'aux110' order represents '6' with '7829'
-7827 7829 0
c Var 'aux110' direct represents '6' with '7830'
7827 -7829 7830 0
-7830 7829 0
-7830 -7827 0
c Var 'aux110' order represents '7' with '7831'
-7829 7831 0
c Var 'aux110' direct represents '7' with '7832'
7829 -7831 7832 0
-7832 7831 0
-7832 -7829 0
c Var 'aux110' order represents '8' with '7833'
-7831 7833 0
c Var 'aux110' direct represents '8' with '7834'
7831 -7833 7834 0
-7834 7833 0
-7834 -7831 0
c Var 'aux110' direct represents '9' with '-7833'
7818 7820 7822 7824 7826 7828 7830 7832 7834 -7833 0
c Encoding variable: aux111 with domain: int(0..9) (representing constraint (variant_fields_00004_00002_00005 * (5<=variant_fields_00004_00002_00001)))
c Both direct and order encoding.
c Var 'aux111' order represents '0' with '7835'
c Var 'aux111' direct represents '0' with '7835'
c Var 'aux111' order represents '1' with '7836'
-7835 7836 0
c Var 'aux111' direct represents '1' with '7837'
7835 -7836 7837 0
-7837 7836 0
-7837 -7835 0
c Var 'aux111' order represents '2' with '7838'
-7836 7838 0
c Var 'aux111' direct represents '2' with '7839'
7836 -7838 7839 0
-7839 7838 0
-7839 -7836 0
c Var 'aux111' order represents '3' with '7840'
-7838 7840 0
c Var 'aux111' direct represents '3' with '7841'
7838 -7840 7841 0
-7841 7840 0
-7841 -7838 0
c Var 'aux111' order represents '4' with '7842'
-7840 7842 0
c Var 'aux111' direct represents '4' with '7843'
7840 -7842 7843 0
-7843 7842 0
-7843 -7840 0
c Var 'aux111' order represents '5' with '7844'
-7842 7844 0
c Var 'aux111' direct represents '5' with '7845'
7842 -7844 7845 0
-7845 7844 0
-7845 -7842 0
c Var 'aux111' order represents '6' with '7846'
-7844 7846 0
c Var 'aux111' direct represents '6' with '7847'
7844 -7846 7847 0
-7847 7846 0
-7847 -7844 0
c Var 'aux111' order represents '7' with '7848'
-7846 7848 0
c Var 'aux111' direct represents '7' with '7849'
7846 -7848 7849 0
-7849 7848 0
-7849 -7846 0
c Var 'aux111' order represents '8' with '7850'
-7848 7850 0
c Var 'aux111' direct represents '8' with '7851'
7848 -7850 7851 0
-7851 7850 0
-7851 -7848 0
c Var 'aux111' direct represents '9' with '-7850'
7835 7837 7839 7841 7843 7845 7847 7849 7851 -7850 0
c Encoding variable: aux112 with domain: int(0..9) (representing constraint (variant_fields_00004_00002_00006 * (6<=variant_fields_00004_00002_00001)))
c Both direct and order encoding.
c Var 'aux112' order represents '0' with '7852'
c Var 'aux112' direct represents '0' with '7852'
c Var 'aux112' order represents '1' with '7853'
-7852 7853 0
c Var 'aux112' direct represents '1' with '7854'
7852 -7853 7854 0
-7854 7853 0
-7854 -7852 0
c Var 'aux112' order represents '2' with '7855'
-7853 7855 0
c Var 'aux112' direct represents '2' with '7856'
7853 -7855 7856 0
-7856 7855 0
-7856 -7853 0
c Var 'aux112' order represents '3' with '7857'
-7855 7857 0
c Var 'aux112' direct represents '3' with '7858'
7855 -7857 7858 0
-7858 7857 0
-7858 -7855 0
c Var 'aux112' order represents '4' with '7859'
-7857 7859 0
c Var 'aux112' direct represents '4' with '7860'
7857 -7859 7860 0
-7860 7859 0
-7860 -7857 0
c Var 'aux112' order represents '5' with '7861'
-7859 7861 0
c Var 'aux112' direct represents '5' with '7862'
7859 -7861 7862 0
-7862 7861 0
-7862 -7859 0
c Var 'aux112' order represents '6' with '7863'
-7861 7863 0
c Var 'aux112' direct represents '6' with '7864'
7861 -7863 7864 0
-7864 7863 0
-7864 -7861 0
c Var 'aux112' order represents '7' with '7865'
-7863 7865 0
c Var 'aux112' direct represents '7' with '7866'
7863 -7865 7866 0
-7866 7865 0
-7866 -7863 0
c Var 'aux112' order represents '8' with '7867'
-7865 7867 0
c Var 'aux112' direct represents '8' with '7868'
7865 -7867 7868 0
-7868 7867 0
-7868 -7865 0
c Var 'aux112' direct represents '9' with '-7867'
7852 7854 7856 7858 7860 7862 7864 7866 7868 -7867 0
c Encoding variable: aux113 with domain: int(0..9) (representing constraint (variant_fields_00004_00002_00007 * (7<=variant_fields_00004_00002_00001)))
c Both direct and order encoding.
c Var 'aux113' order represents '0' with '7869'
c Var 'aux113' direct represents '0' with '7869'
c Var 'aux113' order represents '1' with '7870'
-7869 7870 0
c Var 'aux113' direct represents '1' with '7871'
7869 -7870 7871 0
-7871 7870 0
-7871 -7869 0
c Var 'aux113' order represents '2' with '7872'
-7870 7872 0
c Var 'aux113' direct represents '2' with '7873'
7870 -7872 7873 0
-7873 7872 0
-7873 -7870 0
c Var 'aux113' order represents '3' with '7874'
-7872 7874 0
c Var 'aux113' direct represents '3' with '7875'
7872 -7874 7875 0
-7875 7874 0
-7875 -7872 0
c Var 'aux113' order represents '4' with '7876'
-7874 7876 0
c Var 'aux113' direct represents '4' with '7877'
7874 -7876 7877 0
-7877 7876 0
-7877 -7874 0
c Var 'aux113' order represents '5' with '7878'
-7876 7878 0
c Var 'aux113' direct represents '5' with '7879'
7876 -7878 7879 0
-7879 7878 0
-7879 -7876 0
c Var 'aux113' order represents '6' with '7880'
-7878 7880 0
c Var 'aux113' direct represents '6' with '7881'
7878 -7880 7881 0
-7881 7880 0
-7881 -7878 0
c Var 'aux113' order represents '7' with '7882'
-7880 7882 0
c Var 'aux113' direct represents '7' with '7883'
7880 -7882 7883 0
-7883 7882 0
-7883 -7880 0
c Var 'aux113' order represents '8' with '7884'
-7882 7884 0
c Var 'aux113' direct represents '8' with '7885'
7882 -7884 7885 0
-7885 7884 0
-7885 -7882 0
c Var 'aux113' direct represents '9' with '-7884'
7869 7871 7873 7875 7877 7879 7881 7883 7885 -7884 0
c Encoding variable: aux114 with domain: int(0..9) (representing constraint (variant_fields_00004_00002_00008 * (8<=variant_fields_00004_00002_00001)))
c Both direct and order encoding.
c Var 'aux114' order represents '0' with '7886'
c Var 'aux114' direct represents '0' with '7886'
c Var 'aux114' order represents '1' with '7887'
-7886 7887 0
c Var 'aux114' direct represents '1' with '7888'
7886 -7887 7888 0
-7888 7887 0
-7888 -7886 0
c Var 'aux114' order represents '2' with '7889'
-7887 7889 0
c Var 'aux114' direct represents '2' with '7890'
7887 -7889 7890 0
-7890 7889 0
-7890 -7887 0
c Var 'aux114' order represents '3' with '7891'
-7889 7891 0
c Var 'aux114' direct represents '3' with '7892'
7889 -7891 7892 0
-7892 7891 0
-7892 -7889 0
c Var 'aux114' order represents '4' with '7893'
-7891 7893 0
c Var 'aux114' direct represents '4' with '7894'
7891 -7893 7894 0
-7894 7893 0
-7894 -7891 0
c Var 'aux114' order represents '5' with '7895'
-7893 7895 0
c Var 'aux114' direct represents '5' with '7896'
7893 -7895 7896 0
-7896 7895 0
-7896 -7893 0
c Var 'aux114' order represents '6' with '7897'
-7895 7897 0
c Var 'aux114' direct represents '6' with '7898'
7895 -7897 7898 0
-7898 7897 0
-7898 -7895 0
c Var 'aux114' order represents '7' with '7899'
-7897 7899 0
c Var 'aux114' direct represents '7' with '7900'
7897 -7899 7900 0
-7900 7899 0
-7900 -7897 0
c Var 'aux114' order represents '8' with '7901'
-7899 7901 0
c Var 'aux114' direct represents '8' with '7902'
7899 -7901 7902 0
-7902 7901 0
-7902 -7899 0
c Var 'aux114' direct represents '9' with '-7901'
7886 7888 7890 7892 7894 7896 7898 7900 7902 -7901 0
c Encoding variable: aux115 with domain: int(0..9) (representing constraint (variant_fields_00004_00002_00009 * (9<=variant_fields_00004_00002_00001)))
c Both direct and order encoding.
c Var 'aux115' order represents '0' with '7903'
c Var 'aux115' direct represents '0' with '7903'
c Var 'aux115' order represents '1' with '7904'
-7903 7904 0
c Var 'aux115' direct represents '1' with '7905'
7903 -7904 7905 0
-7905 7904 0
-7905 -7903 0
c Var 'aux115' order represents '2' with '7906'
-7904 7906 0
c Var 'aux115' direct represents '2' with '7907'
7904 -7906 7907 0
-7907 7906 0
-7907 -7904 0
c Var 'aux115' order represents '3' with '7908'
-7906 7908 0
c Var 'aux115' direct represents '3' with '7909'
7906 -7908 7909 0
-7909 7908 0
-7909 -7906 0
c Var 'aux115' order represents '4' with '7910'
-7908 7910 0
c Var 'aux115' direct represents '4' with '7911'
7908 -7910 7911 0
-7911 7910 0
-7911 -7908 0
c Var 'aux115' order represents '5' with '7912'
-7910 7912 0
c Var 'aux115' direct represents '5' with '7913'
7910 -7912 7913 0
-7913 7912 0
-7913 -7910 0
c Var 'aux115' order represents '6' with '7914'
-7912 7914 0
c Var 'aux115' direct represents '6' with '7915'
7912 -7914 7915 0
-7915 7914 0
-7915 -7912 0
c Var 'aux115' order represents '7' with '7916'
-7914 7916 0
c Var 'aux115' direct represents '7' with '7917'
7914 -7916 7917 0
-7917 7916 0
-7917 -7914 0
c Var 'aux115' order represents '8' with '7918'
-7916 7918 0
c Var 'aux115' direct represents '8' with '7919'
7916 -7918 7919 0
-7919 7918 0
-7919 -7916 0
c Var 'aux115' direct represents '9' with '-7918'
7903 7905 7907 7909 7911 7913 7915 7917 7919 -7918 0
c Encoding variable: aux116 with domain: bool (representing constraint ((variant_fields_00004_00002_00001 + aux108 + aux109 + aux110 + aux111 + aux112 + aux113 + aux114 + aux115)=tv=27))
c Var 'aux116' direct represents '0' with '-7920'
c Var 'aux116' direct represents '1' with '7920'
c Var 'aux116' order represents '1' with '1'
c Var 'aux116' order represents '0' with '-7920'
c Encoding variable: aux117 with domain: int(0..9) (representing constraint (variant_fields_00004_00004_00002 * (2<=variant_fields_00004_00004_00001)))
c Both direct and order encoding.
c Var 'aux117' order represents '0' with '7921'
c Var 'aux117' direct represents '0' with '7921'
c Var 'aux117' order represents '1' with '7922'
-7921 7922 0
c Var 'aux117' direct represents '1' with '7923'
7921 -7922 7923 0
-7923 7922 0
-7923 -7921 0
c Var 'aux117' order represents '2' with '7924'
-7922 7924 0
c Var 'aux117' direct represents '2' with '7925'
7922 -7924 7925 0
-7925 7924 0
-7925 -7922 0
c Var 'aux117' order represents '3' with '7926'
-7924 7926 0
c Var 'aux117' direct represents '3' with '7927'
7924 -7926 7927 0
-7927 7926 0
-7927 -7924 0
c Var 'aux117' order represents '4' with '7928'
-7926 7928 0
c Var 'aux117' direct represents '4' with '7929'
7926 -7928 7929 0
-7929 7928 0
-7929 -7926 0
c Var 'aux117' order represents '5' with '7930'
-7928 7930 0
c Var 'aux117' direct represents '5' with '7931'
7928 -7930 7931 0
-7931 7930 0
-7931 -7928 0
c Var 'aux117' order represents '6' with '7932'
-7930 7932 0
c Var 'aux117' direct represents '6' with '7933'
7930 -7932 7933 0
-7933 7932 0
-7933 -7930 0
c Var 'aux117' order represents '7' with '7934'
-7932 7934 0
c Var 'aux117' direct represents '7' with '7935'
7932 -7934 7935 0
-7935 7934 0
-7935 -7932 0
c Var 'aux117' order represents '8' with '7936'
-7934 7936 0
c Var 'aux117' direct represents '8' with '7937'
7934 -7936 7937 0
-7937 7936 0
-7937 -7934 0
c Var 'aux117' direct represents '9' with '-7936'
7921 7923 7925 7927 7929 7931 7933 7935 7937 -7936 0
c Encoding variable: aux118 with domain: int(0..9) (representing constraint (variant_fields_00004_00004_00003 * (3<=variant_fields_00004_00004_00001)))
c Both direct and order encoding.
c Var 'aux118' order represents '0' with '7938'
c Var 'aux118' direct represents '0' with '7938'
c Var 'aux118' order represents '1' with '7939'
-7938 7939 0
c Var 'aux118' direct represents '1' with '7940'
7938 -7939 7940 0
-7940 7939 0
-7940 -7938 0
c Var 'aux118' order represents '2' with '7941'
-7939 7941 0
c Var 'aux118' direct represents '2' with '7942'
7939 -7941 7942 0
-7942 7941 0
-7942 -7939 0
c Var 'aux118' order represents '3' with '7943'
-7941 7943 0
c Var 'aux118' direct represents '3' with '7944'
7941 -7943 7944 0
-7944 7943 0
-7944 -7941 0
c Var 'aux118' order represents '4' with '7945'
-7943 7945 0
c Var 'aux118' direct represents '4' with '7946'
7943 -7945 7946 0
-7946 7945 0
-7946 -7943 0
c Var 'aux118' order represents '5' with '7947'
-7945 7947 0
c Var 'aux118' direct represents '5' with '7948'
7945 -7947 7948 0
-7948 7947 0
-7948 -7945 0
c Var 'aux118' order represents '6' with '7949'
-7947 7949 0
c Var 'aux118' direct represents '6' with '7950'
7947 -7949 7950 0
-7950 7949 0
-7950 -7947 0
c Var 'aux118' order represents '7' with '7951'
-7949 7951 0
c Var 'aux118' direct represents '7' with '7952'
7949 -7951 7952 0
-7952 7951 0
-7952 -7949 0
c Var 'aux118' order represents '8' with '7953'
-7951 7953 0
c Var 'aux118' direct represents '8' with '7954'
7951 -7953 7954 0
-7954 7953 0
-7954 -7951 0
c Var 'aux118' direct represents '9' with '-7953'
7938 7940 7942 7944 7946 7948 7950 7952 7954 -7953 0
c Encoding variable: aux119 with domain: int(0..9) (representing constraint (variant_fields_00004_00004_00004 * (4<=variant_fields_00004_00004_00001)))
c Both direct and order encoding.
c Var 'aux119' order represents '0' with '7955'
c Var 'aux119' direct represents '0' with '7955'
c Var 'aux119' order represents '1' with '7956'
-7955 7956 0
c Var 'aux119' direct represents '1' with '7957'
7955 -7956 7957 0
-7957 7956 0
-7957 -7955 0
c Var 'aux119' order represents '2' with '7958'
-7956 7958 0
c Var 'aux119' direct represents '2' with '7959'
7956 -7958 7959 0
-7959 7958 0
-7959 -7956 0
c Var 'aux119' order represents '3' with '7960'
-7958 7960 0
c Var 'aux119' direct represents '3' with '7961'
7958 -7960 7961 0
-7961 7960 0
-7961 -7958 0
c Var 'aux119' order represents '4' with '7962'
-7960 7962 0
c Var 'aux119' direct represents '4' with '7963'
7960 -7962 7963 0
-7963 7962 0
-7963 -7960 0
c Var 'aux119' order represents '5' with '7964'
-7962 7964 0
c Var 'aux119' direct represents '5' with '7965'
7962 -7964 7965 0
-7965 7964 0
-7965 -7962 0
c Var 'aux119' order represents '6' with '7966'
-7964 7966 0
c Var 'aux119' direct represents '6' with '7967'
7964 -7966 7967 0
-7967 7966 0
-7967 -7964 0
c Var 'aux119' order represents '7' with '7968'
-7966 7968 0
c Var 'aux119' direct represents '7' with '7969'
7966 -7968 7969 0
-7969 7968 0
-7969 -7966 0
c Var 'aux119' order represents '8' with '7970'
-7968 7970 0
c Var 'aux119' direct represents '8' with '7971'
7968 -7970 7971 0
-7971 7970 0
-7971 -7968 0
c Var 'aux119' direct represents '9' with '-7970'
7955 7957 7959 7961 7963 7965 7967 7969 7971 -7970 0
c Encoding variable: aux120 with domain: int(0..9) (representing constraint (variant_fields_00004_00004_00005 * (5<=variant_fields_00004_00004_00001)))
c Both direct and order encoding.
c Var 'aux120' order represents '0' with '7972'
c Var 'aux120' direct represents '0' with '7972'
c Var 'aux120' order represents '1' with '7973'
-7972 7973 0
c Var 'aux120' direct represents '1' with '7974'
7972 -7973 7974 0
-7974 7973 0
-7974 -7972 0
c Var 'aux120' order represents '2' with '7975'
-7973 7975 0
c Var 'aux120' direct represents '2' with '7976'
7973 -7975 7976 0
-7976 7975 0
-7976 -7973 0
c Var 'aux120' order represents '3' with '7977'
-7975 7977 0
c Var 'aux120' direct represents '3' with '7978'
7975 -7977 7978 0
-7978 7977 0
-7978 -7975 0
c Var 'aux120' order represents '4' with '7979'
-7977 7979 0
c Var 'aux120' direct represents '4' with '7980'
7977 -7979 7980 0
-7980 7979 0
-7980 -7977 0
c Var 'aux120' order represents '5' with '7981'
-7979 7981 0
c Var 'aux120' direct represents '5' with '7982'
7979 -7981 7982 0
-7982 7981 0
-7982 -7979 0
c Var 'aux120' order represents '6' with '7983'
-7981 7983 0
c Var 'aux120' direct represents '6' with '7984'
7981 -7983 7984 0
-7984 7983 0
-7984 -7981 0
c Var 'aux120' order represents '7' with '7985'
-7983 7985 0
c Var 'aux120' direct represents '7' with '7986'
7983 -7985 7986 0
-7986 7985 0
-7986 -7983 0
c Var 'aux120' order represents '8' with '7987'
-7985 7987 0
c Var 'aux120' direct represents '8' with '7988'
7985 -7987 7988 0
-7988 7987 0
-7988 -7985 0
c Var 'aux120' direct represents '9' with '-7987'
7972 7974 7976 7978 7980 7982 7984 7986 7988 -7987 0
c Encoding variable: aux121 with domain: int(0..9) (representing constraint (variant_fields_00004_00004_00006 * (6<=variant_fields_00004_00004_00001)))
c Both direct and order encoding.
c Var 'aux121' order represents '0' with '7989'
c Var 'aux121' direct represents '0' with '7989'
c Var 'aux121' order represents '1' with '7990'
-7989 7990 0
c Var 'aux121' direct represents '1' with '7991'
7989 -7990 7991 0
-7991 7990 0
-7991 -7989 0
c Var 'aux121' order represents '2' with '7992'
-7990 7992 0
c Var 'aux121' direct represents '2' with '7993'
7990 -7992 7993 0
-7993 7992 0
-7993 -7990 0
c Var 'aux121' order represents '3' with '7994'
-7992 7994 0
c Var 'aux121' direct represents '3' with '7995'
7992 -7994 7995 0
-7995 7994 0
-7995 -7992 0
c Var 'aux121' order represents '4' with '7996'
-7994 7996 0
c Var 'aux121' direct represents '4' with '7997'
7994 -7996 7997 0
-7997 7996 0
-7997 -7994 0
c Var 'aux121' order represents '5' with '7998'
-7996 7998 0
c Var 'aux121' direct represents '5' with '7999'
7996 -7998 7999 0
-7999 7998 0
-7999 -7996 0
c Var 'aux121' order represents '6' with '8000'
-7998 8000 0
c Var 'aux121' direct represents '6' with '8001'
7998 -8000 8001 0
-8001 8000 0
-8001 -7998 0
c Var 'aux121' order represents '7' with '8002'
-8000 8002 0
c Var 'aux121' direct represents '7' with '8003'
8000 -8002 8003 0
-8003 8002 0
-8003 -8000 0
c Var 'aux121' order represents '8' with '8004'
-8002 8004 0
c Var 'aux121' direct represents '8' with '8005'
8002 -8004 8005 0
-8005 8004 0
-8005 -8002 0
c Var 'aux121' direct represents '9' with '-8004'
7989 7991 7993 7995 7997 7999 8001 8003 8005 -8004 0
c Encoding variable: aux122 with domain: int(0..9) (representing constraint (variant_fields_00004_00004_00007 * (7<=variant_fields_00004_00004_00001)))
c Both direct and order encoding.
c Var 'aux122' order represents '0' with '8006'
c Var 'aux122' direct represents '0' with '8006'
c Var 'aux122' order represents '1' with '8007'
-8006 8007 0
c Var 'aux122' direct represents '1' with '8008'
8006 -8007 8008 0
-8008 8007 0
-8008 -8006 0
c Var 'aux122' order represents '2' with '8009'
-8007 8009 0
c Var 'aux122' direct represents '2' with '8010'
8007 -8009 8010 0
-8010 8009 0
-8010 -8007 0
c Var 'aux122' order represents '3' with '8011'
-8009 8011 0
c Var 'aux122' direct represents '3' with '8012'
8009 -8011 8012 0
-8012 8011 0
-8012 -8009 0
c Var 'aux122' order represents '4' with '8013'
-8011 8013 0
c Var 'aux122' direct represents '4' with '8014'
8011 -8013 8014 0
-8014 8013 0
-8014 -8011 0
c Var 'aux122' order represents '5' with '8015'
-8013 8015 0
c Var 'aux122' direct represents '5' with '8016'
8013 -8015 8016 0
-8016 8015 0
-8016 -8013 0
c Var 'aux122' order represents '6' with '8017'
-8015 8017 0
c Var 'aux122' direct represents '6' with '8018'
8015 -8017 8018 0
-8018 8017 0
-8018 -8015 0
c Var 'aux122' order represents '7' with '8019'
-8017 8019 0
c Var 'aux122' direct represents '7' with '8020'
8017 -8019 8020 0
-8020 8019 0
-8020 -8017 0
c Var 'aux122' order represents '8' with '8021'
-8019 8021 0
c Var 'aux122' direct represents '8' with '8022'
8019 -8021 8022 0
-8022 8021 0
-8022 -8019 0
c Var 'aux122' direct represents '9' with '-8021'
8006 8008 8010 8012 8014 8016 8018 8020 8022 -8021 0
c Encoding variable: aux123 with domain: int(0..9) (representing constraint (variant_fields_00004_00004_00008 * (8<=variant_fields_00004_00004_00001)))
c Both direct and order encoding.
c Var 'aux123' order represents '0' with '8023'
c Var 'aux123' direct represents '0' with '8023'
c Var 'aux123' order represents '1' with '8024'
-8023 8024 0
c Var 'aux123' direct represents '1' with '8025'
8023 -8024 8025 0
-8025 8024 0
-8025 -8023 0
c Var 'aux123' order represents '2' with '8026'
-8024 8026 0
c Var 'aux123' direct represents '2' with '8027'
8024 -8026 8027 0
-8027 8026 0
-8027 -8024 0
c Var 'aux123' order represents '3' with '8028'
-8026 8028 0
c Var 'aux123' direct represents '3' with '8029'
8026 -8028 8029 0
-8029 8028 0
-8029 -8026 0
c Var 'aux123' order represents '4' with '8030'
-8028 8030 0
c Var 'aux123' direct represents '4' with '8031'
8028 -8030 8031 0
-8031 8030 0
-8031 -8028 0
c Var 'aux123' order represents '5' with '8032'
-8030 8032 0
c Var 'aux123' direct represents '5' with '8033'
8030 -8032 8033 0
-8033 8032 0
-8033 -8030 0
c Var 'aux123' order represents '6' with '8034'
-8032 8034 0
c Var 'aux123' direct represents '6' with '8035'
8032 -8034 8035 0
-8035 8034 0
-8035 -8032 0
c Var 'aux123' order represents '7' with '8036'
-8034 8036 0
c Var 'aux123' direct represents '7' with '8037'
8034 -8036 8037 0
-8037 8036 0
-8037 -8034 0
c Var 'aux123' order represents '8' with '8038'
-8036 8038 0
c Var 'aux123' direct represents '8' with '8039'
8036 -8038 8039 0
-8039 8038 0
-8039 -8036 0
c Var 'aux123' direct represents '9' with '-8038'
8023 8025 8027 8029 8031 8033 8035 8037 8039 -8038 0
c Encoding variable: aux124 with domain: int(0..9) (representing constraint (variant_fields_00004_00004_00009 * (9<=variant_fields_00004_00004_00001)))
c Both direct and order encoding.
c Var 'aux124' order represents '0' with '8040'
c Var 'aux124' direct represents '0' with '8040'
c Var 'aux124' order represents '1' with '8041'
-8040 8041 0
c Var 'aux124' direct represents '1' with '8042'
8040 -8041 8042 0
-8042 8041 0
-8042 -8040 0
c Var 'aux124' order represents '2' with '8043'
-8041 8043 0
c Var 'aux124' direct represents '2' with '8044'
8041 -8043 8044 0
-8044 8043 0
-8044 -8041 0
c Var 'aux124' order represents '3' with '8045'
-8043 8045 0
c Var 'aux124' direct represents '3' with '8046'
8043 -8045 8046 0
-8046 8045 0
-8046 -8043 0
c Var 'aux124' order represents '4' with '8047'
-8045 8047 0
c Var 'aux124' direct represents '4' with '8048'
8045 -8047 8048 0
-8048 8047 0
-8048 -8045 0
c Var 'aux124' order represents '5' with '8049'
-8047 8049 0
c Var 'aux124' direct represents '5' with '8050'
8047 -8049 8050 0
-8050 8049 0
-8050 -8047 0
c Var 'aux124' order represents '6' with '8051'
-8049 8051 0
c Var 'aux124' direct represents '6' with '8052'
8049 -8051 8052 0
-8052 8051 0
-8052 -8049 0
c Var 'aux124' order represents '7' with '8053'
-8051 8053 0
c Var 'aux124' direct represents '7' with '8054'
8051 -8053 8054 0
-8054 8053 0
-8054 -8051 0
c Var 'aux124' order represents '8' with '8055'
-8053 8055 0
c Var 'aux124' direct represents '8' with '8056'
8053 -8055 8056 0
-8056 8055 0
-8056 -8053 0
c Var 'aux124' direct represents '9' with '-8055'
8040 8042 8044 8046 8048 8050 8052 8054 8056 -8055 0
c Encoding variable: aux125 with domain: bool (representing constraint ((aux117 + aux118 + aux119 + aux120 + aux121 + aux122 + aux123 + aux124 + variant_fields_00004_00004_00001)=tv=11))
c Var 'aux125' direct represents '0' with '-8057'
c Var 'aux125' direct represents '1' with '8057'
c Var 'aux125' order represents '1' with '1'
c Var 'aux125' order represents '0' with '-8057'
c Encoding variable: aux126 with domain: int(0..9) (representing constraint (variant_fields_00004_00007_00002 * (2<=variant_fields_00004_00007_00001)))
c Both direct and order encoding.
c Var 'aux126' order represents '0' with '8058'
c Var 'aux126' direct represents '0' with '8058'
c Var 'aux126' order represents '1' with '8059'
-8058 8059 0
c Var 'aux126' direct represents '1' with '8060'
8058 -8059 8060 0
-8060 8059 0
-8060 -8058 0
c Var 'aux126' order represents '2' with '8061'
-8059 8061 0
c Var 'aux126' direct represents '2' with '8062'
8059 -8061 8062 0
-8062 8061 0
-8062 -8059 0
c Var 'aux126' order represents '3' with '8063'
-8061 8063 0
c Var 'aux126' direct represents '3' with '8064'
8061 -8063 8064 0
-8064 8063 0
-8064 -8061 0
c Var 'aux126' order represents '4' with '8065'
-8063 8065 0
c Var 'aux126' direct represents '4' with '8066'
8063 -8065 8066 0
-8066 8065 0
-8066 -8063 0
c Var 'aux126' order represents '5' with '8067'
-8065 8067 0
c Var 'aux126' direct represents '5' with '8068'
8065 -8067 8068 0
-8068 8067 0
-8068 -8065 0
c Var 'aux126' order represents '6' with '8069'
-8067 8069 0
c Var 'aux126' direct represents '6' with '8070'
8067 -8069 8070 0
-8070 8069 0
-8070 -8067 0
c Var 'aux126' order represents '7' with '8071'
-8069 8071 0
c Var 'aux126' direct represents '7' with '8072'
8069 -8071 8072 0
-8072 8071 0
-8072 -8069 0
c Var 'aux126' order represents '8' with '8073'
-8071 8073 0
c Var 'aux126' direct represents '8' with '8074'
8071 -8073 8074 0
-8074 8073 0
-8074 -8071 0
c Var 'aux126' direct represents '9' with '-8073'
8058 8060 8062 8064 8066 8068 8070 8072 8074 -8073 0
c Encoding variable: aux127 with domain: int(0..9) (representing constraint (variant_fields_00004_00007_00003 * (3<=variant_fields_00004_00007_00001)))
c Both direct and order encoding.
c Var 'aux127' order represents '0' with '8075'
c Var 'aux127' direct represents '0' with '8075'
c Var 'aux127' order represents '1' with '8076'
-8075 8076 0
c Var 'aux127' direct represents '1' with '8077'
8075 -8076 8077 0
-8077 8076 0
-8077 -8075 0
c Var 'aux127' order represents '2' with '8078'
-8076 8078 0
c Var 'aux127' direct represents '2' with '8079'
8076 -8078 8079 0
-8079 8078 0
-8079 -8076 0
c Var 'aux127' order represents '3' with '8080'
-8078 8080 0
c Var 'aux127' direct represents '3' with '8081'
8078 -8080 8081 0
-8081 8080 0
-8081 -8078 0
c Var 'aux127' order represents '4' with '8082'
-8080 8082 0
c Var 'aux127' direct represents '4' with '8083'
8080 -8082 8083 0
-8083 8082 0
-8083 -8080 0
c Var 'aux127' order represents '5' with '8084'
-8082 8084 0
c Var 'aux127' direct represents '5' with '8085'
8082 -8084 8085 0
-8085 8084 0
-8085 -8082 0
c Var 'aux127' order represents '6' with '8086'
-8084 8086 0
c Var 'aux127' direct represents '6' with '8087'
8084 -8086 8087 0
-8087 8086 0
-8087 -8084 0
c Var 'aux127' order represents '7' with '8088'
-8086 8088 0
c Var 'aux127' direct represents '7' with '8089'
8086 -8088 8089 0
-8089 8088 0
-8089 -8086 0
c Var 'aux127' order represents '8' with '8090'
-8088 8090 0
c Var 'aux127' direct represents '8' with '8091'
8088 -8090 8091 0
-8091 8090 0
-8091 -8088 0
c Var 'aux127' direct represents '9' with '-8090'
8075 8077 8079 8081 8083 8085 8087 8089 8091 -8090 0
c Encoding variable: aux128 with domain: int(0..9) (representing constraint (variant_fields_00004_00007_00004 * (4<=variant_fields_00004_00007_00001)))
c Both direct and order encoding.
c Var 'aux128' order represents '0' with '8092'
c Var 'aux128' direct represents '0' with '8092'
c Var 'aux128' order represents '1' with '8093'
-8092 8093 0
c Var 'aux128' direct represents '1' with '8094'
8092 -8093 8094 0
-8094 8093 0
-8094 -8092 0
c Var 'aux128' order represents '2' with '8095'
-8093 8095 0
c Var 'aux128' direct represents '2' with '8096'
8093 -8095 8096 0
-8096 8095 0
-8096 -8093 0
c Var 'aux128' order represents '3' with '8097'
-8095 8097 0
c Var 'aux128' direct represents '3' with '8098'
8095 -8097 8098 0
-8098 8097 0
-8098 -8095 0
c Var 'aux128' order represents '4' with '8099'
-8097 8099 0
c Var 'aux128' direct represents '4' with '8100'
8097 -8099 8100 0
-8100 8099 0
-8100 -8097 0
c Var 'aux128' order represents '5' with '8101'
-8099 8101 0
c Var 'aux128' direct represents '5' with '8102'
8099 -8101 8102 0
-8102 8101 0
-8102 -8099 0
c Var 'aux128' order represents '6' with '8103'
-8101 8103 0
c Var 'aux128' direct represents '6' with '8104'
8101 -8103 8104 0
-8104 8103 0
-8104 -8101 0
c Var 'aux128' order represents '7' with '8105'
-8103 8105 0
c Var 'aux128' direct represents '7' with '8106'
8103 -8105 8106 0
-8106 8105 0
-8106 -8103 0
c Var 'aux128' order represents '8' with '8107'
-8105 8107 0
c Var 'aux128' direct represents '8' with '8108'
8105 -8107 8108 0
-8108 8107 0
-8108 -8105 0
c Var 'aux128' direct represents '9' with '-8107'
8092 8094 8096 8098 8100 8102 8104 8106 8108 -8107 0
c Encoding variable: aux129 with domain: int(0..9) (representing constraint (variant_fields_00004_00007_00005 * (5<=variant_fields_00004_00007_00001)))
c Both direct and order encoding.
c Var 'aux129' order represents '0' with '8109'
c Var 'aux129' direct represents '0' with '8109'
c Var 'aux129' order represents '1' with '8110'
-8109 8110 0
c Var 'aux129' direct represents '1' with '8111'
8109 -8110 8111 0
-8111 8110 0
-8111 -8109 0
c Var 'aux129' order represents '2' with '8112'
-8110 8112 0
c Var 'aux129' direct represents '2' with '8113'
8110 -8112 8113 0
-8113 8112 0
-8113 -8110 0
c Var 'aux129' order represents '3' with '8114'
-8112 8114 0
c Var 'aux129' direct represents '3' with '8115'
8112 -8114 8115 0
-8115 8114 0
-8115 -8112 0
c Var 'aux129' order represents '4' with '8116'
-8114 8116 0
c Var 'aux129' direct represents '4' with '8117'
8114 -8116 8117 0
-8117 8116 0
-8117 -8114 0
c Var 'aux129' order represents '5' with '8118'
-8116 8118 0
c Var 'aux129' direct represents '5' with '8119'
8116 -8118 8119 0
-8119 8118 0
-8119 -8116 0
c Var 'aux129' order represents '6' with '8120'
-8118 8120 0
c Var 'aux129' direct represents '6' with '8121'
8118 -8120 8121 0
-8121 8120 0
-8121 -8118 0
c Var 'aux129' order represents '7' with '8122'
-8120 8122 0
c Var 'aux129' direct represents '7' with '8123'
8120 -8122 8123 0
-8123 8122 0
-8123 -8120 0
c Var 'aux129' order represents '8' with '8124'
-8122 8124 0
c Var 'aux129' direct represents '8' with '8125'
8122 -8124 8125 0
-8125 8124 0
-8125 -8122 0
c Var 'aux129' direct represents '9' with '-8124'
8109 8111 8113 8115 8117 8119 8121 8123 8125 -8124 0
c Encoding variable: aux130 with domain: int(0..9) (representing constraint (variant_fields_00004_00007_00006 * (6<=variant_fields_00004_00007_00001)))
c Both direct and order encoding.
c Var 'aux130' order represents '0' with '8126'
c Var 'aux130' direct represents '0' with '8126'
c Var 'aux130' order represents '1' with '8127'
-8126 8127 0
c Var 'aux130' direct represents '1' with '8128'
8126 -8127 8128 0
-8128 8127 0
-8128 -8126 0
c Var 'aux130' order represents '2' with '8129'
-8127 8129 0
c Var 'aux130' direct represents '2' with '8130'
8127 -8129 8130 0
-8130 8129 0
-8130 -8127 0
c Var 'aux130' order represents '3' with '8131'
-8129 8131 0
c Var 'aux130' direct represents '3' with '8132'
8129 -8131 8132 0
-8132 8131 0
-8132 -8129 0
c Var 'aux130' order represents '4' with '8133'
-8131 8133 0
c Var 'aux130' direct represents '4' with '8134'
8131 -8133 8134 0
-8134 8133 0
-8134 -8131 0
c Var 'aux130' order represents '5' with '8135'
-8133 8135 0
c Var 'aux130' direct represents '5' with '8136'
8133 -8135 8136 0
-8136 8135 0
-8136 -8133 0
c Var 'aux130' order represents '6' with '8137'
-8135 8137 0
c Var 'aux130' direct represents '6' with '8138'
8135 -8137 8138 0
-8138 8137 0
-8138 -8135 0
c Var 'aux130' order represents '7' with '8139'
-8137 8139 0
c Var 'aux130' direct represents '7' with '8140'
8137 -8139 8140 0
-8140 8139 0
-8140 -8137 0
c Var 'aux130' order represents '8' with '8141'
-8139 8141 0
c Var 'aux130' direct represents '8' with '8142'
8139 -8141 8142 0
-8142 8141 0
-8142 -8139 0
c Var 'aux130' direct represents '9' with '-8141'
8126 8128 8130 8132 8134 8136 8138 8140 8142 -8141 0
c Encoding variable: aux131 with domain: int(0..9) (representing constraint (variant_fields_00004_00007_00007 * (7<=variant_fields_00004_00007_00001)))
c Both direct and order encoding.
c Var 'aux131' order represents '0' with '8143'
c Var 'aux131' direct represents '0' with '8143'
c Var 'aux131' order represents '1' with '8144'
-8143 8144 0
c Var 'aux131' direct represents '1' with '8145'
8143 -8144 8145 0
-8145 8144 0
-8145 -8143 0
c Var 'aux131' order represents '2' with '8146'
-8144 8146 0
c Var 'aux131' direct represents '2' with '8147'
8144 -8146 8147 0
-8147 8146 0
-8147 -8144 0
c Var 'aux131' order represents '3' with '8148'
-8146 8148 0
c Var 'aux131' direct represents '3' with '8149'
8146 -8148 8149 0
-8149 8148 0
-8149 -8146 0
c Var 'aux131' order represents '4' with '8150'
-8148 8150 0
c Var 'aux131' direct represents '4' with '8151'
8148 -8150 8151 0
-8151 8150 0
-8151 -8148 0
c Var 'aux131' order represents '5' with '8152'
-8150 8152 0
c Var 'aux131' direct represents '5' with '8153'
8150 -8152 8153 0
-8153 8152 0
-8153 -8150 0
c Var 'aux131' order represents '6' with '8154'
-8152 8154 0
c Var 'aux131' direct represents '6' with '8155'
8152 -8154 8155 0
-8155 8154 0
-8155 -8152 0
c Var 'aux131' order represents '7' with '8156'
-8154 8156 0
c Var 'aux131' direct represents '7' with '8157'
8154 -8156 8157 0
-8157 8156 0
-8157 -8154 0
c Var 'aux131' order represents '8' with '8158'
-8156 8158 0
c Var 'aux131' direct represents '8' with '8159'
8156 -8158 8159 0
-8159 8158 0
-8159 -8156 0
c Var 'aux131' direct represents '9' with '-8158'
8143 8145 8147 8149 8151 8153 8155 8157 8159 -8158 0
c Encoding variable: aux132 with domain: int(0..9) (representing constraint (variant_fields_00004_00007_00008 * (8<=variant_fields_00004_00007_00001)))
c Both direct and order encoding.
c Var 'aux132' order represents '0' with '8160'
c Var 'aux132' direct represents '0' with '8160'
c Var 'aux132' order represents '1' with '8161'
-8160 8161 0
c Var 'aux132' direct represents '1' with '8162'
8160 -8161 8162 0
-8162 8161 0
-8162 -8160 0
c Var 'aux132' order represents '2' with '8163'
-8161 8163 0
c Var 'aux132' direct represents '2' with '8164'
8161 -8163 8164 0
-8164 8163 0
-8164 -8161 0
c Var 'aux132' order represents '3' with '8165'
-8163 8165 0
c Var 'aux132' direct represents '3' with '8166'
8163 -8165 8166 0
-8166 8165 0
-8166 -8163 0
c Var 'aux132' order represents '4' with '8167'
-8165 8167 0
c Var 'aux132' direct represents '4' with '8168'
8165 -8167 8168 0
-8168 8167 0
-8168 -8165 0
c Var 'aux132' order represents '5' with '8169'
-8167 8169 0
c Var 'aux132' direct represents '5' with '8170'
8167 -8169 8170 0
-8170 8169 0
-8170 -8167 0
c Var 'aux132' order represents '6' with '8171'
-8169 8171 0
c Var 'aux132' direct represents '6' with '8172'
8169 -8171 8172 0
-8172 8171 0
-8172 -8169 0
c Var 'aux132' order represents '7' with '8173'
-8171 8173 0
c Var 'aux132' direct represents '7' with '8174'
8171 -8173 8174 0
-8174 8173 0
-8174 -8171 0
c Var 'aux132' order represents '8' with '8175'
-8173 8175 0
c Var 'aux132' direct represents '8' with '8176'
8173 -8175 8176 0
-8176 8175 0
-8176 -8173 0
c Var 'aux132' direct represents '9' with '-8175'
8160 8162 8164 8166 8168 8170 8172 8174 8176 -8175 0
c Encoding variable: aux133 with domain: int(0..9) (representing constraint (variant_fields_00004_00007_00009 * (9<=variant_fields_00004_00007_00001)))
c Both direct and order encoding.
c Var 'aux133' order represents '0' with '8177'
c Var 'aux133' direct represents '0' with '8177'
c Var 'aux133' order represents '1' with '8178'
-8177 8178 0
c Var 'aux133' direct represents '1' with '8179'
8177 -8178 8179 0
-8179 8178 0
-8179 -8177 0
c Var 'aux133' order represents '2' with '8180'
-8178 8180 0
c Var 'aux133' direct represents '2' with '8181'
8178 -8180 8181 0
-8181 8180 0
-8181 -8178 0
c Var 'aux133' order represents '3' with '8182'
-8180 8182 0
c Var 'aux133' direct represents '3' with '8183'
8180 -8182 8183 0
-8183 8182 0
-8183 -8180 0
c Var 'aux133' order represents '4' with '8184'
-8182 8184 0
c Var 'aux133' direct represents '4' with '8185'
8182 -8184 8185 0
-8185 8184 0
-8185 -8182 0
c Var 'aux133' order represents '5' with '8186'
-8184 8186 0
c Var 'aux133' direct represents '5' with '8187'
8184 -8186 8187 0
-8187 8186 0
-8187 -8184 0
c Var 'aux133' order represents '6' with '8188'
-8186 8188 0
c Var 'aux133' direct represents '6' with '8189'
8186 -8188 8189 0
-8189 8188 0
-8189 -8186 0
c Var 'aux133' order represents '7' with '8190'
-8188 8190 0
c Var 'aux133' direct represents '7' with '8191'
8188 -8190 8191 0
-8191 8190 0
-8191 -8188 0
c Var 'aux133' order represents '8' with '8192'
-8190 8192 0
c Var 'aux133' direct represents '8' with '8193'
8190 -8192 8193 0
-8193 8192 0
-8193 -8190 0
c Var 'aux133' direct represents '9' with '-8192'
8177 8179 8181 8183 8185 8187 8189 8191 8193 -8192 0
c Encoding variable: aux134 with domain: bool (representing constraint ((variant_fields_00004_00007_00001 + aux126 + aux127 + aux128 + aux129 + aux130 + aux131 + aux132 + aux133)=tv=16))
c Var 'aux134' direct represents '0' with '-8194'
c Var 'aux134' direct represents '1' with '8194'
c Var 'aux134' order represents '1' with '1'
c Var 'aux134' order represents '0' with '-8194'
c Encoding variable: aux135 with domain: bool (representing constraint (((field_00004_00001=1) + (field_00009_00001=1) + (field_00002_00001=1) + (field_00007_00001=1) + (field_00005_00001=1) + (field_00003_00001=1) + (field_00008_00001=1) + (field_00001_00001=1) + (field_00006_00001=1))=tv=1))
c Var 'aux135' direct represents '0' with '-8195'
c Var 'aux135' direct represents '1' with '8195'
c Var 'aux135' order represents '1' with '1'
c Var 'aux135' order represents '0' with '-8195'
c Encoding variable: aux136 with domain: bool (representing constraint (((field_00004_00001=2) + (field_00009_00001=2) + (field_00002_00001=2) + (field_00007_00001=2) + (field_00005_00001=2) + (field_00003_00001=2) + (field_00008_00001=2) + (field_00001_00001=2) + (field_00006_00001=2))=tv=1))
c Var 'aux136' direct represents '0' with '-8196'
c Var 'aux136' direct represents '1' with '8196'
c Var 'aux136' order represents '1' with '1'
c Var 'aux136' order represents '0' with '-8196'
c Encoding variable: aux137 with domain: bool (representing constraint (((field_00004_00001=3) + (field_00009_00001=3) + (field_00002_00001=3) + (field_00007_00001=3) + (field_00005_00001=3) + (field_00003_00001=3) + (field_00008_00001=3) + (field_00001_00001=3) + (field_00006_00001=3))=tv=1))
c Var 'aux137' direct represents '0' with '-8197'
c Var 'aux137' direct represents '1' with '8197'
c Var 'aux137' order represents '1' with '1'
c Var 'aux137' order represents '0' with '-8197'
c Encoding variable: aux138 with domain: bool (representing constraint (((field_00004_00001=4) + (field_00009_00001=4) + (field_00002_00001=4) + (field_00007_00001=4) + (field_00005_00001=4) + (field_00003_00001=4) + (field_00008_00001=4) + (field_00001_00001=4) + (field_00006_00001=4))=tv=1))
c Var 'aux138' direct represents '0' with '-8198'
c Var 'aux138' direct represents '1' with '8198'
c Var 'aux138' order represents '1' with '1'
c Var 'aux138' order represents '0' with '-8198'
c Encoding variable: aux139 with domain: bool (representing constraint (((field_00004_00001=5) + (field_00009_00001=5) + (field_00002_00001=5) + (field_00007_00001=5) + (field_00005_00001=5) + (field_00003_00001=5) + (field_00008_00001=5) + (field_00001_00001=5) + (field_00006_00001=5))=tv=1))
c Var 'aux139' direct represents '0' with '-8199'
c Var 'aux139' direct represents '1' with '8199'
c Var 'aux139' order represents '1' with '1'
c Var 'aux139' order represents '0' with '-8199'
c Encoding variable: aux140 with domain: bool (representing constraint (((field_00004_00001=6) + (field_00009_00001=6) + (field_00002_00001=6) + (field_00007_00001=6) + (field_00005_00001=6) + (field_00003_00001=6) + (field_00008_00001=6) + (field_00001_00001=6) + (field_00006_00001=6))=tv=1))
c Var 'aux140' direct represents '0' with '-8200'
c Var 'aux140' direct represents '1' with '8200'
c Var 'aux140' order represents '1' with '1'
c Var 'aux140' order represents '0' with '-8200'
c Encoding variable: aux141 with domain: bool (representing constraint (((field_00004_00001=7) + (field_00009_00001=7) + (field_00002_00001=7) + (field_00007_00001=7) + (field_00005_00001=7) + (field_00003_00001=7) + (field_00008_00001=7) + (field_00001_00001=7) + (field_00006_00001=7))=tv=1))
c Var 'aux141' direct represents '0' with '-8201'
c Var 'aux141' direct represents '1' with '8201'
c Var 'aux141' order represents '1' with '1'
c Var 'aux141' order represents '0' with '-8201'
c Encoding variable: aux142 with domain: bool (representing constraint (((field_00004_00001=8) + (field_00009_00001=8) + (field_00002_00001=8) + (field_00007_00001=8) + (field_00005_00001=8) + (field_00003_00001=8) + (field_00008_00001=8) + (field_00001_00001=8) + (field_00006_00001=8))=tv=1))
c Var 'aux142' direct represents '0' with '-8202'
c Var 'aux142' direct represents '1' with '8202'
c Var 'aux142' order represents '1' with '1'
c Var 'aux142' order represents '0' with '-8202'
c Encoding variable: aux143 with domain: bool (representing constraint (((field_00004_00001=9) + (field_00009_00001=9) + (field_00002_00001=9) + (field_00007_00001=9) + (field_00005_00001=9) + (field_00003_00001=9) + (field_00008_00001=9) + (field_00001_00001=9) + (field_00006_00001=9))=tv=1))
c Var 'aux143' direct represents '0' with '-8203'
c Var 'aux143' direct represents '1' with '8203'
c Var 'aux143' order represents '1' with '1'
c Var 'aux143' order represents '0' with '-8203'
c Encoding variable: aux144 with domain: bool (representing constraint (((field_00004_00002=1) + (field_00009_00002=1) + (field_00002_00002=1) + (field_00007_00002=1) + (field_00005_00002=1) + (field_00003_00002=1) + (field_00008_00002=1) + (field_00001_00002=1) + (field_00006_00002=1))=tv=1))
c Var 'aux144' direct represents '0' with '-8204'
c Var 'aux144' direct represents '1' with '8204'
c Var 'aux144' order represents '1' with '1'
c Var 'aux144' order represents '0' with '-8204'
c Encoding variable: aux145 with domain: bool (representing constraint (((field_00004_00002=2) + (field_00009_00002=2) + (field_00002_00002=2) + (field_00007_00002=2) + (field_00005_00002=2) + (field_00003_00002=2) + (field_00008_00002=2) + (field_00001_00002=2) + (field_00006_00002=2))=tv=1))
c Var 'aux145' direct represents '0' with '-8205'
c Var 'aux145' direct represents '1' with '8205'
c Var 'aux145' order represents '1' with '1'
c Var 'aux145' order represents '0' with '-8205'
c Encoding variable: aux146 with domain: bool (representing constraint (((field_00004_00002=3) + (field_00009_00002=3) + (field_00002_00002=3) + (field_00007_00002=3) + (field_00005_00002=3) + (field_00003_00002=3) + (field_00008_00002=3) + (field_00001_00002=3) + (field_00006_00002=3))=tv=1))
c Var 'aux146' direct represents '0' with '-8206'
c Var 'aux146' direct represents '1' with '8206'
c Var 'aux146' order represents '1' with '1'
c Var 'aux146' order represents '0' with '-8206'
c Encoding variable: aux147 with domain: bool (representing constraint (((field_00004_00002=4) + (field_00009_00002=4) + (field_00002_00002=4) + (field_00007_00002=4) + (field_00005_00002=4) + (field_00003_00002=4) + (field_00008_00002=4) + (field_00001_00002=4) + (field_00006_00002=4))=tv=1))
c Var 'aux147' direct represents '0' with '-8207'
c Var 'aux147' direct represents '1' with '8207'
c Var 'aux147' order represents '1' with '1'
c Var 'aux147' order represents '0' with '-8207'
c Encoding variable: aux148 with domain: bool (representing constraint (((field_00004_00002=5) + (field_00009_00002=5) + (field_00002_00002=5) + (field_00007_00002=5) + (field_00005_00002=5) + (field_00003_00002=5) + (field_00008_00002=5) + (field_00001_00002=5) + (field_00006_00002=5))=tv=1))
c Var 'aux148' direct represents '0' with '-8208'
c Var 'aux148' direct represents '1' with '8208'
c Var 'aux148' order represents '1' with '1'
c Var 'aux148' order represents '0' with '-8208'
c Encoding variable: aux149 with domain: bool (representing constraint (((field_00004_00002=6) + (field_00009_00002=6) + (field_00002_00002=6) + (field_00007_00002=6) + (field_00005_00002=6) + (field_00003_00002=6) + (field_00008_00002=6) + (field_00001_00002=6) + (field_00006_00002=6))=tv=1))
c Var 'aux149' direct represents '0' with '-8209'
c Var 'aux149' direct represents '1' with '8209'
c Var 'aux149' order represents '1' with '1'
c Var 'aux149' order represents '0' with '-8209'
c Encoding variable: aux150 with domain: bool (representing constraint (((field_00004_00002=7) + (field_00009_00002=7) + (field_00002_00002=7) + (field_00007_00002=7) + (field_00005_00002=7) + (field_00003_00002=7) + (field_00008_00002=7) + (field_00001_00002=7) + (field_00006_00002=7))=tv=1))
c Var 'aux150' direct represents '0' with '-8210'
c Var 'aux150' direct represents '1' with '8210'
c Var 'aux150' order represents '1' with '1'
c Var 'aux150' order represents '0' with '-8210'
c Encoding variable: aux151 with domain: bool (representing constraint (((field_00004_00002=8) + (field_00009_00002=8) + (field_00002_00002=8) + (field_00007_00002=8) + (field_00005_00002=8) + (field_00003_00002=8) + (field_00008_00002=8) + (field_00001_00002=8) + (field_00006_00002=8))=tv=1))
c Var 'aux151' direct represents '0' with '-8211'
c Var 'aux151' direct represents '1' with '8211'
c Var 'aux151' order represents '1' with '1'
c Var 'aux151' order represents '0' with '-8211'
c Encoding variable: aux152 with domain: bool (representing constraint (((field_00004_00002=9) + (field_00009_00002=9) + (field_00002_00002=9) + (field_00007_00002=9) + (field_00005_00002=9) + (field_00003_00002=9) + (field_00008_00002=9) + (field_00001_00002=9) + (field_00006_00002=9))=tv=1))
c Var 'aux152' direct represents '0' with '-8212'
c Var 'aux152' direct represents '1' with '8212'
c Var 'aux152' order represents '1' with '1'
c Var 'aux152' order represents '0' with '-8212'
c Encoding variable: aux153 with domain: bool (representing constraint (((field_00004_00003=1) + (field_00009_00003=1) + (field_00002_00003=1) + (field_00007_00003=1) + (field_00005_00003=1) + (field_00003_00003=1) + (field_00008_00003=1) + (field_00001_00003=1) + (field_00006_00003=1))=tv=1))
c Var 'aux153' direct represents '0' with '-8213'
c Var 'aux153' direct represents '1' with '8213'
c Var 'aux153' order represents '1' with '1'
c Var 'aux153' order represents '0' with '-8213'
c Encoding variable: aux154 with domain: bool (representing constraint (((field_00004_00003=2) + (field_00009_00003=2) + (field_00002_00003=2) + (field_00007_00003=2) + (field_00005_00003=2) + (field_00003_00003=2) + (field_00008_00003=2) + (field_00001_00003=2) + (field_00006_00003=2))=tv=1))
c Var 'aux154' direct represents '0' with '-8214'
c Var 'aux154' direct represents '1' with '8214'
c Var 'aux154' order represents '1' with '1'
c Var 'aux154' order represents '0' with '-8214'
c Encoding variable: aux155 with domain: bool (representing constraint (((field_00004_00003=3) + (field_00009_00003=3) + (field_00002_00003=3) + (field_00007_00003=3) + (field_00005_00003=3) + (field_00003_00003=3) + (field_00008_00003=3) + (field_00001_00003=3) + (field_00006_00003=3))=tv=1))
c Var 'aux155' direct represents '0' with '-8215'
c Var 'aux155' direct represents '1' with '8215'
c Var 'aux155' order represents '1' with '1'
c Var 'aux155' order represents '0' with '-8215'
c Encoding variable: aux156 with domain: bool (representing constraint (((field_00004_00003=4) + (field_00009_00003=4) + (field_00002_00003=4) + (field_00007_00003=4) + (field_00005_00003=4) + (field_00003_00003=4) + (field_00008_00003=4) + (field_00001_00003=4) + (field_00006_00003=4))=tv=1))
c Var 'aux156' direct represents '0' with '-8216'
c Var 'aux156' direct represents '1' with '8216'
c Var 'aux156' order represents '1' with '1'
c Var 'aux156' order represents '0' with '-8216'
c Encoding variable: aux157 with domain: bool (representing constraint (((field_00004_00003=5) + (field_00009_00003=5) + (field_00002_00003=5) + (field_00007_00003=5) + (field_00005_00003=5) + (field_00003_00003=5) + (field_00008_00003=5) + (field_00001_00003=5) + (field_00006_00003=5))=tv=1))
c Var 'aux157' direct represents '0' with '-8217'
c Var 'aux157' direct represents '1' with '8217'
c Var 'aux157' order represents '1' with '1'
c Var 'aux157' order represents '0' with '-8217'
c Encoding variable: aux158 with domain: bool (representing constraint (((field_00004_00003=6) + (field_00009_00003=6) + (field_00002_00003=6) + (field_00007_00003=6) + (field_00005_00003=6) + (field_00003_00003=6) + (field_00008_00003=6) + (field_00001_00003=6) + (field_00006_00003=6))=tv=1))
c Var 'aux158' direct represents '0' with '-8218'
c Var 'aux158' direct represents '1' with '8218'
c Var 'aux158' order represents '1' with '1'
c Var 'aux158' order represents '0' with '-8218'
c Encoding variable: aux159 with domain: bool (representing constraint (((field_00004_00003=7) + (field_00009_00003=7) + (field_00002_00003=7) + (field_00007_00003=7) + (field_00005_00003=7) + (field_00003_00003=7) + (field_00008_00003=7) + (field_00001_00003=7) + (field_00006_00003=7))=tv=1))
c Var 'aux159' direct represents '0' with '-8219'
c Var 'aux159' direct represents '1' with '8219'
c Var 'aux159' order represents '1' with '1'
c Var 'aux159' order represents '0' with '-8219'
c Encoding variable: aux160 with domain: bool (representing constraint (((field_00004_00003=8) + (field_00009_00003=8) + (field_00002_00003=8) + (field_00007_00003=8) + (field_00005_00003=8) + (field_00003_00003=8) + (field_00008_00003=8) + (field_00001_00003=8) + (field_00006_00003=8))=tv=1))
c Var 'aux160' direct represents '0' with '-8220'
c Var 'aux160' direct represents '1' with '8220'
c Var 'aux160' order represents '1' with '1'
c Var 'aux160' order represents '0' with '-8220'
c Encoding variable: aux161 with domain: bool (representing constraint (((field_00004_00003=9) + (field_00009_00003=9) + (field_00002_00003=9) + (field_00007_00003=9) + (field_00005_00003=9) + (field_00003_00003=9) + (field_00008_00003=9) + (field_00001_00003=9) + (field_00006_00003=9))=tv=1))
c Var 'aux161' direct represents '0' with '-8221'
c Var 'aux161' direct represents '1' with '8221'
c Var 'aux161' order represents '1' with '1'
c Var 'aux161' order represents '0' with '-8221'
c Encoding variable: aux162 with domain: bool (representing constraint (((field_00004_00004=1) + (field_00009_00004=1) + (field_00002_00004=1) + (field_00007_00004=1) + (field_00005_00004=1) + (field_00003_00004=1) + (field_00008_00004=1) + (field_00001_00004=1) + (field_00006_00004=1))=tv=1))
c Var 'aux162' direct represents '0' with '-8222'
c Var 'aux162' direct represents '1' with '8222'
c Var 'aux162' order represents '1' with '1'
c Var 'aux162' order represents '0' with '-8222'
c Encoding variable: aux163 with domain: bool (representing constraint (((field_00004_00004=2) + (field_00009_00004=2) + (field_00002_00004=2) + (field_00007_00004=2) + (field_00005_00004=2) + (field_00003_00004=2) + (field_00008_00004=2) + (field_00001_00004=2) + (field_00006_00004=2))=tv=1))
c Var 'aux163' direct represents '0' with '-8223'
c Var 'aux163' direct represents '1' with '8223'
c Var 'aux163' order represents '1' with '1'
c Var 'aux163' order represents '0' with '-8223'
c Encoding variable: aux164 with domain: bool (representing constraint (((field_00004_00004=3) + (field_00009_00004=3) + (field_00002_00004=3) + (field_00007_00004=3) + (field_00005_00004=3) + (field_00003_00004=3) + (field_00008_00004=3) + (field_00001_00004=3) + (field_00006_00004=3))=tv=1))
c Var 'aux164' direct represents '0' with '-8224'
c Var 'aux164' direct represents '1' with '8224'
c Var 'aux164' order represents '1' with '1'
c Var 'aux164' order represents '0' with '-8224'
c Encoding variable: aux165 with domain: bool (representing constraint (((field_00004_00004=4) + (field_00009_00004=4) + (field_00002_00004=4) + (field_00007_00004=4) + (field_00005_00004=4) + (field_00003_00004=4) + (field_00008_00004=4) + (field_00001_00004=4) + (field_00006_00004=4))=tv=1))
c Var 'aux165' direct represents '0' with '-8225'
c Var 'aux165' direct represents '1' with '8225'
c Var 'aux165' order represents '1' with '1'
c Var 'aux165' order represents '0' with '-8225'
c Encoding variable: aux166 with domain: bool (representing constraint (((field_00004_00004=5) + (field_00009_00004=5) + (field_00002_00004=5) + (field_00007_00004=5) + (field_00005_00004=5) + (field_00003_00004=5) + (field_00008_00004=5) + (field_00001_00004=5) + (field_00006_00004=5))=tv=1))
c Var 'aux166' direct represents '0' with '-8226'
c Var 'aux166' direct represents '1' with '8226'
c Var 'aux166' order represents '1' with '1'
c Var 'aux166' order represents '0' with '-8226'
c Encoding variable: aux167 with domain: bool (representing constraint (((field_00004_00004=6) + (field_00009_00004=6) + (field_00002_00004=6) + (field_00007_00004=6) + (field_00005_00004=6) + (field_00003_00004=6) + (field_00008_00004=6) + (field_00001_00004=6) + (field_00006_00004=6))=tv=1))
c Var 'aux167' direct represents '0' with '-8227'
c Var 'aux167' direct represents '1' with '8227'
c Var 'aux167' order represents '1' with '1'
c Var 'aux167' order represents '0' with '-8227'
c Encoding variable: aux168 with domain: bool (representing constraint (((field_00004_00004=7) + (field_00009_00004=7) + (field_00002_00004=7) + (field_00007_00004=7) + (field_00005_00004=7) + (field_00003_00004=7) + (field_00008_00004=7) + (field_00001_00004=7) + (field_00006_00004=7))=tv=1))
c Var 'aux168' direct represents '0' with '-8228'
c Var 'aux168' direct represents '1' with '8228'
c Var 'aux168' order represents '1' with '1'
c Var 'aux168' order represents '0' with '-8228'
c Encoding variable: aux169 with domain: bool (representing constraint (((field_00004_00004=8) + (field_00009_00004=8) + (field_00002_00004=8) + (field_00007_00004=8) + (field_00005_00004=8) + (field_00003_00004=8) + (field_00008_00004=8) + (field_00001_00004=8) + (field_00006_00004=8))=tv=1))
c Var 'aux169' direct represents '0' with '-8229'
c Var 'aux169' direct represents '1' with '8229'
c Var 'aux169' order represents '1' with '1'
c Var 'aux169' order represents '0' with '-8229'
c Encoding variable: aux170 with domain: bool (representing constraint (((field_00004_00004=9) + (field_00009_00004=9) + (field_00002_00004=9) + (field_00007_00004=9) + (field_00005_00004=9) + (field_00003_00004=9) + (field_00008_00004=9) + (field_00001_00004=9) + (field_00006_00004=9))=tv=1))
c Var 'aux170' direct represents '0' with '-8230'
c Var 'aux170' direct represents '1' with '8230'
c Var 'aux170' order represents '1' with '1'
c Var 'aux170' order represents '0' with '-8230'
c Encoding variable: aux171 with domain: bool (representing constraint (((field_00004_00005=1) + (field_00009_00005=1) + (field_00002_00005=1) + (field_00007_00005=1) + (field_00005_00005=1) + (field_00003_00005=1) + (field_00008_00005=1) + (field_00001_00005=1) + (field_00006_00005=1))=tv=1))
c Var 'aux171' direct represents '0' with '-8231'
c Var 'aux171' direct represents '1' with '8231'
c Var 'aux171' order represents '1' with '1'
c Var 'aux171' order represents '0' with '-8231'
c Encoding variable: aux172 with domain: bool (representing constraint (((field_00004_00005=2) + (field_00009_00005=2) + (field_00002_00005=2) + (field_00007_00005=2) + (field_00005_00005=2) + (field_00003_00005=2) + (field_00008_00005=2) + (field_00001_00005=2) + (field_00006_00005=2))=tv=1))
c Var 'aux172' direct represents '0' with '-8232'
c Var 'aux172' direct represents '1' with '8232'
c Var 'aux172' order represents '1' with '1'
c Var 'aux172' order represents '0' with '-8232'
c Encoding variable: aux173 with domain: bool (representing constraint (((field_00004_00005=3) + (field_00009_00005=3) + (field_00002_00005=3) + (field_00007_00005=3) + (field_00005_00005=3) + (field_00003_00005=3) + (field_00008_00005=3) + (field_00001_00005=3) + (field_00006_00005=3))=tv=1))
c Var 'aux173' direct represents '0' with '-8233'
c Var 'aux173' direct represents '1' with '8233'
c Var 'aux173' order represents '1' with '1'
c Var 'aux173' order represents '0' with '-8233'
c Encoding variable: aux174 with domain: bool (representing constraint (((field_00004_00005=4) + (field_00009_00005=4) + (field_00002_00005=4) + (field_00007_00005=4) + (field_00005_00005=4) + (field_00003_00005=4) + (field_00008_00005=4) + (field_00001_00005=4) + (field_00006_00005=4))=tv=1))
c Var 'aux174' direct represents '0' with '-8234'
c Var 'aux174' direct represents '1' with '8234'
c Var 'aux174' order represents '1' with '1'
c Var 'aux174' order represents '0' with '-8234'
c Encoding variable: aux175 with domain: bool (representing constraint (((field_00004_00005=5) + (field_00009_00005=5) + (field_00002_00005=5) + (field_00007_00005=5) + (field_00005_00005=5) + (field_00003_00005=5) + (field_00008_00005=5) + (field_00001_00005=5) + (field_00006_00005=5))=tv=1))
c Var 'aux175' direct represents '0' with '-8235'
c Var 'aux175' direct represents '1' with '8235'
c Var 'aux175' order represents '1' with '1'
c Var 'aux175' order represents '0' with '-8235'
c Encoding variable: aux176 with domain: bool (representing constraint (((field_00004_00005=6) + (field_00009_00005=6) + (field_00002_00005=6) + (field_00007_00005=6) + (field_00005_00005=6) + (field_00003_00005=6) + (field_00008_00005=6) + (field_00001_00005=6) + (field_00006_00005=6))=tv=1))
c Var 'aux176' direct represents '0' with '-8236'
c Var 'aux176' direct represents '1' with '8236'
c Var 'aux176' order represents '1' with '1'
c Var 'aux176' order represents '0' with '-8236'
c Encoding variable: aux177 with domain: bool (representing constraint (((field_00004_00005=7) + (field_00009_00005=7) + (field_00002_00005=7) + (field_00007_00005=7) + (field_00005_00005=7) + (field_00003_00005=7) + (field_00008_00005=7) + (field_00001_00005=7) + (field_00006_00005=7))=tv=1))
c Var 'aux177' direct represents '0' with '-8237'
c Var 'aux177' direct represents '1' with '8237'
c Var 'aux177' order represents '1' with '1'
c Var 'aux177' order represents '0' with '-8237'
c Encoding variable: aux178 with domain: bool (representing constraint (((field_00004_00005=8) + (field_00009_00005=8) + (field_00002_00005=8) + (field_00007_00005=8) + (field_00005_00005=8) + (field_00003_00005=8) + (field_00008_00005=8) + (field_00001_00005=8) + (field_00006_00005=8))=tv=1))
c Var 'aux178' direct represents '0' with '-8238'
c Var 'aux178' direct represents '1' with '8238'
c Var 'aux178' order represents '1' with '1'
c Var 'aux178' order represents '0' with '-8238'
c Encoding variable: aux179 with domain: bool (representing constraint (((field_00004_00005=9) + (field_00009_00005=9) + (field_00002_00005=9) + (field_00007_00005=9) + (field_00005_00005=9) + (field_00003_00005=9) + (field_00008_00005=9) + (field_00001_00005=9) + (field_00006_00005=9))=tv=1))
c Var 'aux179' direct represents '0' with '-8239'
c Var 'aux179' direct represents '1' with '8239'
c Var 'aux179' order represents '1' with '1'
c Var 'aux179' order represents '0' with '-8239'
c Encoding variable: aux180 with domain: bool (representing constraint (((field_00004_00006=1) + (field_00009_00006=1) + (field_00002_00006=1) + (field_00007_00006=1) + (field_00005_00006=1) + (field_00003_00006=1) + (field_00008_00006=1) + (field_00001_00006=1) + (field_00006_00006=1))=tv=1))
c Var 'aux180' direct represents '0' with '-8240'
c Var 'aux180' direct represents '1' with '8240'
c Var 'aux180' order represents '1' with '1'
c Var 'aux180' order represents '0' with '-8240'
c Encoding variable: aux181 with domain: bool (representing constraint (((field_00004_00006=2) + (field_00009_00006=2) + (field_00002_00006=2) + (field_00007_00006=2) + (field_00005_00006=2) + (field_00003_00006=2) + (field_00008_00006=2) + (field_00001_00006=2) + (field_00006_00006=2))=tv=1))
c Var 'aux181' direct represents '0' with '-8241'
c Var 'aux181' direct represents '1' with '8241'
c Var 'aux181' order represents '1' with '1'
c Var 'aux181' order represents '0' with '-8241'
c Encoding variable: aux182 with domain: bool (representing constraint (((field_00004_00006=3) + (field_00009_00006=3) + (field_00002_00006=3) + (field_00007_00006=3) + (field_00005_00006=3) + (field_00003_00006=3) + (field_00008_00006=3) + (field_00001_00006=3) + (field_00006_00006=3))=tv=1))
c Var 'aux182' direct represents '0' with '-8242'
c Var 'aux182' direct represents '1' with '8242'
c Var 'aux182' order represents '1' with '1'
c Var 'aux182' order represents '0' with '-8242'
c Encoding variable: aux183 with domain: bool (representing constraint (((field_00004_00006=4) + (field_00009_00006=4) + (field_00002_00006=4) + (field_00007_00006=4) + (field_00005_00006=4) + (field_00003_00006=4) + (field_00008_00006=4) + (field_00001_00006=4) + (field_00006_00006=4))=tv=1))
c Var 'aux183' direct represents '0' with '-8243'
c Var 'aux183' direct represents '1' with '8243'
c Var 'aux183' order represents '1' with '1'
c Var 'aux183' order represents '0' with '-8243'
c Encoding variable: aux184 with domain: bool (representing constraint (((field_00004_00006=5) + (field_00009_00006=5) + (field_00002_00006=5) + (field_00007_00006=5) + (field_00005_00006=5) + (field_00003_00006=5) + (field_00008_00006=5) + (field_00001_00006=5) + (field_00006_00006=5))=tv=1))
c Var 'aux184' direct represents '0' with '-8244'
c Var 'aux184' direct represents '1' with '8244'
c Var 'aux184' order represents '1' with '1'
c Var 'aux184' order represents '0' with '-8244'
c Encoding variable: aux185 with domain: bool (representing constraint (((field_00004_00006=6) + (field_00009_00006=6) + (field_00002_00006=6) + (field_00007_00006=6) + (field_00005_00006=6) + (field_00003_00006=6) + (field_00008_00006=6) + (field_00001_00006=6) + (field_00006_00006=6))=tv=1))
c Var 'aux185' direct represents '0' with '-8245'
c Var 'aux185' direct represents '1' with '8245'
c Var 'aux185' order represents '1' with '1'
c Var 'aux185' order represents '0' with '-8245'
c Encoding variable: aux186 with domain: bool (representing constraint (((field_00004_00006=7) + (field_00009_00006=7) + (field_00002_00006=7) + (field_00007_00006=7) + (field_00005_00006=7) + (field_00003_00006=7) + (field_00008_00006=7) + (field_00001_00006=7) + (field_00006_00006=7))=tv=1))
c Var 'aux186' direct represents '0' with '-8246'
c Var 'aux186' direct represents '1' with '8246'
c Var 'aux186' order represents '1' with '1'
c Var 'aux186' order represents '0' with '-8246'
c Encoding variable: aux187 with domain: bool (representing constraint (((field_00004_00006=8) + (field_00009_00006=8) + (field_00002_00006=8) + (field_00007_00006=8) + (field_00005_00006=8) + (field_00003_00006=8) + (field_00008_00006=8) + (field_00001_00006=8) + (field_00006_00006=8))=tv=1))
c Var 'aux187' direct represents '0' with '-8247'
c Var 'aux187' direct represents '1' with '8247'
c Var 'aux187' order represents '1' with '1'
c Var 'aux187' order represents '0' with '-8247'
c Encoding variable: aux188 with domain: bool (representing constraint (((field_00004_00006=9) + (field_00009_00006=9) + (field_00002_00006=9) + (field_00007_00006=9) + (field_00005_00006=9) + (field_00003_00006=9) + (field_00008_00006=9) + (field_00001_00006=9) + (field_00006_00006=9))=tv=1))
c Var 'aux188' direct represents '0' with '-8248'
c Var 'aux188' direct represents '1' with '8248'
c Var 'aux188' order represents '1' with '1'
c Var 'aux188' order represents '0' with '-8248'
c Encoding variable: aux189 with domain: bool (representing constraint (((field_00004_00007=1) + (field_00009_00007=1) + (field_00002_00007=1) + (field_00007_00007=1) + (field_00005_00007=1) + (field_00003_00007=1) + (field_00008_00007=1) + (field_00001_00007=1) + (field_00006_00007=1))=tv=1))
c Var 'aux189' direct represents '0' with '-8249'
c Var 'aux189' direct represents '1' with '8249'
c Var 'aux189' order represents '1' with '1'
c Var 'aux189' order represents '0' with '-8249'
c Encoding variable: aux190 with domain: bool (representing constraint (((field_00004_00007=2) + (field_00009_00007=2) + (field_00002_00007=2) + (field_00007_00007=2) + (field_00005_00007=2) + (field_00003_00007=2) + (field_00008_00007=2) + (field_00001_00007=2) + (field_00006_00007=2))=tv=1))
c Var 'aux190' direct represents '0' with '-8250'
c Var 'aux190' direct represents '1' with '8250'
c Var 'aux190' order represents '1' with '1'
c Var 'aux190' order represents '0' with '-8250'
c Encoding variable: aux191 with domain: bool (representing constraint (((field_00004_00007=3) + (field_00009_00007=3) + (field_00002_00007=3) + (field_00007_00007=3) + (field_00005_00007=3) + (field_00003_00007=3) + (field_00008_00007=3) + (field_00001_00007=3) + (field_00006_00007=3))=tv=1))
c Var 'aux191' direct represents '0' with '-8251'
c Var 'aux191' direct represents '1' with '8251'
c Var 'aux191' order represents '1' with '1'
c Var 'aux191' order represents '0' with '-8251'
c Encoding variable: aux192 with domain: bool (representing constraint (((field_00004_00007=4) + (field_00009_00007=4) + (field_00002_00007=4) + (field_00007_00007=4) + (field_00005_00007=4) + (field_00003_00007=4) + (field_00008_00007=4) + (field_00001_00007=4) + (field_00006_00007=4))=tv=1))
c Var 'aux192' direct represents '0' with '-8252'
c Var 'aux192' direct represents '1' with '8252'
c Var 'aux192' order represents '1' with '1'
c Var 'aux192' order represents '0' with '-8252'
c Encoding variable: aux193 with domain: bool (representing constraint (((field_00004_00007=5) + (field_00009_00007=5) + (field_00002_00007=5) + (field_00007_00007=5) + (field_00005_00007=5) + (field_00003_00007=5) + (field_00008_00007=5) + (field_00001_00007=5) + (field_00006_00007=5))=tv=1))
c Var 'aux193' direct represents '0' with '-8253'
c Var 'aux193' direct represents '1' with '8253'
c Var 'aux193' order represents '1' with '1'
c Var 'aux193' order represents '0' with '-8253'
c Encoding variable: aux194 with domain: bool (representing constraint (((field_00004_00007=6) + (field_00009_00007=6) + (field_00002_00007=6) + (field_00007_00007=6) + (field_00005_00007=6) + (field_00003_00007=6) + (field_00008_00007=6) + (field_00001_00007=6) + (field_00006_00007=6))=tv=1))
c Var 'aux194' direct represents '0' with '-8254'
c Var 'aux194' direct represents '1' with '8254'
c Var 'aux194' order represents '1' with '1'
c Var 'aux194' order represents '0' with '-8254'
c Encoding variable: aux195 with domain: bool (representing constraint (((field_00004_00007=7) + (field_00009_00007=7) + (field_00002_00007=7) + (field_00007_00007=7) + (field_00005_00007=7) + (field_00003_00007=7) + (field_00008_00007=7) + (field_00001_00007=7) + (field_00006_00007=7))=tv=1))
c Var 'aux195' direct represents '0' with '-8255'
c Var 'aux195' direct represents '1' with '8255'
c Var 'aux195' order represents '1' with '1'
c Var 'aux195' order represents '0' with '-8255'
c Encoding variable: aux196 with domain: bool (representing constraint (((field_00004_00007=8) + (field_00009_00007=8) + (field_00002_00007=8) + (field_00007_00007=8) + (field_00005_00007=8) + (field_00003_00007=8) + (field_00008_00007=8) + (field_00001_00007=8) + (field_00006_00007=8))=tv=1))
c Var 'aux196' direct represents '0' with '-8256'
c Var 'aux196' direct represents '1' with '8256'
c Var 'aux196' order represents '1' with '1'
c Var 'aux196' order represents '0' with '-8256'
c Encoding variable: aux197 with domain: bool (representing constraint (((field_00004_00007=9) + (field_00009_00007=9) + (field_00002_00007=9) + (field_00007_00007=9) + (field_00005_00007=9) + (field_00003_00007=9) + (field_00008_00007=9) + (field_00001_00007=9) + (field_00006_00007=9))=tv=1))
c Var 'aux197' direct represents '0' with '-8257'
c Var 'aux197' direct represents '1' with '8257'
c Var 'aux197' order represents '1' with '1'
c Var 'aux197' order represents '0' with '-8257'
c Encoding variable: aux198 with domain: bool (representing constraint (((field_00004_00008=1) + (field_00009_00008=1) + (field_00002_00008=1) + (field_00007_00008=1) + (field_00005_00008=1) + (field_00003_00008=1) + (field_00008_00008=1) + (field_00001_00008=1) + (field_00006_00008=1))=tv=1))
c Var 'aux198' direct represents '0' with '-8258'
c Var 'aux198' direct represents '1' with '8258'
c Var 'aux198' order represents '1' with '1'
c Var 'aux198' order represents '0' with '-8258'
c Encoding variable: aux199 with domain: bool (representing constraint (((field_00004_00008=2) + (field_00009_00008=2) + (field_00002_00008=2) + (field_00007_00008=2) + (field_00005_00008=2) + (field_00003_00008=2) + (field_00008_00008=2) + (field_00001_00008=2) + (field_00006_00008=2))=tv=1))
c Var 'aux199' direct represents '0' with '-8259'
c Var 'aux199' direct represents '1' with '8259'
c Var 'aux199' order represents '1' with '1'
c Var 'aux199' order represents '0' with '-8259'
c Encoding variable: aux200 with domain: bool (representing constraint (((field_00004_00008=3) + (field_00009_00008=3) + (field_00002_00008=3) + (field_00007_00008=3) + (field_00005_00008=3) + (field_00003_00008=3) + (field_00008_00008=3) + (field_00001_00008=3) + (field_00006_00008=3))=tv=1))
c Var 'aux200' direct represents '0' with '-8260'
c Var 'aux200' direct represents '1' with '8260'
c Var 'aux200' order represents '1' with '1'
c Var 'aux200' order represents '0' with '-8260'
c Encoding variable: aux201 with domain: bool (representing constraint (((field_00004_00008=4) + (field_00009_00008=4) + (field_00002_00008=4) + (field_00007_00008=4) + (field_00005_00008=4) + (field_00003_00008=4) + (field_00008_00008=4) + (field_00001_00008=4) + (field_00006_00008=4))=tv=1))
c Var 'aux201' direct represents '0' with '-8261'
c Var 'aux201' direct represents '1' with '8261'
c Var 'aux201' order represents '1' with '1'
c Var 'aux201' order represents '0' with '-8261'
c Encoding variable: aux202 with domain: bool (representing constraint (((field_00004_00008=5) + (field_00009_00008=5) + (field_00002_00008=5) + (field_00007_00008=5) + (field_00005_00008=5) + (field_00003_00008=5) + (field_00008_00008=5) + (field_00001_00008=5) + (field_00006_00008=5))=tv=1))
c Var 'aux202' direct represents '0' with '-8262'
c Var 'aux202' direct represents '1' with '8262'
c Var 'aux202' order represents '1' with '1'
c Var 'aux202' order represents '0' with '-8262'
c Encoding variable: aux203 with domain: bool (representing constraint (((field_00004_00008=6) + (field_00009_00008=6) + (field_00002_00008=6) + (field_00007_00008=6) + (field_00005_00008=6) + (field_00003_00008=6) + (field_00008_00008=6) + (field_00001_00008=6) + (field_00006_00008=6))=tv=1))
c Var 'aux203' direct represents '0' with '-8263'
c Var 'aux203' direct represents '1' with '8263'
c Var 'aux203' order represents '1' with '1'
c Var 'aux203' order represents '0' with '-8263'
c Encoding variable: aux204 with domain: bool (representing constraint (((field_00004_00008=7) + (field_00009_00008=7) + (field_00002_00008=7) + (field_00007_00008=7) + (field_00005_00008=7) + (field_00003_00008=7) + (field_00008_00008=7) + (field_00001_00008=7) + (field_00006_00008=7))=tv=1))
c Var 'aux204' direct represents '0' with '-8264'
c Var 'aux204' direct represents '1' with '8264'
c Var 'aux204' order represents '1' with '1'
c Var 'aux204' order represents '0' with '-8264'
c Encoding variable: aux205 with domain: bool (representing constraint (((field_00004_00008=8) + (field_00009_00008=8) + (field_00002_00008=8) + (field_00007_00008=8) + (field_00005_00008=8) + (field_00003_00008=8) + (field_00008_00008=8) + (field_00001_00008=8) + (field_00006_00008=8))=tv=1))
c Var 'aux205' direct represents '0' with '-8265'
c Var 'aux205' direct represents '1' with '8265'
c Var 'aux205' order represents '1' with '1'
c Var 'aux205' order represents '0' with '-8265'
c Encoding variable: aux206 with domain: bool (representing constraint (((field_00004_00008=9) + (field_00009_00008=9) + (field_00002_00008=9) + (field_00007_00008=9) + (field_00005_00008=9) + (field_00003_00008=9) + (field_00008_00008=9) + (field_00001_00008=9) + (field_00006_00008=9))=tv=1))
c Var 'aux206' direct represents '0' with '-8266'
c Var 'aux206' direct represents '1' with '8266'
c Var 'aux206' order represents '1' with '1'
c Var 'aux206' order represents '0' with '-8266'
c Encoding variable: aux207 with domain: bool (representing constraint (((field_00004_00009=1) + (field_00009_00009=1) + (field_00002_00009=1) + (field_00007_00009=1) + (field_00005_00009=1) + (field_00003_00009=1) + (field_00008_00009=1) + (field_00001_00009=1) + (field_00006_00009=1))=tv=1))
c Var 'aux207' direct represents '0' with '-8267'
c Var 'aux207' direct represents '1' with '8267'
c Var 'aux207' order represents '1' with '1'
c Var 'aux207' order represents '0' with '-8267'
c Encoding variable: aux208 with domain: bool (representing constraint (((field_00004_00009=2) + (field_00009_00009=2) + (field_00002_00009=2) + (field_00007_00009=2) + (field_00005_00009=2) + (field_00003_00009=2) + (field_00008_00009=2) + (field_00001_00009=2) + (field_00006_00009=2))=tv=1))
c Var 'aux208' direct represents '0' with '-8268'
c Var 'aux208' direct represents '1' with '8268'
c Var 'aux208' order represents '1' with '1'
c Var 'aux208' order represents '0' with '-8268'
c Encoding variable: aux209 with domain: bool (representing constraint (((field_00004_00009=3) + (field_00009_00009=3) + (field_00002_00009=3) + (field_00007_00009=3) + (field_00005_00009=3) + (field_00003_00009=3) + (field_00008_00009=3) + (field_00001_00009=3) + (field_00006_00009=3))=tv=1))
c Var 'aux209' direct represents '0' with '-8269'
c Var 'aux209' direct represents '1' with '8269'
c Var 'aux209' order represents '1' with '1'
c Var 'aux209' order represents '0' with '-8269'
c Encoding variable: aux210 with domain: bool (representing constraint (((field_00004_00009=4) + (field_00009_00009=4) + (field_00002_00009=4) + (field_00007_00009=4) + (field_00005_00009=4) + (field_00003_00009=4) + (field_00008_00009=4) + (field_00001_00009=4) + (field_00006_00009=4))=tv=1))
c Var 'aux210' direct represents '0' with '-8270'
c Var 'aux210' direct represents '1' with '8270'
c Var 'aux210' order represents '1' with '1'
c Var 'aux210' order represents '0' with '-8270'
c Encoding variable: aux211 with domain: bool (representing constraint (((field_00004_00009=5) + (field_00009_00009=5) + (field_00002_00009=5) + (field_00007_00009=5) + (field_00005_00009=5) + (field_00003_00009=5) + (field_00008_00009=5) + (field_00001_00009=5) + (field_00006_00009=5))=tv=1))
c Var 'aux211' direct represents '0' with '-8271'
c Var 'aux211' direct represents '1' with '8271'
c Var 'aux211' order represents '1' with '1'
c Var 'aux211' order represents '0' with '-8271'
c Encoding variable: aux212 with domain: bool (representing constraint (((field_00004_00009=6) + (field_00009_00009=6) + (field_00002_00009=6) + (field_00007_00009=6) + (field_00005_00009=6) + (field_00003_00009=6) + (field_00008_00009=6) + (field_00001_00009=6) + (field_00006_00009=6))=tv=1))
c Var 'aux212' direct represents '0' with '-8272'
c Var 'aux212' direct represents '1' with '8272'
c Var 'aux212' order represents '1' with '1'
c Var 'aux212' order represents '0' with '-8272'
c Encoding variable: aux213 with domain: bool (representing constraint (((field_00004_00009=7) + (field_00009_00009=7) + (field_00002_00009=7) + (field_00007_00009=7) + (field_00005_00009=7) + (field_00003_00009=7) + (field_00008_00009=7) + (field_00001_00009=7) + (field_00006_00009=7))=tv=1))
c Var 'aux213' direct represents '0' with '-8273'
c Var 'aux213' direct represents '1' with '8273'
c Var 'aux213' order represents '1' with '1'
c Var 'aux213' order represents '0' with '-8273'
c Encoding variable: aux214 with domain: bool (representing constraint (((field_00004_00009=8) + (field_00009_00009=8) + (field_00002_00009=8) + (field_00007_00009=8) + (field_00005_00009=8) + (field_00003_00009=8) + (field_00008_00009=8) + (field_00001_00009=8) + (field_00006_00009=8))=tv=1))
c Var 'aux214' direct represents '0' with '-8274'
c Var 'aux214' direct represents '1' with '8274'
c Var 'aux214' order represents '1' with '1'
c Var 'aux214' order represents '0' with '-8274'
c Encoding variable: aux215 with domain: bool (representing constraint (((field_00004_00009=9) + (field_00009_00009=9) + (field_00002_00009=9) + (field_00007_00009=9) + (field_00005_00009=9) + (field_00003_00009=9) + (field_00008_00009=9) + (field_00001_00009=9) + (field_00006_00009=9))=tv=1))
c Var 'aux215' direct represents '0' with '-8275'
c Var 'aux215' direct represents '1' with '8275'
c Var 'aux215' order represents '1' with '1'
c Var 'aux215' order represents '0' with '-8275'
c Encoding variable: aux216 with domain: bool (representing constraint (((field_00001_00001=1) + (field_00001_00002=1) + (field_00001_00003=1) + (field_00001_00004=1) + (field_00001_00005=1) + (field_00001_00006=1) + (field_00001_00007=1) + (field_00001_00008=1) + (field_00001_00009=1))=tv=1))
c Var 'aux216' direct represents '0' with '-8276'
c Var 'aux216' direct represents '1' with '8276'
c Var 'aux216' order represents '1' with '1'
c Var 'aux216' order represents '0' with '-8276'
c Encoding variable: aux217 with domain: bool (representing constraint (((field_00001_00001=2) + (field_00001_00002=2) + (field_00001_00003=2) + (field_00001_00004=2) + (field_00001_00005=2) + (field_00001_00006=2) + (field_00001_00007=2) + (field_00001_00008=2) + (field_00001_00009=2))=tv=1))
c Var 'aux217' direct represents '0' with '-8277'
c Var 'aux217' direct represents '1' with '8277'
c Var 'aux217' order represents '1' with '1'
c Var 'aux217' order represents '0' with '-8277'
c Encoding variable: aux218 with domain: bool (representing constraint (((field_00001_00001=3) + (field_00001_00002=3) + (field_00001_00003=3) + (field_00001_00004=3) + (field_00001_00005=3) + (field_00001_00006=3) + (field_00001_00007=3) + (field_00001_00008=3) + (field_00001_00009=3))=tv=1))
c Var 'aux218' direct represents '0' with '-8278'
c Var 'aux218' direct represents '1' with '8278'
c Var 'aux218' order represents '1' with '1'
c Var 'aux218' order represents '0' with '-8278'
c Encoding variable: aux219 with domain: bool (representing constraint (((field_00001_00001=4) + (field_00001_00002=4) + (field_00001_00003=4) + (field_00001_00004=4) + (field_00001_00005=4) + (field_00001_00006=4) + (field_00001_00007=4) + (field_00001_00008=4) + (field_00001_00009=4))=tv=1))
c Var 'aux219' direct represents '0' with '-8279'
c Var 'aux219' direct represents '1' with '8279'
c Var 'aux219' order represents '1' with '1'
c Var 'aux219' order represents '0' with '-8279'
c Encoding variable: aux220 with domain: bool (representing constraint (((field_00001_00001=5) + (field_00001_00002=5) + (field_00001_00003=5) + (field_00001_00004=5) + (field_00001_00005=5) + (field_00001_00006=5) + (field_00001_00007=5) + (field_00001_00008=5) + (field_00001_00009=5))=tv=1))
c Var 'aux220' direct represents '0' with '-8280'
c Var 'aux220' direct represents '1' with '8280'
c Var 'aux220' order represents '1' with '1'
c Var 'aux220' order represents '0' with '-8280'
c Encoding variable: aux221 with domain: bool (representing constraint (((field_00001_00001=6) + (field_00001_00002=6) + (field_00001_00003=6) + (field_00001_00004=6) + (field_00001_00005=6) + (field_00001_00006=6) + (field_00001_00007=6) + (field_00001_00008=6) + (field_00001_00009=6))=tv=1))
c Var 'aux221' direct represents '0' with '-8281'
c Var 'aux221' direct represents '1' with '8281'
c Var 'aux221' order represents '1' with '1'
c Var 'aux221' order represents '0' with '-8281'
c Encoding variable: aux222 with domain: bool (representing constraint (((field_00001_00001=7) + (field_00001_00002=7) + (field_00001_00003=7) + (field_00001_00004=7) + (field_00001_00005=7) + (field_00001_00006=7) + (field_00001_00007=7) + (field_00001_00008=7) + (field_00001_00009=7))=tv=1))
c Var 'aux222' direct represents '0' with '-8282'
c Var 'aux222' direct represents '1' with '8282'
c Var 'aux222' order represents '1' with '1'
c Var 'aux222' order represents '0' with '-8282'
c Encoding variable: aux223 with domain: bool (representing constraint (((field_00001_00001=8) + (field_00001_00002=8) + (field_00001_00003=8) + (field_00001_00004=8) + (field_00001_00005=8) + (field_00001_00006=8) + (field_00001_00007=8) + (field_00001_00008=8) + (field_00001_00009=8))=tv=1))
c Var 'aux223' direct represents '0' with '-8283'
c Var 'aux223' direct represents '1' with '8283'
c Var 'aux223' order represents '1' with '1'
c Var 'aux223' order represents '0' with '-8283'
c Encoding variable: aux224 with domain: bool (representing constraint (((field_00001_00001=9) + (field_00001_00002=9) + (field_00001_00003=9) + (field_00001_00004=9) + (field_00001_00005=9) + (field_00001_00006=9) + (field_00001_00007=9) + (field_00001_00008=9) + (field_00001_00009=9))=tv=1))
c Var 'aux224' direct represents '0' with '-8284'
c Var 'aux224' direct represents '1' with '8284'
c Var 'aux224' order represents '1' with '1'
c Var 'aux224' order represents '0' with '-8284'
c Encoding variable: aux225 with domain: bool (representing constraint (((field_00002_00001=1) + (field_00002_00002=1) + (field_00002_00003=1) + (field_00002_00004=1) + (field_00002_00005=1) + (field_00002_00006=1) + (field_00002_00007=1) + (field_00002_00008=1) + (field_00002_00009=1))=tv=1))
c Var 'aux225' direct represents '0' with '-8285'
c Var 'aux225' direct represents '1' with '8285'
c Var 'aux225' order represents '1' with '1'
c Var 'aux225' order represents '0' with '-8285'
c Encoding variable: aux226 with domain: bool (representing constraint (((field_00002_00001=2) + (field_00002_00002=2) + (field_00002_00003=2) + (field_00002_00004=2) + (field_00002_00005=2) + (field_00002_00006=2) + (field_00002_00007=2) + (field_00002_00008=2) + (field_00002_00009=2))=tv=1))
c Var 'aux226' direct represents '0' with '-8286'
c Var 'aux226' direct represents '1' with '8286'
c Var 'aux226' order represents '1' with '1'
c Var 'aux226' order represents '0' with '-8286'
c Encoding variable: aux227 with domain: bool (representing constraint (((field_00002_00001=3) + (field_00002_00002=3) + (field_00002_00003=3) + (field_00002_00004=3) + (field_00002_00005=3) + (field_00002_00006=3) + (field_00002_00007=3) + (field_00002_00008=3) + (field_00002_00009=3))=tv=1))
c Var 'aux227' direct represents '0' with '-8287'
c Var 'aux227' direct represents '1' with '8287'
c Var 'aux227' order represents '1' with '1'
c Var 'aux227' order represents '0' with '-8287'
c Encoding variable: aux228 with domain: bool (representing constraint (((field_00002_00001=4) + (field_00002_00002=4) + (field_00002_00003=4) + (field_00002_00004=4) + (field_00002_00005=4) + (field_00002_00006=4) + (field_00002_00007=4) + (field_00002_00008=4) + (field_00002_00009=4))=tv=1))
c Var 'aux228' direct represents '0' with '-8288'
c Var 'aux228' direct represents '1' with '8288'
c Var 'aux228' order represents '1' with '1'
c Var 'aux228' order represents '0' with '-8288'
c Encoding variable: aux229 with domain: bool (representing constraint (((field_00002_00001=5) + (field_00002_00002=5) + (field_00002_00003=5) + (field_00002_00004=5) + (field_00002_00005=5) + (field_00002_00006=5) + (field_00002_00007=5) + (field_00002_00008=5) + (field_00002_00009=5))=tv=1))
c Var 'aux229' direct represents '0' with '-8289'
c Var 'aux229' direct represents '1' with '8289'
c Var 'aux229' order represents '1' with '1'
c Var 'aux229' order represents '0' with '-8289'
c Encoding variable: aux230 with domain: bool (representing constraint (((field_00002_00001=6) + (field_00002_00002=6) + (field_00002_00003=6) + (field_00002_00004=6) + (field_00002_00005=6) + (field_00002_00006=6) + (field_00002_00007=6) + (field_00002_00008=6) + (field_00002_00009=6))=tv=1))
c Var 'aux230' direct represents '0' with '-8290'
c Var 'aux230' direct represents '1' with '8290'
c Var 'aux230' order represents '1' with '1'
c Var 'aux230' order represents '0' with '-8290'
c Encoding variable: aux231 with domain: bool (representing constraint (((field_00002_00001=7) + (field_00002_00002=7) + (field_00002_00003=7) + (field_00002_00004=7) + (field_00002_00005=7) + (field_00002_00006=7) + (field_00002_00007=7) + (field_00002_00008=7) + (field_00002_00009=7))=tv=1))
c Var 'aux231' direct represents '0' with '-8291'
c Var 'aux231' direct represents '1' with '8291'
c Var 'aux231' order represents '1' with '1'
c Var 'aux231' order represents '0' with '-8291'
c Encoding variable: aux232 with domain: bool (representing constraint (((field_00002_00001=8) + (field_00002_00002=8) + (field_00002_00003=8) + (field_00002_00004=8) + (field_00002_00005=8) + (field_00002_00006=8) + (field_00002_00007=8) + (field_00002_00008=8) + (field_00002_00009=8))=tv=1))
c Var 'aux232' direct represents '0' with '-8292'
c Var 'aux232' direct represents '1' with '8292'
c Var 'aux232' order represents '1' with '1'
c Var 'aux232' order represents '0' with '-8292'
c Encoding variable: aux233 with domain: bool (representing constraint (((field_00002_00001=9) + (field_00002_00002=9) + (field_00002_00003=9) + (field_00002_00004=9) + (field_00002_00005=9) + (field_00002_00006=9) + (field_00002_00007=9) + (field_00002_00008=9) + (field_00002_00009=9))=tv=1))
c Var 'aux233' direct represents '0' with '-8293'
c Var 'aux233' direct represents '1' with '8293'
c Var 'aux233' order represents '1' with '1'
c Var 'aux233' order represents '0' with '-8293'
c Encoding variable: aux234 with domain: bool (representing constraint (((field_00003_00001=1) + (field_00003_00002=1) + (field_00003_00003=1) + (field_00003_00004=1) + (field_00003_00005=1) + (field_00003_00006=1) + (field_00003_00007=1) + (field_00003_00008=1) + (field_00003_00009=1))=tv=1))
c Var 'aux234' direct represents '0' with '-8294'
c Var 'aux234' direct represents '1' with '8294'
c Var 'aux234' order represents '1' with '1'
c Var 'aux234' order represents '0' with '-8294'
c Encoding variable: aux235 with domain: bool (representing constraint (((field_00003_00001=2) + (field_00003_00002=2) + (field_00003_00003=2) + (field_00003_00004=2) + (field_00003_00005=2) + (field_00003_00006=2) + (field_00003_00007=2) + (field_00003_00008=2) + (field_00003_00009=2))=tv=1))
c Var 'aux235' direct represents '0' with '-8295'
c Var 'aux235' direct represents '1' with '8295'
c Var 'aux235' order represents '1' with '1'
c Var 'aux235' order represents '0' with '-8295'
c Encoding variable: aux236 with domain: bool (representing constraint (((field_00003_00001=3) + (field_00003_00002=3) + (field_00003_00003=3) + (field_00003_00004=3) + (field_00003_00005=3) + (field_00003_00006=3) + (field_00003_00007=3) + (field_00003_00008=3) + (field_00003_00009=3))=tv=1))
c Var 'aux236' direct represents '0' with '-8296'
c Var 'aux236' direct represents '1' with '8296'
c Var 'aux236' order represents '1' with '1'
c Var 'aux236' order represents '0' with '-8296'
c Encoding variable: aux237 with domain: bool (representing constraint (((field_00003_00001=4) + (field_00003_00002=4) + (field_00003_00003=4) + (field_00003_00004=4) + (field_00003_00005=4) + (field_00003_00006=4) + (field_00003_00007=4) + (field_00003_00008=4) + (field_00003_00009=4))=tv=1))
c Var 'aux237' direct represents '0' with '-8297'
c Var 'aux237' direct represents '1' with '8297'
c Var 'aux237' order represents '1' with '1'
c Var 'aux237' order represents '0' with '-8297'
c Encoding variable: aux238 with domain: bool (representing constraint (((field_00003_00001=5) + (field_00003_00002=5) + (field_00003_00003=5) + (field_00003_00004=5) + (field_00003_00005=5) + (field_00003_00006=5) + (field_00003_00007=5) + (field_00003_00008=5) + (field_00003_00009=5))=tv=1))
c Var 'aux238' direct represents '0' with '-8298'
c Var 'aux238' direct represents '1' with '8298'
c Var 'aux238' order represents '1' with '1'
c Var 'aux238' order represents '0' with '-8298'
c Encoding variable: aux239 with domain: bool (representing constraint (((field_00003_00001=6) + (field_00003_00002=6) + (field_00003_00003=6) + (field_00003_00004=6) + (field_00003_00005=6) + (field_00003_00006=6) + (field_00003_00007=6) + (field_00003_00008=6) + (field_00003_00009=6))=tv=1))
c Var 'aux239' direct represents '0' with '-8299'
c Var 'aux239' direct represents '1' with '8299'
c Var 'aux239' order represents '1' with '1'
c Var 'aux239' order represents '0' with '-8299'
c Encoding variable: aux240 with domain: bool (representing constraint (((field_00003_00001=7) + (field_00003_00002=7) + (field_00003_00003=7) + (field_00003_00004=7) + (field_00003_00005=7) + (field_00003_00006=7) + (field_00003_00007=7) + (field_00003_00008=7) + (field_00003_00009=7))=tv=1))
c Var 'aux240' direct represents '0' with '-8300'
c Var 'aux240' direct represents '1' with '8300'
c Var 'aux240' order represents '1' with '1'
c Var 'aux240' order represents '0' with '-8300'
c Encoding variable: aux241 with domain: bool (representing constraint (((field_00003_00001=8) + (field_00003_00002=8) + (field_00003_00003=8) + (field_00003_00004=8) + (field_00003_00005=8) + (field_00003_00006=8) + (field_00003_00007=8) + (field_00003_00008=8) + (field_00003_00009=8))=tv=1))
c Var 'aux241' direct represents '0' with '-8301'
c Var 'aux241' direct represents '1' with '8301'
c Var 'aux241' order represents '1' with '1'
c Var 'aux241' order represents '0' with '-8301'
c Encoding variable: aux242 with domain: bool (representing constraint (((field_00003_00001=9) + (field_00003_00002=9) + (field_00003_00003=9) + (field_00003_00004=9) + (field_00003_00005=9) + (field_00003_00006=9) + (field_00003_00007=9) + (field_00003_00008=9) + (field_00003_00009=9))=tv=1))
c Var 'aux242' direct represents '0' with '-8302'
c Var 'aux242' direct represents '1' with '8302'
c Var 'aux242' order represents '1' with '1'
c Var 'aux242' order represents '0' with '-8302'
c Encoding variable: aux243 with domain: bool (representing constraint (((field_00004_00001=1) + (field_00004_00002=1) + (field_00004_00003=1) + (field_00004_00004=1) + (field_00004_00005=1) + (field_00004_00006=1) + (field_00004_00007=1) + (field_00004_00008=1) + (field_00004_00009=1))=tv=1))
c Var 'aux243' direct represents '0' with '-8303'
c Var 'aux243' direct represents '1' with '8303'
c Var 'aux243' order represents '1' with '1'
c Var 'aux243' order represents '0' with '-8303'
c Encoding variable: aux244 with domain: bool (representing constraint (((field_00004_00001=2) + (field_00004_00002=2) + (field_00004_00003=2) + (field_00004_00004=2) + (field_00004_00005=2) + (field_00004_00006=2) + (field_00004_00007=2) + (field_00004_00008=2) + (field_00004_00009=2))=tv=1))
c Var 'aux244' direct represents '0' with '-8304'
c Var 'aux244' direct represents '1' with '8304'
c Var 'aux244' order represents '1' with '1'
c Var 'aux244' order represents '0' with '-8304'
c Encoding variable: aux245 with domain: bool (representing constraint (((field_00004_00001=3) + (field_00004_00002=3) + (field_00004_00003=3) + (field_00004_00004=3) + (field_00004_00005=3) + (field_00004_00006=3) + (field_00004_00007=3) + (field_00004_00008=3) + (field_00004_00009=3))=tv=1))
c Var 'aux245' direct represents '0' with '-8305'
c Var 'aux245' direct represents '1' with '8305'
c Var 'aux245' order represents '1' with '1'
c Var 'aux245' order represents '0' with '-8305'
c Encoding variable: aux246 with domain: bool (representing constraint (((field_00004_00001=4) + (field_00004_00002=4) + (field_00004_00003=4) + (field_00004_00004=4) + (field_00004_00005=4) + (field_00004_00006=4) + (field_00004_00007=4) + (field_00004_00008=4) + (field_00004_00009=4))=tv=1))
c Var 'aux246' direct represents '0' with '-8306'
c Var 'aux246' direct represents '1' with '8306'
c Var 'aux246' order represents '1' with '1'
c Var 'aux246' order represents '0' with '-8306'
c Encoding variable: aux247 with domain: bool (representing constraint (((field_00004_00001=5) + (field_00004_00002=5) + (field_00004_00003=5) + (field_00004_00004=5) + (field_00004_00005=5) + (field_00004_00006=5) + (field_00004_00007=5) + (field_00004_00008=5) + (field_00004_00009=5))=tv=1))
c Var 'aux247' direct represents '0' with '-8307'
c Var 'aux247' direct represents '1' with '8307'
c Var 'aux247' order represents '1' with '1'
c Var 'aux247' order represents '0' with '-8307'
c Encoding variable: aux248 with domain: bool (representing constraint (((field_00004_00001=6) + (field_00004_00002=6) + (field_00004_00003=6) + (field_00004_00004=6) + (field_00004_00005=6) + (field_00004_00006=6) + (field_00004_00007=6) + (field_00004_00008=6) + (field_00004_00009=6))=tv=1))
c Var 'aux248' direct represents '0' with '-8308'
c Var 'aux248' direct represents '1' with '8308'
c Var 'aux248' order represents '1' with '1'
c Var 'aux248' order represents '0' with '-8308'
c Encoding variable: aux249 with domain: bool (representing constraint (((field_00004_00001=7) + (field_00004_00002=7) + (field_00004_00003=7) + (field_00004_00004=7) + (field_00004_00005=7) + (field_00004_00006=7) + (field_00004_00007=7) + (field_00004_00008=7) + (field_00004_00009=7))=tv=1))
c Var 'aux249' direct represents '0' with '-8309'
c Var 'aux249' direct represents '1' with '8309'
c Var 'aux249' order represents '1' with '1'
c Var 'aux249' order represents '0' with '-8309'
c Encoding variable: aux250 with domain: bool (representing constraint (((field_00004_00001=8) + (field_00004_00002=8) + (field_00004_00003=8) + (field_00004_00004=8) + (field_00004_00005=8) + (field_00004_00006=8) + (field_00004_00007=8) + (field_00004_00008=8) + (field_00004_00009=8))=tv=1))
c Var 'aux250' direct represents '0' with '-8310'
c Var 'aux250' direct represents '1' with '8310'
c Var 'aux250' order represents '1' with '1'
c Var 'aux250' order represents '0' with '-8310'
c Encoding variable: aux251 with domain: bool (representing constraint (((field_00004_00001=9) + (field_00004_00002=9) + (field_00004_00003=9) + (field_00004_00004=9) + (field_00004_00005=9) + (field_00004_00006=9) + (field_00004_00007=9) + (field_00004_00008=9) + (field_00004_00009=9))=tv=1))
c Var 'aux251' direct represents '0' with '-8311'
c Var 'aux251' direct represents '1' with '8311'
c Var 'aux251' order represents '1' with '1'
c Var 'aux251' order represents '0' with '-8311'
c Encoding variable: aux252 with domain: bool (representing constraint (((field_00005_00001=1) + (field_00005_00002=1) + (field_00005_00003=1) + (field_00005_00004=1) + (field_00005_00005=1) + (field_00005_00006=1) + (field_00005_00007=1) + (field_00005_00008=1) + (field_00005_00009=1))=tv=1))
c Var 'aux252' direct represents '0' with '-8312'
c Var 'aux252' direct represents '1' with '8312'
c Var 'aux252' order represents '1' with '1'
c Var 'aux252' order represents '0' with '-8312'
c Encoding variable: aux253 with domain: bool (representing constraint (((field_00005_00001=2) + (field_00005_00002=2) + (field_00005_00003=2) + (field_00005_00004=2) + (field_00005_00005=2) + (field_00005_00006=2) + (field_00005_00007=2) + (field_00005_00008=2) + (field_00005_00009=2))=tv=1))
c Var 'aux253' direct represents '0' with '-8313'
c Var 'aux253' direct represents '1' with '8313'
c Var 'aux253' order represents '1' with '1'
c Var 'aux253' order represents '0' with '-8313'
c Encoding variable: aux254 with domain: bool (representing constraint (((field_00005_00001=3) + (field_00005_00002=3) + (field_00005_00003=3) + (field_00005_00004=3) + (field_00005_00005=3) + (field_00005_00006=3) + (field_00005_00007=3) + (field_00005_00008=3) + (field_00005_00009=3))=tv=1))
c Var 'aux254' direct represents '0' with '-8314'
c Var 'aux254' direct represents '1' with '8314'
c Var 'aux254' order represents '1' with '1'
c Var 'aux254' order represents '0' with '-8314'
c Encoding variable: aux255 with domain: bool (representing constraint (((field_00005_00001=4) + (field_00005_00002=4) + (field_00005_00003=4) + (field_00005_00004=4) + (field_00005_00005=4) + (field_00005_00006=4) + (field_00005_00007=4) + (field_00005_00008=4) + (field_00005_00009=4))=tv=1))
c Var 'aux255' direct represents '0' with '-8315'
c Var 'aux255' direct represents '1' with '8315'
c Var 'aux255' order represents '1' with '1'
c Var 'aux255' order represents '0' with '-8315'
c Encoding variable: aux256 with domain: bool (representing constraint (((field_00005_00001=5) + (field_00005_00002=5) + (field_00005_00003=5) + (field_00005_00004=5) + (field_00005_00005=5) + (field_00005_00006=5) + (field_00005_00007=5) + (field_00005_00008=5) + (field_00005_00009=5))=tv=1))
c Var 'aux256' direct represents '0' with '-8316'
c Var 'aux256' direct represents '1' with '8316'
c Var 'aux256' order represents '1' with '1'
c Var 'aux256' order represents '0' with '-8316'
c Encoding variable: aux257 with domain: bool (representing constraint (((field_00005_00001=6) + (field_00005_00002=6) + (field_00005_00003=6) + (field_00005_00004=6) + (field_00005_00005=6) + (field_00005_00006=6) + (field_00005_00007=6) + (field_00005_00008=6) + (field_00005_00009=6))=tv=1))
c Var 'aux257' direct represents '0' with '-8317'
c Var 'aux257' direct represents '1' with '8317'
c Var 'aux257' order represents '1' with '1'
c Var 'aux257' order represents '0' with '-8317'
c Encoding variable: aux258 with domain: bool (representing constraint (((field_00005_00001=7) + (field_00005_00002=7) + (field_00005_00003=7) + (field_00005_00004=7) + (field_00005_00005=7) + (field_00005_00006=7) + (field_00005_00007=7) + (field_00005_00008=7) + (field_00005_00009=7))=tv=1))
c Var 'aux258' direct represents '0' with '-8318'
c Var 'aux258' direct represents '1' with '8318'
c Var 'aux258' order represents '1' with '1'
c Var 'aux258' order represents '0' with '-8318'
c Encoding variable: aux259 with domain: bool (representing constraint (((field_00005_00001=8) + (field_00005_00002=8) + (field_00005_00003=8) + (field_00005_00004=8) + (field_00005_00005=8) + (field_00005_00006=8) + (field_00005_00007=8) + (field_00005_00008=8) + (field_00005_00009=8))=tv=1))
c Var 'aux259' direct represents '0' with '-8319'
c Var 'aux259' direct represents '1' with '8319'
c Var 'aux259' order represents '1' with '1'
c Var 'aux259' order represents '0' with '-8319'
c Encoding variable: aux260 with domain: bool (representing constraint (((field_00005_00001=9) + (field_00005_00002=9) + (field_00005_00003=9) + (field_00005_00004=9) + (field_00005_00005=9) + (field_00005_00006=9) + (field_00005_00007=9) + (field_00005_00008=9) + (field_00005_00009=9))=tv=1))
c Var 'aux260' direct represents '0' with '-8320'
c Var 'aux260' direct represents '1' with '8320'
c Var 'aux260' order represents '1' with '1'
c Var 'aux260' order represents '0' with '-8320'
c Encoding variable: aux261 with domain: bool (representing constraint (((field_00006_00001=1) + (field_00006_00002=1) + (field_00006_00003=1) + (field_00006_00004=1) + (field_00006_00005=1) + (field_00006_00006=1) + (field_00006_00007=1) + (field_00006_00008=1) + (field_00006_00009=1))=tv=1))
c Var 'aux261' direct represents '0' with '-8321'
c Var 'aux261' direct represents '1' with '8321'
c Var 'aux261' order represents '1' with '1'
c Var 'aux261' order represents '0' with '-8321'
c Encoding variable: aux262 with domain: bool (representing constraint (((field_00006_00001=2) + (field_00006_00002=2) + (field_00006_00003=2) + (field_00006_00004=2) + (field_00006_00005=2) + (field_00006_00006=2) + (field_00006_00007=2) + (field_00006_00008=2) + (field_00006_00009=2))=tv=1))
c Var 'aux262' direct represents '0' with '-8322'
c Var 'aux262' direct represents '1' with '8322'
c Var 'aux262' order represents '1' with '1'
c Var 'aux262' order represents '0' with '-8322'
c Encoding variable: aux263 with domain: bool (representing constraint (((field_00006_00001=3) + (field_00006_00002=3) + (field_00006_00003=3) + (field_00006_00004=3) + (field_00006_00005=3) + (field_00006_00006=3) + (field_00006_00007=3) + (field_00006_00008=3) + (field_00006_00009=3))=tv=1))
c Var 'aux263' direct represents '0' with '-8323'
c Var 'aux263' direct represents '1' with '8323'
c Var 'aux263' order represents '1' with '1'
c Var 'aux263' order represents '0' with '-8323'
c Encoding variable: aux264 with domain: bool (representing constraint (((field_00006_00001=4) + (field_00006_00002=4) + (field_00006_00003=4) + (field_00006_00004=4) + (field_00006_00005=4) + (field_00006_00006=4) + (field_00006_00007=4) + (field_00006_00008=4) + (field_00006_00009=4))=tv=1))
c Var 'aux264' direct represents '0' with '-8324'
c Var 'aux264' direct represents '1' with '8324'
c Var 'aux264' order represents '1' with '1'
c Var 'aux264' order represents '0' with '-8324'
c Encoding variable: aux265 with domain: bool (representing constraint (((field_00006_00001=5) + (field_00006_00002=5) + (field_00006_00003=5) + (field_00006_00004=5) + (field_00006_00005=5) + (field_00006_00006=5) + (field_00006_00007=5) + (field_00006_00008=5) + (field_00006_00009=5))=tv=1))
c Var 'aux265' direct represents '0' with '-8325'
c Var 'aux265' direct represents '1' with '8325'
c Var 'aux265' order represents '1' with '1'
c Var 'aux265' order represents '0' with '-8325'
c Encoding variable: aux266 with domain: bool (representing constraint (((field_00006_00001=6) + (field_00006_00002=6) + (field_00006_00003=6) + (field_00006_00004=6) + (field_00006_00005=6) + (field_00006_00006=6) + (field_00006_00007=6) + (field_00006_00008=6) + (field_00006_00009=6))=tv=1))
c Var 'aux266' direct represents '0' with '-8326'
c Var 'aux266' direct represents '1' with '8326'
c Var 'aux266' order represents '1' with '1'
c Var 'aux266' order represents '0' with '-8326'
c Encoding variable: aux267 with domain: bool (representing constraint (((field_00006_00001=7) + (field_00006_00002=7) + (field_00006_00003=7) + (field_00006_00004=7) + (field_00006_00005=7) + (field_00006_00006=7) + (field_00006_00007=7) + (field_00006_00008=7) + (field_00006_00009=7))=tv=1))
c Var 'aux267' direct represents '0' with '-8327'
c Var 'aux267' direct represents '1' with '8327'
c Var 'aux267' order represents '1' with '1'
c Var 'aux267' order represents '0' with '-8327'
c Encoding variable: aux268 with domain: bool (representing constraint (((field_00006_00001=8) + (field_00006_00002=8) + (field_00006_00003=8) + (field_00006_00004=8) + (field_00006_00005=8) + (field_00006_00006=8) + (field_00006_00007=8) + (field_00006_00008=8) + (field_00006_00009=8))=tv=1))
c Var 'aux268' direct represents '0' with '-8328'
c Var 'aux268' direct represents '1' with '8328'
c Var 'aux268' order represents '1' with '1'
c Var 'aux268' order represents '0' with '-8328'
c Encoding variable: aux269 with domain: bool (representing constraint (((field_00006_00001=9) + (field_00006_00002=9) + (field_00006_00003=9) + (field_00006_00004=9) + (field_00006_00005=9) + (field_00006_00006=9) + (field_00006_00007=9) + (field_00006_00008=9) + (field_00006_00009=9))=tv=1))
c Var 'aux269' direct represents '0' with '-8329'
c Var 'aux269' direct represents '1' with '8329'
c Var 'aux269' order represents '1' with '1'
c Var 'aux269' order represents '0' with '-8329'
c Encoding variable: aux270 with domain: bool (representing constraint (((field_00007_00001=1) + (field_00007_00002=1) + (field_00007_00003=1) + (field_00007_00004=1) + (field_00007_00005=1) + (field_00007_00006=1) + (field_00007_00007=1) + (field_00007_00008=1) + (field_00007_00009=1))=tv=1))
c Var 'aux270' direct represents '0' with '-8330'
c Var 'aux270' direct represents '1' with '8330'
c Var 'aux270' order represents '1' with '1'
c Var 'aux270' order represents '0' with '-8330'
c Encoding variable: aux271 with domain: bool (representing constraint (((field_00007_00001=2) + (field_00007_00002=2) + (field_00007_00003=2) + (field_00007_00004=2) + (field_00007_00005=2) + (field_00007_00006=2) + (field_00007_00007=2) + (field_00007_00008=2) + (field_00007_00009=2))=tv=1))
c Var 'aux271' direct represents '0' with '-8331'
c Var 'aux271' direct represents '1' with '8331'
c Var 'aux271' order represents '1' with '1'
c Var 'aux271' order represents '0' with '-8331'
c Encoding variable: aux272 with domain: bool (representing constraint (((field_00007_00001=3) + (field_00007_00002=3) + (field_00007_00003=3) + (field_00007_00004=3) + (field_00007_00005=3) + (field_00007_00006=3) + (field_00007_00007=3) + (field_00007_00008=3) + (field_00007_00009=3))=tv=1))
c Var 'aux272' direct represents '0' with '-8332'
c Var 'aux272' direct represents '1' with '8332'
c Var 'aux272' order represents '1' with '1'
c Var 'aux272' order represents '0' with '-8332'
c Encoding variable: aux273 with domain: bool (representing constraint (((field_00007_00001=4) + (field_00007_00002=4) + (field_00007_00003=4) + (field_00007_00004=4) + (field_00007_00005=4) + (field_00007_00006=4) + (field_00007_00007=4) + (field_00007_00008=4) + (field_00007_00009=4))=tv=1))
c Var 'aux273' direct represents '0' with '-8333'
c Var 'aux273' direct represents '1' with '8333'
c Var 'aux273' order represents '1' with '1'
c Var 'aux273' order represents '0' with '-8333'
c Encoding variable: aux274 with domain: bool (representing constraint (((field_00007_00001=5) + (field_00007_00002=5) + (field_00007_00003=5) + (field_00007_00004=5) + (field_00007_00005=5) + (field_00007_00006=5) + (field_00007_00007=5) + (field_00007_00008=5) + (field_00007_00009=5))=tv=1))
c Var 'aux274' direct represents '0' with '-8334'
c Var 'aux274' direct represents '1' with '8334'
c Var 'aux274' order represents '1' with '1'
c Var 'aux274' order represents '0' with '-8334'
c Encoding variable: aux275 with domain: bool (representing constraint (((field_00007_00001=6) + (field_00007_00002=6) + (field_00007_00003=6) + (field_00007_00004=6) + (field_00007_00005=6) + (field_00007_00006=6) + (field_00007_00007=6) + (field_00007_00008=6) + (field_00007_00009=6))=tv=1))
c Var 'aux275' direct represents '0' with '-8335'
c Var 'aux275' direct represents '1' with '8335'
c Var 'aux275' order represents '1' with '1'
c Var 'aux275' order represents '0' with '-8335'
c Encoding variable: aux276 with domain: bool (representing constraint (((field_00007_00001=7) + (field_00007_00002=7) + (field_00007_00003=7) + (field_00007_00004=7) + (field_00007_00005=7) + (field_00007_00006=7) + (field_00007_00007=7) + (field_00007_00008=7) + (field_00007_00009=7))=tv=1))
c Var 'aux276' direct represents '0' with '-8336'
c Var 'aux276' direct represents '1' with '8336'
c Var 'aux276' order represents '1' with '1'
c Var 'aux276' order represents '0' with '-8336'
c Encoding variable: aux277 with domain: bool (representing constraint (((field_00007_00001=8) + (field_00007_00002=8) + (field_00007_00003=8) + (field_00007_00004=8) + (field_00007_00005=8) + (field_00007_00006=8) + (field_00007_00007=8) + (field_00007_00008=8) + (field_00007_00009=8))=tv=1))
c Var 'aux277' direct represents '0' with '-8337'
c Var 'aux277' direct represents '1' with '8337'
c Var 'aux277' order represents '1' with '1'
c Var 'aux277' order represents '0' with '-8337'
c Encoding variable: aux278 with domain: bool (representing constraint (((field_00007_00001=9) + (field_00007_00002=9) + (field_00007_00003=9) + (field_00007_00004=9) + (field_00007_00005=9) + (field_00007_00006=9) + (field_00007_00007=9) + (field_00007_00008=9) + (field_00007_00009=9))=tv=1))
c Var 'aux278' direct represents '0' with '-8338'
c Var 'aux278' direct represents '1' with '8338'
c Var 'aux278' order represents '1' with '1'
c Var 'aux278' order represents '0' with '-8338'
c Encoding variable: aux279 with domain: bool (representing constraint (((field_00008_00001=1) + (field_00008_00002=1) + (field_00008_00003=1) + (field_00008_00004=1) + (field_00008_00005=1) + (field_00008_00006=1) + (field_00008_00007=1) + (field_00008_00008=1) + (field_00008_00009=1))=tv=1))
c Var 'aux279' direct represents '0' with '-8339'
c Var 'aux279' direct represents '1' with '8339'
c Var 'aux279' order represents '1' with '1'
c Var 'aux279' order represents '0' with '-8339'
c Encoding variable: aux280 with domain: bool (representing constraint (((field_00008_00001=2) + (field_00008_00002=2) + (field_00008_00003=2) + (field_00008_00004=2) + (field_00008_00005=2) + (field_00008_00006=2) + (field_00008_00007=2) + (field_00008_00008=2) + (field_00008_00009=2))=tv=1))
c Var 'aux280' direct represents '0' with '-8340'
c Var 'aux280' direct represents '1' with '8340'
c Var 'aux280' order represents '1' with '1'
c Var 'aux280' order represents '0' with '-8340'
c Encoding variable: aux281 with domain: bool (representing constraint (((field_00008_00001=3) + (field_00008_00002=3) + (field_00008_00003=3) + (field_00008_00004=3) + (field_00008_00005=3) + (field_00008_00006=3) + (field_00008_00007=3) + (field_00008_00008=3) + (field_00008_00009=3))=tv=1))
c Var 'aux281' direct represents '0' with '-8341'
c Var 'aux281' direct represents '1' with '8341'
c Var 'aux281' order represents '1' with '1'
c Var 'aux281' order represents '0' with '-8341'
c Encoding variable: aux282 with domain: bool (representing constraint (((field_00008_00001=4) + (field_00008_00002=4) + (field_00008_00003=4) + (field_00008_00004=4) + (field_00008_00005=4) + (field_00008_00006=4) + (field_00008_00007=4) + (field_00008_00008=4) + (field_00008_00009=4))=tv=1))
c Var 'aux282' direct represents '0' with '-8342'
c Var 'aux282' direct represents '1' with '8342'
c Var 'aux282' order represents '1' with '1'
c Var 'aux282' order represents '0' with '-8342'
c Encoding variable: aux283 with domain: bool (representing constraint (((field_00008_00001=5) + (field_00008_00002=5) + (field_00008_00003=5) + (field_00008_00004=5) + (field_00008_00005=5) + (field_00008_00006=5) + (field_00008_00007=5) + (field_00008_00008=5) + (field_00008_00009=5))=tv=1))
c Var 'aux283' direct represents '0' with '-8343'
c Var 'aux283' direct represents '1' with '8343'
c Var 'aux283' order represents '1' with '1'
c Var 'aux283' order represents '0' with '-8343'
c Encoding variable: aux284 with domain: bool (representing constraint (((field_00008_00001=6) + (field_00008_00002=6) + (field_00008_00003=6) + (field_00008_00004=6) + (field_00008_00005=6) + (field_00008_00006=6) + (field_00008_00007=6) + (field_00008_00008=6) + (field_00008_00009=6))=tv=1))
c Var 'aux284' direct represents '0' with '-8344'
c Var 'aux284' direct represents '1' with '8344'
c Var 'aux284' order represents '1' with '1'
c Var 'aux284' order represents '0' with '-8344'
c Encoding variable: aux285 with domain: bool (representing constraint (((field_00008_00001=7) + (field_00008_00002=7) + (field_00008_00003=7) + (field_00008_00004=7) + (field_00008_00005=7) + (field_00008_00006=7) + (field_00008_00007=7) + (field_00008_00008=7) + (field_00008_00009=7))=tv=1))
c Var 'aux285' direct represents '0' with '-8345'
c Var 'aux285' direct represents '1' with '8345'
c Var 'aux285' order represents '1' with '1'
c Var 'aux285' order represents '0' with '-8345'
c Encoding variable: aux286 with domain: bool (representing constraint (((field_00008_00001=8) + (field_00008_00002=8) + (field_00008_00003=8) + (field_00008_00004=8) + (field_00008_00005=8) + (field_00008_00006=8) + (field_00008_00007=8) + (field_00008_00008=8) + (field_00008_00009=8))=tv=1))
c Var 'aux286' direct represents '0' with '-8346'
c Var 'aux286' direct represents '1' with '8346'
c Var 'aux286' order represents '1' with '1'
c Var 'aux286' order represents '0' with '-8346'
c Encoding variable: aux287 with domain: bool (representing constraint (((field_00008_00001=9) + (field_00008_00002=9) + (field_00008_00003=9) + (field_00008_00004=9) + (field_00008_00005=9) + (field_00008_00006=9) + (field_00008_00007=9) + (field_00008_00008=9) + (field_00008_00009=9))=tv=1))
c Var 'aux287' direct represents '0' with '-8347'
c Var 'aux287' direct represents '1' with '8347'
c Var 'aux287' order represents '1' with '1'
c Var 'aux287' order represents '0' with '-8347'
c Encoding variable: aux288 with domain: bool (representing constraint (((field_00009_00001=1) + (field_00009_00002=1) + (field_00009_00003=1) + (field_00009_00004=1) + (field_00009_00005=1) + (field_00009_00006=1) + (field_00009_00007=1) + (field_00009_00008=1) + (field_00009_00009=1))=tv=1))
c Var 'aux288' direct represents '0' with '-8348'
c Var 'aux288' direct represents '1' with '8348'
c Var 'aux288' order represents '1' with '1'
c Var 'aux288' order represents '0' with '-8348'
c Encoding variable: aux289 with domain: bool (representing constraint (((field_00009_00001=2) + (field_00009_00002=2) + (field_00009_00003=2) + (field_00009_00004=2) + (field_00009_00005=2) + (field_00009_00006=2) + (field_00009_00007=2) + (field_00009_00008=2) + (field_00009_00009=2))=tv=1))
c Var 'aux289' direct represents '0' with '-8349'
c Var 'aux289' direct represents '1' with '8349'
c Var 'aux289' order represents '1' with '1'
c Var 'aux289' order represents '0' with '-8349'
c Encoding variable: aux290 with domain: bool (representing constraint (((field_00009_00001=3) + (field_00009_00002=3) + (field_00009_00003=3) + (field_00009_00004=3) + (field_00009_00005=3) + (field_00009_00006=3) + (field_00009_00007=3) + (field_00009_00008=3) + (field_00009_00009=3))=tv=1))
c Var 'aux290' direct represents '0' with '-8350'
c Var 'aux290' direct represents '1' with '8350'
c Var 'aux290' order represents '1' with '1'
c Var 'aux290' order represents '0' with '-8350'
c Encoding variable: aux291 with domain: bool (representing constraint (((field_00009_00001=4) + (field_00009_00002=4) + (field_00009_00003=4) + (field_00009_00004=4) + (field_00009_00005=4) + (field_00009_00006=4) + (field_00009_00007=4) + (field_00009_00008=4) + (field_00009_00009=4))=tv=1))
c Var 'aux291' direct represents '0' with '-8351'
c Var 'aux291' direct represents '1' with '8351'
c Var 'aux291' order represents '1' with '1'
c Var 'aux291' order represents '0' with '-8351'
c Encoding variable: aux292 with domain: bool (representing constraint (((field_00009_00001=5) + (field_00009_00002=5) + (field_00009_00003=5) + (field_00009_00004=5) + (field_00009_00005=5) + (field_00009_00006=5) + (field_00009_00007=5) + (field_00009_00008=5) + (field_00009_00009=5))=tv=1))
c Var 'aux292' direct represents '0' with '-8352'
c Var 'aux292' direct represents '1' with '8352'
c Var 'aux292' order represents '1' with '1'
c Var 'aux292' order represents '0' with '-8352'
c Encoding variable: aux293 with domain: bool (representing constraint (((field_00009_00001=6) + (field_00009_00002=6) + (field_00009_00003=6) + (field_00009_00004=6) + (field_00009_00005=6) + (field_00009_00006=6) + (field_00009_00007=6) + (field_00009_00008=6) + (field_00009_00009=6))=tv=1))
c Var 'aux293' direct represents '0' with '-8353'
c Var 'aux293' direct represents '1' with '8353'
c Var 'aux293' order represents '1' with '1'
c Var 'aux293' order represents '0' with '-8353'
c Encoding variable: aux294 with domain: bool (representing constraint (((field_00009_00001=7) + (field_00009_00002=7) + (field_00009_00003=7) + (field_00009_00004=7) + (field_00009_00005=7) + (field_00009_00006=7) + (field_00009_00007=7) + (field_00009_00008=7) + (field_00009_00009=7))=tv=1))
c Var 'aux294' direct represents '0' with '-8354'
c Var 'aux294' direct represents '1' with '8354'
c Var 'aux294' order represents '1' with '1'
c Var 'aux294' order represents '0' with '-8354'
c Encoding variable: aux295 with domain: bool (representing constraint (((field_00009_00001=8) + (field_00009_00002=8) + (field_00009_00003=8) + (field_00009_00004=8) + (field_00009_00005=8) + (field_00009_00006=8) + (field_00009_00007=8) + (field_00009_00008=8) + (field_00009_00009=8))=tv=1))
c Var 'aux295' direct represents '0' with '-8355'
c Var 'aux295' direct represents '1' with '8355'
c Var 'aux295' order represents '1' with '1'
c Var 'aux295' order represents '0' with '-8355'
c Encoding variable: aux296 with domain: bool (representing constraint (((field_00009_00001=9) + (field_00009_00002=9) + (field_00009_00003=9) + (field_00009_00004=9) + (field_00009_00005=9) + (field_00009_00006=9) + (field_00009_00007=9) + (field_00009_00008=9) + (field_00009_00009=9))=tv=1))
c Var 'aux296' direct represents '0' with '-8356'
c Var 'aux296' direct represents '1' with '8356'
c Var 'aux296' order represents '1' with '1'
c Var 'aux296' order represents '0' with '-8356'
c Encoding variable: aux297 with domain: bool (representing constraint (((field_00002_00001=1) + (field_00002_00002=1) + (field_00002_00003=1) + (field_00003_00001=1) + (field_00003_00002=1) + (field_00003_00003=1) + (field_00001_00001=1) + (field_00001_00002=1) + (field_00001_00003=1))=tv=1))
c Var 'aux297' direct represents '0' with '-8357'
c Var 'aux297' direct represents '1' with '8357'
c Var 'aux297' order represents '1' with '1'
c Var 'aux297' order represents '0' with '-8357'
c Encoding variable: aux298 with domain: bool (representing constraint (((field_00002_00001=2) + (field_00002_00002=2) + (field_00002_00003=2) + (field_00003_00001=2) + (field_00003_00002=2) + (field_00003_00003=2) + (field_00001_00001=2) + (field_00001_00002=2) + (field_00001_00003=2))=tv=1))
c Var 'aux298' direct represents '0' with '-8358'
c Var 'aux298' direct represents '1' with '8358'
c Var 'aux298' order represents '1' with '1'
c Var 'aux298' order represents '0' with '-8358'
c Encoding variable: aux299 with domain: bool (representing constraint (((field_00002_00001=3) + (field_00002_00002=3) + (field_00002_00003=3) + (field_00003_00001=3) + (field_00003_00002=3) + (field_00003_00003=3) + (field_00001_00001=3) + (field_00001_00002=3) + (field_00001_00003=3))=tv=1))
c Var 'aux299' direct represents '0' with '-8359'
c Var 'aux299' direct represents '1' with '8359'
c Var 'aux299' order represents '1' with '1'
c Var 'aux299' order represents '0' with '-8359'
c Encoding variable: aux300 with domain: bool (representing constraint (((field_00002_00001=4) + (field_00002_00002=4) + (field_00002_00003=4) + (field_00003_00001=4) + (field_00003_00002=4) + (field_00003_00003=4) + (field_00001_00001=4) + (field_00001_00002=4) + (field_00001_00003=4))=tv=1))
c Var 'aux300' direct represents '0' with '-8360'
c Var 'aux300' direct represents '1' with '8360'
c Var 'aux300' order represents '1' with '1'
c Var 'aux300' order represents '0' with '-8360'
c Encoding variable: aux301 with domain: bool (representing constraint (((field_00002_00001=5) + (field_00002_00002=5) + (field_00002_00003=5) + (field_00003_00001=5) + (field_00003_00002=5) + (field_00003_00003=5) + (field_00001_00001=5) + (field_00001_00002=5) + (field_00001_00003=5))=tv=1))
c Var 'aux301' direct represents '0' with '-8361'
c Var 'aux301' direct represents '1' with '8361'
c Var 'aux301' order represents '1' with '1'
c Var 'aux301' order represents '0' with '-8361'
c Encoding variable: aux302 with domain: bool (representing constraint (((field_00002_00001=6) + (field_00002_00002=6) + (field_00002_00003=6) + (field_00003_00001=6) + (field_00003_00002=6) + (field_00003_00003=6) + (field_00001_00001=6) + (field_00001_00002=6) + (field_00001_00003=6))=tv=1))
c Var 'aux302' direct represents '0' with '-8362'
c Var 'aux302' direct represents '1' with '8362'
c Var 'aux302' order represents '1' with '1'
c Var 'aux302' order represents '0' with '-8362'
c Encoding variable: aux303 with domain: bool (representing constraint (((field_00002_00001=7) + (field_00002_00002=7) + (field_00002_00003=7) + (field_00003_00001=7) + (field_00003_00002=7) + (field_00003_00003=7) + (field_00001_00001=7) + (field_00001_00002=7) + (field_00001_00003=7))=tv=1))
c Var 'aux303' direct represents '0' with '-8363'
c Var 'aux303' direct represents '1' with '8363'
c Var 'aux303' order represents '1' with '1'
c Var 'aux303' order represents '0' with '-8363'
c Encoding variable: aux304 with domain: bool (representing constraint (((field_00002_00001=8) + (field_00002_00002=8) + (field_00002_00003=8) + (field_00003_00001=8) + (field_00003_00002=8) + (field_00003_00003=8) + (field_00001_00001=8) + (field_00001_00002=8) + (field_00001_00003=8))=tv=1))
c Var 'aux304' direct represents '0' with '-8364'
c Var 'aux304' direct represents '1' with '8364'
c Var 'aux304' order represents '1' with '1'
c Var 'aux304' order represents '0' with '-8364'
c Encoding variable: aux305 with domain: bool (representing constraint (((field_00002_00001=9) + (field_00002_00002=9) + (field_00002_00003=9) + (field_00003_00001=9) + (field_00003_00002=9) + (field_00003_00003=9) + (field_00001_00001=9) + (field_00001_00002=9) + (field_00001_00003=9))=tv=1))
c Var 'aux305' direct represents '0' with '-8365'
c Var 'aux305' direct represents '1' with '8365'
c Var 'aux305' order represents '1' with '1'
c Var 'aux305' order represents '0' with '-8365'
c Encoding variable: aux306 with domain: bool (representing constraint (((field_00002_00004=1) + (field_00002_00005=1) + (field_00002_00006=1) + (field_00003_00004=1) + (field_00003_00005=1) + (field_00003_00006=1) + (field_00001_00004=1) + (field_00001_00005=1) + (field_00001_00006=1))=tv=1))
c Var 'aux306' direct represents '0' with '-8366'
c Var 'aux306' direct represents '1' with '8366'
c Var 'aux306' order represents '1' with '1'
c Var 'aux306' order represents '0' with '-8366'
c Encoding variable: aux307 with domain: bool (representing constraint (((field_00002_00004=2) + (field_00002_00005=2) + (field_00002_00006=2) + (field_00003_00004=2) + (field_00003_00005=2) + (field_00003_00006=2) + (field_00001_00004=2) + (field_00001_00005=2) + (field_00001_00006=2))=tv=1))
c Var 'aux307' direct represents '0' with '-8367'
c Var 'aux307' direct represents '1' with '8367'
c Var 'aux307' order represents '1' with '1'
c Var 'aux307' order represents '0' with '-8367'
c Encoding variable: aux308 with domain: bool (representing constraint (((field_00002_00004=3) + (field_00002_00005=3) + (field_00002_00006=3) + (field_00003_00004=3) + (field_00003_00005=3) + (field_00003_00006=3) + (field_00001_00004=3) + (field_00001_00005=3) + (field_00001_00006=3))=tv=1))
c Var 'aux308' direct represents '0' with '-8368'
c Var 'aux308' direct represents '1' with '8368'
c Var 'aux308' order represents '1' with '1'
c Var 'aux308' order represents '0' with '-8368'
c Encoding variable: aux309 with domain: bool (representing constraint (((field_00002_00004=4) + (field_00002_00005=4) + (field_00002_00006=4) + (field_00003_00004=4) + (field_00003_00005=4) + (field_00003_00006=4) + (field_00001_00004=4) + (field_00001_00005=4) + (field_00001_00006=4))=tv=1))
c Var 'aux309' direct represents '0' with '-8369'
c Var 'aux309' direct represents '1' with '8369'
c Var 'aux309' order represents '1' with '1'
c Var 'aux309' order represents '0' with '-8369'
c Encoding variable: aux310 with domain: bool (representing constraint (((field_00002_00004=5) + (field_00002_00005=5) + (field_00002_00006=5) + (field_00003_00004=5) + (field_00003_00005=5) + (field_00003_00006=5) + (field_00001_00004=5) + (field_00001_00005=5) + (field_00001_00006=5))=tv=1))
c Var 'aux310' direct represents '0' with '-8370'
c Var 'aux310' direct represents '1' with '8370'
c Var 'aux310' order represents '1' with '1'
c Var 'aux310' order represents '0' with '-8370'
c Encoding variable: aux311 with domain: bool (representing constraint (((field_00002_00004=6) + (field_00002_00005=6) + (field_00002_00006=6) + (field_00003_00004=6) + (field_00003_00005=6) + (field_00003_00006=6) + (field_00001_00004=6) + (field_00001_00005=6) + (field_00001_00006=6))=tv=1))
c Var 'aux311' direct represents '0' with '-8371'
c Var 'aux311' direct represents '1' with '8371'
c Var 'aux311' order represents '1' with '1'
c Var 'aux311' order represents '0' with '-8371'
c Encoding variable: aux312 with domain: bool (representing constraint (((field_00002_00004=7) + (field_00002_00005=7) + (field_00002_00006=7) + (field_00003_00004=7) + (field_00003_00005=7) + (field_00003_00006=7) + (field_00001_00004=7) + (field_00001_00005=7) + (field_00001_00006=7))=tv=1))
c Var 'aux312' direct represents '0' with '-8372'
c Var 'aux312' direct represents '1' with '8372'
c Var 'aux312' order represents '1' with '1'
c Var 'aux312' order represents '0' with '-8372'
c Encoding variable: aux313 with domain: bool (representing constraint (((field_00002_00004=8) + (field_00002_00005=8) + (field_00002_00006=8) + (field_00003_00004=8) + (field_00003_00005=8) + (field_00003_00006=8) + (field_00001_00004=8) + (field_00001_00005=8) + (field_00001_00006=8))=tv=1))
c Var 'aux313' direct represents '0' with '-8373'
c Var 'aux313' direct represents '1' with '8373'
c Var 'aux313' order represents '1' with '1'
c Var 'aux313' order represents '0' with '-8373'
c Encoding variable: aux314 with domain: bool (representing constraint (((field_00002_00004=9) + (field_00002_00005=9) + (field_00002_00006=9) + (field_00003_00004=9) + (field_00003_00005=9) + (field_00003_00006=9) + (field_00001_00004=9) + (field_00001_00005=9) + (field_00001_00006=9))=tv=1))
c Var 'aux314' direct represents '0' with '-8374'
c Var 'aux314' direct represents '1' with '8374'
c Var 'aux314' order represents '1' with '1'
c Var 'aux314' order represents '0' with '-8374'
c Encoding variable: aux315 with domain: bool (representing constraint (((field_00002_00007=1) + (field_00002_00008=1) + (field_00002_00009=1) + (field_00003_00007=1) + (field_00003_00008=1) + (field_00003_00009=1) + (field_00001_00007=1) + (field_00001_00008=1) + (field_00001_00009=1))=tv=1))
c Var 'aux315' direct represents '0' with '-8375'
c Var 'aux315' direct represents '1' with '8375'
c Var 'aux315' order represents '1' with '1'
c Var 'aux315' order represents '0' with '-8375'
c Encoding variable: aux316 with domain: bool (representing constraint (((field_00002_00007=2) + (field_00002_00008=2) + (field_00002_00009=2) + (field_00003_00007=2) + (field_00003_00008=2) + (field_00003_00009=2) + (field_00001_00007=2) + (field_00001_00008=2) + (field_00001_00009=2))=tv=1))
c Var 'aux316' direct represents '0' with '-8376'
c Var 'aux316' direct represents '1' with '8376'
c Var 'aux316' order represents '1' with '1'
c Var 'aux316' order represents '0' with '-8376'
c Encoding variable: aux317 with domain: bool (representing constraint (((field_00002_00007=3) + (field_00002_00008=3) + (field_00002_00009=3) + (field_00003_00007=3) + (field_00003_00008=3) + (field_00003_00009=3) + (field_00001_00007=3) + (field_00001_00008=3) + (field_00001_00009=3))=tv=1))
c Var 'aux317' direct represents '0' with '-8377'
c Var 'aux317' direct represents '1' with '8377'
c Var 'aux317' order represents '1' with '1'
c Var 'aux317' order represents '0' with '-8377'
c Encoding variable: aux318 with domain: bool (representing constraint (((field_00002_00007=4) + (field_00002_00008=4) + (field_00002_00009=4) + (field_00003_00007=4) + (field_00003_00008=4) + (field_00003_00009=4) + (field_00001_00007=4) + (field_00001_00008=4) + (field_00001_00009=4))=tv=1))
c Var 'aux318' direct represents '0' with '-8378'
c Var 'aux318' direct represents '1' with '8378'
c Var 'aux318' order represents '1' with '1'
c Var 'aux318' order represents '0' with '-8378'
c Encoding variable: aux319 with domain: bool (representing constraint (((field_00002_00007=5) + (field_00002_00008=5) + (field_00002_00009=5) + (field_00003_00007=5) + (field_00003_00008=5) + (field_00003_00009=5) + (field_00001_00007=5) + (field_00001_00008=5) + (field_00001_00009=5))=tv=1))
c Var 'aux319' direct represents '0' with '-8379'
c Var 'aux319' direct represents '1' with '8379'
c Var 'aux319' order represents '1' with '1'
c Var 'aux319' order represents '0' with '-8379'
c Encoding variable: aux320 with domain: bool (representing constraint (((field_00002_00007=6) + (field_00002_00008=6) + (field_00002_00009=6) + (field_00003_00007=6) + (field_00003_00008=6) + (field_00003_00009=6) + (field_00001_00007=6) + (field_00001_00008=6) + (field_00001_00009=6))=tv=1))
c Var 'aux320' direct represents '0' with '-8380'
c Var 'aux320' direct represents '1' with '8380'
c Var 'aux320' order represents '1' with '1'
c Var 'aux320' order represents '0' with '-8380'
c Encoding variable: aux321 with domain: bool (representing constraint (((field_00002_00007=7) + (field_00002_00008=7) + (field_00002_00009=7) + (field_00003_00007=7) + (field_00003_00008=7) + (field_00003_00009=7) + (field_00001_00007=7) + (field_00001_00008=7) + (field_00001_00009=7))=tv=1))
c Var 'aux321' direct represents '0' with '-8381'
c Var 'aux321' direct represents '1' with '8381'
c Var 'aux321' order represents '1' with '1'
c Var 'aux321' order represents '0' with '-8381'
c Encoding variable: aux322 with domain: bool (representing constraint (((field_00002_00007=8) + (field_00002_00008=8) + (field_00002_00009=8) + (field_00003_00007=8) + (field_00003_00008=8) + (field_00003_00009=8) + (field_00001_00007=8) + (field_00001_00008=8) + (field_00001_00009=8))=tv=1))
c Var 'aux322' direct represents '0' with '-8382'
c Var 'aux322' direct represents '1' with '8382'
c Var 'aux322' order represents '1' with '1'
c Var 'aux322' order represents '0' with '-8382'
c Encoding variable: aux323 with domain: bool (representing constraint (((field_00002_00007=9) + (field_00002_00008=9) + (field_00002_00009=9) + (field_00003_00007=9) + (field_00003_00008=9) + (field_00003_00009=9) + (field_00001_00007=9) + (field_00001_00008=9) + (field_00001_00009=9))=tv=1))
c Var 'aux323' direct represents '0' with '-8383'
c Var 'aux323' direct represents '1' with '8383'
c Var 'aux323' order represents '1' with '1'
c Var 'aux323' order represents '0' with '-8383'
c Encoding variable: aux324 with domain: bool (representing constraint (((field_00004_00001=1) + (field_00004_00002=1) + (field_00004_00003=1) + (field_00005_00001=1) + (field_00005_00002=1) + (field_00005_00003=1) + (field_00006_00001=1) + (field_00006_00002=1) + (field_00006_00003=1))=tv=1))
c Var 'aux324' direct represents '0' with '-8384'
c Var 'aux324' direct represents '1' with '8384'
c Var 'aux324' order represents '1' with '1'
c Var 'aux324' order represents '0' with '-8384'
c Encoding variable: aux325 with domain: bool (representing constraint (((field_00004_00001=2) + (field_00004_00002=2) + (field_00004_00003=2) + (field_00005_00001=2) + (field_00005_00002=2) + (field_00005_00003=2) + (field_00006_00001=2) + (field_00006_00002=2) + (field_00006_00003=2))=tv=1))
c Var 'aux325' direct represents '0' with '-8385'
c Var 'aux325' direct represents '1' with '8385'
c Var 'aux325' order represents '1' with '1'
c Var 'aux325' order represents '0' with '-8385'
c Encoding variable: aux326 with domain: bool (representing constraint (((field_00004_00001=3) + (field_00004_00002=3) + (field_00004_00003=3) + (field_00005_00001=3) + (field_00005_00002=3) + (field_00005_00003=3) + (field_00006_00001=3) + (field_00006_00002=3) + (field_00006_00003=3))=tv=1))
c Var 'aux326' direct represents '0' with '-8386'
c Var 'aux326' direct represents '1' with '8386'
c Var 'aux326' order represents '1' with '1'
c Var 'aux326' order represents '0' with '-8386'
c Encoding variable: aux327 with domain: bool (representing constraint (((field_00004_00001=4) + (field_00004_00002=4) + (field_00004_00003=4) + (field_00005_00001=4) + (field_00005_00002=4) + (field_00005_00003=4) + (field_00006_00001=4) + (field_00006_00002=4) + (field_00006_00003=4))=tv=1))
c Var 'aux327' direct represents '0' with '-8387'
c Var 'aux327' direct represents '1' with '8387'
c Var 'aux327' order represents '1' with '1'
c Var 'aux327' order represents '0' with '-8387'
c Encoding variable: aux328 with domain: bool (representing constraint (((field_00004_00001=5) + (field_00004_00002=5) + (field_00004_00003=5) + (field_00005_00001=5) + (field_00005_00002=5) + (field_00005_00003=5) + (field_00006_00001=5) + (field_00006_00002=5) + (field_00006_00003=5))=tv=1))
c Var 'aux328' direct represents '0' with '-8388'
c Var 'aux328' direct represents '1' with '8388'
c Var 'aux328' order represents '1' with '1'
c Var 'aux328' order represents '0' with '-8388'
c Encoding variable: aux329 with domain: bool (representing constraint (((field_00004_00001=6) + (field_00004_00002=6) + (field_00004_00003=6) + (field_00005_00001=6) + (field_00005_00002=6) + (field_00005_00003=6) + (field_00006_00001=6) + (field_00006_00002=6) + (field_00006_00003=6))=tv=1))
c Var 'aux329' direct represents '0' with '-8389'
c Var 'aux329' direct represents '1' with '8389'
c Var 'aux329' order represents '1' with '1'
c Var 'aux329' order represents '0' with '-8389'
c Encoding variable: aux330 with domain: bool (representing constraint (((field_00004_00001=7) + (field_00004_00002=7) + (field_00004_00003=7) + (field_00005_00001=7) + (field_00005_00002=7) + (field_00005_00003=7) + (field_00006_00001=7) + (field_00006_00002=7) + (field_00006_00003=7))=tv=1))
c Var 'aux330' direct represents '0' with '-8390'
c Var 'aux330' direct represents '1' with '8390'
c Var 'aux330' order represents '1' with '1'
c Var 'aux330' order represents '0' with '-8390'
c Encoding variable: aux331 with domain: bool (representing constraint (((field_00004_00001=8) + (field_00004_00002=8) + (field_00004_00003=8) + (field_00005_00001=8) + (field_00005_00002=8) + (field_00005_00003=8) + (field_00006_00001=8) + (field_00006_00002=8) + (field_00006_00003=8))=tv=1))
c Var 'aux331' direct represents '0' with '-8391'
c Var 'aux331' direct represents '1' with '8391'
c Var 'aux331' order represents '1' with '1'
c Var 'aux331' order represents '0' with '-8391'
c Encoding variable: aux332 with domain: bool (representing constraint (((field_00004_00001=9) + (field_00004_00002=9) + (field_00004_00003=9) + (field_00005_00001=9) + (field_00005_00002=9) + (field_00005_00003=9) + (field_00006_00001=9) + (field_00006_00002=9) + (field_00006_00003=9))=tv=1))
c Var 'aux332' direct represents '0' with '-8392'
c Var 'aux332' direct represents '1' with '8392'
c Var 'aux332' order represents '1' with '1'
c Var 'aux332' order represents '0' with '-8392'
c Encoding variable: aux333 with domain: bool (representing constraint (((field_00004_00004=1) + (field_00004_00005=1) + (field_00004_00006=1) + (field_00005_00004=1) + (field_00005_00005=1) + (field_00005_00006=1) + (field_00006_00004=1) + (field_00006_00005=1) + (field_00006_00006=1))=tv=1))
c Var 'aux333' direct represents '0' with '-8393'
c Var 'aux333' direct represents '1' with '8393'
c Var 'aux333' order represents '1' with '1'
c Var 'aux333' order represents '0' with '-8393'
c Encoding variable: aux334 with domain: bool (representing constraint (((field_00004_00004=2) + (field_00004_00005=2) + (field_00004_00006=2) + (field_00005_00004=2) + (field_00005_00005=2) + (field_00005_00006=2) + (field_00006_00004=2) + (field_00006_00005=2) + (field_00006_00006=2))=tv=1))
c Var 'aux334' direct represents '0' with '-8394'
c Var 'aux334' direct represents '1' with '8394'
c Var 'aux334' order represents '1' with '1'
c Var 'aux334' order represents '0' with '-8394'
c Encoding variable: aux335 with domain: bool (representing constraint (((field_00004_00004=3) + (field_00004_00005=3) + (field_00004_00006=3) + (field_00005_00004=3) + (field_00005_00005=3) + (field_00005_00006=3) + (field_00006_00004=3) + (field_00006_00005=3) + (field_00006_00006=3))=tv=1))
c Var 'aux335' direct represents '0' with '-8395'
c Var 'aux335' direct represents '1' with '8395'
c Var 'aux335' order represents '1' with '1'
c Var 'aux335' order represents '0' with '-8395'
c Encoding variable: aux336 with domain: bool (representing constraint (((field_00004_00004=4) + (field_00004_00005=4) + (field_00004_00006=4) + (field_00005_00004=4) + (field_00005_00005=4) + (field_00005_00006=4) + (field_00006_00004=4) + (field_00006_00005=4) + (field_00006_00006=4))=tv=1))
c Var 'aux336' direct represents '0' with '-8396'
c Var 'aux336' direct represents '1' with '8396'
c Var 'aux336' order represents '1' with '1'
c Var 'aux336' order represents '0' with '-8396'
c Encoding variable: aux337 with domain: bool (representing constraint (((field_00004_00004=5) + (field_00004_00005=5) + (field_00004_00006=5) + (field_00005_00004=5) + (field_00005_00005=5) + (field_00005_00006=5) + (field_00006_00004=5) + (field_00006_00005=5) + (field_00006_00006=5))=tv=1))
c Var 'aux337' direct represents '0' with '-8397'
c Var 'aux337' direct represents '1' with '8397'
c Var 'aux337' order represents '1' with '1'
c Var 'aux337' order represents '0' with '-8397'
c Encoding variable: aux338 with domain: bool (representing constraint (((field_00004_00004=6) + (field_00004_00005=6) + (field_00004_00006=6) + (field_00005_00004=6) + (field_00005_00005=6) + (field_00005_00006=6) + (field_00006_00004=6) + (field_00006_00005=6) + (field_00006_00006=6))=tv=1))
c Var 'aux338' direct represents '0' with '-8398'
c Var 'aux338' direct represents '1' with '8398'
c Var 'aux338' order represents '1' with '1'
c Var 'aux338' order represents '0' with '-8398'
c Encoding variable: aux339 with domain: bool (representing constraint (((field_00004_00004=7) + (field_00004_00005=7) + (field_00004_00006=7) + (field_00005_00004=7) + (field_00005_00005=7) + (field_00005_00006=7) + (field_00006_00004=7) + (field_00006_00005=7) + (field_00006_00006=7))=tv=1))
c Var 'aux339' direct represents '0' with '-8399'
c Var 'aux339' direct represents '1' with '8399'
c Var 'aux339' order represents '1' with '1'
c Var 'aux339' order represents '0' with '-8399'
c Encoding variable: aux340 with domain: bool (representing constraint (((field_00004_00004=8) + (field_00004_00005=8) + (field_00004_00006=8) + (field_00005_00004=8) + (field_00005_00005=8) + (field_00005_00006=8) + (field_00006_00004=8) + (field_00006_00005=8) + (field_00006_00006=8))=tv=1))
c Var 'aux340' direct represents '0' with '-8400'
c Var 'aux340' direct represents '1' with '8400'
c Var 'aux340' order represents '1' with '1'
c Var 'aux340' order represents '0' with '-8400'
c Encoding variable: aux341 with domain: bool (representing constraint (((field_00004_00004=9) + (field_00004_00005=9) + (field_00004_00006=9) + (field_00005_00004=9) + (field_00005_00005=9) + (field_00005_00006=9) + (field_00006_00004=9) + (field_00006_00005=9) + (field_00006_00006=9))=tv=1))
c Var 'aux341' direct represents '0' with '-8401'
c Var 'aux341' direct represents '1' with '8401'
c Var 'aux341' order represents '1' with '1'
c Var 'aux341' order represents '0' with '-8401'
c Encoding variable: aux342 with domain: bool (representing constraint (((field_00004_00007=1) + (field_00004_00008=1) + (field_00004_00009=1) + (field_00005_00007=1) + (field_00005_00008=1) + (field_00005_00009=1) + (field_00006_00007=1) + (field_00006_00008=1) + (field_00006_00009=1))=tv=1))
c Var 'aux342' direct represents '0' with '-8402'
c Var 'aux342' direct represents '1' with '8402'
c Var 'aux342' order represents '1' with '1'
c Var 'aux342' order represents '0' with '-8402'
c Encoding variable: aux343 with domain: bool (representing constraint (((field_00004_00007=2) + (field_00004_00008=2) + (field_00004_00009=2) + (field_00005_00007=2) + (field_00005_00008=2) + (field_00005_00009=2) + (field_00006_00007=2) + (field_00006_00008=2) + (field_00006_00009=2))=tv=1))
c Var 'aux343' direct represents '0' with '-8403'
c Var 'aux343' direct represents '1' with '8403'
c Var 'aux343' order represents '1' with '1'
c Var 'aux343' order represents '0' with '-8403'
c Encoding variable: aux344 with domain: bool (representing constraint (((field_00004_00007=3) + (field_00004_00008=3) + (field_00004_00009=3) + (field_00005_00007=3) + (field_00005_00008=3) + (field_00005_00009=3) + (field_00006_00007=3) + (field_00006_00008=3) + (field_00006_00009=3))=tv=1))
c Var 'aux344' direct represents '0' with '-8404'
c Var 'aux344' direct represents '1' with '8404'
c Var 'aux344' order represents '1' with '1'
c Var 'aux344' order represents '0' with '-8404'
c Encoding variable: aux345 with domain: bool (representing constraint (((field_00004_00007=4) + (field_00004_00008=4) + (field_00004_00009=4) + (field_00005_00007=4) + (field_00005_00008=4) + (field_00005_00009=4) + (field_00006_00007=4) + (field_00006_00008=4) + (field_00006_00009=4))=tv=1))
c Var 'aux345' direct represents '0' with '-8405'
c Var 'aux345' direct represents '1' with '8405'
c Var 'aux345' order represents '1' with '1'
c Var 'aux345' order represents '0' with '-8405'
c Encoding variable: aux346 with domain: bool (representing constraint (((field_00004_00007=5) + (field_00004_00008=5) + (field_00004_00009=5) + (field_00005_00007=5) + (field_00005_00008=5) + (field_00005_00009=5) + (field_00006_00007=5) + (field_00006_00008=5) + (field_00006_00009=5))=tv=1))
c Var 'aux346' direct represents '0' with '-8406'
c Var 'aux346' direct represents '1' with '8406'
c Var 'aux346' order represents '1' with '1'
c Var 'aux346' order represents '0' with '-8406'
c Encoding variable: aux347 with domain: bool (representing constraint (((field_00004_00007=6) + (field_00004_00008=6) + (field_00004_00009=6) + (field_00005_00007=6) + (field_00005_00008=6) + (field_00005_00009=6) + (field_00006_00007=6) + (field_00006_00008=6) + (field_00006_00009=6))=tv=1))
c Var 'aux347' direct represents '0' with '-8407'
c Var 'aux347' direct represents '1' with '8407'
c Var 'aux347' order represents '1' with '1'
c Var 'aux347' order represents '0' with '-8407'
c Encoding variable: aux348 with domain: bool (representing constraint (((field_00004_00007=7) + (field_00004_00008=7) + (field_00004_00009=7) + (field_00005_00007=7) + (field_00005_00008=7) + (field_00005_00009=7) + (field_00006_00007=7) + (field_00006_00008=7) + (field_00006_00009=7))=tv=1))
c Var 'aux348' direct represents '0' with '-8408'
c Var 'aux348' direct represents '1' with '8408'
c Var 'aux348' order represents '1' with '1'
c Var 'aux348' order represents '0' with '-8408'
c Encoding variable: aux349 with domain: bool (representing constraint (((field_00004_00007=8) + (field_00004_00008=8) + (field_00004_00009=8) + (field_00005_00007=8) + (field_00005_00008=8) + (field_00005_00009=8) + (field_00006_00007=8) + (field_00006_00008=8) + (field_00006_00009=8))=tv=1))
c Var 'aux349' direct represents '0' with '-8409'
c Var 'aux349' direct represents '1' with '8409'
c Var 'aux349' order represents '1' with '1'
c Var 'aux349' order represents '0' with '-8409'
c Encoding variable: aux350 with domain: bool (representing constraint (((field_00004_00007=9) + (field_00004_00008=9) + (field_00004_00009=9) + (field_00005_00007=9) + (field_00005_00008=9) + (field_00005_00009=9) + (field_00006_00007=9) + (field_00006_00008=9) + (field_00006_00009=9))=tv=1))
c Var 'aux350' direct represents '0' with '-8410'
c Var 'aux350' direct represents '1' with '8410'
c Var 'aux350' order represents '1' with '1'
c Var 'aux350' order represents '0' with '-8410'
c Encoding variable: aux351 with domain: bool (representing constraint (((field_00009_00001=1) + (field_00009_00002=1) + (field_00009_00003=1) + (field_00007_00001=1) + (field_00007_00002=1) + (field_00007_00003=1) + (field_00008_00001=1) + (field_00008_00002=1) + (field_00008_00003=1))=tv=1))
c Var 'aux351' direct represents '0' with '-8411'
c Var 'aux351' direct represents '1' with '8411'
c Var 'aux351' order represents '1' with '1'
c Var 'aux351' order represents '0' with '-8411'
c Encoding variable: aux352 with domain: bool (representing constraint (((field_00009_00001=2) + (field_00009_00002=2) + (field_00009_00003=2) + (field_00007_00001=2) + (field_00007_00002=2) + (field_00007_00003=2) + (field_00008_00001=2) + (field_00008_00002=2) + (field_00008_00003=2))=tv=1))
c Var 'aux352' direct represents '0' with '-8412'
c Var 'aux352' direct represents '1' with '8412'
c Var 'aux352' order represents '1' with '1'
c Var 'aux352' order represents '0' with '-8412'
c Encoding variable: aux353 with domain: bool (representing constraint (((field_00009_00001=3) + (field_00009_00002=3) + (field_00009_00003=3) + (field_00007_00001=3) + (field_00007_00002=3) + (field_00007_00003=3) + (field_00008_00001=3) + (field_00008_00002=3) + (field_00008_00003=3))=tv=1))
c Var 'aux353' direct represents '0' with '-8413'
c Var 'aux353' direct represents '1' with '8413'
c Var 'aux353' order represents '1' with '1'
c Var 'aux353' order represents '0' with '-8413'
c Encoding variable: aux354 with domain: bool (representing constraint (((field_00009_00001=4) + (field_00009_00002=4) + (field_00009_00003=4) + (field_00007_00001=4) + (field_00007_00002=4) + (field_00007_00003=4) + (field_00008_00001=4) + (field_00008_00002=4) + (field_00008_00003=4))=tv=1))
c Var 'aux354' direct represents '0' with '-8414'
c Var 'aux354' direct represents '1' with '8414'
c Var 'aux354' order represents '1' with '1'
c Var 'aux354' order represents '0' with '-8414'
c Encoding variable: aux355 with domain: bool (representing constraint (((field_00009_00001=5) + (field_00009_00002=5) + (field_00009_00003=5) + (field_00007_00001=5) + (field_00007_00002=5) + (field_00007_00003=5) + (field_00008_00001=5) + (field_00008_00002=5) + (field_00008_00003=5))=tv=1))
c Var 'aux355' direct represents '0' with '-8415'
c Var 'aux355' direct represents '1' with '8415'
c Var 'aux355' order represents '1' with '1'
c Var 'aux355' order represents '0' with '-8415'
c Encoding variable: aux356 with domain: bool (representing constraint (((field_00009_00001=6) + (field_00009_00002=6) + (field_00009_00003=6) + (field_00007_00001=6) + (field_00007_00002=6) + (field_00007_00003=6) + (field_00008_00001=6) + (field_00008_00002=6) + (field_00008_00003=6))=tv=1))
c Var 'aux356' direct represents '0' with '-8416'
c Var 'aux356' direct represents '1' with '8416'
c Var 'aux356' order represents '1' with '1'
c Var 'aux356' order represents '0' with '-8416'
c Encoding variable: aux357 with domain: bool (representing constraint (((field_00009_00001=7) + (field_00009_00002=7) + (field_00009_00003=7) + (field_00007_00001=7) + (field_00007_00002=7) + (field_00007_00003=7) + (field_00008_00001=7) + (field_00008_00002=7) + (field_00008_00003=7))=tv=1))
c Var 'aux357' direct represents '0' with '-8417'
c Var 'aux357' direct represents '1' with '8417'
c Var 'aux357' order represents '1' with '1'
c Var 'aux357' order represents '0' with '-8417'
c Encoding variable: aux358 with domain: bool (representing constraint (((field_00009_00001=8) + (field_00009_00002=8) + (field_00009_00003=8) + (field_00007_00001=8) + (field_00007_00002=8) + (field_00007_00003=8) + (field_00008_00001=8) + (field_00008_00002=8) + (field_00008_00003=8))=tv=1))
c Var 'aux358' direct represents '0' with '-8418'
c Var 'aux358' direct represents '1' with '8418'
c Var 'aux358' order represents '1' with '1'
c Var 'aux358' order represents '0' with '-8418'
c Encoding variable: aux359 with domain: bool (representing constraint (((field_00009_00001=9) + (field_00009_00002=9) + (field_00009_00003=9) + (field_00007_00001=9) + (field_00007_00002=9) + (field_00007_00003=9) + (field_00008_00001=9) + (field_00008_00002=9) + (field_00008_00003=9))=tv=1))
c Var 'aux359' direct represents '0' with '-8419'
c Var 'aux359' direct represents '1' with '8419'
c Var 'aux359' order represents '1' with '1'
c Var 'aux359' order represents '0' with '-8419'
c Encoding variable: aux360 with domain: bool (representing constraint (((field_00009_00004=1) + (field_00009_00005=1) + (field_00009_00006=1) + (field_00007_00004=1) + (field_00007_00005=1) + (field_00007_00006=1) + (field_00008_00004=1) + (field_00008_00005=1) + (field_00008_00006=1))=tv=1))
c Var 'aux360' direct represents '0' with '-8420'
c Var 'aux360' direct represents '1' with '8420'
c Var 'aux360' order represents '1' with '1'
c Var 'aux360' order represents '0' with '-8420'
c Encoding variable: aux361 with domain: bool (representing constraint (((field_00009_00004=2) + (field_00009_00005=2) + (field_00009_00006=2) + (field_00007_00004=2) + (field_00007_00005=2) + (field_00007_00006=2) + (field_00008_00004=2) + (field_00008_00005=2) + (field_00008_00006=2))=tv=1))
c Var 'aux361' direct represents '0' with '-8421'
c Var 'aux361' direct represents '1' with '8421'
c Var 'aux361' order represents '1' with '1'
c Var 'aux361' order represents '0' with '-8421'
c Encoding variable: aux362 with domain: bool (representing constraint (((field_00009_00004=3) + (field_00009_00005=3) + (field_00009_00006=3) + (field_00007_00004=3) + (field_00007_00005=3) + (field_00007_00006=3) + (field_00008_00004=3) + (field_00008_00005=3) + (field_00008_00006=3))=tv=1))
c Var 'aux362' direct represents '0' with '-8422'
c Var 'aux362' direct represents '1' with '8422'
c Var 'aux362' order represents '1' with '1'
c Var 'aux362' order represents '0' with '-8422'
c Encoding variable: aux363 with domain: bool (representing constraint (((field_00009_00004=4) + (field_00009_00005=4) + (field_00009_00006=4) + (field_00007_00004=4) + (field_00007_00005=4) + (field_00007_00006=4) + (field_00008_00004=4) + (field_00008_00005=4) + (field_00008_00006=4))=tv=1))
c Var 'aux363' direct represents '0' with '-8423'
c Var 'aux363' direct represents '1' with '8423'
c Var 'aux363' order represents '1' with '1'
c Var 'aux363' order represents '0' with '-8423'
c Encoding variable: aux364 with domain: bool (representing constraint (((field_00009_00004=5) + (field_00009_00005=5) + (field_00009_00006=5) + (field_00007_00004=5) + (field_00007_00005=5) + (field_00007_00006=5) + (field_00008_00004=5) + (field_00008_00005=5) + (field_00008_00006=5))=tv=1))
c Var 'aux364' direct represents '0' with '-8424'
c Var 'aux364' direct represents '1' with '8424'
c Var 'aux364' order represents '1' with '1'
c Var 'aux364' order represents '0' with '-8424'
c Encoding variable: aux365 with domain: bool (representing constraint (((field_00009_00004=6) + (field_00009_00005=6) + (field_00009_00006=6) + (field_00007_00004=6) + (field_00007_00005=6) + (field_00007_00006=6) + (field_00008_00004=6) + (field_00008_00005=6) + (field_00008_00006=6))=tv=1))
c Var 'aux365' direct represents '0' with '-8425'
c Var 'aux365' direct represents '1' with '8425'
c Var 'aux365' order represents '1' with '1'
c Var 'aux365' order represents '0' with '-8425'
c Encoding variable: aux366 with domain: bool (representing constraint (((field_00009_00004=7) + (field_00009_00005=7) + (field_00009_00006=7) + (field_00007_00004=7) + (field_00007_00005=7) + (field_00007_00006=7) + (field_00008_00004=7) + (field_00008_00005=7) + (field_00008_00006=7))=tv=1))
c Var 'aux366' direct represents '0' with '-8426'
c Var 'aux366' direct represents '1' with '8426'
c Var 'aux366' order represents '1' with '1'
c Var 'aux366' order represents '0' with '-8426'
c Encoding variable: aux367 with domain: bool (representing constraint (((field_00009_00004=8) + (field_00009_00005=8) + (field_00009_00006=8) + (field_00007_00004=8) + (field_00007_00005=8) + (field_00007_00006=8) + (field_00008_00004=8) + (field_00008_00005=8) + (field_00008_00006=8))=tv=1))
c Var 'aux367' direct represents '0' with '-8427'
c Var 'aux367' direct represents '1' with '8427'
c Var 'aux367' order represents '1' with '1'
c Var 'aux367' order represents '0' with '-8427'
c Encoding variable: aux368 with domain: bool (representing constraint (((field_00009_00004=9) + (field_00009_00005=9) + (field_00009_00006=9) + (field_00007_00004=9) + (field_00007_00005=9) + (field_00007_00006=9) + (field_00008_00004=9) + (field_00008_00005=9) + (field_00008_00006=9))=tv=1))
c Var 'aux368' direct represents '0' with '-8428'
c Var 'aux368' direct represents '1' with '8428'
c Var 'aux368' order represents '1' with '1'
c Var 'aux368' order represents '0' with '-8428'
c Encoding variable: aux369 with domain: bool (representing constraint (((field_00009_00007=1) + (field_00009_00008=1) + (field_00009_00009=1) + (field_00007_00007=1) + (field_00007_00008=1) + (field_00007_00009=1) + (field_00008_00007=1) + (field_00008_00008=1) + (field_00008_00009=1))=tv=1))
c Var 'aux369' direct represents '0' with '-8429'
c Var 'aux369' direct represents '1' with '8429'
c Var 'aux369' order represents '1' with '1'
c Var 'aux369' order represents '0' with '-8429'
c Encoding variable: aux370 with domain: bool (representing constraint (((field_00009_00007=2) + (field_00009_00008=2) + (field_00009_00009=2) + (field_00007_00007=2) + (field_00007_00008=2) + (field_00007_00009=2) + (field_00008_00007=2) + (field_00008_00008=2) + (field_00008_00009=2))=tv=1))
c Var 'aux370' direct represents '0' with '-8430'
c Var 'aux370' direct represents '1' with '8430'
c Var 'aux370' order represents '1' with '1'
c Var 'aux370' order represents '0' with '-8430'
c Encoding variable: aux371 with domain: bool (representing constraint (((field_00009_00007=3) + (field_00009_00008=3) + (field_00009_00009=3) + (field_00007_00007=3) + (field_00007_00008=3) + (field_00007_00009=3) + (field_00008_00007=3) + (field_00008_00008=3) + (field_00008_00009=3))=tv=1))
c Var 'aux371' direct represents '0' with '-8431'
c Var 'aux371' direct represents '1' with '8431'
c Var 'aux371' order represents '1' with '1'
c Var 'aux371' order represents '0' with '-8431'
c Encoding variable: aux372 with domain: bool (representing constraint (((field_00009_00007=4) + (field_00009_00008=4) + (field_00009_00009=4) + (field_00007_00007=4) + (field_00007_00008=4) + (field_00007_00009=4) + (field_00008_00007=4) + (field_00008_00008=4) + (field_00008_00009=4))=tv=1))
c Var 'aux372' direct represents '0' with '-8432'
c Var 'aux372' direct represents '1' with '8432'
c Var 'aux372' order represents '1' with '1'
c Var 'aux372' order represents '0' with '-8432'
c Encoding variable: aux373 with domain: bool (representing constraint (((field_00009_00007=5) + (field_00009_00008=5) + (field_00009_00009=5) + (field_00007_00007=5) + (field_00007_00008=5) + (field_00007_00009=5) + (field_00008_00007=5) + (field_00008_00008=5) + (field_00008_00009=5))=tv=1))
c Var 'aux373' direct represents '0' with '-8433'
c Var 'aux373' direct represents '1' with '8433'
c Var 'aux373' order represents '1' with '1'
c Var 'aux373' order represents '0' with '-8433'
c Encoding variable: aux374 with domain: bool (representing constraint (((field_00009_00007=6) + (field_00009_00008=6) + (field_00009_00009=6) + (field_00007_00007=6) + (field_00007_00008=6) + (field_00007_00009=6) + (field_00008_00007=6) + (field_00008_00008=6) + (field_00008_00009=6))=tv=1))
c Var 'aux374' direct represents '0' with '-8434'
c Var 'aux374' direct represents '1' with '8434'
c Var 'aux374' order represents '1' with '1'
c Var 'aux374' order represents '0' with '-8434'
c Encoding variable: aux375 with domain: bool (representing constraint (((field_00009_00007=7) + (field_00009_00008=7) + (field_00009_00009=7) + (field_00007_00007=7) + (field_00007_00008=7) + (field_00007_00009=7) + (field_00008_00007=7) + (field_00008_00008=7) + (field_00008_00009=7))=tv=1))
c Var 'aux375' direct represents '0' with '-8435'
c Var 'aux375' direct represents '1' with '8435'
c Var 'aux375' order represents '1' with '1'
c Var 'aux375' order represents '0' with '-8435'
c Encoding variable: aux376 with domain: bool (representing constraint (((field_00009_00007=8) + (field_00009_00008=8) + (field_00009_00009=8) + (field_00007_00007=8) + (field_00007_00008=8) + (field_00007_00009=8) + (field_00008_00007=8) + (field_00008_00008=8) + (field_00008_00009=8))=tv=1))
c Var 'aux376' direct represents '0' with '-8436'
c Var 'aux376' direct represents '1' with '8436'
c Var 'aux376' order represents '1' with '1'
c Var 'aux376' order represents '0' with '-8436'
c Encoding variable: aux377 with domain: bool (representing constraint (((field_00009_00007=9) + (field_00009_00008=9) + (field_00009_00009=9) + (field_00007_00007=9) + (field_00007_00008=9) + (field_00007_00009=9) + (field_00008_00007=9) + (field_00008_00008=9) + (field_00008_00009=9))=tv=1))
c Var 'aux377' direct represents '0' with '-8437'
c Var 'aux377' direct represents '1' with '8437'
c Var 'aux377' order represents '1' with '1'
c Var 'aux377' order represents '0' with '-8437'
c Encoding variable: aux378 with domain: int(0..17) (representing constraint (shift(variant_fields_00001_00002_00001, -1) + aux7))
c Both direct and order encoding.
c Var 'aux378' order represents '0' with '8438'
c Var 'aux378' direct represents '0' with '8438'
c Var 'aux378' order represents '1' with '8439'
-8438 8439 0
c Var 'aux378' direct represents '1' with '8440'
8438 -8439 8440 0
-8440 8439 0
-8440 -8438 0
c Var 'aux378' order represents '2' with '8441'
-8439 8441 0
c Var 'aux378' direct represents '2' with '8442'
8439 -8441 8442 0
-8442 8441 0
-8442 -8439 0
c Var 'aux378' order represents '3' with '8443'
-8441 8443 0
c Var 'aux378' direct represents '3' with '8444'
8441 -8443 8444 0
-8444 8443 0
-8444 -8441 0
c Var 'aux378' order represents '4' with '8445'
-8443 8445 0
c Var 'aux378' direct represents '4' with '8446'
8443 -8445 8446 0
-8446 8445 0
-8446 -8443 0
c Var 'aux378' order represents '5' with '8447'
-8445 8447 0
c Var 'aux378' direct represents '5' with '8448'
8445 -8447 8448 0
-8448 8447 0
-8448 -8445 0
c Var 'aux378' order represents '6' with '8449'
-8447 8449 0
c Var 'aux378' direct represents '6' with '8450'
8447 -8449 8450 0
-8450 8449 0
-8450 -8447 0
c Var 'aux378' order represents '7' with '8451'
-8449 8451 0
c Var 'aux378' direct represents '7' with '8452'
8449 -8451 8452 0
-8452 8451 0
-8452 -8449 0
c Var 'aux378' order represents '8' with '8453'
-8451 8453 0
c Var 'aux378' direct represents '8' with '8454'
8451 -8453 8454 0
-8454 8453 0
-8454 -8451 0
c Var 'aux378' order represents '9' with '8455'
-8453 8455 0
c Var 'aux378' direct represents '9' with '8456'
8453 -8455 8456 0
-8456 8455 0
-8456 -8453 0
c Var 'aux378' order represents '10' with '8457'
-8455 8457 0
c Var 'aux378' direct represents '10' with '8458'
8455 -8457 8458 0
-8458 8457 0
-8458 -8455 0
c Var 'aux378' order represents '11' with '8459'
-8457 8459 0
c Var 'aux378' direct represents '11' with '8460'
8457 -8459 8460 0
-8460 8459 0
-8460 -8457 0
c Var 'aux378' order represents '12' with '8461'
-8459 8461 0
c Var 'aux378' direct represents '12' with '8462'
8459 -8461 8462 0
-8462 8461 0
-8462 -8459 0
c Var 'aux378' order represents '13' with '8463'
-8461 8463 0
c Var 'aux378' direct represents '13' with '8464'
8461 -8463 8464 0
-8464 8463 0
-8464 -8461 0
c Var 'aux378' order represents '14' with '8465'
-8463 8465 0
c Var 'aux378' direct represents '14' with '8466'
8463 -8465 8466 0
-8466 8465 0
-8466 -8463 0
c Var 'aux378' order represents '15' with '8467'
-8465 8467 0
c Var 'aux378' direct represents '15' with '8468'
8465 -8467 8468 0
-8468 8467 0
-8468 -8465 0
c Var 'aux378' order represents '16' with '8469'
-8467 8469 0
c Var 'aux378' direct represents '16' with '8470'
8467 -8469 8470 0
-8470 8469 0
-8470 -8467 0
c Var 'aux378' direct represents '17' with '-8469'
8438 8440 8442 8444 8446 8448 8450 8452 8454 8456 8458 8460 8462 8464 8466 8468 8470 -8469 0
c Encoding variable: aux379 with domain: int(0..18) (representing constraint (aux6 + aux0))
c Both direct and order encoding.
c Var 'aux379' order represents '0' with '8471'
c Var 'aux379' direct represents '0' with '8471'
c Var 'aux379' order represents '1' with '8472'
-8471 8472 0
c Var 'aux379' direct represents '1' with '8473'
8471 -8472 8473 0
-8473 8472 0
-8473 -8471 0
c Var 'aux379' order represents '2' with '8474'
-8472 8474 0
c Var 'aux379' direct represents '2' with '8475'
8472 -8474 8475 0
-8475 8474 0
-8475 -8472 0
c Var 'aux379' order represents '3' with '8476'
-8474 8476 0
c Var 'aux379' direct represents '3' with '8477'
8474 -8476 8477 0
-8477 8476 0
-8477 -8474 0
c Var 'aux379' order represents '4' with '8478'
-8476 8478 0
c Var 'aux379' direct represents '4' with '8479'
8476 -8478 8479 0
-8479 8478 0
-8479 -8476 0
c Var 'aux379' order represents '5' with '8480'
-8478 8480 0
c Var 'aux379' direct represents '5' with '8481'
8478 -8480 8481 0
-8481 8480 0
-8481 -8478 0
c Var 'aux379' order represents '6' with '8482'
-8480 8482 0
c Var 'aux379' direct represents '6' with '8483'
8480 -8482 8483 0
-8483 8482 0
-8483 -8480 0
c Var 'aux379' order represents '7' with '8484'
-8482 8484 0
c Var 'aux379' direct represents '7' with '8485'
8482 -8484 8485 0
-8485 8484 0
-8485 -8482 0
c Var 'aux379' order represents '8' with '8486'
-8484 8486 0
c Var 'aux379' direct represents '8' with '8487'
8484 -8486 8487 0
-8487 8486 0
-8487 -8484 0
c Var 'aux379' order represents '9' with '8488'
-8486 8488 0
c Var 'aux379' direct represents '9' with '8489'
8486 -8488 8489 0
-8489 8488 0
-8489 -8486 0
c Var 'aux379' order represents '10' with '8490'
-8488 8490 0
c Var 'aux379' direct represents '10' with '8491'
8488 -8490 8491 0
-8491 8490 0
-8491 -8488 0
c Var 'aux379' order represents '11' with '8492'
-8490 8492 0
c Var 'aux379' direct represents '11' with '8493'
8490 -8492 8493 0
-8493 8492 0
-8493 -8490 0
c Var 'aux379' order represents '12' with '8494'
-8492 8494 0
c Var 'aux379' direct represents '12' with '8495'
8492 -8494 8495 0
-8495 8494 0
-8495 -8492 0
c Var 'aux379' order represents '13' with '8496'
-8494 8496 0
c Var 'aux379' direct represents '13' with '8497'
8494 -8496 8497 0
-8497 8496 0
-8497 -8494 0
c Var 'aux379' order represents '14' with '8498'
-8496 8498 0
c Var 'aux379' direct represents '14' with '8499'
8496 -8498 8499 0
-8499 8498 0
-8499 -8496 0
c Var 'aux379' order represents '15' with '8500'
-8498 8500 0
c Var 'aux379' direct represents '15' with '8501'
8498 -8500 8501 0
-8501 8500 0
-8501 -8498 0
c Var 'aux379' order represents '16' with '8502'
-8500 8502 0
c Var 'aux379' direct represents '16' with '8503'
8500 -8502 8503 0
-8503 8502 0
-8503 -8500 0
c Var 'aux379' order represents '17' with '8504'
-8502 8504 0
c Var 'aux379' direct represents '17' with '8505'
8502 -8504 8505 0
-8505 8504 0
-8505 -8502 0
c Var 'aux379' direct represents '18' with '-8504'
8471 8473 8475 8477 8479 8481 8483 8485 8487 8489 8491 8493 8495 8497 8499 8501 8503 8505 -8504 0
c Encoding variable: aux380 with domain: int(0..18) (representing constraint (aux5 + aux2))
c Both direct and order encoding.
c Var 'aux380' order represents '0' with '8506'
c Var 'aux380' direct represents '0' with '8506'
c Var 'aux380' order represents '1' with '8507'
-8506 8507 0
c Var 'aux380' direct represents '1' with '8508'
8506 -8507 8508 0
-8508 8507 0
-8508 -8506 0
c Var 'aux380' order represents '2' with '8509'
-8507 8509 0
c Var 'aux380' direct represents '2' with '8510'
8507 -8509 8510 0
-8510 8509 0
-8510 -8507 0
c Var 'aux380' order represents '3' with '8511'
-8509 8511 0
c Var 'aux380' direct represents '3' with '8512'
8509 -8511 8512 0
-8512 8511 0
-8512 -8509 0
c Var 'aux380' order represents '4' with '8513'
-8511 8513 0
c Var 'aux380' direct represents '4' with '8514'
8511 -8513 8514 0
-8514 8513 0
-8514 -8511 0
c Var 'aux380' order represents '5' with '8515'
-8513 8515 0
c Var 'aux380' direct represents '5' with '8516'
8513 -8515 8516 0
-8516 8515 0
-8516 -8513 0
c Var 'aux380' order represents '6' with '8517'
-8515 8517 0
c Var 'aux380' direct represents '6' with '8518'
8515 -8517 8518 0
-8518 8517 0
-8518 -8515 0
c Var 'aux380' order represents '7' with '8519'
-8517 8519 0
c Var 'aux380' direct represents '7' with '8520'
8517 -8519 8520 0
-8520 8519 0
-8520 -8517 0
c Var 'aux380' order represents '8' with '8521'
-8519 8521 0
c Var 'aux380' direct represents '8' with '8522'
8519 -8521 8522 0
-8522 8521 0
-8522 -8519 0
c Var 'aux380' order represents '9' with '8523'
-8521 8523 0
c Var 'aux380' direct represents '9' with '8524'
8521 -8523 8524 0
-8524 8523 0
-8524 -8521 0
c Var 'aux380' order represents '10' with '8525'
-8523 8525 0
c Var 'aux380' direct represents '10' with '8526'
8523 -8525 8526 0
-8526 8525 0
-8526 -8523 0
c Var 'aux380' order represents '11' with '8527'
-8525 8527 0
c Var 'aux380' direct represents '11' with '8528'
8525 -8527 8528 0
-8528 8527 0
-8528 -8525 0
c Var 'aux380' order represents '12' with '8529'
-8527 8529 0
c Var 'aux380' direct represents '12' with '8530'
8527 -8529 8530 0
-8530 8529 0
-8530 -8527 0
c Var 'aux380' order represents '13' with '8531'
-8529 8531 0
c Var 'aux380' direct represents '13' with '8532'
8529 -8531 8532 0
-8532 8531 0
-8532 -8529 0
c Var 'aux380' order represents '14' with '8533'
-8531 8533 0
c Var 'aux380' direct represents '14' with '8534'
8531 -8533 8534 0
-8534 8533 0
-8534 -8531 0
c Var 'aux380' order represents '15' with '8535'
-8533 8535 0
c Var 'aux380' direct represents '15' with '8536'
8533 -8535 8536 0
-8536 8535 0
-8536 -8533 0
c Var 'aux380' order represents '16' with '8537'
-8535 8537 0
c Var 'aux380' direct represents '16' with '8538'
8535 -8537 8538 0
-8538 8537 0
-8538 -8535 0
c Var 'aux380' order represents '17' with '8539'
-8537 8539 0
c Var 'aux380' direct represents '17' with '8540'
8537 -8539 8540 0
-8540 8539 0
-8540 -8537 0
c Var 'aux380' direct represents '18' with '-8539'
8506 8508 8510 8512 8514 8516 8518 8520 8522 8524 8526 8528 8530 8532 8534 8536 8538 8540 -8539 0
c Encoding variable: aux381 with domain: int(0..18) (representing constraint (aux4 + aux3))
c Both direct and order encoding.
c Var 'aux381' order represents '0' with '8541'
c Var 'aux381' direct represents '0' with '8541'
c Var 'aux381' order represents '1' with '8542'
-8541 8542 0
c Var 'aux381' direct represents '1' with '8543'
8541 -8542 8543 0
-8543 8542 0
-8543 -8541 0
c Var 'aux381' order represents '2' with '8544'
-8542 8544 0
c Var 'aux381' direct represents '2' with '8545'
8542 -8544 8545 0
-8545 8544 0
-8545 -8542 0
c Var 'aux381' order represents '3' with '8546'
-8544 8546 0
c Var 'aux381' direct represents '3' with '8547'
8544 -8546 8547 0
-8547 8546 0
-8547 -8544 0
c Var 'aux381' order represents '4' with '8548'
-8546 8548 0
c Var 'aux381' direct represents '4' with '8549'
8546 -8548 8549 0
-8549 8548 0
-8549 -8546 0
c Var 'aux381' order represents '5' with '8550'
-8548 8550 0
c Var 'aux381' direct represents '5' with '8551'
8548 -8550 8551 0
-8551 8550 0
-8551 -8548 0
c Var 'aux381' order represents '6' with '8552'
-8550 8552 0
c Var 'aux381' direct represents '6' with '8553'
8550 -8552 8553 0
-8553 8552 0
-8553 -8550 0
c Var 'aux381' order represents '7' with '8554'
-8552 8554 0
c Var 'aux381' direct represents '7' with '8555'
8552 -8554 8555 0
-8555 8554 0
-8555 -8552 0
c Var 'aux381' order represents '8' with '8556'
-8554 8556 0
c Var 'aux381' direct represents '8' with '8557'
8554 -8556 8557 0
-8557 8556 0
-8557 -8554 0
c Var 'aux381' order represents '9' with '8558'
-8556 8558 0
c Var 'aux381' direct represents '9' with '8559'
8556 -8558 8559 0
-8559 8558 0
-8559 -8556 0
c Var 'aux381' order represents '10' with '8560'
-8558 8560 0
c Var 'aux381' direct represents '10' with '8561'
8558 -8560 8561 0
-8561 8560 0
-8561 -8558 0
c Var 'aux381' order represents '11' with '8562'
-8560 8562 0
c Var 'aux381' direct represents '11' with '8563'
8560 -8562 8563 0
-8563 8562 0
-8563 -8560 0
c Var 'aux381' order represents '12' with '8564'
-8562 8564 0
c Var 'aux381' direct represents '12' with '8565'
8562 -8564 8565 0
-8565 8564 0
-8565 -8562 0
c Var 'aux381' order represents '13' with '8566'
-8564 8566 0
c Var 'aux381' direct represents '13' with '8567'
8564 -8566 8567 0
-8567 8566 0
-8567 -8564 0
c Var 'aux381' order represents '14' with '8568'
-8566 8568 0
c Var 'aux381' direct represents '14' with '8569'
8566 -8568 8569 0
-8569 8568 0
-8569 -8566 0
c Var 'aux381' order represents '15' with '8570'
-8568 8570 0
c Var 'aux381' direct represents '15' with '8571'
8568 -8570 8571 0
-8571 8570 0
-8571 -8568 0
c Var 'aux381' order represents '16' with '8572'
-8570 8572 0
c Var 'aux381' direct represents '16' with '8573'
8570 -8572 8573 0
-8573 8572 0
-8573 -8570 0
c Var 'aux381' order represents '17' with '8574'
-8572 8574 0
c Var 'aux381' direct represents '17' with '8575'
8572 -8574 8575 0
-8575 8574 0
-8575 -8572 0
c Var 'aux381' direct represents '18' with '-8574'
8541 8543 8545 8547 8549 8551 8553 8555 8557 8559 8561 8563 8565 8567 8569 8571 8573 8575 -8574 0
c Encoding variable: aux382 with domain: int(0..26) (representing constraint (aux1 + aux378))
c Both direct and order encoding.
c Var 'aux382' order represents '0' with '8576'
c Var 'aux382' direct represents '0' with '8576'
c Var 'aux382' order represents '1' with '8577'
-8576 8577 0
c Var 'aux382' direct represents '1' with '8578'
8576 -8577 8578 0
-8578 8577 0
-8578 -8576 0
c Var 'aux382' order represents '2' with '8579'
-8577 8579 0
c Var 'aux382' direct represents '2' with '8580'
8577 -8579 8580 0
-8580 8579 0
-8580 -8577 0
c Var 'aux382' order represents '3' with '8581'
-8579 8581 0
c Var 'aux382' direct represents '3' with '8582'
8579 -8581 8582 0
-8582 8581 0
-8582 -8579 0
c Var 'aux382' order represents '4' with '8583'
-8581 8583 0
c Var 'aux382' direct represents '4' with '8584'
8581 -8583 8584 0
-8584 8583 0
-8584 -8581 0
c Var 'aux382' order represents '5' with '8585'
-8583 8585 0
c Var 'aux382' direct represents '5' with '8586'
8583 -8585 8586 0
-8586 8585 0
-8586 -8583 0
c Var 'aux382' order represents '6' with '8587'
-8585 8587 0
c Var 'aux382' direct represents '6' with '8588'
8585 -8587 8588 0
-8588 8587 0
-8588 -8585 0
c Var 'aux382' order represents '7' with '8589'
-8587 8589 0
c Var 'aux382' direct represents '7' with '8590'
8587 -8589 8590 0
-8590 8589 0
-8590 -8587 0
c Var 'aux382' order represents '8' with '8591'
-8589 8591 0
c Var 'aux382' direct represents '8' with '8592'
8589 -8591 8592 0
-8592 8591 0
-8592 -8589 0
c Var 'aux382' order represents '9' with '8593'
-8591 8593 0
c Var 'aux382' direct represents '9' with '8594'
8591 -8593 8594 0
-8594 8593 0
-8594 -8591 0
c Var 'aux382' order represents '10' with '8595'
-8593 8595 0
c Var 'aux382' direct represents '10' with '8596'
8593 -8595 8596 0
-8596 8595 0
-8596 -8593 0
c Var 'aux382' order represents '11' with '8597'
-8595 8597 0
c Var 'aux382' direct represents '11' with '8598'
8595 -8597 8598 0
-8598 8597 0
-8598 -8595 0
c Var 'aux382' order represents '12' with '8599'
-8597 8599 0
c Var 'aux382' direct represents '12' with '8600'
8597 -8599 8600 0
-8600 8599 0
-8600 -8597 0
c Var 'aux382' order represents '13' with '8601'
-8599 8601 0
c Var 'aux382' direct represents '13' with '8602'
8599 -8601 8602 0
-8602 8601 0
-8602 -8599 0
c Var 'aux382' order represents '14' with '8603'
-8601 8603 0
c Var 'aux382' direct represents '14' with '8604'
8601 -8603 8604 0
-8604 8603 0
-8604 -8601 0
c Var 'aux382' order represents '15' with '8605'
-8603 8605 0
c Var 'aux382' direct represents '15' with '8606'
8603 -8605 8606 0
-8606 8605 0
-8606 -8603 0
c Var 'aux382' order represents '16' with '8607'
-8605 8607 0
c Var 'aux382' direct represents '16' with '8608'
8605 -8607 8608 0
-8608 8607 0
-8608 -8605 0
c Var 'aux382' order represents '17' with '8609'
-8607 8609 0
c Var 'aux382' direct represents '17' with '8610'
8607 -8609 8610 0
-8610 8609 0
-8610 -8607 0
c Var 'aux382' order represents '18' with '8611'
-8609 8611 0
c Var 'aux382' direct represents '18' with '8612'
8609 -8611 8612 0
-8612 8611 0
-8612 -8609 0
c Var 'aux382' order represents '19' with '8613'
-8611 8613 0
c Var 'aux382' direct represents '19' with '8614'
8611 -8613 8614 0
-8614 8613 0
-8614 -8611 0
c Var 'aux382' order represents '20' with '8615'
-8613 8615 0
c Var 'aux382' direct represents '20' with '8616'
8613 -8615 8616 0
-8616 8615 0
-8616 -8613 0
c Var 'aux382' order represents '21' with '8617'
-8615 8617 0
c Var 'aux382' direct represents '21' with '8618'
8615 -8617 8618 0
-8618 8617 0
-8618 -8615 0
c Var 'aux382' order represents '22' with '8619'
-8617 8619 0
c Var 'aux382' direct represents '22' with '8620'
8617 -8619 8620 0
-8620 8619 0
-8620 -8617 0
c Var 'aux382' order represents '23' with '8621'
-8619 8621 0
c Var 'aux382' direct represents '23' with '8622'
8619 -8621 8622 0
-8622 8621 0
-8622 -8619 0
c Var 'aux382' order represents '24' with '8623'
-8621 8623 0
c Var 'aux382' direct represents '24' with '8624'
8621 -8623 8624 0
-8624 8623 0
-8624 -8621 0
c Var 'aux382' order represents '25' with '8625'
-8623 8625 0
c Var 'aux382' direct represents '25' with '8626'
8623 -8625 8626 0
-8626 8625 0
-8626 -8623 0
c Var 'aux382' direct represents '26' with '-8625'
8576 8578 8580 8582 8584 8586 8588 8590 8592 8594 8596 8598 8600 8602 8604 8606 8608 8610 8612 8614 8616 8618 8620 8622 8624 8626 -8625 0
c Encoding variable: aux383 with domain: int(0..36) (representing constraint (aux380 + aux381))
c Both direct and order encoding.
c Var 'aux383' order represents '0' with '8627'
c Var 'aux383' direct represents '0' with '8627'
c Var 'aux383' order represents '1' with '8628'
-8627 8628 0
c Var 'aux383' direct represents '1' with '8629'
8627 -8628 8629 0
-8629 8628 0
-8629 -8627 0
c Var 'aux383' order represents '2' with '8630'
-8628 8630 0
c Var 'aux383' direct represents '2' with '8631'
8628 -8630 8631 0
-8631 8630 0
-8631 -8628 0
c Var 'aux383' order represents '3' with '8632'
-8630 8632 0
c Var 'aux383' direct represents '3' with '8633'
8630 -8632 8633 0
-8633 8632 0
-8633 -8630 0
c Var 'aux383' order represents '4' with '8634'
-8632 8634 0
c Var 'aux383' direct represents '4' with '8635'
8632 -8634 8635 0
-8635 8634 0
-8635 -8632 0
c Var 'aux383' order represents '5' with '8636'
-8634 8636 0
c Var 'aux383' direct represents '5' with '8637'
8634 -8636 8637 0
-8637 8636 0
-8637 -8634 0
c Var 'aux383' order represents '6' with '8638'
-8636 8638 0
c Var 'aux383' direct represents '6' with '8639'
8636 -8638 8639 0
-8639 8638 0
-8639 -8636 0
c Var 'aux383' order represents '7' with '8640'
-8638 8640 0
c Var 'aux383' direct represents '7' with '8641'
8638 -8640 8641 0
-8641 8640 0
-8641 -8638 0
c Var 'aux383' order represents '8' with '8642'
-8640 8642 0
c Var 'aux383' direct represents '8' with '8643'
8640 -8642 8643 0
-8643 8642 0
-8643 -8640 0
c Var 'aux383' order represents '9' with '8644'
-8642 8644 0
c Var 'aux383' direct represents '9' with '8645'
8642 -8644 8645 0
-8645 8644 0
-8645 -8642 0
c Var 'aux383' order represents '10' with '8646'
-8644 8646 0
c Var 'aux383' direct represents '10' with '8647'
8644 -8646 8647 0
-8647 8646 0
-8647 -8644 0
c Var 'aux383' order represents '11' with '8648'
-8646 8648 0
c Var 'aux383' direct represents '11' with '8649'
8646 -8648 8649 0
-8649 8648 0
-8649 -8646 0
c Var 'aux383' order represents '12' with '8650'
-8648 8650 0
c Var 'aux383' direct represents '12' with '8651'
8648 -8650 8651 0
-8651 8650 0
-8651 -8648 0
c Var 'aux383' order represents '13' with '8652'
-8650 8652 0
c Var 'aux383' direct represents '13' with '8653'
8650 -8652 8653 0
-8653 8652 0
-8653 -8650 0
c Var 'aux383' order represents '14' with '8654'
-8652 8654 0
c Var 'aux383' direct represents '14' with '8655'
8652 -8654 8655 0
-8655 8654 0
-8655 -8652 0
c Var 'aux383' order represents '15' with '8656'
-8654 8656 0
c Var 'aux383' direct represents '15' with '8657'
8654 -8656 8657 0
-8657 8656 0
-8657 -8654 0
c Var 'aux383' order represents '16' with '8658'
-8656 8658 0
c Var 'aux383' direct represents '16' with '8659'
8656 -8658 8659 0
-8659 8658 0
-8659 -8656 0
c Var 'aux383' order represents '17' with '8660'
-8658 8660 0
c Var 'aux383' direct represents '17' with '8661'
8658 -8660 8661 0
-8661 8660 0
-8661 -8658 0
c Var 'aux383' order represents '18' with '8662'
-8660 8662 0
c Var 'aux383' direct represents '18' with '8663'
8660 -8662 8663 0
-8663 8662 0
-8663 -8660 0
c Var 'aux383' order represents '19' with '8664'
-8662 8664 0
c Var 'aux383' direct represents '19' with '8665'
8662 -8664 8665 0
-8665 8664 0
-8665 -8662 0
c Var 'aux383' order represents '20' with '8666'
-8664 8666 0
c Var 'aux383' direct represents '20' with '8667'
8664 -8666 8667 0
-8667 8666 0
-8667 -8664 0
c Var 'aux383' order represents '21' with '8668'
-8666 8668 0
c Var 'aux383' direct represents '21' with '8669'
8666 -8668 8669 0
-8669 8668 0
-8669 -8666 0
c Var 'aux383' order represents '22' with '8670'
-8668 8670 0
c Var 'aux383' direct represents '22' with '8671'
8668 -8670 8671 0
-8671 8670 0
-8671 -8668 0
c Var 'aux383' order represents '23' with '8672'
-8670 8672 0
c Var 'aux383' direct represents '23' with '8673'
8670 -8672 8673 0
-8673 8672 0
-8673 -8670 0
c Var 'aux383' order represents '24' with '8674'
-8672 8674 0
c Var 'aux383' direct represents '24' with '8675'
8672 -8674 8675 0
-8675 8674 0
-8675 -8672 0
c Var 'aux383' order represents '25' with '8676'
-8674 8676 0
c Var 'aux383' direct represents '25' with '8677'
8674 -8676 8677 0
-8677 8676 0
-8677 -8674 0
c Var 'aux383' order represents '26' with '8678'
-8676 8678 0
c Var 'aux383' direct represents '26' with '8679'
8676 -8678 8679 0
-8679 8678 0
-8679 -8676 0
c Var 'aux383' order represents '27' with '8680'
-8678 8680 0
c Var 'aux383' direct represents '27' with '8681'
8678 -8680 8681 0
-8681 8680 0
-8681 -8678 0
c Var 'aux383' order represents '28' with '8682'
-8680 8682 0
c Var 'aux383' direct represents '28' with '8683'
8680 -8682 8683 0
-8683 8682 0
-8683 -8680 0
c Var 'aux383' order represents '29' with '8684'
-8682 8684 0
c Var 'aux383' direct represents '29' with '8685'
8682 -8684 8685 0
-8685 8684 0
-8685 -8682 0
c Var 'aux383' order represents '30' with '8686'
-8684 8686 0
c Var 'aux383' direct represents '30' with '8687'
8684 -8686 8687 0
-8687 8686 0
-8687 -8684 0
c Var 'aux383' order represents '31' with '8688'
-8686 8688 0
c Var 'aux383' direct represents '31' with '8689'
8686 -8688 8689 0
-8689 8688 0
-8689 -8686 0
c Var 'aux383' order represents '32' with '8690'
-8688 8690 0
c Var 'aux383' direct represents '32' with '8691'
8688 -8690 8691 0
-8691 8690 0
-8691 -8688 0
c Var 'aux383' order represents '33' with '8692'
-8690 8692 0
c Var 'aux383' direct represents '33' with '8693'
8690 -8692 8693 0
-8693 8692 0
-8693 -8690 0
c Var 'aux383' order represents '34' with '8694'
-8692 8694 0
c Var 'aux383' direct represents '34' with '8695'
8692 -8694 8695 0
-8695 8694 0
-8695 -8692 0
c Var 'aux383' order represents '35' with '8696'
-8694 8696 0
c Var 'aux383' direct represents '35' with '8697'
8694 -8696 8697 0
-8697 8696 0
-8697 -8694 0
c Var 'aux383' direct represents '36' with '-8696'
8627 8629 8631 8633 8635 8637 8639 8641 8643 8645 8647 8649 8651 8653 8655 8657 8659 8661 8663 8665 8667 8669 8671 8673 8675 8677 8679 8681 8683 8685 8687 8689 8691 8693 8695 8697 -8696 0
c Encoding variable: aux384 with domain: int(0..17) (representing constraint (shift(variant_fields_00001_00004_00001, -1) + aux12))
c Both direct and order encoding.
c Var 'aux384' order represents '0' with '8698'
c Var 'aux384' direct represents '0' with '8698'
c Var 'aux384' order represents '1' with '8699'
-8698 8699 0
c Var 'aux384' direct represents '1' with '8700'
8698 -8699 8700 0
-8700 8699 0
-8700 -8698 0
c Var 'aux384' order represents '2' with '8701'
-8699 8701 0
c Var 'aux384' direct represents '2' with '8702'
8699 -8701 8702 0
-8702 8701 0
-8702 -8699 0
c Var 'aux384' order represents '3' with '8703'
-8701 8703 0
c Var 'aux384' direct represents '3' with '8704'
8701 -8703 8704 0
-8704 8703 0
-8704 -8701 0
c Var 'aux384' order represents '4' with '8705'
-8703 8705 0
c Var 'aux384' direct represents '4' with '8706'
8703 -8705 8706 0
-8706 8705 0
-8706 -8703 0
c Var 'aux384' order represents '5' with '8707'
-8705 8707 0
c Var 'aux384' direct represents '5' with '8708'
8705 -8707 8708 0
-8708 8707 0
-8708 -8705 0
c Var 'aux384' order represents '6' with '8709'
-8707 8709 0
c Var 'aux384' direct represents '6' with '8710'
8707 -8709 8710 0
-8710 8709 0
-8710 -8707 0
c Var 'aux384' order represents '7' with '8711'
-8709 8711 0
c Var 'aux384' direct represents '7' with '8712'
8709 -8711 8712 0
-8712 8711 0
-8712 -8709 0
c Var 'aux384' order represents '8' with '8713'
-8711 8713 0
c Var 'aux384' direct represents '8' with '8714'
8711 -8713 8714 0
-8714 8713 0
-8714 -8711 0
c Var 'aux384' order represents '9' with '8715'
-8713 8715 0
c Var 'aux384' direct represents '9' with '8716'
8713 -8715 8716 0
-8716 8715 0
-8716 -8713 0
c Var 'aux384' order represents '10' with '8717'
-8715 8717 0
c Var 'aux384' direct represents '10' with '8718'
8715 -8717 8718 0
-8718 8717 0
-8718 -8715 0
c Var 'aux384' order represents '11' with '8719'
-8717 8719 0
c Var 'aux384' direct represents '11' with '8720'
8717 -8719 8720 0
-8720 8719 0
-8720 -8717 0
c Var 'aux384' order represents '12' with '8721'
-8719 8721 0
c Var 'aux384' direct represents '12' with '8722'
8719 -8721 8722 0
-8722 8721 0
-8722 -8719 0
c Var 'aux384' order represents '13' with '8723'
-8721 8723 0
c Var 'aux384' direct represents '13' with '8724'
8721 -8723 8724 0
-8724 8723 0
-8724 -8721 0
c Var 'aux384' order represents '14' with '8725'
-8723 8725 0
c Var 'aux384' direct represents '14' with '8726'
8723 -8725 8726 0
-8726 8725 0
-8726 -8723 0
c Var 'aux384' order represents '15' with '8727'
-8725 8727 0
c Var 'aux384' direct represents '15' with '8728'
8725 -8727 8728 0
-8728 8727 0
-8728 -8725 0
c Var 'aux384' order represents '16' with '8729'
-8727 8729 0
c Var 'aux384' direct represents '16' with '8730'
8727 -8729 8730 0
-8730 8729 0
-8730 -8727 0
c Var 'aux384' direct represents '17' with '-8729'
8698 8700 8702 8704 8706 8708 8710 8712 8714 8716 8718 8720 8722 8724 8726 8728 8730 -8729 0
c Encoding variable: aux385 with domain: int(0..18) (representing constraint (aux16 + aux9))
c Both direct and order encoding.
c Var 'aux385' order represents '0' with '8731'
c Var 'aux385' direct represents '0' with '8731'
c Var 'aux385' order represents '1' with '8732'
-8731 8732 0
c Var 'aux385' direct represents '1' with '8733'
8731 -8732 8733 0
-8733 8732 0
-8733 -8731 0
c Var 'aux385' order represents '2' with '8734'
-8732 8734 0
c Var 'aux385' direct represents '2' with '8735'
8732 -8734 8735 0
-8735 8734 0
-8735 -8732 0
c Var 'aux385' order represents '3' with '8736'
-8734 8736 0
c Var 'aux385' direct represents '3' with '8737'
8734 -8736 8737 0
-8737 8736 0
-8737 -8734 0
c Var 'aux385' order represents '4' with '8738'
-8736 8738 0
c Var 'aux385' direct represents '4' with '8739'
8736 -8738 8739 0
-8739 8738 0
-8739 -8736 0
c Var 'aux385' order represents '5' with '8740'
-8738 8740 0
c Var 'aux385' direct represents '5' with '8741'
8738 -8740 8741 0
-8741 8740 0
-8741 -8738 0
c Var 'aux385' order represents '6' with '8742'
-8740 8742 0
c Var 'aux385' direct represents '6' with '8743'
8740 -8742 8743 0
-8743 8742 0
-8743 -8740 0
c Var 'aux385' order represents '7' with '8744'
-8742 8744 0
c Var 'aux385' direct represents '7' with '8745'
8742 -8744 8745 0
-8745 8744 0
-8745 -8742 0
c Var 'aux385' order represents '8' with '8746'
-8744 8746 0
c Var 'aux385' direct represents '8' with '8747'
8744 -8746 8747 0
-8747 8746 0
-8747 -8744 0
c Var 'aux385' order represents '9' with '8748'
-8746 8748 0
c Var 'aux385' direct represents '9' with '8749'
8746 -8748 8749 0
-8749 8748 0
-8749 -8746 0
c Var 'aux385' order represents '10' with '8750'
-8748 8750 0
c Var 'aux385' direct represents '10' with '8751'
8748 -8750 8751 0
-8751 8750 0
-8751 -8748 0
c Var 'aux385' order represents '11' with '8752'
-8750 8752 0
c Var 'aux385' direct represents '11' with '8753'
8750 -8752 8753 0
-8753 8752 0
-8753 -8750 0
c Var 'aux385' order represents '12' with '8754'
-8752 8754 0
c Var 'aux385' direct represents '12' with '8755'
8752 -8754 8755 0
-8755 8754 0
-8755 -8752 0
c Var 'aux385' order represents '13' with '8756'
-8754 8756 0
c Var 'aux385' direct represents '13' with '8757'
8754 -8756 8757 0
-8757 8756 0
-8757 -8754 0
c Var 'aux385' order represents '14' with '8758'
-8756 8758 0
c Var 'aux385' direct represents '14' with '8759'
8756 -8758 8759 0
-8759 8758 0
-8759 -8756 0
c Var 'aux385' order represents '15' with '8760'
-8758 8760 0
c Var 'aux385' direct represents '15' with '8761'
8758 -8760 8761 0
-8761 8760 0
-8761 -8758 0
c Var 'aux385' order represents '16' with '8762'
-8760 8762 0
c Var 'aux385' direct represents '16' with '8763'
8760 -8762 8763 0
-8763 8762 0
-8763 -8760 0
c Var 'aux385' order represents '17' with '8764'
-8762 8764 0
c Var 'aux385' direct represents '17' with '8765'
8762 -8764 8765 0
-8765 8764 0
-8765 -8762 0
c Var 'aux385' direct represents '18' with '-8764'
8731 8733 8735 8737 8739 8741 8743 8745 8747 8749 8751 8753 8755 8757 8759 8761 8763 8765 -8764 0
c Encoding variable: aux386 with domain: int(0..18) (representing constraint (aux15 + aux10))
c Both direct and order encoding.
c Var 'aux386' order represents '0' with '8766'
c Var 'aux386' direct represents '0' with '8766'
c Var 'aux386' order represents '1' with '8767'
-8766 8767 0
c Var 'aux386' direct represents '1' with '8768'
8766 -8767 8768 0
-8768 8767 0
-8768 -8766 0
c Var 'aux386' order represents '2' with '8769'
-8767 8769 0
c Var 'aux386' direct represents '2' with '8770'
8767 -8769 8770 0
-8770 8769 0
-8770 -8767 0
c Var 'aux386' order represents '3' with '8771'
-8769 8771 0
c Var 'aux386' direct represents '3' with '8772'
8769 -8771 8772 0
-8772 8771 0
-8772 -8769 0
c Var 'aux386' order represents '4' with '8773'
-8771 8773 0
c Var 'aux386' direct represents '4' with '8774'
8771 -8773 8774 0
-8774 8773 0
-8774 -8771 0
c Var 'aux386' order represents '5' with '8775'
-8773 8775 0
c Var 'aux386' direct represents '5' with '8776'
8773 -8775 8776 0
-8776 8775 0
-8776 -8773 0
c Var 'aux386' order represents '6' with '8777'
-8775 8777 0
c Var 'aux386' direct represents '6' with '8778'
8775 -8777 8778 0
-8778 8777 0
-8778 -8775 0
c Var 'aux386' order represents '7' with '8779'
-8777 8779 0
c Var 'aux386' direct represents '7' with '8780'
8777 -8779 8780 0
-8780 8779 0
-8780 -8777 0
c Var 'aux386' order represents '8' with '8781'
-8779 8781 0
c Var 'aux386' direct represents '8' with '8782'
8779 -8781 8782 0
-8782 8781 0
-8782 -8779 0
c Var 'aux386' order represents '9' with '8783'
-8781 8783 0
c Var 'aux386' direct represents '9' with '8784'
8781 -8783 8784 0
-8784 8783 0
-8784 -8781 0
c Var 'aux386' order represents '10' with '8785'
-8783 8785 0
c Var 'aux386' direct represents '10' with '8786'
8783 -8785 8786 0
-8786 8785 0
-8786 -8783 0
c Var 'aux386' order represents '11' with '8787'
-8785 8787 0
c Var 'aux386' direct represents '11' with '8788'
8785 -8787 8788 0
-8788 8787 0
-8788 -8785 0
c Var 'aux386' order represents '12' with '8789'
-8787 8789 0
c Var 'aux386' direct represents '12' with '8790'
8787 -8789 8790 0
-8790 8789 0
-8790 -8787 0
c Var 'aux386' order represents '13' with '8791'
-8789 8791 0
c Var 'aux386' direct represents '13' with '8792'
8789 -8791 8792 0
-8792 8791 0
-8792 -8789 0
c Var 'aux386' order represents '14' with '8793'
-8791 8793 0
c Var 'aux386' direct represents '14' with '8794'
8791 -8793 8794 0
-8794 8793 0
-8794 -8791 0
c Var 'aux386' order represents '15' with '8795'
-8793 8795 0
c Var 'aux386' direct represents '15' with '8796'
8793 -8795 8796 0
-8796 8795 0
-8796 -8793 0
c Var 'aux386' order represents '16' with '8797'
-8795 8797 0
c Var 'aux386' direct represents '16' with '8798'
8795 -8797 8798 0
-8798 8797 0
-8798 -8795 0
c Var 'aux386' order represents '17' with '8799'
-8797 8799 0
c Var 'aux386' direct represents '17' with '8800'
8797 -8799 8800 0
-8800 8799 0
-8800 -8797 0
c Var 'aux386' direct represents '18' with '-8799'
8766 8768 8770 8772 8774 8776 8778 8780 8782 8784 8786 8788 8790 8792 8794 8796 8798 8800 -8799 0
c Encoding variable: aux387 with domain: int(0..18) (representing constraint (aux14 + aux13))
c Both direct and order encoding.
c Var 'aux387' order represents '0' with '8801'
c Var 'aux387' direct represents '0' with '8801'
c Var 'aux387' order represents '1' with '8802'
-8801 8802 0
c Var 'aux387' direct represents '1' with '8803'
8801 -8802 8803 0
-8803 8802 0
-8803 -8801 0
c Var 'aux387' order represents '2' with '8804'
-8802 8804 0
c Var 'aux387' direct represents '2' with '8805'
8802 -8804 8805 0
-8805 8804 0
-8805 -8802 0
c Var 'aux387' order represents '3' with '8806'
-8804 8806 0
c Var 'aux387' direct represents '3' with '8807'
8804 -8806 8807 0
-8807 8806 0
-8807 -8804 0
c Var 'aux387' order represents '4' with '8808'
-8806 8808 0
c Var 'aux387' direct represents '4' with '8809'
8806 -8808 8809 0
-8809 8808 0
-8809 -8806 0
c Var 'aux387' order represents '5' with '8810'
-8808 8810 0
c Var 'aux387' direct represents '5' with '8811'
8808 -8810 8811 0
-8811 8810 0
-8811 -8808 0
c Var 'aux387' order represents '6' with '8812'
-8810 8812 0
c Var 'aux387' direct represents '6' with '8813'
8810 -8812 8813 0
-8813 8812 0
-8813 -8810 0
c Var 'aux387' order represents '7' with '8814'
-8812 8814 0
c Var 'aux387' direct represents '7' with '8815'
8812 -8814 8815 0
-8815 8814 0
-8815 -8812 0
c Var 'aux387' order represents '8' with '8816'
-8814 8816 0
c Var 'aux387' direct represents '8' with '8817'
8814 -8816 8817 0
-8817 8816 0
-8817 -8814 0
c Var 'aux387' order represents '9' with '8818'
-8816 8818 0
c Var 'aux387' direct represents '9' with '8819'
8816 -8818 8819 0
-8819 8818 0
-8819 -8816 0
c Var 'aux387' order represents '10' with '8820'
-8818 8820 0
c Var 'aux387' direct represents '10' with '8821'
8818 -8820 8821 0
-8821 8820 0
-8821 -8818 0
c Var 'aux387' order represents '11' with '8822'
-8820 8822 0
c Var 'aux387' direct represents '11' with '8823'
8820 -8822 8823 0
-8823 8822 0
-8823 -8820 0
c Var 'aux387' order represents '12' with '8824'
-8822 8824 0
c Var 'aux387' direct represents '12' with '8825'
8822 -8824 8825 0
-8825 8824 0
-8825 -8822 0
c Var 'aux387' order represents '13' with '8826'
-8824 8826 0
c Var 'aux387' direct represents '13' with '8827'
8824 -8826 8827 0
-8827 8826 0
-8827 -8824 0
c Var 'aux387' order represents '14' with '8828'
-8826 8828 0
c Var 'aux387' direct represents '14' with '8829'
8826 -8828 8829 0
-8829 8828 0
-8829 -8826 0
c Var 'aux387' order represents '15' with '8830'
-8828 8830 0
c Var 'aux387' direct represents '15' with '8831'
8828 -8830 8831 0
-8831 8830 0
-8831 -8828 0
c Var 'aux387' order represents '16' with '8832'
-8830 8832 0
c Var 'aux387' direct represents '16' with '8833'
8830 -8832 8833 0
-8833 8832 0
-8833 -8830 0
c Var 'aux387' order represents '17' with '8834'
-8832 8834 0
c Var 'aux387' direct represents '17' with '8835'
8832 -8834 8835 0
-8835 8834 0
-8835 -8832 0
c Var 'aux387' direct represents '18' with '-8834'
8801 8803 8805 8807 8809 8811 8813 8815 8817 8819 8821 8823 8825 8827 8829 8831 8833 8835 -8834 0
c Encoding variable: aux388 with domain: int(0..26) (representing constraint (aux11 + aux384))
c Both direct and order encoding.
c Var 'aux388' order represents '0' with '8836'
c Var 'aux388' direct represents '0' with '8836'
c Var 'aux388' order represents '1' with '8837'
-8836 8837 0
c Var 'aux388' direct represents '1' with '8838'
8836 -8837 8838 0
-8838 8837 0
-8838 -8836 0
c Var 'aux388' order represents '2' with '8839'
-8837 8839 0
c Var 'aux388' direct represents '2' with '8840'
8837 -8839 8840 0
-8840 8839 0
-8840 -8837 0
c Var 'aux388' order represents '3' with '8841'
-8839 8841 0
c Var 'aux388' direct represents '3' with '8842'
8839 -8841 8842 0
-8842 8841 0
-8842 -8839 0
c Var 'aux388' order represents '4' with '8843'
-8841 8843 0
c Var 'aux388' direct represents '4' with '8844'
8841 -8843 8844 0
-8844 8843 0
-8844 -8841 0
c Var 'aux388' order represents '5' with '8845'
-8843 8845 0
c Var 'aux388' direct represents '5' with '8846'
8843 -8845 8846 0
-8846 8845 0
-8846 -8843 0
c Var 'aux388' order represents '6' with '8847'
-8845 8847 0
c Var 'aux388' direct represents '6' with '8848'
8845 -8847 8848 0
-8848 8847 0
-8848 -8845 0
c Var 'aux388' order represents '7' with '8849'
-8847 8849 0
c Var 'aux388' direct represents '7' with '8850'
8847 -8849 8850 0
-8850 8849 0
-8850 -8847 0
c Var 'aux388' order represents '8' with '8851'
-8849 8851 0
c Var 'aux388' direct represents '8' with '8852'
8849 -8851 8852 0
-8852 8851 0
-8852 -8849 0
c Var 'aux388' order represents '9' with '8853'
-8851 8853 0
c Var 'aux388' direct represents '9' with '8854'
8851 -8853 8854 0
-8854 8853 0
-8854 -8851 0
c Var 'aux388' order represents '10' with '8855'
-8853 8855 0
c Var 'aux388' direct represents '10' with '8856'
8853 -8855 8856 0
-8856 8855 0
-8856 -8853 0
c Var 'aux388' order represents '11' with '8857'
-8855 8857 0
c Var 'aux388' direct represents '11' with '8858'
8855 -8857 8858 0
-8858 8857 0
-8858 -8855 0
c Var 'aux388' order represents '12' with '8859'
-8857 8859 0
c Var 'aux388' direct represents '12' with '8860'
8857 -8859 8860 0
-8860 8859 0
-8860 -8857 0
c Var 'aux388' order represents '13' with '8861'
-8859 8861 0
c Var 'aux388' direct represents '13' with '8862'
8859 -8861 8862 0
-8862 8861 0
-8862 -8859 0
c Var 'aux388' order represents '14' with '8863'
-8861 8863 0
c Var 'aux388' direct represents '14' with '8864'
8861 -8863 8864 0
-8864 8863 0
-8864 -8861 0
c Var 'aux388' order represents '15' with '8865'
-8863 8865 0
c Var 'aux388' direct represents '15' with '8866'
8863 -8865 8866 0
-8866 8865 0
-8866 -8863 0
c Var 'aux388' order represents '16' with '8867'
-8865 8867 0
c Var 'aux388' direct represents '16' with '8868'
8865 -8867 8868 0
-8868 8867 0
-8868 -8865 0
c Var 'aux388' order represents '17' with '8869'
-8867 8869 0
c Var 'aux388' direct represents '17' with '8870'
8867 -8869 8870 0
-8870 8869 0
-8870 -8867 0
c Var 'aux388' order represents '18' with '8871'
-8869 8871 0
c Var 'aux388' direct represents '18' with '8872'
8869 -8871 8872 0
-8872 8871 0
-8872 -8869 0
c Var 'aux388' order represents '19' with '8873'
-8871 8873 0
c Var 'aux388' direct represents '19' with '8874'
8871 -8873 8874 0
-8874 8873 0
-8874 -8871 0
c Var 'aux388' order represents '20' with '8875'
-8873 8875 0
c Var 'aux388' direct represents '20' with '8876'
8873 -8875 8876 0
-8876 8875 0
-8876 -8873 0
c Var 'aux388' order represents '21' with '8877'
-8875 8877 0
c Var 'aux388' direct represents '21' with '8878'
8875 -8877 8878 0
-8878 8877 0
-8878 -8875 0
c Var 'aux388' order represents '22' with '8879'
-8877 8879 0
c Var 'aux388' direct represents '22' with '8880'
8877 -8879 8880 0
-8880 8879 0
-8880 -8877 0
c Var 'aux388' order represents '23' with '8881'
-8879 8881 0
c Var 'aux388' direct represents '23' with '8882'
8879 -8881 8882 0
-8882 8881 0
-8882 -8879 0
c Var 'aux388' order represents '24' with '8883'
-8881 8883 0
c Var 'aux388' direct represents '24' with '8884'
8881 -8883 8884 0
-8884 8883 0
-8884 -8881 0
c Var 'aux388' order represents '25' with '8885'
-8883 8885 0
c Var 'aux388' direct represents '25' with '8886'
8883 -8885 8886 0
-8886 8885 0
-8886 -8883 0
c Var 'aux388' direct represents '26' with '-8885'
8836 8838 8840 8842 8844 8846 8848 8850 8852 8854 8856 8858 8860 8862 8864 8866 8868 8870 8872 8874 8876 8878 8880 8882 8884 8886 -8885 0
c Encoding variable: aux389 with domain: int(0..36) (representing constraint (aux386 + aux387))
c Both direct and order encoding.
c Var 'aux389' order represents '0' with '8887'
c Var 'aux389' direct represents '0' with '8887'
c Var 'aux389' order represents '1' with '8888'
-8887 8888 0
c Var 'aux389' direct represents '1' with '8889'
8887 -8888 8889 0
-8889 8888 0
-8889 -8887 0
c Var 'aux389' order represents '2' with '8890'
-8888 8890 0
c Var 'aux389' direct represents '2' with '8891'
8888 -8890 8891 0
-8891 8890 0
-8891 -8888 0
c Var 'aux389' order represents '3' with '8892'
-8890 8892 0
c Var 'aux389' direct represents '3' with '8893'
8890 -8892 8893 0
-8893 8892 0
-8893 -8890 0
c Var 'aux389' order represents '4' with '8894'
-8892 8894 0
c Var 'aux389' direct represents '4' with '8895'
8892 -8894 8895 0
-8895 8894 0
-8895 -8892 0
c Var 'aux389' order represents '5' with '8896'
-8894 8896 0
c Var 'aux389' direct represents '5' with '8897'
8894 -8896 8897 0
-8897 8896 0
-8897 -8894 0
c Var 'aux389' order represents '6' with '8898'
-8896 8898 0
c Var 'aux389' direct represents '6' with '8899'
8896 -8898 8899 0
-8899 8898 0
-8899 -8896 0
c Var 'aux389' order represents '7' with '8900'
-8898 8900 0
c Var 'aux389' direct represents '7' with '8901'
8898 -8900 8901 0
-8901 8900 0
-8901 -8898 0
c Var 'aux389' order represents '8' with '8902'
-8900 8902 0
c Var 'aux389' direct represents '8' with '8903'
8900 -8902 8903 0
-8903 8902 0
-8903 -8900 0
c Var 'aux389' order represents '9' with '8904'
-8902 8904 0
c Var 'aux389' direct represents '9' with '8905'
8902 -8904 8905 0
-8905 8904 0
-8905 -8902 0
c Var 'aux389' order represents '10' with '8906'
-8904 8906 0
c Var 'aux389' direct represents '10' with '8907'
8904 -8906 8907 0
-8907 8906 0
-8907 -8904 0
c Var 'aux389' order represents '11' with '8908'
-8906 8908 0
c Var 'aux389' direct represents '11' with '8909'
8906 -8908 8909 0
-8909 8908 0
-8909 -8906 0
c Var 'aux389' order represents '12' with '8910'
-8908 8910 0
c Var 'aux389' direct represents '12' with '8911'
8908 -8910 8911 0
-8911 8910 0
-8911 -8908 0
c Var 'aux389' order represents '13' with '8912'
-8910 8912 0
c Var 'aux389' direct represents '13' with '8913'
8910 -8912 8913 0
-8913 8912 0
-8913 -8910 0
c Var 'aux389' order represents '14' with '8914'
-8912 8914 0
c Var 'aux389' direct represents '14' with '8915'
8912 -8914 8915 0
-8915 8914 0
-8915 -8912 0
c Var 'aux389' order represents '15' with '8916'
-8914 8916 0
c Var 'aux389' direct represents '15' with '8917'
8914 -8916 8917 0
-8917 8916 0
-8917 -8914 0
c Var 'aux389' order represents '16' with '8918'
-8916 8918 0
c Var 'aux389' direct represents '16' with '8919'
8916 -8918 8919 0
-8919 8918 0
-8919 -8916 0
c Var 'aux389' order represents '17' with '8920'
-8918 8920 0
c Var 'aux389' direct represents '17' with '8921'
8918 -8920 8921 0
-8921 8920 0
-8921 -8918 0
c Var 'aux389' order represents '18' with '8922'
-8920 8922 0
c Var 'aux389' direct represents '18' with '8923'
8920 -8922 8923 0
-8923 8922 0
-8923 -8920 0
c Var 'aux389' order represents '19' with '8924'
-8922 8924 0
c Var 'aux389' direct represents '19' with '8925'
8922 -8924 8925 0
-8925 8924 0
-8925 -8922 0
c Var 'aux389' order represents '20' with '8926'
-8924 8926 0
c Var 'aux389' direct represents '20' with '8927'
8924 -8926 8927 0
-8927 8926 0
-8927 -8924 0
c Var 'aux389' order represents '21' with '8928'
-8926 8928 0
c Var 'aux389' direct represents '21' with '8929'
8926 -8928 8929 0
-8929 8928 0
-8929 -8926 0
c Var 'aux389' order represents '22' with '8930'
-8928 8930 0
c Var 'aux389' direct represents '22' with '8931'
8928 -8930 8931 0
-8931 8930 0
-8931 -8928 0
c Var 'aux389' order represents '23' with '8932'
-8930 8932 0
c Var 'aux389' direct represents '23' with '8933'
8930 -8932 8933 0
-8933 8932 0
-8933 -8930 0
c Var 'aux389' order represents '24' with '8934'
-8932 8934 0
c Var 'aux389' direct represents '24' with '8935'
8932 -8934 8935 0
-8935 8934 0
-8935 -8932 0
c Var 'aux389' order represents '25' with '8936'
-8934 8936 0
c Var 'aux389' direct represents '25' with '8937'
8934 -8936 8937 0
-8937 8936 0
-8937 -8934 0
c Var 'aux389' order represents '26' with '8938'
-8936 8938 0
c Var 'aux389' direct represents '26' with '8939'
8936 -8938 8939 0
-8939 8938 0
-8939 -8936 0
c Var 'aux389' order represents '27' with '8940'
-8938 8940 0
c Var 'aux389' direct represents '27' with '8941'
8938 -8940 8941 0
-8941 8940 0
-8941 -8938 0
c Var 'aux389' order represents '28' with '8942'
-8940 8942 0
c Var 'aux389' direct represents '28' with '8943'
8940 -8942 8943 0
-8943 8942 0
-8943 -8940 0
c Var 'aux389' order represents '29' with '8944'
-8942 8944 0
c Var 'aux389' direct represents '29' with '8945'
8942 -8944 8945 0
-8945 8944 0
-8945 -8942 0
c Var 'aux389' order represents '30' with '8946'
-8944 8946 0
c Var 'aux389' direct represents '30' with '8947'
8944 -8946 8947 0
-8947 8946 0
-8947 -8944 0
c Var 'aux389' order represents '31' with '8948'
-8946 8948 0
c Var 'aux389' direct represents '31' with '8949'
8946 -8948 8949 0
-8949 8948 0
-8949 -8946 0
c Var 'aux389' order represents '32' with '8950'
-8948 8950 0
c Var 'aux389' direct represents '32' with '8951'
8948 -8950 8951 0
-8951 8950 0
-8951 -8948 0
c Var 'aux389' order represents '33' with '8952'
-8950 8952 0
c Var 'aux389' direct represents '33' with '8953'
8950 -8952 8953 0
-8953 8952 0
-8953 -8950 0
c Var 'aux389' order represents '34' with '8954'
-8952 8954 0
c Var 'aux389' direct represents '34' with '8955'
8952 -8954 8955 0
-8955 8954 0
-8955 -8952 0
c Var 'aux389' order represents '35' with '8956'
-8954 8956 0
c Var 'aux389' direct represents '35' with '8957'
8954 -8956 8957 0
-8957 8956 0
-8957 -8954 0
c Var 'aux389' direct represents '36' with '-8956'
8887 8889 8891 8893 8895 8897 8899 8901 8903 8905 8907 8909 8911 8913 8915 8917 8919 8921 8923 8925 8927 8929 8931 8933 8935 8937 8939 8941 8943 8945 8947 8949 8951 8953 8955 8957 -8956 0
c Encoding variable: aux390 with domain: int(0..17) (representing constraint (shift(variant_fields_00001_00006_00001, -1) + aux25))
c Both direct and order encoding.
c Var 'aux390' order represents '0' with '8958'
c Var 'aux390' direct represents '0' with '8958'
c Var 'aux390' order represents '1' with '8959'
-8958 8959 0
c Var 'aux390' direct represents '1' with '8960'
8958 -8959 8960 0
-8960 8959 0
-8960 -8958 0
c Var 'aux390' order represents '2' with '8961'
-8959 8961 0
c Var 'aux390' direct represents '2' with '8962'
8959 -8961 8962 0
-8962 8961 0
-8962 -8959 0
c Var 'aux390' order represents '3' with '8963'
-8961 8963 0
c Var 'aux390' direct represents '3' with '8964'
8961 -8963 8964 0
-8964 8963 0
-8964 -8961 0
c Var 'aux390' order represents '4' with '8965'
-8963 8965 0
c Var 'aux390' direct represents '4' with '8966'
8963 -8965 8966 0
-8966 8965 0
-8966 -8963 0
c Var 'aux390' order represents '5' with '8967'
-8965 8967 0
c Var 'aux390' direct represents '5' with '8968'
8965 -8967 8968 0
-8968 8967 0
-8968 -8965 0
c Var 'aux390' order represents '6' with '8969'
-8967 8969 0
c Var 'aux390' direct represents '6' with '8970'
8967 -8969 8970 0
-8970 8969 0
-8970 -8967 0
c Var 'aux390' order represents '7' with '8971'
-8969 8971 0
c Var 'aux390' direct represents '7' with '8972'
8969 -8971 8972 0
-8972 8971 0
-8972 -8969 0
c Var 'aux390' order represents '8' with '8973'
-8971 8973 0
c Var 'aux390' direct represents '8' with '8974'
8971 -8973 8974 0
-8974 8973 0
-8974 -8971 0
c Var 'aux390' order represents '9' with '8975'
-8973 8975 0
c Var 'aux390' direct represents '9' with '8976'
8973 -8975 8976 0
-8976 8975 0
-8976 -8973 0
c Var 'aux390' order represents '10' with '8977'
-8975 8977 0
c Var 'aux390' direct represents '10' with '8978'
8975 -8977 8978 0
-8978 8977 0
-8978 -8975 0
c Var 'aux390' order represents '11' with '8979'
-8977 8979 0
c Var 'aux390' direct represents '11' with '8980'
8977 -8979 8980 0
-8980 8979 0
-8980 -8977 0
c Var 'aux390' order represents '12' with '8981'
-8979 8981 0
c Var 'aux390' direct represents '12' with '8982'
8979 -8981 8982 0
-8982 8981 0
-8982 -8979 0
c Var 'aux390' order represents '13' with '8983'
-8981 8983 0
c Var 'aux390' direct represents '13' with '8984'
8981 -8983 8984 0
-8984 8983 0
-8984 -8981 0
c Var 'aux390' order represents '14' with '8985'
-8983 8985 0
c Var 'aux390' direct represents '14' with '8986'
8983 -8985 8986 0
-8986 8985 0
-8986 -8983 0
c Var 'aux390' order represents '15' with '8987'
-8985 8987 0
c Var 'aux390' direct represents '15' with '8988'
8985 -8987 8988 0
-8988 8987 0
-8988 -8985 0
c Var 'aux390' order represents '16' with '8989'
-8987 8989 0
c Var 'aux390' direct represents '16' with '8990'
8987 -8989 8990 0
-8990 8989 0
-8990 -8987 0
c Var 'aux390' direct represents '17' with '-8989'
8958 8960 8962 8964 8966 8968 8970 8972 8974 8976 8978 8980 8982 8984 8986 8988 8990 -8989 0
c Encoding variable: aux391 with domain: int(0..18) (representing constraint (aux24 + aux18))
c Both direct and order encoding.
c Var 'aux391' order represents '0' with '8991'
c Var 'aux391' direct represents '0' with '8991'
c Var 'aux391' order represents '1' with '8992'
-8991 8992 0
c Var 'aux391' direct represents '1' with '8993'
8991 -8992 8993 0
-8993 8992 0
-8993 -8991 0
c Var 'aux391' order represents '2' with '8994'
-8992 8994 0
c Var 'aux391' direct represents '2' with '8995'
8992 -8994 8995 0
-8995 8994 0
-8995 -8992 0
c Var 'aux391' order represents '3' with '8996'
-8994 8996 0
c Var 'aux391' direct represents '3' with '8997'
8994 -8996 8997 0
-8997 8996 0
-8997 -8994 0
c Var 'aux391' order represents '4' with '8998'
-8996 8998 0
c Var 'aux391' direct represents '4' with '8999'
8996 -8998 8999 0
-8999 8998 0
-8999 -8996 0
c Var 'aux391' order represents '5' with '9000'
-8998 9000 0
c Var 'aux391' direct represents '5' with '9001'
8998 -9000 9001 0
-9001 9000 0
-9001 -8998 0
c Var 'aux391' order represents '6' with '9002'
-9000 9002 0
c Var 'aux391' direct represents '6' with '9003'
9000 -9002 9003 0
-9003 9002 0
-9003 -9000 0
c Var 'aux391' order represents '7' with '9004'
-9002 9004 0
c Var 'aux391' direct represents '7' with '9005'
9002 -9004 9005 0
-9005 9004 0
-9005 -9002 0
c Var 'aux391' order represents '8' with '9006'
-9004 9006 0
c Var 'aux391' direct represents '8' with '9007'
9004 -9006 9007 0
-9007 9006 0
-9007 -9004 0
c Var 'aux391' order represents '9' with '9008'
-9006 9008 0
c Var 'aux391' direct represents '9' with '9009'
9006 -9008 9009 0
-9009 9008 0
-9009 -9006 0
c Var 'aux391' order represents '10' with '9010'
-9008 9010 0
c Var 'aux391' direct represents '10' with '9011'
9008 -9010 9011 0
-9011 9010 0
-9011 -9008 0
c Var 'aux391' order represents '11' with '9012'
-9010 9012 0
c Var 'aux391' direct represents '11' with '9013'
9010 -9012 9013 0
-9013 9012 0
-9013 -9010 0
c Var 'aux391' order represents '12' with '9014'
-9012 9014 0
c Var 'aux391' direct represents '12' with '9015'
9012 -9014 9015 0
-9015 9014 0
-9015 -9012 0
c Var 'aux391' order represents '13' with '9016'
-9014 9016 0
c Var 'aux391' direct represents '13' with '9017'
9014 -9016 9017 0
-9017 9016 0
-9017 -9014 0
c Var 'aux391' order represents '14' with '9018'
-9016 9018 0
c Var 'aux391' direct represents '14' with '9019'
9016 -9018 9019 0
-9019 9018 0
-9019 -9016 0
c Var 'aux391' order represents '15' with '9020'
-9018 9020 0
c Var 'aux391' direct represents '15' with '9021'
9018 -9020 9021 0
-9021 9020 0
-9021 -9018 0
c Var 'aux391' order represents '16' with '9022'
-9020 9022 0
c Var 'aux391' direct represents '16' with '9023'
9020 -9022 9023 0
-9023 9022 0
-9023 -9020 0
c Var 'aux391' order represents '17' with '9024'
-9022 9024 0
c Var 'aux391' direct represents '17' with '9025'
9022 -9024 9025 0
-9025 9024 0
-9025 -9022 0
c Var 'aux391' direct represents '18' with '-9024'
8991 8993 8995 8997 8999 9001 9003 9005 9007 9009 9011 9013 9015 9017 9019 9021 9023 9025 -9024 0
c Encoding variable: aux392 with domain: int(0..18) (representing constraint (aux23 + aux20))
c Both direct and order encoding.
c Var 'aux392' order represents '0' with '9026'
c Var 'aux392' direct represents '0' with '9026'
c Var 'aux392' order represents '1' with '9027'
-9026 9027 0
c Var 'aux392' direct represents '1' with '9028'
9026 -9027 9028 0
-9028 9027 0
-9028 -9026 0
c Var 'aux392' order represents '2' with '9029'
-9027 9029 0
c Var 'aux392' direct represents '2' with '9030'
9027 -9029 9030 0
-9030 9029 0
-9030 -9027 0
c Var 'aux392' order represents '3' with '9031'
-9029 9031 0
c Var 'aux392' direct represents '3' with '9032'
9029 -9031 9032 0
-9032 9031 0
-9032 -9029 0
c Var 'aux392' order represents '4' with '9033'
-9031 9033 0
c Var 'aux392' direct represents '4' with '9034'
9031 -9033 9034 0
-9034 9033 0
-9034 -9031 0
c Var 'aux392' order represents '5' with '9035'
-9033 9035 0
c Var 'aux392' direct represents '5' with '9036'
9033 -9035 9036 0
-9036 9035 0
-9036 -9033 0
c Var 'aux392' order represents '6' with '9037'
-9035 9037 0
c Var 'aux392' direct represents '6' with '9038'
9035 -9037 9038 0
-9038 9037 0
-9038 -9035 0
c Var 'aux392' order represents '7' with '9039'
-9037 9039 0
c Var 'aux392' direct represents '7' with '9040'
9037 -9039 9040 0
-9040 9039 0
-9040 -9037 0
c Var 'aux392' order represents '8' with '9041'
-9039 9041 0
c Var 'aux392' direct represents '8' with '9042'
9039 -9041 9042 0
-9042 9041 0
-9042 -9039 0
c Var 'aux392' order represents '9' with '9043'
-9041 9043 0
c Var 'aux392' direct represents '9' with '9044'
9041 -9043 9044 0
-9044 9043 0
-9044 -9041 0
c Var 'aux392' order represents '10' with '9045'
-9043 9045 0
c Var 'aux392' direct represents '10' with '9046'
9043 -9045 9046 0
-9046 9045 0
-9046 -9043 0
c Var 'aux392' order represents '11' with '9047'
-9045 9047 0
c Var 'aux392' direct represents '11' with '9048'
9045 -9047 9048 0
-9048 9047 0
-9048 -9045 0
c Var 'aux392' order represents '12' with '9049'
-9047 9049 0
c Var 'aux392' direct represents '12' with '9050'
9047 -9049 9050 0
-9050 9049 0
-9050 -9047 0
c Var 'aux392' order represents '13' with '9051'
-9049 9051 0
c Var 'aux392' direct represents '13' with '9052'
9049 -9051 9052 0
-9052 9051 0
-9052 -9049 0
c Var 'aux392' order represents '14' with '9053'
-9051 9053 0
c Var 'aux392' direct represents '14' with '9054'
9051 -9053 9054 0
-9054 9053 0
-9054 -9051 0
c Var 'aux392' order represents '15' with '9055'
-9053 9055 0
c Var 'aux392' direct represents '15' with '9056'
9053 -9055 9056 0
-9056 9055 0
-9056 -9053 0
c Var 'aux392' order represents '16' with '9057'
-9055 9057 0
c Var 'aux392' direct represents '16' with '9058'
9055 -9057 9058 0
-9058 9057 0
-9058 -9055 0
c Var 'aux392' order represents '17' with '9059'
-9057 9059 0
c Var 'aux392' direct represents '17' with '9060'
9057 -9059 9060 0
-9060 9059 0
-9060 -9057 0
c Var 'aux392' direct represents '18' with '-9059'
9026 9028 9030 9032 9034 9036 9038 9040 9042 9044 9046 9048 9050 9052 9054 9056 9058 9060 -9059 0
c Encoding variable: aux393 with domain: int(0..18) (representing constraint (aux22 + aux21))
c Both direct and order encoding.
c Var 'aux393' order represents '0' with '9061'
c Var 'aux393' direct represents '0' with '9061'
c Var 'aux393' order represents '1' with '9062'
-9061 9062 0
c Var 'aux393' direct represents '1' with '9063'
9061 -9062 9063 0
-9063 9062 0
-9063 -9061 0
c Var 'aux393' order represents '2' with '9064'
-9062 9064 0
c Var 'aux393' direct represents '2' with '9065'
9062 -9064 9065 0
-9065 9064 0
-9065 -9062 0
c Var 'aux393' order represents '3' with '9066'
-9064 9066 0
c Var 'aux393' direct represents '3' with '9067'
9064 -9066 9067 0
-9067 9066 0
-9067 -9064 0
c Var 'aux393' order represents '4' with '9068'
-9066 9068 0
c Var 'aux393' direct represents '4' with '9069'
9066 -9068 9069 0
-9069 9068 0
-9069 -9066 0
c Var 'aux393' order represents '5' with '9070'
-9068 9070 0
c Var 'aux393' direct represents '5' with '9071'
9068 -9070 9071 0
-9071 9070 0
-9071 -9068 0
c Var 'aux393' order represents '6' with '9072'
-9070 9072 0
c Var 'aux393' direct represents '6' with '9073'
9070 -9072 9073 0
-9073 9072 0
-9073 -9070 0
c Var 'aux393' order represents '7' with '9074'
-9072 9074 0
c Var 'aux393' direct represents '7' with '9075'
9072 -9074 9075 0
-9075 9074 0
-9075 -9072 0
c Var 'aux393' order represents '8' with '9076'
-9074 9076 0
c Var 'aux393' direct represents '8' with '9077'
9074 -9076 9077 0
-9077 9076 0
-9077 -9074 0
c Var 'aux393' order represents '9' with '9078'
-9076 9078 0
c Var 'aux393' direct represents '9' with '9079'
9076 -9078 9079 0
-9079 9078 0
-9079 -9076 0
c Var 'aux393' order represents '10' with '9080'
-9078 9080 0
c Var 'aux393' direct represents '10' with '9081'
9078 -9080 9081 0
-9081 9080 0
-9081 -9078 0
c Var 'aux393' order represents '11' with '9082'
-9080 9082 0
c Var 'aux393' direct represents '11' with '9083'
9080 -9082 9083 0
-9083 9082 0
-9083 -9080 0
c Var 'aux393' order represents '12' with '9084'
-9082 9084 0
c Var 'aux393' direct represents '12' with '9085'
9082 -9084 9085 0
-9085 9084 0
-9085 -9082 0
c Var 'aux393' order represents '13' with '9086'
-9084 9086 0
c Var 'aux393' direct represents '13' with '9087'
9084 -9086 9087 0
-9087 9086 0
-9087 -9084 0
c Var 'aux393' order represents '14' with '9088'
-9086 9088 0
c Var 'aux393' direct represents '14' with '9089'
9086 -9088 9089 0
-9089 9088 0
-9089 -9086 0
c Var 'aux393' order represents '15' with '9090'
-9088 9090 0
c Var 'aux393' direct represents '15' with '9091'
9088 -9090 9091 0
-9091 9090 0
-9091 -9088 0
c Var 'aux393' order represents '16' with '9092'
-9090 9092 0
c Var 'aux393' direct represents '16' with '9093'
9090 -9092 9093 0
-9093 9092 0
-9093 -9090 0
c Var 'aux393' order represents '17' with '9094'
-9092 9094 0
c Var 'aux393' direct represents '17' with '9095'
9092 -9094 9095 0
-9095 9094 0
-9095 -9092 0
c Var 'aux393' direct represents '18' with '-9094'
9061 9063 9065 9067 9069 9071 9073 9075 9077 9079 9081 9083 9085 9087 9089 9091 9093 9095 -9094 0
c Encoding variable: aux394 with domain: int(0..26) (representing constraint (aux19 + aux390))
c Both direct and order encoding.
c Var 'aux394' order represents '0' with '9096'
c Var 'aux394' direct represents '0' with '9096'
c Var 'aux394' order represents '1' with '9097'
-9096 9097 0
c Var 'aux394' direct represents '1' with '9098'
9096 -9097 9098 0
-9098 9097 0
-9098 -9096 0
c Var 'aux394' order represents '2' with '9099'
-9097 9099 0
c Var 'aux394' direct represents '2' with '9100'
9097 -9099 9100 0
-9100 9099 0
-9100 -9097 0
c Var 'aux394' order represents '3' with '9101'
-9099 9101 0
c Var 'aux394' direct represents '3' with '9102'
9099 -9101 9102 0
-9102 9101 0
-9102 -9099 0
c Var 'aux394' order represents '4' with '9103'
-9101 9103 0
c Var 'aux394' direct represents '4' with '9104'
9101 -9103 9104 0
-9104 9103 0
-9104 -9101 0
c Var 'aux394' order represents '5' with '9105'
-9103 9105 0
c Var 'aux394' direct represents '5' with '9106'
9103 -9105 9106 0
-9106 9105 0
-9106 -9103 0
c Var 'aux394' order represents '6' with '9107'
-9105 9107 0
c Var 'aux394' direct represents '6' with '9108'
9105 -9107 9108 0
-9108 9107 0
-9108 -9105 0
c Var 'aux394' order represents '7' with '9109'
-9107 9109 0
c Var 'aux394' direct represents '7' with '9110'
9107 -9109 9110 0
-9110 9109 0
-9110 -9107 0
c Var 'aux394' order represents '8' with '9111'
-9109 9111 0
c Var 'aux394' direct represents '8' with '9112'
9109 -9111 9112 0
-9112 9111 0
-9112 -9109 0
c Var 'aux394' order represents '9' with '9113'
-9111 9113 0
c Var 'aux394' direct represents '9' with '9114'
9111 -9113 9114 0
-9114 9113 0
-9114 -9111 0
c Var 'aux394' order represents '10' with '9115'
-9113 9115 0
c Var 'aux394' direct represents '10' with '9116'
9113 -9115 9116 0
-9116 9115 0
-9116 -9113 0
c Var 'aux394' order represents '11' with '9117'
-9115 9117 0
c Var 'aux394' direct represents '11' with '9118'
9115 -9117 9118 0
-9118 9117 0
-9118 -9115 0
c Var 'aux394' order represents '12' with '9119'
-9117 9119 0
c Var 'aux394' direct represents '12' with '9120'
9117 -9119 9120 0
-9120 9119 0
-9120 -9117 0
c Var 'aux394' order represents '13' with '9121'
-9119 9121 0
c Var 'aux394' direct represents '13' with '9122'
9119 -9121 9122 0
-9122 9121 0
-9122 -9119 0
c Var 'aux394' order represents '14' with '9123'
-9121 9123 0
c Var 'aux394' direct represents '14' with '9124'
9121 -9123 9124 0
-9124 9123 0
-9124 -9121 0
c Var 'aux394' order represents '15' with '9125'
-9123 9125 0
c Var 'aux394' direct represents '15' with '9126'
9123 -9125 9126 0
-9126 9125 0
-9126 -9123 0
c Var 'aux394' order represents '16' with '9127'
-9125 9127 0
c Var 'aux394' direct represents '16' with '9128'
9125 -9127 9128 0
-9128 9127 0
-9128 -9125 0
c Var 'aux394' order represents '17' with '9129'
-9127 9129 0
c Var 'aux394' direct represents '17' with '9130'
9127 -9129 9130 0
-9130 9129 0
-9130 -9127 0
c Var 'aux394' order represents '18' with '9131'
-9129 9131 0
c Var 'aux394' direct represents '18' with '9132'
9129 -9131 9132 0
-9132 9131 0
-9132 -9129 0
c Var 'aux394' order represents '19' with '9133'
-9131 9133 0
c Var 'aux394' direct represents '19' with '9134'
9131 -9133 9134 0
-9134 9133 0
-9134 -9131 0
c Var 'aux394' order represents '20' with '9135'
-9133 9135 0
c Var 'aux394' direct represents '20' with '9136'
9133 -9135 9136 0
-9136 9135 0
-9136 -9133 0
c Var 'aux394' order represents '21' with '9137'
-9135 9137 0
c Var 'aux394' direct represents '21' with '9138'
9135 -9137 9138 0
-9138 9137 0
-9138 -9135 0
c Var 'aux394' order represents '22' with '9139'
-9137 9139 0
c Var 'aux394' direct represents '22' with '9140'
9137 -9139 9140 0
-9140 9139 0
-9140 -9137 0
c Var 'aux394' order represents '23' with '9141'
-9139 9141 0
c Var 'aux394' direct represents '23' with '9142'
9139 -9141 9142 0
-9142 9141 0
-9142 -9139 0
c Var 'aux394' order represents '24' with '9143'
-9141 9143 0
c Var 'aux394' direct represents '24' with '9144'
9141 -9143 9144 0
-9144 9143 0
-9144 -9141 0
c Var 'aux394' order represents '25' with '9145'
-9143 9145 0
c Var 'aux394' direct represents '25' with '9146'
9143 -9145 9146 0
-9146 9145 0
-9146 -9143 0
c Var 'aux394' direct represents '26' with '-9145'
9096 9098 9100 9102 9104 9106 9108 9110 9112 9114 9116 9118 9120 9122 9124 9126 9128 9130 9132 9134 9136 9138 9140 9142 9144 9146 -9145 0
c Encoding variable: aux395 with domain: int(0..36) (representing constraint (aux392 + aux393))
c Both direct and order encoding.
c Var 'aux395' order represents '0' with '9147'
c Var 'aux395' direct represents '0' with '9147'
c Var 'aux395' order represents '1' with '9148'
-9147 9148 0
c Var 'aux395' direct represents '1' with '9149'
9147 -9148 9149 0
-9149 9148 0
-9149 -9147 0
c Var 'aux395' order represents '2' with '9150'
-9148 9150 0
c Var 'aux395' direct represents '2' with '9151'
9148 -9150 9151 0
-9151 9150 0
-9151 -9148 0
c Var 'aux395' order represents '3' with '9152'
-9150 9152 0
c Var 'aux395' direct represents '3' with '9153'
9150 -9152 9153 0
-9153 9152 0
-9153 -9150 0
c Var 'aux395' order represents '4' with '9154'
-9152 9154 0
c Var 'aux395' direct represents '4' with '9155'
9152 -9154 9155 0
-9155 9154 0
-9155 -9152 0
c Var 'aux395' order represents '5' with '9156'
-9154 9156 0
c Var 'aux395' direct represents '5' with '9157'
9154 -9156 9157 0
-9157 9156 0
-9157 -9154 0
c Var 'aux395' order represents '6' with '9158'
-9156 9158 0
c Var 'aux395' direct represents '6' with '9159'
9156 -9158 9159 0
-9159 9158 0
-9159 -9156 0
c Var 'aux395' order represents '7' with '9160'
-9158 9160 0
c Var 'aux395' direct represents '7' with '9161'
9158 -9160 9161 0
-9161 9160 0
-9161 -9158 0
c Var 'aux395' order represents '8' with '9162'
-9160 9162 0
c Var 'aux395' direct represents '8' with '9163'
9160 -9162 9163 0
-9163 9162 0
-9163 -9160 0
c Var 'aux395' order represents '9' with '9164'
-9162 9164 0
c Var 'aux395' direct represents '9' with '9165'
9162 -9164 9165 0
-9165 9164 0
-9165 -9162 0
c Var 'aux395' order represents '10' with '9166'
-9164 9166 0
c Var 'aux395' direct represents '10' with '9167'
9164 -9166 9167 0
-9167 9166 0
-9167 -9164 0
c Var 'aux395' order represents '11' with '9168'
-9166 9168 0
c Var 'aux395' direct represents '11' with '9169'
9166 -9168 9169 0
-9169 9168 0
-9169 -9166 0
c Var 'aux395' order represents '12' with '9170'
-9168 9170 0
c Var 'aux395' direct represents '12' with '9171'
9168 -9170 9171 0
-9171 9170 0
-9171 -9168 0
c Var 'aux395' order represents '13' with '9172'
-9170 9172 0
c Var 'aux395' direct represents '13' with '9173'
9170 -9172 9173 0
-9173 9172 0
-9173 -9170 0
c Var 'aux395' order represents '14' with '9174'
-9172 9174 0
c Var 'aux395' direct represents '14' with '9175'
9172 -9174 9175 0
-9175 9174 0
-9175 -9172 0
c Var 'aux395' order represents '15' with '9176'
-9174 9176 0
c Var 'aux395' direct represents '15' with '9177'
9174 -9176 9177 0
-9177 9176 0
-9177 -9174 0
c Var 'aux395' order represents '16' with '9178'
-9176 9178 0
c Var 'aux395' direct represents '16' with '9179'
9176 -9178 9179 0
-9179 9178 0
-9179 -9176 0
c Var 'aux395' order represents '17' with '9180'
-9178 9180 0
c Var 'aux395' direct represents '17' with '9181'
9178 -9180 9181 0
-9181 9180 0
-9181 -9178 0
c Var 'aux395' order represents '18' with '9182'
-9180 9182 0
c Var 'aux395' direct represents '18' with '9183'
9180 -9182 9183 0
-9183 9182 0
-9183 -9180 0
c Var 'aux395' order represents '19' with '9184'
-9182 9184 0
c Var 'aux395' direct represents '19' with '9185'
9182 -9184 9185 0
-9185 9184 0
-9185 -9182 0
c Var 'aux395' order represents '20' with '9186'
-9184 9186 0
c Var 'aux395' direct represents '20' with '9187'
9184 -9186 9187 0
-9187 9186 0
-9187 -9184 0
c Var 'aux395' order represents '21' with '9188'
-9186 9188 0
c Var 'aux395' direct represents '21' with '9189'
9186 -9188 9189 0
-9189 9188 0
-9189 -9186 0
c Var 'aux395' order represents '22' with '9190'
-9188 9190 0
c Var 'aux395' direct represents '22' with '9191'
9188 -9190 9191 0
-9191 9190 0
-9191 -9188 0
c Var 'aux395' order represents '23' with '9192'
-9190 9192 0
c Var 'aux395' direct represents '23' with '9193'
9190 -9192 9193 0
-9193 9192 0
-9193 -9190 0
c Var 'aux395' order represents '24' with '9194'
-9192 9194 0
c Var 'aux395' direct represents '24' with '9195'
9192 -9194 9195 0
-9195 9194 0
-9195 -9192 0
c Var 'aux395' order represents '25' with '9196'
-9194 9196 0
c Var 'aux395' direct represents '25' with '9197'
9194 -9196 9197 0
-9197 9196 0
-9197 -9194 0
c Var 'aux395' order represents '26' with '9198'
-9196 9198 0
c Var 'aux395' direct represents '26' with '9199'
9196 -9198 9199 0
-9199 9198 0
-9199 -9196 0
c Var 'aux395' order represents '27' with '9200'
-9198 9200 0
c Var 'aux395' direct represents '27' with '9201'
9198 -9200 9201 0
-9201 9200 0
-9201 -9198 0
c Var 'aux395' order represents '28' with '9202'
-9200 9202 0
c Var 'aux395' direct represents '28' with '9203'
9200 -9202 9203 0
-9203 9202 0
-9203 -9200 0
c Var 'aux395' order represents '29' with '9204'
-9202 9204 0
c Var 'aux395' direct represents '29' with '9205'
9202 -9204 9205 0
-9205 9204 0
-9205 -9202 0
c Var 'aux395' order represents '30' with '9206'
-9204 9206 0
c Var 'aux395' direct represents '30' with '9207'
9204 -9206 9207 0
-9207 9206 0
-9207 -9204 0
c Var 'aux395' order represents '31' with '9208'
-9206 9208 0
c Var 'aux395' direct represents '31' with '9209'
9206 -9208 9209 0
-9209 9208 0
-9209 -9206 0
c Var 'aux395' order represents '32' with '9210'
-9208 9210 0
c Var 'aux395' direct represents '32' with '9211'
9208 -9210 9211 0
-9211 9210 0
-9211 -9208 0
c Var 'aux395' order represents '33' with '9212'
-9210 9212 0
c Var 'aux395' direct represents '33' with '9213'
9210 -9212 9213 0
-9213 9212 0
-9213 -9210 0
c Var 'aux395' order represents '34' with '9214'
-9212 9214 0
c Var 'aux395' direct represents '34' with '9215'
9212 -9214 9215 0
-9215 9214 0
-9215 -9212 0
c Var 'aux395' order represents '35' with '9216'
-9214 9216 0
c Var 'aux395' direct represents '35' with '9217'
9214 -9216 9217 0
-9217 9216 0
-9217 -9214 0
c Var 'aux395' direct represents '36' with '-9216'
9147 9149 9151 9153 9155 9157 9159 9161 9163 9165 9167 9169 9171 9173 9175 9177 9179 9181 9183 9185 9187 9189 9191 9193 9195 9197 9199 9201 9203 9205 9207 9209 9211 9213 9215 9217 -9216 0
c Encoding variable: aux396 with domain: int(0..17) (representing constraint (shift(variant_fields_00001_00008_00001, -1) + aux30))
c Both direct and order encoding.
c Var 'aux396' order represents '0' with '9218'
c Var 'aux396' direct represents '0' with '9218'
c Var 'aux396' order represents '1' with '9219'
-9218 9219 0
c Var 'aux396' direct represents '1' with '9220'
9218 -9219 9220 0
-9220 9219 0
-9220 -9218 0
c Var 'aux396' order represents '2' with '9221'
-9219 9221 0
c Var 'aux396' direct represents '2' with '9222'
9219 -9221 9222 0
-9222 9221 0
-9222 -9219 0
c Var 'aux396' order represents '3' with '9223'
-9221 9223 0
c Var 'aux396' direct represents '3' with '9224'
9221 -9223 9224 0
-9224 9223 0
-9224 -9221 0
c Var 'aux396' order represents '4' with '9225'
-9223 9225 0
c Var 'aux396' direct represents '4' with '9226'
9223 -9225 9226 0
-9226 9225 0
-9226 -9223 0
c Var 'aux396' order represents '5' with '9227'
-9225 9227 0
c Var 'aux396' direct represents '5' with '9228'
9225 -9227 9228 0
-9228 9227 0
-9228 -9225 0
c Var 'aux396' order represents '6' with '9229'
-9227 9229 0
c Var 'aux396' direct represents '6' with '9230'
9227 -9229 9230 0
-9230 9229 0
-9230 -9227 0
c Var 'aux396' order represents '7' with '9231'
-9229 9231 0
c Var 'aux396' direct represents '7' with '9232'
9229 -9231 9232 0
-9232 9231 0
-9232 -9229 0
c Var 'aux396' order represents '8' with '9233'
-9231 9233 0
c Var 'aux396' direct represents '8' with '9234'
9231 -9233 9234 0
-9234 9233 0
-9234 -9231 0
c Var 'aux396' order represents '9' with '9235'
-9233 9235 0
c Var 'aux396' direct represents '9' with '9236'
9233 -9235 9236 0
-9236 9235 0
-9236 -9233 0
c Var 'aux396' order represents '10' with '9237'
-9235 9237 0
c Var 'aux396' direct represents '10' with '9238'
9235 -9237 9238 0
-9238 9237 0
-9238 -9235 0
c Var 'aux396' order represents '11' with '9239'
-9237 9239 0
c Var 'aux396' direct represents '11' with '9240'
9237 -9239 9240 0
-9240 9239 0
-9240 -9237 0
c Var 'aux396' order represents '12' with '9241'
-9239 9241 0
c Var 'aux396' direct represents '12' with '9242'
9239 -9241 9242 0
-9242 9241 0
-9242 -9239 0
c Var 'aux396' order represents '13' with '9243'
-9241 9243 0
c Var 'aux396' direct represents '13' with '9244'
9241 -9243 9244 0
-9244 9243 0
-9244 -9241 0
c Var 'aux396' order represents '14' with '9245'
-9243 9245 0
c Var 'aux396' direct represents '14' with '9246'
9243 -9245 9246 0
-9246 9245 0
-9246 -9243 0
c Var 'aux396' order represents '15' with '9247'
-9245 9247 0
c Var 'aux396' direct represents '15' with '9248'
9245 -9247 9248 0
-9248 9247 0
-9248 -9245 0
c Var 'aux396' order represents '16' with '9249'
-9247 9249 0
c Var 'aux396' direct represents '16' with '9250'
9247 -9249 9250 0
-9250 9249 0
-9250 -9247 0
c Var 'aux396' direct represents '17' with '-9249'
9218 9220 9222 9224 9226 9228 9230 9232 9234 9236 9238 9240 9242 9244 9246 9248 9250 -9249 0
c Encoding variable: aux397 with domain: int(0..18) (representing constraint (aux34 + aux27))
c Both direct and order encoding.
c Var 'aux397' order represents '0' with '9251'
c Var 'aux397' direct represents '0' with '9251'
c Var 'aux397' order represents '1' with '9252'
-9251 9252 0
c Var 'aux397' direct represents '1' with '9253'
9251 -9252 9253 0
-9253 9252 0
-9253 -9251 0
c Var 'aux397' order represents '2' with '9254'
-9252 9254 0
c Var 'aux397' direct represents '2' with '9255'
9252 -9254 9255 0
-9255 9254 0
-9255 -9252 0
c Var 'aux397' order represents '3' with '9256'
-9254 9256 0
c Var 'aux397' direct represents '3' with '9257'
9254 -9256 9257 0
-9257 9256 0
-9257 -9254 0
c Var 'aux397' order represents '4' with '9258'
-9256 9258 0
c Var 'aux397' direct represents '4' with '9259'
9256 -9258 9259 0
-9259 9258 0
-9259 -9256 0
c Var 'aux397' order represents '5' with '9260'
-9258 9260 0
c Var 'aux397' direct represents '5' with '9261'
9258 -9260 9261 0
-9261 9260 0
-9261 -9258 0
c Var 'aux397' order represents '6' with '9262'
-9260 9262 0
c Var 'aux397' direct represents '6' with '9263'
9260 -9262 9263 0
-9263 9262 0
-9263 -9260 0
c Var 'aux397' order represents '7' with '9264'
-9262 9264 0
c Var 'aux397' direct represents '7' with '9265'
9262 -9264 9265 0
-9265 9264 0
-9265 -9262 0
c Var 'aux397' order represents '8' with '9266'
-9264 9266 0
c Var 'aux397' direct represents '8' with '9267'
9264 -9266 9267 0
-9267 9266 0
-9267 -9264 0
c Var 'aux397' order represents '9' with '9268'
-9266 9268 0
c Var 'aux397' direct represents '9' with '9269'
9266 -9268 9269 0
-9269 9268 0
-9269 -9266 0
c Var 'aux397' order represents '10' with '9270'
-9268 9270 0
c Var 'aux397' direct represents '10' with '9271'
9268 -9270 9271 0
-9271 9270 0
-9271 -9268 0
c Var 'aux397' order represents '11' with '9272'
-9270 9272 0
c Var 'aux397' direct represents '11' with '9273'
9270 -9272 9273 0
-9273 9272 0
-9273 -9270 0
c Var 'aux397' order represents '12' with '9274'
-9272 9274 0
c Var 'aux397' direct represents '12' with '9275'
9272 -9274 9275 0
-9275 9274 0
-9275 -9272 0
c Var 'aux397' order represents '13' with '9276'
-9274 9276 0
c Var 'aux397' direct represents '13' with '9277'
9274 -9276 9277 0
-9277 9276 0
-9277 -9274 0
c Var 'aux397' order represents '14' with '9278'
-9276 9278 0
c Var 'aux397' direct represents '14' with '9279'
9276 -9278 9279 0
-9279 9278 0
-9279 -9276 0
c Var 'aux397' order represents '15' with '9280'
-9278 9280 0
c Var 'aux397' direct represents '15' with '9281'
9278 -9280 9281 0
-9281 9280 0
-9281 -9278 0
c Var 'aux397' order represents '16' with '9282'
-9280 9282 0
c Var 'aux397' direct represents '16' with '9283'
9280 -9282 9283 0
-9283 9282 0
-9283 -9280 0
c Var 'aux397' order represents '17' with '9284'
-9282 9284 0
c Var 'aux397' direct represents '17' with '9285'
9282 -9284 9285 0
-9285 9284 0
-9285 -9282 0
c Var 'aux397' direct represents '18' with '-9284'
9251 9253 9255 9257 9259 9261 9263 9265 9267 9269 9271 9273 9275 9277 9279 9281 9283 9285 -9284 0
c Encoding variable: aux398 with domain: int(0..18) (representing constraint (aux33 + aux28))
c Both direct and order encoding.
c Var 'aux398' order represents '0' with '9286'
c Var 'aux398' direct represents '0' with '9286'
c Var 'aux398' order represents '1' with '9287'
-9286 9287 0
c Var 'aux398' direct represents '1' with '9288'
9286 -9287 9288 0
-9288 9287 0
-9288 -9286 0
c Var 'aux398' order represents '2' with '9289'
-9287 9289 0
c Var 'aux398' direct represents '2' with '9290'
9287 -9289 9290 0
-9290 9289 0
-9290 -9287 0
c Var 'aux398' order represents '3' with '9291'
-9289 9291 0
c Var 'aux398' direct represents '3' with '9292'
9289 -9291 9292 0
-9292 9291 0
-9292 -9289 0
c Var 'aux398' order represents '4' with '9293'
-9291 9293 0
c Var 'aux398' direct represents '4' with '9294'
9291 -9293 9294 0
-9294 9293 0
-9294 -9291 0
c Var 'aux398' order represents '5' with '9295'
-9293 9295 0
c Var 'aux398' direct represents '5' with '9296'
9293 -9295 9296 0
-9296 9295 0
-9296 -9293 0
c Var 'aux398' order represents '6' with '9297'
-9295 9297 0
c Var 'aux398' direct represents '6' with '9298'
9295 -9297 9298 0
-9298 9297 0
-9298 -9295 0
c Var 'aux398' order represents '7' with '9299'
-9297 9299 0
c Var 'aux398' direct represents '7' with '9300'
9297 -9299 9300 0
-9300 9299 0
-9300 -9297 0
c Var 'aux398' order represents '8' with '9301'
-9299 9301 0
c Var 'aux398' direct represents '8' with '9302'
9299 -9301 9302 0
-9302 9301 0
-9302 -9299 0
c Var 'aux398' order represents '9' with '9303'
-9301 9303 0
c Var 'aux398' direct represents '9' with '9304'
9301 -9303 9304 0
-9304 9303 0
-9304 -9301 0
c Var 'aux398' order represents '10' with '9305'
-9303 9305 0
c Var 'aux398' direct represents '10' with '9306'
9303 -9305 9306 0
-9306 9305 0
-9306 -9303 0
c Var 'aux398' order represents '11' with '9307'
-9305 9307 0
c Var 'aux398' direct represents '11' with '9308'
9305 -9307 9308 0
-9308 9307 0
-9308 -9305 0
c Var 'aux398' order represents '12' with '9309'
-9307 9309 0
c Var 'aux398' direct represents '12' with '9310'
9307 -9309 9310 0
-9310 9309 0
-9310 -9307 0
c Var 'aux398' order represents '13' with '9311'
-9309 9311 0
c Var 'aux398' direct represents '13' with '9312'
9309 -9311 9312 0
-9312 9311 0
-9312 -9309 0
c Var 'aux398' order represents '14' with '9313'
-9311 9313 0
c Var 'aux398' direct represents '14' with '9314'
9311 -9313 9314 0
-9314 9313 0
-9314 -9311 0
c Var 'aux398' order represents '15' with '9315'
-9313 9315 0
c Var 'aux398' direct represents '15' with '9316'
9313 -9315 9316 0
-9316 9315 0
-9316 -9313 0
c Var 'aux398' order represents '16' with '9317'
-9315 9317 0
c Var 'aux398' direct represents '16' with '9318'
9315 -9317 9318 0
-9318 9317 0
-9318 -9315 0
c Var 'aux398' order represents '17' with '9319'
-9317 9319 0
c Var 'aux398' direct represents '17' with '9320'
9317 -9319 9320 0
-9320 9319 0
-9320 -9317 0
c Var 'aux398' direct represents '18' with '-9319'
9286 9288 9290 9292 9294 9296 9298 9300 9302 9304 9306 9308 9310 9312 9314 9316 9318 9320 -9319 0
c Encoding variable: aux399 with domain: int(0..18) (representing constraint (aux32 + aux31))
c Both direct and order encoding.
c Var 'aux399' order represents '0' with '9321'
c Var 'aux399' direct represents '0' with '9321'
c Var 'aux399' order represents '1' with '9322'
-9321 9322 0
c Var 'aux399' direct represents '1' with '9323'
9321 -9322 9323 0
-9323 9322 0
-9323 -9321 0
c Var 'aux399' order represents '2' with '9324'
-9322 9324 0
c Var 'aux399' direct represents '2' with '9325'
9322 -9324 9325 0
-9325 9324 0
-9325 -9322 0
c Var 'aux399' order represents '3' with '9326'
-9324 9326 0
c Var 'aux399' direct represents '3' with '9327'
9324 -9326 9327 0
-9327 9326 0
-9327 -9324 0
c Var 'aux399' order represents '4' with '9328'
-9326 9328 0
c Var 'aux399' direct represents '4' with '9329'
9326 -9328 9329 0
-9329 9328 0
-9329 -9326 0
c Var 'aux399' order represents '5' with '9330'
-9328 9330 0
c Var 'aux399' direct represents '5' with '9331'
9328 -9330 9331 0
-9331 9330 0
-9331 -9328 0
c Var 'aux399' order represents '6' with '9332'
-9330 9332 0
c Var 'aux399' direct represents '6' with '9333'
9330 -9332 9333 0
-9333 9332 0
-9333 -9330 0
c Var 'aux399' order represents '7' with '9334'
-9332 9334 0
c Var 'aux399' direct represents '7' with '9335'
9332 -9334 9335 0
-9335 9334 0
-9335 -9332 0
c Var 'aux399' order represents '8' with '9336'
-9334 9336 0
c Var 'aux399' direct represents '8' with '9337'
9334 -9336 9337 0
-9337 9336 0
-9337 -9334 0
c Var 'aux399' order represents '9' with '9338'
-9336 9338 0
c Var 'aux399' direct represents '9' with '9339'
9336 -9338 9339 0
-9339 9338 0
-9339 -9336 0
c Var 'aux399' order represents '10' with '9340'
-9338 9340 0
c Var 'aux399' direct represents '10' with '9341'
9338 -9340 9341 0
-9341 9340 0
-9341 -9338 0
c Var 'aux399' order represents '11' with '9342'
-9340 9342 0
c Var 'aux399' direct represents '11' with '9343'
9340 -9342 9343 0
-9343 9342 0
-9343 -9340 0
c Var 'aux399' order represents '12' with '9344'
-9342 9344 0
c Var 'aux399' direct represents '12' with '9345'
9342 -9344 9345 0
-9345 9344 0
-9345 -9342 0
c Var 'aux399' order represents '13' with '9346'
-9344 9346 0
c Var 'aux399' direct represents '13' with '9347'
9344 -9346 9347 0
-9347 9346 0
-9347 -9344 0
c Var 'aux399' order represents '14' with '9348'
-9346 9348 0
c Var 'aux399' direct represents '14' with '9349'
9346 -9348 9349 0
-9349 9348 0
-9349 -9346 0
c Var 'aux399' order represents '15' with '9350'
-9348 9350 0
c Var 'aux399' direct represents '15' with '9351'
9348 -9350 9351 0
-9351 9350 0
-9351 -9348 0
c Var 'aux399' order represents '16' with '9352'
-9350 9352 0
c Var 'aux399' direct represents '16' with '9353'
9350 -9352 9353 0
-9353 9352 0
-9353 -9350 0
c Var 'aux399' order represents '17' with '9354'
-9352 9354 0
c Var 'aux399' direct represents '17' with '9355'
9352 -9354 9355 0
-9355 9354 0
-9355 -9352 0
c Var 'aux399' direct represents '18' with '-9354'
9321 9323 9325 9327 9329 9331 9333 9335 9337 9339 9341 9343 9345 9347 9349 9351 9353 9355 -9354 0
c Encoding variable: aux400 with domain: int(0..26) (representing constraint (aux29 + aux396))
c Both direct and order encoding.
c Var 'aux400' order represents '0' with '9356'
c Var 'aux400' direct represents '0' with '9356'
c Var 'aux400' order represents '1' with '9357'
-9356 9357 0
c Var 'aux400' direct represents '1' with '9358'
9356 -9357 9358 0
-9358 9357 0
-9358 -9356 0
c Var 'aux400' order represents '2' with '9359'
-9357 9359 0
c Var 'aux400' direct represents '2' with '9360'
9357 -9359 9360 0
-9360 9359 0
-9360 -9357 0
c Var 'aux400' order represents '3' with '9361'
-9359 9361 0
c Var 'aux400' direct represents '3' with '9362'
9359 -9361 9362 0
-9362 9361 0
-9362 -9359 0
c Var 'aux400' order represents '4' with '9363'
-9361 9363 0
c Var 'aux400' direct represents '4' with '9364'
9361 -9363 9364 0
-9364 9363 0
-9364 -9361 0
c Var 'aux400' order represents '5' with '9365'
-9363 9365 0
c Var 'aux400' direct represents '5' with '9366'
9363 -9365 9366 0
-9366 9365 0
-9366 -9363 0
c Var 'aux400' order represents '6' with '9367'
-9365 9367 0
c Var 'aux400' direct represents '6' with '9368'
9365 -9367 9368 0
-9368 9367 0
-9368 -9365 0
c Var 'aux400' order represents '7' with '9369'
-9367 9369 0
c Var 'aux400' direct represents '7' with '9370'
9367 -9369 9370 0
-9370 9369 0
-9370 -9367 0
c Var 'aux400' order represents '8' with '9371'
-9369 9371 0
c Var 'aux400' direct represents '8' with '9372'
9369 -9371 9372 0
-9372 9371 0
-9372 -9369 0
c Var 'aux400' order represents '9' with '9373'
-9371 9373 0
c Var 'aux400' direct represents '9' with '9374'
9371 -9373 9374 0
-9374 9373 0
-9374 -9371 0
c Var 'aux400' order represents '10' with '9375'
-9373 9375 0
c Var 'aux400' direct represents '10' with '9376'
9373 -9375 9376 0
-9376 9375 0
-9376 -9373 0
c Var 'aux400' order represents '11' with '9377'
-9375 9377 0
c Var 'aux400' direct represents '11' with '9378'
9375 -9377 9378 0
-9378 9377 0
-9378 -9375 0
c Var 'aux400' order represents '12' with '9379'
-9377 9379 0
c Var 'aux400' direct represents '12' with '9380'
9377 -9379 9380 0
-9380 9379 0
-9380 -9377 0
c Var 'aux400' order represents '13' with '9381'
-9379 9381 0
c Var 'aux400' direct represents '13' with '9382'
9379 -9381 9382 0
-9382 9381 0
-9382 -9379 0
c Var 'aux400' order represents '14' with '9383'
-9381 9383 0
c Var 'aux400' direct represents '14' with '9384'
9381 -9383 9384 0
-9384 9383 0
-9384 -9381 0
c Var 'aux400' order represents '15' with '9385'
-9383 9385 0
c Var 'aux400' direct represents '15' with '9386'
9383 -9385 9386 0
-9386 9385 0
-9386 -9383 0
c Var 'aux400' order represents '16' with '9387'
-9385 9387 0
c Var 'aux400' direct represents '16' with '9388'
9385 -9387 9388 0
-9388 9387 0
-9388 -9385 0
c Var 'aux400' order represents '17' with '9389'
-9387 9389 0
c Var 'aux400' direct represents '17' with '9390'
9387 -9389 9390 0
-9390 9389 0
-9390 -9387 0
c Var 'aux400' order represents '18' with '9391'
-9389 9391 0
c Var 'aux400' direct represents '18' with '9392'
9389 -9391 9392 0
-9392 9391 0
-9392 -9389 0
c Var 'aux400' order represents '19' with '9393'
-9391 9393 0
c Var 'aux400' direct represents '19' with '9394'
9391 -9393 9394 0
-9394 9393 0
-9394 -9391 0
c Var 'aux400' order represents '20' with '9395'
-9393 9395 0
c Var 'aux400' direct represents '20' with '9396'
9393 -9395 9396 0
-9396 9395 0
-9396 -9393 0
c Var 'aux400' order represents '21' with '9397'
-9395 9397 0
c Var 'aux400' direct represents '21' with '9398'
9395 -9397 9398 0
-9398 9397 0
-9398 -9395 0
c Var 'aux400' order represents '22' with '9399'
-9397 9399 0
c Var 'aux400' direct represents '22' with '9400'
9397 -9399 9400 0
-9400 9399 0
-9400 -9397 0
c Var 'aux400' order represents '23' with '9401'
-9399 9401 0
c Var 'aux400' direct represents '23' with '9402'
9399 -9401 9402 0
-9402 9401 0
-9402 -9399 0
c Var 'aux400' order represents '24' with '9403'
-9401 9403 0
c Var 'aux400' direct represents '24' with '9404'
9401 -9403 9404 0
-9404 9403 0
-9404 -9401 0
c Var 'aux400' order represents '25' with '9405'
-9403 9405 0
c Var 'aux400' direct represents '25' with '9406'
9403 -9405 9406 0
-9406 9405 0
-9406 -9403 0
c Var 'aux400' direct represents '26' with '-9405'
9356 9358 9360 9362 9364 9366 9368 9370 9372 9374 9376 9378 9380 9382 9384 9386 9388 9390 9392 9394 9396 9398 9400 9402 9404 9406 -9405 0
c Encoding variable: aux401 with domain: int(0..36) (representing constraint (aux398 + aux399))
c Both direct and order encoding.
c Var 'aux401' order represents '0' with '9407'
c Var 'aux401' direct represents '0' with '9407'
c Var 'aux401' order represents '1' with '9408'
-9407 9408 0
c Var 'aux401' direct represents '1' with '9409'
9407 -9408 9409 0
-9409 9408 0
-9409 -9407 0
c Var 'aux401' order represents '2' with '9410'
-9408 9410 0
c Var 'aux401' direct represents '2' with '9411'
9408 -9410 9411 0
-9411 9410 0
-9411 -9408 0
c Var 'aux401' order represents '3' with '9412'
-9410 9412 0
c Var 'aux401' direct represents '3' with '9413'
9410 -9412 9413 0
-9413 9412 0
-9413 -9410 0
c Var 'aux401' order represents '4' with '9414'
-9412 9414 0
c Var 'aux401' direct represents '4' with '9415'
9412 -9414 9415 0
-9415 9414 0
-9415 -9412 0
c Var 'aux401' order represents '5' with '9416'
-9414 9416 0
c Var 'aux401' direct represents '5' with '9417'
9414 -9416 9417 0
-9417 9416 0
-9417 -9414 0
c Var 'aux401' order represents '6' with '9418'
-9416 9418 0
c Var 'aux401' direct represents '6' with '9419'
9416 -9418 9419 0
-9419 9418 0
-9419 -9416 0
c Var 'aux401' order represents '7' with '9420'
-9418 9420 0
c Var 'aux401' direct represents '7' with '9421'
9418 -9420 9421 0
-9421 9420 0
-9421 -9418 0
c Var 'aux401' order represents '8' with '9422'
-9420 9422 0
c Var 'aux401' direct represents '8' with '9423'
9420 -9422 9423 0
-9423 9422 0
-9423 -9420 0
c Var 'aux401' order represents '9' with '9424'
-9422 9424 0
c Var 'aux401' direct represents '9' with '9425'
9422 -9424 9425 0
-9425 9424 0
-9425 -9422 0
c Var 'aux401' order represents '10' with '9426'
-9424 9426 0
c Var 'aux401' direct represents '10' with '9427'
9424 -9426 9427 0
-9427 9426 0
-9427 -9424 0
c Var 'aux401' order represents '11' with '9428'
-9426 9428 0
c Var 'aux401' direct represents '11' with '9429'
9426 -9428 9429 0
-9429 9428 0
-9429 -9426 0
c Var 'aux401' order represents '12' with '9430'
-9428 9430 0
c Var 'aux401' direct represents '12' with '9431'
9428 -9430 9431 0
-9431 9430 0
-9431 -9428 0
c Var 'aux401' order represents '13' with '9432'
-9430 9432 0
c Var 'aux401' direct represents '13' with '9433'
9430 -9432 9433 0
-9433 9432 0
-9433 -9430 0
c Var 'aux401' order represents '14' with '9434'
-9432 9434 0
c Var 'aux401' direct represents '14' with '9435'
9432 -9434 9435 0
-9435 9434 0
-9435 -9432 0
c Var 'aux401' order represents '15' with '9436'
-9434 9436 0
c Var 'aux401' direct represents '15' with '9437'
9434 -9436 9437 0
-9437 9436 0
-9437 -9434 0
c Var 'aux401' order represents '16' with '9438'
-9436 9438 0
c Var 'aux401' direct represents '16' with '9439'
9436 -9438 9439 0
-9439 9438 0
-9439 -9436 0
c Var 'aux401' order represents '17' with '9440'
-9438 9440 0
c Var 'aux401' direct represents '17' with '9441'
9438 -9440 9441 0
-9441 9440 0
-9441 -9438 0
c Var 'aux401' order represents '18' with '9442'
-9440 9442 0
c Var 'aux401' direct represents '18' with '9443'
9440 -9442 9443 0
-9443 9442 0
-9443 -9440 0
c Var 'aux401' order represents '19' with '9444'
-9442 9444 0
c Var 'aux401' direct represents '19' with '9445'
9442 -9444 9445 0
-9445 9444 0
-9445 -9442 0
c Var 'aux401' order represents '20' with '9446'
-9444 9446 0
c Var 'aux401' direct represents '20' with '9447'
9444 -9446 9447 0
-9447 9446 0
-9447 -9444 0
c Var 'aux401' order represents '21' with '9448'
-9446 9448 0
c Var 'aux401' direct represents '21' with '9449'
9446 -9448 9449 0
-9449 9448 0
-9449 -9446 0
c Var 'aux401' order represents '22' with '9450'
-9448 9450 0
c Var 'aux401' direct represents '22' with '9451'
9448 -9450 9451 0
-9451 9450 0
-9451 -9448 0
c Var 'aux401' order represents '23' with '9452'
-9450 9452 0
c Var 'aux401' direct represents '23' with '9453'
9450 -9452 9453 0
-9453 9452 0
-9453 -9450 0
c Var 'aux401' order represents '24' with '9454'
-9452 9454 0
c Var 'aux401' direct represents '24' with '9455'
9452 -9454 9455 0
-9455 9454 0
-9455 -9452 0
c Var 'aux401' order represents '25' with '9456'
-9454 9456 0
c Var 'aux401' direct represents '25' with '9457'
9454 -9456 9457 0
-9457 9456 0
-9457 -9454 0
c Var 'aux401' order represents '26' with '9458'
-9456 9458 0
c Var 'aux401' direct represents '26' with '9459'
9456 -9458 9459 0
-9459 9458 0
-9459 -9456 0
c Var 'aux401' order represents '27' with '9460'
-9458 9460 0
c Var 'aux401' direct represents '27' with '9461'
9458 -9460 9461 0
-9461 9460 0
-9461 -9458 0
c Var 'aux401' order represents '28' with '9462'
-9460 9462 0
c Var 'aux401' direct represents '28' with '9463'
9460 -9462 9463 0
-9463 9462 0
-9463 -9460 0
c Var 'aux401' order represents '29' with '9464'
-9462 9464 0
c Var 'aux401' direct represents '29' with '9465'
9462 -9464 9465 0
-9465 9464 0
-9465 -9462 0
c Var 'aux401' order represents '30' with '9466'
-9464 9466 0
c Var 'aux401' direct represents '30' with '9467'
9464 -9466 9467 0
-9467 9466 0
-9467 -9464 0
c Var 'aux401' order represents '31' with '9468'
-9466 9468 0
c Var 'aux401' direct represents '31' with '9469'
9466 -9468 9469 0
-9469 9468 0
-9469 -9466 0
c Var 'aux401' order represents '32' with '9470'
-9468 9470 0
c Var 'aux401' direct represents '32' with '9471'
9468 -9470 9471 0
-9471 9470 0
-9471 -9468 0
c Var 'aux401' order represents '33' with '9472'
-9470 9472 0
c Var 'aux401' direct represents '33' with '9473'
9470 -9472 9473 0
-9473 9472 0
-9473 -9470 0
c Var 'aux401' order represents '34' with '9474'
-9472 9474 0
c Var 'aux401' direct represents '34' with '9475'
9472 -9474 9475 0
-9475 9474 0
-9475 -9472 0
c Var 'aux401' order represents '35' with '9476'
-9474 9476 0
c Var 'aux401' direct represents '35' with '9477'
9474 -9476 9477 0
-9477 9476 0
-9477 -9474 0
c Var 'aux401' direct represents '36' with '-9476'
9407 9409 9411 9413 9415 9417 9419 9421 9423 9425 9427 9429 9431 9433 9435 9437 9439 9441 9443 9445 9447 9449 9451 9453 9455 9457 9459 9461 9463 9465 9467 9469 9471 9473 9475 9477 -9476 0
c Encoding variable: aux402 with domain: int(0..17) (representing constraint (shift(variant_fields_00002_00002_00001, -1) + aux43))
c Both direct and order encoding.
c Var 'aux402' order represents '0' with '9478'
c Var 'aux402' direct represents '0' with '9478'
c Var 'aux402' order represents '1' with '9479'
-9478 9479 0
c Var 'aux402' direct represents '1' with '9480'
9478 -9479 9480 0
-9480 9479 0
-9480 -9478 0
c Var 'aux402' order represents '2' with '9481'
-9479 9481 0
c Var 'aux402' direct represents '2' with '9482'
9479 -9481 9482 0
-9482 9481 0
-9482 -9479 0
c Var 'aux402' order represents '3' with '9483'
-9481 9483 0
c Var 'aux402' direct represents '3' with '9484'
9481 -9483 9484 0
-9484 9483 0
-9484 -9481 0
c Var 'aux402' order represents '4' with '9485'
-9483 9485 0
c Var 'aux402' direct represents '4' with '9486'
9483 -9485 9486 0
-9486 9485 0
-9486 -9483 0
c Var 'aux402' order represents '5' with '9487'
-9485 9487 0
c Var 'aux402' direct represents '5' with '9488'
9485 -9487 9488 0
-9488 9487 0
-9488 -9485 0
c Var 'aux402' order represents '6' with '9489'
-9487 9489 0
c Var 'aux402' direct represents '6' with '9490'
9487 -9489 9490 0
-9490 9489 0
-9490 -9487 0
c Var 'aux402' order represents '7' with '9491'
-9489 9491 0
c Var 'aux402' direct represents '7' with '9492'
9489 -9491 9492 0
-9492 9491 0
-9492 -9489 0
c Var 'aux402' order represents '8' with '9493'
-9491 9493 0
c Var 'aux402' direct represents '8' with '9494'
9491 -9493 9494 0
-9494 9493 0
-9494 -9491 0
c Var 'aux402' order represents '9' with '9495'
-9493 9495 0
c Var 'aux402' direct represents '9' with '9496'
9493 -9495 9496 0
-9496 9495 0
-9496 -9493 0
c Var 'aux402' order represents '10' with '9497'
-9495 9497 0
c Var 'aux402' direct represents '10' with '9498'
9495 -9497 9498 0
-9498 9497 0
-9498 -9495 0
c Var 'aux402' order represents '11' with '9499'
-9497 9499 0
c Var 'aux402' direct represents '11' with '9500'
9497 -9499 9500 0
-9500 9499 0
-9500 -9497 0
c Var 'aux402' order represents '12' with '9501'
-9499 9501 0
c Var 'aux402' direct represents '12' with '9502'
9499 -9501 9502 0
-9502 9501 0
-9502 -9499 0
c Var 'aux402' order represents '13' with '9503'
-9501 9503 0
c Var 'aux402' direct represents '13' with '9504'
9501 -9503 9504 0
-9504 9503 0
-9504 -9501 0
c Var 'aux402' order represents '14' with '9505'
-9503 9505 0
c Var 'aux402' direct represents '14' with '9506'
9503 -9505 9506 0
-9506 9505 0
-9506 -9503 0
c Var 'aux402' order represents '15' with '9507'
-9505 9507 0
c Var 'aux402' direct represents '15' with '9508'
9505 -9507 9508 0
-9508 9507 0
-9508 -9505 0
c Var 'aux402' order represents '16' with '9509'
-9507 9509 0
c Var 'aux402' direct represents '16' with '9510'
9507 -9509 9510 0
-9510 9509 0
-9510 -9507 0
c Var 'aux402' direct represents '17' with '-9509'
9478 9480 9482 9484 9486 9488 9490 9492 9494 9496 9498 9500 9502 9504 9506 9508 9510 -9509 0
c Encoding variable: aux403 with domain: int(0..18) (representing constraint (aux42 + aux36))
c Both direct and order encoding.
c Var 'aux403' order represents '0' with '9511'
c Var 'aux403' direct represents '0' with '9511'
c Var 'aux403' order represents '1' with '9512'
-9511 9512 0
c Var 'aux403' direct represents '1' with '9513'
9511 -9512 9513 0
-9513 9512 0
-9513 -9511 0
c Var 'aux403' order represents '2' with '9514'
-9512 9514 0
c Var 'aux403' direct represents '2' with '9515'
9512 -9514 9515 0
-9515 9514 0
-9515 -9512 0
c Var 'aux403' order represents '3' with '9516'
-9514 9516 0
c Var 'aux403' direct represents '3' with '9517'
9514 -9516 9517 0
-9517 9516 0
-9517 -9514 0
c Var 'aux403' order represents '4' with '9518'
-9516 9518 0
c Var 'aux403' direct represents '4' with '9519'
9516 -9518 9519 0
-9519 9518 0
-9519 -9516 0
c Var 'aux403' order represents '5' with '9520'
-9518 9520 0
c Var 'aux403' direct represents '5' with '9521'
9518 -9520 9521 0
-9521 9520 0
-9521 -9518 0
c Var 'aux403' order represents '6' with '9522'
-9520 9522 0
c Var 'aux403' direct represents '6' with '9523'
9520 -9522 9523 0
-9523 9522 0
-9523 -9520 0
c Var 'aux403' order represents '7' with '9524'
-9522 9524 0
c Var 'aux403' direct represents '7' with '9525'
9522 -9524 9525 0
-9525 9524 0
-9525 -9522 0
c Var 'aux403' order represents '8' with '9526'
-9524 9526 0
c Var 'aux403' direct represents '8' with '9527'
9524 -9526 9527 0
-9527 9526 0
-9527 -9524 0
c Var 'aux403' order represents '9' with '9528'
-9526 9528 0
c Var 'aux403' direct represents '9' with '9529'
9526 -9528 9529 0
-9529 9528 0
-9529 -9526 0
c Var 'aux403' order represents '10' with '9530'
-9528 9530 0
c Var 'aux403' direct represents '10' with '9531'
9528 -9530 9531 0
-9531 9530 0
-9531 -9528 0
c Var 'aux403' order represents '11' with '9532'
-9530 9532 0
c Var 'aux403' direct represents '11' with '9533'
9530 -9532 9533 0
-9533 9532 0
-9533 -9530 0
c Var 'aux403' order represents '12' with '9534'
-9532 9534 0
c Var 'aux403' direct represents '12' with '9535'
9532 -9534 9535 0
-9535 9534 0
-9535 -9532 0
c Var 'aux403' order represents '13' with '9536'
-9534 9536 0
c Var 'aux403' direct represents '13' with '9537'
9534 -9536 9537 0
-9537 9536 0
-9537 -9534 0
c Var 'aux403' order represents '14' with '9538'
-9536 9538 0
c Var 'aux403' direct represents '14' with '9539'
9536 -9538 9539 0
-9539 9538 0
-9539 -9536 0
c Var 'aux403' order represents '15' with '9540'
-9538 9540 0
c Var 'aux403' direct represents '15' with '9541'
9538 -9540 9541 0
-9541 9540 0
-9541 -9538 0
c Var 'aux403' order represents '16' with '9542'
-9540 9542 0
c Var 'aux403' direct represents '16' with '9543'
9540 -9542 9543 0
-9543 9542 0
-9543 -9540 0
c Var 'aux403' order represents '17' with '9544'
-9542 9544 0
c Var 'aux403' direct represents '17' with '9545'
9542 -9544 9545 0
-9545 9544 0
-9545 -9542 0
c Var 'aux403' direct represents '18' with '-9544'
9511 9513 9515 9517 9519 9521 9523 9525 9527 9529 9531 9533 9535 9537 9539 9541 9543 9545 -9544 0
c Encoding variable: aux404 with domain: int(0..18) (representing constraint (aux41 + aux38))
c Both direct and order encoding.
c Var 'aux404' order represents '0' with '9546'
c Var 'aux404' direct represents '0' with '9546'
c Var 'aux404' order represents '1' with '9547'
-9546 9547 0
c Var 'aux404' direct represents '1' with '9548'
9546 -9547 9548 0
-9548 9547 0
-9548 -9546 0
c Var 'aux404' order represents '2' with '9549'
-9547 9549 0
c Var 'aux404' direct represents '2' with '9550'
9547 -9549 9550 0
-9550 9549 0
-9550 -9547 0
c Var 'aux404' order represents '3' with '9551'
-9549 9551 0
c Var 'aux404' direct represents '3' with '9552'
9549 -9551 9552 0
-9552 9551 0
-9552 -9549 0
c Var 'aux404' order represents '4' with '9553'
-9551 9553 0
c Var 'aux404' direct represents '4' with '9554'
9551 -9553 9554 0
-9554 9553 0
-9554 -9551 0
c Var 'aux404' order represents '5' with '9555'
-9553 9555 0
c Var 'aux404' direct represents '5' with '9556'
9553 -9555 9556 0
-9556 9555 0
-9556 -9553 0
c Var 'aux404' order represents '6' with '9557'
-9555 9557 0
c Var 'aux404' direct represents '6' with '9558'
9555 -9557 9558 0
-9558 9557 0
-9558 -9555 0
c Var 'aux404' order represents '7' with '9559'
-9557 9559 0
c Var 'aux404' direct represents '7' with '9560'
9557 -9559 9560 0
-9560 9559 0
-9560 -9557 0
c Var 'aux404' order represents '8' with '9561'
-9559 9561 0
c Var 'aux404' direct represents '8' with '9562'
9559 -9561 9562 0
-9562 9561 0
-9562 -9559 0
c Var 'aux404' order represents '9' with '9563'
-9561 9563 0
c Var 'aux404' direct represents '9' with '9564'
9561 -9563 9564 0
-9564 9563 0
-9564 -9561 0
c Var 'aux404' order represents '10' with '9565'
-9563 9565 0
c Var 'aux404' direct represents '10' with '9566'
9563 -9565 9566 0
-9566 9565 0
-9566 -9563 0
c Var 'aux404' order represents '11' with '9567'
-9565 9567 0
c Var 'aux404' direct represents '11' with '9568'
9565 -9567 9568 0
-9568 9567 0
-9568 -9565 0
c Var 'aux404' order represents '12' with '9569'
-9567 9569 0
c Var 'aux404' direct represents '12' with '9570'
9567 -9569 9570 0
-9570 9569 0
-9570 -9567 0
c Var 'aux404' order represents '13' with '9571'
-9569 9571 0
c Var 'aux404' direct represents '13' with '9572'
9569 -9571 9572 0
-9572 9571 0
-9572 -9569 0
c Var 'aux404' order represents '14' with '9573'
-9571 9573 0
c Var 'aux404' direct represents '14' with '9574'
9571 -9573 9574 0
-9574 9573 0
-9574 -9571 0
c Var 'aux404' order represents '15' with '9575'
-9573 9575 0
c Var 'aux404' direct represents '15' with '9576'
9573 -9575 9576 0
-9576 9575 0
-9576 -9573 0
c Var 'aux404' order represents '16' with '9577'
-9575 9577 0
c Var 'aux404' direct represents '16' with '9578'
9575 -9577 9578 0
-9578 9577 0
-9578 -9575 0
c Var 'aux404' order represents '17' with '9579'
-9577 9579 0
c Var 'aux404' direct represents '17' with '9580'
9577 -9579 9580 0
-9580 9579 0
-9580 -9577 0
c Var 'aux404' direct represents '18' with '-9579'
9546 9548 9550 9552 9554 9556 9558 9560 9562 9564 9566 9568 9570 9572 9574 9576 9578 9580 -9579 0
c Encoding variable: aux405 with domain: int(0..18) (representing constraint (aux40 + aux39))
c Both direct and order encoding.
c Var 'aux405' order represents '0' with '9581'
c Var 'aux405' direct represents '0' with '9581'
c Var 'aux405' order represents '1' with '9582'
-9581 9582 0
c Var 'aux405' direct represents '1' with '9583'
9581 -9582 9583 0
-9583 9582 0
-9583 -9581 0
c Var 'aux405' order represents '2' with '9584'
-9582 9584 0
c Var 'aux405' direct represents '2' with '9585'
9582 -9584 9585 0
-9585 9584 0
-9585 -9582 0
c Var 'aux405' order represents '3' with '9586'
-9584 9586 0
c Var 'aux405' direct represents '3' with '9587'
9584 -9586 9587 0
-9587 9586 0
-9587 -9584 0
c Var 'aux405' order represents '4' with '9588'
-9586 9588 0
c Var 'aux405' direct represents '4' with '9589'
9586 -9588 9589 0
-9589 9588 0
-9589 -9586 0
c Var 'aux405' order represents '5' with '9590'
-9588 9590 0
c Var 'aux405' direct represents '5' with '9591'
9588 -9590 9591 0
-9591 9590 0
-9591 -9588 0
c Var 'aux405' order represents '6' with '9592'
-9590 9592 0
c Var 'aux405' direct represents '6' with '9593'
9590 -9592 9593 0
-9593 9592 0
-9593 -9590 0
c Var 'aux405' order represents '7' with '9594'
-9592 9594 0
c Var 'aux405' direct represents '7' with '9595'
9592 -9594 9595 0
-9595 9594 0
-9595 -9592 0
c Var 'aux405' order represents '8' with '9596'
-9594 9596 0
c Var 'aux405' direct represents '8' with '9597'
9594 -9596 9597 0
-9597 9596 0
-9597 -9594 0
c Var 'aux405' order represents '9' with '9598'
-9596 9598 0
c Var 'aux405' direct represents '9' with '9599'
9596 -9598 9599 0
-9599 9598 0
-9599 -9596 0
c Var 'aux405' order represents '10' with '9600'
-9598 9600 0
c Var 'aux405' direct represents '10' with '9601'
9598 -9600 9601 0
-9601 9600 0
-9601 -9598 0
c Var 'aux405' order represents '11' with '9602'
-9600 9602 0
c Var 'aux405' direct represents '11' with '9603'
9600 -9602 9603 0
-9603 9602 0
-9603 -9600 0
c Var 'aux405' order represents '12' with '9604'
-9602 9604 0
c Var 'aux405' direct represents '12' with '9605'
9602 -9604 9605 0
-9605 9604 0
-9605 -9602 0
c Var 'aux405' order represents '13' with '9606'
-9604 9606 0
c Var 'aux405' direct represents '13' with '9607'
9604 -9606 9607 0
-9607 9606 0
-9607 -9604 0
c Var 'aux405' order represents '14' with '9608'
-9606 9608 0
c Var 'aux405' direct represents '14' with '9609'
9606 -9608 9609 0
-9609 9608 0
-9609 -9606 0
c Var 'aux405' order represents '15' with '9610'
-9608 9610 0
c Var 'aux405' direct represents '15' with '9611'
9608 -9610 9611 0
-9611 9610 0
-9611 -9608 0
c Var 'aux405' order represents '16' with '9612'
-9610 9612 0
c Var 'aux405' direct represents '16' with '9613'
9610 -9612 9613 0
-9613 9612 0
-9613 -9610 0
c Var 'aux405' order represents '17' with '9614'
-9612 9614 0
c Var 'aux405' direct represents '17' with '9615'
9612 -9614 9615 0
-9615 9614 0
-9615 -9612 0
c Var 'aux405' direct represents '18' with '-9614'
9581 9583 9585 9587 9589 9591 9593 9595 9597 9599 9601 9603 9605 9607 9609 9611 9613 9615 -9614 0
c Encoding variable: aux406 with domain: int(0..26) (representing constraint (aux37 + aux402))
c Both direct and order encoding.
c Var 'aux406' order represents '0' with '9616'
c Var 'aux406' direct represents '0' with '9616'
c Var 'aux406' order represents '1' with '9617'
-9616 9617 0
c Var 'aux406' direct represents '1' with '9618'
9616 -9617 9618 0
-9618 9617 0
-9618 -9616 0
c Var 'aux406' order represents '2' with '9619'
-9617 9619 0
c Var 'aux406' direct represents '2' with '9620'
9617 -9619 9620 0
-9620 9619 0
-9620 -9617 0
c Var 'aux406' order represents '3' with '9621'
-9619 9621 0
c Var 'aux406' direct represents '3' with '9622'
9619 -9621 9622 0
-9622 9621 0
-9622 -9619 0
c Var 'aux406' order represents '4' with '9623'
-9621 9623 0
c Var 'aux406' direct represents '4' with '9624'
9621 -9623 9624 0
-9624 9623 0
-9624 -9621 0
c Var 'aux406' order represents '5' with '9625'
-9623 9625 0
c Var 'aux406' direct represents '5' with '9626'
9623 -9625 9626 0
-9626 9625 0
-9626 -9623 0
c Var 'aux406' order represents '6' with '9627'
-9625 9627 0
c Var 'aux406' direct represents '6' with '9628'
9625 -9627 9628 0
-9628 9627 0
-9628 -9625 0
c Var 'aux406' order represents '7' with '9629'
-9627 9629 0
c Var 'aux406' direct represents '7' with '9630'
9627 -9629 9630 0
-9630 9629 0
-9630 -9627 0
c Var 'aux406' order represents '8' with '9631'
-9629 9631 0
c Var 'aux406' direct represents '8' with '9632'
9629 -9631 9632 0
-9632 9631 0
-9632 -9629 0
c Var 'aux406' order represents '9' with '9633'
-9631 9633 0
c Var 'aux406' direct represents '9' with '9634'
9631 -9633 9634 0
-9634 9633 0
-9634 -9631 0
c Var 'aux406' order represents '10' with '9635'
-9633 9635 0
c Var 'aux406' direct represents '10' with '9636'
9633 -9635 9636 0
-9636 9635 0
-9636 -9633 0
c Var 'aux406' order represents '11' with '9637'
-9635 9637 0
c Var 'aux406' direct represents '11' with '9638'
9635 -9637 9638 0
-9638 9637 0
-9638 -9635 0
c Var 'aux406' order represents '12' with '9639'
-9637 9639 0
c Var 'aux406' direct represents '12' with '9640'
9637 -9639 9640 0
-9640 9639 0
-9640 -9637 0
c Var 'aux406' order represents '13' with '9641'
-9639 9641 0
c Var 'aux406' direct represents '13' with '9642'
9639 -9641 9642 0
-9642 9641 0
-9642 -9639 0
c Var 'aux406' order represents '14' with '9643'
-9641 9643 0
c Var 'aux406' direct represents '14' with '9644'
9641 -9643 9644 0
-9644 9643 0
-9644 -9641 0
c Var 'aux406' order represents '15' with '9645'
-9643 9645 0
c Var 'aux406' direct represents '15' with '9646'
9643 -9645 9646 0
-9646 9645 0
-9646 -9643 0
c Var 'aux406' order represents '16' with '9647'
-9645 9647 0
c Var 'aux406' direct represents '16' with '9648'
9645 -9647 9648 0
-9648 9647 0
-9648 -9645 0
c Var 'aux406' order represents '17' with '9649'
-9647 9649 0
c Var 'aux406' direct represents '17' with '9650'
9647 -9649 9650 0
-9650 9649 0
-9650 -9647 0
c Var 'aux406' order represents '18' with '9651'
-9649 9651 0
c Var 'aux406' direct represents '18' with '9652'
9649 -9651 9652 0
-9652 9651 0
-9652 -9649 0
c Var 'aux406' order represents '19' with '9653'
-9651 9653 0
c Var 'aux406' direct represents '19' with '9654'
9651 -9653 9654 0
-9654 9653 0
-9654 -9651 0
c Var 'aux406' order represents '20' with '9655'
-9653 9655 0
c Var 'aux406' direct represents '20' with '9656'
9653 -9655 9656 0
-9656 9655 0
-9656 -9653 0
c Var 'aux406' order represents '21' with '9657'
-9655 9657 0
c Var 'aux406' direct represents '21' with '9658'
9655 -9657 9658 0
-9658 9657 0
-9658 -9655 0
c Var 'aux406' order represents '22' with '9659'
-9657 9659 0
c Var 'aux406' direct represents '22' with '9660'
9657 -9659 9660 0
-9660 9659 0
-9660 -9657 0
c Var 'aux406' order represents '23' with '9661'
-9659 9661 0
c Var 'aux406' direct represents '23' with '9662'
9659 -9661 9662 0
-9662 9661 0
-9662 -9659 0
c Var 'aux406' order represents '24' with '9663'
-9661 9663 0
c Var 'aux406' direct represents '24' with '9664'
9661 -9663 9664 0
-9664 9663 0
-9664 -9661 0
c Var 'aux406' order represents '25' with '9665'
-9663 9665 0
c Var 'aux406' direct represents '25' with '9666'
9663 -9665 9666 0
-9666 9665 0
-9666 -9663 0
c Var 'aux406' direct represents '26' with '-9665'
9616 9618 9620 9622 9624 9626 9628 9630 9632 9634 9636 9638 9640 9642 9644 9646 9648 9650 9652 9654 9656 9658 9660 9662 9664 9666 -9665 0
c Encoding variable: aux407 with domain: int(0..36) (representing constraint (aux404 + aux405))
c Both direct and order encoding.
c Var 'aux407' order represents '0' with '9667'
c Var 'aux407' direct represents '0' with '9667'
c Var 'aux407' order represents '1' with '9668'
-9667 9668 0
c Var 'aux407' direct represents '1' with '9669'
9667 -9668 9669 0
-9669 9668 0
-9669 -9667 0
c Var 'aux407' order represents '2' with '9670'
-9668 9670 0
c Var 'aux407' direct represents '2' with '9671'
9668 -9670 9671 0
-9671 9670 0
-9671 -9668 0
c Var 'aux407' order represents '3' with '9672'
-9670 9672 0
c Var 'aux407' direct represents '3' with '9673'
9670 -9672 9673 0
-9673 9672 0
-9673 -9670 0
c Var 'aux407' order represents '4' with '9674'
-9672 9674 0
c Var 'aux407' direct represents '4' with '9675'
9672 -9674 9675 0
-9675 9674 0
-9675 -9672 0
c Var 'aux407' order represents '5' with '9676'
-9674 9676 0
c Var 'aux407' direct represents '5' with '9677'
9674 -9676 9677 0
-9677 9676 0
-9677 -9674 0
c Var 'aux407' order represents '6' with '9678'
-9676 9678 0
c Var 'aux407' direct represents '6' with '9679'
9676 -9678 9679 0
-9679 9678 0
-9679 -9676 0
c Var 'aux407' order represents '7' with '9680'
-9678 9680 0
c Var 'aux407' direct represents '7' with '9681'
9678 -9680 9681 0
-9681 9680 0
-9681 -9678 0
c Var 'aux407' order represents '8' with '9682'
-9680 9682 0
c Var 'aux407' direct represents '8' with '9683'
9680 -9682 9683 0
-9683 9682 0
-9683 -9680 0
c Var 'aux407' order represents '9' with '9684'
-9682 9684 0
c Var 'aux407' direct represents '9' with '9685'
9682 -9684 9685 0
-9685 9684 0
-9685 -9682 0
c Var 'aux407' order represents '10' with '9686'
-9684 9686 0
c Var 'aux407' direct represents '10' with '9687'
9684 -9686 9687 0
-9687 9686 0
-9687 -9684 0
c Var 'aux407' order represents '11' with '9688'
-9686 9688 0
c Var 'aux407' direct represents '11' with '9689'
9686 -9688 9689 0
-9689 9688 0
-9689 -9686 0
c Var 'aux407' order represents '12' with '9690'
-9688 9690 0
c Var 'aux407' direct represents '12' with '9691'
9688 -9690 9691 0
-9691 9690 0
-9691 -9688 0
c Var 'aux407' order represents '13' with '9692'
-9690 9692 0
c Var 'aux407' direct represents '13' with '9693'
9690 -9692 9693 0
-9693 9692 0
-9693 -9690 0
c Var 'aux407' order represents '14' with '9694'
-9692 9694 0
c Var 'aux407' direct represents '14' with '9695'
9692 -9694 9695 0
-9695 9694 0
-9695 -9692 0
c Var 'aux407' order represents '15' with '9696'
-9694 9696 0
c Var 'aux407' direct represents '15' with '9697'
9694 -9696 9697 0
-9697 9696 0
-9697 -9694 0
c Var 'aux407' order represents '16' with '9698'
-9696 9698 0
c Var 'aux407' direct represents '16' with '9699'
9696 -9698 9699 0
-9699 9698 0
-9699 -9696 0
c Var 'aux407' order represents '17' with '9700'
-9698 9700 0
c Var 'aux407' direct represents '17' with '9701'
9698 -9700 9701 0
-9701 9700 0
-9701 -9698 0
c Var 'aux407' order represents '18' with '9702'
-9700 9702 0
c Var 'aux407' direct represents '18' with '9703'
9700 -9702 9703 0
-9703 9702 0
-9703 -9700 0
c Var 'aux407' order represents '19' with '9704'
-9702 9704 0
c Var 'aux407' direct represents '19' with '9705'
9702 -9704 9705 0
-9705 9704 0
-9705 -9702 0
c Var 'aux407' order represents '20' with '9706'
-9704 9706 0
c Var 'aux407' direct represents '20' with '9707'
9704 -9706 9707 0
-9707 9706 0
-9707 -9704 0
c Var 'aux407' order represents '21' with '9708'
-9706 9708 0
c Var 'aux407' direct represents '21' with '9709'
9706 -9708 9709 0
-9709 9708 0
-9709 -9706 0
c Var 'aux407' order represents '22' with '9710'
-9708 9710 0
c Var 'aux407' direct represents '22' with '9711'
9708 -9710 9711 0
-9711 9710 0
-9711 -9708 0
c Var 'aux407' order represents '23' with '9712'
-9710 9712 0
c Var 'aux407' direct represents '23' with '9713'
9710 -9712 9713 0
-9713 9712 0
-9713 -9710 0
c Var 'aux407' order represents '24' with '9714'
-9712 9714 0
c Var 'aux407' direct represents '24' with '9715'
9712 -9714 9715 0
-9715 9714 0
-9715 -9712 0
c Var 'aux407' order represents '25' with '9716'
-9714 9716 0
c Var 'aux407' direct represents '25' with '9717'
9714 -9716 9717 0
-9717 9716 0
-9717 -9714 0
c Var 'aux407' order represents '26' with '9718'
-9716 9718 0
c Var 'aux407' direct represents '26' with '9719'
9716 -9718 9719 0
-9719 9718 0
-9719 -9716 0
c Var 'aux407' order represents '27' with '9720'
-9718 9720 0
c Var 'aux407' direct represents '27' with '9721'
9718 -9720 9721 0
-9721 9720 0
-9721 -9718 0
c Var 'aux407' order represents '28' with '9722'
-9720 9722 0
c Var 'aux407' direct represents '28' with '9723'
9720 -9722 9723 0
-9723 9722 0
-9723 -9720 0
c Var 'aux407' order represents '29' with '9724'
-9722 9724 0
c Var 'aux407' direct represents '29' with '9725'
9722 -9724 9725 0
-9725 9724 0
-9725 -9722 0
c Var 'aux407' order represents '30' with '9726'
-9724 9726 0
c Var 'aux407' direct represents '30' with '9727'
9724 -9726 9727 0
-9727 9726 0
-9727 -9724 0
c Var 'aux407' order represents '31' with '9728'
-9726 9728 0
c Var 'aux407' direct represents '31' with '9729'
9726 -9728 9729 0
-9729 9728 0
-9729 -9726 0
c Var 'aux407' order represents '32' with '9730'
-9728 9730 0
c Var 'aux407' direct represents '32' with '9731'
9728 -9730 9731 0
-9731 9730 0
-9731 -9728 0
c Var 'aux407' order represents '33' with '9732'
-9730 9732 0
c Var 'aux407' direct represents '33' with '9733'
9730 -9732 9733 0
-9733 9732 0
-9733 -9730 0
c Var 'aux407' order represents '34' with '9734'
-9732 9734 0
c Var 'aux407' direct represents '34' with '9735'
9732 -9734 9735 0
-9735 9734 0
-9735 -9732 0
c Var 'aux407' order represents '35' with '9736'
-9734 9736 0
c Var 'aux407' direct represents '35' with '9737'
9734 -9736 9737 0
-9737 9736 0
-9737 -9734 0
c Var 'aux407' direct represents '36' with '-9736'
9667 9669 9671 9673 9675 9677 9679 9681 9683 9685 9687 9689 9691 9693 9695 9697 9699 9701 9703 9705 9707 9709 9711 9713 9715 9717 9719 9721 9723 9725 9727 9729 9731 9733 9735 9737 -9736 0
c Encoding variable: aux408 with domain: int(0..17) (representing constraint (shift(variant_fields_00002_00004_00001, -1) + aux48))
c Both direct and order encoding.
c Var 'aux408' order represents '0' with '9738'
c Var 'aux408' direct represents '0' with '9738'
c Var 'aux408' order represents '1' with '9739'
-9738 9739 0
c Var 'aux408' direct represents '1' with '9740'
9738 -9739 9740 0
-9740 9739 0
-9740 -9738 0
c Var 'aux408' order represents '2' with '9741'
-9739 9741 0
c Var 'aux408' direct represents '2' with '9742'
9739 -9741 9742 0
-9742 9741 0
-9742 -9739 0
c Var 'aux408' order represents '3' with '9743'
-9741 9743 0
c Var 'aux408' direct represents '3' with '9744'
9741 -9743 9744 0
-9744 9743 0
-9744 -9741 0
c Var 'aux408' order represents '4' with '9745'
-9743 9745 0
c Var 'aux408' direct represents '4' with '9746'
9743 -9745 9746 0
-9746 9745 0
-9746 -9743 0
c Var 'aux408' order represents '5' with '9747'
-9745 9747 0
c Var 'aux408' direct represents '5' with '9748'
9745 -9747 9748 0
-9748 9747 0
-9748 -9745 0
c Var 'aux408' order represents '6' with '9749'
-9747 9749 0
c Var 'aux408' direct represents '6' with '9750'
9747 -9749 9750 0
-9750 9749 0
-9750 -9747 0
c Var 'aux408' order represents '7' with '9751'
-9749 9751 0
c Var 'aux408' direct represents '7' with '9752'
9749 -9751 9752 0
-9752 9751 0
-9752 -9749 0
c Var 'aux408' order represents '8' with '9753'
-9751 9753 0
c Var 'aux408' direct represents '8' with '9754'
9751 -9753 9754 0
-9754 9753 0
-9754 -9751 0
c Var 'aux408' order represents '9' with '9755'
-9753 9755 0
c Var 'aux408' direct represents '9' with '9756'
9753 -9755 9756 0
-9756 9755 0
-9756 -9753 0
c Var 'aux408' order represents '10' with '9757'
-9755 9757 0
c Var 'aux408' direct represents '10' with '9758'
9755 -9757 9758 0
-9758 9757 0
-9758 -9755 0
c Var 'aux408' order represents '11' with '9759'
-9757 9759 0
c Var 'aux408' direct represents '11' with '9760'
9757 -9759 9760 0
-9760 9759 0
-9760 -9757 0
c Var 'aux408' order represents '12' with '9761'
-9759 9761 0
c Var 'aux408' direct represents '12' with '9762'
9759 -9761 9762 0
-9762 9761 0
-9762 -9759 0
c Var 'aux408' order represents '13' with '9763'
-9761 9763 0
c Var 'aux408' direct represents '13' with '9764'
9761 -9763 9764 0
-9764 9763 0
-9764 -9761 0
c Var 'aux408' order represents '14' with '9765'
-9763 9765 0
c Var 'aux408' direct represents '14' with '9766'
9763 -9765 9766 0
-9766 9765 0
-9766 -9763 0
c Var 'aux408' order represents '15' with '9767'
-9765 9767 0
c Var 'aux408' direct represents '15' with '9768'
9765 -9767 9768 0
-9768 9767 0
-9768 -9765 0
c Var 'aux408' order represents '16' with '9769'
-9767 9769 0
c Var 'aux408' direct represents '16' with '9770'
9767 -9769 9770 0
-9770 9769 0
-9770 -9767 0
c Var 'aux408' direct represents '17' with '-9769'
9738 9740 9742 9744 9746 9748 9750 9752 9754 9756 9758 9760 9762 9764 9766 9768 9770 -9769 0
c Encoding variable: aux409 with domain: int(0..18) (representing constraint (aux52 + aux45))
c Both direct and order encoding.
c Var 'aux409' order represents '0' with '9771'
c Var 'aux409' direct represents '0' with '9771'
c Var 'aux409' order represents '1' with '9772'
-9771 9772 0
c Var 'aux409' direct represents '1' with '9773'
9771 -9772 9773 0
-9773 9772 0
-9773 -9771 0
c Var 'aux409' order represents '2' with '9774'
-9772 9774 0
c Var 'aux409' direct represents '2' with '9775'
9772 -9774 9775 0
-9775 9774 0
-9775 -9772 0
c Var 'aux409' order represents '3' with '9776'
-9774 9776 0
c Var 'aux409' direct represents '3' with '9777'
9774 -9776 9777 0
-9777 9776 0
-9777 -9774 0
c Var 'aux409' order represents '4' with '9778'
-9776 9778 0
c Var 'aux409' direct represents '4' with '9779'
9776 -9778 9779 0
-9779 9778 0
-9779 -9776 0
c Var 'aux409' order represents '5' with '9780'
-9778 9780 0
c Var 'aux409' direct represents '5' with '9781'
9778 -9780 9781 0
-9781 9780 0
-9781 -9778 0
c Var 'aux409' order represents '6' with '9782'
-9780 9782 0
c Var 'aux409' direct represents '6' with '9783'
9780 -9782 9783 0
-9783 9782 0
-9783 -9780 0
c Var 'aux409' order represents '7' with '9784'
-9782 9784 0
c Var 'aux409' direct represents '7' with '9785'
9782 -9784 9785 0
-9785 9784 0
-9785 -9782 0
c Var 'aux409' order represents '8' with '9786'
-9784 9786 0
c Var 'aux409' direct represents '8' with '9787'
9784 -9786 9787 0
-9787 9786 0
-9787 -9784 0
c Var 'aux409' order represents '9' with '9788'
-9786 9788 0
c Var 'aux409' direct represents '9' with '9789'
9786 -9788 9789 0
-9789 9788 0
-9789 -9786 0
c Var 'aux409' order represents '10' with '9790'
-9788 9790 0
c Var 'aux409' direct represents '10' with '9791'
9788 -9790 9791 0
-9791 9790 0
-9791 -9788 0
c Var 'aux409' order represents '11' with '9792'
-9790 9792 0
c Var 'aux409' direct represents '11' with '9793'
9790 -9792 9793 0
-9793 9792 0
-9793 -9790 0
c Var 'aux409' order represents '12' with '9794'
-9792 9794 0
c Var 'aux409' direct represents '12' with '9795'
9792 -9794 9795 0
-9795 9794 0
-9795 -9792 0
c Var 'aux409' order represents '13' with '9796'
-9794 9796 0
c Var 'aux409' direct represents '13' with '9797'
9794 -9796 9797 0
-9797 9796 0
-9797 -9794 0
c Var 'aux409' order represents '14' with '9798'
-9796 9798 0
c Var 'aux409' direct represents '14' with '9799'
9796 -9798 9799 0
-9799 9798 0
-9799 -9796 0
c Var 'aux409' order represents '15' with '9800'
-9798 9800 0
c Var 'aux409' direct represents '15' with '9801'
9798 -9800 9801 0
-9801 9800 0
-9801 -9798 0
c Var 'aux409' order represents '16' with '9802'
-9800 9802 0
c Var 'aux409' direct represents '16' with '9803'
9800 -9802 9803 0
-9803 9802 0
-9803 -9800 0
c Var 'aux409' order represents '17' with '9804'
-9802 9804 0
c Var 'aux409' direct represents '17' with '9805'
9802 -9804 9805 0
-9805 9804 0
-9805 -9802 0
c Var 'aux409' direct represents '18' with '-9804'
9771 9773 9775 9777 9779 9781 9783 9785 9787 9789 9791 9793 9795 9797 9799 9801 9803 9805 -9804 0
c Encoding variable: aux410 with domain: int(0..18) (representing constraint (aux51 + aux46))
c Both direct and order encoding.
c Var 'aux410' order represents '0' with '9806'
c Var 'aux410' direct represents '0' with '9806'
c Var 'aux410' order represents '1' with '9807'
-9806 9807 0
c Var 'aux410' direct represents '1' with '9808'
9806 -9807 9808 0
-9808 9807 0
-9808 -9806 0
c Var 'aux410' order represents '2' with '9809'
-9807 9809 0
c Var 'aux410' direct represents '2' with '9810'
9807 -9809 9810 0
-9810 9809 0
-9810 -9807 0
c Var 'aux410' order represents '3' with '9811'
-9809 9811 0
c Var 'aux410' direct represents '3' with '9812'
9809 -9811 9812 0
-9812 9811 0
-9812 -9809 0
c Var 'aux410' order represents '4' with '9813'
-9811 9813 0
c Var 'aux410' direct represents '4' with '9814'
9811 -9813 9814 0
-9814 9813 0
-9814 -9811 0
c Var 'aux410' order represents '5' with '9815'
-9813 9815 0
c Var 'aux410' direct represents '5' with '9816'
9813 -9815 9816 0
-9816 9815 0
-9816 -9813 0
c Var 'aux410' order represents '6' with '9817'
-9815 9817 0
c Var 'aux410' direct represents '6' with '9818'
9815 -9817 9818 0
-9818 9817 0
-9818 -9815 0
c Var 'aux410' order represents '7' with '9819'
-9817 9819 0
c Var 'aux410' direct represents '7' with '9820'
9817 -9819 9820 0
-9820 9819 0
-9820 -9817 0
c Var 'aux410' order represents '8' with '9821'
-9819 9821 0
c Var 'aux410' direct represents '8' with '9822'
9819 -9821 9822 0
-9822 9821 0
-9822 -9819 0
c Var 'aux410' order represents '9' with '9823'
-9821 9823 0
c Var 'aux410' direct represents '9' with '9824'
9821 -9823 9824 0
-9824 9823 0
-9824 -9821 0
c Var 'aux410' order represents '10' with '9825'
-9823 9825 0
c Var 'aux410' direct represents '10' with '9826'
9823 -9825 9826 0
-9826 9825 0
-9826 -9823 0
c Var 'aux410' order represents '11' with '9827'
-9825 9827 0
c Var 'aux410' direct represents '11' with '9828'
9825 -9827 9828 0
-9828 9827 0
-9828 -9825 0
c Var 'aux410' order represents '12' with '9829'
-9827 9829 0
c Var 'aux410' direct represents '12' with '9830'
9827 -9829 9830 0
-9830 9829 0
-9830 -9827 0
c Var 'aux410' order represents '13' with '9831'
-9829 9831 0
c Var 'aux410' direct represents '13' with '9832'
9829 -9831 9832 0
-9832 9831 0
-9832 -9829 0
c Var 'aux410' order represents '14' with '9833'
-9831 9833 0
c Var 'aux410' direct represents '14' with '9834'
9831 -9833 9834 0
-9834 9833 0
-9834 -9831 0
c Var 'aux410' order represents '15' with '9835'
-9833 9835 0
c Var 'aux410' direct represents '15' with '9836'
9833 -9835 9836 0
-9836 9835 0
-9836 -9833 0
c Var 'aux410' order represents '16' with '9837'
-9835 9837 0
c Var 'aux410' direct represents '16' with '9838'
9835 -9837 9838 0
-9838 9837 0
-9838 -9835 0
c Var 'aux410' order represents '17' with '9839'
-9837 9839 0
c Var 'aux410' direct represents '17' with '9840'
9837 -9839 9840 0
-9840 9839 0
-9840 -9837 0
c Var 'aux410' direct represents '18' with '-9839'
9806 9808 9810 9812 9814 9816 9818 9820 9822 9824 9826 9828 9830 9832 9834 9836 9838 9840 -9839 0
c Encoding variable: aux411 with domain: int(0..18) (representing constraint (aux50 + aux49))
c Both direct and order encoding.
c Var 'aux411' order represents '0' with '9841'
c Var 'aux411' direct represents '0' with '9841'
c Var 'aux411' order represents '1' with '9842'
-9841 9842 0
c Var 'aux411' direct represents '1' with '9843'
9841 -9842 9843 0
-9843 9842 0
-9843 -9841 0
c Var 'aux411' order represents '2' with '9844'
-9842 9844 0
c Var 'aux411' direct represents '2' with '9845'
9842 -9844 9845 0
-9845 9844 0
-9845 -9842 0
c Var 'aux411' order represents '3' with '9846'
-9844 9846 0
c Var 'aux411' direct represents '3' with '9847'
9844 -9846 9847 0
-9847 9846 0
-9847 -9844 0
c Var 'aux411' order represents '4' with '9848'
-9846 9848 0
c Var 'aux411' direct represents '4' with '9849'
9846 -9848 9849 0
-9849 9848 0
-9849 -9846 0
c Var 'aux411' order represents '5' with '9850'
-9848 9850 0
c Var 'aux411' direct represents '5' with '9851'
9848 -9850 9851 0
-9851 9850 0
-9851 -9848 0
c Var 'aux411' order represents '6' with '9852'
-9850 9852 0
c Var 'aux411' direct represents '6' with '9853'
9850 -9852 9853 0
-9853 9852 0
-9853 -9850 0
c Var 'aux411' order represents '7' with '9854'
-9852 9854 0
c Var 'aux411' direct represents '7' with '9855'
9852 -9854 9855 0
-9855 9854 0
-9855 -9852 0
c Var 'aux411' order represents '8' with '9856'
-9854 9856 0
c Var 'aux411' direct represents '8' with '9857'
9854 -9856 9857 0
-9857 9856 0
-9857 -9854 0
c Var 'aux411' order represents '9' with '9858'
-9856 9858 0
c Var 'aux411' direct represents '9' with '9859'
9856 -9858 9859 0
-9859 9858 0
-9859 -9856 0
c Var 'aux411' order represents '10' with '9860'
-9858 9860 0
c Var 'aux411' direct represents '10' with '9861'
9858 -9860 9861 0
-9861 9860 0
-9861 -9858 0
c Var 'aux411' order represents '11' with '9862'
-9860 9862 0
c Var 'aux411' direct represents '11' with '9863'
9860 -9862 9863 0
-9863 9862 0
-9863 -9860 0
c Var 'aux411' order represents '12' with '9864'
-9862 9864 0
c Var 'aux411' direct represents '12' with '9865'
9862 -9864 9865 0
-9865 9864 0
-9865 -9862 0
c Var 'aux411' order represents '13' with '9866'
-9864 9866 0
c Var 'aux411' direct represents '13' with '9867'
9864 -9866 9867 0
-9867 9866 0
-9867 -9864 0
c Var 'aux411' order represents '14' with '9868'
-9866 9868 0
c Var 'aux411' direct represents '14' with '9869'
9866 -9868 9869 0
-9869 9868 0
-9869 -9866 0
c Var 'aux411' order represents '15' with '9870'
-9868 9870 0
c Var 'aux411' direct represents '15' with '9871'
9868 -9870 9871 0
-9871 9870 0
-9871 -9868 0
c Var 'aux411' order represents '16' with '9872'
-9870 9872 0
c Var 'aux411' direct represents '16' with '9873'
9870 -9872 9873 0
-9873 9872 0
-9873 -9870 0
c Var 'aux411' order represents '17' with '9874'
-9872 9874 0
c Var 'aux411' direct represents '17' with '9875'
9872 -9874 9875 0
-9875 9874 0
-9875 -9872 0
c Var 'aux411' direct represents '18' with '-9874'
9841 9843 9845 9847 9849 9851 9853 9855 9857 9859 9861 9863 9865 9867 9869 9871 9873 9875 -9874 0
c Encoding variable: aux412 with domain: int(0..26) (representing constraint (aux47 + aux408))
c Both direct and order encoding.
c Var 'aux412' order represents '0' with '9876'
c Var 'aux412' direct represents '0' with '9876'
c Var 'aux412' order represents '1' with '9877'
-9876 9877 0
c Var 'aux412' direct represents '1' with '9878'
9876 -9877 9878 0
-9878 9877 0
-9878 -9876 0
c Var 'aux412' order represents '2' with '9879'
-9877 9879 0
c Var 'aux412' direct represents '2' with '9880'
9877 -9879 9880 0
-9880 9879 0
-9880 -9877 0
c Var 'aux412' order represents '3' with '9881'
-9879 9881 0
c Var 'aux412' direct represents '3' with '9882'
9879 -9881 9882 0
-9882 9881 0
-9882 -9879 0
c Var 'aux412' order represents '4' with '9883'
-9881 9883 0
c Var 'aux412' direct represents '4' with '9884'
9881 -9883 9884 0
-9884 9883 0
-9884 -9881 0
c Var 'aux412' order represents '5' with '9885'
-9883 9885 0
c Var 'aux412' direct represents '5' with '9886'
9883 -9885 9886 0
-9886 9885 0
-9886 -9883 0
c Var 'aux412' order represents '6' with '9887'
-9885 9887 0
c Var 'aux412' direct represents '6' with '9888'
9885 -9887 9888 0
-9888 9887 0
-9888 -9885 0
c Var 'aux412' order represents '7' with '9889'
-9887 9889 0
c Var 'aux412' direct represents '7' with '9890'
9887 -9889 9890 0
-9890 9889 0
-9890 -9887 0
c Var 'aux412' order represents '8' with '9891'
-9889 9891 0
c Var 'aux412' direct represents '8' with '9892'
9889 -9891 9892 0
-9892 9891 0
-9892 -9889 0
c Var 'aux412' order represents '9' with '9893'
-9891 9893 0
c Var 'aux412' direct represents '9' with '9894'
9891 -9893 9894 0
-9894 9893 0
-9894 -9891 0
c Var 'aux412' order represents '10' with '9895'
-9893 9895 0
c Var 'aux412' direct represents '10' with '9896'
9893 -9895 9896 0
-9896 9895 0
-9896 -9893 0
c Var 'aux412' order represents '11' with '9897'
-9895 9897 0
c Var 'aux412' direct represents '11' with '9898'
9895 -9897 9898 0
-9898 9897 0
-9898 -9895 0
c Var 'aux412' order represents '12' with '9899'
-9897 9899 0
c Var 'aux412' direct represents '12' with '9900'
9897 -9899 9900 0
-9900 9899 0
-9900 -9897 0
c Var 'aux412' order represents '13' with '9901'
-9899 9901 0
c Var 'aux412' direct represents '13' with '9902'
9899 -9901 9902 0
-9902 9901 0
-9902 -9899 0
c Var 'aux412' order represents '14' with '9903'
-9901 9903 0
c Var 'aux412' direct represents '14' with '9904'
9901 -9903 9904 0
-9904 9903 0
-9904 -9901 0
c Var 'aux412' order represents '15' with '9905'
-9903 9905 0
c Var 'aux412' direct represents '15' with '9906'
9903 -9905 9906 0
-9906 9905 0
-9906 -9903 0
c Var 'aux412' order represents '16' with '9907'
-9905 9907 0
c Var 'aux412' direct represents '16' with '9908'
9905 -9907 9908 0
-9908 9907 0
-9908 -9905 0
c Var 'aux412' order represents '17' with '9909'
-9907 9909 0
c Var 'aux412' direct represents '17' with '9910'
9907 -9909 9910 0
-9910 9909 0
-9910 -9907 0
c Var 'aux412' order represents '18' with '9911'
-9909 9911 0
c Var 'aux412' direct represents '18' with '9912'
9909 -9911 9912 0
-9912 9911 0
-9912 -9909 0
c Var 'aux412' order represents '19' with '9913'
-9911 9913 0
c Var 'aux412' direct represents '19' with '9914'
9911 -9913 9914 0
-9914 9913 0
-9914 -9911 0
c Var 'aux412' order represents '20' with '9915'
-9913 9915 0
c Var 'aux412' direct represents '20' with '9916'
9913 -9915 9916 0
-9916 9915 0
-9916 -9913 0
c Var 'aux412' order represents '21' with '9917'
-9915 9917 0
c Var 'aux412' direct represents '21' with '9918'
9915 -9917 9918 0
-9918 9917 0
-9918 -9915 0
c Var 'aux412' order represents '22' with '9919'
-9917 9919 0
c Var 'aux412' direct represents '22' with '9920'
9917 -9919 9920 0
-9920 9919 0
-9920 -9917 0
c Var 'aux412' order represents '23' with '9921'
-9919 9921 0
c Var 'aux412' direct represents '23' with '9922'
9919 -9921 9922 0
-9922 9921 0
-9922 -9919 0
c Var 'aux412' order represents '24' with '9923'
-9921 9923 0
c Var 'aux412' direct represents '24' with '9924'
9921 -9923 9924 0
-9924 9923 0
-9924 -9921 0
c Var 'aux412' order represents '25' with '9925'
-9923 9925 0
c Var 'aux412' direct represents '25' with '9926'
9923 -9925 9926 0
-9926 9925 0
-9926 -9923 0
c Var 'aux412' direct represents '26' with '-9925'
9876 9878 9880 9882 9884 9886 9888 9890 9892 9894 9896 9898 9900 9902 9904 9906 9908 9910 9912 9914 9916 9918 9920 9922 9924 9926 -9925 0
c Encoding variable: aux413 with domain: int(0..36) (representing constraint (aux410 + aux411))
c Both direct and order encoding.
c Var 'aux413' order represents '0' with '9927'
c Var 'aux413' direct represents '0' with '9927'
c Var 'aux413' order represents '1' with '9928'
-9927 9928 0
c Var 'aux413' direct represents '1' with '9929'
9927 -9928 9929 0
-9929 9928 0
-9929 -9927 0
c Var 'aux413' order represents '2' with '9930'
-9928 9930 0
c Var 'aux413' direct represents '2' with '9931'
9928 -9930 9931 0
-9931 9930 0
-9931 -9928 0
c Var 'aux413' order represents '3' with '9932'
-9930 9932 0
c Var 'aux413' direct represents '3' with '9933'
9930 -9932 9933 0
-9933 9932 0
-9933 -9930 0
c Var 'aux413' order represents '4' with '9934'
-9932 9934 0
c Var 'aux413' direct represents '4' with '9935'
9932 -9934 9935 0
-9935 9934 0
-9935 -9932 0
c Var 'aux413' order represents '5' with '9936'
-9934 9936 0
c Var 'aux413' direct represents '5' with '9937'
9934 -9936 9937 0
-9937 9936 0
-9937 -9934 0
c Var 'aux413' order represents '6' with '9938'
-9936 9938 0
c Var 'aux413' direct represents '6' with '9939'
9936 -9938 9939 0
-9939 9938 0
-9939 -9936 0
c Var 'aux413' order represents '7' with '9940'
-9938 9940 0
c Var 'aux413' direct represents '7' with '9941'
9938 -9940 9941 0
-9941 9940 0
-9941 -9938 0
c Var 'aux413' order represents '8' with '9942'
-9940 9942 0
c Var 'aux413' direct represents '8' with '9943'
9940 -9942 9943 0
-9943 9942 0
-9943 -9940 0
c Var 'aux413' order represents '9' with '9944'
-9942 9944 0
c Var 'aux413' direct represents '9' with '9945'
9942 -9944 9945 0
-9945 9944 0
-9945 -9942 0
c Var 'aux413' order represents '10' with '9946'
-9944 9946 0
c Var 'aux413' direct represents '10' with '9947'
9944 -9946 9947 0
-9947 9946 0
-9947 -9944 0
c Var 'aux413' order represents '11' with '9948'
-9946 9948 0
c Var 'aux413' direct represents '11' with '9949'
9946 -9948 9949 0
-9949 9948 0
-9949 -9946 0
c Var 'aux413' order represents '12' with '9950'
-9948 9950 0
c Var 'aux413' direct represents '12' with '9951'
9948 -9950 9951 0
-9951 9950 0
-9951 -9948 0
c Var 'aux413' order represents '13' with '9952'
-9950 9952 0
c Var 'aux413' direct represents '13' with '9953'
9950 -9952 9953 0
-9953 9952 0
-9953 -9950 0
c Var 'aux413' order represents '14' with '9954'
-9952 9954 0
c Var 'aux413' direct represents '14' with '9955'
9952 -9954 9955 0
-9955 9954 0
-9955 -9952 0
c Var 'aux413' order represents '15' with '9956'
-9954 9956 0
c Var 'aux413' direct represents '15' with '9957'
9954 -9956 9957 0
-9957 9956 0
-9957 -9954 0
c Var 'aux413' order represents '16' with '9958'
-9956 9958 0
c Var 'aux413' direct represents '16' with '9959'
9956 -9958 9959 0
-9959 9958 0
-9959 -9956 0
c Var 'aux413' order represents '17' with '9960'
-9958 9960 0
c Var 'aux413' direct represents '17' with '9961'
9958 -9960 9961 0
-9961 9960 0
-9961 -9958 0
c Var 'aux413' order represents '18' with '9962'
-9960 9962 0
c Var 'aux413' direct represents '18' with '9963'
9960 -9962 9963 0
-9963 9962 0
-9963 -9960 0
c Var 'aux413' order represents '19' with '9964'
-9962 9964 0
c Var 'aux413' direct represents '19' with '9965'
9962 -9964 9965 0
-9965 9964 0
-9965 -9962 0
c Var 'aux413' order represents '20' with '9966'
-9964 9966 0
c Var 'aux413' direct represents '20' with '9967'
9964 -9966 9967 0
-9967 9966 0
-9967 -9964 0
c Var 'aux413' order represents '21' with '9968'
-9966 9968 0
c Var 'aux413' direct represents '21' with '9969'
9966 -9968 9969 0
-9969 9968 0
-9969 -9966 0
c Var 'aux413' order represents '22' with '9970'
-9968 9970 0
c Var 'aux413' direct represents '22' with '9971'
9968 -9970 9971 0
-9971 9970 0
-9971 -9968 0
c Var 'aux413' order represents '23' with '9972'
-9970 9972 0
c Var 'aux413' direct represents '23' with '9973'
9970 -9972 9973 0
-9973 9972 0
-9973 -9970 0
c Var 'aux413' order represents '24' with '9974'
-9972 9974 0
c Var 'aux413' direct represents '24' with '9975'
9972 -9974 9975 0
-9975 9974 0
-9975 -9972 0
c Var 'aux413' order represents '25' with '9976'
-9974 9976 0
c Var 'aux413' direct represents '25' with '9977'
9974 -9976 9977 0
-9977 9976 0
-9977 -9974 0
c Var 'aux413' order represents '26' with '9978'
-9976 9978 0
c Var 'aux413' direct represents '26' with '9979'
9976 -9978 9979 0
-9979 9978 0
-9979 -9976 0
c Var 'aux413' order represents '27' with '9980'
-9978 9980 0
c Var 'aux413' direct represents '27' with '9981'
9978 -9980 9981 0
-9981 9980 0
-9981 -9978 0
c Var 'aux413' order represents '28' with '9982'
-9980 9982 0
c Var 'aux413' direct represents '28' with '9983'
9980 -9982 9983 0
-9983 9982 0
-9983 -9980 0
c Var 'aux413' order represents '29' with '9984'
-9982 9984 0
c Var 'aux413' direct represents '29' with '9985'
9982 -9984 9985 0
-9985 9984 0
-9985 -9982 0
c Var 'aux413' order represents '30' with '9986'
-9984 9986 0
c Var 'aux413' direct represents '30' with '9987'
9984 -9986 9987 0
-9987 9986 0
-9987 -9984 0
c Var 'aux413' order represents '31' with '9988'
-9986 9988 0
c Var 'aux413' direct represents '31' with '9989'
9986 -9988 9989 0
-9989 9988 0
-9989 -9986 0
c Var 'aux413' order represents '32' with '9990'
-9988 9990 0
c Var 'aux413' direct represents '32' with '9991'
9988 -9990 9991 0
-9991 9990 0
-9991 -9988 0
c Var 'aux413' order represents '33' with '9992'
-9990 9992 0
c Var 'aux413' direct represents '33' with '9993'
9990 -9992 9993 0
-9993 9992 0
-9993 -9990 0
c Var 'aux413' order represents '34' with '9994'
-9992 9994 0
c Var 'aux413' direct represents '34' with '9995'
9992 -9994 9995 0
-9995 9994 0
-9995 -9992 0
c Var 'aux413' order represents '35' with '9996'
-9994 9996 0
c Var 'aux413' direct represents '35' with '9997'
9994 -9996 9997 0
-9997 9996 0
-9997 -9994 0
c Var 'aux413' direct represents '36' with '-9996'
9927 9929 9931 9933 9935 9937 9939 9941 9943 9945 9947 9949 9951 9953 9955 9957 9959 9961 9963 9965 9967 9969 9971 9973 9975 9977 9979 9981 9983 9985 9987 9989 9991 9993 9995 9997 -9996 0
c Encoding variable: aux414 with domain: int(0..17) (representing constraint (shift(variant_fields_00002_00006_00001, -1) + aux61))
c Both direct and order encoding.
c Var 'aux414' order represents '0' with '9998'
c Var 'aux414' direct represents '0' with '9998'
c Var 'aux414' order represents '1' with '9999'
-9998 9999 0
c Var 'aux414' direct represents '1' with '10000'
9998 -9999 10000 0
-10000 9999 0
-10000 -9998 0
c Var 'aux414' order represents '2' with '10001'
-9999 10001 0
c Var 'aux414' direct represents '2' with '10002'
9999 -10001 10002 0
-10002 10001 0
-10002 -9999 0
c Var 'aux414' order represents '3' with '10003'
-10001 10003 0
c Var 'aux414' direct represents '3' with '10004'
10001 -10003 10004 0
-10004 10003 0
-10004 -10001 0
c Var 'aux414' order represents '4' with '10005'
-10003 10005 0
c Var 'aux414' direct represents '4' with '10006'
10003 -10005 10006 0
-10006 10005 0
-10006 -10003 0
c Var 'aux414' order represents '5' with '10007'
-10005 10007 0
c Var 'aux414' direct represents '5' with '10008'
10005 -10007 10008 0
-10008 10007 0
-10008 -10005 0
c Var 'aux414' order represents '6' with '10009'
-10007 10009 0
c Var 'aux414' direct represents '6' with '10010'
10007 -10009 10010 0
-10010 10009 0
-10010 -10007 0
c Var 'aux414' order represents '7' with '10011'
-10009 10011 0
c Var 'aux414' direct represents '7' with '10012'
10009 -10011 10012 0
-10012 10011 0
-10012 -10009 0
c Var 'aux414' order represents '8' with '10013'
-10011 10013 0
c Var 'aux414' direct represents '8' with '10014'
10011 -10013 10014 0
-10014 10013 0
-10014 -10011 0
c Var 'aux414' order represents '9' with '10015'
-10013 10015 0
c Var 'aux414' direct represents '9' with '10016'
10013 -10015 10016 0
-10016 10015 0
-10016 -10013 0
c Var 'aux414' order represents '10' with '10017'
-10015 10017 0
c Var 'aux414' direct represents '10' with '10018'
10015 -10017 10018 0
-10018 10017 0
-10018 -10015 0
c Var 'aux414' order represents '11' with '10019'
-10017 10019 0
c Var 'aux414' direct represents '11' with '10020'
10017 -10019 10020 0
-10020 10019 0
-10020 -10017 0
c Var 'aux414' order represents '12' with '10021'
-10019 10021 0
c Var 'aux414' direct represents '12' with '10022'
10019 -10021 10022 0
-10022 10021 0
-10022 -10019 0
c Var 'aux414' order represents '13' with '10023'
-10021 10023 0
c Var 'aux414' direct represents '13' with '10024'
10021 -10023 10024 0
-10024 10023 0
-10024 -10021 0
c Var 'aux414' order represents '14' with '10025'
-10023 10025 0
c Var 'aux414' direct represents '14' with '10026'
10023 -10025 10026 0
-10026 10025 0
-10026 -10023 0
c Var 'aux414' order represents '15' with '10027'
-10025 10027 0
c Var 'aux414' direct represents '15' with '10028'
10025 -10027 10028 0
-10028 10027 0
-10028 -10025 0
c Var 'aux414' order represents '16' with '10029'
-10027 10029 0
c Var 'aux414' direct represents '16' with '10030'
10027 -10029 10030 0
-10030 10029 0
-10030 -10027 0
c Var 'aux414' direct represents '17' with '-10029'
9998 10000 10002 10004 10006 10008 10010 10012 10014 10016 10018 10020 10022 10024 10026 10028 10030 -10029 0
c Encoding variable: aux415 with domain: int(0..18) (representing constraint (aux60 + aux54))
c Both direct and order encoding.
c Var 'aux415' order represents '0' with '10031'
c Var 'aux415' direct represents '0' with '10031'
c Var 'aux415' order represents '1' with '10032'
-10031 10032 0
c Var 'aux415' direct represents '1' with '10033'
10031 -10032 10033 0
-10033 10032 0
-10033 -10031 0
c Var 'aux415' order represents '2' with '10034'
-10032 10034 0
c Var 'aux415' direct represents '2' with '10035'
10032 -10034 10035 0
-10035 10034 0
-10035 -10032 0
c Var 'aux415' order represents '3' with '10036'
-10034 10036 0
c Var 'aux415' direct represents '3' with '10037'
10034 -10036 10037 0
-10037 10036 0
-10037 -10034 0
c Var 'aux415' order represents '4' with '10038'
-10036 10038 0
c Var 'aux415' direct represents '4' with '10039'
10036 -10038 10039 0
-10039 10038 0
-10039 -10036 0
c Var 'aux415' order represents '5' with '10040'
-10038 10040 0
c Var 'aux415' direct represents '5' with '10041'
10038 -10040 10041 0
-10041 10040 0
-10041 -10038 0
c Var 'aux415' order represents '6' with '10042'
-10040 10042 0
c Var 'aux415' direct represents '6' with '10043'
10040 -10042 10043 0
-10043 10042 0
-10043 -10040 0
c Var 'aux415' order represents '7' with '10044'
-10042 10044 0
c Var 'aux415' direct represents '7' with '10045'
10042 -10044 10045 0
-10045 10044 0
-10045 -10042 0
c Var 'aux415' order represents '8' with '10046'
-10044 10046 0
c Var 'aux415' direct represents '8' with '10047'
10044 -10046 10047 0
-10047 10046 0
-10047 -10044 0
c Var 'aux415' order represents '9' with '10048'
-10046 10048 0
c Var 'aux415' direct represents '9' with '10049'
10046 -10048 10049 0
-10049 10048 0
-10049 -10046 0
c Var 'aux415' order represents '10' with '10050'
-10048 10050 0
c Var 'aux415' direct represents '10' with '10051'
10048 -10050 10051 0
-10051 10050 0
-10051 -10048 0
c Var 'aux415' order represents '11' with '10052'
-10050 10052 0
c Var 'aux415' direct represents '11' with '10053'
10050 -10052 10053 0
-10053 10052 0
-10053 -10050 0
c Var 'aux415' order represents '12' with '10054'
-10052 10054 0
c Var 'aux415' direct represents '12' with '10055'
10052 -10054 10055 0
-10055 10054 0
-10055 -10052 0
c Var 'aux415' order represents '13' with '10056'
-10054 10056 0
c Var 'aux415' direct represents '13' with '10057'
10054 -10056 10057 0
-10057 10056 0
-10057 -10054 0
c Var 'aux415' order represents '14' with '10058'
-10056 10058 0
c Var 'aux415' direct represents '14' with '10059'
10056 -10058 10059 0
-10059 10058 0
-10059 -10056 0
c Var 'aux415' order represents '15' with '10060'
-10058 10060 0
c Var 'aux415' direct represents '15' with '10061'
10058 -10060 10061 0
-10061 10060 0
-10061 -10058 0
c Var 'aux415' order represents '16' with '10062'
-10060 10062 0
c Var 'aux415' direct represents '16' with '10063'
10060 -10062 10063 0
-10063 10062 0
-10063 -10060 0
c Var 'aux415' order represents '17' with '10064'
-10062 10064 0
c Var 'aux415' direct represents '17' with '10065'
10062 -10064 10065 0
-10065 10064 0
-10065 -10062 0
c Var 'aux415' direct represents '18' with '-10064'
10031 10033 10035 10037 10039 10041 10043 10045 10047 10049 10051 10053 10055 10057 10059 10061 10063 10065 -10064 0
c Encoding variable: aux416 with domain: int(0..18) (representing constraint (aux59 + aux56))
c Both direct and order encoding.
c Var 'aux416' order represents '0' with '10066'
c Var 'aux416' direct represents '0' with '10066'
c Var 'aux416' order represents '1' with '10067'
-10066 10067 0
c Var 'aux416' direct represents '1' with '10068'
10066 -10067 10068 0
-10068 10067 0
-10068 -10066 0
c Var 'aux416' order represents '2' with '10069'
-10067 10069 0
c Var 'aux416' direct represents '2' with '10070'
10067 -10069 10070 0
-10070 10069 0
-10070 -10067 0
c Var 'aux416' order represents '3' with '10071'
-10069 10071 0
c Var 'aux416' direct represents '3' with '10072'
10069 -10071 10072 0
-10072 10071 0
-10072 -10069 0
c Var 'aux416' order represents '4' with '10073'
-10071 10073 0
c Var 'aux416' direct represents '4' with '10074'
10071 -10073 10074 0
-10074 10073 0
-10074 -10071 0
c Var 'aux416' order represents '5' with '10075'
-10073 10075 0
c Var 'aux416' direct represents '5' with '10076'
10073 -10075 10076 0
-10076 10075 0
-10076 -10073 0
c Var 'aux416' order represents '6' with '10077'
-10075 10077 0
c Var 'aux416' direct represents '6' with '10078'
10075 -10077 10078 0
-10078 10077 0
-10078 -10075 0
c Var 'aux416' order represents '7' with '10079'
-10077 10079 0
c Var 'aux416' direct represents '7' with '10080'
10077 -10079 10080 0
-10080 10079 0
-10080 -10077 0
c Var 'aux416' order represents '8' with '10081'
-10079 10081 0
c Var 'aux416' direct represents '8' with '10082'
10079 -10081 10082 0
-10082 10081 0
-10082 -10079 0
c Var 'aux416' order represents '9' with '10083'
-10081 10083 0
c Var 'aux416' direct represents '9' with '10084'
10081 -10083 10084 0
-10084 10083 0
-10084 -10081 0
c Var 'aux416' order represents '10' with '10085'
-10083 10085 0
c Var 'aux416' direct represents '10' with '10086'
10083 -10085 10086 0
-10086 10085 0
-10086 -10083 0
c Var 'aux416' order represents '11' with '10087'
-10085 10087 0
c Var 'aux416' direct represents '11' with '10088'
10085 -10087 10088 0
-10088 10087 0
-10088 -10085 0
c Var 'aux416' order represents '12' with '10089'
-10087 10089 0
c Var 'aux416' direct represents '12' with '10090'
10087 -10089 10090 0
-10090 10089 0
-10090 -10087 0
c Var 'aux416' order represents '13' with '10091'
-10089 10091 0
c Var 'aux416' direct represents '13' with '10092'
10089 -10091 10092 0
-10092 10091 0
-10092 -10089 0
c Var 'aux416' order represents '14' with '10093'
-10091 10093 0
c Var 'aux416' direct represents '14' with '10094'
10091 -10093 10094 0
-10094 10093 0
-10094 -10091 0
c Var 'aux416' order represents '15' with '10095'
-10093 10095 0
c Var 'aux416' direct represents '15' with '10096'
10093 -10095 10096 0
-10096 10095 0
-10096 -10093 0
c Var 'aux416' order represents '16' with '10097'
-10095 10097 0
c Var 'aux416' direct represents '16' with '10098'
10095 -10097 10098 0
-10098 10097 0
-10098 -10095 0
c Var 'aux416' order represents '17' with '10099'
-10097 10099 0
c Var 'aux416' direct represents '17' with '10100'
10097 -10099 10100 0
-10100 10099 0
-10100 -10097 0
c Var 'aux416' direct represents '18' with '-10099'
10066 10068 10070 10072 10074 10076 10078 10080 10082 10084 10086 10088 10090 10092 10094 10096 10098 10100 -10099 0
c Encoding variable: aux417 with domain: int(0..18) (representing constraint (aux58 + aux57))
c Both direct and order encoding.
c Var 'aux417' order represents '0' with '10101'
c Var 'aux417' direct represents '0' with '10101'
c Var 'aux417' order represents '1' with '10102'
-10101 10102 0
c Var 'aux417' direct represents '1' with '10103'
10101 -10102 10103 0
-10103 10102 0
-10103 -10101 0
c Var 'aux417' order represents '2' with '10104'
-10102 10104 0
c Var 'aux417' direct represents '2' with '10105'
10102 -10104 10105 0
-10105 10104 0
-10105 -10102 0
c Var 'aux417' order represents '3' with '10106'
-10104 10106 0
c Var 'aux417' direct represents '3' with '10107'
10104 -10106 10107 0
-10107 10106 0
-10107 -10104 0
c Var 'aux417' order represents '4' with '10108'
-10106 10108 0
c Var 'aux417' direct represents '4' with '10109'
10106 -10108 10109 0
-10109 10108 0
-10109 -10106 0
c Var 'aux417' order represents '5' with '10110'
-10108 10110 0
c Var 'aux417' direct represents '5' with '10111'
10108 -10110 10111 0
-10111 10110 0
-10111 -10108 0
c Var 'aux417' order represents '6' with '10112'
-10110 10112 0
c Var 'aux417' direct represents '6' with '10113'
10110 -10112 10113 0
-10113 10112 0
-10113 -10110 0
c Var 'aux417' order represents '7' with '10114'
-10112 10114 0
c Var 'aux417' direct represents '7' with '10115'
10112 -10114 10115 0
-10115 10114 0
-10115 -10112 0
c Var 'aux417' order represents '8' with '10116'
-10114 10116 0
c Var 'aux417' direct represents '8' with '10117'
10114 -10116 10117 0
-10117 10116 0
-10117 -10114 0
c Var 'aux417' order represents '9' with '10118'
-10116 10118 0
c Var 'aux417' direct represents '9' with '10119'
10116 -10118 10119 0
-10119 10118 0
-10119 -10116 0
c Var 'aux417' order represents '10' with '10120'
-10118 10120 0
c Var 'aux417' direct represents '10' with '10121'
10118 -10120 10121 0
-10121 10120 0
-10121 -10118 0
c Var 'aux417' order represents '11' with '10122'
-10120 10122 0
c Var 'aux417' direct represents '11' with '10123'
10120 -10122 10123 0
-10123 10122 0
-10123 -10120 0
c Var 'aux417' order represents '12' with '10124'
-10122 10124 0
c Var 'aux417' direct represents '12' with '10125'
10122 -10124 10125 0
-10125 10124 0
-10125 -10122 0
c Var 'aux417' order represents '13' with '10126'
-10124 10126 0
c Var 'aux417' direct represents '13' with '10127'
10124 -10126 10127 0
-10127 10126 0
-10127 -10124 0
c Var 'aux417' order represents '14' with '10128'
-10126 10128 0
c Var 'aux417' direct represents '14' with '10129'
10126 -10128 10129 0
-10129 10128 0
-10129 -10126 0
c Var 'aux417' order represents '15' with '10130'
-10128 10130 0
c Var 'aux417' direct represents '15' with '10131'
10128 -10130 10131 0
-10131 10130 0
-10131 -10128 0
c Var 'aux417' order represents '16' with '10132'
-10130 10132 0
c Var 'aux417' direct represents '16' with '10133'
10130 -10132 10133 0
-10133 10132 0
-10133 -10130 0
c Var 'aux417' order represents '17' with '10134'
-10132 10134 0
c Var 'aux417' direct represents '17' with '10135'
10132 -10134 10135 0
-10135 10134 0
-10135 -10132 0
c Var 'aux417' direct represents '18' with '-10134'
10101 10103 10105 10107 10109 10111 10113 10115 10117 10119 10121 10123 10125 10127 10129 10131 10133 10135 -10134 0
c Encoding variable: aux418 with domain: int(0..26) (representing constraint (aux55 + aux414))
c Both direct and order encoding.
c Var 'aux418' order represents '0' with '10136'
c Var 'aux418' direct represents '0' with '10136'
c Var 'aux418' order represents '1' with '10137'
-10136 10137 0
c Var 'aux418' direct represents '1' with '10138'
10136 -10137 10138 0
-10138 10137 0
-10138 -10136 0
c Var 'aux418' order represents '2' with '10139'
-10137 10139 0
c Var 'aux418' direct represents '2' with '10140'
10137 -10139 10140 0
-10140 10139 0
-10140 -10137 0
c Var 'aux418' order represents '3' with '10141'
-10139 10141 0
c Var 'aux418' direct represents '3' with '10142'
10139 -10141 10142 0
-10142 10141 0
-10142 -10139 0
c Var 'aux418' order represents '4' with '10143'
-10141 10143 0
c Var 'aux418' direct represents '4' with '10144'
10141 -10143 10144 0
-10144 10143 0
-10144 -10141 0
c Var 'aux418' order represents '5' with '10145'
-10143 10145 0
c Var 'aux418' direct represents '5' with '10146'
10143 -10145 10146 0
-10146 10145 0
-10146 -10143 0
c Var 'aux418' order represents '6' with '10147'
-10145 10147 0
c Var 'aux418' direct represents '6' with '10148'
10145 -10147 10148 0
-10148 10147 0
-10148 -10145 0
c Var 'aux418' order represents '7' with '10149'
-10147 10149 0
c Var 'aux418' direct represents '7' with '10150'
10147 -10149 10150 0
-10150 10149 0
-10150 -10147 0
c Var 'aux418' order represents '8' with '10151'
-10149 10151 0
c Var 'aux418' direct represents '8' with '10152'
10149 -10151 10152 0
-10152 10151 0
-10152 -10149 0
c Var 'aux418' order represents '9' with '10153'
-10151 10153 0
c Var 'aux418' direct represents '9' with '10154'
10151 -10153 10154 0
-10154 10153 0
-10154 -10151 0
c Var 'aux418' order represents '10' with '10155'
-10153 10155 0
c Var 'aux418' direct represents '10' with '10156'
10153 -10155 10156 0
-10156 10155 0
-10156 -10153 0
c Var 'aux418' order represents '11' with '10157'
-10155 10157 0
c Var 'aux418' direct represents '11' with '10158'
10155 -10157 10158 0
-10158 10157 0
-10158 -10155 0
c Var 'aux418' order represents '12' with '10159'
-10157 10159 0
c Var 'aux418' direct represents '12' with '10160'
10157 -10159 10160 0
-10160 10159 0
-10160 -10157 0
c Var 'aux418' order represents '13' with '10161'
-10159 10161 0
c Var 'aux418' direct represents '13' with '10162'
10159 -10161 10162 0
-10162 10161 0
-10162 -10159 0
c Var 'aux418' order represents '14' with '10163'
-10161 10163 0
c Var 'aux418' direct represents '14' with '10164'
10161 -10163 10164 0
-10164 10163 0
-10164 -10161 0
c Var 'aux418' order represents '15' with '10165'
-10163 10165 0
c Var 'aux418' direct represents '15' with '10166'
10163 -10165 10166 0
-10166 10165 0
-10166 -10163 0
c Var 'aux418' order represents '16' with '10167'
-10165 10167 0
c Var 'aux418' direct represents '16' with '10168'
10165 -10167 10168 0
-10168 10167 0
-10168 -10165 0
c Var 'aux418' order represents '17' with '10169'
-10167 10169 0
c Var 'aux418' direct represents '17' with '10170'
10167 -10169 10170 0
-10170 10169 0
-10170 -10167 0
c Var 'aux418' order represents '18' with '10171'
-10169 10171 0
c Var 'aux418' direct represents '18' with '10172'
10169 -10171 10172 0
-10172 10171 0
-10172 -10169 0
c Var 'aux418' order represents '19' with '10173'
-10171 10173 0
c Var 'aux418' direct represents '19' with '10174'
10171 -10173 10174 0
-10174 10173 0
-10174 -10171 0
c Var 'aux418' order represents '20' with '10175'
-10173 10175 0
c Var 'aux418' direct represents '20' with '10176'
10173 -10175 10176 0
-10176 10175 0
-10176 -10173 0
c Var 'aux418' order represents '21' with '10177'
-10175 10177 0
c Var 'aux418' direct represents '21' with '10178'
10175 -10177 10178 0
-10178 10177 0
-10178 -10175 0
c Var 'aux418' order represents '22' with '10179'
-10177 10179 0
c Var 'aux418' direct represents '22' with '10180'
10177 -10179 10180 0
-10180 10179 0
-10180 -10177 0
c Var 'aux418' order represents '23' with '10181'
-10179 10181 0
c Var 'aux418' direct represents '23' with '10182'
10179 -10181 10182 0
-10182 10181 0
-10182 -10179 0
c Var 'aux418' order represents '24' with '10183'
-10181 10183 0
c Var 'aux418' direct represents '24' with '10184'
10181 -10183 10184 0
-10184 10183 0
-10184 -10181 0
c Var 'aux418' order represents '25' with '10185'
-10183 10185 0
c Var 'aux418' direct represents '25' with '10186'
10183 -10185 10186 0
-10186 10185 0
-10186 -10183 0
c Var 'aux418' direct represents '26' with '-10185'
10136 10138 10140 10142 10144 10146 10148 10150 10152 10154 10156 10158 10160 10162 10164 10166 10168 10170 10172 10174 10176 10178 10180 10182 10184 10186 -10185 0
c Encoding variable: aux419 with domain: int(0..36) (representing constraint (aux416 + aux417))
c Both direct and order encoding.
c Var 'aux419' order represents '0' with '10187'
c Var 'aux419' direct represents '0' with '10187'
c Var 'aux419' order represents '1' with '10188'
-10187 10188 0
c Var 'aux419' direct represents '1' with '10189'
10187 -10188 10189 0
-10189 10188 0
-10189 -10187 0
c Var 'aux419' order represents '2' with '10190'
-10188 10190 0
c Var 'aux419' direct represents '2' with '10191'
10188 -10190 10191 0
-10191 10190 0
-10191 -10188 0
c Var 'aux419' order represents '3' with '10192'
-10190 10192 0
c Var 'aux419' direct represents '3' with '10193'
10190 -10192 10193 0
-10193 10192 0
-10193 -10190 0
c Var 'aux419' order represents '4' with '10194'
-10192 10194 0
c Var 'aux419' direct represents '4' with '10195'
10192 -10194 10195 0
-10195 10194 0
-10195 -10192 0
c Var 'aux419' order represents '5' with '10196'
-10194 10196 0
c Var 'aux419' direct represents '5' with '10197'
10194 -10196 10197 0
-10197 10196 0
-10197 -10194 0
c Var 'aux419' order represents '6' with '10198'
-10196 10198 0
c Var 'aux419' direct represents '6' with '10199'
10196 -10198 10199 0
-10199 10198 0
-10199 -10196 0
c Var 'aux419' order represents '7' with '10200'
-10198 10200 0
c Var 'aux419' direct represents '7' with '10201'
10198 -10200 10201 0
-10201 10200 0
-10201 -10198 0
c Var 'aux419' order represents '8' with '10202'
-10200 10202 0
c Var 'aux419' direct represents '8' with '10203'
10200 -10202 10203 0
-10203 10202 0
-10203 -10200 0
c Var 'aux419' order represents '9' with '10204'
-10202 10204 0
c Var 'aux419' direct represents '9' with '10205'
10202 -10204 10205 0
-10205 10204 0
-10205 -10202 0
c Var 'aux419' order represents '10' with '10206'
-10204 10206 0
c Var 'aux419' direct represents '10' with '10207'
10204 -10206 10207 0
-10207 10206 0
-10207 -10204 0
c Var 'aux419' order represents '11' with '10208'
-10206 10208 0
c Var 'aux419' direct represents '11' with '10209'
10206 -10208 10209 0
-10209 10208 0
-10209 -10206 0
c Var 'aux419' order represents '12' with '10210'
-10208 10210 0
c Var 'aux419' direct represents '12' with '10211'
10208 -10210 10211 0
-10211 10210 0
-10211 -10208 0
c Var 'aux419' order represents '13' with '10212'
-10210 10212 0
c Var 'aux419' direct represents '13' with '10213'
10210 -10212 10213 0
-10213 10212 0
-10213 -10210 0
c Var 'aux419' order represents '14' with '10214'
-10212 10214 0
c Var 'aux419' direct represents '14' with '10215'
10212 -10214 10215 0
-10215 10214 0
-10215 -10212 0
c Var 'aux419' order represents '15' with '10216'
-10214 10216 0
c Var 'aux419' direct represents '15' with '10217'
10214 -10216 10217 0
-10217 10216 0
-10217 -10214 0
c Var 'aux419' order represents '16' with '10218'
-10216 10218 0
c Var 'aux419' direct represents '16' with '10219'
10216 -10218 10219 0
-10219 10218 0
-10219 -10216 0
c Var 'aux419' order represents '17' with '10220'
-10218 10220 0
c Var 'aux419' direct represents '17' with '10221'
10218 -10220 10221 0
-10221 10220 0
-10221 -10218 0
c Var 'aux419' order represents '18' with '10222'
-10220 10222 0
c Var 'aux419' direct represents '18' with '10223'
10220 -10222 10223 0
-10223 10222 0
-10223 -10220 0
c Var 'aux419' order represents '19' with '10224'
-10222 10224 0
c Var 'aux419' direct represents '19' with '10225'
10222 -10224 10225 0
-10225 10224 0
-10225 -10222 0
c Var 'aux419' order represents '20' with '10226'
-10224 10226 0
c Var 'aux419' direct represents '20' with '10227'
10224 -10226 10227 0
-10227 10226 0
-10227 -10224 0
c Var 'aux419' order represents '21' with '10228'
-10226 10228 0
c Var 'aux419' direct represents '21' with '10229'
10226 -10228 10229 0
-10229 10228 0
-10229 -10226 0
c Var 'aux419' order represents '22' with '10230'
-10228 10230 0
c Var 'aux419' direct represents '22' with '10231'
10228 -10230 10231 0
-10231 10230 0
-10231 -10228 0
c Var 'aux419' order represents '23' with '10232'
-10230 10232 0
c Var 'aux419' direct represents '23' with '10233'
10230 -10232 10233 0
-10233 10232 0
-10233 -10230 0
c Var 'aux419' order represents '24' with '10234'
-10232 10234 0
c Var 'aux419' direct represents '24' with '10235'
10232 -10234 10235 0
-10235 10234 0
-10235 -10232 0
c Var 'aux419' order represents '25' with '10236'
-10234 10236 0
c Var 'aux419' direct represents '25' with '10237'
10234 -10236 10237 0
-10237 10236 0
-10237 -10234 0
c Var 'aux419' order represents '26' with '10238'
-10236 10238 0
c Var 'aux419' direct represents '26' with '10239'
10236 -10238 10239 0
-10239 10238 0
-10239 -10236 0
c Var 'aux419' order represents '27' with '10240'
-10238 10240 0
c Var 'aux419' direct represents '27' with '10241'
10238 -10240 10241 0
-10241 10240 0
-10241 -10238 0
c Var 'aux419' order represents '28' with '10242'
-10240 10242 0
c Var 'aux419' direct represents '28' with '10243'
10240 -10242 10243 0
-10243 10242 0
-10243 -10240 0
c Var 'aux419' order represents '29' with '10244'
-10242 10244 0
c Var 'aux419' direct represents '29' with '10245'
10242 -10244 10245 0
-10245 10244 0
-10245 -10242 0
c Var 'aux419' order represents '30' with '10246'
-10244 10246 0
c Var 'aux419' direct represents '30' with '10247'
10244 -10246 10247 0
-10247 10246 0
-10247 -10244 0
c Var 'aux419' order represents '31' with '10248'
-10246 10248 0
c Var 'aux419' direct represents '31' with '10249'
10246 -10248 10249 0
-10249 10248 0
-10249 -10246 0
c Var 'aux419' order represents '32' with '10250'
-10248 10250 0
c Var 'aux419' direct represents '32' with '10251'
10248 -10250 10251 0
-10251 10250 0
-10251 -10248 0
c Var 'aux419' order represents '33' with '10252'
-10250 10252 0
c Var 'aux419' direct represents '33' with '10253'
10250 -10252 10253 0
-10253 10252 0
-10253 -10250 0
c Var 'aux419' order represents '34' with '10254'
-10252 10254 0
c Var 'aux419' direct represents '34' with '10255'
10252 -10254 10255 0
-10255 10254 0
-10255 -10252 0
c Var 'aux419' order represents '35' with '10256'
-10254 10256 0
c Var 'aux419' direct represents '35' with '10257'
10254 -10256 10257 0
-10257 10256 0
-10257 -10254 0
c Var 'aux419' direct represents '36' with '-10256'
10187 10189 10191 10193 10195 10197 10199 10201 10203 10205 10207 10209 10211 10213 10215 10217 10219 10221 10223 10225 10227 10229 10231 10233 10235 10237 10239 10241 10243 10245 10247 10249 10251 10253 10255 10257 -10256 0
c Encoding variable: aux420 with domain: int(0..17) (representing constraint (shift(variant_fields_00002_00007_00001, -1) + aux70))
c Both direct and order encoding.
c Var 'aux420' order represents '0' with '10258'
c Var 'aux420' direct represents '0' with '10258'
c Var 'aux420' order represents '1' with '10259'
-10258 10259 0
c Var 'aux420' direct represents '1' with '10260'
10258 -10259 10260 0
-10260 10259 0
-10260 -10258 0
c Var 'aux420' order represents '2' with '10261'
-10259 10261 0
c Var 'aux420' direct represents '2' with '10262'
10259 -10261 10262 0
-10262 10261 0
-10262 -10259 0
c Var 'aux420' order represents '3' with '10263'
-10261 10263 0
c Var 'aux420' direct represents '3' with '10264'
10261 -10263 10264 0
-10264 10263 0
-10264 -10261 0
c Var 'aux420' order represents '4' with '10265'
-10263 10265 0
c Var 'aux420' direct represents '4' with '10266'
10263 -10265 10266 0
-10266 10265 0
-10266 -10263 0
c Var 'aux420' order represents '5' with '10267'
-10265 10267 0
c Var 'aux420' direct represents '5' with '10268'
10265 -10267 10268 0
-10268 10267 0
-10268 -10265 0
c Var 'aux420' order represents '6' with '10269'
-10267 10269 0
c Var 'aux420' direct represents '6' with '10270'
10267 -10269 10270 0
-10270 10269 0
-10270 -10267 0
c Var 'aux420' order represents '7' with '10271'
-10269 10271 0
c Var 'aux420' direct represents '7' with '10272'
10269 -10271 10272 0
-10272 10271 0
-10272 -10269 0
c Var 'aux420' order represents '8' with '10273'
-10271 10273 0
c Var 'aux420' direct represents '8' with '10274'
10271 -10273 10274 0
-10274 10273 0
-10274 -10271 0
c Var 'aux420' order represents '9' with '10275'
-10273 10275 0
c Var 'aux420' direct represents '9' with '10276'
10273 -10275 10276 0
-10276 10275 0
-10276 -10273 0
c Var 'aux420' order represents '10' with '10277'
-10275 10277 0
c Var 'aux420' direct represents '10' with '10278'
10275 -10277 10278 0
-10278 10277 0
-10278 -10275 0
c Var 'aux420' order represents '11' with '10279'
-10277 10279 0
c Var 'aux420' direct represents '11' with '10280'
10277 -10279 10280 0
-10280 10279 0
-10280 -10277 0
c Var 'aux420' order represents '12' with '10281'
-10279 10281 0
c Var 'aux420' direct represents '12' with '10282'
10279 -10281 10282 0
-10282 10281 0
-10282 -10279 0
c Var 'aux420' order represents '13' with '10283'
-10281 10283 0
c Var 'aux420' direct represents '13' with '10284'
10281 -10283 10284 0
-10284 10283 0
-10284 -10281 0
c Var 'aux420' order represents '14' with '10285'
-10283 10285 0
c Var 'aux420' direct represents '14' with '10286'
10283 -10285 10286 0
-10286 10285 0
-10286 -10283 0
c Var 'aux420' order represents '15' with '10287'
-10285 10287 0
c Var 'aux420' direct represents '15' with '10288'
10285 -10287 10288 0
-10288 10287 0
-10288 -10285 0
c Var 'aux420' order represents '16' with '10289'
-10287 10289 0
c Var 'aux420' direct represents '16' with '10290'
10287 -10289 10290 0
-10290 10289 0
-10290 -10287 0
c Var 'aux420' direct represents '17' with '-10289'
10258 10260 10262 10264 10266 10268 10270 10272 10274 10276 10278 10280 10282 10284 10286 10288 10290 -10289 0
c Encoding variable: aux421 with domain: int(0..18) (representing constraint (aux69 + aux63))
c Both direct and order encoding.
c Var 'aux421' order represents '0' with '10291'
c Var 'aux421' direct represents '0' with '10291'
c Var 'aux421' order represents '1' with '10292'
-10291 10292 0
c Var 'aux421' direct represents '1' with '10293'
10291 -10292 10293 0
-10293 10292 0
-10293 -10291 0
c Var 'aux421' order represents '2' with '10294'
-10292 10294 0
c Var 'aux421' direct represents '2' with '10295'
10292 -10294 10295 0
-10295 10294 0
-10295 -10292 0
c Var 'aux421' order represents '3' with '10296'
-10294 10296 0
c Var 'aux421' direct represents '3' with '10297'
10294 -10296 10297 0
-10297 10296 0
-10297 -10294 0
c Var 'aux421' order represents '4' with '10298'
-10296 10298 0
c Var 'aux421' direct represents '4' with '10299'
10296 -10298 10299 0
-10299 10298 0
-10299 -10296 0
c Var 'aux421' order represents '5' with '10300'
-10298 10300 0
c Var 'aux421' direct represents '5' with '10301'
10298 -10300 10301 0
-10301 10300 0
-10301 -10298 0
c Var 'aux421' order represents '6' with '10302'
-10300 10302 0
c Var 'aux421' direct represents '6' with '10303'
10300 -10302 10303 0
-10303 10302 0
-10303 -10300 0
c Var 'aux421' order represents '7' with '10304'
-10302 10304 0
c Var 'aux421' direct represents '7' with '10305'
10302 -10304 10305 0
-10305 10304 0
-10305 -10302 0
c Var 'aux421' order represents '8' with '10306'
-10304 10306 0
c Var 'aux421' direct represents '8' with '10307'
10304 -10306 10307 0
-10307 10306 0
-10307 -10304 0
c Var 'aux421' order represents '9' with '10308'
-10306 10308 0
c Var 'aux421' direct represents '9' with '10309'
10306 -10308 10309 0
-10309 10308 0
-10309 -10306 0
c Var 'aux421' order represents '10' with '10310'
-10308 10310 0
c Var 'aux421' direct represents '10' with '10311'
10308 -10310 10311 0
-10311 10310 0
-10311 -10308 0
c Var 'aux421' order represents '11' with '10312'
-10310 10312 0
c Var 'aux421' direct represents '11' with '10313'
10310 -10312 10313 0
-10313 10312 0
-10313 -10310 0
c Var 'aux421' order represents '12' with '10314'
-10312 10314 0
c Var 'aux421' direct represents '12' with '10315'
10312 -10314 10315 0
-10315 10314 0
-10315 -10312 0
c Var 'aux421' order represents '13' with '10316'
-10314 10316 0
c Var 'aux421' direct represents '13' with '10317'
10314 -10316 10317 0
-10317 10316 0
-10317 -10314 0
c Var 'aux421' order represents '14' with '10318'
-10316 10318 0
c Var 'aux421' direct represents '14' with '10319'
10316 -10318 10319 0
-10319 10318 0
-10319 -10316 0
c Var 'aux421' order represents '15' with '10320'
-10318 10320 0
c Var 'aux421' direct represents '15' with '10321'
10318 -10320 10321 0
-10321 10320 0
-10321 -10318 0
c Var 'aux421' order represents '16' with '10322'
-10320 10322 0
c Var 'aux421' direct represents '16' with '10323'
10320 -10322 10323 0
-10323 10322 0
-10323 -10320 0
c Var 'aux421' order represents '17' with '10324'
-10322 10324 0
c Var 'aux421' direct represents '17' with '10325'
10322 -10324 10325 0
-10325 10324 0
-10325 -10322 0
c Var 'aux421' direct represents '18' with '-10324'
10291 10293 10295 10297 10299 10301 10303 10305 10307 10309 10311 10313 10315 10317 10319 10321 10323 10325 -10324 0
c Encoding variable: aux422 with domain: int(0..18) (representing constraint (aux68 + aux65))
c Both direct and order encoding.
c Var 'aux422' order represents '0' with '10326'
c Var 'aux422' direct represents '0' with '10326'
c Var 'aux422' order represents '1' with '10327'
-10326 10327 0
c Var 'aux422' direct represents '1' with '10328'
10326 -10327 10328 0
-10328 10327 0
-10328 -10326 0
c Var 'aux422' order represents '2' with '10329'
-10327 10329 0
c Var 'aux422' direct represents '2' with '10330'
10327 -10329 10330 0
-10330 10329 0
-10330 -10327 0
c Var 'aux422' order represents '3' with '10331'
-10329 10331 0
c Var 'aux422' direct represents '3' with '10332'
10329 -10331 10332 0
-10332 10331 0
-10332 -10329 0
c Var 'aux422' order represents '4' with '10333'
-10331 10333 0
c Var 'aux422' direct represents '4' with '10334'
10331 -10333 10334 0
-10334 10333 0
-10334 -10331 0
c Var 'aux422' order represents '5' with '10335'
-10333 10335 0
c Var 'aux422' direct represents '5' with '10336'
10333 -10335 10336 0
-10336 10335 0
-10336 -10333 0
c Var 'aux422' order represents '6' with '10337'
-10335 10337 0
c Var 'aux422' direct represents '6' with '10338'
10335 -10337 10338 0
-10338 10337 0
-10338 -10335 0
c Var 'aux422' order represents '7' with '10339'
-10337 10339 0
c Var 'aux422' direct represents '7' with '10340'
10337 -10339 10340 0
-10340 10339 0
-10340 -10337 0
c Var 'aux422' order represents '8' with '10341'
-10339 10341 0
c Var 'aux422' direct represents '8' with '10342'
10339 -10341 10342 0
-10342 10341 0
-10342 -10339 0
c Var 'aux422' order represents '9' with '10343'
-10341 10343 0
c Var 'aux422' direct represents '9' with '10344'
10341 -10343 10344 0
-10344 10343 0
-10344 -10341 0
c Var 'aux422' order represents '10' with '10345'
-10343 10345 0
c Var 'aux422' direct represents '10' with '10346'
10343 -10345 10346 0
-10346 10345 0
-10346 -10343 0
c Var 'aux422' order represents '11' with '10347'
-10345 10347 0
c Var 'aux422' direct represents '11' with '10348'
10345 -10347 10348 0
-10348 10347 0
-10348 -10345 0
c Var 'aux422' order represents '12' with '10349'
-10347 10349 0
c Var 'aux422' direct represents '12' with '10350'
10347 -10349 10350 0
-10350 10349 0
-10350 -10347 0
c Var 'aux422' order represents '13' with '10351'
-10349 10351 0
c Var 'aux422' direct represents '13' with '10352'
10349 -10351 10352 0
-10352 10351 0
-10352 -10349 0
c Var 'aux422' order represents '14' with '10353'
-10351 10353 0
c Var 'aux422' direct represents '14' with '10354'
10351 -10353 10354 0
-10354 10353 0
-10354 -10351 0
c Var 'aux422' order represents '15' with '10355'
-10353 10355 0
c Var 'aux422' direct represents '15' with '10356'
10353 -10355 10356 0
-10356 10355 0
-10356 -10353 0
c Var 'aux422' order represents '16' with '10357'
-10355 10357 0
c Var 'aux422' direct represents '16' with '10358'
10355 -10357 10358 0
-10358 10357 0
-10358 -10355 0
c Var 'aux422' order represents '17' with '10359'
-10357 10359 0
c Var 'aux422' direct represents '17' with '10360'
10357 -10359 10360 0
-10360 10359 0
-10360 -10357 0
c Var 'aux422' direct represents '18' with '-10359'
10326 10328 10330 10332 10334 10336 10338 10340 10342 10344 10346 10348 10350 10352 10354 10356 10358 10360 -10359 0
c Encoding variable: aux423 with domain: int(0..18) (representing constraint (aux67 + aux66))
c Both direct and order encoding.
c Var 'aux423' order represents '0' with '10361'
c Var 'aux423' direct represents '0' with '10361'
c Var 'aux423' order represents '1' with '10362'
-10361 10362 0
c Var 'aux423' direct represents '1' with '10363'
10361 -10362 10363 0
-10363 10362 0
-10363 -10361 0
c Var 'aux423' order represents '2' with '10364'
-10362 10364 0
c Var 'aux423' direct represents '2' with '10365'
10362 -10364 10365 0
-10365 10364 0
-10365 -10362 0
c Var 'aux423' order represents '3' with '10366'
-10364 10366 0
c Var 'aux423' direct represents '3' with '10367'
10364 -10366 10367 0
-10367 10366 0
-10367 -10364 0
c Var 'aux423' order represents '4' with '10368'
-10366 10368 0
c Var 'aux423' direct represents '4' with '10369'
10366 -10368 10369 0
-10369 10368 0
-10369 -10366 0
c Var 'aux423' order represents '5' with '10370'
-10368 10370 0
c Var 'aux423' direct represents '5' with '10371'
10368 -10370 10371 0
-10371 10370 0
-10371 -10368 0
c Var 'aux423' order represents '6' with '10372'
-10370 10372 0
c Var 'aux423' direct represents '6' with '10373'
10370 -10372 10373 0
-10373 10372 0
-10373 -10370 0
c Var 'aux423' order represents '7' with '10374'
-10372 10374 0
c Var 'aux423' direct represents '7' with '10375'
10372 -10374 10375 0
-10375 10374 0
-10375 -10372 0
c Var 'aux423' order represents '8' with '10376'
-10374 10376 0
c Var 'aux423' direct represents '8' with '10377'
10374 -10376 10377 0
-10377 10376 0
-10377 -10374 0
c Var 'aux423' order represents '9' with '10378'
-10376 10378 0
c Var 'aux423' direct represents '9' with '10379'
10376 -10378 10379 0
-10379 10378 0
-10379 -10376 0
c Var 'aux423' order represents '10' with '10380'
-10378 10380 0
c Var 'aux423' direct represents '10' with '10381'
10378 -10380 10381 0
-10381 10380 0
-10381 -10378 0
c Var 'aux423' order represents '11' with '10382'
-10380 10382 0
c Var 'aux423' direct represents '11' with '10383'
10380 -10382 10383 0
-10383 10382 0
-10383 -10380 0
c Var 'aux423' order represents '12' with '10384'
-10382 10384 0
c Var 'aux423' direct represents '12' with '10385'
10382 -10384 10385 0
-10385 10384 0
-10385 -10382 0
c Var 'aux423' order represents '13' with '10386'
-10384 10386 0
c Var 'aux423' direct represents '13' with '10387'
10384 -10386 10387 0
-10387 10386 0
-10387 -10384 0
c Var 'aux423' order represents '14' with '10388'
-10386 10388 0
c Var 'aux423' direct represents '14' with '10389'
10386 -10388 10389 0
-10389 10388 0
-10389 -10386 0
c Var 'aux423' order represents '15' with '10390'
-10388 10390 0
c Var 'aux423' direct represents '15' with '10391'
10388 -10390 10391 0
-10391 10390 0
-10391 -10388 0
c Var 'aux423' order represents '16' with '10392'
-10390 10392 0
c Var 'aux423' direct represents '16' with '10393'
10390 -10392 10393 0
-10393 10392 0
-10393 -10390 0
c Var 'aux423' order represents '17' with '10394'
-10392 10394 0
c Var 'aux423' direct represents '17' with '10395'
10392 -10394 10395 0
-10395 10394 0
-10395 -10392 0
c Var 'aux423' direct represents '18' with '-10394'
10361 10363 10365 10367 10369 10371 10373 10375 10377 10379 10381 10383 10385 10387 10389 10391 10393 10395 -10394 0
c Encoding variable: aux424 with domain: int(0..26) (representing constraint (aux64 + aux420))
c Both direct and order encoding.
c Var 'aux424' order represents '0' with '10396'
c Var 'aux424' direct represents '0' with '10396'
c Var 'aux424' order represents '1' with '10397'
-10396 10397 0
c Var 'aux424' direct represents '1' with '10398'
10396 -10397 10398 0
-10398 10397 0
-10398 -10396 0
c Var 'aux424' order represents '2' with '10399'
-10397 10399 0
c Var 'aux424' direct represents '2' with '10400'
10397 -10399 10400 0
-10400 10399 0
-10400 -10397 0
c Var 'aux424' order represents '3' with '10401'
-10399 10401 0
c Var 'aux424' direct represents '3' with '10402'
10399 -10401 10402 0
-10402 10401 0
-10402 -10399 0
c Var 'aux424' order represents '4' with '10403'
-10401 10403 0
c Var 'aux424' direct represents '4' with '10404'
10401 -10403 10404 0
-10404 10403 0
-10404 -10401 0
c Var 'aux424' order represents '5' with '10405'
-10403 10405 0
c Var 'aux424' direct represents '5' with '10406'
10403 -10405 10406 0
-10406 10405 0
-10406 -10403 0
c Var 'aux424' order represents '6' with '10407'
-10405 10407 0
c Var 'aux424' direct represents '6' with '10408'
10405 -10407 10408 0
-10408 10407 0
-10408 -10405 0
c Var 'aux424' order represents '7' with '10409'
-10407 10409 0
c Var 'aux424' direct represents '7' with '10410'
10407 -10409 10410 0
-10410 10409 0
-10410 -10407 0
c Var 'aux424' order represents '8' with '10411'
-10409 10411 0
c Var 'aux424' direct represents '8' with '10412'
10409 -10411 10412 0
-10412 10411 0
-10412 -10409 0
c Var 'aux424' order represents '9' with '10413'
-10411 10413 0
c Var 'aux424' direct represents '9' with '10414'
10411 -10413 10414 0
-10414 10413 0
-10414 -10411 0
c Var 'aux424' order represents '10' with '10415'
-10413 10415 0
c Var 'aux424' direct represents '10' with '10416'
10413 -10415 10416 0
-10416 10415 0
-10416 -10413 0
c Var 'aux424' order represents '11' with '10417'
-10415 10417 0
c Var 'aux424' direct represents '11' with '10418'
10415 -10417 10418 0
-10418 10417 0
-10418 -10415 0
c Var 'aux424' order represents '12' with '10419'
-10417 10419 0
c Var 'aux424' direct represents '12' with '10420'
10417 -10419 10420 0
-10420 10419 0
-10420 -10417 0
c Var 'aux424' order represents '13' with '10421'
-10419 10421 0
c Var 'aux424' direct represents '13' with '10422'
10419 -10421 10422 0
-10422 10421 0
-10422 -10419 0
c Var 'aux424' order represents '14' with '10423'
-10421 10423 0
c Var 'aux424' direct represents '14' with '10424'
10421 -10423 10424 0
-10424 10423 0
-10424 -10421 0
c Var 'aux424' order represents '15' with '10425'
-10423 10425 0
c Var 'aux424' direct represents '15' with '10426'
10423 -10425 10426 0
-10426 10425 0
-10426 -10423 0
c Var 'aux424' order represents '16' with '10427'
-10425 10427 0
c Var 'aux424' direct represents '16' with '10428'
10425 -10427 10428 0
-10428 10427 0
-10428 -10425 0
c Var 'aux424' order represents '17' with '10429'
-10427 10429 0
c Var 'aux424' direct represents '17' with '10430'
10427 -10429 10430 0
-10430 10429 0
-10430 -10427 0
c Var 'aux424' order represents '18' with '10431'
-10429 10431 0
c Var 'aux424' direct represents '18' with '10432'
10429 -10431 10432 0
-10432 10431 0
-10432 -10429 0
c Var 'aux424' order represents '19' with '10433'
-10431 10433 0
c Var 'aux424' direct represents '19' with '10434'
10431 -10433 10434 0
-10434 10433 0
-10434 -10431 0
c Var 'aux424' order represents '20' with '10435'
-10433 10435 0
c Var 'aux424' direct represents '20' with '10436'
10433 -10435 10436 0
-10436 10435 0
-10436 -10433 0
c Var 'aux424' order represents '21' with '10437'
-10435 10437 0
c Var 'aux424' direct represents '21' with '10438'
10435 -10437 10438 0
-10438 10437 0
-10438 -10435 0
c Var 'aux424' order represents '22' with '10439'
-10437 10439 0
c Var 'aux424' direct represents '22' with '10440'
10437 -10439 10440 0
-10440 10439 0
-10440 -10437 0
c Var 'aux424' order represents '23' with '10441'
-10439 10441 0
c Var 'aux424' direct represents '23' with '10442'
10439 -10441 10442 0
-10442 10441 0
-10442 -10439 0
c Var 'aux424' order represents '24' with '10443'
-10441 10443 0
c Var 'aux424' direct represents '24' with '10444'
10441 -10443 10444 0
-10444 10443 0
-10444 -10441 0
c Var 'aux424' order represents '25' with '10445'
-10443 10445 0
c Var 'aux424' direct represents '25' with '10446'
10443 -10445 10446 0
-10446 10445 0
-10446 -10443 0
c Var 'aux424' direct represents '26' with '-10445'
10396 10398 10400 10402 10404 10406 10408 10410 10412 10414 10416 10418 10420 10422 10424 10426 10428 10430 10432 10434 10436 10438 10440 10442 10444 10446 -10445 0
c Encoding variable: aux425 with domain: int(0..36) (representing constraint (aux422 + aux423))
c Both direct and order encoding.
c Var 'aux425' order represents '0' with '10447'
c Var 'aux425' direct represents '0' with '10447'
c Var 'aux425' order represents '1' with '10448'
-10447 10448 0
c Var 'aux425' direct represents '1' with '10449'
10447 -10448 10449 0
-10449 10448 0
-10449 -10447 0
c Var 'aux425' order represents '2' with '10450'
-10448 10450 0
c Var 'aux425' direct represents '2' with '10451'
10448 -10450 10451 0
-10451 10450 0
-10451 -10448 0
c Var 'aux425' order represents '3' with '10452'
-10450 10452 0
c Var 'aux425' direct represents '3' with '10453'
10450 -10452 10453 0
-10453 10452 0
-10453 -10450 0
c Var 'aux425' order represents '4' with '10454'
-10452 10454 0
c Var 'aux425' direct represents '4' with '10455'
10452 -10454 10455 0
-10455 10454 0
-10455 -10452 0
c Var 'aux425' order represents '5' with '10456'
-10454 10456 0
c Var 'aux425' direct represents '5' with '10457'
10454 -10456 10457 0
-10457 10456 0
-10457 -10454 0
c Var 'aux425' order represents '6' with '10458'
-10456 10458 0
c Var 'aux425' direct represents '6' with '10459'
10456 -10458 10459 0
-10459 10458 0
-10459 -10456 0
c Var 'aux425' order represents '7' with '10460'
-10458 10460 0
c Var 'aux425' direct represents '7' with '10461'
10458 -10460 10461 0
-10461 10460 0
-10461 -10458 0
c Var 'aux425' order represents '8' with '10462'
-10460 10462 0
c Var 'aux425' direct represents '8' with '10463'
10460 -10462 10463 0
-10463 10462 0
-10463 -10460 0
c Var 'aux425' order represents '9' with '10464'
-10462 10464 0
c Var 'aux425' direct represents '9' with '10465'
10462 -10464 10465 0
-10465 10464 0
-10465 -10462 0
c Var 'aux425' order represents '10' with '10466'
-10464 10466 0
c Var 'aux425' direct represents '10' with '10467'
10464 -10466 10467 0
-10467 10466 0
-10467 -10464 0
c Var 'aux425' order represents '11' with '10468'
-10466 10468 0
c Var 'aux425' direct represents '11' with '10469'
10466 -10468 10469 0
-10469 10468 0
-10469 -10466 0
c Var 'aux425' order represents '12' with '10470'
-10468 10470 0
c Var 'aux425' direct represents '12' with '10471'
10468 -10470 10471 0
-10471 10470 0
-10471 -10468 0
c Var 'aux425' order represents '13' with '10472'
-10470 10472 0
c Var 'aux425' direct represents '13' with '10473'
10470 -10472 10473 0
-10473 10472 0
-10473 -10470 0
c Var 'aux425' order represents '14' with '10474'
-10472 10474 0
c Var 'aux425' direct represents '14' with '10475'
10472 -10474 10475 0
-10475 10474 0
-10475 -10472 0
c Var 'aux425' order represents '15' with '10476'
-10474 10476 0
c Var 'aux425' direct represents '15' with '10477'
10474 -10476 10477 0
-10477 10476 0
-10477 -10474 0
c Var 'aux425' order represents '16' with '10478'
-10476 10478 0
c Var 'aux425' direct represents '16' with '10479'
10476 -10478 10479 0
-10479 10478 0
-10479 -10476 0
c Var 'aux425' order represents '17' with '10480'
-10478 10480 0
c Var 'aux425' direct represents '17' with '10481'
10478 -10480 10481 0
-10481 10480 0
-10481 -10478 0
c Var 'aux425' order represents '18' with '10482'
-10480 10482 0
c Var 'aux425' direct represents '18' with '10483'
10480 -10482 10483 0
-10483 10482 0
-10483 -10480 0
c Var 'aux425' order represents '19' with '10484'
-10482 10484 0
c Var 'aux425' direct represents '19' with '10485'
10482 -10484 10485 0
-10485 10484 0
-10485 -10482 0
c Var 'aux425' order represents '20' with '10486'
-10484 10486 0
c Var 'aux425' direct represents '20' with '10487'
10484 -10486 10487 0
-10487 10486 0
-10487 -10484 0
c Var 'aux425' order represents '21' with '10488'
-10486 10488 0
c Var 'aux425' direct represents '21' with '10489'
10486 -10488 10489 0
-10489 10488 0
-10489 -10486 0
c Var 'aux425' order represents '22' with '10490'
-10488 10490 0
c Var 'aux425' direct represents '22' with '10491'
10488 -10490 10491 0
-10491 10490 0
-10491 -10488 0
c Var 'aux425' order represents '23' with '10492'
-10490 10492 0
c Var 'aux425' direct represents '23' with '10493'
10490 -10492 10493 0
-10493 10492 0
-10493 -10490 0
c Var 'aux425' order represents '24' with '10494'
-10492 10494 0
c Var 'aux425' direct represents '24' with '10495'
10492 -10494 10495 0
-10495 10494 0
-10495 -10492 0
c Var 'aux425' order represents '25' with '10496'
-10494 10496 0
c Var 'aux425' direct represents '25' with '10497'
10494 -10496 10497 0
-10497 10496 0
-10497 -10494 0
c Var 'aux425' order represents '26' with '10498'
-10496 10498 0
c Var 'aux425' direct represents '26' with '10499'
10496 -10498 10499 0
-10499 10498 0
-10499 -10496 0
c Var 'aux425' order represents '27' with '10500'
-10498 10500 0
c Var 'aux425' direct represents '27' with '10501'
10498 -10500 10501 0
-10501 10500 0
-10501 -10498 0
c Var 'aux425' order represents '28' with '10502'
-10500 10502 0
c Var 'aux425' direct represents '28' with '10503'
10500 -10502 10503 0
-10503 10502 0
-10503 -10500 0
c Var 'aux425' order represents '29' with '10504'
-10502 10504 0
c Var 'aux425' direct represents '29' with '10505'
10502 -10504 10505 0
-10505 10504 0
-10505 -10502 0
c Var 'aux425' order represents '30' with '10506'
-10504 10506 0
c Var 'aux425' direct represents '30' with '10507'
10504 -10506 10507 0
-10507 10506 0
-10507 -10504 0
c Var 'aux425' order represents '31' with '10508'
-10506 10508 0
c Var 'aux425' direct represents '31' with '10509'
10506 -10508 10509 0
-10509 10508 0
-10509 -10506 0
c Var 'aux425' order represents '32' with '10510'
-10508 10510 0
c Var 'aux425' direct represents '32' with '10511'
10508 -10510 10511 0
-10511 10510 0
-10511 -10508 0
c Var 'aux425' order represents '33' with '10512'
-10510 10512 0
c Var 'aux425' direct represents '33' with '10513'
10510 -10512 10513 0
-10513 10512 0
-10513 -10510 0
c Var 'aux425' order represents '34' with '10514'
-10512 10514 0
c Var 'aux425' direct represents '34' with '10515'
10512 -10514 10515 0
-10515 10514 0
-10515 -10512 0
c Var 'aux425' order represents '35' with '10516'
-10514 10516 0
c Var 'aux425' direct represents '35' with '10517'
10514 -10516 10517 0
-10517 10516 0
-10517 -10514 0
c Var 'aux425' direct represents '36' with '-10516'
10447 10449 10451 10453 10455 10457 10459 10461 10463 10465 10467 10469 10471 10473 10475 10477 10479 10481 10483 10485 10487 10489 10491 10493 10495 10497 10499 10501 10503 10505 10507 10509 10511 10513 10515 10517 -10516 0
c Encoding variable: aux426 with domain: int(0..17) (representing constraint (shift(variant_fields_00003_00002_00001, -1) + aux79))
c Both direct and order encoding.
c Var 'aux426' order represents '0' with '10518'
c Var 'aux426' direct represents '0' with '10518'
c Var 'aux426' order represents '1' with '10519'
-10518 10519 0
c Var 'aux426' direct represents '1' with '10520'
10518 -10519 10520 0
-10520 10519 0
-10520 -10518 0
c Var 'aux426' order represents '2' with '10521'
-10519 10521 0
c Var 'aux426' direct represents '2' with '10522'
10519 -10521 10522 0
-10522 10521 0
-10522 -10519 0
c Var 'aux426' order represents '3' with '10523'
-10521 10523 0
c Var 'aux426' direct represents '3' with '10524'
10521 -10523 10524 0
-10524 10523 0
-10524 -10521 0
c Var 'aux426' order represents '4' with '10525'
-10523 10525 0
c Var 'aux426' direct represents '4' with '10526'
10523 -10525 10526 0
-10526 10525 0
-10526 -10523 0
c Var 'aux426' order represents '5' with '10527'
-10525 10527 0
c Var 'aux426' direct represents '5' with '10528'
10525 -10527 10528 0
-10528 10527 0
-10528 -10525 0
c Var 'aux426' order represents '6' with '10529'
-10527 10529 0
c Var 'aux426' direct represents '6' with '10530'
10527 -10529 10530 0
-10530 10529 0
-10530 -10527 0
c Var 'aux426' order represents '7' with '10531'
-10529 10531 0
c Var 'aux426' direct represents '7' with '10532'
10529 -10531 10532 0
-10532 10531 0
-10532 -10529 0
c Var 'aux426' order represents '8' with '10533'
-10531 10533 0
c Var 'aux426' direct represents '8' with '10534'
10531 -10533 10534 0
-10534 10533 0
-10534 -10531 0
c Var 'aux426' order represents '9' with '10535'
-10533 10535 0
c Var 'aux426' direct represents '9' with '10536'
10533 -10535 10536 0
-10536 10535 0
-10536 -10533 0
c Var 'aux426' order represents '10' with '10537'
-10535 10537 0
c Var 'aux426' direct represents '10' with '10538'
10535 -10537 10538 0
-10538 10537 0
-10538 -10535 0
c Var 'aux426' order represents '11' with '10539'
-10537 10539 0
c Var 'aux426' direct represents '11' with '10540'
10537 -10539 10540 0
-10540 10539 0
-10540 -10537 0
c Var 'aux426' order represents '12' with '10541'
-10539 10541 0
c Var 'aux426' direct represents '12' with '10542'
10539 -10541 10542 0
-10542 10541 0
-10542 -10539 0
c Var 'aux426' order represents '13' with '10543'
-10541 10543 0
c Var 'aux426' direct represents '13' with '10544'
10541 -10543 10544 0
-10544 10543 0
-10544 -10541 0
c Var 'aux426' order represents '14' with '10545'
-10543 10545 0
c Var 'aux426' direct represents '14' with '10546'
10543 -10545 10546 0
-10546 10545 0
-10546 -10543 0
c Var 'aux426' order represents '15' with '10547'
-10545 10547 0
c Var 'aux426' direct represents '15' with '10548'
10545 -10547 10548 0
-10548 10547 0
-10548 -10545 0
c Var 'aux426' order represents '16' with '10549'
-10547 10549 0
c Var 'aux426' direct represents '16' with '10550'
10547 -10549 10550 0
-10550 10549 0
-10550 -10547 0
c Var 'aux426' direct represents '17' with '-10549'
10518 10520 10522 10524 10526 10528 10530 10532 10534 10536 10538 10540 10542 10544 10546 10548 10550 -10549 0
c Encoding variable: aux427 with domain: int(0..18) (representing constraint (aux78 + aux72))
c Both direct and order encoding.
c Var 'aux427' order represents '0' with '10551'
c Var 'aux427' direct represents '0' with '10551'
c Var 'aux427' order represents '1' with '10552'
-10551 10552 0
c Var 'aux427' direct represents '1' with '10553'
10551 -10552 10553 0
-10553 10552 0
-10553 -10551 0
c Var 'aux427' order represents '2' with '10554'
-10552 10554 0
c Var 'aux427' direct represents '2' with '10555'
10552 -10554 10555 0
-10555 10554 0
-10555 -10552 0
c Var 'aux427' order represents '3' with '10556'
-10554 10556 0
c Var 'aux427' direct represents '3' with '10557'
10554 -10556 10557 0
-10557 10556 0
-10557 -10554 0
c Var 'aux427' order represents '4' with '10558'
-10556 10558 0
c Var 'aux427' direct represents '4' with '10559'
10556 -10558 10559 0
-10559 10558 0
-10559 -10556 0
c Var 'aux427' order represents '5' with '10560'
-10558 10560 0
c Var 'aux427' direct represents '5' with '10561'
10558 -10560 10561 0
-10561 10560 0
-10561 -10558 0
c Var 'aux427' order represents '6' with '10562'
-10560 10562 0
c Var 'aux427' direct represents '6' with '10563'
10560 -10562 10563 0
-10563 10562 0
-10563 -10560 0
c Var 'aux427' order represents '7' with '10564'
-10562 10564 0
c Var 'aux427' direct represents '7' with '10565'
10562 -10564 10565 0
-10565 10564 0
-10565 -10562 0
c Var 'aux427' order represents '8' with '10566'
-10564 10566 0
c Var 'aux427' direct represents '8' with '10567'
10564 -10566 10567 0
-10567 10566 0
-10567 -10564 0
c Var 'aux427' order represents '9' with '10568'
-10566 10568 0
c Var 'aux427' direct represents '9' with '10569'
10566 -10568 10569 0
-10569 10568 0
-10569 -10566 0
c Var 'aux427' order represents '10' with '10570'
-10568 10570 0
c Var 'aux427' direct represents '10' with '10571'
10568 -10570 10571 0
-10571 10570 0
-10571 -10568 0
c Var 'aux427' order represents '11' with '10572'
-10570 10572 0
c Var 'aux427' direct represents '11' with '10573'
10570 -10572 10573 0
-10573 10572 0
-10573 -10570 0
c Var 'aux427' order represents '12' with '10574'
-10572 10574 0
c Var 'aux427' direct represents '12' with '10575'
10572 -10574 10575 0
-10575 10574 0
-10575 -10572 0
c Var 'aux427' order represents '13' with '10576'
-10574 10576 0
c Var 'aux427' direct represents '13' with '10577'
10574 -10576 10577 0
-10577 10576 0
-10577 -10574 0
c Var 'aux427' order represents '14' with '10578'
-10576 10578 0
c Var 'aux427' direct represents '14' with '10579'
10576 -10578 10579 0
-10579 10578 0
-10579 -10576 0
c Var 'aux427' order represents '15' with '10580'
-10578 10580 0
c Var 'aux427' direct represents '15' with '10581'
10578 -10580 10581 0
-10581 10580 0
-10581 -10578 0
c Var 'aux427' order represents '16' with '10582'
-10580 10582 0
c Var 'aux427' direct represents '16' with '10583'
10580 -10582 10583 0
-10583 10582 0
-10583 -10580 0
c Var 'aux427' order represents '17' with '10584'
-10582 10584 0
c Var 'aux427' direct represents '17' with '10585'
10582 -10584 10585 0
-10585 10584 0
-10585 -10582 0
c Var 'aux427' direct represents '18' with '-10584'
10551 10553 10555 10557 10559 10561 10563 10565 10567 10569 10571 10573 10575 10577 10579 10581 10583 10585 -10584 0
c Encoding variable: aux428 with domain: int(0..18) (representing constraint (aux77 + aux74))
c Both direct and order encoding.
c Var 'aux428' order represents '0' with '10586'
c Var 'aux428' direct represents '0' with '10586'
c Var 'aux428' order represents '1' with '10587'
-10586 10587 0
c Var 'aux428' direct represents '1' with '10588'
10586 -10587 10588 0
-10588 10587 0
-10588 -10586 0
c Var 'aux428' order represents '2' with '10589'
-10587 10589 0
c Var 'aux428' direct represents '2' with '10590'
10587 -10589 10590 0
-10590 10589 0
-10590 -10587 0
c Var 'aux428' order represents '3' with '10591'
-10589 10591 0
c Var 'aux428' direct represents '3' with '10592'
10589 -10591 10592 0
-10592 10591 0
-10592 -10589 0
c Var 'aux428' order represents '4' with '10593'
-10591 10593 0
c Var 'aux428' direct represents '4' with '10594'
10591 -10593 10594 0
-10594 10593 0
-10594 -10591 0
c Var 'aux428' order represents '5' with '10595'
-10593 10595 0
c Var 'aux428' direct represents '5' with '10596'
10593 -10595 10596 0
-10596 10595 0
-10596 -10593 0
c Var 'aux428' order represents '6' with '10597'
-10595 10597 0
c Var 'aux428' direct represents '6' with '10598'
10595 -10597 10598 0
-10598 10597 0
-10598 -10595 0
c Var 'aux428' order represents '7' with '10599'
-10597 10599 0
c Var 'aux428' direct represents '7' with '10600'
10597 -10599 10600 0
-10600 10599 0
-10600 -10597 0
c Var 'aux428' order represents '8' with '10601'
-10599 10601 0
c Var 'aux428' direct represents '8' with '10602'
10599 -10601 10602 0
-10602 10601 0
-10602 -10599 0
c Var 'aux428' order represents '9' with '10603'
-10601 10603 0
c Var 'aux428' direct represents '9' with '10604'
10601 -10603 10604 0
-10604 10603 0
-10604 -10601 0
c Var 'aux428' order represents '10' with '10605'
-10603 10605 0
c Var 'aux428' direct represents '10' with '10606'
10603 -10605 10606 0
-10606 10605 0
-10606 -10603 0
c Var 'aux428' order represents '11' with '10607'
-10605 10607 0
c Var 'aux428' direct represents '11' with '10608'
10605 -10607 10608 0
-10608 10607 0
-10608 -10605 0
c Var 'aux428' order represents '12' with '10609'
-10607 10609 0
c Var 'aux428' direct represents '12' with '10610'
10607 -10609 10610 0
-10610 10609 0
-10610 -10607 0
c Var 'aux428' order represents '13' with '10611'
-10609 10611 0
c Var 'aux428' direct represents '13' with '10612'
10609 -10611 10612 0
-10612 10611 0
-10612 -10609 0
c Var 'aux428' order represents '14' with '10613'
-10611 10613 0
c Var 'aux428' direct represents '14' with '10614'
10611 -10613 10614 0
-10614 10613 0
-10614 -10611 0
c Var 'aux428' order represents '15' with '10615'
-10613 10615 0
c Var 'aux428' direct represents '15' with '10616'
10613 -10615 10616 0
-10616 10615 0
-10616 -10613 0
c Var 'aux428' order represents '16' with '10617'
-10615 10617 0
c Var 'aux428' direct represents '16' with '10618'
10615 -10617 10618 0
-10618 10617 0
-10618 -10615 0
c Var 'aux428' order represents '17' with '10619'
-10617 10619 0
c Var 'aux428' direct represents '17' with '10620'
10617 -10619 10620 0
-10620 10619 0
-10620 -10617 0
c Var 'aux428' direct represents '18' with '-10619'
10586 10588 10590 10592 10594 10596 10598 10600 10602 10604 10606 10608 10610 10612 10614 10616 10618 10620 -10619 0
c Encoding variable: aux429 with domain: int(0..18) (representing constraint (aux76 + aux75))
c Both direct and order encoding.
c Var 'aux429' order represents '0' with '10621'
c Var 'aux429' direct represents '0' with '10621'
c Var 'aux429' order represents '1' with '10622'
-10621 10622 0
c Var 'aux429' direct represents '1' with '10623'
10621 -10622 10623 0
-10623 10622 0
-10623 -10621 0
c Var 'aux429' order represents '2' with '10624'
-10622 10624 0
c Var 'aux429' direct represents '2' with '10625'
10622 -10624 10625 0
-10625 10624 0
-10625 -10622 0
c Var 'aux429' order represents '3' with '10626'
-10624 10626 0
c Var 'aux429' direct represents '3' with '10627'
10624 -10626 10627 0
-10627 10626 0
-10627 -10624 0
c Var 'aux429' order represents '4' with '10628'
-10626 10628 0
c Var 'aux429' direct represents '4' with '10629'
10626 -10628 10629 0
-10629 10628 0
-10629 -10626 0
c Var 'aux429' order represents '5' with '10630'
-10628 10630 0
c Var 'aux429' direct represents '5' with '10631'
10628 -10630 10631 0
-10631 10630 0
-10631 -10628 0
c Var 'aux429' order represents '6' with '10632'
-10630 10632 0
c Var 'aux429' direct represents '6' with '10633'
10630 -10632 10633 0
-10633 10632 0
-10633 -10630 0
c Var 'aux429' order represents '7' with '10634'
-10632 10634 0
c Var 'aux429' direct represents '7' with '10635'
10632 -10634 10635 0
-10635 10634 0
-10635 -10632 0
c Var 'aux429' order represents '8' with '10636'
-10634 10636 0
c Var 'aux429' direct represents '8' with '10637'
10634 -10636 10637 0
-10637 10636 0
-10637 -10634 0
c Var 'aux429' order represents '9' with '10638'
-10636 10638 0
c Var 'aux429' direct represents '9' with '10639'
10636 -10638 10639 0
-10639 10638 0
-10639 -10636 0
c Var 'aux429' order represents '10' with '10640'
-10638 10640 0
c Var 'aux429' direct represents '10' with '10641'
10638 -10640 10641 0
-10641 10640 0
-10641 -10638 0
c Var 'aux429' order represents '11' with '10642'
-10640 10642 0
c Var 'aux429' direct represents '11' with '10643'
10640 -10642 10643 0
-10643 10642 0
-10643 -10640 0
c Var 'aux429' order represents '12' with '10644'
-10642 10644 0
c Var 'aux429' direct represents '12' with '10645'
10642 -10644 10645 0
-10645 10644 0
-10645 -10642 0
c Var 'aux429' order represents '13' with '10646'
-10644 10646 0
c Var 'aux429' direct represents '13' with '10647'
10644 -10646 10647 0
-10647 10646 0
-10647 -10644 0
c Var 'aux429' order represents '14' with '10648'
-10646 10648 0
c Var 'aux429' direct represents '14' with '10649'
10646 -10648 10649 0
-10649 10648 0
-10649 -10646 0
c Var 'aux429' order represents '15' with '10650'
-10648 10650 0
c Var 'aux429' direct represents '15' with '10651'
10648 -10650 10651 0
-10651 10650 0
-10651 -10648 0
c Var 'aux429' order represents '16' with '10652'
-10650 10652 0
c Var 'aux429' direct represents '16' with '10653'
10650 -10652 10653 0
-10653 10652 0
-10653 -10650 0
c Var 'aux429' order represents '17' with '10654'
-10652 10654 0
c Var 'aux429' direct represents '17' with '10655'
10652 -10654 10655 0
-10655 10654 0
-10655 -10652 0
c Var 'aux429' direct represents '18' with '-10654'
10621 10623 10625 10627 10629 10631 10633 10635 10637 10639 10641 10643 10645 10647 10649 10651 10653 10655 -10654 0
c Encoding variable: aux430 with domain: int(0..26) (representing constraint (aux73 + aux426))
c Both direct and order encoding.
c Var 'aux430' order represents '0' with '10656'
c Var 'aux430' direct represents '0' with '10656'
c Var 'aux430' order represents '1' with '10657'
-10656 10657 0
c Var 'aux430' direct represents '1' with '10658'
10656 -10657 10658 0
-10658 10657 0
-10658 -10656 0
c Var 'aux430' order represents '2' with '10659'
-10657 10659 0
c Var 'aux430' direct represents '2' with '10660'
10657 -10659 10660 0
-10660 10659 0
-10660 -10657 0
c Var 'aux430' order represents '3' with '10661'
-10659 10661 0
c Var 'aux430' direct represents '3' with '10662'
10659 -10661 10662 0
-10662 10661 0
-10662 -10659 0
c Var 'aux430' order represents '4' with '10663'
-10661 10663 0
c Var 'aux430' direct represents '4' with '10664'
10661 -10663 10664 0
-10664 10663 0
-10664 -10661 0
c Var 'aux430' order represents '5' with '10665'
-10663 10665 0
c Var 'aux430' direct represents '5' with '10666'
10663 -10665 10666 0
-10666 10665 0
-10666 -10663 0
c Var 'aux430' order represents '6' with '10667'
-10665 10667 0
c Var 'aux430' direct represents '6' with '10668'
10665 -10667 10668 0
-10668 10667 0
-10668 -10665 0
c Var 'aux430' order represents '7' with '10669'
-10667 10669 0
c Var 'aux430' direct represents '7' with '10670'
10667 -10669 10670 0
-10670 10669 0
-10670 -10667 0
c Var 'aux430' order represents '8' with '10671'
-10669 10671 0
c Var 'aux430' direct represents '8' with '10672'
10669 -10671 10672 0
-10672 10671 0
-10672 -10669 0
c Var 'aux430' order represents '9' with '10673'
-10671 10673 0
c Var 'aux430' direct represents '9' with '10674'
10671 -10673 10674 0
-10674 10673 0
-10674 -10671 0
c Var 'aux430' order represents '10' with '10675'
-10673 10675 0
c Var 'aux430' direct represents '10' with '10676'
10673 -10675 10676 0
-10676 10675 0
-10676 -10673 0
c Var 'aux430' order represents '11' with '10677'
-10675 10677 0
c Var 'aux430' direct represents '11' with '10678'
10675 -10677 10678 0
-10678 10677 0
-10678 -10675 0
c Var 'aux430' order represents '12' with '10679'
-10677 10679 0
c Var 'aux430' direct represents '12' with '10680'
10677 -10679 10680 0
-10680 10679 0
-10680 -10677 0
c Var 'aux430' order represents '13' with '10681'
-10679 10681 0
c Var 'aux430' direct represents '13' with '10682'
10679 -10681 10682 0
-10682 10681 0
-10682 -10679 0
c Var 'aux430' order represents '14' with '10683'
-10681 10683 0
c Var 'aux430' direct represents '14' with '10684'
10681 -10683 10684 0
-10684 10683 0
-10684 -10681 0
c Var 'aux430' order represents '15' with '10685'
-10683 10685 0
c Var 'aux430' direct represents '15' with '10686'
10683 -10685 10686 0
-10686 10685 0
-10686 -10683 0
c Var 'aux430' order represents '16' with '10687'
-10685 10687 0
c Var 'aux430' direct represents '16' with '10688'
10685 -10687 10688 0
-10688 10687 0
-10688 -10685 0
c Var 'aux430' order represents '17' with '10689'
-10687 10689 0
c Var 'aux430' direct represents '17' with '10690'
10687 -10689 10690 0
-10690 10689 0
-10690 -10687 0
c Var 'aux430' order represents '18' with '10691'
-10689 10691 0
c Var 'aux430' direct represents '18' with '10692'
10689 -10691 10692 0
-10692 10691 0
-10692 -10689 0
c Var 'aux430' order represents '19' with '10693'
-10691 10693 0
c Var 'aux430' direct represents '19' with '10694'
10691 -10693 10694 0
-10694 10693 0
-10694 -10691 0
c Var 'aux430' order represents '20' with '10695'
-10693 10695 0
c Var 'aux430' direct represents '20' with '10696'
10693 -10695 10696 0
-10696 10695 0
-10696 -10693 0
c Var 'aux430' order represents '21' with '10697'
-10695 10697 0
c Var 'aux430' direct represents '21' with '10698'
10695 -10697 10698 0
-10698 10697 0
-10698 -10695 0
c Var 'aux430' order represents '22' with '10699'
-10697 10699 0
c Var 'aux430' direct represents '22' with '10700'
10697 -10699 10700 0
-10700 10699 0
-10700 -10697 0
c Var 'aux430' order represents '23' with '10701'
-10699 10701 0
c Var 'aux430' direct represents '23' with '10702'
10699 -10701 10702 0
-10702 10701 0
-10702 -10699 0
c Var 'aux430' order represents '24' with '10703'
-10701 10703 0
c Var 'aux430' direct represents '24' with '10704'
10701 -10703 10704 0
-10704 10703 0
-10704 -10701 0
c Var 'aux430' order represents '25' with '10705'
-10703 10705 0
c Var 'aux430' direct represents '25' with '10706'
10703 -10705 10706 0
-10706 10705 0
-10706 -10703 0
c Var 'aux430' direct represents '26' with '-10705'
10656 10658 10660 10662 10664 10666 10668 10670 10672 10674 10676 10678 10680 10682 10684 10686 10688 10690 10692 10694 10696 10698 10700 10702 10704 10706 -10705 0
c Encoding variable: aux431 with domain: int(0..36) (representing constraint (aux428 + aux429))
c Both direct and order encoding.
c Var 'aux431' order represents '0' with '10707'
c Var 'aux431' direct represents '0' with '10707'
c Var 'aux431' order represents '1' with '10708'
-10707 10708 0
c Var 'aux431' direct represents '1' with '10709'
10707 -10708 10709 0
-10709 10708 0
-10709 -10707 0
c Var 'aux431' order represents '2' with '10710'
-10708 10710 0
c Var 'aux431' direct represents '2' with '10711'
10708 -10710 10711 0
-10711 10710 0
-10711 -10708 0
c Var 'aux431' order represents '3' with '10712'
-10710 10712 0
c Var 'aux431' direct represents '3' with '10713'
10710 -10712 10713 0
-10713 10712 0
-10713 -10710 0
c Var 'aux431' order represents '4' with '10714'
-10712 10714 0
c Var 'aux431' direct represents '4' with '10715'
10712 -10714 10715 0
-10715 10714 0
-10715 -10712 0
c Var 'aux431' order represents '5' with '10716'
-10714 10716 0
c Var 'aux431' direct represents '5' with '10717'
10714 -10716 10717 0
-10717 10716 0
-10717 -10714 0
c Var 'aux431' order represents '6' with '10718'
-10716 10718 0
c Var 'aux431' direct represents '6' with '10719'
10716 -10718 10719 0
-10719 10718 0
-10719 -10716 0
c Var 'aux431' order represents '7' with '10720'
-10718 10720 0
c Var 'aux431' direct represents '7' with '10721'
10718 -10720 10721 0
-10721 10720 0
-10721 -10718 0
c Var 'aux431' order represents '8' with '10722'
-10720 10722 0
c Var 'aux431' direct represents '8' with '10723'
10720 -10722 10723 0
-10723 10722 0
-10723 -10720 0
c Var 'aux431' order represents '9' with '10724'
-10722 10724 0
c Var 'aux431' direct represents '9' with '10725'
10722 -10724 10725 0
-10725 10724 0
-10725 -10722 0
c Var 'aux431' order represents '10' with '10726'
-10724 10726 0
c Var 'aux431' direct represents '10' with '10727'
10724 -10726 10727 0
-10727 10726 0
-10727 -10724 0
c Var 'aux431' order represents '11' with '10728'
-10726 10728 0
c Var 'aux431' direct represents '11' with '10729'
10726 -10728 10729 0
-10729 10728 0
-10729 -10726 0
c Var 'aux431' order represents '12' with '10730'
-10728 10730 0
c Var 'aux431' direct represents '12' with '10731'
10728 -10730 10731 0
-10731 10730 0
-10731 -10728 0
c Var 'aux431' order represents '13' with '10732'
-10730 10732 0
c Var 'aux431' direct represents '13' with '10733'
10730 -10732 10733 0
-10733 10732 0
-10733 -10730 0
c Var 'aux431' order represents '14' with '10734'
-10732 10734 0
c Var 'aux431' direct represents '14' with '10735'
10732 -10734 10735 0
-10735 10734 0
-10735 -10732 0
c Var 'aux431' order represents '15' with '10736'
-10734 10736 0
c Var 'aux431' direct represents '15' with '10737'
10734 -10736 10737 0
-10737 10736 0
-10737 -10734 0
c Var 'aux431' order represents '16' with '10738'
-10736 10738 0
c Var 'aux431' direct represents '16' with '10739'
10736 -10738 10739 0
-10739 10738 0
-10739 -10736 0
c Var 'aux431' order represents '17' with '10740'
-10738 10740 0
c Var 'aux431' direct represents '17' with '10741'
10738 -10740 10741 0
-10741 10740 0
-10741 -10738 0
c Var 'aux431' order represents '18' with '10742'
-10740 10742 0
c Var 'aux431' direct represents '18' with '10743'
10740 -10742 10743 0
-10743 10742 0
-10743 -10740 0
c Var 'aux431' order represents '19' with '10744'
-10742 10744 0
c Var 'aux431' direct represents '19' with '10745'
10742 -10744 10745 0
-10745 10744 0
-10745 -10742 0
c Var 'aux431' order represents '20' with '10746'
-10744 10746 0
c Var 'aux431' direct represents '20' with '10747'
10744 -10746 10747 0
-10747 10746 0
-10747 -10744 0
c Var 'aux431' order represents '21' with '10748'
-10746 10748 0
c Var 'aux431' direct represents '21' with '10749'
10746 -10748 10749 0
-10749 10748 0
-10749 -10746 0
c Var 'aux431' order represents '22' with '10750'
-10748 10750 0
c Var 'aux431' direct represents '22' with '10751'
10748 -10750 10751 0
-10751 10750 0
-10751 -10748 0
c Var 'aux431' order represents '23' with '10752'
-10750 10752 0
c Var 'aux431' direct represents '23' with '10753'
10750 -10752 10753 0
-10753 10752 0
-10753 -10750 0
c Var 'aux431' order represents '24' with '10754'
-10752 10754 0
c Var 'aux431' direct represents '24' with '10755'
10752 -10754 10755 0
-10755 10754 0
-10755 -10752 0
c Var 'aux431' order represents '25' with '10756'
-10754 10756 0
c Var 'aux431' direct represents '25' with '10757'
10754 -10756 10757 0
-10757 10756 0
-10757 -10754 0
c Var 'aux431' order represents '26' with '10758'
-10756 10758 0
c Var 'aux431' direct represents '26' with '10759'
10756 -10758 10759 0
-10759 10758 0
-10759 -10756 0
c Var 'aux431' order represents '27' with '10760'
-10758 10760 0
c Var 'aux431' direct represents '27' with '10761'
10758 -10760 10761 0
-10761 10760 0
-10761 -10758 0
c Var 'aux431' order represents '28' with '10762'
-10760 10762 0
c Var 'aux431' direct represents '28' with '10763'
10760 -10762 10763 0
-10763 10762 0
-10763 -10760 0
c Var 'aux431' order represents '29' with '10764'
-10762 10764 0
c Var 'aux431' direct represents '29' with '10765'
10762 -10764 10765 0
-10765 10764 0
-10765 -10762 0
c Var 'aux431' order represents '30' with '10766'
-10764 10766 0
c Var 'aux431' direct represents '30' with '10767'
10764 -10766 10767 0
-10767 10766 0
-10767 -10764 0
c Var 'aux431' order represents '31' with '10768'
-10766 10768 0
c Var 'aux431' direct represents '31' with '10769'
10766 -10768 10769 0
-10769 10768 0
-10769 -10766 0
c Var 'aux431' order represents '32' with '10770'
-10768 10770 0
c Var 'aux431' direct represents '32' with '10771'
10768 -10770 10771 0
-10771 10770 0
-10771 -10768 0
c Var 'aux431' order represents '33' with '10772'
-10770 10772 0
c Var 'aux431' direct represents '33' with '10773'
10770 -10772 10773 0
-10773 10772 0
-10773 -10770 0
c Var 'aux431' order represents '34' with '10774'
-10772 10774 0
c Var 'aux431' direct represents '34' with '10775'
10772 -10774 10775 0
-10775 10774 0
-10775 -10772 0
c Var 'aux431' order represents '35' with '10776'
-10774 10776 0
c Var 'aux431' direct represents '35' with '10777'
10774 -10776 10777 0
-10777 10776 0
-10777 -10774 0
c Var 'aux431' direct represents '36' with '-10776'
10707 10709 10711 10713 10715 10717 10719 10721 10723 10725 10727 10729 10731 10733 10735 10737 10739 10741 10743 10745 10747 10749 10751 10753 10755 10757 10759 10761 10763 10765 10767 10769 10771 10773 10775 10777 -10776 0
c Encoding variable: aux432 with domain: int(0..17) (representing constraint (shift(variant_fields_00003_00004_00001, -1) + aux84))
c Both direct and order encoding.
c Var 'aux432' order represents '0' with '10778'
c Var 'aux432' direct represents '0' with '10778'
c Var 'aux432' order represents '1' with '10779'
-10778 10779 0
c Var 'aux432' direct represents '1' with '10780'
10778 -10779 10780 0
-10780 10779 0
-10780 -10778 0
c Var 'aux432' order represents '2' with '10781'
-10779 10781 0
c Var 'aux432' direct represents '2' with '10782'
10779 -10781 10782 0
-10782 10781 0
-10782 -10779 0
c Var 'aux432' order represents '3' with '10783'
-10781 10783 0
c Var 'aux432' direct represents '3' with '10784'
10781 -10783 10784 0
-10784 10783 0
-10784 -10781 0
c Var 'aux432' order represents '4' with '10785'
-10783 10785 0
c Var 'aux432' direct represents '4' with '10786'
10783 -10785 10786 0
-10786 10785 0
-10786 -10783 0
c Var 'aux432' order represents '5' with '10787'
-10785 10787 0
c Var 'aux432' direct represents '5' with '10788'
10785 -10787 10788 0
-10788 10787 0
-10788 -10785 0
c Var 'aux432' order represents '6' with '10789'
-10787 10789 0
c Var 'aux432' direct represents '6' with '10790'
10787 -10789 10790 0
-10790 10789 0
-10790 -10787 0
c Var 'aux432' order represents '7' with '10791'
-10789 10791 0
c Var 'aux432' direct represents '7' with '10792'
10789 -10791 10792 0
-10792 10791 0
-10792 -10789 0
c Var 'aux432' order represents '8' with '10793'
-10791 10793 0
c Var 'aux432' direct represents '8' with '10794'
10791 -10793 10794 0
-10794 10793 0
-10794 -10791 0
c Var 'aux432' order represents '9' with '10795'
-10793 10795 0
c Var 'aux432' direct represents '9' with '10796'
10793 -10795 10796 0
-10796 10795 0
-10796 -10793 0
c Var 'aux432' order represents '10' with '10797'
-10795 10797 0
c Var 'aux432' direct represents '10' with '10798'
10795 -10797 10798 0
-10798 10797 0
-10798 -10795 0
c Var 'aux432' order represents '11' with '10799'
-10797 10799 0
c Var 'aux432' direct represents '11' with '10800'
10797 -10799 10800 0
-10800 10799 0
-10800 -10797 0
c Var 'aux432' order represents '12' with '10801'
-10799 10801 0
c Var 'aux432' direct represents '12' with '10802'
10799 -10801 10802 0
-10802 10801 0
-10802 -10799 0
c Var 'aux432' order represents '13' with '10803'
-10801 10803 0
c Var 'aux432' direct represents '13' with '10804'
10801 -10803 10804 0
-10804 10803 0
-10804 -10801 0
c Var 'aux432' order represents '14' with '10805'
-10803 10805 0
c Var 'aux432' direct represents '14' with '10806'
10803 -10805 10806 0
-10806 10805 0
-10806 -10803 0
c Var 'aux432' order represents '15' with '10807'
-10805 10807 0
c Var 'aux432' direct represents '15' with '10808'
10805 -10807 10808 0
-10808 10807 0
-10808 -10805 0
c Var 'aux432' order represents '16' with '10809'
-10807 10809 0
c Var 'aux432' direct represents '16' with '10810'
10807 -10809 10810 0
-10810 10809 0
-10810 -10807 0
c Var 'aux432' direct represents '17' with '-10809'
10778 10780 10782 10784 10786 10788 10790 10792 10794 10796 10798 10800 10802 10804 10806 10808 10810 -10809 0
c Encoding variable: aux433 with domain: int(0..18) (representing constraint (aux88 + aux81))
c Both direct and order encoding.
c Var 'aux433' order represents '0' with '10811'
c Var 'aux433' direct represents '0' with '10811'
c Var 'aux433' order represents '1' with '10812'
-10811 10812 0
c Var 'aux433' direct represents '1' with '10813'
10811 -10812 10813 0
-10813 10812 0
-10813 -10811 0
c Var 'aux433' order represents '2' with '10814'
-10812 10814 0
c Var 'aux433' direct represents '2' with '10815'
10812 -10814 10815 0
-10815 10814 0
-10815 -10812 0
c Var 'aux433' order represents '3' with '10816'
-10814 10816 0
c Var 'aux433' direct represents '3' with '10817'
10814 -10816 10817 0
-10817 10816 0
-10817 -10814 0
c Var 'aux433' order represents '4' with '10818'
-10816 10818 0
c Var 'aux433' direct represents '4' with '10819'
10816 -10818 10819 0
-10819 10818 0
-10819 -10816 0
c Var 'aux433' order represents '5' with '10820'
-10818 10820 0
c Var 'aux433' direct represents '5' with '10821'
10818 -10820 10821 0
-10821 10820 0
-10821 -10818 0
c Var 'aux433' order represents '6' with '10822'
-10820 10822 0
c Var 'aux433' direct represents '6' with '10823'
10820 -10822 10823 0
-10823 10822 0
-10823 -10820 0
c Var 'aux433' order represents '7' with '10824'
-10822 10824 0
c Var 'aux433' direct represents '7' with '10825'
10822 -10824 10825 0
-10825 10824 0
-10825 -10822 0
c Var 'aux433' order represents '8' with '10826'
-10824 10826 0
c Var 'aux433' direct represents '8' with '10827'
10824 -10826 10827 0
-10827 10826 0
-10827 -10824 0
c Var 'aux433' order represents '9' with '10828'
-10826 10828 0
c Var 'aux433' direct represents '9' with '10829'
10826 -10828 10829 0
-10829 10828 0
-10829 -10826 0
c Var 'aux433' order represents '10' with '10830'
-10828 10830 0
c Var 'aux433' direct represents '10' with '10831'
10828 -10830 10831 0
-10831 10830 0
-10831 -10828 0
c Var 'aux433' order represents '11' with '10832'
-10830 10832 0
c Var 'aux433' direct represents '11' with '10833'
10830 -10832 10833 0
-10833 10832 0
-10833 -10830 0
c Var 'aux433' order represents '12' with '10834'
-10832 10834 0
c Var 'aux433' direct represents '12' with '10835'
10832 -10834 10835 0
-10835 10834 0
-10835 -10832 0
c Var 'aux433' order represents '13' with '10836'
-10834 10836 0
c Var 'aux433' direct represents '13' with '10837'
10834 -10836 10837 0
-10837 10836 0
-10837 -10834 0
c Var 'aux433' order represents '14' with '10838'
-10836 10838 0
c Var 'aux433' direct represents '14' with '10839'
10836 -10838 10839 0
-10839 10838 0
-10839 -10836 0
c Var 'aux433' order represents '15' with '10840'
-10838 10840 0
c Var 'aux433' direct represents '15' with '10841'
10838 -10840 10841 0
-10841 10840 0
-10841 -10838 0
c Var 'aux433' order represents '16' with '10842'
-10840 10842 0
c Var 'aux433' direct represents '16' with '10843'
10840 -10842 10843 0
-10843 10842 0
-10843 -10840 0
c Var 'aux433' order represents '17' with '10844'
-10842 10844 0
c Var 'aux433' direct represents '17' with '10845'
10842 -10844 10845 0
-10845 10844 0
-10845 -10842 0
c Var 'aux433' direct represents '18' with '-10844'
10811 10813 10815 10817 10819 10821 10823 10825 10827 10829 10831 10833 10835 10837 10839 10841 10843 10845 -10844 0
c Encoding variable: aux434 with domain: int(0..18) (representing constraint (aux87 + aux82))
c Both direct and order encoding.
c Var 'aux434' order represents '0' with '10846'
c Var 'aux434' direct represents '0' with '10846'
c Var 'aux434' order represents '1' with '10847'
-10846 10847 0
c Var 'aux434' direct represents '1' with '10848'
10846 -10847 10848 0
-10848 10847 0
-10848 -10846 0
c Var 'aux434' order represents '2' with '10849'
-10847 10849 0
c Var 'aux434' direct represents '2' with '10850'
10847 -10849 10850 0
-10850 10849 0
-10850 -10847 0
c Var 'aux434' order represents '3' with '10851'
-10849 10851 0
c Var 'aux434' direct represents '3' with '10852'
10849 -10851 10852 0
-10852 10851 0
-10852 -10849 0
c Var 'aux434' order represents '4' with '10853'
-10851 10853 0
c Var 'aux434' direct represents '4' with '10854'
10851 -10853 10854 0
-10854 10853 0
-10854 -10851 0
c Var 'aux434' order represents '5' with '10855'
-10853 10855 0
c Var 'aux434' direct represents '5' with '10856'
10853 -10855 10856 0
-10856 10855 0
-10856 -10853 0
c Var 'aux434' order represents '6' with '10857'
-10855 10857 0
c Var 'aux434' direct represents '6' with '10858'
10855 -10857 10858 0
-10858 10857 0
-10858 -10855 0
c Var 'aux434' order represents '7' with '10859'
-10857 10859 0
c Var 'aux434' direct represents '7' with '10860'
10857 -10859 10860 0
-10860 10859 0
-10860 -10857 0
c Var 'aux434' order represents '8' with '10861'
-10859 10861 0
c Var 'aux434' direct represents '8' with '10862'
10859 -10861 10862 0
-10862 10861 0
-10862 -10859 0
c Var 'aux434' order represents '9' with '10863'
-10861 10863 0
c Var 'aux434' direct represents '9' with '10864'
10861 -10863 10864 0
-10864 10863 0
-10864 -10861 0
c Var 'aux434' order represents '10' with '10865'
-10863 10865 0
c Var 'aux434' direct represents '10' with '10866'
10863 -10865 10866 0
-10866 10865 0
-10866 -10863 0
c Var 'aux434' order represents '11' with '10867'
-10865 10867 0
c Var 'aux434' direct represents '11' with '10868'
10865 -10867 10868 0
-10868 10867 0
-10868 -10865 0
c Var 'aux434' order represents '12' with '10869'
-10867 10869 0
c Var 'aux434' direct represents '12' with '10870'
10867 -10869 10870 0
-10870 10869 0
-10870 -10867 0
c Var 'aux434' order represents '13' with '10871'
-10869 10871 0
c Var 'aux434' direct represents '13' with '10872'
10869 -10871 10872 0
-10872 10871 0
-10872 -10869 0
c Var 'aux434' order represents '14' with '10873'
-10871 10873 0
c Var 'aux434' direct represents '14' with '10874'
10871 -10873 10874 0
-10874 10873 0
-10874 -10871 0
c Var 'aux434' order represents '15' with '10875'
-10873 10875 0
c Var 'aux434' direct represents '15' with '10876'
10873 -10875 10876 0
-10876 10875 0
-10876 -10873 0
c Var 'aux434' order represents '16' with '10877'
-10875 10877 0
c Var 'aux434' direct represents '16' with '10878'
10875 -10877 10878 0
-10878 10877 0
-10878 -10875 0
c Var 'aux434' order represents '17' with '10879'
-10877 10879 0
c Var 'aux434' direct represents '17' with '10880'
10877 -10879 10880 0
-10880 10879 0
-10880 -10877 0
c Var 'aux434' direct represents '18' with '-10879'
10846 10848 10850 10852 10854 10856 10858 10860 10862 10864 10866 10868 10870 10872 10874 10876 10878 10880 -10879 0
c Encoding variable: aux435 with domain: int(0..18) (representing constraint (aux86 + aux85))
c Both direct and order encoding.
c Var 'aux435' order represents '0' with '10881'
c Var 'aux435' direct represents '0' with '10881'
c Var 'aux435' order represents '1' with '10882'
-10881 10882 0
c Var 'aux435' direct represents '1' with '10883'
10881 -10882 10883 0
-10883 10882 0
-10883 -10881 0
c Var 'aux435' order represents '2' with '10884'
-10882 10884 0
c Var 'aux435' direct represents '2' with '10885'
10882 -10884 10885 0
-10885 10884 0
-10885 -10882 0
c Var 'aux435' order represents '3' with '10886'
-10884 10886 0
c Var 'aux435' direct represents '3' with '10887'
10884 -10886 10887 0
-10887 10886 0
-10887 -10884 0
c Var 'aux435' order represents '4' with '10888'
-10886 10888 0
c Var 'aux435' direct represents '4' with '10889'
10886 -10888 10889 0
-10889 10888 0
-10889 -10886 0
c Var 'aux435' order represents '5' with '10890'
-10888 10890 0
c Var 'aux435' direct represents '5' with '10891'
10888 -10890 10891 0
-10891 10890 0
-10891 -10888 0
c Var 'aux435' order represents '6' with '10892'
-10890 10892 0
c Var 'aux435' direct represents '6' with '10893'
10890 -10892 10893 0
-10893 10892 0
-10893 -10890 0
c Var 'aux435' order represents '7' with '10894'
-10892 10894 0
c Var 'aux435' direct represents '7' with '10895'
10892 -10894 10895 0
-10895 10894 0
-10895 -10892 0
c Var 'aux435' order represents '8' with '10896'
-10894 10896 0
c Var 'aux435' direct represents '8' with '10897'
10894 -10896 10897 0
-10897 10896 0
-10897 -10894 0
c Var 'aux435' order represents '9' with '10898'
-10896 10898 0
c Var 'aux435' direct represents '9' with '10899'
10896 -10898 10899 0
-10899 10898 0
-10899 -10896 0
c Var 'aux435' order represents '10' with '10900'
-10898 10900 0
c Var 'aux435' direct represents '10' with '10901'
10898 -10900 10901 0
-10901 10900 0
-10901 -10898 0
c Var 'aux435' order represents '11' with '10902'
-10900 10902 0
c Var 'aux435' direct represents '11' with '10903'
10900 -10902 10903 0
-10903 10902 0
-10903 -10900 0
c Var 'aux435' order represents '12' with '10904'
-10902 10904 0
c Var 'aux435' direct represents '12' with '10905'
10902 -10904 10905 0
-10905 10904 0
-10905 -10902 0
c Var 'aux435' order represents '13' with '10906'
-10904 10906 0
c Var 'aux435' direct represents '13' with '10907'
10904 -10906 10907 0
-10907 10906 0
-10907 -10904 0
c Var 'aux435' order represents '14' with '10908'
-10906 10908 0
c Var 'aux435' direct represents '14' with '10909'
10906 -10908 10909 0
-10909 10908 0
-10909 -10906 0
c Var 'aux435' order represents '15' with '10910'
-10908 10910 0
c Var 'aux435' direct represents '15' with '10911'
10908 -10910 10911 0
-10911 10910 0
-10911 -10908 0
c Var 'aux435' order represents '16' with '10912'
-10910 10912 0
c Var 'aux435' direct represents '16' with '10913'
10910 -10912 10913 0
-10913 10912 0
-10913 -10910 0
c Var 'aux435' order represents '17' with '10914'
-10912 10914 0
c Var 'aux435' direct represents '17' with '10915'
10912 -10914 10915 0
-10915 10914 0
-10915 -10912 0
c Var 'aux435' direct represents '18' with '-10914'
10881 10883 10885 10887 10889 10891 10893 10895 10897 10899 10901 10903 10905 10907 10909 10911 10913 10915 -10914 0
c Encoding variable: aux436 with domain: int(0..26) (representing constraint (aux83 + aux432))
c Both direct and order encoding.
c Var 'aux436' order represents '0' with '10916'
c Var 'aux436' direct represents '0' with '10916'
c Var 'aux436' order represents '1' with '10917'
-10916 10917 0
c Var 'aux436' direct represents '1' with '10918'
10916 -10917 10918 0
-10918 10917 0
-10918 -10916 0
c Var 'aux436' order represents '2' with '10919'
-10917 10919 0
c Var 'aux436' direct represents '2' with '10920'
10917 -10919 10920 0
-10920 10919 0
-10920 -10917 0
c Var 'aux436' order represents '3' with '10921'
-10919 10921 0
c Var 'aux436' direct represents '3' with '10922'
10919 -10921 10922 0
-10922 10921 0
-10922 -10919 0
c Var 'aux436' order represents '4' with '10923'
-10921 10923 0
c Var 'aux436' direct represents '4' with '10924'
10921 -10923 10924 0
-10924 10923 0
-10924 -10921 0
c Var 'aux436' order represents '5' with '10925'
-10923 10925 0
c Var 'aux436' direct represents '5' with '10926'
10923 -10925 10926 0
-10926 10925 0
-10926 -10923 0
c Var 'aux436' order represents '6' with '10927'
-10925 10927 0
c Var 'aux436' direct represents '6' with '10928'
10925 -10927 10928 0
-10928 10927 0
-10928 -10925 0
c Var 'aux436' order represents '7' with '10929'
-10927 10929 0
c Var 'aux436' direct represents '7' with '10930'
10927 -10929 10930 0
-10930 10929 0
-10930 -10927 0
c Var 'aux436' order represents '8' with '10931'
-10929 10931 0
c Var 'aux436' direct represents '8' with '10932'
10929 -10931 10932 0
-10932 10931 0
-10932 -10929 0
c Var 'aux436' order represents '9' with '10933'
-10931 10933 0
c Var 'aux436' direct represents '9' with '10934'
10931 -10933 10934 0
-10934 10933 0
-10934 -10931 0
c Var 'aux436' order represents '10' with '10935'
-10933 10935 0
c Var 'aux436' direct represents '10' with '10936'
10933 -10935 10936 0
-10936 10935 0
-10936 -10933 0
c Var 'aux436' order represents '11' with '10937'
-10935 10937 0
c Var 'aux436' direct represents '11' with '10938'
10935 -10937 10938 0
-10938 10937 0
-10938 -10935 0
c Var 'aux436' order represents '12' with '10939'
-10937 10939 0
c Var 'aux436' direct represents '12' with '10940'
10937 -10939 10940 0
-10940 10939 0
-10940 -10937 0
c Var 'aux436' order represents '13' with '10941'
-10939 10941 0
c Var 'aux436' direct represents '13' with '10942'
10939 -10941 10942 0
-10942 10941 0
-10942 -10939 0
c Var 'aux436' order represents '14' with '10943'
-10941 10943 0
c Var 'aux436' direct represents '14' with '10944'
10941 -10943 10944 0
-10944 10943 0
-10944 -10941 0
c Var 'aux436' order represents '15' with '10945'
-10943 10945 0
c Var 'aux436' direct represents '15' with '10946'
10943 -10945 10946 0
-10946 10945 0
-10946 -10943 0
c Var 'aux436' order represents '16' with '10947'
-10945 10947 0
c Var 'aux436' direct represents '16' with '10948'
10945 -10947 10948 0
-10948 10947 0
-10948 -10945 0
c Var 'aux436' order represents '17' with '10949'
-10947 10949 0
c Var 'aux436' direct represents '17' with '10950'
10947 -10949 10950 0
-10950 10949 0
-10950 -10947 0
c Var 'aux436' order represents '18' with '10951'
-10949 10951 0
c Var 'aux436' direct represents '18' with '10952'
10949 -10951 10952 0
-10952 10951 0
-10952 -10949 0
c Var 'aux436' order represents '19' with '10953'
-10951 10953 0
c Var 'aux436' direct represents '19' with '10954'
10951 -10953 10954 0
-10954 10953 0
-10954 -10951 0
c Var 'aux436' order represents '20' with '10955'
-10953 10955 0
c Var 'aux436' direct represents '20' with '10956'
10953 -10955 10956 0
-10956 10955 0
-10956 -10953 0
c Var 'aux436' order represents '21' with '10957'
-10955 10957 0
c Var 'aux436' direct represents '21' with '10958'
10955 -10957 10958 0
-10958 10957 0
-10958 -10955 0
c Var 'aux436' order represents '22' with '10959'
-10957 10959 0
c Var 'aux436' direct represents '22' with '10960'
10957 -10959 10960 0
-10960 10959 0
-10960 -10957 0
c Var 'aux436' order represents '23' with '10961'
-10959 10961 0
c Var 'aux436' direct represents '23' with '10962'
10959 -10961 10962 0
-10962 10961 0
-10962 -10959 0
c Var 'aux436' order represents '24' with '10963'
-10961 10963 0
c Var 'aux436' direct represents '24' with '10964'
10961 -10963 10964 0
-10964 10963 0
-10964 -10961 0
c Var 'aux436' order represents '25' with '10965'
-10963 10965 0
c Var 'aux436' direct represents '25' with '10966'
10963 -10965 10966 0
-10966 10965 0
-10966 -10963 0
c Var 'aux436' direct represents '26' with '-10965'
10916 10918 10920 10922 10924 10926 10928 10930 10932 10934 10936 10938 10940 10942 10944 10946 10948 10950 10952 10954 10956 10958 10960 10962 10964 10966 -10965 0
c Encoding variable: aux437 with domain: int(0..36) (representing constraint (aux434 + aux435))
c Both direct and order encoding.
c Var 'aux437' order represents '0' with '10967'
c Var 'aux437' direct represents '0' with '10967'
c Var 'aux437' order represents '1' with '10968'
-10967 10968 0
c Var 'aux437' direct represents '1' with '10969'
10967 -10968 10969 0
-10969 10968 0
-10969 -10967 0
c Var 'aux437' order represents '2' with '10970'
-10968 10970 0
c Var 'aux437' direct represents '2' with '10971'
10968 -10970 10971 0
-10971 10970 0
-10971 -10968 0
c Var 'aux437' order represents '3' with '10972'
-10970 10972 0
c Var 'aux437' direct represents '3' with '10973'
10970 -10972 10973 0
-10973 10972 0
-10973 -10970 0
c Var 'aux437' order represents '4' with '10974'
-10972 10974 0
c Var 'aux437' direct represents '4' with '10975'
10972 -10974 10975 0
-10975 10974 0
-10975 -10972 0
c Var 'aux437' order represents '5' with '10976'
-10974 10976 0
c Var 'aux437' direct represents '5' with '10977'
10974 -10976 10977 0
-10977 10976 0
-10977 -10974 0
c Var 'aux437' order represents '6' with '10978'
-10976 10978 0
c Var 'aux437' direct represents '6' with '10979'
10976 -10978 10979 0
-10979 10978 0
-10979 -10976 0
c Var 'aux437' order represents '7' with '10980'
-10978 10980 0
c Var 'aux437' direct represents '7' with '10981'
10978 -10980 10981 0
-10981 10980 0
-10981 -10978 0
c Var 'aux437' order represents '8' with '10982'
-10980 10982 0
c Var 'aux437' direct represents '8' with '10983'
10980 -10982 10983 0
-10983 10982 0
-10983 -10980 0
c Var 'aux437' order represents '9' with '10984'
-10982 10984 0
c Var 'aux437' direct represents '9' with '10985'
10982 -10984 10985 0
-10985 10984 0
-10985 -10982 0
c Var 'aux437' order represents '10' with '10986'
-10984 10986 0
c Var 'aux437' direct represents '10' with '10987'
10984 -10986 10987 0
-10987 10986 0
-10987 -10984 0
c Var 'aux437' order represents '11' with '10988'
-10986 10988 0
c Var 'aux437' direct represents '11' with '10989'
10986 -10988 10989 0
-10989 10988 0
-10989 -10986 0
c Var 'aux437' order represents '12' with '10990'
-10988 10990 0
c Var 'aux437' direct represents '12' with '10991'
10988 -10990 10991 0
-10991 10990 0
-10991 -10988 0
c Var 'aux437' order represents '13' with '10992'
-10990 10992 0
c Var 'aux437' direct represents '13' with '10993'
10990 -10992 10993 0
-10993 10992 0
-10993 -10990 0
c Var 'aux437' order represents '14' with '10994'
-10992 10994 0
c Var 'aux437' direct represents '14' with '10995'
10992 -10994 10995 0
-10995 10994 0
-10995 -10992 0
c Var 'aux437' order represents '15' with '10996'
-10994 10996 0
c Var 'aux437' direct represents '15' with '10997'
10994 -10996 10997 0
-10997 10996 0
-10997 -10994 0
c Var 'aux437' order represents '16' with '10998'
-10996 10998 0
c Var 'aux437' direct represents '16' with '10999'
10996 -10998 10999 0
-10999 10998 0
-10999 -10996 0
c Var 'aux437' order represents '17' with '11000'
-10998 11000 0
c Var 'aux437' direct represents '17' with '11001'
10998 -11000 11001 0
-11001 11000 0
-11001 -10998 0
c Var 'aux437' order represents '18' with '11002'
-11000 11002 0
c Var 'aux437' direct represents '18' with '11003'
11000 -11002 11003 0
-11003 11002 0
-11003 -11000 0
c Var 'aux437' order represents '19' with '11004'
-11002 11004 0
c Var 'aux437' direct represents '19' with '11005'
11002 -11004 11005 0
-11005 11004 0
-11005 -11002 0
c Var 'aux437' order represents '20' with '11006'
-11004 11006 0
c Var 'aux437' direct represents '20' with '11007'
11004 -11006 11007 0
-11007 11006 0
-11007 -11004 0
c Var 'aux437' order represents '21' with '11008'
-11006 11008 0
c Var 'aux437' direct represents '21' with '11009'
11006 -11008 11009 0
-11009 11008 0
-11009 -11006 0
c Var 'aux437' order represents '22' with '11010'
-11008 11010 0
c Var 'aux437' direct represents '22' with '11011'
11008 -11010 11011 0
-11011 11010 0
-11011 -11008 0
c Var 'aux437' order represents '23' with '11012'
-11010 11012 0
c Var 'aux437' direct represents '23' with '11013'
11010 -11012 11013 0
-11013 11012 0
-11013 -11010 0
c Var 'aux437' order represents '24' with '11014'
-11012 11014 0
c Var 'aux437' direct represents '24' with '11015'
11012 -11014 11015 0
-11015 11014 0
-11015 -11012 0
c Var 'aux437' order represents '25' with '11016'
-11014 11016 0
c Var 'aux437' direct represents '25' with '11017'
11014 -11016 11017 0
-11017 11016 0
-11017 -11014 0
c Var 'aux437' order represents '26' with '11018'
-11016 11018 0
c Var 'aux437' direct represents '26' with '11019'
11016 -11018 11019 0
-11019 11018 0
-11019 -11016 0
c Var 'aux437' order represents '27' with '11020'
-11018 11020 0
c Var 'aux437' direct represents '27' with '11021'
11018 -11020 11021 0
-11021 11020 0
-11021 -11018 0
c Var 'aux437' order represents '28' with '11022'
-11020 11022 0
c Var 'aux437' direct represents '28' with '11023'
11020 -11022 11023 0
-11023 11022 0
-11023 -11020 0
c Var 'aux437' order represents '29' with '11024'
-11022 11024 0
c Var 'aux437' direct represents '29' with '11025'
11022 -11024 11025 0
-11025 11024 0
-11025 -11022 0
c Var 'aux437' order represents '30' with '11026'
-11024 11026 0
c Var 'aux437' direct represents '30' with '11027'
11024 -11026 11027 0
-11027 11026 0
-11027 -11024 0
c Var 'aux437' order represents '31' with '11028'
-11026 11028 0
c Var 'aux437' direct represents '31' with '11029'
11026 -11028 11029 0
-11029 11028 0
-11029 -11026 0
c Var 'aux437' order represents '32' with '11030'
-11028 11030 0
c Var 'aux437' direct represents '32' with '11031'
11028 -11030 11031 0
-11031 11030 0
-11031 -11028 0
c Var 'aux437' order represents '33' with '11032'
-11030 11032 0
c Var 'aux437' direct represents '33' with '11033'
11030 -11032 11033 0
-11033 11032 0
-11033 -11030 0
c Var 'aux437' order represents '34' with '11034'
-11032 11034 0
c Var 'aux437' direct represents '34' with '11035'
11032 -11034 11035 0
-11035 11034 0
-11035 -11032 0
c Var 'aux437' order represents '35' with '11036'
-11034 11036 0
c Var 'aux437' direct represents '35' with '11037'
11034 -11036 11037 0
-11037 11036 0
-11037 -11034 0
c Var 'aux437' direct represents '36' with '-11036'
10967 10969 10971 10973 10975 10977 10979 10981 10983 10985 10987 10989 10991 10993 10995 10997 10999 11001 11003 11005 11007 11009 11011 11013 11015 11017 11019 11021 11023 11025 11027 11029 11031 11033 11035 11037 -11036 0
c Encoding variable: aux438 with domain: int(0..17) (representing constraint (shift(variant_fields_00003_00006_00001, -1) + aux97))
c Both direct and order encoding.
c Var 'aux438' order represents '0' with '11038'
c Var 'aux438' direct represents '0' with '11038'
c Var 'aux438' order represents '1' with '11039'
-11038 11039 0
c Var 'aux438' direct represents '1' with '11040'
11038 -11039 11040 0
-11040 11039 0
-11040 -11038 0
c Var 'aux438' order represents '2' with '11041'
-11039 11041 0
c Var 'aux438' direct represents '2' with '11042'
11039 -11041 11042 0
-11042 11041 0
-11042 -11039 0
c Var 'aux438' order represents '3' with '11043'
-11041 11043 0
c Var 'aux438' direct represents '3' with '11044'
11041 -11043 11044 0
-11044 11043 0
-11044 -11041 0
c Var 'aux438' order represents '4' with '11045'
-11043 11045 0
c Var 'aux438' direct represents '4' with '11046'
11043 -11045 11046 0
-11046 11045 0
-11046 -11043 0
c Var 'aux438' order represents '5' with '11047'
-11045 11047 0
c Var 'aux438' direct represents '5' with '11048'
11045 -11047 11048 0
-11048 11047 0
-11048 -11045 0
c Var 'aux438' order represents '6' with '11049'
-11047 11049 0
c Var 'aux438' direct represents '6' with '11050'
11047 -11049 11050 0
-11050 11049 0
-11050 -11047 0
c Var 'aux438' order represents '7' with '11051'
-11049 11051 0
c Var 'aux438' direct represents '7' with '11052'
11049 -11051 11052 0
-11052 11051 0
-11052 -11049 0
c Var 'aux438' order represents '8' with '11053'
-11051 11053 0
c Var 'aux438' direct represents '8' with '11054'
11051 -11053 11054 0
-11054 11053 0
-11054 -11051 0
c Var 'aux438' order represents '9' with '11055'
-11053 11055 0
c Var 'aux438' direct represents '9' with '11056'
11053 -11055 11056 0
-11056 11055 0
-11056 -11053 0
c Var 'aux438' order represents '10' with '11057'
-11055 11057 0
c Var 'aux438' direct represents '10' with '11058'
11055 -11057 11058 0
-11058 11057 0
-11058 -11055 0
c Var 'aux438' order represents '11' with '11059'
-11057 11059 0
c Var 'aux438' direct represents '11' with '11060'
11057 -11059 11060 0
-11060 11059 0
-11060 -11057 0
c Var 'aux438' order represents '12' with '11061'
-11059 11061 0
c Var 'aux438' direct represents '12' with '11062'
11059 -11061 11062 0
-11062 11061 0
-11062 -11059 0
c Var 'aux438' order represents '13' with '11063'
-11061 11063 0
c Var 'aux438' direct represents '13' with '11064'
11061 -11063 11064 0
-11064 11063 0
-11064 -11061 0
c Var 'aux438' order represents '14' with '11065'
-11063 11065 0
c Var 'aux438' direct represents '14' with '11066'
11063 -11065 11066 0
-11066 11065 0
-11066 -11063 0
c Var 'aux438' order represents '15' with '11067'
-11065 11067 0
c Var 'aux438' direct represents '15' with '11068'
11065 -11067 11068 0
-11068 11067 0
-11068 -11065 0
c Var 'aux438' order represents '16' with '11069'
-11067 11069 0
c Var 'aux438' direct represents '16' with '11070'
11067 -11069 11070 0
-11070 11069 0
-11070 -11067 0
c Var 'aux438' direct represents '17' with '-11069'
11038 11040 11042 11044 11046 11048 11050 11052 11054 11056 11058 11060 11062 11064 11066 11068 11070 -11069 0
c Encoding variable: aux439 with domain: int(0..18) (representing constraint (aux96 + aux90))
c Both direct and order encoding.
c Var 'aux439' order represents '0' with '11071'
c Var 'aux439' direct represents '0' with '11071'
c Var 'aux439' order represents '1' with '11072'
-11071 11072 0
c Var 'aux439' direct represents '1' with '11073'
11071 -11072 11073 0
-11073 11072 0
-11073 -11071 0
c Var 'aux439' order represents '2' with '11074'
-11072 11074 0
c Var 'aux439' direct represents '2' with '11075'
11072 -11074 11075 0
-11075 11074 0
-11075 -11072 0
c Var 'aux439' order represents '3' with '11076'
-11074 11076 0
c Var 'aux439' direct represents '3' with '11077'
11074 -11076 11077 0
-11077 11076 0
-11077 -11074 0
c Var 'aux439' order represents '4' with '11078'
-11076 11078 0
c Var 'aux439' direct represents '4' with '11079'
11076 -11078 11079 0
-11079 11078 0
-11079 -11076 0
c Var 'aux439' order represents '5' with '11080'
-11078 11080 0
c Var 'aux439' direct represents '5' with '11081'
11078 -11080 11081 0
-11081 11080 0
-11081 -11078 0
c Var 'aux439' order represents '6' with '11082'
-11080 11082 0
c Var 'aux439' direct represents '6' with '11083'
11080 -11082 11083 0
-11083 11082 0
-11083 -11080 0
c Var 'aux439' order represents '7' with '11084'
-11082 11084 0
c Var 'aux439' direct represents '7' with '11085'
11082 -11084 11085 0
-11085 11084 0
-11085 -11082 0
c Var 'aux439' order represents '8' with '11086'
-11084 11086 0
c Var 'aux439' direct represents '8' with '11087'
11084 -11086 11087 0
-11087 11086 0
-11087 -11084 0
c Var 'aux439' order represents '9' with '11088'
-11086 11088 0
c Var 'aux439' direct represents '9' with '11089'
11086 -11088 11089 0
-11089 11088 0
-11089 -11086 0
c Var 'aux439' order represents '10' with '11090'
-11088 11090 0
c Var 'aux439' direct represents '10' with '11091'
11088 -11090 11091 0
-11091 11090 0
-11091 -11088 0
c Var 'aux439' order represents '11' with '11092'
-11090 11092 0
c Var 'aux439' direct represents '11' with '11093'
11090 -11092 11093 0
-11093 11092 0
-11093 -11090 0
c Var 'aux439' order represents '12' with '11094'
-11092 11094 0
c Var 'aux439' direct represents '12' with '11095'
11092 -11094 11095 0
-11095 11094 0
-11095 -11092 0
c Var 'aux439' order represents '13' with '11096'
-11094 11096 0
c Var 'aux439' direct represents '13' with '11097'
11094 -11096 11097 0
-11097 11096 0
-11097 -11094 0
c Var 'aux439' order represents '14' with '11098'
-11096 11098 0
c Var 'aux439' direct represents '14' with '11099'
11096 -11098 11099 0
-11099 11098 0
-11099 -11096 0
c Var 'aux439' order represents '15' with '11100'
-11098 11100 0
c Var 'aux439' direct represents '15' with '11101'
11098 -11100 11101 0
-11101 11100 0
-11101 -11098 0
c Var 'aux439' order represents '16' with '11102'
-11100 11102 0
c Var 'aux439' direct represents '16' with '11103'
11100 -11102 11103 0
-11103 11102 0
-11103 -11100 0
c Var 'aux439' order represents '17' with '11104'
-11102 11104 0
c Var 'aux439' direct represents '17' with '11105'
11102 -11104 11105 0
-11105 11104 0
-11105 -11102 0
c Var 'aux439' direct represents '18' with '-11104'
11071 11073 11075 11077 11079 11081 11083 11085 11087 11089 11091 11093 11095 11097 11099 11101 11103 11105 -11104 0
c Encoding variable: aux440 with domain: int(0..18) (representing constraint (aux95 + aux92))
c Both direct and order encoding.
c Var 'aux440' order represents '0' with '11106'
c Var 'aux440' direct represents '0' with '11106'
c Var 'aux440' order represents '1' with '11107'
-11106 11107 0
c Var 'aux440' direct represents '1' with '11108'
11106 -11107 11108 0
-11108 11107 0
-11108 -11106 0
c Var 'aux440' order represents '2' with '11109'
-11107 11109 0
c Var 'aux440' direct represents '2' with '11110'
11107 -11109 11110 0
-11110 11109 0
-11110 -11107 0
c Var 'aux440' order represents '3' with '11111'
-11109 11111 0
c Var 'aux440' direct represents '3' with '11112'
11109 -11111 11112 0
-11112 11111 0
-11112 -11109 0
c Var 'aux440' order represents '4' with '11113'
-11111 11113 0
c Var 'aux440' direct represents '4' with '11114'
11111 -11113 11114 0
-11114 11113 0
-11114 -11111 0
c Var 'aux440' order represents '5' with '11115'
-11113 11115 0
c Var 'aux440' direct represents '5' with '11116'
11113 -11115 11116 0
-11116 11115 0
-11116 -11113 0
c Var 'aux440' order represents '6' with '11117'
-11115 11117 0
c Var 'aux440' direct represents '6' with '11118'
11115 -11117 11118 0
-11118 11117 0
-11118 -11115 0
c Var 'aux440' order represents '7' with '11119'
-11117 11119 0
c Var 'aux440' direct represents '7' with '11120'
11117 -11119 11120 0
-11120 11119 0
-11120 -11117 0
c Var 'aux440' order represents '8' with '11121'
-11119 11121 0
c Var 'aux440' direct represents '8' with '11122'
11119 -11121 11122 0
-11122 11121 0
-11122 -11119 0
c Var 'aux440' order represents '9' with '11123'
-11121 11123 0
c Var 'aux440' direct represents '9' with '11124'
11121 -11123 11124 0
-11124 11123 0
-11124 -11121 0
c Var 'aux440' order represents '10' with '11125'
-11123 11125 0
c Var 'aux440' direct represents '10' with '11126'
11123 -11125 11126 0
-11126 11125 0
-11126 -11123 0
c Var 'aux440' order represents '11' with '11127'
-11125 11127 0
c Var 'aux440' direct represents '11' with '11128'
11125 -11127 11128 0
-11128 11127 0
-11128 -11125 0
c Var 'aux440' order represents '12' with '11129'
-11127 11129 0
c Var 'aux440' direct represents '12' with '11130'
11127 -11129 11130 0
-11130 11129 0
-11130 -11127 0
c Var 'aux440' order represents '13' with '11131'
-11129 11131 0
c Var 'aux440' direct represents '13' with '11132'
11129 -11131 11132 0
-11132 11131 0
-11132 -11129 0
c Var 'aux440' order represents '14' with '11133'
-11131 11133 0
c Var 'aux440' direct represents '14' with '11134'
11131 -11133 11134 0
-11134 11133 0
-11134 -11131 0
c Var 'aux440' order represents '15' with '11135'
-11133 11135 0
c Var 'aux440' direct represents '15' with '11136'
11133 -11135 11136 0
-11136 11135 0
-11136 -11133 0
c Var 'aux440' order represents '16' with '11137'
-11135 11137 0
c Var 'aux440' direct represents '16' with '11138'
11135 -11137 11138 0
-11138 11137 0
-11138 -11135 0
c Var 'aux440' order represents '17' with '11139'
-11137 11139 0
c Var 'aux440' direct represents '17' with '11140'
11137 -11139 11140 0
-11140 11139 0
-11140 -11137 0
c Var 'aux440' direct represents '18' with '-11139'
11106 11108 11110 11112 11114 11116 11118 11120 11122 11124 11126 11128 11130 11132 11134 11136 11138 11140 -11139 0
c Encoding variable: aux441 with domain: int(0..18) (representing constraint (aux94 + aux93))
c Both direct and order encoding.
c Var 'aux441' order represents '0' with '11141'
c Var 'aux441' direct represents '0' with '11141'
c Var 'aux441' order represents '1' with '11142'
-11141 11142 0
c Var 'aux441' direct represents '1' with '11143'
11141 -11142 11143 0
-11143 11142 0
-11143 -11141 0
c Var 'aux441' order represents '2' with '11144'
-11142 11144 0
c Var 'aux441' direct represents '2' with '11145'
11142 -11144 11145 0
-11145 11144 0
-11145 -11142 0
c Var 'aux441' order represents '3' with '11146'
-11144 11146 0
c Var 'aux441' direct represents '3' with '11147'
11144 -11146 11147 0
-11147 11146 0
-11147 -11144 0
c Var 'aux441' order represents '4' with '11148'
-11146 11148 0
c Var 'aux441' direct represents '4' with '11149'
11146 -11148 11149 0
-11149 11148 0
-11149 -11146 0
c Var 'aux441' order represents '5' with '11150'
-11148 11150 0
c Var 'aux441' direct represents '5' with '11151'
11148 -11150 11151 0
-11151 11150 0
-11151 -11148 0
c Var 'aux441' order represents '6' with '11152'
-11150 11152 0
c Var 'aux441' direct represents '6' with '11153'
11150 -11152 11153 0
-11153 11152 0
-11153 -11150 0
c Var 'aux441' order represents '7' with '11154'
-11152 11154 0
c Var 'aux441' direct represents '7' with '11155'
11152 -11154 11155 0
-11155 11154 0
-11155 -11152 0
c Var 'aux441' order represents '8' with '11156'
-11154 11156 0
c Var 'aux441' direct represents '8' with '11157'
11154 -11156 11157 0
-11157 11156 0
-11157 -11154 0
c Var 'aux441' order represents '9' with '11158'
-11156 11158 0
c Var 'aux441' direct represents '9' with '11159'
11156 -11158 11159 0
-11159 11158 0
-11159 -11156 0
c Var 'aux441' order represents '10' with '11160'
-11158 11160 0
c Var 'aux441' direct represents '10' with '11161'
11158 -11160 11161 0
-11161 11160 0
-11161 -11158 0
c Var 'aux441' order represents '11' with '11162'
-11160 11162 0
c Var 'aux441' direct represents '11' with '11163'
11160 -11162 11163 0
-11163 11162 0
-11163 -11160 0
c Var 'aux441' order represents '12' with '11164'
-11162 11164 0
c Var 'aux441' direct represents '12' with '11165'
11162 -11164 11165 0
-11165 11164 0
-11165 -11162 0
c Var 'aux441' order represents '13' with '11166'
-11164 11166 0
c Var 'aux441' direct represents '13' with '11167'
11164 -11166 11167 0
-11167 11166 0
-11167 -11164 0
c Var 'aux441' order represents '14' with '11168'
-11166 11168 0
c Var 'aux441' direct represents '14' with '11169'
11166 -11168 11169 0
-11169 11168 0
-11169 -11166 0
c Var 'aux441' order represents '15' with '11170'
-11168 11170 0
c Var 'aux441' direct represents '15' with '11171'
11168 -11170 11171 0
-11171 11170 0
-11171 -11168 0
c Var 'aux441' order represents '16' with '11172'
-11170 11172 0
c Var 'aux441' direct represents '16' with '11173'
11170 -11172 11173 0
-11173 11172 0
-11173 -11170 0
c Var 'aux441' order represents '17' with '11174'
-11172 11174 0
c Var 'aux441' direct represents '17' with '11175'
11172 -11174 11175 0
-11175 11174 0
-11175 -11172 0
c Var 'aux441' direct represents '18' with '-11174'
11141 11143 11145 11147 11149 11151 11153 11155 11157 11159 11161 11163 11165 11167 11169 11171 11173 11175 -11174 0
c Encoding variable: aux442 with domain: int(0..26) (representing constraint (aux91 + aux438))
c Both direct and order encoding.
c Var 'aux442' order represents '0' with '11176'
c Var 'aux442' direct represents '0' with '11176'
c Var 'aux442' order represents '1' with '11177'
-11176 11177 0
c Var 'aux442' direct represents '1' with '11178'
11176 -11177 11178 0
-11178 11177 0
-11178 -11176 0
c Var 'aux442' order represents '2' with '11179'
-11177 11179 0
c Var 'aux442' direct represents '2' with '11180'
11177 -11179 11180 0
-11180 11179 0
-11180 -11177 0
c Var 'aux442' order represents '3' with '11181'
-11179 11181 0
c Var 'aux442' direct represents '3' with '11182'
11179 -11181 11182 0
-11182 11181 0
-11182 -11179 0
c Var 'aux442' order represents '4' with '11183'
-11181 11183 0
c Var 'aux442' direct represents '4' with '11184'
11181 -11183 11184 0
-11184 11183 0
-11184 -11181 0
c Var 'aux442' order represents '5' with '11185'
-11183 11185 0
c Var 'aux442' direct represents '5' with '11186'
11183 -11185 11186 0
-11186 11185 0
-11186 -11183 0
c Var 'aux442' order represents '6' with '11187'
-11185 11187 0
c Var 'aux442' direct represents '6' with '11188'
11185 -11187 11188 0
-11188 11187 0
-11188 -11185 0
c Var 'aux442' order represents '7' with '11189'
-11187 11189 0
c Var 'aux442' direct represents '7' with '11190'
11187 -11189 11190 0
-11190 11189 0
-11190 -11187 0
c Var 'aux442' order represents '8' with '11191'
-11189 11191 0
c Var 'aux442' direct represents '8' with '11192'
11189 -11191 11192 0
-11192 11191 0
-11192 -11189 0
c Var 'aux442' order represents '9' with '11193'
-11191 11193 0
c Var 'aux442' direct represents '9' with '11194'
11191 -11193 11194 0
-11194 11193 0
-11194 -11191 0
c Var 'aux442' order represents '10' with '11195'
-11193 11195 0
c Var 'aux442' direct represents '10' with '11196'
11193 -11195 11196 0
-11196 11195 0
-11196 -11193 0
c Var 'aux442' order represents '11' with '11197'
-11195 11197 0
c Var 'aux442' direct represents '11' with '11198'
11195 -11197 11198 0
-11198 11197 0
-11198 -11195 0
c Var 'aux442' order represents '12' with '11199'
-11197 11199 0
c Var 'aux442' direct represents '12' with '11200'
11197 -11199 11200 0
-11200 11199 0
-11200 -11197 0
c Var 'aux442' order represents '13' with '11201'
-11199 11201 0
c Var 'aux442' direct represents '13' with '11202'
11199 -11201 11202 0
-11202 11201 0
-11202 -11199 0
c Var 'aux442' order represents '14' with '11203'
-11201 11203 0
c Var 'aux442' direct represents '14' with '11204'
11201 -11203 11204 0
-11204 11203 0
-11204 -11201 0
c Var 'aux442' order represents '15' with '11205'
-11203 11205 0
c Var 'aux442' direct represents '15' with '11206'
11203 -11205 11206 0
-11206 11205 0
-11206 -11203 0
c Var 'aux442' order represents '16' with '11207'
-11205 11207 0
c Var 'aux442' direct represents '16' with '11208'
11205 -11207 11208 0
-11208 11207 0
-11208 -11205 0
c Var 'aux442' order represents '17' with '11209'
-11207 11209 0
c Var 'aux442' direct represents '17' with '11210'
11207 -11209 11210 0
-11210 11209 0
-11210 -11207 0
c Var 'aux442' order represents '18' with '11211'
-11209 11211 0
c Var 'aux442' direct represents '18' with '11212'
11209 -11211 11212 0
-11212 11211 0
-11212 -11209 0
c Var 'aux442' order represents '19' with '11213'
-11211 11213 0
c Var 'aux442' direct represents '19' with '11214'
11211 -11213 11214 0
-11214 11213 0
-11214 -11211 0
c Var 'aux442' order represents '20' with '11215'
-11213 11215 0
c Var 'aux442' direct represents '20' with '11216'
11213 -11215 11216 0
-11216 11215 0
-11216 -11213 0
c Var 'aux442' order represents '21' with '11217'
-11215 11217 0
c Var 'aux442' direct represents '21' with '11218'
11215 -11217 11218 0
-11218 11217 0
-11218 -11215 0
c Var 'aux442' order represents '22' with '11219'
-11217 11219 0
c Var 'aux442' direct represents '22' with '11220'
11217 -11219 11220 0
-11220 11219 0
-11220 -11217 0
c Var 'aux442' order represents '23' with '11221'
-11219 11221 0
c Var 'aux442' direct represents '23' with '11222'
11219 -11221 11222 0
-11222 11221 0
-11222 -11219 0
c Var 'aux442' order represents '24' with '11223'
-11221 11223 0
c Var 'aux442' direct represents '24' with '11224'
11221 -11223 11224 0
-11224 11223 0
-11224 -11221 0
c Var 'aux442' order represents '25' with '11225'
-11223 11225 0
c Var 'aux442' direct represents '25' with '11226'
11223 -11225 11226 0
-11226 11225 0
-11226 -11223 0
c Var 'aux442' direct represents '26' with '-11225'
11176 11178 11180 11182 11184 11186 11188 11190 11192 11194 11196 11198 11200 11202 11204 11206 11208 11210 11212 11214 11216 11218 11220 11222 11224 11226 -11225 0
c Encoding variable: aux443 with domain: int(0..36) (representing constraint (aux440 + aux441))
c Both direct and order encoding.
c Var 'aux443' order represents '0' with '11227'
c Var 'aux443' direct represents '0' with '11227'
c Var 'aux443' order represents '1' with '11228'
-11227 11228 0
c Var 'aux443' direct represents '1' with '11229'
11227 -11228 11229 0
-11229 11228 0
-11229 -11227 0
c Var 'aux443' order represents '2' with '11230'
-11228 11230 0
c Var 'aux443' direct represents '2' with '11231'
11228 -11230 11231 0
-11231 11230 0
-11231 -11228 0
c Var 'aux443' order represents '3' with '11232'
-11230 11232 0
c Var 'aux443' direct represents '3' with '11233'
11230 -11232 11233 0
-11233 11232 0
-11233 -11230 0
c Var 'aux443' order represents '4' with '11234'
-11232 11234 0
c Var 'aux443' direct represents '4' with '11235'
11232 -11234 11235 0
-11235 11234 0
-11235 -11232 0
c Var 'aux443' order represents '5' with '11236'
-11234 11236 0
c Var 'aux443' direct represents '5' with '11237'
11234 -11236 11237 0
-11237 11236 0
-11237 -11234 0
c Var 'aux443' order represents '6' with '11238'
-11236 11238 0
c Var 'aux443' direct represents '6' with '11239'
11236 -11238 11239 0
-11239 11238 0
-11239 -11236 0
c Var 'aux443' order represents '7' with '11240'
-11238 11240 0
c Var 'aux443' direct represents '7' with '11241'
11238 -11240 11241 0
-11241 11240 0
-11241 -11238 0
c Var 'aux443' order represents '8' with '11242'
-11240 11242 0
c Var 'aux443' direct represents '8' with '11243'
11240 -11242 11243 0
-11243 11242 0
-11243 -11240 0
c Var 'aux443' order represents '9' with '11244'
-11242 11244 0
c Var 'aux443' direct represents '9' with '11245'
11242 -11244 11245 0
-11245 11244 0
-11245 -11242 0
c Var 'aux443' order represents '10' with '11246'
-11244 11246 0
c Var 'aux443' direct represents '10' with '11247'
11244 -11246 11247 0
-11247 11246 0
-11247 -11244 0
c Var 'aux443' order represents '11' with '11248'
-11246 11248 0
c Var 'aux443' direct represents '11' with '11249'
11246 -11248 11249 0
-11249 11248 0
-11249 -11246 0
c Var 'aux443' order represents '12' with '11250'
-11248 11250 0
c Var 'aux443' direct represents '12' with '11251'
11248 -11250 11251 0
-11251 11250 0
-11251 -11248 0
c Var 'aux443' order represents '13' with '11252'
-11250 11252 0
c Var 'aux443' direct represents '13' with '11253'
11250 -11252 11253 0
-11253 11252 0
-11253 -11250 0
c Var 'aux443' order represents '14' with '11254'
-11252 11254 0
c Var 'aux443' direct represents '14' with '11255'
11252 -11254 11255 0
-11255 11254 0
-11255 -11252 0
c Var 'aux443' order represents '15' with '11256'
-11254 11256 0
c Var 'aux443' direct represents '15' with '11257'
11254 -11256 11257 0
-11257 11256 0
-11257 -11254 0
c Var 'aux443' order represents '16' with '11258'
-11256 11258 0
c Var 'aux443' direct represents '16' with '11259'
11256 -11258 11259 0
-11259 11258 0
-11259 -11256 0
c Var 'aux443' order represents '17' with '11260'
-11258 11260 0
c Var 'aux443' direct represents '17' with '11261'
11258 -11260 11261 0
-11261 11260 0
-11261 -11258 0
c Var 'aux443' order represents '18' with '11262'
-11260 11262 0
c Var 'aux443' direct represents '18' with '11263'
11260 -11262 11263 0
-11263 11262 0
-11263 -11260 0
c Var 'aux443' order represents '19' with '11264'
-11262 11264 0
c Var 'aux443' direct represents '19' with '11265'
11262 -11264 11265 0
-11265 11264 0
-11265 -11262 0
c Var 'aux443' order represents '20' with '11266'
-11264 11266 0
c Var 'aux443' direct represents '20' with '11267'
11264 -11266 11267 0
-11267 11266 0
-11267 -11264 0
c Var 'aux443' order represents '21' with '11268'
-11266 11268 0
c Var 'aux443' direct represents '21' with '11269'
11266 -11268 11269 0
-11269 11268 0
-11269 -11266 0
c Var 'aux443' order represents '22' with '11270'
-11268 11270 0
c Var 'aux443' direct represents '22' with '11271'
11268 -11270 11271 0
-11271 11270 0
-11271 -11268 0
c Var 'aux443' order represents '23' with '11272'
-11270 11272 0
c Var 'aux443' direct represents '23' with '11273'
11270 -11272 11273 0
-11273 11272 0
-11273 -11270 0
c Var 'aux443' order represents '24' with '11274'
-11272 11274 0
c Var 'aux443' direct represents '24' with '11275'
11272 -11274 11275 0
-11275 11274 0
-11275 -11272 0
c Var 'aux443' order represents '25' with '11276'
-11274 11276 0
c Var 'aux443' direct represents '25' with '11277'
11274 -11276 11277 0
-11277 11276 0
-11277 -11274 0
c Var 'aux443' order represents '26' with '11278'
-11276 11278 0
c Var 'aux443' direct represents '26' with '11279'
11276 -11278 11279 0
-11279 11278 0
-11279 -11276 0
c Var 'aux443' order represents '27' with '11280'
-11278 11280 0
c Var 'aux443' direct represents '27' with '11281'
11278 -11280 11281 0
-11281 11280 0
-11281 -11278 0
c Var 'aux443' order represents '28' with '11282'
-11280 11282 0
c Var 'aux443' direct represents '28' with '11283'
11280 -11282 11283 0
-11283 11282 0
-11283 -11280 0
c Var 'aux443' order represents '29' with '11284'
-11282 11284 0
c Var 'aux443' direct represents '29' with '11285'
11282 -11284 11285 0
-11285 11284 0
-11285 -11282 0
c Var 'aux443' order represents '30' with '11286'
-11284 11286 0
c Var 'aux443' direct represents '30' with '11287'
11284 -11286 11287 0
-11287 11286 0
-11287 -11284 0
c Var 'aux443' order represents '31' with '11288'
-11286 11288 0
c Var 'aux443' direct represents '31' with '11289'
11286 -11288 11289 0
-11289 11288 0
-11289 -11286 0
c Var 'aux443' order represents '32' with '11290'
-11288 11290 0
c Var 'aux443' direct represents '32' with '11291'
11288 -11290 11291 0
-11291 11290 0
-11291 -11288 0
c Var 'aux443' order represents '33' with '11292'
-11290 11292 0
c Var 'aux443' direct represents '33' with '11293'
11290 -11292 11293 0
-11293 11292 0
-11293 -11290 0
c Var 'aux443' order represents '34' with '11294'
-11292 11294 0
c Var 'aux443' direct represents '34' with '11295'
11292 -11294 11295 0
-11295 11294 0
-11295 -11292 0
c Var 'aux443' order represents '35' with '11296'
-11294 11296 0
c Var 'aux443' direct represents '35' with '11297'
11294 -11296 11297 0
-11297 11296 0
-11297 -11294 0
c Var 'aux443' direct represents '36' with '-11296'
11227 11229 11231 11233 11235 11237 11239 11241 11243 11245 11247 11249 11251 11253 11255 11257 11259 11261 11263 11265 11267 11269 11271 11273 11275 11277 11279 11281 11283 11285 11287 11289 11291 11293 11295 11297 -11296 0
c Encoding variable: aux444 with domain: int(0..17) (representing constraint (shift(variant_fields_00003_00008_00001, -1) + aux99))
c Both direct and order encoding.
c Var 'aux444' order represents '0' with '11298'
c Var 'aux444' direct represents '0' with '11298'
c Var 'aux444' order represents '1' with '11299'
-11298 11299 0
c Var 'aux444' direct represents '1' with '11300'
11298 -11299 11300 0
-11300 11299 0
-11300 -11298 0
c Var 'aux444' order represents '2' with '11301'
-11299 11301 0
c Var 'aux444' direct represents '2' with '11302'
11299 -11301 11302 0
-11302 11301 0
-11302 -11299 0
c Var 'aux444' order represents '3' with '11303'
-11301 11303 0
c Var 'aux444' direct represents '3' with '11304'
11301 -11303 11304 0
-11304 11303 0
-11304 -11301 0
c Var 'aux444' order represents '4' with '11305'
-11303 11305 0
c Var 'aux444' direct represents '4' with '11306'
11303 -11305 11306 0
-11306 11305 0
-11306 -11303 0
c Var 'aux444' order represents '5' with '11307'
-11305 11307 0
c Var 'aux444' direct represents '5' with '11308'
11305 -11307 11308 0
-11308 11307 0
-11308 -11305 0
c Var 'aux444' order represents '6' with '11309'
-11307 11309 0
c Var 'aux444' direct represents '6' with '11310'
11307 -11309 11310 0
-11310 11309 0
-11310 -11307 0
c Var 'aux444' order represents '7' with '11311'
-11309 11311 0
c Var 'aux444' direct represents '7' with '11312'
11309 -11311 11312 0
-11312 11311 0
-11312 -11309 0
c Var 'aux444' order represents '8' with '11313'
-11311 11313 0
c Var 'aux444' direct represents '8' with '11314'
11311 -11313 11314 0
-11314 11313 0
-11314 -11311 0
c Var 'aux444' order represents '9' with '11315'
-11313 11315 0
c Var 'aux444' direct represents '9' with '11316'
11313 -11315 11316 0
-11316 11315 0
-11316 -11313 0
c Var 'aux444' order represents '10' with '11317'
-11315 11317 0
c Var 'aux444' direct represents '10' with '11318'
11315 -11317 11318 0
-11318 11317 0
-11318 -11315 0
c Var 'aux444' order represents '11' with '11319'
-11317 11319 0
c Var 'aux444' direct represents '11' with '11320'
11317 -11319 11320 0
-11320 11319 0
-11320 -11317 0
c Var 'aux444' order represents '12' with '11321'
-11319 11321 0
c Var 'aux444' direct represents '12' with '11322'
11319 -11321 11322 0
-11322 11321 0
-11322 -11319 0
c Var 'aux444' order represents '13' with '11323'
-11321 11323 0
c Var 'aux444' direct represents '13' with '11324'
11321 -11323 11324 0
-11324 11323 0
-11324 -11321 0
c Var 'aux444' order represents '14' with '11325'
-11323 11325 0
c Var 'aux444' direct represents '14' with '11326'
11323 -11325 11326 0
-11326 11325 0
-11326 -11323 0
c Var 'aux444' order represents '15' with '11327'
-11325 11327 0
c Var 'aux444' direct represents '15' with '11328'
11325 -11327 11328 0
-11328 11327 0
-11328 -11325 0
c Var 'aux444' order represents '16' with '11329'
-11327 11329 0
c Var 'aux444' direct represents '16' with '11330'
11327 -11329 11330 0
-11330 11329 0
-11330 -11327 0
c Var 'aux444' direct represents '17' with '-11329'
11298 11300 11302 11304 11306 11308 11310 11312 11314 11316 11318 11320 11322 11324 11326 11328 11330 -11329 0
c Encoding variable: aux445 with domain: int(0..18) (representing constraint (aux103 + aux100))
c Both direct and order encoding.
c Var 'aux445' order represents '0' with '11331'
c Var 'aux445' direct represents '0' with '11331'
c Var 'aux445' order represents '1' with '11332'
-11331 11332 0
c Var 'aux445' direct represents '1' with '11333'
11331 -11332 11333 0
-11333 11332 0
-11333 -11331 0
c Var 'aux445' order represents '2' with '11334'
-11332 11334 0
c Var 'aux445' direct represents '2' with '11335'
11332 -11334 11335 0
-11335 11334 0
-11335 -11332 0
c Var 'aux445' order represents '3' with '11336'
-11334 11336 0
c Var 'aux445' direct represents '3' with '11337'
11334 -11336 11337 0
-11337 11336 0
-11337 -11334 0
c Var 'aux445' order represents '4' with '11338'
-11336 11338 0
c Var 'aux445' direct represents '4' with '11339'
11336 -11338 11339 0
-11339 11338 0
-11339 -11336 0
c Var 'aux445' order represents '5' with '11340'
-11338 11340 0
c Var 'aux445' direct represents '5' with '11341'
11338 -11340 11341 0
-11341 11340 0
-11341 -11338 0
c Var 'aux445' order represents '6' with '11342'
-11340 11342 0
c Var 'aux445' direct represents '6' with '11343'
11340 -11342 11343 0
-11343 11342 0
-11343 -11340 0
c Var 'aux445' order represents '7' with '11344'
-11342 11344 0
c Var 'aux445' direct represents '7' with '11345'
11342 -11344 11345 0
-11345 11344 0
-11345 -11342 0
c Var 'aux445' order represents '8' with '11346'
-11344 11346 0
c Var 'aux445' direct represents '8' with '11347'
11344 -11346 11347 0
-11347 11346 0
-11347 -11344 0
c Var 'aux445' order represents '9' with '11348'
-11346 11348 0
c Var 'aux445' direct represents '9' with '11349'
11346 -11348 11349 0
-11349 11348 0
-11349 -11346 0
c Var 'aux445' order represents '10' with '11350'
-11348 11350 0
c Var 'aux445' direct represents '10' with '11351'
11348 -11350 11351 0
-11351 11350 0
-11351 -11348 0
c Var 'aux445' order represents '11' with '11352'
-11350 11352 0
c Var 'aux445' direct represents '11' with '11353'
11350 -11352 11353 0
-11353 11352 0
-11353 -11350 0
c Var 'aux445' order represents '12' with '11354'
-11352 11354 0
c Var 'aux445' direct represents '12' with '11355'
11352 -11354 11355 0
-11355 11354 0
-11355 -11352 0
c Var 'aux445' order represents '13' with '11356'
-11354 11356 0
c Var 'aux445' direct represents '13' with '11357'
11354 -11356 11357 0
-11357 11356 0
-11357 -11354 0
c Var 'aux445' order represents '14' with '11358'
-11356 11358 0
c Var 'aux445' direct represents '14' with '11359'
11356 -11358 11359 0
-11359 11358 0
-11359 -11356 0
c Var 'aux445' order represents '15' with '11360'
-11358 11360 0
c Var 'aux445' direct represents '15' with '11361'
11358 -11360 11361 0
-11361 11360 0
-11361 -11358 0
c Var 'aux445' order represents '16' with '11362'
-11360 11362 0
c Var 'aux445' direct represents '16' with '11363'
11360 -11362 11363 0
-11363 11362 0
-11363 -11360 0
c Var 'aux445' order represents '17' with '11364'
-11362 11364 0
c Var 'aux445' direct represents '17' with '11365'
11362 -11364 11365 0
-11365 11364 0
-11365 -11362 0
c Var 'aux445' direct represents '18' with '-11364'
11331 11333 11335 11337 11339 11341 11343 11345 11347 11349 11351 11353 11355 11357 11359 11361 11363 11365 -11364 0
c Encoding variable: aux446 with domain: int(0..18) (representing constraint (aux106 + aux101))
c Both direct and order encoding.
c Var 'aux446' order represents '0' with '11366'
c Var 'aux446' direct represents '0' with '11366'
c Var 'aux446' order represents '1' with '11367'
-11366 11367 0
c Var 'aux446' direct represents '1' with '11368'
11366 -11367 11368 0
-11368 11367 0
-11368 -11366 0
c Var 'aux446' order represents '2' with '11369'
-11367 11369 0
c Var 'aux446' direct represents '2' with '11370'
11367 -11369 11370 0
-11370 11369 0
-11370 -11367 0
c Var 'aux446' order represents '3' with '11371'
-11369 11371 0
c Var 'aux446' direct represents '3' with '11372'
11369 -11371 11372 0
-11372 11371 0
-11372 -11369 0
c Var 'aux446' order represents '4' with '11373'
-11371 11373 0
c Var 'aux446' direct represents '4' with '11374'
11371 -11373 11374 0
-11374 11373 0
-11374 -11371 0
c Var 'aux446' order represents '5' with '11375'
-11373 11375 0
c Var 'aux446' direct represents '5' with '11376'
11373 -11375 11376 0
-11376 11375 0
-11376 -11373 0
c Var 'aux446' order represents '6' with '11377'
-11375 11377 0
c Var 'aux446' direct represents '6' with '11378'
11375 -11377 11378 0
-11378 11377 0
-11378 -11375 0
c Var 'aux446' order represents '7' with '11379'
-11377 11379 0
c Var 'aux446' direct represents '7' with '11380'
11377 -11379 11380 0
-11380 11379 0
-11380 -11377 0
c Var 'aux446' order represents '8' with '11381'
-11379 11381 0
c Var 'aux446' direct represents '8' with '11382'
11379 -11381 11382 0
-11382 11381 0
-11382 -11379 0
c Var 'aux446' order represents '9' with '11383'
-11381 11383 0
c Var 'aux446' direct represents '9' with '11384'
11381 -11383 11384 0
-11384 11383 0
-11384 -11381 0
c Var 'aux446' order represents '10' with '11385'
-11383 11385 0
c Var 'aux446' direct represents '10' with '11386'
11383 -11385 11386 0
-11386 11385 0
-11386 -11383 0
c Var 'aux446' order represents '11' with '11387'
-11385 11387 0
c Var 'aux446' direct represents '11' with '11388'
11385 -11387 11388 0
-11388 11387 0
-11388 -11385 0
c Var 'aux446' order represents '12' with '11389'
-11387 11389 0
c Var 'aux446' direct represents '12' with '11390'
11387 -11389 11390 0
-11390 11389 0
-11390 -11387 0
c Var 'aux446' order represents '13' with '11391'
-11389 11391 0
c Var 'aux446' direct represents '13' with '11392'
11389 -11391 11392 0
-11392 11391 0
-11392 -11389 0
c Var 'aux446' order represents '14' with '11393'
-11391 11393 0
c Var 'aux446' direct represents '14' with '11394'
11391 -11393 11394 0
-11394 11393 0
-11394 -11391 0
c Var 'aux446' order represents '15' with '11395'
-11393 11395 0
c Var 'aux446' direct represents '15' with '11396'
11393 -11395 11396 0
-11396 11395 0
-11396 -11393 0
c Var 'aux446' order represents '16' with '11397'
-11395 11397 0
c Var 'aux446' direct represents '16' with '11398'
11395 -11397 11398 0
-11398 11397 0
-11398 -11395 0
c Var 'aux446' order represents '17' with '11399'
-11397 11399 0
c Var 'aux446' direct represents '17' with '11400'
11397 -11399 11400 0
-11400 11399 0
-11400 -11397 0
c Var 'aux446' direct represents '18' with '-11399'
11366 11368 11370 11372 11374 11376 11378 11380 11382 11384 11386 11388 11390 11392 11394 11396 11398 11400 -11399 0
c Encoding variable: aux447 with domain: int(0..18) (representing constraint (aux105 + aux104))
c Both direct and order encoding.
c Var 'aux447' order represents '0' with '11401'
c Var 'aux447' direct represents '0' with '11401'
c Var 'aux447' order represents '1' with '11402'
-11401 11402 0
c Var 'aux447' direct represents '1' with '11403'
11401 -11402 11403 0
-11403 11402 0
-11403 -11401 0
c Var 'aux447' order represents '2' with '11404'
-11402 11404 0
c Var 'aux447' direct represents '2' with '11405'
11402 -11404 11405 0
-11405 11404 0
-11405 -11402 0
c Var 'aux447' order represents '3' with '11406'
-11404 11406 0
c Var 'aux447' direct represents '3' with '11407'
11404 -11406 11407 0
-11407 11406 0
-11407 -11404 0
c Var 'aux447' order represents '4' with '11408'
-11406 11408 0
c Var 'aux447' direct represents '4' with '11409'
11406 -11408 11409 0
-11409 11408 0
-11409 -11406 0
c Var 'aux447' order represents '5' with '11410'
-11408 11410 0
c Var 'aux447' direct represents '5' with '11411'
11408 -11410 11411 0
-11411 11410 0
-11411 -11408 0
c Var 'aux447' order represents '6' with '11412'
-11410 11412 0
c Var 'aux447' direct represents '6' with '11413'
11410 -11412 11413 0
-11413 11412 0
-11413 -11410 0
c Var 'aux447' order represents '7' with '11414'
-11412 11414 0
c Var 'aux447' direct represents '7' with '11415'
11412 -11414 11415 0
-11415 11414 0
-11415 -11412 0
c Var 'aux447' order represents '8' with '11416'
-11414 11416 0
c Var 'aux447' direct represents '8' with '11417'
11414 -11416 11417 0
-11417 11416 0
-11417 -11414 0
c Var 'aux447' order represents '9' with '11418'
-11416 11418 0
c Var 'aux447' direct represents '9' with '11419'
11416 -11418 11419 0
-11419 11418 0
-11419 -11416 0
c Var 'aux447' order represents '10' with '11420'
-11418 11420 0
c Var 'aux447' direct represents '10' with '11421'
11418 -11420 11421 0
-11421 11420 0
-11421 -11418 0
c Var 'aux447' order represents '11' with '11422'
-11420 11422 0
c Var 'aux447' direct represents '11' with '11423'
11420 -11422 11423 0
-11423 11422 0
-11423 -11420 0
c Var 'aux447' order represents '12' with '11424'
-11422 11424 0
c Var 'aux447' direct represents '12' with '11425'
11422 -11424 11425 0
-11425 11424 0
-11425 -11422 0
c Var 'aux447' order represents '13' with '11426'
-11424 11426 0
c Var 'aux447' direct represents '13' with '11427'
11424 -11426 11427 0
-11427 11426 0
-11427 -11424 0
c Var 'aux447' order represents '14' with '11428'
-11426 11428 0
c Var 'aux447' direct represents '14' with '11429'
11426 -11428 11429 0
-11429 11428 0
-11429 -11426 0
c Var 'aux447' order represents '15' with '11430'
-11428 11430 0
c Var 'aux447' direct represents '15' with '11431'
11428 -11430 11431 0
-11431 11430 0
-11431 -11428 0
c Var 'aux447' order represents '16' with '11432'
-11430 11432 0
c Var 'aux447' direct represents '16' with '11433'
11430 -11432 11433 0
-11433 11432 0
-11433 -11430 0
c Var 'aux447' order represents '17' with '11434'
-11432 11434 0
c Var 'aux447' direct represents '17' with '11435'
11432 -11434 11435 0
-11435 11434 0
-11435 -11432 0
c Var 'aux447' direct represents '18' with '-11434'
11401 11403 11405 11407 11409 11411 11413 11415 11417 11419 11421 11423 11425 11427 11429 11431 11433 11435 -11434 0
c Encoding variable: aux448 with domain: int(0..26) (representing constraint (aux102 + aux444))
c Both direct and order encoding.
c Var 'aux448' order represents '0' with '11436'
c Var 'aux448' direct represents '0' with '11436'
c Var 'aux448' order represents '1' with '11437'
-11436 11437 0
c Var 'aux448' direct represents '1' with '11438'
11436 -11437 11438 0
-11438 11437 0
-11438 -11436 0
c Var 'aux448' order represents '2' with '11439'
-11437 11439 0
c Var 'aux448' direct represents '2' with '11440'
11437 -11439 11440 0
-11440 11439 0
-11440 -11437 0
c Var 'aux448' order represents '3' with '11441'
-11439 11441 0
c Var 'aux448' direct represents '3' with '11442'
11439 -11441 11442 0
-11442 11441 0
-11442 -11439 0
c Var 'aux448' order represents '4' with '11443'
-11441 11443 0
c Var 'aux448' direct represents '4' with '11444'
11441 -11443 11444 0
-11444 11443 0
-11444 -11441 0
c Var 'aux448' order represents '5' with '11445'
-11443 11445 0
c Var 'aux448' direct represents '5' with '11446'
11443 -11445 11446 0
-11446 11445 0
-11446 -11443 0
c Var 'aux448' order represents '6' with '11447'
-11445 11447 0
c Var 'aux448' direct represents '6' with '11448'
11445 -11447 11448 0
-11448 11447 0
-11448 -11445 0
c Var 'aux448' order represents '7' with '11449'
-11447 11449 0
c Var 'aux448' direct represents '7' with '11450'
11447 -11449 11450 0
-11450 11449 0
-11450 -11447 0
c Var 'aux448' order represents '8' with '11451'
-11449 11451 0
c Var 'aux448' direct represents '8' with '11452'
11449 -11451 11452 0
-11452 11451 0
-11452 -11449 0
c Var 'aux448' order represents '9' with '11453'
-11451 11453 0
c Var 'aux448' direct represents '9' with '11454'
11451 -11453 11454 0
-11454 11453 0
-11454 -11451 0
c Var 'aux448' order represents '10' with '11455'
-11453 11455 0
c Var 'aux448' direct represents '10' with '11456'
11453 -11455 11456 0
-11456 11455 0
-11456 -11453 0
c Var 'aux448' order represents '11' with '11457'
-11455 11457 0
c Var 'aux448' direct represents '11' with '11458'
11455 -11457 11458 0
-11458 11457 0
-11458 -11455 0
c Var 'aux448' order represents '12' with '11459'
-11457 11459 0
c Var 'aux448' direct represents '12' with '11460'
11457 -11459 11460 0
-11460 11459 0
-11460 -11457 0
c Var 'aux448' order represents '13' with '11461'
-11459 11461 0
c Var 'aux448' direct represents '13' with '11462'
11459 -11461 11462 0
-11462 11461 0
-11462 -11459 0
c Var 'aux448' order represents '14' with '11463'
-11461 11463 0
c Var 'aux448' direct represents '14' with '11464'
11461 -11463 11464 0
-11464 11463 0
-11464 -11461 0
c Var 'aux448' order represents '15' with '11465'
-11463 11465 0
c Var 'aux448' direct represents '15' with '11466'
11463 -11465 11466 0
-11466 11465 0
-11466 -11463 0
c Var 'aux448' order represents '16' with '11467'
-11465 11467 0
c Var 'aux448' direct represents '16' with '11468'
11465 -11467 11468 0
-11468 11467 0
-11468 -11465 0
c Var 'aux448' order represents '17' with '11469'
-11467 11469 0
c Var 'aux448' direct represents '17' with '11470'
11467 -11469 11470 0
-11470 11469 0
-11470 -11467 0
c Var 'aux448' order represents '18' with '11471'
-11469 11471 0
c Var 'aux448' direct represents '18' with '11472'
11469 -11471 11472 0
-11472 11471 0
-11472 -11469 0
c Var 'aux448' order represents '19' with '11473'
-11471 11473 0
c Var 'aux448' direct represents '19' with '11474'
11471 -11473 11474 0
-11474 11473 0
-11474 -11471 0
c Var 'aux448' order represents '20' with '11475'
-11473 11475 0
c Var 'aux448' direct represents '20' with '11476'
11473 -11475 11476 0
-11476 11475 0
-11476 -11473 0
c Var 'aux448' order represents '21' with '11477'
-11475 11477 0
c Var 'aux448' direct represents '21' with '11478'
11475 -11477 11478 0
-11478 11477 0
-11478 -11475 0
c Var 'aux448' order represents '22' with '11479'
-11477 11479 0
c Var 'aux448' direct represents '22' with '11480'
11477 -11479 11480 0
-11480 11479 0
-11480 -11477 0
c Var 'aux448' order represents '23' with '11481'
-11479 11481 0
c Var 'aux448' direct represents '23' with '11482'
11479 -11481 11482 0
-11482 11481 0
-11482 -11479 0
c Var 'aux448' order represents '24' with '11483'
-11481 11483 0
c Var 'aux448' direct represents '24' with '11484'
11481 -11483 11484 0
-11484 11483 0
-11484 -11481 0
c Var 'aux448' order represents '25' with '11485'
-11483 11485 0
c Var 'aux448' direct represents '25' with '11486'
11483 -11485 11486 0
-11486 11485 0
-11486 -11483 0
c Var 'aux448' direct represents '26' with '-11485'
11436 11438 11440 11442 11444 11446 11448 11450 11452 11454 11456 11458 11460 11462 11464 11466 11468 11470 11472 11474 11476 11478 11480 11482 11484 11486 -11485 0
c Encoding variable: aux449 with domain: int(0..36) (representing constraint (aux446 + aux447))
c Both direct and order encoding.
c Var 'aux449' order represents '0' with '11487'
c Var 'aux449' direct represents '0' with '11487'
c Var 'aux449' order represents '1' with '11488'
-11487 11488 0
c Var 'aux449' direct represents '1' with '11489'
11487 -11488 11489 0
-11489 11488 0
-11489 -11487 0
c Var 'aux449' order represents '2' with '11490'
-11488 11490 0
c Var 'aux449' direct represents '2' with '11491'
11488 -11490 11491 0
-11491 11490 0
-11491 -11488 0
c Var 'aux449' order represents '3' with '11492'
-11490 11492 0
c Var 'aux449' direct represents '3' with '11493'
11490 -11492 11493 0
-11493 11492 0
-11493 -11490 0
c Var 'aux449' order represents '4' with '11494'
-11492 11494 0
c Var 'aux449' direct represents '4' with '11495'
11492 -11494 11495 0
-11495 11494 0
-11495 -11492 0
c Var 'aux449' order represents '5' with '11496'
-11494 11496 0
c Var 'aux449' direct represents '5' with '11497'
11494 -11496 11497 0
-11497 11496 0
-11497 -11494 0
c Var 'aux449' order represents '6' with '11498'
-11496 11498 0
c Var 'aux449' direct represents '6' with '11499'
11496 -11498 11499 0
-11499 11498 0
-11499 -11496 0
c Var 'aux449' order represents '7' with '11500'
-11498 11500 0
c Var 'aux449' direct represents '7' with '11501'
11498 -11500 11501 0
-11501 11500 0
-11501 -11498 0
c Var 'aux449' order represents '8' with '11502'
-11500 11502 0
c Var 'aux449' direct represents '8' with '11503'
11500 -11502 11503 0
-11503 11502 0
-11503 -11500 0
c Var 'aux449' order represents '9' with '11504'
-11502 11504 0
c Var 'aux449' direct represents '9' with '11505'
11502 -11504 11505 0
-11505 11504 0
-11505 -11502 0
c Var 'aux449' order represents '10' with '11506'
-11504 11506 0
c Var 'aux449' direct represents '10' with '11507'
11504 -11506 11507 0
-11507 11506 0
-11507 -11504 0
c Var 'aux449' order represents '11' with '11508'
-11506 11508 0
c Var 'aux449' direct represents '11' with '11509'
11506 -11508 11509 0
-11509 11508 0
-11509 -11506 0
c Var 'aux449' order represents '12' with '11510'
-11508 11510 0
c Var 'aux449' direct represents '12' with '11511'
11508 -11510 11511 0
-11511 11510 0
-11511 -11508 0
c Var 'aux449' order represents '13' with '11512'
-11510 11512 0
c Var 'aux449' direct represents '13' with '11513'
11510 -11512 11513 0
-11513 11512 0
-11513 -11510 0
c Var 'aux449' order represents '14' with '11514'
-11512 11514 0
c Var 'aux449' direct represents '14' with '11515'
11512 -11514 11515 0
-11515 11514 0
-11515 -11512 0
c Var 'aux449' order represents '15' with '11516'
-11514 11516 0
c Var 'aux449' direct represents '15' with '11517'
11514 -11516 11517 0
-11517 11516 0
-11517 -11514 0
c Var 'aux449' order represents '16' with '11518'
-11516 11518 0
c Var 'aux449' direct represents '16' with '11519'
11516 -11518 11519 0
-11519 11518 0
-11519 -11516 0
c Var 'aux449' order represents '17' with '11520'
-11518 11520 0
c Var 'aux449' direct represents '17' with '11521'
11518 -11520 11521 0
-11521 11520 0
-11521 -11518 0
c Var 'aux449' order represents '18' with '11522'
-11520 11522 0
c Var 'aux449' direct represents '18' with '11523'
11520 -11522 11523 0
-11523 11522 0
-11523 -11520 0
c Var 'aux449' order represents '19' with '11524'
-11522 11524 0
c Var 'aux449' direct represents '19' with '11525'
11522 -11524 11525 0
-11525 11524 0
-11525 -11522 0
c Var 'aux449' order represents '20' with '11526'
-11524 11526 0
c Var 'aux449' direct represents '20' with '11527'
11524 -11526 11527 0
-11527 11526 0
-11527 -11524 0
c Var 'aux449' order represents '21' with '11528'
-11526 11528 0
c Var 'aux449' direct represents '21' with '11529'
11526 -11528 11529 0
-11529 11528 0
-11529 -11526 0
c Var 'aux449' order represents '22' with '11530'
-11528 11530 0
c Var 'aux449' direct represents '22' with '11531'
11528 -11530 11531 0
-11531 11530 0
-11531 -11528 0
c Var 'aux449' order represents '23' with '11532'
-11530 11532 0
c Var 'aux449' direct represents '23' with '11533'
11530 -11532 11533 0
-11533 11532 0
-11533 -11530 0
c Var 'aux449' order represents '24' with '11534'
-11532 11534 0
c Var 'aux449' direct represents '24' with '11535'
11532 -11534 11535 0
-11535 11534 0
-11535 -11532 0
c Var 'aux449' order represents '25' with '11536'
-11534 11536 0
c Var 'aux449' direct represents '25' with '11537'
11534 -11536 11537 0
-11537 11536 0
-11537 -11534 0
c Var 'aux449' order represents '26' with '11538'
-11536 11538 0
c Var 'aux449' direct represents '26' with '11539'
11536 -11538 11539 0
-11539 11538 0
-11539 -11536 0
c Var 'aux449' order represents '27' with '11540'
-11538 11540 0
c Var 'aux449' direct represents '27' with '11541'
11538 -11540 11541 0
-11541 11540 0
-11541 -11538 0
c Var 'aux449' order represents '28' with '11542'
-11540 11542 0
c Var 'aux449' direct represents '28' with '11543'
11540 -11542 11543 0
-11543 11542 0
-11543 -11540 0
c Var 'aux449' order represents '29' with '11544'
-11542 11544 0
c Var 'aux449' direct represents '29' with '11545'
11542 -11544 11545 0
-11545 11544 0
-11545 -11542 0
c Var 'aux449' order represents '30' with '11546'
-11544 11546 0
c Var 'aux449' direct represents '30' with '11547'
11544 -11546 11547 0
-11547 11546 0
-11547 -11544 0
c Var 'aux449' order represents '31' with '11548'
-11546 11548 0
c Var 'aux449' direct represents '31' with '11549'
11546 -11548 11549 0
-11549 11548 0
-11549 -11546 0
c Var 'aux449' order represents '32' with '11550'
-11548 11550 0
c Var 'aux449' direct represents '32' with '11551'
11548 -11550 11551 0
-11551 11550 0
-11551 -11548 0
c Var 'aux449' order represents '33' with '11552'
-11550 11552 0
c Var 'aux449' direct represents '33' with '11553'
11550 -11552 11553 0
-11553 11552 0
-11553 -11550 0
c Var 'aux449' order represents '34' with '11554'
-11552 11554 0
c Var 'aux449' direct represents '34' with '11555'
11552 -11554 11555 0
-11555 11554 0
-11555 -11552 0
c Var 'aux449' order represents '35' with '11556'
-11554 11556 0
c Var 'aux449' direct represents '35' with '11557'
11554 -11556 11557 0
-11557 11556 0
-11557 -11554 0
c Var 'aux449' direct represents '36' with '-11556'
11487 11489 11491 11493 11495 11497 11499 11501 11503 11505 11507 11509 11511 11513 11515 11517 11519 11521 11523 11525 11527 11529 11531 11533 11535 11537 11539 11541 11543 11545 11547 11549 11551 11553 11555 11557 -11556 0
c Encoding variable: aux450 with domain: int(0..17) (representing constraint (shift(variant_fields_00004_00002_00001, -1) + aux115))
c Both direct and order encoding.
c Var 'aux450' order represents '0' with '11558'
c Var 'aux450' direct represents '0' with '11558'
c Var 'aux450' order represents '1' with '11559'
-11558 11559 0
c Var 'aux450' direct represents '1' with '11560'
11558 -11559 11560 0
-11560 11559 0
-11560 -11558 0
c Var 'aux450' order represents '2' with '11561'
-11559 11561 0
c Var 'aux450' direct represents '2' with '11562'
11559 -11561 11562 0
-11562 11561 0
-11562 -11559 0
c Var 'aux450' order represents '3' with '11563'
-11561 11563 0
c Var 'aux450' direct represents '3' with '11564'
11561 -11563 11564 0
-11564 11563 0
-11564 -11561 0
c Var 'aux450' order represents '4' with '11565'
-11563 11565 0
c Var 'aux450' direct represents '4' with '11566'
11563 -11565 11566 0
-11566 11565 0
-11566 -11563 0
c Var 'aux450' order represents '5' with '11567'
-11565 11567 0
c Var 'aux450' direct represents '5' with '11568'
11565 -11567 11568 0
-11568 11567 0
-11568 -11565 0
c Var 'aux450' order represents '6' with '11569'
-11567 11569 0
c Var 'aux450' direct represents '6' with '11570'
11567 -11569 11570 0
-11570 11569 0
-11570 -11567 0
c Var 'aux450' order represents '7' with '11571'
-11569 11571 0
c Var 'aux450' direct represents '7' with '11572'
11569 -11571 11572 0
-11572 11571 0
-11572 -11569 0
c Var 'aux450' order represents '8' with '11573'
-11571 11573 0
c Var 'aux450' direct represents '8' with '11574'
11571 -11573 11574 0
-11574 11573 0
-11574 -11571 0
c Var 'aux450' order represents '9' with '11575'
-11573 11575 0
c Var 'aux450' direct represents '9' with '11576'
11573 -11575 11576 0
-11576 11575 0
-11576 -11573 0
c Var 'aux450' order represents '10' with '11577'
-11575 11577 0
c Var 'aux450' direct represents '10' with '11578'
11575 -11577 11578 0
-11578 11577 0
-11578 -11575 0
c Var 'aux450' order represents '11' with '11579'
-11577 11579 0
c Var 'aux450' direct represents '11' with '11580'
11577 -11579 11580 0
-11580 11579 0
-11580 -11577 0
c Var 'aux450' order represents '12' with '11581'
-11579 11581 0
c Var 'aux450' direct represents '12' with '11582'
11579 -11581 11582 0
-11582 11581 0
-11582 -11579 0
c Var 'aux450' order represents '13' with '11583'
-11581 11583 0
c Var 'aux450' direct represents '13' with '11584'
11581 -11583 11584 0
-11584 11583 0
-11584 -11581 0
c Var 'aux450' order represents '14' with '11585'
-11583 11585 0
c Var 'aux450' direct represents '14' with '11586'
11583 -11585 11586 0
-11586 11585 0
-11586 -11583 0
c Var 'aux450' order represents '15' with '11587'
-11585 11587 0
c Var 'aux450' direct represents '15' with '11588'
11585 -11587 11588 0
-11588 11587 0
-11588 -11585 0
c Var 'aux450' order represents '16' with '11589'
-11587 11589 0
c Var 'aux450' direct represents '16' with '11590'
11587 -11589 11590 0
-11590 11589 0
-11590 -11587 0
c Var 'aux450' direct represents '17' with '-11589'
11558 11560 11562 11564 11566 11568 11570 11572 11574 11576 11578 11580 11582 11584 11586 11588 11590 -11589 0
c Encoding variable: aux451 with domain: int(0..18) (representing constraint (aux114 + aux108))
c Both direct and order encoding.
c Var 'aux451' order represents '0' with '11591'
c Var 'aux451' direct represents '0' with '11591'
c Var 'aux451' order represents '1' with '11592'
-11591 11592 0
c Var 'aux451' direct represents '1' with '11593'
11591 -11592 11593 0
-11593 11592 0
-11593 -11591 0
c Var 'aux451' order represents '2' with '11594'
-11592 11594 0
c Var 'aux451' direct represents '2' with '11595'
11592 -11594 11595 0
-11595 11594 0
-11595 -11592 0
c Var 'aux451' order represents '3' with '11596'
-11594 11596 0
c Var 'aux451' direct represents '3' with '11597'
11594 -11596 11597 0
-11597 11596 0
-11597 -11594 0
c Var 'aux451' order represents '4' with '11598'
-11596 11598 0
c Var 'aux451' direct represents '4' with '11599'
11596 -11598 11599 0
-11599 11598 0
-11599 -11596 0
c Var 'aux451' order represents '5' with '11600'
-11598 11600 0
c Var 'aux451' direct represents '5' with '11601'
11598 -11600 11601 0
-11601 11600 0
-11601 -11598 0
c Var 'aux451' order represents '6' with '11602'
-11600 11602 0
c Var 'aux451' direct represents '6' with '11603'
11600 -11602 11603 0
-11603 11602 0
-11603 -11600 0
c Var 'aux451' order represents '7' with '11604'
-11602 11604 0
c Var 'aux451' direct represents '7' with '11605'
11602 -11604 11605 0
-11605 11604 0
-11605 -11602 0
c Var 'aux451' order represents '8' with '11606'
-11604 11606 0
c Var 'aux451' direct represents '8' with '11607'
11604 -11606 11607 0
-11607 11606 0
-11607 -11604 0
c Var 'aux451' order represents '9' with '11608'
-11606 11608 0
c Var 'aux451' direct represents '9' with '11609'
11606 -11608 11609 0
-11609 11608 0
-11609 -11606 0
c Var 'aux451' order represents '10' with '11610'
-11608 11610 0
c Var 'aux451' direct represents '10' with '11611'
11608 -11610 11611 0
-11611 11610 0
-11611 -11608 0
c Var 'aux451' order represents '11' with '11612'
-11610 11612 0
c Var 'aux451' direct represents '11' with '11613'
11610 -11612 11613 0
-11613 11612 0
-11613 -11610 0
c Var 'aux451' order represents '12' with '11614'
-11612 11614 0
c Var 'aux451' direct represents '12' with '11615'
11612 -11614 11615 0
-11615 11614 0
-11615 -11612 0
c Var 'aux451' order represents '13' with '11616'
-11614 11616 0
c Var 'aux451' direct represents '13' with '11617'
11614 -11616 11617 0
-11617 11616 0
-11617 -11614 0
c Var 'aux451' order represents '14' with '11618'
-11616 11618 0
c Var 'aux451' direct represents '14' with '11619'
11616 -11618 11619 0
-11619 11618 0
-11619 -11616 0
c Var 'aux451' order represents '15' with '11620'
-11618 11620 0
c Var 'aux451' direct represents '15' with '11621'
11618 -11620 11621 0
-11621 11620 0
-11621 -11618 0
c Var 'aux451' order represents '16' with '11622'
-11620 11622 0
c Var 'aux451' direct represents '16' with '11623'
11620 -11622 11623 0
-11623 11622 0
-11623 -11620 0
c Var 'aux451' order represents '17' with '11624'
-11622 11624 0
c Var 'aux451' direct represents '17' with '11625'
11622 -11624 11625 0
-11625 11624 0
-11625 -11622 0
c Var 'aux451' direct represents '18' with '-11624'
11591 11593 11595 11597 11599 11601 11603 11605 11607 11609 11611 11613 11615 11617 11619 11621 11623 11625 -11624 0
c Encoding variable: aux452 with domain: int(0..18) (representing constraint (aux113 + aux110))
c Both direct and order encoding.
c Var 'aux452' order represents '0' with '11626'
c Var 'aux452' direct represents '0' with '11626'
c Var 'aux452' order represents '1' with '11627'
-11626 11627 0
c Var 'aux452' direct represents '1' with '11628'
11626 -11627 11628 0
-11628 11627 0
-11628 -11626 0
c Var 'aux452' order represents '2' with '11629'
-11627 11629 0
c Var 'aux452' direct represents '2' with '11630'
11627 -11629 11630 0
-11630 11629 0
-11630 -11627 0
c Var 'aux452' order represents '3' with '11631'
-11629 11631 0
c Var 'aux452' direct represents '3' with '11632'
11629 -11631 11632 0
-11632 11631 0
-11632 -11629 0
c Var 'aux452' order represents '4' with '11633'
-11631 11633 0
c Var 'aux452' direct represents '4' with '11634'
11631 -11633 11634 0
-11634 11633 0
-11634 -11631 0
c Var 'aux452' order represents '5' with '11635'
-11633 11635 0
c Var 'aux452' direct represents '5' with '11636'
11633 -11635 11636 0
-11636 11635 0
-11636 -11633 0
c Var 'aux452' order represents '6' with '11637'
-11635 11637 0
c Var 'aux452' direct represents '6' with '11638'
11635 -11637 11638 0
-11638 11637 0
-11638 -11635 0
c Var 'aux452' order represents '7' with '11639'
-11637 11639 0
c Var 'aux452' direct represents '7' with '11640'
11637 -11639 11640 0
-11640 11639 0
-11640 -11637 0
c Var 'aux452' order represents '8' with '11641'
-11639 11641 0
c Var 'aux452' direct represents '8' with '11642'
11639 -11641 11642 0
-11642 11641 0
-11642 -11639 0
c Var 'aux452' order represents '9' with '11643'
-11641 11643 0
c Var 'aux452' direct represents '9' with '11644'
11641 -11643 11644 0
-11644 11643 0
-11644 -11641 0
c Var 'aux452' order represents '10' with '11645'
-11643 11645 0
c Var 'aux452' direct represents '10' with '11646'
11643 -11645 11646 0
-11646 11645 0
-11646 -11643 0
c Var 'aux452' order represents '11' with '11647'
-11645 11647 0
c Var 'aux452' direct represents '11' with '11648'
11645 -11647 11648 0
-11648 11647 0
-11648 -11645 0
c Var 'aux452' order represents '12' with '11649'
-11647 11649 0
c Var 'aux452' direct represents '12' with '11650'
11647 -11649 11650 0
-11650 11649 0
-11650 -11647 0
c Var 'aux452' order represents '13' with '11651'
-11649 11651 0
c Var 'aux452' direct represents '13' with '11652'
11649 -11651 11652 0
-11652 11651 0
-11652 -11649 0
c Var 'aux452' order represents '14' with '11653'
-11651 11653 0
c Var 'aux452' direct represents '14' with '11654'
11651 -11653 11654 0
-11654 11653 0
-11654 -11651 0
c Var 'aux452' order represents '15' with '11655'
-11653 11655 0
c Var 'aux452' direct represents '15' with '11656'
11653 -11655 11656 0
-11656 11655 0
-11656 -11653 0
c Var 'aux452' order represents '16' with '11657'
-11655 11657 0
c Var 'aux452' direct represents '16' with '11658'
11655 -11657 11658 0
-11658 11657 0
-11658 -11655 0
c Var 'aux452' order represents '17' with '11659'
-11657 11659 0
c Var 'aux452' direct represents '17' with '11660'
11657 -11659 11660 0
-11660 11659 0
-11660 -11657 0
c Var 'aux452' direct represents '18' with '-11659'
11626 11628 11630 11632 11634 11636 11638 11640 11642 11644 11646 11648 11650 11652 11654 11656 11658 11660 -11659 0
c Encoding variable: aux453 with domain: int(0..18) (representing constraint (aux112 + aux111))
c Both direct and order encoding.
c Var 'aux453' order represents '0' with '11661'
c Var 'aux453' direct represents '0' with '11661'
c Var 'aux453' order represents '1' with '11662'
-11661 11662 0
c Var 'aux453' direct represents '1' with '11663'
11661 -11662 11663 0
-11663 11662 0
-11663 -11661 0
c Var 'aux453' order represents '2' with '11664'
-11662 11664 0
c Var 'aux453' direct represents '2' with '11665'
11662 -11664 11665 0
-11665 11664 0
-11665 -11662 0
c Var 'aux453' order represents '3' with '11666'
-11664 11666 0
c Var 'aux453' direct represents '3' with '11667'
11664 -11666 11667 0
-11667 11666 0
-11667 -11664 0
c Var 'aux453' order represents '4' with '11668'
-11666 11668 0
c Var 'aux453' direct represents '4' with '11669'
11666 -11668 11669 0
-11669 11668 0
-11669 -11666 0
c Var 'aux453' order represents '5' with '11670'
-11668 11670 0
c Var 'aux453' direct represents '5' with '11671'
11668 -11670 11671 0
-11671 11670 0
-11671 -11668 0
c Var 'aux453' order represents '6' with '11672'
-11670 11672 0
c Var 'aux453' direct represents '6' with '11673'
11670 -11672 11673 0
-11673 11672 0
-11673 -11670 0
c Var 'aux453' order represents '7' with '11674'
-11672 11674 0
c Var 'aux453' direct represents '7' with '11675'
11672 -11674 11675 0
-11675 11674 0
-11675 -11672 0
c Var 'aux453' order represents '8' with '11676'
-11674 11676 0
c Var 'aux453' direct represents '8' with '11677'
11674 -11676 11677 0
-11677 11676 0
-11677 -11674 0
c Var 'aux453' order represents '9' with '11678'
-11676 11678 0
c Var 'aux453' direct represents '9' with '11679'
11676 -11678 11679 0
-11679 11678 0
-11679 -11676 0
c Var 'aux453' order represents '10' with '11680'
-11678 11680 0
c Var 'aux453' direct represents '10' with '11681'
11678 -11680 11681 0
-11681 11680 0
-11681 -11678 0
c Var 'aux453' order represents '11' with '11682'
-11680 11682 0
c Var 'aux453' direct represents '11' with '11683'
11680 -11682 11683 0
-11683 11682 0
-11683 -11680 0
c Var 'aux453' order represents '12' with '11684'
-11682 11684 0
c Var 'aux453' direct represents '12' with '11685'
11682 -11684 11685 0
-11685 11684 0
-11685 -11682 0
c Var 'aux453' order represents '13' with '11686'
-11684 11686 0
c Var 'aux453' direct represents '13' with '11687'
11684 -11686 11687 0
-11687 11686 0
-11687 -11684 0
c Var 'aux453' order represents '14' with '11688'
-11686 11688 0
c Var 'aux453' direct represents '14' with '11689'
11686 -11688 11689 0
-11689 11688 0
-11689 -11686 0
c Var 'aux453' order represents '15' with '11690'
-11688 11690 0
c Var 'aux453' direct represents '15' with '11691'
11688 -11690 11691 0
-11691 11690 0
-11691 -11688 0
c Var 'aux453' order represents '16' with '11692'
-11690 11692 0
c Var 'aux453' direct represents '16' with '11693'
11690 -11692 11693 0
-11693 11692 0
-11693 -11690 0
c Var 'aux453' order represents '17' with '11694'
-11692 11694 0
c Var 'aux453' direct represents '17' with '11695'
11692 -11694 11695 0
-11695 11694 0
-11695 -11692 0
c Var 'aux453' direct represents '18' with '-11694'
11661 11663 11665 11667 11669 11671 11673 11675 11677 11679 11681 11683 11685 11687 11689 11691 11693 11695 -11694 0
c Encoding variable: aux454 with domain: int(0..26) (representing constraint (aux109 + aux450))
c Both direct and order encoding.
c Var 'aux454' order represents '0' with '11696'
c Var 'aux454' direct represents '0' with '11696'
c Var 'aux454' order represents '1' with '11697'
-11696 11697 0
c Var 'aux454' direct represents '1' with '11698'
11696 -11697 11698 0
-11698 11697 0
-11698 -11696 0
c Var 'aux454' order represents '2' with '11699'
-11697 11699 0
c Var 'aux454' direct represents '2' with '11700'
11697 -11699 11700 0
-11700 11699 0
-11700 -11697 0
c Var 'aux454' order represents '3' with '11701'
-11699 11701 0
c Var 'aux454' direct represents '3' with '11702'
11699 -11701 11702 0
-11702 11701 0
-11702 -11699 0
c Var 'aux454' order represents '4' with '11703'
-11701 11703 0
c Var 'aux454' direct represents '4' with '11704'
11701 -11703 11704 0
-11704 11703 0
-11704 -11701 0
c Var 'aux454' order represents '5' with '11705'
-11703 11705 0
c Var 'aux454' direct represents '5' with '11706'
11703 -11705 11706 0
-11706 11705 0
-11706 -11703 0
c Var 'aux454' order represents '6' with '11707'
-11705 11707 0
c Var 'aux454' direct represents '6' with '11708'
11705 -11707 11708 0
-11708 11707 0
-11708 -11705 0
c Var 'aux454' order represents '7' with '11709'
-11707 11709 0
c Var 'aux454' direct represents '7' with '11710'
11707 -11709 11710 0
-11710 11709 0
-11710 -11707 0
c Var 'aux454' order represents '8' with '11711'
-11709 11711 0
c Var 'aux454' direct represents '8' with '11712'
11709 -11711 11712 0
-11712 11711 0
-11712 -11709 0
c Var 'aux454' order represents '9' with '11713'
-11711 11713 0
c Var 'aux454' direct represents '9' with '11714'
11711 -11713 11714 0
-11714 11713 0
-11714 -11711 0
c Var 'aux454' order represents '10' with '11715'
-11713 11715 0
c Var 'aux454' direct represents '10' with '11716'
11713 -11715 11716 0
-11716 11715 0
-11716 -11713 0
c Var 'aux454' order represents '11' with '11717'
-11715 11717 0
c Var 'aux454' direct represents '11' with '11718'
11715 -11717 11718 0
-11718 11717 0
-11718 -11715 0
c Var 'aux454' order represents '12' with '11719'
-11717 11719 0
c Var 'aux454' direct represents '12' with '11720'
11717 -11719 11720 0
-11720 11719 0
-11720 -11717 0
c Var 'aux454' order represents '13' with '11721'
-11719 11721 0
c Var 'aux454' direct represents '13' with '11722'
11719 -11721 11722 0
-11722 11721 0
-11722 -11719 0
c Var 'aux454' order represents '14' with '11723'
-11721 11723 0
c Var 'aux454' direct represents '14' with '11724'
11721 -11723 11724 0
-11724 11723 0
-11724 -11721 0
c Var 'aux454' order represents '15' with '11725'
-11723 11725 0
c Var 'aux454' direct represents '15' with '11726'
11723 -11725 11726 0
-11726 11725 0
-11726 -11723 0
c Var 'aux454' order represents '16' with '11727'
-11725 11727 0
c Var 'aux454' direct represents '16' with '11728'
11725 -11727 11728 0
-11728 11727 0
-11728 -11725 0
c Var 'aux454' order represents '17' with '11729'
-11727 11729 0
c Var 'aux454' direct represents '17' with '11730'
11727 -11729 11730 0
-11730 11729 0
-11730 -11727 0
c Var 'aux454' order represents '18' with '11731'
-11729 11731 0
c Var 'aux454' direct represents '18' with '11732'
11729 -11731 11732 0
-11732 11731 0
-11732 -11729 0
c Var 'aux454' order represents '19' with '11733'
-11731 11733 0
c Var 'aux454' direct represents '19' with '11734'
11731 -11733 11734 0
-11734 11733 0
-11734 -11731 0
c Var 'aux454' order represents '20' with '11735'
-11733 11735 0
c Var 'aux454' direct represents '20' with '11736'
11733 -11735 11736 0
-11736 11735 0
-11736 -11733 0
c Var 'aux454' order represents '21' with '11737'
-11735 11737 0
c Var 'aux454' direct represents '21' with '11738'
11735 -11737 11738 0
-11738 11737 0
-11738 -11735 0
c Var 'aux454' order represents '22' with '11739'
-11737 11739 0
c Var 'aux454' direct represents '22' with '11740'
11737 -11739 11740 0
-11740 11739 0
-11740 -11737 0
c Var 'aux454' order represents '23' with '11741'
-11739 11741 0
c Var 'aux454' direct represents '23' with '11742'
11739 -11741 11742 0
-11742 11741 0
-11742 -11739 0
c Var 'aux454' order represents '24' with '11743'
-11741 11743 0
c Var 'aux454' direct represents '24' with '11744'
11741 -11743 11744 0
-11744 11743 0
-11744 -11741 0
c Var 'aux454' order represents '25' with '11745'
-11743 11745 0
c Var 'aux454' direct represents '25' with '11746'
11743 -11745 11746 0
-11746 11745 0
-11746 -11743 0
c Var 'aux454' direct represents '26' with '-11745'
11696 11698 11700 11702 11704 11706 11708 11710 11712 11714 11716 11718 11720 11722 11724 11726 11728 11730 11732 11734 11736 11738 11740 11742 11744 11746 -11745 0
c Encoding variable: aux455 with domain: int(0..36) (representing constraint (aux452 + aux453))
c Both direct and order encoding.
c Var 'aux455' order represents '0' with '11747'
c Var 'aux455' direct represents '0' with '11747'
c Var 'aux455' order represents '1' with '11748'
-11747 11748 0
c Var 'aux455' direct represents '1' with '11749'
11747 -11748 11749 0
-11749 11748 0
-11749 -11747 0
c Var 'aux455' order represents '2' with '11750'
-11748 11750 0
c Var 'aux455' direct represents '2' with '11751'
11748 -11750 11751 0
-11751 11750 0
-11751 -11748 0
c Var 'aux455' order represents '3' with '11752'
-11750 11752 0
c Var 'aux455' direct represents '3' with '11753'
11750 -11752 11753 0
-11753 11752 0
-11753 -11750 0
c Var 'aux455' order represents '4' with '11754'
-11752 11754 0
c Var 'aux455' direct represents '4' with '11755'
11752 -11754 11755 0
-11755 11754 0
-11755 -11752 0
c Var 'aux455' order represents '5' with '11756'
-11754 11756 0
c Var 'aux455' direct represents '5' with '11757'
11754 -11756 11757 0
-11757 11756 0
-11757 -11754 0
c Var 'aux455' order represents '6' with '11758'
-11756 11758 0
c Var 'aux455' direct represents '6' with '11759'
11756 -11758 11759 0
-11759 11758 0
-11759 -11756 0
c Var 'aux455' order represents '7' with '11760'
-11758 11760 0
c Var 'aux455' direct represents '7' with '11761'
11758 -11760 11761 0
-11761 11760 0
-11761 -11758 0
c Var 'aux455' order represents '8' with '11762'
-11760 11762 0
c Var 'aux455' direct represents '8' with '11763'
11760 -11762 11763 0
-11763 11762 0
-11763 -11760 0
c Var 'aux455' order represents '9' with '11764'
-11762 11764 0
c Var 'aux455' direct represents '9' with '11765'
11762 -11764 11765 0
-11765 11764 0
-11765 -11762 0
c Var 'aux455' order represents '10' with '11766'
-11764 11766 0
c Var 'aux455' direct represents '10' with '11767'
11764 -11766 11767 0
-11767 11766 0
-11767 -11764 0
c Var 'aux455' order represents '11' with '11768'
-11766 11768 0
c Var 'aux455' direct represents '11' with '11769'
11766 -11768 11769 0
-11769 11768 0
-11769 -11766 0
c Var 'aux455' order represents '12' with '11770'
-11768 11770 0
c Var 'aux455' direct represents '12' with '11771'
11768 -11770 11771 0
-11771 11770 0
-11771 -11768 0
c Var 'aux455' order represents '13' with '11772'
-11770 11772 0
c Var 'aux455' direct represents '13' with '11773'
11770 -11772 11773 0
-11773 11772 0
-11773 -11770 0
c Var 'aux455' order represents '14' with '11774'
-11772 11774 0
c Var 'aux455' direct represents '14' with '11775'
11772 -11774 11775 0
-11775 11774 0
-11775 -11772 0
c Var 'aux455' order represents '15' with '11776'
-11774 11776 0
c Var 'aux455' direct represents '15' with '11777'
11774 -11776 11777 0
-11777 11776 0
-11777 -11774 0
c Var 'aux455' order represents '16' with '11778'
-11776 11778 0
c Var 'aux455' direct represents '16' with '11779'
11776 -11778 11779 0
-11779 11778 0
-11779 -11776 0
c Var 'aux455' order represents '17' with '11780'
-11778 11780 0
c Var 'aux455' direct represents '17' with '11781'
11778 -11780 11781 0
-11781 11780 0
-11781 -11778 0
c Var 'aux455' order represents '18' with '11782'
-11780 11782 0
c Var 'aux455' direct represents '18' with '11783'
11780 -11782 11783 0
-11783 11782 0
-11783 -11780 0
c Var 'aux455' order represents '19' with '11784'
-11782 11784 0
c Var 'aux455' direct represents '19' with '11785'
11782 -11784 11785 0
-11785 11784 0
-11785 -11782 0
c Var 'aux455' order represents '20' with '11786'
-11784 11786 0
c Var 'aux455' direct represents '20' with '11787'
11784 -11786 11787 0
-11787 11786 0
-11787 -11784 0
c Var 'aux455' order represents '21' with '11788'
-11786 11788 0
c Var 'aux455' direct represents '21' with '11789'
11786 -11788 11789 0
-11789 11788 0
-11789 -11786 0
c Var 'aux455' order represents '22' with '11790'
-11788 11790 0
c Var 'aux455' direct represents '22' with '11791'
11788 -11790 11791 0
-11791 11790 0
-11791 -11788 0
c Var 'aux455' order represents '23' with '11792'
-11790 11792 0
c Var 'aux455' direct represents '23' with '11793'
11790 -11792 11793 0
-11793 11792 0
-11793 -11790 0
c Var 'aux455' order represents '24' with '11794'
-11792 11794 0
c Var 'aux455' direct represents '24' with '11795'
11792 -11794 11795 0
-11795 11794 0
-11795 -11792 0
c Var 'aux455' order represents '25' with '11796'
-11794 11796 0
c Var 'aux455' direct represents '25' with '11797'
11794 -11796 11797 0
-11797 11796 0
-11797 -11794 0
c Var 'aux455' order represents '26' with '11798'
-11796 11798 0
c Var 'aux455' direct represents '26' with '11799'
11796 -11798 11799 0
-11799 11798 0
-11799 -11796 0
c Var 'aux455' order represents '27' with '11800'
-11798 11800 0
c Var 'aux455' direct represents '27' with '11801'
11798 -11800 11801 0
-11801 11800 0
-11801 -11798 0
c Var 'aux455' order represents '28' with '11802'
-11800 11802 0
c Var 'aux455' direct represents '28' with '11803'
11800 -11802 11803 0
-11803 11802 0
-11803 -11800 0
c Var 'aux455' order represents '29' with '11804'
-11802 11804 0
c Var 'aux455' direct represents '29' with '11805'
11802 -11804 11805 0
-11805 11804 0
-11805 -11802 0
c Var 'aux455' order represents '30' with '11806'
-11804 11806 0
c Var 'aux455' direct represents '30' with '11807'
11804 -11806 11807 0
-11807 11806 0
-11807 -11804 0
c Var 'aux455' order represents '31' with '11808'
-11806 11808 0
c Var 'aux455' direct represents '31' with '11809'
11806 -11808 11809 0
-11809 11808 0
-11809 -11806 0
c Var 'aux455' order represents '32' with '11810'
-11808 11810 0
c Var 'aux455' direct represents '32' with '11811'
11808 -11810 11811 0
-11811 11810 0
-11811 -11808 0
c Var 'aux455' order represents '33' with '11812'
-11810 11812 0
c Var 'aux455' direct represents '33' with '11813'
11810 -11812 11813 0
-11813 11812 0
-11813 -11810 0
c Var 'aux455' order represents '34' with '11814'
-11812 11814 0
c Var 'aux455' direct represents '34' with '11815'
11812 -11814 11815 0
-11815 11814 0
-11815 -11812 0
c Var 'aux455' order represents '35' with '11816'
-11814 11816 0
c Var 'aux455' direct represents '35' with '11817'
11814 -11816 11817 0
-11817 11816 0
-11817 -11814 0
c Var 'aux455' direct represents '36' with '-11816'
11747 11749 11751 11753 11755 11757 11759 11761 11763 11765 11767 11769 11771 11773 11775 11777 11779 11781 11783 11785 11787 11789 11791 11793 11795 11797 11799 11801 11803 11805 11807 11809 11811 11813 11815 11817 -11816 0
c Encoding variable: aux456 with domain: int(0..17) (representing constraint (shift(variant_fields_00004_00004_00001, -1) + aux120))
c Both direct and order encoding.
c Var 'aux456' order represents '0' with '11818'
c Var 'aux456' direct represents '0' with '11818'
c Var 'aux456' order represents '1' with '11819'
-11818 11819 0
c Var 'aux456' direct represents '1' with '11820'
11818 -11819 11820 0
-11820 11819 0
-11820 -11818 0
c Var 'aux456' order represents '2' with '11821'
-11819 11821 0
c Var 'aux456' direct represents '2' with '11822'
11819 -11821 11822 0
-11822 11821 0
-11822 -11819 0
c Var 'aux456' order represents '3' with '11823'
-11821 11823 0
c Var 'aux456' direct represents '3' with '11824'
11821 -11823 11824 0
-11824 11823 0
-11824 -11821 0
c Var 'aux456' order represents '4' with '11825'
-11823 11825 0
c Var 'aux456' direct represents '4' with '11826'
11823 -11825 11826 0
-11826 11825 0
-11826 -11823 0
c Var 'aux456' order represents '5' with '11827'
-11825 11827 0
c Var 'aux456' direct represents '5' with '11828'
11825 -11827 11828 0
-11828 11827 0
-11828 -11825 0
c Var 'aux456' order represents '6' with '11829'
-11827 11829 0
c Var 'aux456' direct represents '6' with '11830'
11827 -11829 11830 0
-11830 11829 0
-11830 -11827 0
c Var 'aux456' order represents '7' with '11831'
-11829 11831 0
c Var 'aux456' direct represents '7' with '11832'
11829 -11831 11832 0
-11832 11831 0
-11832 -11829 0
c Var 'aux456' order represents '8' with '11833'
-11831 11833 0
c Var 'aux456' direct represents '8' with '11834'
11831 -11833 11834 0
-11834 11833 0
-11834 -11831 0
c Var 'aux456' order represents '9' with '11835'
-11833 11835 0
c Var 'aux456' direct represents '9' with '11836'
11833 -11835 11836 0
-11836 11835 0
-11836 -11833 0
c Var 'aux456' order represents '10' with '11837'
-11835 11837 0
c Var 'aux456' direct represents '10' with '11838'
11835 -11837 11838 0
-11838 11837 0
-11838 -11835 0
c Var 'aux456' order represents '11' with '11839'
-11837 11839 0
c Var 'aux456' direct represents '11' with '11840'
11837 -11839 11840 0
-11840 11839 0
-11840 -11837 0
c Var 'aux456' order represents '12' with '11841'
-11839 11841 0
c Var 'aux456' direct represents '12' with '11842'
11839 -11841 11842 0
-11842 11841 0
-11842 -11839 0
c Var 'aux456' order represents '13' with '11843'
-11841 11843 0
c Var 'aux456' direct represents '13' with '11844'
11841 -11843 11844 0
-11844 11843 0
-11844 -11841 0
c Var 'aux456' order represents '14' with '11845'
-11843 11845 0
c Var 'aux456' direct represents '14' with '11846'
11843 -11845 11846 0
-11846 11845 0
-11846 -11843 0
c Var 'aux456' order represents '15' with '11847'
-11845 11847 0
c Var 'aux456' direct represents '15' with '11848'
11845 -11847 11848 0
-11848 11847 0
-11848 -11845 0
c Var 'aux456' order represents '16' with '11849'
-11847 11849 0
c Var 'aux456' direct represents '16' with '11850'
11847 -11849 11850 0
-11850 11849 0
-11850 -11847 0
c Var 'aux456' direct represents '17' with '-11849'
11818 11820 11822 11824 11826 11828 11830 11832 11834 11836 11838 11840 11842 11844 11846 11848 11850 -11849 0
c Encoding variable: aux457 with domain: int(0..18) (representing constraint (aux124 + aux117))
c Both direct and order encoding.
c Var 'aux457' order represents '0' with '11851'
c Var 'aux457' direct represents '0' with '11851'
c Var 'aux457' order represents '1' with '11852'
-11851 11852 0
c Var 'aux457' direct represents '1' with '11853'
11851 -11852 11853 0
-11853 11852 0
-11853 -11851 0
c Var 'aux457' order represents '2' with '11854'
-11852 11854 0
c Var 'aux457' direct represents '2' with '11855'
11852 -11854 11855 0
-11855 11854 0
-11855 -11852 0
c Var 'aux457' order represents '3' with '11856'
-11854 11856 0
c Var 'aux457' direct represents '3' with '11857'
11854 -11856 11857 0
-11857 11856 0
-11857 -11854 0
c Var 'aux457' order represents '4' with '11858'
-11856 11858 0
c Var 'aux457' direct represents '4' with '11859'
11856 -11858 11859 0
-11859 11858 0
-11859 -11856 0
c Var 'aux457' order represents '5' with '11860'
-11858 11860 0
c Var 'aux457' direct represents '5' with '11861'
11858 -11860 11861 0
-11861 11860 0
-11861 -11858 0
c Var 'aux457' order represents '6' with '11862'
-11860 11862 0
c Var 'aux457' direct represents '6' with '11863'
11860 -11862 11863 0
-11863 11862 0
-11863 -11860 0
c Var 'aux457' order represents '7' with '11864'
-11862 11864 0
c Var 'aux457' direct represents '7' with '11865'
11862 -11864 11865 0
-11865 11864 0
-11865 -11862 0
c Var 'aux457' order represents '8' with '11866'
-11864 11866 0
c Var 'aux457' direct represents '8' with '11867'
11864 -11866 11867 0
-11867 11866 0
-11867 -11864 0
c Var 'aux457' order represents '9' with '11868'
-11866 11868 0
c Var 'aux457' direct represents '9' with '11869'
11866 -11868 11869 0
-11869 11868 0
-11869 -11866 0
c Var 'aux457' order represents '10' with '11870'
-11868 11870 0
c Var 'aux457' direct represents '10' with '11871'
11868 -11870 11871 0
-11871 11870 0
-11871 -11868 0
c Var 'aux457' order represents '11' with '11872'
-11870 11872 0
c Var 'aux457' direct represents '11' with '11873'
11870 -11872 11873 0
-11873 11872 0
-11873 -11870 0
c Var 'aux457' order represents '12' with '11874'
-11872 11874 0
c Var 'aux457' direct represents '12' with '11875'
11872 -11874 11875 0
-11875 11874 0
-11875 -11872 0
c Var 'aux457' order represents '13' with '11876'
-11874 11876 0
c Var 'aux457' direct represents '13' with '11877'
11874 -11876 11877 0
-11877 11876 0
-11877 -11874 0
c Var 'aux457' order represents '14' with '11878'
-11876 11878 0
c Var 'aux457' direct represents '14' with '11879'
11876 -11878 11879 0
-11879 11878 0
-11879 -11876 0
c Var 'aux457' order represents '15' with '11880'
-11878 11880 0
c Var 'aux457' direct represents '15' with '11881'
11878 -11880 11881 0
-11881 11880 0
-11881 -11878 0
c Var 'aux457' order represents '16' with '11882'
-11880 11882 0
c Var 'aux457' direct represents '16' with '11883'
11880 -11882 11883 0
-11883 11882 0
-11883 -11880 0
c Var 'aux457' order represents '17' with '11884'
-11882 11884 0
c Var 'aux457' direct represents '17' with '11885'
11882 -11884 11885 0
-11885 11884 0
-11885 -11882 0
c Var 'aux457' direct represents '18' with '-11884'
11851 11853 11855 11857 11859 11861 11863 11865 11867 11869 11871 11873 11875 11877 11879 11881 11883 11885 -11884 0
c Encoding variable: aux458 with domain: int(0..18) (representing constraint (aux123 + aux118))
c Both direct and order encoding.
c Var 'aux458' order represents '0' with '11886'
c Var 'aux458' direct represents '0' with '11886'
c Var 'aux458' order represents '1' with '11887'
-11886 11887 0
c Var 'aux458' direct represents '1' with '11888'
11886 -11887 11888 0
-11888 11887 0
-11888 -11886 0
c Var 'aux458' order represents '2' with '11889'
-11887 11889 0
c Var 'aux458' direct represents '2' with '11890'
11887 -11889 11890 0
-11890 11889 0
-11890 -11887 0
c Var 'aux458' order represents '3' with '11891'
-11889 11891 0
c Var 'aux458' direct represents '3' with '11892'
11889 -11891 11892 0
-11892 11891 0
-11892 -11889 0
c Var 'aux458' order represents '4' with '11893'
-11891 11893 0
c Var 'aux458' direct represents '4' with '11894'
11891 -11893 11894 0
-11894 11893 0
-11894 -11891 0
c Var 'aux458' order represents '5' with '11895'
-11893 11895 0
c Var 'aux458' direct represents '5' with '11896'
11893 -11895 11896 0
-11896 11895 0
-11896 -11893 0
c Var 'aux458' order represents '6' with '11897'
-11895 11897 0
c Var 'aux458' direct represents '6' with '11898'
11895 -11897 11898 0
-11898 11897 0
-11898 -11895 0
c Var 'aux458' order represents '7' with '11899'
-11897 11899 0
c Var 'aux458' direct represents '7' with '11900'
11897 -11899 11900 0
-11900 11899 0
-11900 -11897 0
c Var 'aux458' order represents '8' with '11901'
-11899 11901 0
c Var 'aux458' direct represents '8' with '11902'
11899 -11901 11902 0
-11902 11901 0
-11902 -11899 0
c Var 'aux458' order represents '9' with '11903'
-11901 11903 0
c Var 'aux458' direct represents '9' with '11904'
11901 -11903 11904 0
-11904 11903 0
-11904 -11901 0
c Var 'aux458' order represents '10' with '11905'
-11903 11905 0
c Var 'aux458' direct represents '10' with '11906'
11903 -11905 11906 0
-11906 11905 0
-11906 -11903 0
c Var 'aux458' order represents '11' with '11907'
-11905 11907 0
c Var 'aux458' direct represents '11' with '11908'
11905 -11907 11908 0
-11908 11907 0
-11908 -11905 0
c Var 'aux458' order represents '12' with '11909'
-11907 11909 0
c Var 'aux458' direct represents '12' with '11910'
11907 -11909 11910 0
-11910 11909 0
-11910 -11907 0
c Var 'aux458' order represents '13' with '11911'
-11909 11911 0
c Var 'aux458' direct represents '13' with '11912'
11909 -11911 11912 0
-11912 11911 0
-11912 -11909 0
c Var 'aux458' order represents '14' with '11913'
-11911 11913 0
c Var 'aux458' direct represents '14' with '11914'
11911 -11913 11914 0
-11914 11913 0
-11914 -11911 0
c Var 'aux458' order represents '15' with '11915'
-11913 11915 0
c Var 'aux458' direct represents '15' with '11916'
11913 -11915 11916 0
-11916 11915 0
-11916 -11913 0
c Var 'aux458' order represents '16' with '11917'
-11915 11917 0
c Var 'aux458' direct represents '16' with '11918'
11915 -11917 11918 0
-11918 11917 0
-11918 -11915 0
c Var 'aux458' order represents '17' with '11919'
-11917 11919 0
c Var 'aux458' direct represents '17' with '11920'
11917 -11919 11920 0
-11920 11919 0
-11920 -11917 0
c Var 'aux458' direct represents '18' with '-11919'
11886 11888 11890 11892 11894 11896 11898 11900 11902 11904 11906 11908 11910 11912 11914 11916 11918 11920 -11919 0
c Encoding variable: aux459 with domain: int(0..18) (representing constraint (aux122 + aux121))
c Both direct and order encoding.
c Var 'aux459' order represents '0' with '11921'
c Var 'aux459' direct represents '0' with '11921'
c Var 'aux459' order represents '1' with '11922'
-11921 11922 0
c Var 'aux459' direct represents '1' with '11923'
11921 -11922 11923 0
-11923 11922 0
-11923 -11921 0
c Var 'aux459' order represents '2' with '11924'
-11922 11924 0
c Var 'aux459' direct represents '2' with '11925'
11922 -11924 11925 0
-11925 11924 0
-11925 -11922 0
c Var 'aux459' order represents '3' with '11926'
-11924 11926 0
c Var 'aux459' direct represents '3' with '11927'
11924 -11926 11927 0
-11927 11926 0
-11927 -11924 0
c Var 'aux459' order represents '4' with '11928'
-11926 11928 0
c Var 'aux459' direct represents '4' with '11929'
11926 -11928 11929 0
-11929 11928 0
-11929 -11926 0
c Var 'aux459' order represents '5' with '11930'
-11928 11930 0
c Var 'aux459' direct represents '5' with '11931'
11928 -11930 11931 0
-11931 11930 0
-11931 -11928 0
c Var 'aux459' order represents '6' with '11932'
-11930 11932 0
c Var 'aux459' direct represents '6' with '11933'
11930 -11932 11933 0
-11933 11932 0
-11933 -11930 0
c Var 'aux459' order represents '7' with '11934'
-11932 11934 0
c Var 'aux459' direct represents '7' with '11935'
11932 -11934 11935 0
-11935 11934 0
-11935 -11932 0
c Var 'aux459' order represents '8' with '11936'
-11934 11936 0
c Var 'aux459' direct represents '8' with '11937'
11934 -11936 11937 0
-11937 11936 0
-11937 -11934 0
c Var 'aux459' order represents '9' with '11938'
-11936 11938 0
c Var 'aux459' direct represents '9' with '11939'
11936 -11938 11939 0
-11939 11938 0
-11939 -11936 0
c Var 'aux459' order represents '10' with '11940'
-11938 11940 0
c Var 'aux459' direct represents '10' with '11941'
11938 -11940 11941 0
-11941 11940 0
-11941 -11938 0
c Var 'aux459' order represents '11' with '11942'
-11940 11942 0
c Var 'aux459' direct represents '11' with '11943'
11940 -11942 11943 0
-11943 11942 0
-11943 -11940 0
c Var 'aux459' order represents '12' with '11944'
-11942 11944 0
c Var 'aux459' direct represents '12' with '11945'
11942 -11944 11945 0
-11945 11944 0
-11945 -11942 0
c Var 'aux459' order represents '13' with '11946'
-11944 11946 0
c Var 'aux459' direct represents '13' with '11947'
11944 -11946 11947 0
-11947 11946 0
-11947 -11944 0
c Var 'aux459' order represents '14' with '11948'
-11946 11948 0
c Var 'aux459' direct represents '14' with '11949'
11946 -11948 11949 0
-11949 11948 0
-11949 -11946 0
c Var 'aux459' order represents '15' with '11950'
-11948 11950 0
c Var 'aux459' direct represents '15' with '11951'
11948 -11950 11951 0
-11951 11950 0
-11951 -11948 0
c Var 'aux459' order represents '16' with '11952'
-11950 11952 0
c Var 'aux459' direct represents '16' with '11953'
11950 -11952 11953 0
-11953 11952 0
-11953 -11950 0
c Var 'aux459' order represents '17' with '11954'
-11952 11954 0
c Var 'aux459' direct represents '17' with '11955'
11952 -11954 11955 0
-11955 11954 0
-11955 -11952 0
c Var 'aux459' direct represents '18' with '-11954'
11921 11923 11925 11927 11929 11931 11933 11935 11937 11939 11941 11943 11945 11947 11949 11951 11953 11955 -11954 0
c Encoding variable: aux460 with domain: int(0..26) (representing constraint (aux119 + aux456))
c Both direct and order encoding.
c Var 'aux460' order represents '0' with '11956'
c Var 'aux460' direct represents '0' with '11956'
c Var 'aux460' order represents '1' with '11957'
-11956 11957 0
c Var 'aux460' direct represents '1' with '11958'
11956 -11957 11958 0
-11958 11957 0
-11958 -11956 0
c Var 'aux460' order represents '2' with '11959'
-11957 11959 0
c Var 'aux460' direct represents '2' with '11960'
11957 -11959 11960 0
-11960 11959 0
-11960 -11957 0
c Var 'aux460' order represents '3' with '11961'
-11959 11961 0
c Var 'aux460' direct represents '3' with '11962'
11959 -11961 11962 0
-11962 11961 0
-11962 -11959 0
c Var 'aux460' order represents '4' with '11963'
-11961 11963 0
c Var 'aux460' direct represents '4' with '11964'
11961 -11963 11964 0
-11964 11963 0
-11964 -11961 0
c Var 'aux460' order represents '5' with '11965'
-11963 11965 0
c Var 'aux460' direct represents '5' with '11966'
11963 -11965 11966 0
-11966 11965 0
-11966 -11963 0
c Var 'aux460' order represents '6' with '11967'
-11965 11967 0
c Var 'aux460' direct represents '6' with '11968'
11965 -11967 11968 0
-11968 11967 0
-11968 -11965 0
c Var 'aux460' order represents '7' with '11969'
-11967 11969 0
c Var 'aux460' direct represents '7' with '11970'
11967 -11969 11970 0
-11970 11969 0
-11970 -11967 0
c Var 'aux460' order represents '8' with '11971'
-11969 11971 0
c Var 'aux460' direct represents '8' with '11972'
11969 -11971 11972 0
-11972 11971 0
-11972 -11969 0
c Var 'aux460' order represents '9' with '11973'
-11971 11973 0
c Var 'aux460' direct represents '9' with '11974'
11971 -11973 11974 0
-11974 11973 0
-11974 -11971 0
c Var 'aux460' order represents '10' with '11975'
-11973 11975 0
c Var 'aux460' direct represents '10' with '11976'
11973 -11975 11976 0
-11976 11975 0
-11976 -11973 0
c Var 'aux460' order represents '11' with '11977'
-11975 11977 0
c Var 'aux460' direct represents '11' with '11978'
11975 -11977 11978 0
-11978 11977 0
-11978 -11975 0
c Var 'aux460' order represents '12' with '11979'
-11977 11979 0
c Var 'aux460' direct represents '12' with '11980'
11977 -11979 11980 0
-11980 11979 0
-11980 -11977 0
c Var 'aux460' order represents '13' with '11981'
-11979 11981 0
c Var 'aux460' direct represents '13' with '11982'
11979 -11981 11982 0
-11982 11981 0
-11982 -11979 0
c Var 'aux460' order represents '14' with '11983'
-11981 11983 0
c Var 'aux460' direct represents '14' with '11984'
11981 -11983 11984 0
-11984 11983 0
-11984 -11981 0
c Var 'aux460' order represents '15' with '11985'
-11983 11985 0
c Var 'aux460' direct represents '15' with '11986'
11983 -11985 11986 0
-11986 11985 0
-11986 -11983 0
c Var 'aux460' order represents '16' with '11987'
-11985 11987 0
c Var 'aux460' direct represents '16' with '11988'
11985 -11987 11988 0
-11988 11987 0
-11988 -11985 0
c Var 'aux460' order represents '17' with '11989'
-11987 11989 0
c Var 'aux460' direct represents '17' with '11990'
11987 -11989 11990 0
-11990 11989 0
-11990 -11987 0
c Var 'aux460' order represents '18' with '11991'
-11989 11991 0
c Var 'aux460' direct represents '18' with '11992'
11989 -11991 11992 0
-11992 11991 0
-11992 -11989 0
c Var 'aux460' order represents '19' with '11993'
-11991 11993 0
c Var 'aux460' direct represents '19' with '11994'
11991 -11993 11994 0
-11994 11993 0
-11994 -11991 0
c Var 'aux460' order represents '20' with '11995'
-11993 11995 0
c Var 'aux460' direct represents '20' with '11996'
11993 -11995 11996 0
-11996 11995 0
-11996 -11993 0
c Var 'aux460' order represents '21' with '11997'
-11995 11997 0
c Var 'aux460' direct represents '21' with '11998'
11995 -11997 11998 0
-11998 11997 0
-11998 -11995 0
c Var 'aux460' order represents '22' with '11999'
-11997 11999 0
c Var 'aux460' direct represents '22' with '12000'
11997 -11999 12000 0
-12000 11999 0
-12000 -11997 0
c Var 'aux460' order represents '23' with '12001'
-11999 12001 0
c Var 'aux460' direct represents '23' with '12002'
11999 -12001 12002 0
-12002 12001 0
-12002 -11999 0
c Var 'aux460' order represents '24' with '12003'
-12001 12003 0
c Var 'aux460' direct represents '24' with '12004'
12001 -12003 12004 0
-12004 12003 0
-12004 -12001 0
c Var 'aux460' order represents '25' with '12005'
-12003 12005 0
c Var 'aux460' direct represents '25' with '12006'
12003 -12005 12006 0
-12006 12005 0
-12006 -12003 0
c Var 'aux460' direct represents '26' with '-12005'
11956 11958 11960 11962 11964 11966 11968 11970 11972 11974 11976 11978 11980 11982 11984 11986 11988 11990 11992 11994 11996 11998 12000 12002 12004 12006 -12005 0
c Encoding variable: aux461 with domain: int(0..36) (representing constraint (aux458 + aux459))
c Both direct and order encoding.
c Var 'aux461' order represents '0' with '12007'
c Var 'aux461' direct represents '0' with '12007'
c Var 'aux461' order represents '1' with '12008'
-12007 12008 0
c Var 'aux461' direct represents '1' with '12009'
12007 -12008 12009 0
-12009 12008 0
-12009 -12007 0
c Var 'aux461' order represents '2' with '12010'
-12008 12010 0
c Var 'aux461' direct represents '2' with '12011'
12008 -12010 12011 0
-12011 12010 0
-12011 -12008 0
c Var 'aux461' order represents '3' with '12012'
-12010 12012 0
c Var 'aux461' direct represents '3' with '12013'
12010 -12012 12013 0
-12013 12012 0
-12013 -12010 0
c Var 'aux461' order represents '4' with '12014'
-12012 12014 0
c Var 'aux461' direct represents '4' with '12015'
12012 -12014 12015 0
-12015 12014 0
-12015 -12012 0
c Var 'aux461' order represents '5' with '12016'
-12014 12016 0
c Var 'aux461' direct represents '5' with '12017'
12014 -12016 12017 0
-12017 12016 0
-12017 -12014 0
c Var 'aux461' order represents '6' with '12018'
-12016 12018 0
c Var 'aux461' direct represents '6' with '12019'
12016 -12018 12019 0
-12019 12018 0
-12019 -12016 0
c Var 'aux461' order represents '7' with '12020'
-12018 12020 0
c Var 'aux461' direct represents '7' with '12021'
12018 -12020 12021 0
-12021 12020 0
-12021 -12018 0
c Var 'aux461' order represents '8' with '12022'
-12020 12022 0
c Var 'aux461' direct represents '8' with '12023'
12020 -12022 12023 0
-12023 12022 0
-12023 -12020 0
c Var 'aux461' order represents '9' with '12024'
-12022 12024 0
c Var 'aux461' direct represents '9' with '12025'
12022 -12024 12025 0
-12025 12024 0
-12025 -12022 0
c Var 'aux461' order represents '10' with '12026'
-12024 12026 0
c Var 'aux461' direct represents '10' with '12027'
12024 -12026 12027 0
-12027 12026 0
-12027 -12024 0
c Var 'aux461' order represents '11' with '12028'
-12026 12028 0
c Var 'aux461' direct represents '11' with '12029'
12026 -12028 12029 0
-12029 12028 0
-12029 -12026 0
c Var 'aux461' order represents '12' with '12030'
-12028 12030 0
c Var 'aux461' direct represents '12' with '12031'
12028 -12030 12031 0
-12031 12030 0
-12031 -12028 0
c Var 'aux461' order represents '13' with '12032'
-12030 12032 0
c Var 'aux461' direct represents '13' with '12033'
12030 -12032 12033 0
-12033 12032 0
-12033 -12030 0
c Var 'aux461' order represents '14' with '12034'
-12032 12034 0
c Var 'aux461' direct represents '14' with '12035'
12032 -12034 12035 0
-12035 12034 0
-12035 -12032 0
c Var 'aux461' order represents '15' with '12036'
-12034 12036 0
c Var 'aux461' direct represents '15' with '12037'
12034 -12036 12037 0
-12037 12036 0
-12037 -12034 0
c Var 'aux461' order represents '16' with '12038'
-12036 12038 0
c Var 'aux461' direct represents '16' with '12039'
12036 -12038 12039 0
-12039 12038 0
-12039 -12036 0
c Var 'aux461' order represents '17' with '12040'
-12038 12040 0
c Var 'aux461' direct represents '17' with '12041'
12038 -12040 12041 0
-12041 12040 0
-12041 -12038 0
c Var 'aux461' order represents '18' with '12042'
-12040 12042 0
c Var 'aux461' direct represents '18' with '12043'
12040 -12042 12043 0
-12043 12042 0
-12043 -12040 0
c Var 'aux461' order represents '19' with '12044'
-12042 12044 0
c Var 'aux461' direct represents '19' with '12045'
12042 -12044 12045 0
-12045 12044 0
-12045 -12042 0
c Var 'aux461' order represents '20' with '12046'
-12044 12046 0
c Var 'aux461' direct represents '20' with '12047'
12044 -12046 12047 0
-12047 12046 0
-12047 -12044 0
c Var 'aux461' order represents '21' with '12048'
-12046 12048 0
c Var 'aux461' direct represents '21' with '12049'
12046 -12048 12049 0
-12049 12048 0
-12049 -12046 0
c Var 'aux461' order represents '22' with '12050'
-12048 12050 0
c Var 'aux461' direct represents '22' with '12051'
12048 -12050 12051 0
-12051 12050 0
-12051 -12048 0
c Var 'aux461' order represents '23' with '12052'
-12050 12052 0
c Var 'aux461' direct represents '23' with '12053'
12050 -12052 12053 0
-12053 12052 0
-12053 -12050 0
c Var 'aux461' order represents '24' with '12054'
-12052 12054 0
c Var 'aux461' direct represents '24' with '12055'
12052 -12054 12055 0
-12055 12054 0
-12055 -12052 0
c Var 'aux461' order represents '25' with '12056'
-12054 12056 0
c Var 'aux461' direct represents '25' with '12057'
12054 -12056 12057 0
-12057 12056 0
-12057 -12054 0
c Var 'aux461' order represents '26' with '12058'
-12056 12058 0
c Var 'aux461' direct represents '26' with '12059'
12056 -12058 12059 0
-12059 12058 0
-12059 -12056 0
c Var 'aux461' order represents '27' with '12060'
-12058 12060 0
c Var 'aux461' direct represents '27' with '12061'
12058 -12060 12061 0
-12061 12060 0
-12061 -12058 0
c Var 'aux461' order represents '28' with '12062'
-12060 12062 0
c Var 'aux461' direct represents '28' with '12063'
12060 -12062 12063 0
-12063 12062 0
-12063 -12060 0
c Var 'aux461' order represents '29' with '12064'
-12062 12064 0
c Var 'aux461' direct represents '29' with '12065'
12062 -12064 12065 0
-12065 12064 0
-12065 -12062 0
c Var 'aux461' order represents '30' with '12066'
-12064 12066 0
c Var 'aux461' direct represents '30' with '12067'
12064 -12066 12067 0
-12067 12066 0
-12067 -12064 0
c Var 'aux461' order represents '31' with '12068'
-12066 12068 0
c Var 'aux461' direct represents '31' with '12069'
12066 -12068 12069 0
-12069 12068 0
-12069 -12066 0
c Var 'aux461' order represents '32' with '12070'
-12068 12070 0
c Var 'aux461' direct represents '32' with '12071'
12068 -12070 12071 0
-12071 12070 0
-12071 -12068 0
c Var 'aux461' order represents '33' with '12072'
-12070 12072 0
c Var 'aux461' direct represents '33' with '12073'
12070 -12072 12073 0
-12073 12072 0
-12073 -12070 0
c Var 'aux461' order represents '34' with '12074'
-12072 12074 0
c Var 'aux461' direct represents '34' with '12075'
12072 -12074 12075 0
-12075 12074 0
-12075 -12072 0
c Var 'aux461' order represents '35' with '12076'
-12074 12076 0
c Var 'aux461' direct represents '35' with '12077'
12074 -12076 12077 0
-12077 12076 0
-12077 -12074 0
c Var 'aux461' direct represents '36' with '-12076'
12007 12009 12011 12013 12015 12017 12019 12021 12023 12025 12027 12029 12031 12033 12035 12037 12039 12041 12043 12045 12047 12049 12051 12053 12055 12057 12059 12061 12063 12065 12067 12069 12071 12073 12075 12077 -12076 0
c Encoding variable: aux462 with domain: int(0..17) (representing constraint (shift(variant_fields_00004_00007_00001, -1) + aux129))
c Both direct and order encoding.
c Var 'aux462' order represents '0' with '12078'
c Var 'aux462' direct represents '0' with '12078'
c Var 'aux462' order represents '1' with '12079'
-12078 12079 0
c Var 'aux462' direct represents '1' with '12080'
12078 -12079 12080 0
-12080 12079 0
-12080 -12078 0
c Var 'aux462' order represents '2' with '12081'
-12079 12081 0
c Var 'aux462' direct represents '2' with '12082'
12079 -12081 12082 0
-12082 12081 0
-12082 -12079 0
c Var 'aux462' order represents '3' with '12083'
-12081 12083 0
c Var 'aux462' direct represents '3' with '12084'
12081 -12083 12084 0
-12084 12083 0
-12084 -12081 0
c Var 'aux462' order represents '4' with '12085'
-12083 12085 0
c Var 'aux462' direct represents '4' with '12086'
12083 -12085 12086 0
-12086 12085 0
-12086 -12083 0
c Var 'aux462' order represents '5' with '12087'
-12085 12087 0
c Var 'aux462' direct represents '5' with '12088'
12085 -12087 12088 0
-12088 12087 0
-12088 -12085 0
c Var 'aux462' order represents '6' with '12089'
-12087 12089 0
c Var 'aux462' direct represents '6' with '12090'
12087 -12089 12090 0
-12090 12089 0
-12090 -12087 0
c Var 'aux462' order represents '7' with '12091'
-12089 12091 0
c Var 'aux462' direct represents '7' with '12092'
12089 -12091 12092 0
-12092 12091 0
-12092 -12089 0
c Var 'aux462' order represents '8' with '12093'
-12091 12093 0
c Var 'aux462' direct represents '8' with '12094'
12091 -12093 12094 0
-12094 12093 0
-12094 -12091 0
c Var 'aux462' order represents '9' with '12095'
-12093 12095 0
c Var 'aux462' direct represents '9' with '12096'
12093 -12095 12096 0
-12096 12095 0
-12096 -12093 0
c Var 'aux462' order represents '10' with '12097'
-12095 12097 0
c Var 'aux462' direct represents '10' with '12098'
12095 -12097 12098 0
-12098 12097 0
-12098 -12095 0
c Var 'aux462' order represents '11' with '12099'
-12097 12099 0
c Var 'aux462' direct represents '11' with '12100'
12097 -12099 12100 0
-12100 12099 0
-12100 -12097 0
c Var 'aux462' order represents '12' with '12101'
-12099 12101 0
c Var 'aux462' direct represents '12' with '12102'
12099 -12101 12102 0
-12102 12101 0
-12102 -12099 0
c Var 'aux462' order represents '13' with '12103'
-12101 12103 0
c Var 'aux462' direct represents '13' with '12104'
12101 -12103 12104 0
-12104 12103 0
-12104 -12101 0
c Var 'aux462' order represents '14' with '12105'
-12103 12105 0
c Var 'aux462' direct represents '14' with '12106'
12103 -12105 12106 0
-12106 12105 0
-12106 -12103 0
c Var 'aux462' order represents '15' with '12107'
-12105 12107 0
c Var 'aux462' direct represents '15' with '12108'
12105 -12107 12108 0
-12108 12107 0
-12108 -12105 0
c Var 'aux462' order represents '16' with '12109'
-12107 12109 0
c Var 'aux462' direct represents '16' with '12110'
12107 -12109 12110 0
-12110 12109 0
-12110 -12107 0
c Var 'aux462' direct represents '17' with '-12109'
12078 12080 12082 12084 12086 12088 12090 12092 12094 12096 12098 12100 12102 12104 12106 12108 12110 -12109 0
c Encoding variable: aux463 with domain: int(0..18) (representing constraint (aux133 + aux126))
c Both direct and order encoding.
c Var 'aux463' order represents '0' with '12111'
c Var 'aux463' direct represents '0' with '12111'
c Var 'aux463' order represents '1' with '12112'
-12111 12112 0
c Var 'aux463' direct represents '1' with '12113'
12111 -12112 12113 0
-12113 12112 0
-12113 -12111 0
c Var 'aux463' order represents '2' with '12114'
-12112 12114 0
c Var 'aux463' direct represents '2' with '12115'
12112 -12114 12115 0
-12115 12114 0
-12115 -12112 0
c Var 'aux463' order represents '3' with '12116'
-12114 12116 0
c Var 'aux463' direct represents '3' with '12117'
12114 -12116 12117 0
-12117 12116 0
-12117 -12114 0
c Var 'aux463' order represents '4' with '12118'
-12116 12118 0
c Var 'aux463' direct represents '4' with '12119'
12116 -12118 12119 0
-12119 12118 0
-12119 -12116 0
c Var 'aux463' order represents '5' with '12120'
-12118 12120 0
c Var 'aux463' direct represents '5' with '12121'
12118 -12120 12121 0
-12121 12120 0
-12121 -12118 0
c Var 'aux463' order represents '6' with '12122'
-12120 12122 0
c Var 'aux463' direct represents '6' with '12123'
12120 -12122 12123 0
-12123 12122 0
-12123 -12120 0
c Var 'aux463' order represents '7' with '12124'
-12122 12124 0
c Var 'aux463' direct represents '7' with '12125'
12122 -12124 12125 0
-12125 12124 0
-12125 -12122 0
c Var 'aux463' order represents '8' with '12126'
-12124 12126 0
c Var 'aux463' direct represents '8' with '12127'
12124 -12126 12127 0
-12127 12126 0
-12127 -12124 0
c Var 'aux463' order represents '9' with '12128'
-12126 12128 0
c Var 'aux463' direct represents '9' with '12129'
12126 -12128 12129 0
-12129 12128 0
-12129 -12126 0
c Var 'aux463' order represents '10' with '12130'
-12128 12130 0
c Var 'aux463' direct represents '10' with '12131'
12128 -12130 12131 0
-12131 12130 0
-12131 -12128 0
c Var 'aux463' order represents '11' with '12132'
-12130 12132 0
c Var 'aux463' direct represents '11' with '12133'
12130 -12132 12133 0
-12133 12132 0
-12133 -12130 0
c Var 'aux463' order represents '12' with '12134'
-12132 12134 0
c Var 'aux463' direct represents '12' with '12135'
12132 -12134 12135 0
-12135 12134 0
-12135 -12132 0
c Var 'aux463' order represents '13' with '12136'
-12134 12136 0
c Var 'aux463' direct represents '13' with '12137'
12134 -12136 12137 0
-12137 12136 0
-12137 -12134 0
c Var 'aux463' order represents '14' with '12138'
-12136 12138 0
c Var 'aux463' direct represents '14' with '12139'
12136 -12138 12139 0
-12139 12138 0
-12139 -12136 0
c Var 'aux463' order represents '15' with '12140'
-12138 12140 0
c Var 'aux463' direct represents '15' with '12141'
12138 -12140 12141 0
-12141 12140 0
-12141 -12138 0
c Var 'aux463' order represents '16' with '12142'
-12140 12142 0
c Var 'aux463' direct represents '16' with '12143'
12140 -12142 12143 0
-12143 12142 0
-12143 -12140 0
c Var 'aux463' order represents '17' with '12144'
-12142 12144 0
c Var 'aux463' direct represents '17' with '12145'
12142 -12144 12145 0
-12145 12144 0
-12145 -12142 0
c Var 'aux463' direct represents '18' with '-12144'
12111 12113 12115 12117 12119 12121 12123 12125 12127 12129 12131 12133 12135 12137 12139 12141 12143 12145 -12144 0
c Encoding variable: aux464 with domain: int(0..18) (representing constraint (aux132 + aux127))
c Both direct and order encoding.
c Var 'aux464' order represents '0' with '12146'
c Var 'aux464' direct represents '0' with '12146'
c Var 'aux464' order represents '1' with '12147'
-12146 12147 0
c Var 'aux464' direct represents '1' with '12148'
12146 -12147 12148 0
-12148 12147 0
-12148 -12146 0
c Var 'aux464' order represents '2' with '12149'
-12147 12149 0
c Var 'aux464' direct represents '2' with '12150'
12147 -12149 12150 0
-12150 12149 0
-12150 -12147 0
c Var 'aux464' order represents '3' with '12151'
-12149 12151 0
c Var 'aux464' direct represents '3' with '12152'
12149 -12151 12152 0
-12152 12151 0
-12152 -12149 0
c Var 'aux464' order represents '4' with '12153'
-12151 12153 0
c Var 'aux464' direct represents '4' with '12154'
12151 -12153 12154 0
-12154 12153 0
-12154 -12151 0
c Var 'aux464' order represents '5' with '12155'
-12153 12155 0
c Var 'aux464' direct represents '5' with '12156'
12153 -12155 12156 0
-12156 12155 0
-12156 -12153 0
c Var 'aux464' order represents '6' with '12157'
-12155 12157 0
c Var 'aux464' direct represents '6' with '12158'
12155 -12157 12158 0
-12158 12157 0
-12158 -12155 0
c Var 'aux464' order represents '7' with '12159'
-12157 12159 0
c Var 'aux464' direct represents '7' with '12160'
12157 -12159 12160 0
-12160 12159 0
-12160 -12157 0
c Var 'aux464' order represents '8' with '12161'
-12159 12161 0
c Var 'aux464' direct represents '8' with '12162'
12159 -12161 12162 0
-12162 12161 0
-12162 -12159 0
c Var 'aux464' order represents '9' with '12163'
-12161 12163 0
c Var 'aux464' direct represents '9' with '12164'
12161 -12163 12164 0
-12164 12163 0
-12164 -12161 0
c Var 'aux464' order represents '10' with '12165'
-12163 12165 0
c Var 'aux464' direct represents '10' with '12166'
12163 -12165 12166 0
-12166 12165 0
-12166 -12163 0
c Var 'aux464' order represents '11' with '12167'
-12165 12167 0
c Var 'aux464' direct represents '11' with '12168'
12165 -12167 12168 0
-12168 12167 0
-12168 -12165 0
c Var 'aux464' order represents '12' with '12169'
-12167 12169 0
c Var 'aux464' direct represents '12' with '12170'
12167 -12169 12170 0
-12170 12169 0
-12170 -12167 0
c Var 'aux464' order represents '13' with '12171'
-12169 12171 0
c Var 'aux464' direct represents '13' with '12172'
12169 -12171 12172 0
-12172 12171 0
-12172 -12169 0
c Var 'aux464' order represents '14' with '12173'
-12171 12173 0
c Var 'aux464' direct represents '14' with '12174'
12171 -12173 12174 0
-12174 12173 0
-12174 -12171 0
c Var 'aux464' order represents '15' with '12175'
-12173 12175 0
c Var 'aux464' direct represents '15' with '12176'
12173 -12175 12176 0
-12176 12175 0
-12176 -12173 0
c Var 'aux464' order represents '16' with '12177'
-12175 12177 0
c Var 'aux464' direct represents '16' with '12178'
12175 -12177 12178 0
-12178 12177 0
-12178 -12175 0
c Var 'aux464' order represents '17' with '12179'
-12177 12179 0
c Var 'aux464' direct represents '17' with '12180'
12177 -12179 12180 0
-12180 12179 0
-12180 -12177 0
c Var 'aux464' direct represents '18' with '-12179'
12146 12148 12150 12152 12154 12156 12158 12160 12162 12164 12166 12168 12170 12172 12174 12176 12178 12180 -12179 0
c Encoding variable: aux465 with domain: int(0..18) (representing constraint (aux131 + aux130))
c Both direct and order encoding.
c Var 'aux465' order represents '0' with '12181'
c Var 'aux465' direct represents '0' with '12181'
c Var 'aux465' order represents '1' with '12182'
-12181 12182 0
c Var 'aux465' direct represents '1' with '12183'
12181 -12182 12183 0
-12183 12182 0
-12183 -12181 0
c Var 'aux465' order represents '2' with '12184'
-12182 12184 0
c Var 'aux465' direct represents '2' with '12185'
12182 -12184 12185 0
-12185 12184 0
-12185 -12182 0
c Var 'aux465' order represents '3' with '12186'
-12184 12186 0
c Var 'aux465' direct represents '3' with '12187'
12184 -12186 12187 0
-12187 12186 0
-12187 -12184 0
c Var 'aux465' order represents '4' with '12188'
-12186 12188 0
c Var 'aux465' direct represents '4' with '12189'
12186 -12188 12189 0
-12189 12188 0
-12189 -12186 0
c Var 'aux465' order represents '5' with '12190'
-12188 12190 0
c Var 'aux465' direct represents '5' with '12191'
12188 -12190 12191 0
-12191 12190 0
-12191 -12188 0
c Var 'aux465' order represents '6' with '12192'
-12190 12192 0
c Var 'aux465' direct represents '6' with '12193'
12190 -12192 12193 0
-12193 12192 0
-12193 -12190 0
c Var 'aux465' order represents '7' with '12194'
-12192 12194 0
c Var 'aux465' direct represents '7' with '12195'
12192 -12194 12195 0
-12195 12194 0
-12195 -12192 0
c Var 'aux465' order represents '8' with '12196'
-12194 12196 0
c Var 'aux465' direct represents '8' with '12197'
12194 -12196 12197 0
-12197 12196 0
-12197 -12194 0
c Var 'aux465' order represents '9' with '12198'
-12196 12198 0
c Var 'aux465' direct represents '9' with '12199'
12196 -12198 12199 0
-12199 12198 0
-12199 -12196 0
c Var 'aux465' order represents '10' with '12200'
-12198 12200 0
c Var 'aux465' direct represents '10' with '12201'
12198 -12200 12201 0
-12201 12200 0
-12201 -12198 0
c Var 'aux465' order represents '11' with '12202'
-12200 12202 0
c Var 'aux465' direct represents '11' with '12203'
12200 -12202 12203 0
-12203 12202 0
-12203 -12200 0
c Var 'aux465' order represents '12' with '12204'
-12202 12204 0
c Var 'aux465' direct represents '12' with '12205'
12202 -12204 12205 0
-12205 12204 0
-12205 -12202 0
c Var 'aux465' order represents '13' with '12206'
-12204 12206 0
c Var 'aux465' direct represents '13' with '12207'
12204 -12206 12207 0
-12207 12206 0
-12207 -12204 0
c Var 'aux465' order represents '14' with '12208'
-12206 12208 0
c Var 'aux465' direct represents '14' with '12209'
12206 -12208 12209 0
-12209 12208 0
-12209 -12206 0
c Var 'aux465' order represents '15' with '12210'
-12208 12210 0
c Var 'aux465' direct represents '15' with '12211'
12208 -12210 12211 0
-12211 12210 0
-12211 -12208 0
c Var 'aux465' order represents '16' with '12212'
-12210 12212 0
c Var 'aux465' direct represents '16' with '12213'
12210 -12212 12213 0
-12213 12212 0
-12213 -12210 0
c Var 'aux465' order represents '17' with '12214'
-12212 12214 0
c Var 'aux465' direct represents '17' with '12215'
12212 -12214 12215 0
-12215 12214 0
-12215 -12212 0
c Var 'aux465' direct represents '18' with '-12214'
12181 12183 12185 12187 12189 12191 12193 12195 12197 12199 12201 12203 12205 12207 12209 12211 12213 12215 -12214 0
c Encoding variable: aux466 with domain: int(0..26) (representing constraint (aux128 + aux462))
c Both direct and order encoding.
c Var 'aux466' order represents '0' with '12216'
c Var 'aux466' direct represents '0' with '12216'
c Var 'aux466' order represents '1' with '12217'
-12216 12217 0
c Var 'aux466' direct represents '1' with '12218'
12216 -12217 12218 0
-12218 12217 0
-12218 -12216 0
c Var 'aux466' order represents '2' with '12219'
-12217 12219 0
c Var 'aux466' direct represents '2' with '12220'
12217 -12219 12220 0
-12220 12219 0
-12220 -12217 0
c Var 'aux466' order represents '3' with '12221'
-12219 12221 0
c Var 'aux466' direct represents '3' with '12222'
12219 -12221 12222 0
-12222 12221 0
-12222 -12219 0
c Var 'aux466' order represents '4' with '12223'
-12221 12223 0
c Var 'aux466' direct represents '4' with '12224'
12221 -12223 12224 0
-12224 12223 0
-12224 -12221 0
c Var 'aux466' order represents '5' with '12225'
-12223 12225 0
c Var 'aux466' direct represents '5' with '12226'
12223 -12225 12226 0
-12226 12225 0
-12226 -12223 0
c Var 'aux466' order represents '6' with '12227'
-12225 12227 0
c Var 'aux466' direct represents '6' with '12228'
12225 -12227 12228 0
-12228 12227 0
-12228 -12225 0
c Var 'aux466' order represents '7' with '12229'
-12227 12229 0
c Var 'aux466' direct represents '7' with '12230'
12227 -12229 12230 0
-12230 12229 0
-12230 -12227 0
c Var 'aux466' order represents '8' with '12231'
-12229 12231 0
c Var 'aux466' direct represents '8' with '12232'
12229 -12231 12232 0
-12232 12231 0
-12232 -12229 0
c Var 'aux466' order represents '9' with '12233'
-12231 12233 0
c Var 'aux466' direct represents '9' with '12234'
12231 -12233 12234 0
-12234 12233 0
-12234 -12231 0
c Var 'aux466' order represents '10' with '12235'
-12233 12235 0
c Var 'aux466' direct represents '10' with '12236'
12233 -12235 12236 0
-12236 12235 0
-12236 -12233 0
c Var 'aux466' order represents '11' with '12237'
-12235 12237 0
c Var 'aux466' direct represents '11' with '12238'
12235 -12237 12238 0
-12238 12237 0
-12238 -12235 0
c Var 'aux466' order represents '12' with '12239'
-12237 12239 0
c Var 'aux466' direct represents '12' with '12240'
12237 -12239 12240 0
-12240 12239 0
-12240 -12237 0
c Var 'aux466' order represents '13' with '12241'
-12239 12241 0
c Var 'aux466' direct represents '13' with '12242'
12239 -12241 12242 0
-12242 12241 0
-12242 -12239 0
c Var 'aux466' order represents '14' with '12243'
-12241 12243 0
c Var 'aux466' direct represents '14' with '12244'
12241 -12243 12244 0
-12244 12243 0
-12244 -12241 0
c Var 'aux466' order represents '15' with '12245'
-12243 12245 0
c Var 'aux466' direct represents '15' with '12246'
12243 -12245 12246 0
-12246 12245 0
-12246 -12243 0
c Var 'aux466' order represents '16' with '12247'
-12245 12247 0
c Var 'aux466' direct represents '16' with '12248'
12245 -12247 12248 0
-12248 12247 0
-12248 -12245 0
c Var 'aux466' order represents '17' with '12249'
-12247 12249 0
c Var 'aux466' direct represents '17' with '12250'
12247 -12249 12250 0
-12250 12249 0
-12250 -12247 0
c Var 'aux466' order represents '18' with '12251'
-12249 12251 0
c Var 'aux466' direct represents '18' with '12252'
12249 -12251 12252 0
-12252 12251 0
-12252 -12249 0
c Var 'aux466' order represents '19' with '12253'
-12251 12253 0
c Var 'aux466' direct represents '19' with '12254'
12251 -12253 12254 0
-12254 12253 0
-12254 -12251 0
c Var 'aux466' order represents '20' with '12255'
-12253 12255 0
c Var 'aux466' direct represents '20' with '12256'
12253 -12255 12256 0
-12256 12255 0
-12256 -12253 0
c Var 'aux466' order represents '21' with '12257'
-12255 12257 0
c Var 'aux466' direct represents '21' with '12258'
12255 -12257 12258 0
-12258 12257 0
-12258 -12255 0
c Var 'aux466' order represents '22' with '12259'
-12257 12259 0
c Var 'aux466' direct represents '22' with '12260'
12257 -12259 12260 0
-12260 12259 0
-12260 -12257 0
c Var 'aux466' order represents '23' with '12261'
-12259 12261 0
c Var 'aux466' direct represents '23' with '12262'
12259 -12261 12262 0
-12262 12261 0
-12262 -12259 0
c Var 'aux466' order represents '24' with '12263'
-12261 12263 0
c Var 'aux466' direct represents '24' with '12264'
12261 -12263 12264 0
-12264 12263 0
-12264 -12261 0
c Var 'aux466' order represents '25' with '12265'
-12263 12265 0
c Var 'aux466' direct represents '25' with '12266'
12263 -12265 12266 0
-12266 12265 0
-12266 -12263 0
c Var 'aux466' direct represents '26' with '-12265'
12216 12218 12220 12222 12224 12226 12228 12230 12232 12234 12236 12238 12240 12242 12244 12246 12248 12250 12252 12254 12256 12258 12260 12262 12264 12266 -12265 0
c Encoding variable: aux467 with domain: int(0..36) (representing constraint (aux464 + aux465))
c Both direct and order encoding.
c Var 'aux467' order represents '0' with '12267'
c Var 'aux467' direct represents '0' with '12267'
c Var 'aux467' order represents '1' with '12268'
-12267 12268 0
c Var 'aux467' direct represents '1' with '12269'
12267 -12268 12269 0
-12269 12268 0
-12269 -12267 0
c Var 'aux467' order represents '2' with '12270'
-12268 12270 0
c Var 'aux467' direct represents '2' with '12271'
12268 -12270 12271 0
-12271 12270 0
-12271 -12268 0
c Var 'aux467' order represents '3' with '12272'
-12270 12272 0
c Var 'aux467' direct represents '3' with '12273'
12270 -12272 12273 0
-12273 12272 0
-12273 -12270 0
c Var 'aux467' order represents '4' with '12274'
-12272 12274 0
c Var 'aux467' direct represents '4' with '12275'
12272 -12274 12275 0
-12275 12274 0
-12275 -12272 0
c Var 'aux467' order represents '5' with '12276'
-12274 12276 0
c Var 'aux467' direct represents '5' with '12277'
12274 -12276 12277 0
-12277 12276 0
-12277 -12274 0
c Var 'aux467' order represents '6' with '12278'
-12276 12278 0
c Var 'aux467' direct represents '6' with '12279'
12276 -12278 12279 0
-12279 12278 0
-12279 -12276 0
c Var 'aux467' order represents '7' with '12280'
-12278 12280 0
c Var 'aux467' direct represents '7' with '12281'
12278 -12280 12281 0
-12281 12280 0
-12281 -12278 0
c Var 'aux467' order represents '8' with '12282'
-12280 12282 0
c Var 'aux467' direct represents '8' with '12283'
12280 -12282 12283 0
-12283 12282 0
-12283 -12280 0
c Var 'aux467' order represents '9' with '12284'
-12282 12284 0
c Var 'aux467' direct represents '9' with '12285'
12282 -12284 12285 0
-12285 12284 0
-12285 -12282 0
c Var 'aux467' order represents '10' with '12286'
-12284 12286 0
c Var 'aux467' direct represents '10' with '12287'
12284 -12286 12287 0
-12287 12286 0
-12287 -12284 0
c Var 'aux467' order represents '11' with '12288'
-12286 12288 0
c Var 'aux467' direct represents '11' with '12289'
12286 -12288 12289 0
-12289 12288 0
-12289 -12286 0
c Var 'aux467' order represents '12' with '12290'
-12288 12290 0
c Var 'aux467' direct represents '12' with '12291'
12288 -12290 12291 0
-12291 12290 0
-12291 -12288 0
c Var 'aux467' order represents '13' with '12292'
-12290 12292 0
c Var 'aux467' direct represents '13' with '12293'
12290 -12292 12293 0
-12293 12292 0
-12293 -12290 0
c Var 'aux467' order represents '14' with '12294'
-12292 12294 0
c Var 'aux467' direct represents '14' with '12295'
12292 -12294 12295 0
-12295 12294 0
-12295 -12292 0
c Var 'aux467' order represents '15' with '12296'
-12294 12296 0
c Var 'aux467' direct represents '15' with '12297'
12294 -12296 12297 0
-12297 12296 0
-12297 -12294 0
c Var 'aux467' order represents '16' with '12298'
-12296 12298 0
c Var 'aux467' direct represents '16' with '12299'
12296 -12298 12299 0
-12299 12298 0
-12299 -12296 0
c Var 'aux467' order represents '17' with '12300'
-12298 12300 0
c Var 'aux467' direct represents '17' with '12301'
12298 -12300 12301 0
-12301 12300 0
-12301 -12298 0
c Var 'aux467' order represents '18' with '12302'
-12300 12302 0
c Var 'aux467' direct represents '18' with '12303'
12300 -12302 12303 0
-12303 12302 0
-12303 -12300 0
c Var 'aux467' order represents '19' with '12304'
-12302 12304 0
c Var 'aux467' direct represents '19' with '12305'
12302 -12304 12305 0
-12305 12304 0
-12305 -12302 0
c Var 'aux467' order represents '20' with '12306'
-12304 12306 0
c Var 'aux467' direct represents '20' with '12307'
12304 -12306 12307 0
-12307 12306 0
-12307 -12304 0
c Var 'aux467' order represents '21' with '12308'
-12306 12308 0
c Var 'aux467' direct represents '21' with '12309'
12306 -12308 12309 0
-12309 12308 0
-12309 -12306 0
c Var 'aux467' order represents '22' with '12310'
-12308 12310 0
c Var 'aux467' direct represents '22' with '12311'
12308 -12310 12311 0
-12311 12310 0
-12311 -12308 0
c Var 'aux467' order represents '23' with '12312'
-12310 12312 0
c Var 'aux467' direct represents '23' with '12313'
12310 -12312 12313 0
-12313 12312 0
-12313 -12310 0
c Var 'aux467' order represents '24' with '12314'
-12312 12314 0
c Var 'aux467' direct represents '24' with '12315'
12312 -12314 12315 0
-12315 12314 0
-12315 -12312 0
c Var 'aux467' order represents '25' with '12316'
-12314 12316 0
c Var 'aux467' direct represents '25' with '12317'
12314 -12316 12317 0
-12317 12316 0
-12317 -12314 0
c Var 'aux467' order represents '26' with '12318'
-12316 12318 0
c Var 'aux467' direct represents '26' with '12319'
12316 -12318 12319 0
-12319 12318 0
-12319 -12316 0
c Var 'aux467' order represents '27' with '12320'
-12318 12320 0
c Var 'aux467' direct represents '27' with '12321'
12318 -12320 12321 0
-12321 12320 0
-12321 -12318 0
c Var 'aux467' order represents '28' with '12322'
-12320 12322 0
c Var 'aux467' direct represents '28' with '12323'
12320 -12322 12323 0
-12323 12322 0
-12323 -12320 0
c Var 'aux467' order represents '29' with '12324'
-12322 12324 0
c Var 'aux467' direct represents '29' with '12325'
12322 -12324 12325 0
-12325 12324 0
-12325 -12322 0
c Var 'aux467' order represents '30' with '12326'
-12324 12326 0
c Var 'aux467' direct represents '30' with '12327'
12324 -12326 12327 0
-12327 12326 0
-12327 -12324 0
c Var 'aux467' order represents '31' with '12328'
-12326 12328 0
c Var 'aux467' direct represents '31' with '12329'
12326 -12328 12329 0
-12329 12328 0
-12329 -12326 0
c Var 'aux467' order represents '32' with '12330'
-12328 12330 0
c Var 'aux467' direct represents '32' with '12331'
12328 -12330 12331 0
-12331 12330 0
-12331 -12328 0
c Var 'aux467' order represents '33' with '12332'
-12330 12332 0
c Var 'aux467' direct represents '33' with '12333'
12330 -12332 12333 0
-12333 12332 0
-12333 -12330 0
c Var 'aux467' order represents '34' with '12334'
-12332 12334 0
c Var 'aux467' direct represents '34' with '12335'
12332 -12334 12335 0
-12335 12334 0
-12335 -12332 0
c Var 'aux467' order represents '35' with '12336'
-12334 12336 0
c Var 'aux467' direct represents '35' with '12337'
12334 -12336 12337 0
-12337 12336 0
-12337 -12334 0
c Var 'aux467' direct represents '36' with '-12336'
12267 12269 12271 12273 12275 12277 12279 12281 12283 12285 12287 12289 12291 12293 12295 12297 12299 12301 12303 12305 12307 12309 12311 12313 12315 12317 12319 12321 12323 12325 12327 12329 12331 12333 12335 12337 -12336 0
c Encoding variable: aux468 with domain: int(0..2) (representing constraint ((field_00004_00001=1) + (field_00006_00001=1)))
c Both direct and order encoding.
c Var 'aux468' order represents '0' with '12338'
c Var 'aux468' direct represents '0' with '12338'
c Var 'aux468' order represents '1' with '12339'
-12338 12339 0
c Var 'aux468' direct represents '1' with '12340'
12338 -12339 12340 0
-12340 12339 0
-12340 -12338 0
c Var 'aux468' direct represents '2' with '-12339'
12338 12340 -12339 0
c Encoding variable: aux469 with domain: int(0..2) (representing constraint ((field_00001_00001=1) + (field_00009_00001=1)))
c Both direct and order encoding.
c Var 'aux469' order represents '0' with '12341'
c Var 'aux469' direct represents '0' with '12341'
c Var 'aux469' order represents '1' with '12342'
-12341 12342 0
c Var 'aux469' direct represents '1' with '12343'
12341 -12342 12343 0
-12343 12342 0
-12343 -12341 0
c Var 'aux469' direct represents '2' with '-12342'
12341 12343 -12342 0
c Encoding variable: aux470 with domain: int(0..2) (representing constraint ((field_00008_00001=1) + (field_00007_00001=1)))
c Both direct and order encoding.
c Var 'aux470' order represents '0' with '12344'
c Var 'aux470' direct represents '0' with '12344'
c Var 'aux470' order represents '1' with '12345'
-12344 12345 0
c Var 'aux470' direct represents '1' with '12346'
12344 -12345 12346 0
-12346 12345 0
-12346 -12344 0
c Var 'aux470' direct represents '2' with '-12345'
12344 12346 -12345 0
c Encoding variable: aux471 with domain: int(0..2) (representing constraint ((field_00003_00001=1) + (field_00005_00001=1)))
c Both direct and order encoding.
c Var 'aux471' order represents '0' with '12347'
c Var 'aux471' direct represents '0' with '12347'
c Var 'aux471' order represents '1' with '12348'
-12347 12348 0
c Var 'aux471' direct represents '1' with '12349'
12347 -12348 12349 0
-12349 12348 0
-12349 -12347 0
c Var 'aux471' direct represents '2' with '-12348'
12347 12349 -12348 0
c Encoding variable: aux472 with domain: int(0..3) (representing constraint ((field_00002_00001=1) + aux471))
c Both direct and order encoding.
c Var 'aux472' order represents '0' with '12350'
c Var 'aux472' direct represents '0' with '12350'
c Var 'aux472' order represents '1' with '12351'
-12350 12351 0
c Var 'aux472' direct represents '1' with '12352'
12350 -12351 12352 0
-12352 12351 0
-12352 -12350 0
c Var 'aux472' order represents '2' with '12353'
-12351 12353 0
c Var 'aux472' direct represents '2' with '12354'
12351 -12353 12354 0
-12354 12353 0
-12354 -12351 0
c Var 'aux472' direct represents '3' with '-12353'
12350 12352 12354 -12353 0
c Encoding variable: aux473 with domain: int(0..4) (representing constraint (aux468 + aux470))
c Both direct and order encoding.
c Var 'aux473' order represents '0' with '12355'
c Var 'aux473' direct represents '0' with '12355'
c Var 'aux473' order represents '1' with '12356'
-12355 12356 0
c Var 'aux473' direct represents '1' with '12357'
12355 -12356 12357 0
-12357 12356 0
-12357 -12355 0
c Var 'aux473' order represents '2' with '12358'
-12356 12358 0
c Var 'aux473' direct represents '2' with '12359'
12356 -12358 12359 0
-12359 12358 0
-12359 -12356 0
c Var 'aux473' order represents '3' with '12360'
-12358 12360 0
c Var 'aux473' direct represents '3' with '12361'
12358 -12360 12361 0
-12361 12360 0
-12361 -12358 0
c Var 'aux473' direct represents '4' with '-12360'
12355 12357 12359 12361 -12360 0
c Encoding variable: aux474 with domain: int(0..2) (representing constraint ((field_00004_00001=2) + (field_00006_00001=2)))
c Both direct and order encoding.
c Var 'aux474' order represents '0' with '12362'
c Var 'aux474' direct represents '0' with '12362'
c Var 'aux474' order represents '1' with '12363'
-12362 12363 0
c Var 'aux474' direct represents '1' with '12364'
12362 -12363 12364 0
-12364 12363 0
-12364 -12362 0
c Var 'aux474' direct represents '2' with '-12363'
12362 12364 -12363 0
c Encoding variable: aux475 with domain: int(0..2) (representing constraint ((field_00001_00001=2) + (field_00009_00001=2)))
c Both direct and order encoding.
c Var 'aux475' order represents '0' with '12365'
c Var 'aux475' direct represents '0' with '12365'
c Var 'aux475' order represents '1' with '12366'
-12365 12366 0
c Var 'aux475' direct represents '1' with '12367'
12365 -12366 12367 0
-12367 12366 0
-12367 -12365 0
c Var 'aux475' direct represents '2' with '-12366'
12365 12367 -12366 0
c Encoding variable: aux476 with domain: int(0..2) (representing constraint ((field_00008_00001=2) + (field_00007_00001=2)))
c Both direct and order encoding.
c Var 'aux476' order represents '0' with '12368'
c Var 'aux476' direct represents '0' with '12368'
c Var 'aux476' order represents '1' with '12369'
-12368 12369 0
c Var 'aux476' direct represents '1' with '12370'
12368 -12369 12370 0
-12370 12369 0
-12370 -12368 0
c Var 'aux476' direct represents '2' with '-12369'
12368 12370 -12369 0
c Encoding variable: aux477 with domain: int(0..2) (representing constraint ((field_00003_00001=2) + (field_00005_00001=2)))
c Both direct and order encoding.
c Var 'aux477' order represents '0' with '12371'
c Var 'aux477' direct represents '0' with '12371'
c Var 'aux477' order represents '1' with '12372'
-12371 12372 0
c Var 'aux477' direct represents '1' with '12373'
12371 -12372 12373 0
-12373 12372 0
-12373 -12371 0
c Var 'aux477' direct represents '2' with '-12372'
12371 12373 -12372 0
c Encoding variable: aux478 with domain: int(0..3) (representing constraint ((field_00002_00001=2) + aux477))
c Both direct and order encoding.
c Var 'aux478' order represents '0' with '12374'
c Var 'aux478' direct represents '0' with '12374'
c Var 'aux478' order represents '1' with '12375'
-12374 12375 0
c Var 'aux478' direct represents '1' with '12376'
12374 -12375 12376 0
-12376 12375 0
-12376 -12374 0
c Var 'aux478' order represents '2' with '12377'
-12375 12377 0
c Var 'aux478' direct represents '2' with '12378'
12375 -12377 12378 0
-12378 12377 0
-12378 -12375 0
c Var 'aux478' direct represents '3' with '-12377'
12374 12376 12378 -12377 0
c Encoding variable: aux479 with domain: int(0..4) (representing constraint (aux474 + aux476))
c Both direct and order encoding.
c Var 'aux479' order represents '0' with '12379'
c Var 'aux479' direct represents '0' with '12379'
c Var 'aux479' order represents '1' with '12380'
-12379 12380 0
c Var 'aux479' direct represents '1' with '12381'
12379 -12380 12381 0
-12381 12380 0
-12381 -12379 0
c Var 'aux479' order represents '2' with '12382'
-12380 12382 0
c Var 'aux479' direct represents '2' with '12383'
12380 -12382 12383 0
-12383 12382 0
-12383 -12380 0
c Var 'aux479' order represents '3' with '12384'
-12382 12384 0
c Var 'aux479' direct represents '3' with '12385'
12382 -12384 12385 0
-12385 12384 0
-12385 -12382 0
c Var 'aux479' direct represents '4' with '-12384'
12379 12381 12383 12385 -12384 0
c Encoding variable: aux480 with domain: int(0..2) (representing constraint ((field_00004_00001=3) + (field_00006_00001=3)))
c Both direct and order encoding.
c Var 'aux480' order represents '0' with '12386'
c Var 'aux480' direct represents '0' with '12386'
c Var 'aux480' order represents '1' with '12387'
-12386 12387 0
c Var 'aux480' direct represents '1' with '12388'
12386 -12387 12388 0
-12388 12387 0
-12388 -12386 0
c Var 'aux480' direct represents '2' with '-12387'
12386 12388 -12387 0
c Encoding variable: aux481 with domain: int(0..2) (representing constraint ((field_00001_00001=3) + (field_00009_00001=3)))
c Both direct and order encoding.
c Var 'aux481' order represents '0' with '12389'
c Var 'aux481' direct represents '0' with '12389'
c Var 'aux481' order represents '1' with '12390'
-12389 12390 0
c Var 'aux481' direct represents '1' with '12391'
12389 -12390 12391 0
-12391 12390 0
-12391 -12389 0
c Var 'aux481' direct represents '2' with '-12390'
12389 12391 -12390 0
c Encoding variable: aux482 with domain: int(0..2) (representing constraint ((field_00008_00001=3) + (field_00007_00001=3)))
c Both direct and order encoding.
c Var 'aux482' order represents '0' with '12392'
c Var 'aux482' direct represents '0' with '12392'
c Var 'aux482' order represents '1' with '12393'
-12392 12393 0
c Var 'aux482' direct represents '1' with '12394'
12392 -12393 12394 0
-12394 12393 0
-12394 -12392 0
c Var 'aux482' direct represents '2' with '-12393'
12392 12394 -12393 0
c Encoding variable: aux483 with domain: int(0..2) (representing constraint ((field_00003_00001=3) + (field_00005_00001=3)))
c Both direct and order encoding.
c Var 'aux483' order represents '0' with '12395'
c Var 'aux483' direct represents '0' with '12395'
c Var 'aux483' order represents '1' with '12396'
-12395 12396 0
c Var 'aux483' direct represents '1' with '12397'
12395 -12396 12397 0
-12397 12396 0
-12397 -12395 0
c Var 'aux483' direct represents '2' with '-12396'
12395 12397 -12396 0
c Encoding variable: aux484 with domain: int(0..3) (representing constraint ((field_00002_00001=3) + aux483))
c Both direct and order encoding.
c Var 'aux484' order represents '0' with '12398'
c Var 'aux484' direct represents '0' with '12398'
c Var 'aux484' order represents '1' with '12399'
-12398 12399 0
c Var 'aux484' direct represents '1' with '12400'
12398 -12399 12400 0
-12400 12399 0
-12400 -12398 0
c Var 'aux484' order represents '2' with '12401'
-12399 12401 0
c Var 'aux484' direct represents '2' with '12402'
12399 -12401 12402 0
-12402 12401 0
-12402 -12399 0
c Var 'aux484' direct represents '3' with '-12401'
12398 12400 12402 -12401 0
c Encoding variable: aux485 with domain: int(0..4) (representing constraint (aux480 + aux482))
c Both direct and order encoding.
c Var 'aux485' order represents '0' with '12403'
c Var 'aux485' direct represents '0' with '12403'
c Var 'aux485' order represents '1' with '12404'
-12403 12404 0
c Var 'aux485' direct represents '1' with '12405'
12403 -12404 12405 0
-12405 12404 0
-12405 -12403 0
c Var 'aux485' order represents '2' with '12406'
-12404 12406 0
c Var 'aux485' direct represents '2' with '12407'
12404 -12406 12407 0
-12407 12406 0
-12407 -12404 0
c Var 'aux485' order represents '3' with '12408'
-12406 12408 0
c Var 'aux485' direct represents '3' with '12409'
12406 -12408 12409 0
-12409 12408 0
-12409 -12406 0
c Var 'aux485' direct represents '4' with '-12408'
12403 12405 12407 12409 -12408 0
c Encoding variable: aux486 with domain: int(0..2) (representing constraint ((field_00004_00001=4) + (field_00006_00001=4)))
c Both direct and order encoding.
c Var 'aux486' order represents '0' with '12410'
c Var 'aux486' direct represents '0' with '12410'
c Var 'aux486' order represents '1' with '12411'
-12410 12411 0
c Var 'aux486' direct represents '1' with '12412'
12410 -12411 12412 0
-12412 12411 0
-12412 -12410 0
c Var 'aux486' direct represents '2' with '-12411'
12410 12412 -12411 0
c Encoding variable: aux487 with domain: int(0..2) (representing constraint ((field_00001_00001=4) + (field_00009_00001=4)))
c Both direct and order encoding.
c Var 'aux487' order represents '0' with '12413'
c Var 'aux487' direct represents '0' with '12413'
c Var 'aux487' order represents '1' with '12414'
-12413 12414 0
c Var 'aux487' direct represents '1' with '12415'
12413 -12414 12415 0
-12415 12414 0
-12415 -12413 0
c Var 'aux487' direct represents '2' with '-12414'
12413 12415 -12414 0
c Encoding variable: aux488 with domain: int(0..2) (representing constraint ((field_00008_00001=4) + (field_00007_00001=4)))
c Both direct and order encoding.
c Var 'aux488' order represents '0' with '12416'
c Var 'aux488' direct represents '0' with '12416'
c Var 'aux488' order represents '1' with '12417'
-12416 12417 0
c Var 'aux488' direct represents '1' with '12418'
12416 -12417 12418 0
-12418 12417 0
-12418 -12416 0
c Var 'aux488' direct represents '2' with '-12417'
12416 12418 -12417 0
c Encoding variable: aux489 with domain: int(0..2) (representing constraint ((field_00003_00001=4) + (field_00005_00001=4)))
c Both direct and order encoding.
c Var 'aux489' order represents '0' with '12419'
c Var 'aux489' direct represents '0' with '12419'
c Var 'aux489' order represents '1' with '12420'
-12419 12420 0
c Var 'aux489' direct represents '1' with '12421'
12419 -12420 12421 0
-12421 12420 0
-12421 -12419 0
c Var 'aux489' direct represents '2' with '-12420'
12419 12421 -12420 0
c Encoding variable: aux490 with domain: int(0..3) (representing constraint ((field_00002_00001=4) + aux489))
c Both direct and order encoding.
c Var 'aux490' order represents '0' with '12422'
c Var 'aux490' direct represents '0' with '12422'
c Var 'aux490' order represents '1' with '12423'
-12422 12423 0
c Var 'aux490' direct represents '1' with '12424'
12422 -12423 12424 0
-12424 12423 0
-12424 -12422 0
c Var 'aux490' order represents '2' with '12425'
-12423 12425 0
c Var 'aux490' direct represents '2' with '12426'
12423 -12425 12426 0
-12426 12425 0
-12426 -12423 0
c Var 'aux490' direct represents '3' with '-12425'
12422 12424 12426 -12425 0
c Encoding variable: aux491 with domain: int(0..4) (representing constraint (aux486 + aux488))
c Both direct and order encoding.
c Var 'aux491' order represents '0' with '12427'
c Var 'aux491' direct represents '0' with '12427'
c Var 'aux491' order represents '1' with '12428'
-12427 12428 0
c Var 'aux491' direct represents '1' with '12429'
12427 -12428 12429 0
-12429 12428 0
-12429 -12427 0
c Var 'aux491' order represents '2' with '12430'
-12428 12430 0
c Var 'aux491' direct represents '2' with '12431'
12428 -12430 12431 0
-12431 12430 0
-12431 -12428 0
c Var 'aux491' order represents '3' with '12432'
-12430 12432 0
c Var 'aux491' direct represents '3' with '12433'
12430 -12432 12433 0
-12433 12432 0
-12433 -12430 0
c Var 'aux491' direct represents '4' with '-12432'
12427 12429 12431 12433 -12432 0
c Encoding variable: aux492 with domain: int(0..2) (representing constraint ((field_00004_00001=5) + (field_00006_00001=5)))
c Both direct and order encoding.
c Var 'aux492' order represents '0' with '12434'
c Var 'aux492' direct represents '0' with '12434'
c Var 'aux492' order represents '1' with '12435'
-12434 12435 0
c Var 'aux492' direct represents '1' with '12436'
12434 -12435 12436 0
-12436 12435 0
-12436 -12434 0
c Var 'aux492' direct represents '2' with '-12435'
12434 12436 -12435 0
c Encoding variable: aux493 with domain: int(0..2) (representing constraint ((field_00001_00001=5) + (field_00009_00001=5)))
c Both direct and order encoding.
c Var 'aux493' order represents '0' with '12437'
c Var 'aux493' direct represents '0' with '12437'
c Var 'aux493' order represents '1' with '12438'
-12437 12438 0
c Var 'aux493' direct represents '1' with '12439'
12437 -12438 12439 0
-12439 12438 0
-12439 -12437 0
c Var 'aux493' direct represents '2' with '-12438'
12437 12439 -12438 0
c Encoding variable: aux494 with domain: int(0..2) (representing constraint ((field_00008_00001=5) + (field_00007_00001=5)))
c Both direct and order encoding.
c Var 'aux494' order represents '0' with '12440'
c Var 'aux494' direct represents '0' with '12440'
c Var 'aux494' order represents '1' with '12441'
-12440 12441 0
c Var 'aux494' direct represents '1' with '12442'
12440 -12441 12442 0
-12442 12441 0
-12442 -12440 0
c Var 'aux494' direct represents '2' with '-12441'
12440 12442 -12441 0
c Encoding variable: aux495 with domain: int(0..2) (representing constraint ((field_00003_00001=5) + (field_00005_00001=5)))
c Both direct and order encoding.
c Var 'aux495' order represents '0' with '12443'
c Var 'aux495' direct represents '0' with '12443'
c Var 'aux495' order represents '1' with '12444'
-12443 12444 0
c Var 'aux495' direct represents '1' with '12445'
12443 -12444 12445 0
-12445 12444 0
-12445 -12443 0
c Var 'aux495' direct represents '2' with '-12444'
12443 12445 -12444 0
c Encoding variable: aux496 with domain: int(0..3) (representing constraint ((field_00002_00001=5) + aux495))
c Both direct and order encoding.
c Var 'aux496' order represents '0' with '12446'
c Var 'aux496' direct represents '0' with '12446'
c Var 'aux496' order represents '1' with '12447'
-12446 12447 0
c Var 'aux496' direct represents '1' with '12448'
12446 -12447 12448 0
-12448 12447 0
-12448 -12446 0
c Var 'aux496' order represents '2' with '12449'
-12447 12449 0
c Var 'aux496' direct represents '2' with '12450'
12447 -12449 12450 0
-12450 12449 0
-12450 -12447 0
c Var 'aux496' direct represents '3' with '-12449'
12446 12448 12450 -12449 0
c Encoding variable: aux497 with domain: int(0..4) (representing constraint (aux492 + aux494))
c Both direct and order encoding.
c Var 'aux497' order represents '0' with '12451'
c Var 'aux497' direct represents '0' with '12451'
c Var 'aux497' order represents '1' with '12452'
-12451 12452 0
c Var 'aux497' direct represents '1' with '12453'
12451 -12452 12453 0
-12453 12452 0
-12453 -12451 0
c Var 'aux497' order represents '2' with '12454'
-12452 12454 0
c Var 'aux497' direct represents '2' with '12455'
12452 -12454 12455 0
-12455 12454 0
-12455 -12452 0
c Var 'aux497' order represents '3' with '12456'
-12454 12456 0
c Var 'aux497' direct represents '3' with '12457'
12454 -12456 12457 0
-12457 12456 0
-12457 -12454 0
c Var 'aux497' direct represents '4' with '-12456'
12451 12453 12455 12457 -12456 0
c Encoding variable: aux498 with domain: int(0..2) (representing constraint ((field_00004_00001=6) + (field_00006_00001=6)))
c Both direct and order encoding.
c Var 'aux498' order represents '0' with '12458'
c Var 'aux498' direct represents '0' with '12458'
c Var 'aux498' order represents '1' with '12459'
-12458 12459 0
c Var 'aux498' direct represents '1' with '12460'
12458 -12459 12460 0
-12460 12459 0
-12460 -12458 0
c Var 'aux498' direct represents '2' with '-12459'
12458 12460 -12459 0
c Encoding variable: aux499 with domain: int(0..2) (representing constraint ((field_00001_00001=6) + (field_00009_00001=6)))
c Both direct and order encoding.
c Var 'aux499' order represents '0' with '12461'
c Var 'aux499' direct represents '0' with '12461'
c Var 'aux499' order represents '1' with '12462'
-12461 12462 0
c Var 'aux499' direct represents '1' with '12463'
12461 -12462 12463 0
-12463 12462 0
-12463 -12461 0
c Var 'aux499' direct represents '2' with '-12462'
12461 12463 -12462 0
c Encoding variable: aux500 with domain: int(0..2) (representing constraint ((field_00008_00001=6) + (field_00007_00001=6)))
c Both direct and order encoding.
c Var 'aux500' order represents '0' with '12464'
c Var 'aux500' direct represents '0' with '12464'
c Var 'aux500' order represents '1' with '12465'
-12464 12465 0
c Var 'aux500' direct represents '1' with '12466'
12464 -12465 12466 0
-12466 12465 0
-12466 -12464 0
c Var 'aux500' direct represents '2' with '-12465'
12464 12466 -12465 0
c Encoding variable: aux501 with domain: int(0..2) (representing constraint ((field_00003_00001=6) + (field_00005_00001=6)))
c Both direct and order encoding.
c Var 'aux501' order represents '0' with '12467'
c Var 'aux501' direct represents '0' with '12467'
c Var 'aux501' order represents '1' with '12468'
-12467 12468 0
c Var 'aux501' direct represents '1' with '12469'
12467 -12468 12469 0
-12469 12468 0
-12469 -12467 0
c Var 'aux501' direct represents '2' with '-12468'
12467 12469 -12468 0
c Encoding variable: aux502 with domain: int(0..3) (representing constraint ((field_00002_00001=6) + aux501))
c Both direct and order encoding.
c Var 'aux502' order represents '0' with '12470'
c Var 'aux502' direct represents '0' with '12470'
c Var 'aux502' order represents '1' with '12471'
-12470 12471 0
c Var 'aux502' direct represents '1' with '12472'
12470 -12471 12472 0
-12472 12471 0
-12472 -12470 0
c Var 'aux502' order represents '2' with '12473'
-12471 12473 0
c Var 'aux502' direct represents '2' with '12474'
12471 -12473 12474 0
-12474 12473 0
-12474 -12471 0
c Var 'aux502' direct represents '3' with '-12473'
12470 12472 12474 -12473 0
c Encoding variable: aux503 with domain: int(0..4) (representing constraint (aux498 + aux500))
c Both direct and order encoding.
c Var 'aux503' order represents '0' with '12475'
c Var 'aux503' direct represents '0' with '12475'
c Var 'aux503' order represents '1' with '12476'
-12475 12476 0
c Var 'aux503' direct represents '1' with '12477'
12475 -12476 12477 0
-12477 12476 0
-12477 -12475 0
c Var 'aux503' order represents '2' with '12478'
-12476 12478 0
c Var 'aux503' direct represents '2' with '12479'
12476 -12478 12479 0
-12479 12478 0
-12479 -12476 0
c Var 'aux503' order represents '3' with '12480'
-12478 12480 0
c Var 'aux503' direct represents '3' with '12481'
12478 -12480 12481 0
-12481 12480 0
-12481 -12478 0
c Var 'aux503' direct represents '4' with '-12480'
12475 12477 12479 12481 -12480 0
c Encoding variable: aux504 with domain: int(0..2) (representing constraint ((field_00004_00001=7) + (field_00006_00001=7)))
c Both direct and order encoding.
c Var 'aux504' order represents '0' with '12482'
c Var 'aux504' direct represents '0' with '12482'
c Var 'aux504' order represents '1' with '12483'
-12482 12483 0
c Var 'aux504' direct represents '1' with '12484'
12482 -12483 12484 0
-12484 12483 0
-12484 -12482 0
c Var 'aux504' direct represents '2' with '-12483'
12482 12484 -12483 0
c Encoding variable: aux505 with domain: int(0..2) (representing constraint ((field_00001_00001=7) + (field_00009_00001=7)))
c Both direct and order encoding.
c Var 'aux505' order represents '0' with '12485'
c Var 'aux505' direct represents '0' with '12485'
c Var 'aux505' order represents '1' with '12486'
-12485 12486 0
c Var 'aux505' direct represents '1' with '12487'
12485 -12486 12487 0
-12487 12486 0
-12487 -12485 0
c Var 'aux505' direct represents '2' with '-12486'
12485 12487 -12486 0
c Encoding variable: aux506 with domain: int(0..2) (representing constraint ((field_00008_00001=7) + (field_00007_00001=7)))
c Both direct and order encoding.
c Var 'aux506' order represents '0' with '12488'
c Var 'aux506' direct represents '0' with '12488'
c Var 'aux506' order represents '1' with '12489'
-12488 12489 0
c Var 'aux506' direct represents '1' with '12490'
12488 -12489 12490 0
-12490 12489 0
-12490 -12488 0
c Var 'aux506' direct represents '2' with '-12489'
12488 12490 -12489 0
c Encoding variable: aux507 with domain: int(0..2) (representing constraint ((field_00003_00001=7) + (field_00005_00001=7)))
c Both direct and order encoding.
c Var 'aux507' order represents '0' with '12491'
c Var 'aux507' direct represents '0' with '12491'
c Var 'aux507' order represents '1' with '12492'
-12491 12492 0
c Var 'aux507' direct represents '1' with '12493'
12491 -12492 12493 0
-12493 12492 0
-12493 -12491 0
c Var 'aux507' direct represents '2' with '-12492'
12491 12493 -12492 0
c Encoding variable: aux508 with domain: int(0..3) (representing constraint ((field_00002_00001=7) + aux507))
c Both direct and order encoding.
c Var 'aux508' order represents '0' with '12494'
c Var 'aux508' direct represents '0' with '12494'
c Var 'aux508' order represents '1' with '12495'
-12494 12495 0
c Var 'aux508' direct represents '1' with '12496'
12494 -12495 12496 0
-12496 12495 0
-12496 -12494 0
c Var 'aux508' order represents '2' with '12497'
-12495 12497 0
c Var 'aux508' direct represents '2' with '12498'
12495 -12497 12498 0
-12498 12497 0
-12498 -12495 0
c Var 'aux508' direct represents '3' with '-12497'
12494 12496 12498 -12497 0
c Encoding variable: aux509 with domain: int(0..4) (representing constraint (aux504 + aux506))
c Both direct and order encoding.
c Var 'aux509' order represents '0' with '12499'
c Var 'aux509' direct represents '0' with '12499'
c Var 'aux509' order represents '1' with '12500'
-12499 12500 0
c Var 'aux509' direct represents '1' with '12501'
12499 -12500 12501 0
-12501 12500 0
-12501 -12499 0
c Var 'aux509' order represents '2' with '12502'
-12500 12502 0
c Var 'aux509' direct represents '2' with '12503'
12500 -12502 12503 0
-12503 12502 0
-12503 -12500 0
c Var 'aux509' order represents '3' with '12504'
-12502 12504 0
c Var 'aux509' direct represents '3' with '12505'
12502 -12504 12505 0
-12505 12504 0
-12505 -12502 0
c Var 'aux509' direct represents '4' with '-12504'
12499 12501 12503 12505 -12504 0
c Encoding variable: aux510 with domain: int(0..2) (representing constraint ((field_00004_00001=8) + (field_00006_00001=8)))
c Both direct and order encoding.
c Var 'aux510' order represents '0' with '12506'
c Var 'aux510' direct represents '0' with '12506'
c Var 'aux510' order represents '1' with '12507'
-12506 12507 0
c Var 'aux510' direct represents '1' with '12508'
12506 -12507 12508 0
-12508 12507 0
-12508 -12506 0
c Var 'aux510' direct represents '2' with '-12507'
12506 12508 -12507 0
c Encoding variable: aux511 with domain: int(0..2) (representing constraint ((field_00001_00001=8) + (field_00009_00001=8)))
c Both direct and order encoding.
c Var 'aux511' order represents '0' with '12509'
c Var 'aux511' direct represents '0' with '12509'
c Var 'aux511' order represents '1' with '12510'
-12509 12510 0
c Var 'aux511' direct represents '1' with '12511'
12509 -12510 12511 0
-12511 12510 0
-12511 -12509 0
c Var 'aux511' direct represents '2' with '-12510'
12509 12511 -12510 0
c Encoding variable: aux512 with domain: int(0..2) (representing constraint ((field_00008_00001=8) + (field_00007_00001=8)))
c Both direct and order encoding.
c Var 'aux512' order represents '0' with '12512'
c Var 'aux512' direct represents '0' with '12512'
c Var 'aux512' order represents '1' with '12513'
-12512 12513 0
c Var 'aux512' direct represents '1' with '12514'
12512 -12513 12514 0
-12514 12513 0
-12514 -12512 0
c Var 'aux512' direct represents '2' with '-12513'
12512 12514 -12513 0
c Encoding variable: aux513 with domain: int(0..2) (representing constraint ((field_00003_00001=8) + (field_00005_00001=8)))
c Both direct and order encoding.
c Var 'aux513' order represents '0' with '12515'
c Var 'aux513' direct represents '0' with '12515'
c Var 'aux513' order represents '1' with '12516'
-12515 12516 0
c Var 'aux513' direct represents '1' with '12517'
12515 -12516 12517 0
-12517 12516 0
-12517 -12515 0
c Var 'aux513' direct represents '2' with '-12516'
12515 12517 -12516 0
c Encoding variable: aux514 with domain: int(0..3) (representing constraint ((field_00002_00001=8) + aux513))
c Both direct and order encoding.
c Var 'aux514' order represents '0' with '12518'
c Var 'aux514' direct represents '0' with '12518'
c Var 'aux514' order represents '1' with '12519'
-12518 12519 0
c Var 'aux514' direct represents '1' with '12520'
12518 -12519 12520 0
-12520 12519 0
-12520 -12518 0
c Var 'aux514' order represents '2' with '12521'
-12519 12521 0
c Var 'aux514' direct represents '2' with '12522'
12519 -12521 12522 0
-12522 12521 0
-12522 -12519 0
c Var 'aux514' direct represents '3' with '-12521'
12518 12520 12522 -12521 0
c Encoding variable: aux515 with domain: int(0..4) (representing constraint (aux510 + aux512))
c Both direct and order encoding.
c Var 'aux515' order represents '0' with '12523'
c Var 'aux515' direct represents '0' with '12523'
c Var 'aux515' order represents '1' with '12524'
-12523 12524 0
c Var 'aux515' direct represents '1' with '12525'
12523 -12524 12525 0
-12525 12524 0
-12525 -12523 0
c Var 'aux515' order represents '2' with '12526'
-12524 12526 0
c Var 'aux515' direct represents '2' with '12527'
12524 -12526 12527 0
-12527 12526 0
-12527 -12524 0
c Var 'aux515' order represents '3' with '12528'
-12526 12528 0
c Var 'aux515' direct represents '3' with '12529'
12526 -12528 12529 0
-12529 12528 0
-12529 -12526 0
c Var 'aux515' direct represents '4' with '-12528'
12523 12525 12527 12529 -12528 0
c Encoding variable: aux516 with domain: int(0..2) (representing constraint ((field_00004_00001=9) + (field_00006_00001=9)))
c Both direct and order encoding.
c Var 'aux516' order represents '0' with '12530'
c Var 'aux516' direct represents '0' with '12530'
c Var 'aux516' order represents '1' with '12531'
-12530 12531 0
c Var 'aux516' direct represents '1' with '12532'
12530 -12531 12532 0
-12532 12531 0
-12532 -12530 0
c Var 'aux516' direct represents '2' with '-12531'
12530 12532 -12531 0
c Encoding variable: aux517 with domain: int(0..2) (representing constraint ((field_00001_00001=9) + (field_00009_00001=9)))
c Both direct and order encoding.
c Var 'aux517' order represents '0' with '12533'
c Var 'aux517' direct represents '0' with '12533'
c Var 'aux517' order represents '1' with '12534'
-12533 12534 0
c Var 'aux517' direct represents '1' with '12535'
12533 -12534 12535 0
-12535 12534 0
-12535 -12533 0
c Var 'aux517' direct represents '2' with '-12534'
12533 12535 -12534 0
c Encoding variable: aux518 with domain: int(0..2) (representing constraint ((field_00008_00001=9) + (field_00007_00001=9)))
c Both direct and order encoding.
c Var 'aux518' order represents '0' with '12536'
c Var 'aux518' direct represents '0' with '12536'
c Var 'aux518' order represents '1' with '12537'
-12536 12537 0
c Var 'aux518' direct represents '1' with '12538'
12536 -12537 12538 0
-12538 12537 0
-12538 -12536 0
c Var 'aux518' direct represents '2' with '-12537'
12536 12538 -12537 0
c Encoding variable: aux519 with domain: int(0..2) (representing constraint ((field_00003_00001=9) + (field_00005_00001=9)))
c Both direct and order encoding.
c Var 'aux519' order represents '0' with '12539'
c Var 'aux519' direct represents '0' with '12539'
c Var 'aux519' order represents '1' with '12540'
-12539 12540 0
c Var 'aux519' direct represents '1' with '12541'
12539 -12540 12541 0
-12541 12540 0
-12541 -12539 0
c Var 'aux519' direct represents '2' with '-12540'
12539 12541 -12540 0
c Encoding variable: aux520 with domain: int(0..3) (representing constraint ((field_00002_00001=9) + aux519))
c Both direct and order encoding.
c Var 'aux520' order represents '0' with '12542'
c Var 'aux520' direct represents '0' with '12542'
c Var 'aux520' order represents '1' with '12543'
-12542 12543 0
c Var 'aux520' direct represents '1' with '12544'
12542 -12543 12544 0
-12544 12543 0
-12544 -12542 0
c Var 'aux520' order represents '2' with '12545'
-12543 12545 0
c Var 'aux520' direct represents '2' with '12546'
12543 -12545 12546 0
-12546 12545 0
-12546 -12543 0
c Var 'aux520' direct represents '3' with '-12545'
12542 12544 12546 -12545 0
c Encoding variable: aux521 with domain: int(0..4) (representing constraint (aux516 + aux518))
c Both direct and order encoding.
c Var 'aux521' order represents '0' with '12547'
c Var 'aux521' direct represents '0' with '12547'
c Var 'aux521' order represents '1' with '12548'
-12547 12548 0
c Var 'aux521' direct represents '1' with '12549'
12547 -12548 12549 0
-12549 12548 0
-12549 -12547 0
c Var 'aux521' order represents '2' with '12550'
-12548 12550 0
c Var 'aux521' direct represents '2' with '12551'
12548 -12550 12551 0
-12551 12550 0
-12551 -12548 0
c Var 'aux521' order represents '3' with '12552'
-12550 12552 0
c Var 'aux521' direct represents '3' with '12553'
12550 -12552 12553 0
-12553 12552 0
-12553 -12550 0
c Var 'aux521' direct represents '4' with '-12552'
12547 12549 12551 12553 -12552 0
c Encoding variable: aux522 with domain: int(0..2) (representing constraint ((field_00004_00002=1) + (field_00006_00002=1)))
c Both direct and order encoding.
c Var 'aux522' order represents '0' with '12554'
c Var 'aux522' direct represents '0' with '12554'
c Var 'aux522' order represents '1' with '12555'
-12554 12555 0
c Var 'aux522' direct represents '1' with '12556'
12554 -12555 12556 0
-12556 12555 0
-12556 -12554 0
c Var 'aux522' direct represents '2' with '-12555'
12554 12556 -12555 0
c Encoding variable: aux523 with domain: int(0..2) (representing constraint ((field_00001_00002=1) + (field_00009_00002=1)))
c Both direct and order encoding.
c Var 'aux523' order represents '0' with '12557'
c Var 'aux523' direct represents '0' with '12557'
c Var 'aux523' order represents '1' with '12558'
-12557 12558 0
c Var 'aux523' direct represents '1' with '12559'
12557 -12558 12559 0
-12559 12558 0
-12559 -12557 0
c Var 'aux523' direct represents '2' with '-12558'
12557 12559 -12558 0
c Encoding variable: aux524 with domain: int(0..2) (representing constraint ((field_00008_00002=1) + (field_00007_00002=1)))
c Both direct and order encoding.
c Var 'aux524' order represents '0' with '12560'
c Var 'aux524' direct represents '0' with '12560'
c Var 'aux524' order represents '1' with '12561'
-12560 12561 0
c Var 'aux524' direct represents '1' with '12562'
12560 -12561 12562 0
-12562 12561 0
-12562 -12560 0
c Var 'aux524' direct represents '2' with '-12561'
12560 12562 -12561 0
c Encoding variable: aux525 with domain: int(0..2) (representing constraint ((field_00003_00002=1) + (field_00005_00002=1)))
c Both direct and order encoding.
c Var 'aux525' order represents '0' with '12563'
c Var 'aux525' direct represents '0' with '12563'
c Var 'aux525' order represents '1' with '12564'
-12563 12564 0
c Var 'aux525' direct represents '1' with '12565'
12563 -12564 12565 0
-12565 12564 0
-12565 -12563 0
c Var 'aux525' direct represents '2' with '-12564'
12563 12565 -12564 0
c Encoding variable: aux526 with domain: int(0..3) (representing constraint ((field_00002_00002=1) + aux525))
c Both direct and order encoding.
c Var 'aux526' order represents '0' with '12566'
c Var 'aux526' direct represents '0' with '12566'
c Var 'aux526' order represents '1' with '12567'
-12566 12567 0
c Var 'aux526' direct represents '1' with '12568'
12566 -12567 12568 0
-12568 12567 0
-12568 -12566 0
c Var 'aux526' order represents '2' with '12569'
-12567 12569 0
c Var 'aux526' direct represents '2' with '12570'
12567 -12569 12570 0
-12570 12569 0
-12570 -12567 0
c Var 'aux526' direct represents '3' with '-12569'
12566 12568 12570 -12569 0
c Encoding variable: aux527 with domain: int(0..4) (representing constraint (aux522 + aux524))
c Both direct and order encoding.
c Var 'aux527' order represents '0' with '12571'
c Var 'aux527' direct represents '0' with '12571'
c Var 'aux527' order represents '1' with '12572'
-12571 12572 0
c Var 'aux527' direct represents '1' with '12573'
12571 -12572 12573 0
-12573 12572 0
-12573 -12571 0
c Var 'aux527' order represents '2' with '12574'
-12572 12574 0
c Var 'aux527' direct represents '2' with '12575'
12572 -12574 12575 0
-12575 12574 0
-12575 -12572 0
c Var 'aux527' order represents '3' with '12576'
-12574 12576 0
c Var 'aux527' direct represents '3' with '12577'
12574 -12576 12577 0
-12577 12576 0
-12577 -12574 0
c Var 'aux527' direct represents '4' with '-12576'
12571 12573 12575 12577 -12576 0
c Encoding variable: aux528 with domain: int(0..2) (representing constraint ((field_00004_00002=2) + (field_00006_00002=2)))
c Both direct and order encoding.
c Var 'aux528' order represents '0' with '12578'
c Var 'aux528' direct represents '0' with '12578'
c Var 'aux528' order represents '1' with '12579'
-12578 12579 0
c Var 'aux528' direct represents '1' with '12580'
12578 -12579 12580 0
-12580 12579 0
-12580 -12578 0
c Var 'aux528' direct represents '2' with '-12579'
12578 12580 -12579 0
c Encoding variable: aux529 with domain: int(0..2) (representing constraint ((field_00001_00002=2) + (field_00009_00002=2)))
c Both direct and order encoding.
c Var 'aux529' order represents '0' with '12581'
c Var 'aux529' direct represents '0' with '12581'
c Var 'aux529' order represents '1' with '12582'
-12581 12582 0
c Var 'aux529' direct represents '1' with '12583'
12581 -12582 12583 0
-12583 12582 0
-12583 -12581 0
c Var 'aux529' direct represents '2' with '-12582'
12581 12583 -12582 0
c Encoding variable: aux530 with domain: int(0..2) (representing constraint ((field_00008_00002=2) + (field_00007_00002=2)))
c Both direct and order encoding.
c Var 'aux530' order represents '0' with '12584'
c Var 'aux530' direct represents '0' with '12584'
c Var 'aux530' order represents '1' with '12585'
-12584 12585 0
c Var 'aux530' direct represents '1' with '12586'
12584 -12585 12586 0
-12586 12585 0
-12586 -12584 0
c Var 'aux530' direct represents '2' with '-12585'
12584 12586 -12585 0
c Encoding variable: aux531 with domain: int(0..2) (representing constraint ((field_00003_00002=2) + (field_00005_00002=2)))
c Both direct and order encoding.
c Var 'aux531' order represents '0' with '12587'
c Var 'aux531' direct represents '0' with '12587'
c Var 'aux531' order represents '1' with '12588'
-12587 12588 0
c Var 'aux531' direct represents '1' with '12589'
12587 -12588 12589 0
-12589 12588 0
-12589 -12587 0
c Var 'aux531' direct represents '2' with '-12588'
12587 12589 -12588 0
c Encoding variable: aux532 with domain: int(0..3) (representing constraint ((field_00002_00002=2) + aux531))
c Both direct and order encoding.
c Var 'aux532' order represents '0' with '12590'
c Var 'aux532' direct represents '0' with '12590'
c Var 'aux532' order represents '1' with '12591'
-12590 12591 0
c Var 'aux532' direct represents '1' with '12592'
12590 -12591 12592 0
-12592 12591 0
-12592 -12590 0
c Var 'aux532' order represents '2' with '12593'
-12591 12593 0
c Var 'aux532' direct represents '2' with '12594'
12591 -12593 12594 0
-12594 12593 0
-12594 -12591 0
c Var 'aux532' direct represents '3' with '-12593'
12590 12592 12594 -12593 0
c Encoding variable: aux533 with domain: int(0..4) (representing constraint (aux528 + aux530))
c Both direct and order encoding.
c Var 'aux533' order represents '0' with '12595'
c Var 'aux533' direct represents '0' with '12595'
c Var 'aux533' order represents '1' with '12596'
-12595 12596 0
c Var 'aux533' direct represents '1' with '12597'
12595 -12596 12597 0
-12597 12596 0
-12597 -12595 0
c Var 'aux533' order represents '2' with '12598'
-12596 12598 0
c Var 'aux533' direct represents '2' with '12599'
12596 -12598 12599 0
-12599 12598 0
-12599 -12596 0
c Var 'aux533' order represents '3' with '12600'
-12598 12600 0
c Var 'aux533' direct represents '3' with '12601'
12598 -12600 12601 0
-12601 12600 0
-12601 -12598 0
c Var 'aux533' direct represents '4' with '-12600'
12595 12597 12599 12601 -12600 0
c Encoding variable: aux534 with domain: int(0..2) (representing constraint ((field_00004_00002=3) + (field_00006_00002=3)))
c Both direct and order encoding.
c Var 'aux534' order represents '0' with '12602'
c Var 'aux534' direct represents '0' with '12602'
c Var 'aux534' order represents '1' with '12603'
-12602 12603 0
c Var 'aux534' direct represents '1' with '12604'
12602 -12603 12604 0
-12604 12603 0
-12604 -12602 0
c Var 'aux534' direct represents '2' with '-12603'
12602 12604 -12603 0
c Encoding variable: aux535 with domain: int(0..2) (representing constraint ((field_00001_00002=3) + (field_00009_00002=3)))
c Both direct and order encoding.
c Var 'aux535' order represents '0' with '12605'
c Var 'aux535' direct represents '0' with '12605'
c Var 'aux535' order represents '1' with '12606'
-12605 12606 0
c Var 'aux535' direct represents '1' with '12607'
12605 -12606 12607 0
-12607 12606 0
-12607 -12605 0
c Var 'aux535' direct represents '2' with '-12606'
12605 12607 -12606 0
c Encoding variable: aux536 with domain: int(0..2) (representing constraint ((field_00008_00002=3) + (field_00007_00002=3)))
c Both direct and order encoding.
c Var 'aux536' order represents '0' with '12608'
c Var 'aux536' direct represents '0' with '12608'
c Var 'aux536' order represents '1' with '12609'
-12608 12609 0
c Var 'aux536' direct represents '1' with '12610'
12608 -12609 12610 0
-12610 12609 0
-12610 -12608 0
c Var 'aux536' direct represents '2' with '-12609'
12608 12610 -12609 0
c Encoding variable: aux537 with domain: int(0..2) (representing constraint ((field_00003_00002=3) + (field_00005_00002=3)))
c Both direct and order encoding.
c Var 'aux537' order represents '0' with '12611'
c Var 'aux537' direct represents '0' with '12611'
c Var 'aux537' order represents '1' with '12612'
-12611 12612 0
c Var 'aux537' direct represents '1' with '12613'
12611 -12612 12613 0
-12613 12612 0
-12613 -12611 0
c Var 'aux537' direct represents '2' with '-12612'
12611 12613 -12612 0
c Encoding variable: aux538 with domain: int(0..3) (representing constraint ((field_00002_00002=3) + aux537))
c Both direct and order encoding.
c Var 'aux538' order represents '0' with '12614'
c Var 'aux538' direct represents '0' with '12614'
c Var 'aux538' order represents '1' with '12615'
-12614 12615 0
c Var 'aux538' direct represents '1' with '12616'
12614 -12615 12616 0
-12616 12615 0
-12616 -12614 0
c Var 'aux538' order represents '2' with '12617'
-12615 12617 0
c Var 'aux538' direct represents '2' with '12618'
12615 -12617 12618 0
-12618 12617 0
-12618 -12615 0
c Var 'aux538' direct represents '3' with '-12617'
12614 12616 12618 -12617 0
c Encoding variable: aux539 with domain: int(0..4) (representing constraint (aux534 + aux536))
c Both direct and order encoding.
c Var 'aux539' order represents '0' with '12619'
c Var 'aux539' direct represents '0' with '12619'
c Var 'aux539' order represents '1' with '12620'
-12619 12620 0
c Var 'aux539' direct represents '1' with '12621'
12619 -12620 12621 0
-12621 12620 0
-12621 -12619 0
c Var 'aux539' order represents '2' with '12622'
-12620 12622 0
c Var 'aux539' direct represents '2' with '12623'
12620 -12622 12623 0
-12623 12622 0
-12623 -12620 0
c Var 'aux539' order represents '3' with '12624'
-12622 12624 0
c Var 'aux539' direct represents '3' with '12625'
12622 -12624 12625 0
-12625 12624 0
-12625 -12622 0
c Var 'aux539' direct represents '4' with '-12624'
12619 12621 12623 12625 -12624 0
c Encoding variable: aux540 with domain: int(0..2) (representing constraint ((field_00004_00002=4) + (field_00006_00002=4)))
c Both direct and order encoding.
c Var 'aux540' order represents '0' with '12626'
c Var 'aux540' direct represents '0' with '12626'
c Var 'aux540' order represents '1' with '12627'
-12626 12627 0
c Var 'aux540' direct represents '1' with '12628'
12626 -12627 12628 0
-12628 12627 0
-12628 -12626 0
c Var 'aux540' direct represents '2' with '-12627'
12626 12628 -12627 0
c Encoding variable: aux541 with domain: int(0..2) (representing constraint ((field_00001_00002=4) + (field_00009_00002=4)))
c Both direct and order encoding.
c Var 'aux541' order represents '0' with '12629'
c Var 'aux541' direct represents '0' with '12629'
c Var 'aux541' order represents '1' with '12630'
-12629 12630 0
c Var 'aux541' direct represents '1' with '12631'
12629 -12630 12631 0
-12631 12630 0
-12631 -12629 0
c Var 'aux541' direct represents '2' with '-12630'
12629 12631 -12630 0
c Encoding variable: aux542 with domain: int(0..2) (representing constraint ((field_00008_00002=4) + (field_00007_00002=4)))
c Both direct and order encoding.
c Var 'aux542' order represents '0' with '12632'
c Var 'aux542' direct represents '0' with '12632'
c Var 'aux542' order represents '1' with '12633'
-12632 12633 0
c Var 'aux542' direct represents '1' with '12634'
12632 -12633 12634 0
-12634 12633 0
-12634 -12632 0
c Var 'aux542' direct represents '2' with '-12633'
12632 12634 -12633 0
c Encoding variable: aux543 with domain: int(0..2) (representing constraint ((field_00003_00002=4) + (field_00005_00002=4)))
c Both direct and order encoding.
c Var 'aux543' order represents '0' with '12635'
c Var 'aux543' direct represents '0' with '12635'
c Var 'aux543' order represents '1' with '12636'
-12635 12636 0
c Var 'aux543' direct represents '1' with '12637'
12635 -12636 12637 0
-12637 12636 0
-12637 -12635 0
c Var 'aux543' direct represents '2' with '-12636'
12635 12637 -12636 0
c Encoding variable: aux544 with domain: int(0..3) (representing constraint ((field_00002_00002=4) + aux543))
c Both direct and order encoding.
c Var 'aux544' order represents '0' with '12638'
c Var 'aux544' direct represents '0' with '12638'
c Var 'aux544' order represents '1' with '12639'
-12638 12639 0
c Var 'aux544' direct represents '1' with '12640'
12638 -12639 12640 0
-12640 12639 0
-12640 -12638 0
c Var 'aux544' order represents '2' with '12641'
-12639 12641 0
c Var 'aux544' direct represents '2' with '12642'
12639 -12641 12642 0
-12642 12641 0
-12642 -12639 0
c Var 'aux544' direct represents '3' with '-12641'
12638 12640 12642 -12641 0
c Encoding variable: aux545 with domain: int(0..4) (representing constraint (aux540 + aux542))
c Both direct and order encoding.
c Var 'aux545' order represents '0' with '12643'
c Var 'aux545' direct represents '0' with '12643'
c Var 'aux545' order represents '1' with '12644'
-12643 12644 0
c Var 'aux545' direct represents '1' with '12645'
12643 -12644 12645 0
-12645 12644 0
-12645 -12643 0
c Var 'aux545' order represents '2' with '12646'
-12644 12646 0
c Var 'aux545' direct represents '2' with '12647'
12644 -12646 12647 0
-12647 12646 0
-12647 -12644 0
c Var 'aux545' order represents '3' with '12648'
-12646 12648 0
c Var 'aux545' direct represents '3' with '12649'
12646 -12648 12649 0
-12649 12648 0
-12649 -12646 0
c Var 'aux545' direct represents '4' with '-12648'
12643 12645 12647 12649 -12648 0
c Encoding variable: aux546 with domain: int(0..2) (representing constraint ((field_00004_00002=5) + (field_00006_00002=5)))
c Both direct and order encoding.
c Var 'aux546' order represents '0' with '12650'
c Var 'aux546' direct represents '0' with '12650'
c Var 'aux546' order represents '1' with '12651'
-12650 12651 0
c Var 'aux546' direct represents '1' with '12652'
12650 -12651 12652 0
-12652 12651 0
-12652 -12650 0
c Var 'aux546' direct represents '2' with '-12651'
12650 12652 -12651 0
c Encoding variable: aux547 with domain: int(0..2) (representing constraint ((field_00001_00002=5) + (field_00009_00002=5)))
c Both direct and order encoding.
c Var 'aux547' order represents '0' with '12653'
c Var 'aux547' direct represents '0' with '12653'
c Var 'aux547' order represents '1' with '12654'
-12653 12654 0
c Var 'aux547' direct represents '1' with '12655'
12653 -12654 12655 0
-12655 12654 0
-12655 -12653 0
c Var 'aux547' direct represents '2' with '-12654'
12653 12655 -12654 0
c Encoding variable: aux548 with domain: int(0..2) (representing constraint ((field_00008_00002=5) + (field_00007_00002=5)))
c Both direct and order encoding.
c Var 'aux548' order represents '0' with '12656'
c Var 'aux548' direct represents '0' with '12656'
c Var 'aux548' order represents '1' with '12657'
-12656 12657 0
c Var 'aux548' direct represents '1' with '12658'
12656 -12657 12658 0
-12658 12657 0
-12658 -12656 0
c Var 'aux548' direct represents '2' with '-12657'
12656 12658 -12657 0
c Encoding variable: aux549 with domain: int(0..2) (representing constraint ((field_00003_00002=5) + (field_00005_00002=5)))
c Both direct and order encoding.
c Var 'aux549' order represents '0' with '12659'
c Var 'aux549' direct represents '0' with '12659'
c Var 'aux549' order represents '1' with '12660'
-12659 12660 0
c Var 'aux549' direct represents '1' with '12661'
12659 -12660 12661 0
-12661 12660 0
-12661 -12659 0
c Var 'aux549' direct represents '2' with '-12660'
12659 12661 -12660 0
c Encoding variable: aux550 with domain: int(0..3) (representing constraint ((field_00002_00002=5) + aux549))
c Both direct and order encoding.
c Var 'aux550' order represents '0' with '12662'
c Var 'aux550' direct represents '0' with '12662'
c Var 'aux550' order represents '1' with '12663'
-12662 12663 0
c Var 'aux550' direct represents '1' with '12664'
12662 -12663 12664 0
-12664 12663 0
-12664 -12662 0
c Var 'aux550' order represents '2' with '12665'
-12663 12665 0
c Var 'aux550' direct represents '2' with '12666'
12663 -12665 12666 0
-12666 12665 0
-12666 -12663 0
c Var 'aux550' direct represents '3' with '-12665'
12662 12664 12666 -12665 0
c Encoding variable: aux551 with domain: int(0..4) (representing constraint (aux546 + aux548))
c Both direct and order encoding.
c Var 'aux551' order represents '0' with '12667'
c Var 'aux551' direct represents '0' with '12667'
c Var 'aux551' order represents '1' with '12668'
-12667 12668 0
c Var 'aux551' direct represents '1' with '12669'
12667 -12668 12669 0
-12669 12668 0
-12669 -12667 0
c Var 'aux551' order represents '2' with '12670'
-12668 12670 0
c Var 'aux551' direct represents '2' with '12671'
12668 -12670 12671 0
-12671 12670 0
-12671 -12668 0
c Var 'aux551' order represents '3' with '12672'
-12670 12672 0
c Var 'aux551' direct represents '3' with '12673'
12670 -12672 12673 0
-12673 12672 0
-12673 -12670 0
c Var 'aux551' direct represents '4' with '-12672'
12667 12669 12671 12673 -12672 0
c Encoding variable: aux552 with domain: int(0..2) (representing constraint ((field_00004_00002=6) + (field_00006_00002=6)))
c Both direct and order encoding.
c Var 'aux552' order represents '0' with '12674'
c Var 'aux552' direct represents '0' with '12674'
c Var 'aux552' order represents '1' with '12675'
-12674 12675 0
c Var 'aux552' direct represents '1' with '12676'
12674 -12675 12676 0
-12676 12675 0
-12676 -12674 0
c Var 'aux552' direct represents '2' with '-12675'
12674 12676 -12675 0
c Encoding variable: aux553 with domain: int(0..2) (representing constraint ((field_00001_00002=6) + (field_00009_00002=6)))
c Both direct and order encoding.
c Var 'aux553' order represents '0' with '12677'
c Var 'aux553' direct represents '0' with '12677'
c Var 'aux553' order represents '1' with '12678'
-12677 12678 0
c Var 'aux553' direct represents '1' with '12679'
12677 -12678 12679 0
-12679 12678 0
-12679 -12677 0
c Var 'aux553' direct represents '2' with '-12678'
12677 12679 -12678 0
c Encoding variable: aux554 with domain: int(0..2) (representing constraint ((field_00008_00002=6) + (field_00007_00002=6)))
c Both direct and order encoding.
c Var 'aux554' order represents '0' with '12680'
c Var 'aux554' direct represents '0' with '12680'
c Var 'aux554' order represents '1' with '12681'
-12680 12681 0
c Var 'aux554' direct represents '1' with '12682'
12680 -12681 12682 0
-12682 12681 0
-12682 -12680 0
c Var 'aux554' direct represents '2' with '-12681'
12680 12682 -12681 0
c Encoding variable: aux555 with domain: int(0..2) (representing constraint ((field_00003_00002=6) + (field_00005_00002=6)))
c Both direct and order encoding.
c Var 'aux555' order represents '0' with '12683'
c Var 'aux555' direct represents '0' with '12683'
c Var 'aux555' order represents '1' with '12684'
-12683 12684 0
c Var 'aux555' direct represents '1' with '12685'
12683 -12684 12685 0
-12685 12684 0
-12685 -12683 0
c Var 'aux555' direct represents '2' with '-12684'
12683 12685 -12684 0
c Encoding variable: aux556 with domain: int(0..3) (representing constraint ((field_00002_00002=6) + aux555))
c Both direct and order encoding.
c Var 'aux556' order represents '0' with '12686'
c Var 'aux556' direct represents '0' with '12686'
c Var 'aux556' order represents '1' with '12687'
-12686 12687 0
c Var 'aux556' direct represents '1' with '12688'
12686 -12687 12688 0
-12688 12687 0
-12688 -12686 0
c Var 'aux556' order represents '2' with '12689'
-12687 12689 0
c Var 'aux556' direct represents '2' with '12690'
12687 -12689 12690 0
-12690 12689 0
-12690 -12687 0
c Var 'aux556' direct represents '3' with '-12689'
12686 12688 12690 -12689 0
c Encoding variable: aux557 with domain: int(0..4) (representing constraint (aux552 + aux554))
c Both direct and order encoding.
c Var 'aux557' order represents '0' with '12691'
c Var 'aux557' direct represents '0' with '12691'
c Var 'aux557' order represents '1' with '12692'
-12691 12692 0
c Var 'aux557' direct represents '1' with '12693'
12691 -12692 12693 0
-12693 12692 0
-12693 -12691 0
c Var 'aux557' order represents '2' with '12694'
-12692 12694 0
c Var 'aux557' direct represents '2' with '12695'
12692 -12694 12695 0
-12695 12694 0
-12695 -12692 0
c Var 'aux557' order represents '3' with '12696'
-12694 12696 0
c Var 'aux557' direct represents '3' with '12697'
12694 -12696 12697 0
-12697 12696 0
-12697 -12694 0
c Var 'aux557' direct represents '4' with '-12696'
12691 12693 12695 12697 -12696 0
c Encoding variable: aux558 with domain: int(0..2) (representing constraint ((field_00004_00002=7) + (field_00006_00002=7)))
c Both direct and order encoding.
c Var 'aux558' order represents '0' with '12698'
c Var 'aux558' direct represents '0' with '12698'
c Var 'aux558' order represents '1' with '12699'
-12698 12699 0
c Var 'aux558' direct represents '1' with '12700'
12698 -12699 12700 0
-12700 12699 0
-12700 -12698 0
c Var 'aux558' direct represents '2' with '-12699'
12698 12700 -12699 0
c Encoding variable: aux559 with domain: int(0..2) (representing constraint ((field_00001_00002=7) + (field_00009_00002=7)))
c Both direct and order encoding.
c Var 'aux559' order represents '0' with '12701'
c Var 'aux559' direct represents '0' with '12701'
c Var 'aux559' order represents '1' with '12702'
-12701 12702 0
c Var 'aux559' direct represents '1' with '12703'
12701 -12702 12703 0
-12703 12702 0
-12703 -12701 0
c Var 'aux559' direct represents '2' with '-12702'
12701 12703 -12702 0
c Encoding variable: aux560 with domain: int(0..2) (representing constraint ((field_00008_00002=7) + (field_00007_00002=7)))
c Both direct and order encoding.
c Var 'aux560' order represents '0' with '12704'
c Var 'aux560' direct represents '0' with '12704'
c Var 'aux560' order represents '1' with '12705'
-12704 12705 0
c Var 'aux560' direct represents '1' with '12706'
12704 -12705 12706 0
-12706 12705 0
-12706 -12704 0
c Var 'aux560' direct represents '2' with '-12705'
12704 12706 -12705 0
c Encoding variable: aux561 with domain: int(0..2) (representing constraint ((field_00003_00002=7) + (field_00005_00002=7)))
c Both direct and order encoding.
c Var 'aux561' order represents '0' with '12707'
c Var 'aux561' direct represents '0' with '12707'
c Var 'aux561' order represents '1' with '12708'
-12707 12708 0
c Var 'aux561' direct represents '1' with '12709'
12707 -12708 12709 0
-12709 12708 0
-12709 -12707 0
c Var 'aux561' direct represents '2' with '-12708'
12707 12709 -12708 0
c Encoding variable: aux562 with domain: int(0..3) (representing constraint ((field_00002_00002=7) + aux561))
c Both direct and order encoding.
c Var 'aux562' order represents '0' with '12710'
c Var 'aux562' direct represents '0' with '12710'
c Var 'aux562' order represents '1' with '12711'
-12710 12711 0
c Var 'aux562' direct represents '1' with '12712'
12710 -12711 12712 0
-12712 12711 0
-12712 -12710 0
c Var 'aux562' order represents '2' with '12713'
-12711 12713 0
c Var 'aux562' direct represents '2' with '12714'
12711 -12713 12714 0
-12714 12713 0
-12714 -12711 0
c Var 'aux562' direct represents '3' with '-12713'
12710 12712 12714 -12713 0
c Encoding variable: aux563 with domain: int(0..4) (representing constraint (aux558 + aux560))
c Both direct and order encoding.
c Var 'aux563' order represents '0' with '12715'
c Var 'aux563' direct represents '0' with '12715'
c Var 'aux563' order represents '1' with '12716'
-12715 12716 0
c Var 'aux563' direct represents '1' with '12717'
12715 -12716 12717 0
-12717 12716 0
-12717 -12715 0
c Var 'aux563' order represents '2' with '12718'
-12716 12718 0
c Var 'aux563' direct represents '2' with '12719'
12716 -12718 12719 0
-12719 12718 0
-12719 -12716 0
c Var 'aux563' order represents '3' with '12720'
-12718 12720 0
c Var 'aux563' direct represents '3' with '12721'
12718 -12720 12721 0
-12721 12720 0
-12721 -12718 0
c Var 'aux563' direct represents '4' with '-12720'
12715 12717 12719 12721 -12720 0
c Encoding variable: aux564 with domain: int(0..2) (representing constraint ((field_00004_00002=8) + (field_00006_00002=8)))
c Both direct and order encoding.
c Var 'aux564' order represents '0' with '12722'
c Var 'aux564' direct represents '0' with '12722'
c Var 'aux564' order represents '1' with '12723'
-12722 12723 0
c Var 'aux564' direct represents '1' with '12724'
12722 -12723 12724 0
-12724 12723 0
-12724 -12722 0
c Var 'aux564' direct represents '2' with '-12723'
12722 12724 -12723 0
c Encoding variable: aux565 with domain: int(0..2) (representing constraint ((field_00001_00002=8) + (field_00009_00002=8)))
c Both direct and order encoding.
c Var 'aux565' order represents '0' with '12725'
c Var 'aux565' direct represents '0' with '12725'
c Var 'aux565' order represents '1' with '12726'
-12725 12726 0
c Var 'aux565' direct represents '1' with '12727'
12725 -12726 12727 0
-12727 12726 0
-12727 -12725 0
c Var 'aux565' direct represents '2' with '-12726'
12725 12727 -12726 0
c Encoding variable: aux566 with domain: int(0..2) (representing constraint ((field_00008_00002=8) + (field_00007_00002=8)))
c Both direct and order encoding.
c Var 'aux566' order represents '0' with '12728'
c Var 'aux566' direct represents '0' with '12728'
c Var 'aux566' order represents '1' with '12729'
-12728 12729 0
c Var 'aux566' direct represents '1' with '12730'
12728 -12729 12730 0
-12730 12729 0
-12730 -12728 0
c Var 'aux566' direct represents '2' with '-12729'
12728 12730 -12729 0
c Encoding variable: aux567 with domain: int(0..2) (representing constraint ((field_00003_00002=8) + (field_00005_00002=8)))
c Both direct and order encoding.
c Var 'aux567' order represents '0' with '12731'
c Var 'aux567' direct represents '0' with '12731'
c Var 'aux567' order represents '1' with '12732'
-12731 12732 0
c Var 'aux567' direct represents '1' with '12733'
12731 -12732 12733 0
-12733 12732 0
-12733 -12731 0
c Var 'aux567' direct represents '2' with '-12732'
12731 12733 -12732 0
c Encoding variable: aux568 with domain: int(0..3) (representing constraint ((field_00002_00002=8) + aux567))
c Both direct and order encoding.
c Var 'aux568' order represents '0' with '12734'
c Var 'aux568' direct represents '0' with '12734'
c Var 'aux568' order represents '1' with '12735'
-12734 12735 0
c Var 'aux568' direct represents '1' with '12736'
12734 -12735 12736 0
-12736 12735 0
-12736 -12734 0
c Var 'aux568' order represents '2' with '12737'
-12735 12737 0
c Var 'aux568' direct represents '2' with '12738'
12735 -12737 12738 0
-12738 12737 0
-12738 -12735 0
c Var 'aux568' direct represents '3' with '-12737'
12734 12736 12738 -12737 0
c Encoding variable: aux569 with domain: int(0..4) (representing constraint (aux564 + aux566))
c Both direct and order encoding.
c Var 'aux569' order represents '0' with '12739'
c Var 'aux569' direct represents '0' with '12739'
c Var 'aux569' order represents '1' with '12740'
-12739 12740 0
c Var 'aux569' direct represents '1' with '12741'
12739 -12740 12741 0
-12741 12740 0
-12741 -12739 0
c Var 'aux569' order represents '2' with '12742'
-12740 12742 0
c Var 'aux569' direct represents '2' with '12743'
12740 -12742 12743 0
-12743 12742 0
-12743 -12740 0
c Var 'aux569' order represents '3' with '12744'
-12742 12744 0
c Var 'aux569' direct represents '3' with '12745'
12742 -12744 12745 0
-12745 12744 0
-12745 -12742 0
c Var 'aux569' direct represents '4' with '-12744'
12739 12741 12743 12745 -12744 0
c Encoding variable: aux570 with domain: int(0..2) (representing constraint ((field_00004_00002=9) + (field_00006_00002=9)))
c Both direct and order encoding.
c Var 'aux570' order represents '0' with '12746'
c Var 'aux570' direct represents '0' with '12746'
c Var 'aux570' order represents '1' with '12747'
-12746 12747 0
c Var 'aux570' direct represents '1' with '12748'
12746 -12747 12748 0
-12748 12747 0
-12748 -12746 0
c Var 'aux570' direct represents '2' with '-12747'
12746 12748 -12747 0
c Encoding variable: aux571 with domain: int(0..2) (representing constraint ((field_00001_00002=9) + (field_00009_00002=9)))
c Both direct and order encoding.
c Var 'aux571' order represents '0' with '12749'
c Var 'aux571' direct represents '0' with '12749'
c Var 'aux571' order represents '1' with '12750'
-12749 12750 0
c Var 'aux571' direct represents '1' with '12751'
12749 -12750 12751 0
-12751 12750 0
-12751 -12749 0
c Var 'aux571' direct represents '2' with '-12750'
12749 12751 -12750 0
c Encoding variable: aux572 with domain: int(0..2) (representing constraint ((field_00008_00002=9) + (field_00007_00002=9)))
c Both direct and order encoding.
c Var 'aux572' order represents '0' with '12752'
c Var 'aux572' direct represents '0' with '12752'
c Var 'aux572' order represents '1' with '12753'
-12752 12753 0
c Var 'aux572' direct represents '1' with '12754'
12752 -12753 12754 0
-12754 12753 0
-12754 -12752 0
c Var 'aux572' direct represents '2' with '-12753'
12752 12754 -12753 0
c Encoding variable: aux573 with domain: int(0..2) (representing constraint ((field_00003_00002=9) + (field_00005_00002=9)))
c Both direct and order encoding.
c Var 'aux573' order represents '0' with '12755'
c Var 'aux573' direct represents '0' with '12755'
c Var 'aux573' order represents '1' with '12756'
-12755 12756 0
c Var 'aux573' direct represents '1' with '12757'
12755 -12756 12757 0
-12757 12756 0
-12757 -12755 0
c Var 'aux573' direct represents '2' with '-12756'
12755 12757 -12756 0
c Encoding variable: aux574 with domain: int(0..3) (representing constraint ((field_00002_00002=9) + aux573))
c Both direct and order encoding.
c Var 'aux574' order represents '0' with '12758'
c Var 'aux574' direct represents '0' with '12758'
c Var 'aux574' order represents '1' with '12759'
-12758 12759 0
c Var 'aux574' direct represents '1' with '12760'
12758 -12759 12760 0
-12760 12759 0
-12760 -12758 0
c Var 'aux574' order represents '2' with '12761'
-12759 12761 0
c Var 'aux574' direct represents '2' with '12762'
12759 -12761 12762 0
-12762 12761 0
-12762 -12759 0
c Var 'aux574' direct represents '3' with '-12761'
12758 12760 12762 -12761 0
c Encoding variable: aux575 with domain: int(0..4) (representing constraint (aux570 + aux572))
c Both direct and order encoding.
c Var 'aux575' order represents '0' with '12763'
c Var 'aux575' direct represents '0' with '12763'
c Var 'aux575' order represents '1' with '12764'
-12763 12764 0
c Var 'aux575' direct represents '1' with '12765'
12763 -12764 12765 0
-12765 12764 0
-12765 -12763 0
c Var 'aux575' order represents '2' with '12766'
-12764 12766 0
c Var 'aux575' direct represents '2' with '12767'
12764 -12766 12767 0
-12767 12766 0
-12767 -12764 0
c Var 'aux575' order represents '3' with '12768'
-12766 12768 0
c Var 'aux575' direct represents '3' with '12769'
12766 -12768 12769 0
-12769 12768 0
-12769 -12766 0
c Var 'aux575' direct represents '4' with '-12768'
12763 12765 12767 12769 -12768 0
c Encoding variable: aux576 with domain: int(0..2) (representing constraint ((field_00004_00003=1) + (field_00006_00003=1)))
c Both direct and order encoding.
c Var 'aux576' order represents '0' with '12770'
c Var 'aux576' direct represents '0' with '12770'
c Var 'aux576' order represents '1' with '12771'
-12770 12771 0
c Var 'aux576' direct represents '1' with '12772'
12770 -12771 12772 0
-12772 12771 0
-12772 -12770 0
c Var 'aux576' direct represents '2' with '-12771'
12770 12772 -12771 0
c Encoding variable: aux577 with domain: int(0..2) (representing constraint ((field_00001_00003=1) + (field_00009_00003=1)))
c Both direct and order encoding.
c Var 'aux577' order represents '0' with '12773'
c Var 'aux577' direct represents '0' with '12773'
c Var 'aux577' order represents '1' with '12774'
-12773 12774 0
c Var 'aux577' direct represents '1' with '12775'
12773 -12774 12775 0
-12775 12774 0
-12775 -12773 0
c Var 'aux577' direct represents '2' with '-12774'
12773 12775 -12774 0
c Encoding variable: aux578 with domain: int(0..2) (representing constraint ((field_00008_00003=1) + (field_00007_00003=1)))
c Both direct and order encoding.
c Var 'aux578' order represents '0' with '12776'
c Var 'aux578' direct represents '0' with '12776'
c Var 'aux578' order represents '1' with '12777'
-12776 12777 0
c Var 'aux578' direct represents '1' with '12778'
12776 -12777 12778 0
-12778 12777 0
-12778 -12776 0
c Var 'aux578' direct represents '2' with '-12777'
12776 12778 -12777 0
c Encoding variable: aux579 with domain: int(0..2) (representing constraint ((field_00003_00003=1) + (field_00005_00003=1)))
c Both direct and order encoding.
c Var 'aux579' order represents '0' with '12779'
c Var 'aux579' direct represents '0' with '12779'
c Var 'aux579' order represents '1' with '12780'
-12779 12780 0
c Var 'aux579' direct represents '1' with '12781'
12779 -12780 12781 0
-12781 12780 0
-12781 -12779 0
c Var 'aux579' direct represents '2' with '-12780'
12779 12781 -12780 0
c Encoding variable: aux580 with domain: int(0..3) (representing constraint ((field_00002_00003=1) + aux579))
c Both direct and order encoding.
c Var 'aux580' order represents '0' with '12782'
c Var 'aux580' direct represents '0' with '12782'
c Var 'aux580' order represents '1' with '12783'
-12782 12783 0
c Var 'aux580' direct represents '1' with '12784'
12782 -12783 12784 0
-12784 12783 0
-12784 -12782 0
c Var 'aux580' order represents '2' with '12785'
-12783 12785 0
c Var 'aux580' direct represents '2' with '12786'
12783 -12785 12786 0
-12786 12785 0
-12786 -12783 0
c Var 'aux580' direct represents '3' with '-12785'
12782 12784 12786 -12785 0
c Encoding variable: aux581 with domain: int(0..4) (representing constraint (aux576 + aux578))
c Both direct and order encoding.
c Var 'aux581' order represents '0' with '12787'
c Var 'aux581' direct represents '0' with '12787'
c Var 'aux581' order represents '1' with '12788'
-12787 12788 0
c Var 'aux581' direct represents '1' with '12789'
12787 -12788 12789 0
-12789 12788 0
-12789 -12787 0
c Var 'aux581' order represents '2' with '12790'
-12788 12790 0
c Var 'aux581' direct represents '2' with '12791'
12788 -12790 12791 0
-12791 12790 0
-12791 -12788 0
c Var 'aux581' order represents '3' with '12792'
-12790 12792 0
c Var 'aux581' direct represents '3' with '12793'
12790 -12792 12793 0
-12793 12792 0
-12793 -12790 0
c Var 'aux581' direct represents '4' with '-12792'
12787 12789 12791 12793 -12792 0
c Encoding variable: aux582 with domain: int(0..2) (representing constraint ((field_00004_00003=2) + (field_00006_00003=2)))
c Both direct and order encoding.
c Var 'aux582' order represents '0' with '12794'
c Var 'aux582' direct represents '0' with '12794'
c Var 'aux582' order represents '1' with '12795'
-12794 12795 0
c Var 'aux582' direct represents '1' with '12796'
12794 -12795 12796 0
-12796 12795 0
-12796 -12794 0
c Var 'aux582' direct represents '2' with '-12795'
12794 12796 -12795 0
c Encoding variable: aux583 with domain: int(0..2) (representing constraint ((field_00001_00003=2) + (field_00009_00003=2)))
c Both direct and order encoding.
c Var 'aux583' order represents '0' with '12797'
c Var 'aux583' direct represents '0' with '12797'
c Var 'aux583' order represents '1' with '12798'
-12797 12798 0
c Var 'aux583' direct represents '1' with '12799'
12797 -12798 12799 0
-12799 12798 0
-12799 -12797 0
c Var 'aux583' direct represents '2' with '-12798'
12797 12799 -12798 0
c Encoding variable: aux584 with domain: int(0..2) (representing constraint ((field_00008_00003=2) + (field_00007_00003=2)))
c Both direct and order encoding.
c Var 'aux584' order represents '0' with '12800'
c Var 'aux584' direct represents '0' with '12800'
c Var 'aux584' order represents '1' with '12801'
-12800 12801 0
c Var 'aux584' direct represents '1' with '12802'
12800 -12801 12802 0
-12802 12801 0
-12802 -12800 0
c Var 'aux584' direct represents '2' with '-12801'
12800 12802 -12801 0
c Encoding variable: aux585 with domain: int(0..2) (representing constraint ((field_00003_00003=2) + (field_00005_00003=2)))
c Both direct and order encoding.
c Var 'aux585' order represents '0' with '12803'
c Var 'aux585' direct represents '0' with '12803'
c Var 'aux585' order represents '1' with '12804'
-12803 12804 0
c Var 'aux585' direct represents '1' with '12805'
12803 -12804 12805 0
-12805 12804 0
-12805 -12803 0
c Var 'aux585' direct represents '2' with '-12804'
12803 12805 -12804 0
c Encoding variable: aux586 with domain: int(0..3) (representing constraint ((field_00002_00003=2) + aux585))
c Both direct and order encoding.
c Var 'aux586' order represents '0' with '12806'
c Var 'aux586' direct represents '0' with '12806'
c Var 'aux586' order represents '1' with '12807'
-12806 12807 0
c Var 'aux586' direct represents '1' with '12808'
12806 -12807 12808 0
-12808 12807 0
-12808 -12806 0
c Var 'aux586' order represents '2' with '12809'
-12807 12809 0
c Var 'aux586' direct represents '2' with '12810'
12807 -12809 12810 0
-12810 12809 0
-12810 -12807 0
c Var 'aux586' direct represents '3' with '-12809'
12806 12808 12810 -12809 0
c Encoding variable: aux587 with domain: int(0..4) (representing constraint (aux582 + aux584))
c Both direct and order encoding.
c Var 'aux587' order represents '0' with '12811'
c Var 'aux587' direct represents '0' with '12811'
c Var 'aux587' order represents '1' with '12812'
-12811 12812 0
c Var 'aux587' direct represents '1' with '12813'
12811 -12812 12813 0
-12813 12812 0
-12813 -12811 0
c Var 'aux587' order represents '2' with '12814'
-12812 12814 0
c Var 'aux587' direct represents '2' with '12815'
12812 -12814 12815 0
-12815 12814 0
-12815 -12812 0
c Var 'aux587' order represents '3' with '12816'
-12814 12816 0
c Var 'aux587' direct represents '3' with '12817'
12814 -12816 12817 0
-12817 12816 0
-12817 -12814 0
c Var 'aux587' direct represents '4' with '-12816'
12811 12813 12815 12817 -12816 0
c Encoding variable: aux588 with domain: int(0..2) (representing constraint ((field_00004_00003=3) + (field_00006_00003=3)))
c Both direct and order encoding.
c Var 'aux588' order represents '0' with '12818'
c Var 'aux588' direct represents '0' with '12818'
c Var 'aux588' order represents '1' with '12819'
-12818 12819 0
c Var 'aux588' direct represents '1' with '12820'
12818 -12819 12820 0
-12820 12819 0
-12820 -12818 0
c Var 'aux588' direct represents '2' with '-12819'
12818 12820 -12819 0
c Encoding variable: aux589 with domain: int(0..2) (representing constraint ((field_00001_00003=3) + (field_00009_00003=3)))
c Both direct and order encoding.
c Var 'aux589' order represents '0' with '12821'
c Var 'aux589' direct represents '0' with '12821'
c Var 'aux589' order represents '1' with '12822'
-12821 12822 0
c Var 'aux589' direct represents '1' with '12823'
12821 -12822 12823 0
-12823 12822 0
-12823 -12821 0
c Var 'aux589' direct represents '2' with '-12822'
12821 12823 -12822 0
c Encoding variable: aux590 with domain: int(0..2) (representing constraint ((field_00008_00003=3) + (field_00007_00003=3)))
c Both direct and order encoding.
c Var 'aux590' order represents '0' with '12824'
c Var 'aux590' direct represents '0' with '12824'
c Var 'aux590' order represents '1' with '12825'
-12824 12825 0
c Var 'aux590' direct represents '1' with '12826'
12824 -12825 12826 0
-12826 12825 0
-12826 -12824 0
c Var 'aux590' direct represents '2' with '-12825'
12824 12826 -12825 0
c Encoding variable: aux591 with domain: int(0..2) (representing constraint ((field_00003_00003=3) + (field_00005_00003=3)))
c Both direct and order encoding.
c Var 'aux591' order represents '0' with '12827'
c Var 'aux591' direct represents '0' with '12827'
c Var 'aux591' order represents '1' with '12828'
-12827 12828 0
c Var 'aux591' direct represents '1' with '12829'
12827 -12828 12829 0
-12829 12828 0
-12829 -12827 0
c Var 'aux591' direct represents '2' with '-12828'
12827 12829 -12828 0
c Encoding variable: aux592 with domain: int(0..3) (representing constraint ((field_00002_00003=3) + aux591))
c Both direct and order encoding.
c Var 'aux592' order represents '0' with '12830'
c Var 'aux592' direct represents '0' with '12830'
c Var 'aux592' order represents '1' with '12831'
-12830 12831 0
c Var 'aux592' direct represents '1' with '12832'
12830 -12831 12832 0
-12832 12831 0
-12832 -12830 0
c Var 'aux592' order represents '2' with '12833'
-12831 12833 0
c Var 'aux592' direct represents '2' with '12834'
12831 -12833 12834 0
-12834 12833 0
-12834 -12831 0
c Var 'aux592' direct represents '3' with '-12833'
12830 12832 12834 -12833 0
c Encoding variable: aux593 with domain: int(0..4) (representing constraint (aux588 + aux590))
c Both direct and order encoding.
c Var 'aux593' order represents '0' with '12835'
c Var 'aux593' direct represents '0' with '12835'
c Var 'aux593' order represents '1' with '12836'
-12835 12836 0
c Var 'aux593' direct represents '1' with '12837'
12835 -12836 12837 0
-12837 12836 0
-12837 -12835 0
c Var 'aux593' order represents '2' with '12838'
-12836 12838 0
c Var 'aux593' direct represents '2' with '12839'
12836 -12838 12839 0
-12839 12838 0
-12839 -12836 0
c Var 'aux593' order represents '3' with '12840'
-12838 12840 0
c Var 'aux593' direct represents '3' with '12841'
12838 -12840 12841 0
-12841 12840 0
-12841 -12838 0
c Var 'aux593' direct represents '4' with '-12840'
12835 12837 12839 12841 -12840 0
c Encoding variable: aux594 with domain: int(0..2) (representing constraint ((field_00004_00003=4) + (field_00006_00003=4)))
c Both direct and order encoding.
c Var 'aux594' order represents '0' with '12842'
c Var 'aux594' direct represents '0' with '12842'
c Var 'aux594' order represents '1' with '12843'
-12842 12843 0
c Var 'aux594' direct represents '1' with '12844'
12842 -12843 12844 0
-12844 12843 0
-12844 -12842 0
c Var 'aux594' direct represents '2' with '-12843'
12842 12844 -12843 0
c Encoding variable: aux595 with domain: int(0..2) (representing constraint ((field_00001_00003=4) + (field_00009_00003=4)))
c Both direct and order encoding.
c Var 'aux595' order represents '0' with '12845'
c Var 'aux595' direct represents '0' with '12845'
c Var 'aux595' order represents '1' with '12846'
-12845 12846 0
c Var 'aux595' direct represents '1' with '12847'
12845 -12846 12847 0
-12847 12846 0
-12847 -12845 0
c Var 'aux595' direct represents '2' with '-12846'
12845 12847 -12846 0
c Encoding variable: aux596 with domain: int(0..2) (representing constraint ((field_00008_00003=4) + (field_00007_00003=4)))
c Both direct and order encoding.
c Var 'aux596' order represents '0' with '12848'
c Var 'aux596' direct represents '0' with '12848'
c Var 'aux596' order represents '1' with '12849'
-12848 12849 0
c Var 'aux596' direct represents '1' with '12850'
12848 -12849 12850 0
-12850 12849 0
-12850 -12848 0
c Var 'aux596' direct represents '2' with '-12849'
12848 12850 -12849 0
c Encoding variable: aux597 with domain: int(0..2) (representing constraint ((field_00003_00003=4) + (field_00005_00003=4)))
c Both direct and order encoding.
c Var 'aux597' order represents '0' with '12851'
c Var 'aux597' direct represents '0' with '12851'
c Var 'aux597' order represents '1' with '12852'
-12851 12852 0
c Var 'aux597' direct represents '1' with '12853'
12851 -12852 12853 0
-12853 12852 0
-12853 -12851 0
c Var 'aux597' direct represents '2' with '-12852'
12851 12853 -12852 0
c Encoding variable: aux598 with domain: int(0..3) (representing constraint ((field_00002_00003=4) + aux597))
c Both direct and order encoding.
c Var 'aux598' order represents '0' with '12854'
c Var 'aux598' direct represents '0' with '12854'
c Var 'aux598' order represents '1' with '12855'
-12854 12855 0
c Var 'aux598' direct represents '1' with '12856'
12854 -12855 12856 0
-12856 12855 0
-12856 -12854 0
c Var 'aux598' order represents '2' with '12857'
-12855 12857 0
c Var 'aux598' direct represents '2' with '12858'
12855 -12857 12858 0
-12858 12857 0
-12858 -12855 0
c Var 'aux598' direct represents '3' with '-12857'
12854 12856 12858 -12857 0
c Encoding variable: aux599 with domain: int(0..4) (representing constraint (aux594 + aux596))
c Both direct and order encoding.
c Var 'aux599' order represents '0' with '12859'
c Var 'aux599' direct represents '0' with '12859'
c Var 'aux599' order represents '1' with '12860'
-12859 12860 0
c Var 'aux599' direct represents '1' with '12861'
12859 -12860 12861 0
-12861 12860 0
-12861 -12859 0
c Var 'aux599' order represents '2' with '12862'
-12860 12862 0
c Var 'aux599' direct represents '2' with '12863'
12860 -12862 12863 0
-12863 12862 0
-12863 -12860 0
c Var 'aux599' order represents '3' with '12864'
-12862 12864 0
c Var 'aux599' direct represents '3' with '12865'
12862 -12864 12865 0
-12865 12864 0
-12865 -12862 0
c Var 'aux599' direct represents '4' with '-12864'
12859 12861 12863 12865 -12864 0
c Encoding variable: aux600 with domain: int(0..2) (representing constraint ((field_00004_00003=5) + (field_00006_00003=5)))
c Both direct and order encoding.
c Var 'aux600' order represents '0' with '12866'
c Var 'aux600' direct represents '0' with '12866'
c Var 'aux600' order represents '1' with '12867'
-12866 12867 0
c Var 'aux600' direct represents '1' with '12868'
12866 -12867 12868 0
-12868 12867 0
-12868 -12866 0
c Var 'aux600' direct represents '2' with '-12867'
12866 12868 -12867 0
c Encoding variable: aux601 with domain: int(0..2) (representing constraint ((field_00001_00003=5) + (field_00009_00003=5)))
c Both direct and order encoding.
c Var 'aux601' order represents '0' with '12869'
c Var 'aux601' direct represents '0' with '12869'
c Var 'aux601' order represents '1' with '12870'
-12869 12870 0
c Var 'aux601' direct represents '1' with '12871'
12869 -12870 12871 0
-12871 12870 0
-12871 -12869 0
c Var 'aux601' direct represents '2' with '-12870'
12869 12871 -12870 0
c Encoding variable: aux602 with domain: int(0..2) (representing constraint ((field_00008_00003=5) + (field_00007_00003=5)))
c Both direct and order encoding.
c Var 'aux602' order represents '0' with '12872'
c Var 'aux602' direct represents '0' with '12872'
c Var 'aux602' order represents '1' with '12873'
-12872 12873 0
c Var 'aux602' direct represents '1' with '12874'
12872 -12873 12874 0
-12874 12873 0
-12874 -12872 0
c Var 'aux602' direct represents '2' with '-12873'
12872 12874 -12873 0
c Encoding variable: aux603 with domain: int(0..2) (representing constraint ((field_00003_00003=5) + (field_00005_00003=5)))
c Both direct and order encoding.
c Var 'aux603' order represents '0' with '12875'
c Var 'aux603' direct represents '0' with '12875'
c Var 'aux603' order represents '1' with '12876'
-12875 12876 0
c Var 'aux603' direct represents '1' with '12877'
12875 -12876 12877 0
-12877 12876 0
-12877 -12875 0
c Var 'aux603' direct represents '2' with '-12876'
12875 12877 -12876 0
c Encoding variable: aux604 with domain: int(0..3) (representing constraint ((field_00002_00003=5) + aux603))
c Both direct and order encoding.
c Var 'aux604' order represents '0' with '12878'
c Var 'aux604' direct represents '0' with '12878'
c Var 'aux604' order represents '1' with '12879'
-12878 12879 0
c Var 'aux604' direct represents '1' with '12880'
12878 -12879 12880 0
-12880 12879 0
-12880 -12878 0
c Var 'aux604' order represents '2' with '12881'
-12879 12881 0
c Var 'aux604' direct represents '2' with '12882'
12879 -12881 12882 0
-12882 12881 0
-12882 -12879 0
c Var 'aux604' direct represents '3' with '-12881'
12878 12880 12882 -12881 0
c Encoding variable: aux605 with domain: int(0..4) (representing constraint (aux600 + aux602))
c Both direct and order encoding.
c Var 'aux605' order represents '0' with '12883'
c Var 'aux605' direct represents '0' with '12883'
c Var 'aux605' order represents '1' with '12884'
-12883 12884 0
c Var 'aux605' direct represents '1' with '12885'
12883 -12884 12885 0
-12885 12884 0
-12885 -12883 0
c Var 'aux605' order represents '2' with '12886'
-12884 12886 0
c Var 'aux605' direct represents '2' with '12887'
12884 -12886 12887 0
-12887 12886 0
-12887 -12884 0
c Var 'aux605' order represents '3' with '12888'
-12886 12888 0
c Var 'aux605' direct represents '3' with '12889'
12886 -12888 12889 0
-12889 12888 0
-12889 -12886 0
c Var 'aux605' direct represents '4' with '-12888'
12883 12885 12887 12889 -12888 0
c Encoding variable: aux606 with domain: int(0..2) (representing constraint ((field_00004_00003=6) + (field_00006_00003=6)))
c Both direct and order encoding.
c Var 'aux606' order represents '0' with '12890'
c Var 'aux606' direct represents '0' with '12890'
c Var 'aux606' order represents '1' with '12891'
-12890 12891 0
c Var 'aux606' direct represents '1' with '12892'
12890 -12891 12892 0
-12892 12891 0
-12892 -12890 0
c Var 'aux606' direct represents '2' with '-12891'
12890 12892 -12891 0
c Encoding variable: aux607 with domain: int(0..2) (representing constraint ((field_00001_00003=6) + (field_00009_00003=6)))
c Both direct and order encoding.
c Var 'aux607' order represents '0' with '12893'
c Var 'aux607' direct represents '0' with '12893'
c Var 'aux607' order represents '1' with '12894'
-12893 12894 0
c Var 'aux607' direct represents '1' with '12895'
12893 -12894 12895 0
-12895 12894 0
-12895 -12893 0
c Var 'aux607' direct represents '2' with '-12894'
12893 12895 -12894 0
c Encoding variable: aux608 with domain: int(0..2) (representing constraint ((field_00008_00003=6) + (field_00007_00003=6)))
c Both direct and order encoding.
c Var 'aux608' order represents '0' with '12896'
c Var 'aux608' direct represents '0' with '12896'
c Var 'aux608' order represents '1' with '12897'
-12896 12897 0
c Var 'aux608' direct represents '1' with '12898'
12896 -12897 12898 0
-12898 12897 0
-12898 -12896 0
c Var 'aux608' direct represents '2' with '-12897'
12896 12898 -12897 0
c Encoding variable: aux609 with domain: int(0..2) (representing constraint ((field_00003_00003=6) + (field_00005_00003=6)))
c Both direct and order encoding.
c Var 'aux609' order represents '0' with '12899'
c Var 'aux609' direct represents '0' with '12899'
c Var 'aux609' order represents '1' with '12900'
-12899 12900 0
c Var 'aux609' direct represents '1' with '12901'
12899 -12900 12901 0
-12901 12900 0
-12901 -12899 0
c Var 'aux609' direct represents '2' with '-12900'
12899 12901 -12900 0
c Encoding variable: aux610 with domain: int(0..3) (representing constraint ((field_00002_00003=6) + aux609))
c Both direct and order encoding.
c Var 'aux610' order represents '0' with '12902'
c Var 'aux610' direct represents '0' with '12902'
c Var 'aux610' order represents '1' with '12903'
-12902 12903 0
c Var 'aux610' direct represents '1' with '12904'
12902 -12903 12904 0
-12904 12903 0
-12904 -12902 0
c Var 'aux610' order represents '2' with '12905'
-12903 12905 0
c Var 'aux610' direct represents '2' with '12906'
12903 -12905 12906 0
-12906 12905 0
-12906 -12903 0
c Var 'aux610' direct represents '3' with '-12905'
12902 12904 12906 -12905 0
c Encoding variable: aux611 with domain: int(0..4) (representing constraint (aux606 + aux608))
c Both direct and order encoding.
c Var 'aux611' order represents '0' with '12907'
c Var 'aux611' direct represents '0' with '12907'
c Var 'aux611' order represents '1' with '12908'
-12907 12908 0
c Var 'aux611' direct represents '1' with '12909'
12907 -12908 12909 0
-12909 12908 0
-12909 -12907 0
c Var 'aux611' order represents '2' with '12910'
-12908 12910 0
c Var 'aux611' direct represents '2' with '12911'
12908 -12910 12911 0
-12911 12910 0
-12911 -12908 0
c Var 'aux611' order represents '3' with '12912'
-12910 12912 0
c Var 'aux611' direct represents '3' with '12913'
12910 -12912 12913 0
-12913 12912 0
-12913 -12910 0
c Var 'aux611' direct represents '4' with '-12912'
12907 12909 12911 12913 -12912 0
c Encoding variable: aux612 with domain: int(0..2) (representing constraint ((field_00004_00003=7) + (field_00006_00003=7)))
c Both direct and order encoding.
c Var 'aux612' order represents '0' with '12914'
c Var 'aux612' direct represents '0' with '12914'
c Var 'aux612' order represents '1' with '12915'
-12914 12915 0
c Var 'aux612' direct represents '1' with '12916'
12914 -12915 12916 0
-12916 12915 0
-12916 -12914 0
c Var 'aux612' direct represents '2' with '-12915'
12914 12916 -12915 0
c Encoding variable: aux613 with domain: int(0..2) (representing constraint ((field_00001_00003=7) + (field_00009_00003=7)))
c Both direct and order encoding.
c Var 'aux613' order represents '0' with '12917'
c Var 'aux613' direct represents '0' with '12917'
c Var 'aux613' order represents '1' with '12918'
-12917 12918 0
c Var 'aux613' direct represents '1' with '12919'
12917 -12918 12919 0
-12919 12918 0
-12919 -12917 0
c Var 'aux613' direct represents '2' with '-12918'
12917 12919 -12918 0
c Encoding variable: aux614 with domain: int(0..2) (representing constraint ((field_00008_00003=7) + (field_00007_00003=7)))
c Both direct and order encoding.
c Var 'aux614' order represents '0' with '12920'
c Var 'aux614' direct represents '0' with '12920'
c Var 'aux614' order represents '1' with '12921'
-12920 12921 0
c Var 'aux614' direct represents '1' with '12922'
12920 -12921 12922 0
-12922 12921 0
-12922 -12920 0
c Var 'aux614' direct represents '2' with '-12921'
12920 12922 -12921 0
c Encoding variable: aux615 with domain: int(0..2) (representing constraint ((field_00003_00003=7) + (field_00005_00003=7)))
c Both direct and order encoding.
c Var 'aux615' order represents '0' with '12923'
c Var 'aux615' direct represents '0' with '12923'
c Var 'aux615' order represents '1' with '12924'
-12923 12924 0
c Var 'aux615' direct represents '1' with '12925'
12923 -12924 12925 0
-12925 12924 0
-12925 -12923 0
c Var 'aux615' direct represents '2' with '-12924'
12923 12925 -12924 0
c Encoding variable: aux616 with domain: int(0..3) (representing constraint ((field_00002_00003=7) + aux615))
c Both direct and order encoding.
c Var 'aux616' order represents '0' with '12926'
c Var 'aux616' direct represents '0' with '12926'
c Var 'aux616' order represents '1' with '12927'
-12926 12927 0
c Var 'aux616' direct represents '1' with '12928'
12926 -12927 12928 0
-12928 12927 0
-12928 -12926 0
c Var 'aux616' order represents '2' with '12929'
-12927 12929 0
c Var 'aux616' direct represents '2' with '12930'
12927 -12929 12930 0
-12930 12929 0
-12930 -12927 0
c Var 'aux616' direct represents '3' with '-12929'
12926 12928 12930 -12929 0
c Encoding variable: aux617 with domain: int(0..4) (representing constraint (aux612 + aux614))
c Both direct and order encoding.
c Var 'aux617' order represents '0' with '12931'
c Var 'aux617' direct represents '0' with '12931'
c Var 'aux617' order represents '1' with '12932'
-12931 12932 0
c Var 'aux617' direct represents '1' with '12933'
12931 -12932 12933 0
-12933 12932 0
-12933 -12931 0
c Var 'aux617' order represents '2' with '12934'
-12932 12934 0
c Var 'aux617' direct represents '2' with '12935'
12932 -12934 12935 0
-12935 12934 0
-12935 -12932 0
c Var 'aux617' order represents '3' with '12936'
-12934 12936 0
c Var 'aux617' direct represents '3' with '12937'
12934 -12936 12937 0
-12937 12936 0
-12937 -12934 0
c Var 'aux617' direct represents '4' with '-12936'
12931 12933 12935 12937 -12936 0
c Encoding variable: aux618 with domain: int(0..2) (representing constraint ((field_00004_00003=8) + (field_00006_00003=8)))
c Both direct and order encoding.
c Var 'aux618' order represents '0' with '12938'
c Var 'aux618' direct represents '0' with '12938'
c Var 'aux618' order represents '1' with '12939'
-12938 12939 0
c Var 'aux618' direct represents '1' with '12940'
12938 -12939 12940 0
-12940 12939 0
-12940 -12938 0
c Var 'aux618' direct represents '2' with '-12939'
12938 12940 -12939 0
c Encoding variable: aux619 with domain: int(0..2) (representing constraint ((field_00001_00003=8) + (field_00009_00003=8)))
c Both direct and order encoding.
c Var 'aux619' order represents '0' with '12941'
c Var 'aux619' direct represents '0' with '12941'
c Var 'aux619' order represents '1' with '12942'
-12941 12942 0
c Var 'aux619' direct represents '1' with '12943'
12941 -12942 12943 0
-12943 12942 0
-12943 -12941 0
c Var 'aux619' direct represents '2' with '-12942'
12941 12943 -12942 0
c Encoding variable: aux620 with domain: int(0..2) (representing constraint ((field_00008_00003=8) + (field_00007_00003=8)))
c Both direct and order encoding.
c Var 'aux620' order represents '0' with '12944'
c Var 'aux620' direct represents '0' with '12944'
c Var 'aux620' order represents '1' with '12945'
-12944 12945 0
c Var 'aux620' direct represents '1' with '12946'
12944 -12945 12946 0
-12946 12945 0
-12946 -12944 0
c Var 'aux620' direct represents '2' with '-12945'
12944 12946 -12945 0
c Encoding variable: aux621 with domain: int(0..2) (representing constraint ((field_00003_00003=8) + (field_00005_00003=8)))
c Both direct and order encoding.
c Var 'aux621' order represents '0' with '12947'
c Var 'aux621' direct represents '0' with '12947'
c Var 'aux621' order represents '1' with '12948'
-12947 12948 0
c Var 'aux621' direct represents '1' with '12949'
12947 -12948 12949 0
-12949 12948 0
-12949 -12947 0
c Var 'aux621' direct represents '2' with '-12948'
12947 12949 -12948 0
c Encoding variable: aux622 with domain: int(0..3) (representing constraint ((field_00002_00003=8) + aux621))
c Both direct and order encoding.
c Var 'aux622' order represents '0' with '12950'
c Var 'aux622' direct represents '0' with '12950'
c Var 'aux622' order represents '1' with '12951'
-12950 12951 0
c Var 'aux622' direct represents '1' with '12952'
12950 -12951 12952 0
-12952 12951 0
-12952 -12950 0
c Var 'aux622' order represents '2' with '12953'
-12951 12953 0
c Var 'aux622' direct represents '2' with '12954'
12951 -12953 12954 0
-12954 12953 0
-12954 -12951 0
c Var 'aux622' direct represents '3' with '-12953'
12950 12952 12954 -12953 0
c Encoding variable: aux623 with domain: int(0..4) (representing constraint (aux618 + aux620))
c Both direct and order encoding.
c Var 'aux623' order represents '0' with '12955'
c Var 'aux623' direct represents '0' with '12955'
c Var 'aux623' order represents '1' with '12956'
-12955 12956 0
c Var 'aux623' direct represents '1' with '12957'
12955 -12956 12957 0
-12957 12956 0
-12957 -12955 0
c Var 'aux623' order represents '2' with '12958'
-12956 12958 0
c Var 'aux623' direct represents '2' with '12959'
12956 -12958 12959 0
-12959 12958 0
-12959 -12956 0
c Var 'aux623' order represents '3' with '12960'
-12958 12960 0
c Var 'aux623' direct represents '3' with '12961'
12958 -12960 12961 0
-12961 12960 0
-12961 -12958 0
c Var 'aux623' direct represents '4' with '-12960'
12955 12957 12959 12961 -12960 0
c Encoding variable: aux624 with domain: int(0..2) (representing constraint ((field_00004_00003=9) + (field_00006_00003=9)))
c Both direct and order encoding.
c Var 'aux624' order represents '0' with '12962'
c Var 'aux624' direct represents '0' with '12962'
c Var 'aux624' order represents '1' with '12963'
-12962 12963 0
c Var 'aux624' direct represents '1' with '12964'
12962 -12963 12964 0
-12964 12963 0
-12964 -12962 0
c Var 'aux624' direct represents '2' with '-12963'
12962 12964 -12963 0
c Encoding variable: aux625 with domain: int(0..2) (representing constraint ((field_00001_00003=9) + (field_00009_00003=9)))
c Both direct and order encoding.
c Var 'aux625' order represents '0' with '12965'
c Var 'aux625' direct represents '0' with '12965'
c Var 'aux625' order represents '1' with '12966'
-12965 12966 0
c Var 'aux625' direct represents '1' with '12967'
12965 -12966 12967 0
-12967 12966 0
-12967 -12965 0
c Var 'aux625' direct represents '2' with '-12966'
12965 12967 -12966 0
c Encoding variable: aux626 with domain: int(0..2) (representing constraint ((field_00008_00003=9) + (field_00007_00003=9)))
c Both direct and order encoding.
c Var 'aux626' order represents '0' with '12968'
c Var 'aux626' direct represents '0' with '12968'
c Var 'aux626' order represents '1' with '12969'
-12968 12969 0
c Var 'aux626' direct represents '1' with '12970'
12968 -12969 12970 0
-12970 12969 0
-12970 -12968 0
c Var 'aux626' direct represents '2' with '-12969'
12968 12970 -12969 0
c Encoding variable: aux627 with domain: int(0..2) (representing constraint ((field_00003_00003=9) + (field_00005_00003=9)))
c Both direct and order encoding.
c Var 'aux627' order represents '0' with '12971'
c Var 'aux627' direct represents '0' with '12971'
c Var 'aux627' order represents '1' with '12972'
-12971 12972 0
c Var 'aux627' direct represents '1' with '12973'
12971 -12972 12973 0
-12973 12972 0
-12973 -12971 0
c Var 'aux627' direct represents '2' with '-12972'
12971 12973 -12972 0
c Encoding variable: aux628 with domain: int(0..3) (representing constraint ((field_00002_00003=9) + aux627))
c Both direct and order encoding.
c Var 'aux628' order represents '0' with '12974'
c Var 'aux628' direct represents '0' with '12974'
c Var 'aux628' order represents '1' with '12975'
-12974 12975 0
c Var 'aux628' direct represents '1' with '12976'
12974 -12975 12976 0
-12976 12975 0
-12976 -12974 0
c Var 'aux628' order represents '2' with '12977'
-12975 12977 0
c Var 'aux628' direct represents '2' with '12978'
12975 -12977 12978 0
-12978 12977 0
-12978 -12975 0
c Var 'aux628' direct represents '3' with '-12977'
12974 12976 12978 -12977 0
c Encoding variable: aux629 with domain: int(0..4) (representing constraint (aux624 + aux626))
c Both direct and order encoding.
c Var 'aux629' order represents '0' with '12979'
c Var 'aux629' direct represents '0' with '12979'
c Var 'aux629' order represents '1' with '12980'
-12979 12980 0
c Var 'aux629' direct represents '1' with '12981'
12979 -12980 12981 0
-12981 12980 0
-12981 -12979 0
c Var 'aux629' order represents '2' with '12982'
-12980 12982 0
c Var 'aux629' direct represents '2' with '12983'
12980 -12982 12983 0
-12983 12982 0
-12983 -12980 0
c Var 'aux629' order represents '3' with '12984'
-12982 12984 0
c Var 'aux629' direct represents '3' with '12985'
12982 -12984 12985 0
-12985 12984 0
-12985 -12982 0
c Var 'aux629' direct represents '4' with '-12984'
12979 12981 12983 12985 -12984 0
c Encoding variable: aux630 with domain: int(0..2) (representing constraint ((field_00004_00004=1) + (field_00006_00004=1)))
c Both direct and order encoding.
c Var 'aux630' order represents '0' with '12986'
c Var 'aux630' direct represents '0' with '12986'
c Var 'aux630' order represents '1' with '12987'
-12986 12987 0
c Var 'aux630' direct represents '1' with '12988'
12986 -12987 12988 0
-12988 12987 0
-12988 -12986 0
c Var 'aux630' direct represents '2' with '-12987'
12986 12988 -12987 0
c Encoding variable: aux631 with domain: int(0..2) (representing constraint ((field_00001_00004=1) + (field_00009_00004=1)))
c Both direct and order encoding.
c Var 'aux631' order represents '0' with '12989'
c Var 'aux631' direct represents '0' with '12989'
c Var 'aux631' order represents '1' with '12990'
-12989 12990 0
c Var 'aux631' direct represents '1' with '12991'
12989 -12990 12991 0
-12991 12990 0
-12991 -12989 0
c Var 'aux631' direct represents '2' with '-12990'
12989 12991 -12990 0
c Encoding variable: aux632 with domain: int(0..2) (representing constraint ((field_00008_00004=1) + (field_00007_00004=1)))
c Both direct and order encoding.
c Var 'aux632' order represents '0' with '12992'
c Var 'aux632' direct represents '0' with '12992'
c Var 'aux632' order represents '1' with '12993'
-12992 12993 0
c Var 'aux632' direct represents '1' with '12994'
12992 -12993 12994 0
-12994 12993 0
-12994 -12992 0
c Var 'aux632' direct represents '2' with '-12993'
12992 12994 -12993 0
c Encoding variable: aux633 with domain: int(0..2) (representing constraint ((field_00003_00004=1) + (field_00005_00004=1)))
c Both direct and order encoding.
c Var 'aux633' order represents '0' with '12995'
c Var 'aux633' direct represents '0' with '12995'
c Var 'aux633' order represents '1' with '12996'
-12995 12996 0
c Var 'aux633' direct represents '1' with '12997'
12995 -12996 12997 0
-12997 12996 0
-12997 -12995 0
c Var 'aux633' direct represents '2' with '-12996'
12995 12997 -12996 0
c Encoding variable: aux634 with domain: int(0..3) (representing constraint ((field_00002_00004=1) + aux633))
c Both direct and order encoding.
c Var 'aux634' order represents '0' with '12998'
c Var 'aux634' direct represents '0' with '12998'
c Var 'aux634' order represents '1' with '12999'
-12998 12999 0
c Var 'aux634' direct represents '1' with '13000'
12998 -12999 13000 0
-13000 12999 0
-13000 -12998 0
c Var 'aux634' order represents '2' with '13001'
-12999 13001 0
c Var 'aux634' direct represents '2' with '13002'
12999 -13001 13002 0
-13002 13001 0
-13002 -12999 0
c Var 'aux634' direct represents '3' with '-13001'
12998 13000 13002 -13001 0
c Encoding variable: aux635 with domain: int(0..4) (representing constraint (aux630 + aux632))
c Both direct and order encoding.
c Var 'aux635' order represents '0' with '13003'
c Var 'aux635' direct represents '0' with '13003'
c Var 'aux635' order represents '1' with '13004'
-13003 13004 0
c Var 'aux635' direct represents '1' with '13005'
13003 -13004 13005 0
-13005 13004 0
-13005 -13003 0
c Var 'aux635' order represents '2' with '13006'
-13004 13006 0
c Var 'aux635' direct represents '2' with '13007'
13004 -13006 13007 0
-13007 13006 0
-13007 -13004 0
c Var 'aux635' order represents '3' with '13008'
-13006 13008 0
c Var 'aux635' direct represents '3' with '13009'
13006 -13008 13009 0
-13009 13008 0
-13009 -13006 0
c Var 'aux635' direct represents '4' with '-13008'
13003 13005 13007 13009 -13008 0
c Encoding variable: aux636 with domain: int(0..2) (representing constraint ((field_00004_00004=2) + (field_00006_00004=2)))
c Both direct and order encoding.
c Var 'aux636' order represents '0' with '13010'
c Var 'aux636' direct represents '0' with '13010'
c Var 'aux636' order represents '1' with '13011'
-13010 13011 0
c Var 'aux636' direct represents '1' with '13012'
13010 -13011 13012 0
-13012 13011 0
-13012 -13010 0
c Var 'aux636' direct represents '2' with '-13011'
13010 13012 -13011 0
c Encoding variable: aux637 with domain: int(0..2) (representing constraint ((field_00001_00004=2) + (field_00009_00004=2)))
c Both direct and order encoding.
c Var 'aux637' order represents '0' with '13013'
c Var 'aux637' direct represents '0' with '13013'
c Var 'aux637' order represents '1' with '13014'
-13013 13014 0
c Var 'aux637' direct represents '1' with '13015'
13013 -13014 13015 0
-13015 13014 0
-13015 -13013 0
c Var 'aux637' direct represents '2' with '-13014'
13013 13015 -13014 0
c Encoding variable: aux638 with domain: int(0..2) (representing constraint ((field_00008_00004=2) + (field_00007_00004=2)))
c Both direct and order encoding.
c Var 'aux638' order represents '0' with '13016'
c Var 'aux638' direct represents '0' with '13016'
c Var 'aux638' order represents '1' with '13017'
-13016 13017 0
c Var 'aux638' direct represents '1' with '13018'
13016 -13017 13018 0
-13018 13017 0
-13018 -13016 0
c Var 'aux638' direct represents '2' with '-13017'
13016 13018 -13017 0
c Encoding variable: aux639 with domain: int(0..2) (representing constraint ((field_00003_00004=2) + (field_00005_00004=2)))
c Both direct and order encoding.
c Var 'aux639' order represents '0' with '13019'
c Var 'aux639' direct represents '0' with '13019'
c Var 'aux639' order represents '1' with '13020'
-13019 13020 0
c Var 'aux639' direct represents '1' with '13021'
13019 -13020 13021 0
-13021 13020 0
-13021 -13019 0
c Var 'aux639' direct represents '2' with '-13020'
13019 13021 -13020 0
c Encoding variable: aux640 with domain: int(0..3) (representing constraint ((field_00002_00004=2) + aux639))
c Both direct and order encoding.
c Var 'aux640' order represents '0' with '13022'
c Var 'aux640' direct represents '0' with '13022'
c Var 'aux640' order represents '1' with '13023'
-13022 13023 0
c Var 'aux640' direct represents '1' with '13024'
13022 -13023 13024 0
-13024 13023 0
-13024 -13022 0
c Var 'aux640' order represents '2' with '13025'
-13023 13025 0
c Var 'aux640' direct represents '2' with '13026'
13023 -13025 13026 0
-13026 13025 0
-13026 -13023 0
c Var 'aux640' direct represents '3' with '-13025'
13022 13024 13026 -13025 0
c Encoding variable: aux641 with domain: int(0..4) (representing constraint (aux636 + aux638))
c Both direct and order encoding.
c Var 'aux641' order represents '0' with '13027'
c Var 'aux641' direct represents '0' with '13027'
c Var 'aux641' order represents '1' with '13028'
-13027 13028 0
c Var 'aux641' direct represents '1' with '13029'
13027 -13028 13029 0
-13029 13028 0
-13029 -13027 0
c Var 'aux641' order represents '2' with '13030'
-13028 13030 0
c Var 'aux641' direct represents '2' with '13031'
13028 -13030 13031 0
-13031 13030 0
-13031 -13028 0
c Var 'aux641' order represents '3' with '13032'
-13030 13032 0
c Var 'aux641' direct represents '3' with '13033'
13030 -13032 13033 0
-13033 13032 0
-13033 -13030 0
c Var 'aux641' direct represents '4' with '-13032'
13027 13029 13031 13033 -13032 0
c Encoding variable: aux642 with domain: int(0..2) (representing constraint ((field_00004_00004=3) + (field_00006_00004=3)))
c Both direct and order encoding.
c Var 'aux642' order represents '0' with '13034'
c Var 'aux642' direct represents '0' with '13034'
c Var 'aux642' order represents '1' with '13035'
-13034 13035 0
c Var 'aux642' direct represents '1' with '13036'
13034 -13035 13036 0
-13036 13035 0
-13036 -13034 0
c Var 'aux642' direct represents '2' with '-13035'
13034 13036 -13035 0
c Encoding variable: aux643 with domain: int(0..2) (representing constraint ((field_00001_00004=3) + (field_00009_00004=3)))
c Both direct and order encoding.
c Var 'aux643' order represents '0' with '13037'
c Var 'aux643' direct represents '0' with '13037'
c Var 'aux643' order represents '1' with '13038'
-13037 13038 0
c Var 'aux643' direct represents '1' with '13039'
13037 -13038 13039 0
-13039 13038 0
-13039 -13037 0
c Var 'aux643' direct represents '2' with '-13038'
13037 13039 -13038 0
c Encoding variable: aux644 with domain: int(0..2) (representing constraint ((field_00008_00004=3) + (field_00007_00004=3)))
c Both direct and order encoding.
c Var 'aux644' order represents '0' with '13040'
c Var 'aux644' direct represents '0' with '13040'
c Var 'aux644' order represents '1' with '13041'
-13040 13041 0
c Var 'aux644' direct represents '1' with '13042'
13040 -13041 13042 0
-13042 13041 0
-13042 -13040 0
c Var 'aux644' direct represents '2' with '-13041'
13040 13042 -13041 0
c Encoding variable: aux645 with domain: int(0..2) (representing constraint ((field_00003_00004=3) + (field_00005_00004=3)))
c Both direct and order encoding.
c Var 'aux645' order represents '0' with '13043'
c Var 'aux645' direct represents '0' with '13043'
c Var 'aux645' order represents '1' with '13044'
-13043 13044 0
c Var 'aux645' direct represents '1' with '13045'
13043 -13044 13045 0
-13045 13044 0
-13045 -13043 0
c Var 'aux645' direct represents '2' with '-13044'
13043 13045 -13044 0
c Encoding variable: aux646 with domain: int(0..3) (representing constraint ((field_00002_00004=3) + aux645))
c Both direct and order encoding.
c Var 'aux646' order represents '0' with '13046'
c Var 'aux646' direct represents '0' with '13046'
c Var 'aux646' order represents '1' with '13047'
-13046 13047 0
c Var 'aux646' direct represents '1' with '13048'
13046 -13047 13048 0
-13048 13047 0
-13048 -13046 0
c Var 'aux646' order represents '2' with '13049'
-13047 13049 0
c Var 'aux646' direct represents '2' with '13050'
13047 -13049 13050 0
-13050 13049 0
-13050 -13047 0
c Var 'aux646' direct represents '3' with '-13049'
13046 13048 13050 -13049 0
c Encoding variable: aux647 with domain: int(0..4) (representing constraint (aux642 + aux644))
c Both direct and order encoding.
c Var 'aux647' order represents '0' with '13051'
c Var 'aux647' direct represents '0' with '13051'
c Var 'aux647' order represents '1' with '13052'
-13051 13052 0
c Var 'aux647' direct represents '1' with '13053'
13051 -13052 13053 0
-13053 13052 0
-13053 -13051 0
c Var 'aux647' order represents '2' with '13054'
-13052 13054 0
c Var 'aux647' direct represents '2' with '13055'
13052 -13054 13055 0
-13055 13054 0
-13055 -13052 0
c Var 'aux647' order represents '3' with '13056'
-13054 13056 0
c Var 'aux647' direct represents '3' with '13057'
13054 -13056 13057 0
-13057 13056 0
-13057 -13054 0
c Var 'aux647' direct represents '4' with '-13056'
13051 13053 13055 13057 -13056 0
c Encoding variable: aux648 with domain: int(0..2) (representing constraint ((field_00004_00004=4) + (field_00006_00004=4)))
c Both direct and order encoding.
c Var 'aux648' order represents '0' with '13058'
c Var 'aux648' direct represents '0' with '13058'
c Var 'aux648' order represents '1' with '13059'
-13058 13059 0
c Var 'aux648' direct represents '1' with '13060'
13058 -13059 13060 0
-13060 13059 0
-13060 -13058 0
c Var 'aux648' direct represents '2' with '-13059'
13058 13060 -13059 0
c Encoding variable: aux649 with domain: int(0..2) (representing constraint ((field_00001_00004=4) + (field_00009_00004=4)))
c Both direct and order encoding.
c Var 'aux649' order represents '0' with '13061'
c Var 'aux649' direct represents '0' with '13061'
c Var 'aux649' order represents '1' with '13062'
-13061 13062 0
c Var 'aux649' direct represents '1' with '13063'
13061 -13062 13063 0
-13063 13062 0
-13063 -13061 0
c Var 'aux649' direct represents '2' with '-13062'
13061 13063 -13062 0
c Encoding variable: aux650 with domain: int(0..2) (representing constraint ((field_00008_00004=4) + (field_00007_00004=4)))
c Both direct and order encoding.
c Var 'aux650' order represents '0' with '13064'
c Var 'aux650' direct represents '0' with '13064'
c Var 'aux650' order represents '1' with '13065'
-13064 13065 0
c Var 'aux650' direct represents '1' with '13066'
13064 -13065 13066 0
-13066 13065 0
-13066 -13064 0
c Var 'aux650' direct represents '2' with '-13065'
13064 13066 -13065 0
c Encoding variable: aux651 with domain: int(0..2) (representing constraint ((field_00003_00004=4) + (field_00005_00004=4)))
c Both direct and order encoding.
c Var 'aux651' order represents '0' with '13067'
c Var 'aux651' direct represents '0' with '13067'
c Var 'aux651' order represents '1' with '13068'
-13067 13068 0
c Var 'aux651' direct represents '1' with '13069'
13067 -13068 13069 0
-13069 13068 0
-13069 -13067 0
c Var 'aux651' direct represents '2' with '-13068'
13067 13069 -13068 0
c Encoding variable: aux652 with domain: int(0..3) (representing constraint ((field_00002_00004=4) + aux651))
c Both direct and order encoding.
c Var 'aux652' order represents '0' with '13070'
c Var 'aux652' direct represents '0' with '13070'
c Var 'aux652' order represents '1' with '13071'
-13070 13071 0
c Var 'aux652' direct represents '1' with '13072'
13070 -13071 13072 0
-13072 13071 0
-13072 -13070 0
c Var 'aux652' order represents '2' with '13073'
-13071 13073 0
c Var 'aux652' direct represents '2' with '13074'
13071 -13073 13074 0
-13074 13073 0
-13074 -13071 0
c Var 'aux652' direct represents '3' with '-13073'
13070 13072 13074 -13073 0
c Encoding variable: aux653 with domain: int(0..4) (representing constraint (aux648 + aux650))
c Both direct and order encoding.
c Var 'aux653' order represents '0' with '13075'
c Var 'aux653' direct represents '0' with '13075'
c Var 'aux653' order represents '1' with '13076'
-13075 13076 0
c Var 'aux653' direct represents '1' with '13077'
13075 -13076 13077 0
-13077 13076 0
-13077 -13075 0
c Var 'aux653' order represents '2' with '13078'
-13076 13078 0
c Var 'aux653' direct represents '2' with '13079'
13076 -13078 13079 0
-13079 13078 0
-13079 -13076 0
c Var 'aux653' order represents '3' with '13080'
-13078 13080 0
c Var 'aux653' direct represents '3' with '13081'
13078 -13080 13081 0
-13081 13080 0
-13081 -13078 0
c Var 'aux653' direct represents '4' with '-13080'
13075 13077 13079 13081 -13080 0
c Encoding variable: aux654 with domain: int(0..2) (representing constraint ((field_00004_00004=5) + (field_00006_00004=5)))
c Both direct and order encoding.
c Var 'aux654' order represents '0' with '13082'
c Var 'aux654' direct represents '0' with '13082'
c Var 'aux654' order represents '1' with '13083'
-13082 13083 0
c Var 'aux654' direct represents '1' with '13084'
13082 -13083 13084 0
-13084 13083 0
-13084 -13082 0
c Var 'aux654' direct represents '2' with '-13083'
13082 13084 -13083 0
c Encoding variable: aux655 with domain: int(0..2) (representing constraint ((field_00001_00004=5) + (field_00009_00004=5)))
c Both direct and order encoding.
c Var 'aux655' order represents '0' with '13085'
c Var 'aux655' direct represents '0' with '13085'
c Var 'aux655' order represents '1' with '13086'
-13085 13086 0
c Var 'aux655' direct represents '1' with '13087'
13085 -13086 13087 0
-13087 13086 0
-13087 -13085 0
c Var 'aux655' direct represents '2' with '-13086'
13085 13087 -13086 0
c Encoding variable: aux656 with domain: int(0..2) (representing constraint ((field_00008_00004=5) + (field_00007_00004=5)))
c Both direct and order encoding.
c Var 'aux656' order represents '0' with '13088'
c Var 'aux656' direct represents '0' with '13088'
c Var 'aux656' order represents '1' with '13089'
-13088 13089 0
c Var 'aux656' direct represents '1' with '13090'
13088 -13089 13090 0
-13090 13089 0
-13090 -13088 0
c Var 'aux656' direct represents '2' with '-13089'
13088 13090 -13089 0
c Encoding variable: aux657 with domain: int(0..2) (representing constraint ((field_00003_00004=5) + (field_00005_00004=5)))
c Both direct and order encoding.
c Var 'aux657' order represents '0' with '13091'
c Var 'aux657' direct represents '0' with '13091'
c Var 'aux657' order represents '1' with '13092'
-13091 13092 0
c Var 'aux657' direct represents '1' with '13093'
13091 -13092 13093 0
-13093 13092 0
-13093 -13091 0
c Var 'aux657' direct represents '2' with '-13092'
13091 13093 -13092 0
c Encoding variable: aux658 with domain: int(0..3) (representing constraint ((field_00002_00004=5) + aux657))
c Both direct and order encoding.
c Var 'aux658' order represents '0' with '13094'
c Var 'aux658' direct represents '0' with '13094'
c Var 'aux658' order represents '1' with '13095'
-13094 13095 0
c Var 'aux658' direct represents '1' with '13096'
13094 -13095 13096 0
-13096 13095 0
-13096 -13094 0
c Var 'aux658' order represents '2' with '13097'
-13095 13097 0
c Var 'aux658' direct represents '2' with '13098'
13095 -13097 13098 0
-13098 13097 0
-13098 -13095 0
c Var 'aux658' direct represents '3' with '-13097'
13094 13096 13098 -13097 0
c Encoding variable: aux659 with domain: int(0..4) (representing constraint (aux654 + aux656))
c Both direct and order encoding.
c Var 'aux659' order represents '0' with '13099'
c Var 'aux659' direct represents '0' with '13099'
c Var 'aux659' order represents '1' with '13100'
-13099 13100 0
c Var 'aux659' direct represents '1' with '13101'
13099 -13100 13101 0
-13101 13100 0
-13101 -13099 0
c Var 'aux659' order represents '2' with '13102'
-13100 13102 0
c Var 'aux659' direct represents '2' with '13103'
13100 -13102 13103 0
-13103 13102 0
-13103 -13100 0
c Var 'aux659' order represents '3' with '13104'
-13102 13104 0
c Var 'aux659' direct represents '3' with '13105'
13102 -13104 13105 0
-13105 13104 0
-13105 -13102 0
c Var 'aux659' direct represents '4' with '-13104'
13099 13101 13103 13105 -13104 0
c Encoding variable: aux660 with domain: int(0..2) (representing constraint ((field_00004_00004=6) + (field_00006_00004=6)))
c Both direct and order encoding.
c Var 'aux660' order represents '0' with '13106'
c Var 'aux660' direct represents '0' with '13106'
c Var 'aux660' order represents '1' with '13107'
-13106 13107 0
c Var 'aux660' direct represents '1' with '13108'
13106 -13107 13108 0
-13108 13107 0
-13108 -13106 0
c Var 'aux660' direct represents '2' with '-13107'
13106 13108 -13107 0
c Encoding variable: aux661 with domain: int(0..2) (representing constraint ((field_00001_00004=6) + (field_00009_00004=6)))
c Both direct and order encoding.
c Var 'aux661' order represents '0' with '13109'
c Var 'aux661' direct represents '0' with '13109'
c Var 'aux661' order represents '1' with '13110'
-13109 13110 0
c Var 'aux661' direct represents '1' with '13111'
13109 -13110 13111 0
-13111 13110 0
-13111 -13109 0
c Var 'aux661' direct represents '2' with '-13110'
13109 13111 -13110 0
c Encoding variable: aux662 with domain: int(0..2) (representing constraint ((field_00008_00004=6) + (field_00007_00004=6)))
c Both direct and order encoding.
c Var 'aux662' order represents '0' with '13112'
c Var 'aux662' direct represents '0' with '13112'
c Var 'aux662' order represents '1' with '13113'
-13112 13113 0
c Var 'aux662' direct represents '1' with '13114'
13112 -13113 13114 0
-13114 13113 0
-13114 -13112 0
c Var 'aux662' direct represents '2' with '-13113'
13112 13114 -13113 0
c Encoding variable: aux663 with domain: int(0..2) (representing constraint ((field_00003_00004=6) + (field_00005_00004=6)))
c Both direct and order encoding.
c Var 'aux663' order represents '0' with '13115'
c Var 'aux663' direct represents '0' with '13115'
c Var 'aux663' order represents '1' with '13116'
-13115 13116 0
c Var 'aux663' direct represents '1' with '13117'
13115 -13116 13117 0
-13117 13116 0
-13117 -13115 0
c Var 'aux663' direct represents '2' with '-13116'
13115 13117 -13116 0
c Encoding variable: aux664 with domain: int(0..3) (representing constraint ((field_00002_00004=6) + aux663))
c Both direct and order encoding.
c Var 'aux664' order represents '0' with '13118'
c Var 'aux664' direct represents '0' with '13118'
c Var 'aux664' order represents '1' with '13119'
-13118 13119 0
c Var 'aux664' direct represents '1' with '13120'
13118 -13119 13120 0
-13120 13119 0
-13120 -13118 0
c Var 'aux664' order represents '2' with '13121'
-13119 13121 0
c Var 'aux664' direct represents '2' with '13122'
13119 -13121 13122 0
-13122 13121 0
-13122 -13119 0
c Var 'aux664' direct represents '3' with '-13121'
13118 13120 13122 -13121 0
c Encoding variable: aux665 with domain: int(0..4) (representing constraint (aux660 + aux662))
c Both direct and order encoding.
c Var 'aux665' order represents '0' with '13123'
c Var 'aux665' direct represents '0' with '13123'
c Var 'aux665' order represents '1' with '13124'
-13123 13124 0
c Var 'aux665' direct represents '1' with '13125'
13123 -13124 13125 0
-13125 13124 0
-13125 -13123 0
c Var 'aux665' order represents '2' with '13126'
-13124 13126 0
c Var 'aux665' direct represents '2' with '13127'
13124 -13126 13127 0
-13127 13126 0
-13127 -13124 0
c Var 'aux665' order represents '3' with '13128'
-13126 13128 0
c Var 'aux665' direct represents '3' with '13129'
13126 -13128 13129 0
-13129 13128 0
-13129 -13126 0
c Var 'aux665' direct represents '4' with '-13128'
13123 13125 13127 13129 -13128 0
c Encoding variable: aux666 with domain: int(0..2) (representing constraint ((field_00004_00004=7) + (field_00006_00004=7)))
c Both direct and order encoding.
c Var 'aux666' order represents '0' with '13130'
c Var 'aux666' direct represents '0' with '13130'
c Var 'aux666' order represents '1' with '13131'
-13130 13131 0
c Var 'aux666' direct represents '1' with '13132'
13130 -13131 13132 0
-13132 13131 0
-13132 -13130 0
c Var 'aux666' direct represents '2' with '-13131'
13130 13132 -13131 0
c Encoding variable: aux667 with domain: int(0..2) (representing constraint ((field_00001_00004=7) + (field_00009_00004=7)))
c Both direct and order encoding.
c Var 'aux667' order represents '0' with '13133'
c Var 'aux667' direct represents '0' with '13133'
c Var 'aux667' order represents '1' with '13134'
-13133 13134 0
c Var 'aux667' direct represents '1' with '13135'
13133 -13134 13135 0
-13135 13134 0
-13135 -13133 0
c Var 'aux667' direct represents '2' with '-13134'
13133 13135 -13134 0
c Encoding variable: aux668 with domain: int(0..2) (representing constraint ((field_00008_00004=7) + (field_00007_00004=7)))
c Both direct and order encoding.
c Var 'aux668' order represents '0' with '13136'
c Var 'aux668' direct represents '0' with '13136'
c Var 'aux668' order represents '1' with '13137'
-13136 13137 0
c Var 'aux668' direct represents '1' with '13138'
13136 -13137 13138 0
-13138 13137 0
-13138 -13136 0
c Var 'aux668' direct represents '2' with '-13137'
13136 13138 -13137 0
c Encoding variable: aux669 with domain: int(0..2) (representing constraint ((field_00003_00004=7) + (field_00005_00004=7)))
c Both direct and order encoding.
c Var 'aux669' order represents '0' with '13139'
c Var 'aux669' direct represents '0' with '13139'
c Var 'aux669' order represents '1' with '13140'
-13139 13140 0
c Var 'aux669' direct represents '1' with '13141'
13139 -13140 13141 0
-13141 13140 0
-13141 -13139 0
c Var 'aux669' direct represents '2' with '-13140'
13139 13141 -13140 0
c Encoding variable: aux670 with domain: int(0..3) (representing constraint ((field_00002_00004=7) + aux669))
c Both direct and order encoding.
c Var 'aux670' order represents '0' with '13142'
c Var 'aux670' direct represents '0' with '13142'
c Var 'aux670' order represents '1' with '13143'
-13142 13143 0
c Var 'aux670' direct represents '1' with '13144'
13142 -13143 13144 0
-13144 13143 0
-13144 -13142 0
c Var 'aux670' order represents '2' with '13145'
-13143 13145 0
c Var 'aux670' direct represents '2' with '13146'
13143 -13145 13146 0
-13146 13145 0
-13146 -13143 0
c Var 'aux670' direct represents '3' with '-13145'
13142 13144 13146 -13145 0
c Encoding variable: aux671 with domain: int(0..4) (representing constraint (aux666 + aux668))
c Both direct and order encoding.
c Var 'aux671' order represents '0' with '13147'
c Var 'aux671' direct represents '0' with '13147'
c Var 'aux671' order represents '1' with '13148'
-13147 13148 0
c Var 'aux671' direct represents '1' with '13149'
13147 -13148 13149 0
-13149 13148 0
-13149 -13147 0
c Var 'aux671' order represents '2' with '13150'
-13148 13150 0
c Var 'aux671' direct represents '2' with '13151'
13148 -13150 13151 0
-13151 13150 0
-13151 -13148 0
c Var 'aux671' order represents '3' with '13152'
-13150 13152 0
c Var 'aux671' direct represents '3' with '13153'
13150 -13152 13153 0
-13153 13152 0
-13153 -13150 0
c Var 'aux671' direct represents '4' with '-13152'
13147 13149 13151 13153 -13152 0
c Encoding variable: aux672 with domain: int(0..2) (representing constraint ((field_00004_00004=8) + (field_00006_00004=8)))
c Both direct and order encoding.
c Var 'aux672' order represents '0' with '13154'
c Var 'aux672' direct represents '0' with '13154'
c Var 'aux672' order represents '1' with '13155'
-13154 13155 0
c Var 'aux672' direct represents '1' with '13156'
13154 -13155 13156 0
-13156 13155 0
-13156 -13154 0
c Var 'aux672' direct represents '2' with '-13155'
13154 13156 -13155 0
c Encoding variable: aux673 with domain: int(0..2) (representing constraint ((field_00001_00004=8) + (field_00009_00004=8)))
c Both direct and order encoding.
c Var 'aux673' order represents '0' with '13157'
c Var 'aux673' direct represents '0' with '13157'
c Var 'aux673' order represents '1' with '13158'
-13157 13158 0
c Var 'aux673' direct represents '1' with '13159'
13157 -13158 13159 0
-13159 13158 0
-13159 -13157 0
c Var 'aux673' direct represents '2' with '-13158'
13157 13159 -13158 0
c Encoding variable: aux674 with domain: int(0..2) (representing constraint ((field_00008_00004=8) + (field_00007_00004=8)))
c Both direct and order encoding.
c Var 'aux674' order represents '0' with '13160'
c Var 'aux674' direct represents '0' with '13160'
c Var 'aux674' order represents '1' with '13161'
-13160 13161 0
c Var 'aux674' direct represents '1' with '13162'
13160 -13161 13162 0
-13162 13161 0
-13162 -13160 0
c Var 'aux674' direct represents '2' with '-13161'
13160 13162 -13161 0
c Encoding variable: aux675 with domain: int(0..2) (representing constraint ((field_00003_00004=8) + (field_00005_00004=8)))
c Both direct and order encoding.
c Var 'aux675' order represents '0' with '13163'
c Var 'aux675' direct represents '0' with '13163'
c Var 'aux675' order represents '1' with '13164'
-13163 13164 0
c Var 'aux675' direct represents '1' with '13165'
13163 -13164 13165 0
-13165 13164 0
-13165 -13163 0
c Var 'aux675' direct represents '2' with '-13164'
13163 13165 -13164 0
c Encoding variable: aux676 with domain: int(0..3) (representing constraint ((field_00002_00004=8) + aux675))
c Both direct and order encoding.
c Var 'aux676' order represents '0' with '13166'
c Var 'aux676' direct represents '0' with '13166'
c Var 'aux676' order represents '1' with '13167'
-13166 13167 0
c Var 'aux676' direct represents '1' with '13168'
13166 -13167 13168 0
-13168 13167 0
-13168 -13166 0
c Var 'aux676' order represents '2' with '13169'
-13167 13169 0
c Var 'aux676' direct represents '2' with '13170'
13167 -13169 13170 0
-13170 13169 0
-13170 -13167 0
c Var 'aux676' direct represents '3' with '-13169'
13166 13168 13170 -13169 0
c Encoding variable: aux677 with domain: int(0..4) (representing constraint (aux672 + aux674))
c Both direct and order encoding.
c Var 'aux677' order represents '0' with '13171'
c Var 'aux677' direct represents '0' with '13171'
c Var 'aux677' order represents '1' with '13172'
-13171 13172 0
c Var 'aux677' direct represents '1' with '13173'
13171 -13172 13173 0
-13173 13172 0
-13173 -13171 0
c Var 'aux677' order represents '2' with '13174'
-13172 13174 0
c Var 'aux677' direct represents '2' with '13175'
13172 -13174 13175 0
-13175 13174 0
-13175 -13172 0
c Var 'aux677' order represents '3' with '13176'
-13174 13176 0
c Var 'aux677' direct represents '3' with '13177'
13174 -13176 13177 0
-13177 13176 0
-13177 -13174 0
c Var 'aux677' direct represents '4' with '-13176'
13171 13173 13175 13177 -13176 0
c Encoding variable: aux678 with domain: int(0..2) (representing constraint ((field_00004_00004=9) + (field_00006_00004=9)))
c Both direct and order encoding.
c Var 'aux678' order represents '0' with '13178'
c Var 'aux678' direct represents '0' with '13178'
c Var 'aux678' order represents '1' with '13179'
-13178 13179 0
c Var 'aux678' direct represents '1' with '13180'
13178 -13179 13180 0
-13180 13179 0
-13180 -13178 0
c Var 'aux678' direct represents '2' with '-13179'
13178 13180 -13179 0
c Encoding variable: aux679 with domain: int(0..2) (representing constraint ((field_00001_00004=9) + (field_00009_00004=9)))
c Both direct and order encoding.
c Var 'aux679' order represents '0' with '13181'
c Var 'aux679' direct represents '0' with '13181'
c Var 'aux679' order represents '1' with '13182'
-13181 13182 0
c Var 'aux679' direct represents '1' with '13183'
13181 -13182 13183 0
-13183 13182 0
-13183 -13181 0
c Var 'aux679' direct represents '2' with '-13182'
13181 13183 -13182 0
c Encoding variable: aux680 with domain: int(0..2) (representing constraint ((field_00008_00004=9) + (field_00007_00004=9)))
c Both direct and order encoding.
c Var 'aux680' order represents '0' with '13184'
c Var 'aux680' direct represents '0' with '13184'
c Var 'aux680' order represents '1' with '13185'
-13184 13185 0
c Var 'aux680' direct represents '1' with '13186'
13184 -13185 13186 0
-13186 13185 0
-13186 -13184 0
c Var 'aux680' direct represents '2' with '-13185'
13184 13186 -13185 0
c Encoding variable: aux681 with domain: int(0..2) (representing constraint ((field_00003_00004=9) + (field_00005_00004=9)))
c Both direct and order encoding.
c Var 'aux681' order represents '0' with '13187'
c Var 'aux681' direct represents '0' with '13187'
c Var 'aux681' order represents '1' with '13188'
-13187 13188 0
c Var 'aux681' direct represents '1' with '13189'
13187 -13188 13189 0
-13189 13188 0
-13189 -13187 0
c Var 'aux681' direct represents '2' with '-13188'
13187 13189 -13188 0
c Encoding variable: aux682 with domain: int(0..3) (representing constraint ((field_00002_00004=9) + aux681))
c Both direct and order encoding.
c Var 'aux682' order represents '0' with '13190'
c Var 'aux682' direct represents '0' with '13190'
c Var 'aux682' order represents '1' with '13191'
-13190 13191 0
c Var 'aux682' direct represents '1' with '13192'
13190 -13191 13192 0
-13192 13191 0
-13192 -13190 0
c Var 'aux682' order represents '2' with '13193'
-13191 13193 0
c Var 'aux682' direct represents '2' with '13194'
13191 -13193 13194 0
-13194 13193 0
-13194 -13191 0
c Var 'aux682' direct represents '3' with '-13193'
13190 13192 13194 -13193 0
c Encoding variable: aux683 with domain: int(0..4) (representing constraint (aux678 + aux680))
c Both direct and order encoding.
c Var 'aux683' order represents '0' with '13195'
c Var 'aux683' direct represents '0' with '13195'
c Var 'aux683' order represents '1' with '13196'
-13195 13196 0
c Var 'aux683' direct represents '1' with '13197'
13195 -13196 13197 0
-13197 13196 0
-13197 -13195 0
c Var 'aux683' order represents '2' with '13198'
-13196 13198 0
c Var 'aux683' direct represents '2' with '13199'
13196 -13198 13199 0
-13199 13198 0
-13199 -13196 0
c Var 'aux683' order represents '3' with '13200'
-13198 13200 0
c Var 'aux683' direct represents '3' with '13201'
13198 -13200 13201 0
-13201 13200 0
-13201 -13198 0
c Var 'aux683' direct represents '4' with '-13200'
13195 13197 13199 13201 -13200 0
c Encoding variable: aux684 with domain: int(0..2) (representing constraint ((field_00004_00005=1) + (field_00006_00005=1)))
c Both direct and order encoding.
c Var 'aux684' order represents '0' with '13202'
c Var 'aux684' direct represents '0' with '13202'
c Var 'aux684' order represents '1' with '13203'
-13202 13203 0
c Var 'aux684' direct represents '1' with '13204'
13202 -13203 13204 0
-13204 13203 0
-13204 -13202 0
c Var 'aux684' direct represents '2' with '-13203'
13202 13204 -13203 0
c Encoding variable: aux685 with domain: int(0..2) (representing constraint ((field_00001_00005=1) + (field_00009_00005=1)))
c Both direct and order encoding.
c Var 'aux685' order represents '0' with '13205'
c Var 'aux685' direct represents '0' with '13205'
c Var 'aux685' order represents '1' with '13206'
-13205 13206 0
c Var 'aux685' direct represents '1' with '13207'
13205 -13206 13207 0
-13207 13206 0
-13207 -13205 0
c Var 'aux685' direct represents '2' with '-13206'
13205 13207 -13206 0
c Encoding variable: aux686 with domain: int(0..2) (representing constraint ((field_00008_00005=1) + (field_00007_00005=1)))
c Both direct and order encoding.
c Var 'aux686' order represents '0' with '13208'
c Var 'aux686' direct represents '0' with '13208'
c Var 'aux686' order represents '1' with '13209'
-13208 13209 0
c Var 'aux686' direct represents '1' with '13210'
13208 -13209 13210 0
-13210 13209 0
-13210 -13208 0
c Var 'aux686' direct represents '2' with '-13209'
13208 13210 -13209 0
c Encoding variable: aux687 with domain: int(0..2) (representing constraint ((field_00003_00005=1) + (field_00005_00005=1)))
c Both direct and order encoding.
c Var 'aux687' order represents '0' with '13211'
c Var 'aux687' direct represents '0' with '13211'
c Var 'aux687' order represents '1' with '13212'
-13211 13212 0
c Var 'aux687' direct represents '1' with '13213'
13211 -13212 13213 0
-13213 13212 0
-13213 -13211 0
c Var 'aux687' direct represents '2' with '-13212'
13211 13213 -13212 0
c Encoding variable: aux688 with domain: int(0..3) (representing constraint ((field_00002_00005=1) + aux687))
c Both direct and order encoding.
c Var 'aux688' order represents '0' with '13214'
c Var 'aux688' direct represents '0' with '13214'
c Var 'aux688' order represents '1' with '13215'
-13214 13215 0
c Var 'aux688' direct represents '1' with '13216'
13214 -13215 13216 0
-13216 13215 0
-13216 -13214 0
c Var 'aux688' order represents '2' with '13217'
-13215 13217 0
c Var 'aux688' direct represents '2' with '13218'
13215 -13217 13218 0
-13218 13217 0
-13218 -13215 0
c Var 'aux688' direct represents '3' with '-13217'
13214 13216 13218 -13217 0
c Encoding variable: aux689 with domain: int(0..4) (representing constraint (aux684 + aux686))
c Both direct and order encoding.
c Var 'aux689' order represents '0' with '13219'
c Var 'aux689' direct represents '0' with '13219'
c Var 'aux689' order represents '1' with '13220'
-13219 13220 0
c Var 'aux689' direct represents '1' with '13221'
13219 -13220 13221 0
-13221 13220 0
-13221 -13219 0
c Var 'aux689' order represents '2' with '13222'
-13220 13222 0
c Var 'aux689' direct represents '2' with '13223'
13220 -13222 13223 0
-13223 13222 0
-13223 -13220 0
c Var 'aux689' order represents '3' with '13224'
-13222 13224 0
c Var 'aux689' direct represents '3' with '13225'
13222 -13224 13225 0
-13225 13224 0
-13225 -13222 0
c Var 'aux689' direct represents '4' with '-13224'
13219 13221 13223 13225 -13224 0
c Encoding variable: aux690 with domain: int(0..2) (representing constraint ((field_00004_00005=2) + (field_00006_00005=2)))
c Both direct and order encoding.
c Var 'aux690' order represents '0' with '13226'
c Var 'aux690' direct represents '0' with '13226'
c Var 'aux690' order represents '1' with '13227'
-13226 13227 0
c Var 'aux690' direct represents '1' with '13228'
13226 -13227 13228 0
-13228 13227 0
-13228 -13226 0
c Var 'aux690' direct represents '2' with '-13227'
13226 13228 -13227 0
c Encoding variable: aux691 with domain: int(0..2) (representing constraint ((field_00001_00005=2) + (field_00009_00005=2)))
c Both direct and order encoding.
c Var 'aux691' order represents '0' with '13229'
c Var 'aux691' direct represents '0' with '13229'
c Var 'aux691' order represents '1' with '13230'
-13229 13230 0
c Var 'aux691' direct represents '1' with '13231'
13229 -13230 13231 0
-13231 13230 0
-13231 -13229 0
c Var 'aux691' direct represents '2' with '-13230'
13229 13231 -13230 0
c Encoding variable: aux692 with domain: int(0..2) (representing constraint ((field_00008_00005=2) + (field_00007_00005=2)))
c Both direct and order encoding.
c Var 'aux692' order represents '0' with '13232'
c Var 'aux692' direct represents '0' with '13232'
c Var 'aux692' order represents '1' with '13233'
-13232 13233 0
c Var 'aux692' direct represents '1' with '13234'
13232 -13233 13234 0
-13234 13233 0
-13234 -13232 0
c Var 'aux692' direct represents '2' with '-13233'
13232 13234 -13233 0
c Encoding variable: aux693 with domain: int(0..2) (representing constraint ((field_00003_00005=2) + (field_00005_00005=2)))
c Both direct and order encoding.
c Var 'aux693' order represents '0' with '13235'
c Var 'aux693' direct represents '0' with '13235'
c Var 'aux693' order represents '1' with '13236'
-13235 13236 0
c Var 'aux693' direct represents '1' with '13237'
13235 -13236 13237 0
-13237 13236 0
-13237 -13235 0
c Var 'aux693' direct represents '2' with '-13236'
13235 13237 -13236 0
c Encoding variable: aux694 with domain: int(0..3) (representing constraint ((field_00002_00005=2) + aux693))
c Both direct and order encoding.
c Var 'aux694' order represents '0' with '13238'
c Var 'aux694' direct represents '0' with '13238'
c Var 'aux694' order represents '1' with '13239'
-13238 13239 0
c Var 'aux694' direct represents '1' with '13240'
13238 -13239 13240 0
-13240 13239 0
-13240 -13238 0
c Var 'aux694' order represents '2' with '13241'
-13239 13241 0
c Var 'aux694' direct represents '2' with '13242'
13239 -13241 13242 0
-13242 13241 0
-13242 -13239 0
c Var 'aux694' direct represents '3' with '-13241'
13238 13240 13242 -13241 0
c Encoding variable: aux695 with domain: int(0..4) (representing constraint (aux690 + aux692))
c Both direct and order encoding.
c Var 'aux695' order represents '0' with '13243'
c Var 'aux695' direct represents '0' with '13243'
c Var 'aux695' order represents '1' with '13244'
-13243 13244 0
c Var 'aux695' direct represents '1' with '13245'
13243 -13244 13245 0
-13245 13244 0
-13245 -13243 0
c Var 'aux695' order represents '2' with '13246'
-13244 13246 0
c Var 'aux695' direct represents '2' with '13247'
13244 -13246 13247 0
-13247 13246 0
-13247 -13244 0
c Var 'aux695' order represents '3' with '13248'
-13246 13248 0
c Var 'aux695' direct represents '3' with '13249'
13246 -13248 13249 0
-13249 13248 0
-13249 -13246 0
c Var 'aux695' direct represents '4' with '-13248'
13243 13245 13247 13249 -13248 0
c Encoding variable: aux696 with domain: int(0..2) (representing constraint ((field_00004_00005=3) + (field_00006_00005=3)))
c Both direct and order encoding.
c Var 'aux696' order represents '0' with '13250'
c Var 'aux696' direct represents '0' with '13250'
c Var 'aux696' order represents '1' with '13251'
-13250 13251 0
c Var 'aux696' direct represents '1' with '13252'
13250 -13251 13252 0
-13252 13251 0
-13252 -13250 0
c Var 'aux696' direct represents '2' with '-13251'
13250 13252 -13251 0
c Encoding variable: aux697 with domain: int(0..2) (representing constraint ((field_00001_00005=3) + (field_00009_00005=3)))
c Both direct and order encoding.
c Var 'aux697' order represents '0' with '13253'
c Var 'aux697' direct represents '0' with '13253'
c Var 'aux697' order represents '1' with '13254'
-13253 13254 0
c Var 'aux697' direct represents '1' with '13255'
13253 -13254 13255 0
-13255 13254 0
-13255 -13253 0
c Var 'aux697' direct represents '2' with '-13254'
13253 13255 -13254 0
c Encoding variable: aux698 with domain: int(0..2) (representing constraint ((field_00008_00005=3) + (field_00007_00005=3)))
c Both direct and order encoding.
c Var 'aux698' order represents '0' with '13256'
c Var 'aux698' direct represents '0' with '13256'
c Var 'aux698' order represents '1' with '13257'
-13256 13257 0
c Var 'aux698' direct represents '1' with '13258'
13256 -13257 13258 0
-13258 13257 0
-13258 -13256 0
c Var 'aux698' direct represents '2' with '-13257'
13256 13258 -13257 0
c Encoding variable: aux699 with domain: int(0..2) (representing constraint ((field_00003_00005=3) + (field_00005_00005=3)))
c Both direct and order encoding.
c Var 'aux699' order represents '0' with '13259'
c Var 'aux699' direct represents '0' with '13259'
c Var 'aux699' order represents '1' with '13260'
-13259 13260 0
c Var 'aux699' direct represents '1' with '13261'
13259 -13260 13261 0
-13261 13260 0
-13261 -13259 0
c Var 'aux699' direct represents '2' with '-13260'
13259 13261 -13260 0
c Encoding variable: aux700 with domain: int(0..3) (representing constraint ((field_00002_00005=3) + aux699))
c Both direct and order encoding.
c Var 'aux700' order represents '0' with '13262'
c Var 'aux700' direct represents '0' with '13262'
c Var 'aux700' order represents '1' with '13263'
-13262 13263 0
c Var 'aux700' direct represents '1' with '13264'
13262 -13263 13264 0
-13264 13263 0
-13264 -13262 0
c Var 'aux700' order represents '2' with '13265'
-13263 13265 0
c Var 'aux700' direct represents '2' with '13266'
13263 -13265 13266 0
-13266 13265 0
-13266 -13263 0
c Var 'aux700' direct represents '3' with '-13265'
13262 13264 13266 -13265 0
c Encoding variable: aux701 with domain: int(0..4) (representing constraint (aux696 + aux698))
c Both direct and order encoding.
c Var 'aux701' order represents '0' with '13267'
c Var 'aux701' direct represents '0' with '13267'
c Var 'aux701' order represents '1' with '13268'
-13267 13268 0
c Var 'aux701' direct represents '1' with '13269'
13267 -13268 13269 0
-13269 13268 0
-13269 -13267 0
c Var 'aux701' order represents '2' with '13270'
-13268 13270 0
c Var 'aux701' direct represents '2' with '13271'
13268 -13270 13271 0
-13271 13270 0
-13271 -13268 0
c Var 'aux701' order represents '3' with '13272'
-13270 13272 0
c Var 'aux701' direct represents '3' with '13273'
13270 -13272 13273 0
-13273 13272 0
-13273 -13270 0
c Var 'aux701' direct represents '4' with '-13272'
13267 13269 13271 13273 -13272 0
c Encoding variable: aux702 with domain: int(0..2) (representing constraint ((field_00004_00005=4) + (field_00006_00005=4)))
c Both direct and order encoding.
c Var 'aux702' order represents '0' with '13274'
c Var 'aux702' direct represents '0' with '13274'
c Var 'aux702' order represents '1' with '13275'
-13274 13275 0
c Var 'aux702' direct represents '1' with '13276'
13274 -13275 13276 0
-13276 13275 0
-13276 -13274 0
c Var 'aux702' direct represents '2' with '-13275'
13274 13276 -13275 0
c Encoding variable: aux703 with domain: int(0..2) (representing constraint ((field_00001_00005=4) + (field_00009_00005=4)))
c Both direct and order encoding.
c Var 'aux703' order represents '0' with '13277'
c Var 'aux703' direct represents '0' with '13277'
c Var 'aux703' order represents '1' with '13278'
-13277 13278 0
c Var 'aux703' direct represents '1' with '13279'
13277 -13278 13279 0
-13279 13278 0
-13279 -13277 0
c Var 'aux703' direct represents '2' with '-13278'
13277 13279 -13278 0
c Encoding variable: aux704 with domain: int(0..2) (representing constraint ((field_00008_00005=4) + (field_00007_00005=4)))
c Both direct and order encoding.
c Var 'aux704' order represents '0' with '13280'
c Var 'aux704' direct represents '0' with '13280'
c Var 'aux704' order represents '1' with '13281'
-13280 13281 0
c Var 'aux704' direct represents '1' with '13282'
13280 -13281 13282 0
-13282 13281 0
-13282 -13280 0
c Var 'aux704' direct represents '2' with '-13281'
13280 13282 -13281 0
c Encoding variable: aux705 with domain: int(0..2) (representing constraint ((field_00003_00005=4) + (field_00005_00005=4)))
c Both direct and order encoding.
c Var 'aux705' order represents '0' with '13283'
c Var 'aux705' direct represents '0' with '13283'
c Var 'aux705' order represents '1' with '13284'
-13283 13284 0
c Var 'aux705' direct represents '1' with '13285'
13283 -13284 13285 0
-13285 13284 0
-13285 -13283 0
c Var 'aux705' direct represents '2' with '-13284'
13283 13285 -13284 0
c Encoding variable: aux706 with domain: int(0..3) (representing constraint ((field_00002_00005=4) + aux705))
c Both direct and order encoding.
c Var 'aux706' order represents '0' with '13286'
c Var 'aux706' direct represents '0' with '13286'
c Var 'aux706' order represents '1' with '13287'
-13286 13287 0
c Var 'aux706' direct represents '1' with '13288'
13286 -13287 13288 0
-13288 13287 0
-13288 -13286 0
c Var 'aux706' order represents '2' with '13289'
-13287 13289 0
c Var 'aux706' direct represents '2' with '13290'
13287 -13289 13290 0
-13290 13289 0
-13290 -13287 0
c Var 'aux706' direct represents '3' with '-13289'
13286 13288 13290 -13289 0
c Encoding variable: aux707 with domain: int(0..4) (representing constraint (aux702 + aux704))
c Both direct and order encoding.
c Var 'aux707' order represents '0' with '13291'
c Var 'aux707' direct represents '0' with '13291'
c Var 'aux707' order represents '1' with '13292'
-13291 13292 0
c Var 'aux707' direct represents '1' with '13293'
13291 -13292 13293 0
-13293 13292 0
-13293 -13291 0
c Var 'aux707' order represents '2' with '13294'
-13292 13294 0
c Var 'aux707' direct represents '2' with '13295'
13292 -13294 13295 0
-13295 13294 0
-13295 -13292 0
c Var 'aux707' order represents '3' with '13296'
-13294 13296 0
c Var 'aux707' direct represents '3' with '13297'
13294 -13296 13297 0
-13297 13296 0
-13297 -13294 0
c Var 'aux707' direct represents '4' with '-13296'
13291 13293 13295 13297 -13296 0
c Encoding variable: aux708 with domain: int(0..2) (representing constraint ((field_00004_00005=5) + (field_00006_00005=5)))
c Both direct and order encoding.
c Var 'aux708' order represents '0' with '13298'
c Var 'aux708' direct represents '0' with '13298'
c Var 'aux708' order represents '1' with '13299'
-13298 13299 0
c Var 'aux708' direct represents '1' with '13300'
13298 -13299 13300 0
-13300 13299 0
-13300 -13298 0
c Var 'aux708' direct represents '2' with '-13299'
13298 13300 -13299 0
c Encoding variable: aux709 with domain: int(0..2) (representing constraint ((field_00001_00005=5) + (field_00009_00005=5)))
c Both direct and order encoding.
c Var 'aux709' order represents '0' with '13301'
c Var 'aux709' direct represents '0' with '13301'
c Var 'aux709' order represents '1' with '13302'
-13301 13302 0
c Var 'aux709' direct represents '1' with '13303'
13301 -13302 13303 0
-13303 13302 0
-13303 -13301 0
c Var 'aux709' direct represents '2' with '-13302'
13301 13303 -13302 0
c Encoding variable: aux710 with domain: int(0..2) (representing constraint ((field_00008_00005=5) + (field_00007_00005=5)))
c Both direct and order encoding.
c Var 'aux710' order represents '0' with '13304'
c Var 'aux710' direct represents '0' with '13304'
c Var 'aux710' order represents '1' with '13305'
-13304 13305 0
c Var 'aux710' direct represents '1' with '13306'
13304 -13305 13306 0
-13306 13305 0
-13306 -13304 0
c Var 'aux710' direct represents '2' with '-13305'
13304 13306 -13305 0
c Encoding variable: aux711 with domain: int(0..2) (representing constraint ((field_00003_00005=5) + (field_00005_00005=5)))
c Both direct and order encoding.
c Var 'aux711' order represents '0' with '13307'
c Var 'aux711' direct represents '0' with '13307'
c Var 'aux711' order represents '1' with '13308'
-13307 13308 0
c Var 'aux711' direct represents '1' with '13309'
13307 -13308 13309 0
-13309 13308 0
-13309 -13307 0
c Var 'aux711' direct represents '2' with '-13308'
13307 13309 -13308 0
c Encoding variable: aux712 with domain: int(0..3) (representing constraint ((field_00002_00005=5) + aux711))
c Both direct and order encoding.
c Var 'aux712' order represents '0' with '13310'
c Var 'aux712' direct represents '0' with '13310'
c Var 'aux712' order represents '1' with '13311'
-13310 13311 0
c Var 'aux712' direct represents '1' with '13312'
13310 -13311 13312 0
-13312 13311 0
-13312 -13310 0
c Var 'aux712' order represents '2' with '13313'
-13311 13313 0
c Var 'aux712' direct represents '2' with '13314'
13311 -13313 13314 0
-13314 13313 0
-13314 -13311 0
c Var 'aux712' direct represents '3' with '-13313'
13310 13312 13314 -13313 0
c Encoding variable: aux713 with domain: int(0..4) (representing constraint (aux708 + aux710))
c Both direct and order encoding.
c Var 'aux713' order represents '0' with '13315'
c Var 'aux713' direct represents '0' with '13315'
c Var 'aux713' order represents '1' with '13316'
-13315 13316 0
c Var 'aux713' direct represents '1' with '13317'
13315 -13316 13317 0
-13317 13316 0
-13317 -13315 0
c Var 'aux713' order represents '2' with '13318'
-13316 13318 0
c Var 'aux713' direct represents '2' with '13319'
13316 -13318 13319 0
-13319 13318 0
-13319 -13316 0
c Var 'aux713' order represents '3' with '13320'
-13318 13320 0
c Var 'aux713' direct represents '3' with '13321'
13318 -13320 13321 0
-13321 13320 0
-13321 -13318 0
c Var 'aux713' direct represents '4' with '-13320'
13315 13317 13319 13321 -13320 0
c Encoding variable: aux714 with domain: int(0..2) (representing constraint ((field_00004_00005=6) + (field_00006_00005=6)))
c Both direct and order encoding.
c Var 'aux714' order represents '0' with '13322'
c Var 'aux714' direct represents '0' with '13322'
c Var 'aux714' order represents '1' with '13323'
-13322 13323 0
c Var 'aux714' direct represents '1' with '13324'
13322 -13323 13324 0
-13324 13323 0
-13324 -13322 0
c Var 'aux714' direct represents '2' with '-13323'
13322 13324 -13323 0
c Encoding variable: aux715 with domain: int(0..2) (representing constraint ((field_00001_00005=6) + (field_00009_00005=6)))
c Both direct and order encoding.
c Var 'aux715' order represents '0' with '13325'
c Var 'aux715' direct represents '0' with '13325'
c Var 'aux715' order represents '1' with '13326'
-13325 13326 0
c Var 'aux715' direct represents '1' with '13327'
13325 -13326 13327 0
-13327 13326 0
-13327 -13325 0
c Var 'aux715' direct represents '2' with '-13326'
13325 13327 -13326 0
c Encoding variable: aux716 with domain: int(0..2) (representing constraint ((field_00008_00005=6) + (field_00007_00005=6)))
c Both direct and order encoding.
c Var 'aux716' order represents '0' with '13328'
c Var 'aux716' direct represents '0' with '13328'
c Var 'aux716' order represents '1' with '13329'
-13328 13329 0
c Var 'aux716' direct represents '1' with '13330'
13328 -13329 13330 0
-13330 13329 0
-13330 -13328 0
c Var 'aux716' direct represents '2' with '-13329'
13328 13330 -13329 0
c Encoding variable: aux717 with domain: int(0..2) (representing constraint ((field_00003_00005=6) + (field_00005_00005=6)))
c Both direct and order encoding.
c Var 'aux717' order represents '0' with '13331'
c Var 'aux717' direct represents '0' with '13331'
c Var 'aux717' order represents '1' with '13332'
-13331 13332 0
c Var 'aux717' direct represents '1' with '13333'
13331 -13332 13333 0
-13333 13332 0
-13333 -13331 0
c Var 'aux717' direct represents '2' with '-13332'
13331 13333 -13332 0
c Encoding variable: aux718 with domain: int(0..3) (representing constraint ((field_00002_00005=6) + aux717))
c Both direct and order encoding.
c Var 'aux718' order represents '0' with '13334'
c Var 'aux718' direct represents '0' with '13334'
c Var 'aux718' order represents '1' with '13335'
-13334 13335 0
c Var 'aux718' direct represents '1' with '13336'
13334 -13335 13336 0
-13336 13335 0
-13336 -13334 0
c Var 'aux718' order represents '2' with '13337'
-13335 13337 0
c Var 'aux718' direct represents '2' with '13338'
13335 -13337 13338 0
-13338 13337 0
-13338 -13335 0
c Var 'aux718' direct represents '3' with '-13337'
13334 13336 13338 -13337 0
c Encoding variable: aux719 with domain: int(0..4) (representing constraint (aux714 + aux716))
c Both direct and order encoding.
c Var 'aux719' order represents '0' with '13339'
c Var 'aux719' direct represents '0' with '13339'
c Var 'aux719' order represents '1' with '13340'
-13339 13340 0
c Var 'aux719' direct represents '1' with '13341'
13339 -13340 13341 0
-13341 13340 0
-13341 -13339 0
c Var 'aux719' order represents '2' with '13342'
-13340 13342 0
c Var 'aux719' direct represents '2' with '13343'
13340 -13342 13343 0
-13343 13342 0
-13343 -13340 0
c Var 'aux719' order represents '3' with '13344'
-13342 13344 0
c Var 'aux719' direct represents '3' with '13345'
13342 -13344 13345 0
-13345 13344 0
-13345 -13342 0
c Var 'aux719' direct represents '4' with '-13344'
13339 13341 13343 13345 -13344 0
c Encoding variable: aux720 with domain: int(0..2) (representing constraint ((field_00004_00005=7) + (field_00006_00005=7)))
c Both direct and order encoding.
c Var 'aux720' order represents '0' with '13346'
c Var 'aux720' direct represents '0' with '13346'
c Var 'aux720' order represents '1' with '13347'
-13346 13347 0
c Var 'aux720' direct represents '1' with '13348'
13346 -13347 13348 0
-13348 13347 0
-13348 -13346 0
c Var 'aux720' direct represents '2' with '-13347'
13346 13348 -13347 0
c Encoding variable: aux721 with domain: int(0..2) (representing constraint ((field_00001_00005=7) + (field_00009_00005=7)))
c Both direct and order encoding.
c Var 'aux721' order represents '0' with '13349'
c Var 'aux721' direct represents '0' with '13349'
c Var 'aux721' order represents '1' with '13350'
-13349 13350 0
c Var 'aux721' direct represents '1' with '13351'
13349 -13350 13351 0
-13351 13350 0
-13351 -13349 0
c Var 'aux721' direct represents '2' with '-13350'
13349 13351 -13350 0
c Encoding variable: aux722 with domain: int(0..2) (representing constraint ((field_00008_00005=7) + (field_00007_00005=7)))
c Both direct and order encoding.
c Var 'aux722' order represents '0' with '13352'
c Var 'aux722' direct represents '0' with '13352'
c Var 'aux722' order represents '1' with '13353'
-13352 13353 0
c Var 'aux722' direct represents '1' with '13354'
13352 -13353 13354 0
-13354 13353 0
-13354 -13352 0
c Var 'aux722' direct represents '2' with '-13353'
13352 13354 -13353 0
c Encoding variable: aux723 with domain: int(0..2) (representing constraint ((field_00003_00005=7) + (field_00005_00005=7)))
c Both direct and order encoding.
c Var 'aux723' order represents '0' with '13355'
c Var 'aux723' direct represents '0' with '13355'
c Var 'aux723' order represents '1' with '13356'
-13355 13356 0
c Var 'aux723' direct represents '1' with '13357'
13355 -13356 13357 0
-13357 13356 0
-13357 -13355 0
c Var 'aux723' direct represents '2' with '-13356'
13355 13357 -13356 0
c Encoding variable: aux724 with domain: int(0..3) (representing constraint ((field_00002_00005=7) + aux723))
c Both direct and order encoding.
c Var 'aux724' order represents '0' with '13358'
c Var 'aux724' direct represents '0' with '13358'
c Var 'aux724' order represents '1' with '13359'
-13358 13359 0
c Var 'aux724' direct represents '1' with '13360'
13358 -13359 13360 0
-13360 13359 0
-13360 -13358 0
c Var 'aux724' order represents '2' with '13361'
-13359 13361 0
c Var 'aux724' direct represents '2' with '13362'
13359 -13361 13362 0
-13362 13361 0
-13362 -13359 0
c Var 'aux724' direct represents '3' with '-13361'
13358 13360 13362 -13361 0
c Encoding variable: aux725 with domain: int(0..4) (representing constraint (aux720 + aux722))
c Both direct and order encoding.
c Var 'aux725' order represents '0' with '13363'
c Var 'aux725' direct represents '0' with '13363'
c Var 'aux725' order represents '1' with '13364'
-13363 13364 0
c Var 'aux725' direct represents '1' with '13365'
13363 -13364 13365 0
-13365 13364 0
-13365 -13363 0
c Var 'aux725' order represents '2' with '13366'
-13364 13366 0
c Var 'aux725' direct represents '2' with '13367'
13364 -13366 13367 0
-13367 13366 0
-13367 -13364 0
c Var 'aux725' order represents '3' with '13368'
-13366 13368 0
c Var 'aux725' direct represents '3' with '13369'
13366 -13368 13369 0
-13369 13368 0
-13369 -13366 0
c Var 'aux725' direct represents '4' with '-13368'
13363 13365 13367 13369 -13368 0
c Encoding variable: aux726 with domain: int(0..2) (representing constraint ((field_00004_00005=8) + (field_00006_00005=8)))
c Both direct and order encoding.
c Var 'aux726' order represents '0' with '13370'
c Var 'aux726' direct represents '0' with '13370'
c Var 'aux726' order represents '1' with '13371'
-13370 13371 0
c Var 'aux726' direct represents '1' with '13372'
13370 -13371 13372 0
-13372 13371 0
-13372 -13370 0
c Var 'aux726' direct represents '2' with '-13371'
13370 13372 -13371 0
c Encoding variable: aux727 with domain: int(0..2) (representing constraint ((field_00001_00005=8) + (field_00009_00005=8)))
c Both direct and order encoding.
c Var 'aux727' order represents '0' with '13373'
c Var 'aux727' direct represents '0' with '13373'
c Var 'aux727' order represents '1' with '13374'
-13373 13374 0
c Var 'aux727' direct represents '1' with '13375'
13373 -13374 13375 0
-13375 13374 0
-13375 -13373 0
c Var 'aux727' direct represents '2' with '-13374'
13373 13375 -13374 0
c Encoding variable: aux728 with domain: int(0..2) (representing constraint ((field_00008_00005=8) + (field_00007_00005=8)))
c Both direct and order encoding.
c Var 'aux728' order represents '0' with '13376'
c Var 'aux728' direct represents '0' with '13376'
c Var 'aux728' order represents '1' with '13377'
-13376 13377 0
c Var 'aux728' direct represents '1' with '13378'
13376 -13377 13378 0
-13378 13377 0
-13378 -13376 0
c Var 'aux728' direct represents '2' with '-13377'
13376 13378 -13377 0
c Encoding variable: aux729 with domain: int(0..2) (representing constraint ((field_00003_00005=8) + (field_00005_00005=8)))
c Both direct and order encoding.
c Var 'aux729' order represents '0' with '13379'
c Var 'aux729' direct represents '0' with '13379'
c Var 'aux729' order represents '1' with '13380'
-13379 13380 0
c Var 'aux729' direct represents '1' with '13381'
13379 -13380 13381 0
-13381 13380 0
-13381 -13379 0
c Var 'aux729' direct represents '2' with '-13380'
13379 13381 -13380 0
c Encoding variable: aux730 with domain: int(0..3) (representing constraint ((field_00002_00005=8) + aux729))
c Both direct and order encoding.
c Var 'aux730' order represents '0' with '13382'
c Var 'aux730' direct represents '0' with '13382'
c Var 'aux730' order represents '1' with '13383'
-13382 13383 0
c Var 'aux730' direct represents '1' with '13384'
13382 -13383 13384 0
-13384 13383 0
-13384 -13382 0
c Var 'aux730' order represents '2' with '13385'
-13383 13385 0
c Var 'aux730' direct represents '2' with '13386'
13383 -13385 13386 0
-13386 13385 0
-13386 -13383 0
c Var 'aux730' direct represents '3' with '-13385'
13382 13384 13386 -13385 0
c Encoding variable: aux731 with domain: int(0..4) (representing constraint (aux726 + aux728))
c Both direct and order encoding.
c Var 'aux731' order represents '0' with '13387'
c Var 'aux731' direct represents '0' with '13387'
c Var 'aux731' order represents '1' with '13388'
-13387 13388 0
c Var 'aux731' direct represents '1' with '13389'
13387 -13388 13389 0
-13389 13388 0
-13389 -13387 0
c Var 'aux731' order represents '2' with '13390'
-13388 13390 0
c Var 'aux731' direct represents '2' with '13391'
13388 -13390 13391 0
-13391 13390 0
-13391 -13388 0
c Var 'aux731' order represents '3' with '13392'
-13390 13392 0
c Var 'aux731' direct represents '3' with '13393'
13390 -13392 13393 0
-13393 13392 0
-13393 -13390 0
c Var 'aux731' direct represents '4' with '-13392'
13387 13389 13391 13393 -13392 0
c Encoding variable: aux732 with domain: int(0..2) (representing constraint ((field_00004_00005=9) + (field_00006_00005=9)))
c Both direct and order encoding.
c Var 'aux732' order represents '0' with '13394'
c Var 'aux732' direct represents '0' with '13394'
c Var 'aux732' order represents '1' with '13395'
-13394 13395 0
c Var 'aux732' direct represents '1' with '13396'
13394 -13395 13396 0
-13396 13395 0
-13396 -13394 0
c Var 'aux732' direct represents '2' with '-13395'
13394 13396 -13395 0
c Encoding variable: aux733 with domain: int(0..2) (representing constraint ((field_00001_00005=9) + (field_00009_00005=9)))
c Both direct and order encoding.
c Var 'aux733' order represents '0' with '13397'
c Var 'aux733' direct represents '0' with '13397'
c Var 'aux733' order represents '1' with '13398'
-13397 13398 0
c Var 'aux733' direct represents '1' with '13399'
13397 -13398 13399 0
-13399 13398 0
-13399 -13397 0
c Var 'aux733' direct represents '2' with '-13398'
13397 13399 -13398 0
c Encoding variable: aux734 with domain: int(0..2) (representing constraint ((field_00008_00005=9) + (field_00007_00005=9)))
c Both direct and order encoding.
c Var 'aux734' order represents '0' with '13400'
c Var 'aux734' direct represents '0' with '13400'
c Var 'aux734' order represents '1' with '13401'
-13400 13401 0
c Var 'aux734' direct represents '1' with '13402'
13400 -13401 13402 0
-13402 13401 0
-13402 -13400 0
c Var 'aux734' direct represents '2' with '-13401'
13400 13402 -13401 0
c Encoding variable: aux735 with domain: int(0..2) (representing constraint ((field_00003_00005=9) + (field_00005_00005=9)))
c Both direct and order encoding.
c Var 'aux735' order represents '0' with '13403'
c Var 'aux735' direct represents '0' with '13403'
c Var 'aux735' order represents '1' with '13404'
-13403 13404 0
c Var 'aux735' direct represents '1' with '13405'
13403 -13404 13405 0
-13405 13404 0
-13405 -13403 0
c Var 'aux735' direct represents '2' with '-13404'
13403 13405 -13404 0
c Encoding variable: aux736 with domain: int(0..3) (representing constraint ((field_00002_00005=9) + aux735))
c Both direct and order encoding.
c Var 'aux736' order represents '0' with '13406'
c Var 'aux736' direct represents '0' with '13406'
c Var 'aux736' order represents '1' with '13407'
-13406 13407 0
c Var 'aux736' direct represents '1' with '13408'
13406 -13407 13408 0
-13408 13407 0
-13408 -13406 0
c Var 'aux736' order represents '2' with '13409'
-13407 13409 0
c Var 'aux736' direct represents '2' with '13410'
13407 -13409 13410 0
-13410 13409 0
-13410 -13407 0
c Var 'aux736' direct represents '3' with '-13409'
13406 13408 13410 -13409 0
c Encoding variable: aux737 with domain: int(0..4) (representing constraint (aux732 + aux734))
c Both direct and order encoding.
c Var 'aux737' order represents '0' with '13411'
c Var 'aux737' direct represents '0' with '13411'
c Var 'aux737' order represents '1' with '13412'
-13411 13412 0
c Var 'aux737' direct represents '1' with '13413'
13411 -13412 13413 0
-13413 13412 0
-13413 -13411 0
c Var 'aux737' order represents '2' with '13414'
-13412 13414 0
c Var 'aux737' direct represents '2' with '13415'
13412 -13414 13415 0
-13415 13414 0
-13415 -13412 0
c Var 'aux737' order represents '3' with '13416'
-13414 13416 0
c Var 'aux737' direct represents '3' with '13417'
13414 -13416 13417 0
-13417 13416 0
-13417 -13414 0
c Var 'aux737' direct represents '4' with '-13416'
13411 13413 13415 13417 -13416 0
c Encoding variable: aux738 with domain: int(0..2) (representing constraint ((field_00004_00006=1) + (field_00006_00006=1)))
c Both direct and order encoding.
c Var 'aux738' order represents '0' with '13418'
c Var 'aux738' direct represents '0' with '13418'
c Var 'aux738' order represents '1' with '13419'
-13418 13419 0
c Var 'aux738' direct represents '1' with '13420'
13418 -13419 13420 0
-13420 13419 0
-13420 -13418 0
c Var 'aux738' direct represents '2' with '-13419'
13418 13420 -13419 0
c Encoding variable: aux739 with domain: int(0..2) (representing constraint ((field_00001_00006=1) + (field_00009_00006=1)))
c Both direct and order encoding.
c Var 'aux739' order represents '0' with '13421'
c Var 'aux739' direct represents '0' with '13421'
c Var 'aux739' order represents '1' with '13422'
-13421 13422 0
c Var 'aux739' direct represents '1' with '13423'
13421 -13422 13423 0
-13423 13422 0
-13423 -13421 0
c Var 'aux739' direct represents '2' with '-13422'
13421 13423 -13422 0
c Encoding variable: aux740 with domain: int(0..2) (representing constraint ((field_00008_00006=1) + (field_00007_00006=1)))
c Both direct and order encoding.
c Var 'aux740' order represents '0' with '13424'
c Var 'aux740' direct represents '0' with '13424'
c Var 'aux740' order represents '1' with '13425'
-13424 13425 0
c Var 'aux740' direct represents '1' with '13426'
13424 -13425 13426 0
-13426 13425 0
-13426 -13424 0
c Var 'aux740' direct represents '2' with '-13425'
13424 13426 -13425 0
c Encoding variable: aux741 with domain: int(0..2) (representing constraint ((field_00003_00006=1) + (field_00005_00006=1)))
c Both direct and order encoding.
c Var 'aux741' order represents '0' with '13427'
c Var 'aux741' direct represents '0' with '13427'
c Var 'aux741' order represents '1' with '13428'
-13427 13428 0
c Var 'aux741' direct represents '1' with '13429'
13427 -13428 13429 0
-13429 13428 0
-13429 -13427 0
c Var 'aux741' direct represents '2' with '-13428'
13427 13429 -13428 0
c Encoding variable: aux742 with domain: int(0..3) (representing constraint ((field_00002_00006=1) + aux741))
c Both direct and order encoding.
c Var 'aux742' order represents '0' with '13430'
c Var 'aux742' direct represents '0' with '13430'
c Var 'aux742' order represents '1' with '13431'
-13430 13431 0
c Var 'aux742' direct represents '1' with '13432'
13430 -13431 13432 0
-13432 13431 0
-13432 -13430 0
c Var 'aux742' order represents '2' with '13433'
-13431 13433 0
c Var 'aux742' direct represents '2' with '13434'
13431 -13433 13434 0
-13434 13433 0
-13434 -13431 0
c Var 'aux742' direct represents '3' with '-13433'
13430 13432 13434 -13433 0
c Encoding variable: aux743 with domain: int(0..4) (representing constraint (aux738 + aux740))
c Both direct and order encoding.
c Var 'aux743' order represents '0' with '13435'
c Var 'aux743' direct represents '0' with '13435'
c Var 'aux743' order represents '1' with '13436'
-13435 13436 0
c Var 'aux743' direct represents '1' with '13437'
13435 -13436 13437 0
-13437 13436 0
-13437 -13435 0
c Var 'aux743' order represents '2' with '13438'
-13436 13438 0
c Var 'aux743' direct represents '2' with '13439'
13436 -13438 13439 0
-13439 13438 0
-13439 -13436 0
c Var 'aux743' order represents '3' with '13440'
-13438 13440 0
c Var 'aux743' direct represents '3' with '13441'
13438 -13440 13441 0
-13441 13440 0
-13441 -13438 0
c Var 'aux743' direct represents '4' with '-13440'
13435 13437 13439 13441 -13440 0
c Encoding variable: aux744 with domain: int(0..2) (representing constraint ((field_00004_00006=2) + (field_00006_00006=2)))
c Both direct and order encoding.
c Var 'aux744' order represents '0' with '13442'
c Var 'aux744' direct represents '0' with '13442'
c Var 'aux744' order represents '1' with '13443'
-13442 13443 0
c Var 'aux744' direct represents '1' with '13444'
13442 -13443 13444 0
-13444 13443 0
-13444 -13442 0
c Var 'aux744' direct represents '2' with '-13443'
13442 13444 -13443 0
c Encoding variable: aux745 with domain: int(0..2) (representing constraint ((field_00001_00006=2) + (field_00009_00006=2)))
c Both direct and order encoding.
c Var 'aux745' order represents '0' with '13445'
c Var 'aux745' direct represents '0' with '13445'
c Var 'aux745' order represents '1' with '13446'
-13445 13446 0
c Var 'aux745' direct represents '1' with '13447'
13445 -13446 13447 0
-13447 13446 0
-13447 -13445 0
c Var 'aux745' direct represents '2' with '-13446'
13445 13447 -13446 0
c Encoding variable: aux746 with domain: int(0..2) (representing constraint ((field_00008_00006=2) + (field_00007_00006=2)))
c Both direct and order encoding.
c Var 'aux746' order represents '0' with '13448'
c Var 'aux746' direct represents '0' with '13448'
c Var 'aux746' order represents '1' with '13449'
-13448 13449 0
c Var 'aux746' direct represents '1' with '13450'
13448 -13449 13450 0
-13450 13449 0
-13450 -13448 0
c Var 'aux746' direct represents '2' with '-13449'
13448 13450 -13449 0
c Encoding variable: aux747 with domain: int(0..2) (representing constraint ((field_00003_00006=2) + (field_00005_00006=2)))
c Both direct and order encoding.
c Var 'aux747' order represents '0' with '13451'
c Var 'aux747' direct represents '0' with '13451'
c Var 'aux747' order represents '1' with '13452'
-13451 13452 0
c Var 'aux747' direct represents '1' with '13453'
13451 -13452 13453 0
-13453 13452 0
-13453 -13451 0
c Var 'aux747' direct represents '2' with '-13452'
13451 13453 -13452 0
c Encoding variable: aux748 with domain: int(0..3) (representing constraint ((field_00002_00006=2) + aux747))
c Both direct and order encoding.
c Var 'aux748' order represents '0' with '13454'
c Var 'aux748' direct represents '0' with '13454'
c Var 'aux748' order represents '1' with '13455'
-13454 13455 0
c Var 'aux748' direct represents '1' with '13456'
13454 -13455 13456 0
-13456 13455 0
-13456 -13454 0
c Var 'aux748' order represents '2' with '13457'
-13455 13457 0
c Var 'aux748' direct represents '2' with '13458'
13455 -13457 13458 0
-13458 13457 0
-13458 -13455 0
c Var 'aux748' direct represents '3' with '-13457'
13454 13456 13458 -13457 0
c Encoding variable: aux749 with domain: int(0..4) (representing constraint (aux744 + aux746))
c Both direct and order encoding.
c Var 'aux749' order represents '0' with '13459'
c Var 'aux749' direct represents '0' with '13459'
c Var 'aux749' order represents '1' with '13460'
-13459 13460 0
c Var 'aux749' direct represents '1' with '13461'
13459 -13460 13461 0
-13461 13460 0
-13461 -13459 0
c Var 'aux749' order represents '2' with '13462'
-13460 13462 0
c Var 'aux749' direct represents '2' with '13463'
13460 -13462 13463 0
-13463 13462 0
-13463 -13460 0
c Var 'aux749' order represents '3' with '13464'
-13462 13464 0
c Var 'aux749' direct represents '3' with '13465'
13462 -13464 13465 0
-13465 13464 0
-13465 -13462 0
c Var 'aux749' direct represents '4' with '-13464'
13459 13461 13463 13465 -13464 0
c Encoding variable: aux750 with domain: int(0..2) (representing constraint ((field_00004_00006=3) + (field_00006_00006=3)))
c Both direct and order encoding.
c Var 'aux750' order represents '0' with '13466'
c Var 'aux750' direct represents '0' with '13466'
c Var 'aux750' order represents '1' with '13467'
-13466 13467 0
c Var 'aux750' direct represents '1' with '13468'
13466 -13467 13468 0
-13468 13467 0
-13468 -13466 0
c Var 'aux750' direct represents '2' with '-13467'
13466 13468 -13467 0
c Encoding variable: aux751 with domain: int(0..2) (representing constraint ((field_00001_00006=3) + (field_00009_00006=3)))
c Both direct and order encoding.
c Var 'aux751' order represents '0' with '13469'
c Var 'aux751' direct represents '0' with '13469'
c Var 'aux751' order represents '1' with '13470'
-13469 13470 0
c Var 'aux751' direct represents '1' with '13471'
13469 -13470 13471 0
-13471 13470 0
-13471 -13469 0
c Var 'aux751' direct represents '2' with '-13470'
13469 13471 -13470 0
c Encoding variable: aux752 with domain: int(0..2) (representing constraint ((field_00008_00006=3) + (field_00007_00006=3)))
c Both direct and order encoding.
c Var 'aux752' order represents '0' with '13472'
c Var 'aux752' direct represents '0' with '13472'
c Var 'aux752' order represents '1' with '13473'
-13472 13473 0
c Var 'aux752' direct represents '1' with '13474'
13472 -13473 13474 0
-13474 13473 0
-13474 -13472 0
c Var 'aux752' direct represents '2' with '-13473'
13472 13474 -13473 0
c Encoding variable: aux753 with domain: int(0..2) (representing constraint ((field_00003_00006=3) + (field_00005_00006=3)))
c Both direct and order encoding.
c Var 'aux753' order represents '0' with '13475'
c Var 'aux753' direct represents '0' with '13475'
c Var 'aux753' order represents '1' with '13476'
-13475 13476 0
c Var 'aux753' direct represents '1' with '13477'
13475 -13476 13477 0
-13477 13476 0
-13477 -13475 0
c Var 'aux753' direct represents '2' with '-13476'
13475 13477 -13476 0
c Encoding variable: aux754 with domain: int(0..3) (representing constraint ((field_00002_00006=3) + aux753))
c Both direct and order encoding.
c Var 'aux754' order represents '0' with '13478'
c Var 'aux754' direct represents '0' with '13478'
c Var 'aux754' order represents '1' with '13479'
-13478 13479 0
c Var 'aux754' direct represents '1' with '13480'
13478 -13479 13480 0
-13480 13479 0
-13480 -13478 0
c Var 'aux754' order represents '2' with '13481'
-13479 13481 0
c Var 'aux754' direct represents '2' with '13482'
13479 -13481 13482 0
-13482 13481 0
-13482 -13479 0
c Var 'aux754' direct represents '3' with '-13481'
13478 13480 13482 -13481 0
c Encoding variable: aux755 with domain: int(0..4) (representing constraint (aux750 + aux752))
c Both direct and order encoding.
c Var 'aux755' order represents '0' with '13483'
c Var 'aux755' direct represents '0' with '13483'
c Var 'aux755' order represents '1' with '13484'
-13483 13484 0
c Var 'aux755' direct represents '1' with '13485'
13483 -13484 13485 0
-13485 13484 0
-13485 -13483 0
c Var 'aux755' order represents '2' with '13486'
-13484 13486 0
c Var 'aux755' direct represents '2' with '13487'
13484 -13486 13487 0
-13487 13486 0
-13487 -13484 0
c Var 'aux755' order represents '3' with '13488'
-13486 13488 0
c Var 'aux755' direct represents '3' with '13489'
13486 -13488 13489 0
-13489 13488 0
-13489 -13486 0
c Var 'aux755' direct represents '4' with '-13488'
13483 13485 13487 13489 -13488 0
c Encoding variable: aux756 with domain: int(0..2) (representing constraint ((field_00004_00006=4) + (field_00006_00006=4)))
c Both direct and order encoding.
c Var 'aux756' order represents '0' with '13490'
c Var 'aux756' direct represents '0' with '13490'
c Var 'aux756' order represents '1' with '13491'
-13490 13491 0
c Var 'aux756' direct represents '1' with '13492'
13490 -13491 13492 0
-13492 13491 0
-13492 -13490 0
c Var 'aux756' direct represents '2' with '-13491'
13490 13492 -13491 0
c Encoding variable: aux757 with domain: int(0..2) (representing constraint ((field_00001_00006=4) + (field_00009_00006=4)))
c Both direct and order encoding.
c Var 'aux757' order represents '0' with '13493'
c Var 'aux757' direct represents '0' with '13493'
c Var 'aux757' order represents '1' with '13494'
-13493 13494 0
c Var 'aux757' direct represents '1' with '13495'
13493 -13494 13495 0
-13495 13494 0
-13495 -13493 0
c Var 'aux757' direct represents '2' with '-13494'
13493 13495 -13494 0
c Encoding variable: aux758 with domain: int(0..2) (representing constraint ((field_00008_00006=4) + (field_00007_00006=4)))
c Both direct and order encoding.
c Var 'aux758' order represents '0' with '13496'
c Var 'aux758' direct represents '0' with '13496'
c Var 'aux758' order represents '1' with '13497'
-13496 13497 0
c Var 'aux758' direct represents '1' with '13498'
13496 -13497 13498 0
-13498 13497 0
-13498 -13496 0
c Var 'aux758' direct represents '2' with '-13497'
13496 13498 -13497 0
c Encoding variable: aux759 with domain: int(0..2) (representing constraint ((field_00003_00006=4) + (field_00005_00006=4)))
c Both direct and order encoding.
c Var 'aux759' order represents '0' with '13499'
c Var 'aux759' direct represents '0' with '13499'
c Var 'aux759' order represents '1' with '13500'
-13499 13500 0
c Var 'aux759' direct represents '1' with '13501'
13499 -13500 13501 0
-13501 13500 0
-13501 -13499 0
c Var 'aux759' direct represents '2' with '-13500'
13499 13501 -13500 0
c Encoding variable: aux760 with domain: int(0..3) (representing constraint ((field_00002_00006=4) + aux759))
c Both direct and order encoding.
c Var 'aux760' order represents '0' with '13502'
c Var 'aux760' direct represents '0' with '13502'
c Var 'aux760' order represents '1' with '13503'
-13502 13503 0
c Var 'aux760' direct represents '1' with '13504'
13502 -13503 13504 0
-13504 13503 0
-13504 -13502 0
c Var 'aux760' order represents '2' with '13505'
-13503 13505 0
c Var 'aux760' direct represents '2' with '13506'
13503 -13505 13506 0
-13506 13505 0
-13506 -13503 0
c Var 'aux760' direct represents '3' with '-13505'
13502 13504 13506 -13505 0
c Encoding variable: aux761 with domain: int(0..4) (representing constraint (aux756 + aux758))
c Both direct and order encoding.
c Var 'aux761' order represents '0' with '13507'
c Var 'aux761' direct represents '0' with '13507'
c Var 'aux761' order represents '1' with '13508'
-13507 13508 0
c Var 'aux761' direct represents '1' with '13509'
13507 -13508 13509 0
-13509 13508 0
-13509 -13507 0
c Var 'aux761' order represents '2' with '13510'
-13508 13510 0
c Var 'aux761' direct represents '2' with '13511'
13508 -13510 13511 0
-13511 13510 0
-13511 -13508 0
c Var 'aux761' order represents '3' with '13512'
-13510 13512 0
c Var 'aux761' direct represents '3' with '13513'
13510 -13512 13513 0
-13513 13512 0
-13513 -13510 0
c Var 'aux761' direct represents '4' with '-13512'
13507 13509 13511 13513 -13512 0
c Encoding variable: aux762 with domain: int(0..2) (representing constraint ((field_00004_00006=5) + (field_00006_00006=5)))
c Both direct and order encoding.
c Var 'aux762' order represents '0' with '13514'
c Var 'aux762' direct represents '0' with '13514'
c Var 'aux762' order represents '1' with '13515'
-13514 13515 0
c Var 'aux762' direct represents '1' with '13516'
13514 -13515 13516 0
-13516 13515 0
-13516 -13514 0
c Var 'aux762' direct represents '2' with '-13515'
13514 13516 -13515 0
c Encoding variable: aux763 with domain: int(0..2) (representing constraint ((field_00001_00006=5) + (field_00009_00006=5)))
c Both direct and order encoding.
c Var 'aux763' order represents '0' with '13517'
c Var 'aux763' direct represents '0' with '13517'
c Var 'aux763' order represents '1' with '13518'
-13517 13518 0
c Var 'aux763' direct represents '1' with '13519'
13517 -13518 13519 0
-13519 13518 0
-13519 -13517 0
c Var 'aux763' direct represents '2' with '-13518'
13517 13519 -13518 0
c Encoding variable: aux764 with domain: int(0..2) (representing constraint ((field_00008_00006=5) + (field_00007_00006=5)))
c Both direct and order encoding.
c Var 'aux764' order represents '0' with '13520'
c Var 'aux764' direct represents '0' with '13520'
c Var 'aux764' order represents '1' with '13521'
-13520 13521 0
c Var 'aux764' direct represents '1' with '13522'
13520 -13521 13522 0
-13522 13521 0
-13522 -13520 0
c Var 'aux764' direct represents '2' with '-13521'
13520 13522 -13521 0
c Encoding variable: aux765 with domain: int(0..2) (representing constraint ((field_00003_00006=5) + (field_00005_00006=5)))
c Both direct and order encoding.
c Var 'aux765' order represents '0' with '13523'
c Var 'aux765' direct represents '0' with '13523'
c Var 'aux765' order represents '1' with '13524'
-13523 13524 0
c Var 'aux765' direct represents '1' with '13525'
13523 -13524 13525 0
-13525 13524 0
-13525 -13523 0
c Var 'aux765' direct represents '2' with '-13524'
13523 13525 -13524 0
c Encoding variable: aux766 with domain: int(0..3) (representing constraint ((field_00002_00006=5) + aux765))
c Both direct and order encoding.
c Var 'aux766' order represents '0' with '13526'
c Var 'aux766' direct represents '0' with '13526'
c Var 'aux766' order represents '1' with '13527'
-13526 13527 0
c Var 'aux766' direct represents '1' with '13528'
13526 -13527 13528 0
-13528 13527 0
-13528 -13526 0
c Var 'aux766' order represents '2' with '13529'
-13527 13529 0
c Var 'aux766' direct represents '2' with '13530'
13527 -13529 13530 0
-13530 13529 0
-13530 -13527 0
c Var 'aux766' direct represents '3' with '-13529'
13526 13528 13530 -13529 0
c Encoding variable: aux767 with domain: int(0..4) (representing constraint (aux762 + aux764))
c Both direct and order encoding.
c Var 'aux767' order represents '0' with '13531'
c Var 'aux767' direct represents '0' with '13531'
c Var 'aux767' order represents '1' with '13532'
-13531 13532 0
c Var 'aux767' direct represents '1' with '13533'
13531 -13532 13533 0
-13533 13532 0
-13533 -13531 0
c Var 'aux767' order represents '2' with '13534'
-13532 13534 0
c Var 'aux767' direct represents '2' with '13535'
13532 -13534 13535 0
-13535 13534 0
-13535 -13532 0
c Var 'aux767' order represents '3' with '13536'
-13534 13536 0
c Var 'aux767' direct represents '3' with '13537'
13534 -13536 13537 0
-13537 13536 0
-13537 -13534 0
c Var 'aux767' direct represents '4' with '-13536'
13531 13533 13535 13537 -13536 0
c Encoding variable: aux768 with domain: int(0..2) (representing constraint ((field_00004_00006=6) + (field_00006_00006=6)))
c Both direct and order encoding.
c Var 'aux768' order represents '0' with '13538'
c Var 'aux768' direct represents '0' with '13538'
c Var 'aux768' order represents '1' with '13539'
-13538 13539 0
c Var 'aux768' direct represents '1' with '13540'
13538 -13539 13540 0
-13540 13539 0
-13540 -13538 0
c Var 'aux768' direct represents '2' with '-13539'
13538 13540 -13539 0
c Encoding variable: aux769 with domain: int(0..2) (representing constraint ((field_00001_00006=6) + (field_00009_00006=6)))
c Both direct and order encoding.
c Var 'aux769' order represents '0' with '13541'
c Var 'aux769' direct represents '0' with '13541'
c Var 'aux769' order represents '1' with '13542'
-13541 13542 0
c Var 'aux769' direct represents '1' with '13543'
13541 -13542 13543 0
-13543 13542 0
-13543 -13541 0
c Var 'aux769' direct represents '2' with '-13542'
13541 13543 -13542 0
c Encoding variable: aux770 with domain: int(0..2) (representing constraint ((field_00008_00006=6) + (field_00007_00006=6)))
c Both direct and order encoding.
c Var 'aux770' order represents '0' with '13544'
c Var 'aux770' direct represents '0' with '13544'
c Var 'aux770' order represents '1' with '13545'
-13544 13545 0
c Var 'aux770' direct represents '1' with '13546'
13544 -13545 13546 0
-13546 13545 0
-13546 -13544 0
c Var 'aux770' direct represents '2' with '-13545'
13544 13546 -13545 0
c Encoding variable: aux771 with domain: int(0..2) (representing constraint ((field_00003_00006=6) + (field_00005_00006=6)))
c Both direct and order encoding.
c Var 'aux771' order represents '0' with '13547'
c Var 'aux771' direct represents '0' with '13547'
c Var 'aux771' order represents '1' with '13548'
-13547 13548 0
c Var 'aux771' direct represents '1' with '13549'
13547 -13548 13549 0
-13549 13548 0
-13549 -13547 0
c Var 'aux771' direct represents '2' with '-13548'
13547 13549 -13548 0
c Encoding variable: aux772 with domain: int(0..3) (representing constraint ((field_00002_00006=6) + aux771))
c Both direct and order encoding.
c Var 'aux772' order represents '0' with '13550'
c Var 'aux772' direct represents '0' with '13550'
c Var 'aux772' order represents '1' with '13551'
-13550 13551 0
c Var 'aux772' direct represents '1' with '13552'
13550 -13551 13552 0
-13552 13551 0
-13552 -13550 0
c Var 'aux772' order represents '2' with '13553'
-13551 13553 0
c Var 'aux772' direct represents '2' with '13554'
13551 -13553 13554 0
-13554 13553 0
-13554 -13551 0
c Var 'aux772' direct represents '3' with '-13553'
13550 13552 13554 -13553 0
c Encoding variable: aux773 with domain: int(0..4) (representing constraint (aux768 + aux770))
c Both direct and order encoding.
c Var 'aux773' order represents '0' with '13555'
c Var 'aux773' direct represents '0' with '13555'
c Var 'aux773' order represents '1' with '13556'
-13555 13556 0
c Var 'aux773' direct represents '1' with '13557'
13555 -13556 13557 0
-13557 13556 0
-13557 -13555 0
c Var 'aux773' order represents '2' with '13558'
-13556 13558 0
c Var 'aux773' direct represents '2' with '13559'
13556 -13558 13559 0
-13559 13558 0
-13559 -13556 0
c Var 'aux773' order represents '3' with '13560'
-13558 13560 0
c Var 'aux773' direct represents '3' with '13561'
13558 -13560 13561 0
-13561 13560 0
-13561 -13558 0
c Var 'aux773' direct represents '4' with '-13560'
13555 13557 13559 13561 -13560 0
c Encoding variable: aux774 with domain: int(0..2) (representing constraint ((field_00004_00006=7) + (field_00006_00006=7)))
c Both direct and order encoding.
c Var 'aux774' order represents '0' with '13562'
c Var 'aux774' direct represents '0' with '13562'
c Var 'aux774' order represents '1' with '13563'
-13562 13563 0
c Var 'aux774' direct represents '1' with '13564'
13562 -13563 13564 0
-13564 13563 0
-13564 -13562 0
c Var 'aux774' direct represents '2' with '-13563'
13562 13564 -13563 0
c Encoding variable: aux775 with domain: int(0..2) (representing constraint ((field_00001_00006=7) + (field_00009_00006=7)))
c Both direct and order encoding.
c Var 'aux775' order represents '0' with '13565'
c Var 'aux775' direct represents '0' with '13565'
c Var 'aux775' order represents '1' with '13566'
-13565 13566 0
c Var 'aux775' direct represents '1' with '13567'
13565 -13566 13567 0
-13567 13566 0
-13567 -13565 0
c Var 'aux775' direct represents '2' with '-13566'
13565 13567 -13566 0
c Encoding variable: aux776 with domain: int(0..2) (representing constraint ((field_00008_00006=7) + (field_00007_00006=7)))
c Both direct and order encoding.
c Var 'aux776' order represents '0' with '13568'
c Var 'aux776' direct represents '0' with '13568'
c Var 'aux776' order represents '1' with '13569'
-13568 13569 0
c Var 'aux776' direct represents '1' with '13570'
13568 -13569 13570 0
-13570 13569 0
-13570 -13568 0
c Var 'aux776' direct represents '2' with '-13569'
13568 13570 -13569 0
c Encoding variable: aux777 with domain: int(0..2) (representing constraint ((field_00003_00006=7) + (field_00005_00006=7)))
c Both direct and order encoding.
c Var 'aux777' order represents '0' with '13571'
c Var 'aux777' direct represents '0' with '13571'
c Var 'aux777' order represents '1' with '13572'
-13571 13572 0
c Var 'aux777' direct represents '1' with '13573'
13571 -13572 13573 0
-13573 13572 0
-13573 -13571 0
c Var 'aux777' direct represents '2' with '-13572'
13571 13573 -13572 0
c Encoding variable: aux778 with domain: int(0..3) (representing constraint ((field_00002_00006=7) + aux777))
c Both direct and order encoding.
c Var 'aux778' order represents '0' with '13574'
c Var 'aux778' direct represents '0' with '13574'
c Var 'aux778' order represents '1' with '13575'
-13574 13575 0
c Var 'aux778' direct represents '1' with '13576'
13574 -13575 13576 0
-13576 13575 0
-13576 -13574 0
c Var 'aux778' order represents '2' with '13577'
-13575 13577 0
c Var 'aux778' direct represents '2' with '13578'
13575 -13577 13578 0
-13578 13577 0
-13578 -13575 0
c Var 'aux778' direct represents '3' with '-13577'
13574 13576 13578 -13577 0
c Encoding variable: aux779 with domain: int(0..4) (representing constraint (aux774 + aux776))
c Both direct and order encoding.
c Var 'aux779' order represents '0' with '13579'
c Var 'aux779' direct represents '0' with '13579'
c Var 'aux779' order represents '1' with '13580'
-13579 13580 0
c Var 'aux779' direct represents '1' with '13581'
13579 -13580 13581 0
-13581 13580 0
-13581 -13579 0
c Var 'aux779' order represents '2' with '13582'
-13580 13582 0
c Var 'aux779' direct represents '2' with '13583'
13580 -13582 13583 0
-13583 13582 0
-13583 -13580 0
c Var 'aux779' order represents '3' with '13584'
-13582 13584 0
c Var 'aux779' direct represents '3' with '13585'
13582 -13584 13585 0
-13585 13584 0
-13585 -13582 0
c Var 'aux779' direct represents '4' with '-13584'
13579 13581 13583 13585 -13584 0
c Encoding variable: aux780 with domain: int(0..2) (representing constraint ((field_00004_00006=8) + (field_00006_00006=8)))
c Both direct and order encoding.
c Var 'aux780' order represents '0' with '13586'
c Var 'aux780' direct represents '0' with '13586'
c Var 'aux780' order represents '1' with '13587'
-13586 13587 0
c Var 'aux780' direct represents '1' with '13588'
13586 -13587 13588 0
-13588 13587 0
-13588 -13586 0
c Var 'aux780' direct represents '2' with '-13587'
13586 13588 -13587 0
c Encoding variable: aux781 with domain: int(0..2) (representing constraint ((field_00001_00006=8) + (field_00009_00006=8)))
c Both direct and order encoding.
c Var 'aux781' order represents '0' with '13589'
c Var 'aux781' direct represents '0' with '13589'
c Var 'aux781' order represents '1' with '13590'
-13589 13590 0
c Var 'aux781' direct represents '1' with '13591'
13589 -13590 13591 0
-13591 13590 0
-13591 -13589 0
c Var 'aux781' direct represents '2' with '-13590'
13589 13591 -13590 0
c Encoding variable: aux782 with domain: int(0..2) (representing constraint ((field_00008_00006=8) + (field_00007_00006=8)))
c Both direct and order encoding.
c Var 'aux782' order represents '0' with '13592'
c Var 'aux782' direct represents '0' with '13592'
c Var 'aux782' order represents '1' with '13593'
-13592 13593 0
c Var 'aux782' direct represents '1' with '13594'
13592 -13593 13594 0
-13594 13593 0
-13594 -13592 0
c Var 'aux782' direct represents '2' with '-13593'
13592 13594 -13593 0
c Encoding variable: aux783 with domain: int(0..2) (representing constraint ((field_00003_00006=8) + (field_00005_00006=8)))
c Both direct and order encoding.
c Var 'aux783' order represents '0' with '13595'
c Var 'aux783' direct represents '0' with '13595'
c Var 'aux783' order represents '1' with '13596'
-13595 13596 0
c Var 'aux783' direct represents '1' with '13597'
13595 -13596 13597 0
-13597 13596 0
-13597 -13595 0
c Var 'aux783' direct represents '2' with '-13596'
13595 13597 -13596 0
c Encoding variable: aux784 with domain: int(0..3) (representing constraint ((field_00002_00006=8) + aux783))
c Both direct and order encoding.
c Var 'aux784' order represents '0' with '13598'
c Var 'aux784' direct represents '0' with '13598'
c Var 'aux784' order represents '1' with '13599'
-13598 13599 0
c Var 'aux784' direct represents '1' with '13600'
13598 -13599 13600 0
-13600 13599 0
-13600 -13598 0
c Var 'aux784' order represents '2' with '13601'
-13599 13601 0
c Var 'aux784' direct represents '2' with '13602'
13599 -13601 13602 0
-13602 13601 0
-13602 -13599 0
c Var 'aux784' direct represents '3' with '-13601'
13598 13600 13602 -13601 0
c Encoding variable: aux785 with domain: int(0..4) (representing constraint (aux780 + aux782))
c Both direct and order encoding.
c Var 'aux785' order represents '0' with '13603'
c Var 'aux785' direct represents '0' with '13603'
c Var 'aux785' order represents '1' with '13604'
-13603 13604 0
c Var 'aux785' direct represents '1' with '13605'
13603 -13604 13605 0
-13605 13604 0
-13605 -13603 0
c Var 'aux785' order represents '2' with '13606'
-13604 13606 0
c Var 'aux785' direct represents '2' with '13607'
13604 -13606 13607 0
-13607 13606 0
-13607 -13604 0
c Var 'aux785' order represents '3' with '13608'
-13606 13608 0
c Var 'aux785' direct represents '3' with '13609'
13606 -13608 13609 0
-13609 13608 0
-13609 -13606 0
c Var 'aux785' direct represents '4' with '-13608'
13603 13605 13607 13609 -13608 0
c Encoding variable: aux786 with domain: int(0..2) (representing constraint ((field_00004_00006=9) + (field_00006_00006=9)))
c Both direct and order encoding.
c Var 'aux786' order represents '0' with '13610'
c Var 'aux786' direct represents '0' with '13610'
c Var 'aux786' order represents '1' with '13611'
-13610 13611 0
c Var 'aux786' direct represents '1' with '13612'
13610 -13611 13612 0
-13612 13611 0
-13612 -13610 0
c Var 'aux786' direct represents '2' with '-13611'
13610 13612 -13611 0
c Encoding variable: aux787 with domain: int(0..2) (representing constraint ((field_00001_00006=9) + (field_00009_00006=9)))
c Both direct and order encoding.
c Var 'aux787' order represents '0' with '13613'
c Var 'aux787' direct represents '0' with '13613'
c Var 'aux787' order represents '1' with '13614'
-13613 13614 0
c Var 'aux787' direct represents '1' with '13615'
13613 -13614 13615 0
-13615 13614 0
-13615 -13613 0
c Var 'aux787' direct represents '2' with '-13614'
13613 13615 -13614 0
c Encoding variable: aux788 with domain: int(0..2) (representing constraint ((field_00008_00006=9) + (field_00007_00006=9)))
c Both direct and order encoding.
c Var 'aux788' order represents '0' with '13616'
c Var 'aux788' direct represents '0' with '13616'
c Var 'aux788' order represents '1' with '13617'
-13616 13617 0
c Var 'aux788' direct represents '1' with '13618'
13616 -13617 13618 0
-13618 13617 0
-13618 -13616 0
c Var 'aux788' direct represents '2' with '-13617'
13616 13618 -13617 0
c Encoding variable: aux789 with domain: int(0..2) (representing constraint ((field_00003_00006=9) + (field_00005_00006=9)))
c Both direct and order encoding.
c Var 'aux789' order represents '0' with '13619'
c Var 'aux789' direct represents '0' with '13619'
c Var 'aux789' order represents '1' with '13620'
-13619 13620 0
c Var 'aux789' direct represents '1' with '13621'
13619 -13620 13621 0
-13621 13620 0
-13621 -13619 0
c Var 'aux789' direct represents '2' with '-13620'
13619 13621 -13620 0
c Encoding variable: aux790 with domain: int(0..3) (representing constraint ((field_00002_00006=9) + aux789))
c Both direct and order encoding.
c Var 'aux790' order represents '0' with '13622'
c Var 'aux790' direct represents '0' with '13622'
c Var 'aux790' order represents '1' with '13623'
-13622 13623 0
c Var 'aux790' direct represents '1' with '13624'
13622 -13623 13624 0
-13624 13623 0
-13624 -13622 0
c Var 'aux790' order represents '2' with '13625'
-13623 13625 0
c Var 'aux790' direct represents '2' with '13626'
13623 -13625 13626 0
-13626 13625 0
-13626 -13623 0
c Var 'aux790' direct represents '3' with '-13625'
13622 13624 13626 -13625 0
c Encoding variable: aux791 with domain: int(0..4) (representing constraint (aux786 + aux788))
c Both direct and order encoding.
c Var 'aux791' order represents '0' with '13627'
c Var 'aux791' direct represents '0' with '13627'
c Var 'aux791' order represents '1' with '13628'
-13627 13628 0
c Var 'aux791' direct represents '1' with '13629'
13627 -13628 13629 0
-13629 13628 0
-13629 -13627 0
c Var 'aux791' order represents '2' with '13630'
-13628 13630 0
c Var 'aux791' direct represents '2' with '13631'
13628 -13630 13631 0
-13631 13630 0
-13631 -13628 0
c Var 'aux791' order represents '3' with '13632'
-13630 13632 0
c Var 'aux791' direct represents '3' with '13633'
13630 -13632 13633 0
-13633 13632 0
-13633 -13630 0
c Var 'aux791' direct represents '4' with '-13632'
13627 13629 13631 13633 -13632 0
c Encoding variable: aux792 with domain: int(0..2) (representing constraint ((field_00004_00007=1) + (field_00006_00007=1)))
c Both direct and order encoding.
c Var 'aux792' order represents '0' with '13634'
c Var 'aux792' direct represents '0' with '13634'
c Var 'aux792' order represents '1' with '13635'
-13634 13635 0
c Var 'aux792' direct represents '1' with '13636'
13634 -13635 13636 0
-13636 13635 0
-13636 -13634 0
c Var 'aux792' direct represents '2' with '-13635'
13634 13636 -13635 0
c Encoding variable: aux793 with domain: int(0..2) (representing constraint ((field_00001_00007=1) + (field_00009_00007=1)))
c Both direct and order encoding.
c Var 'aux793' order represents '0' with '13637'
c Var 'aux793' direct represents '0' with '13637'
c Var 'aux793' order represents '1' with '13638'
-13637 13638 0
c Var 'aux793' direct represents '1' with '13639'
13637 -13638 13639 0
-13639 13638 0
-13639 -13637 0
c Var 'aux793' direct represents '2' with '-13638'
13637 13639 -13638 0
c Encoding variable: aux794 with domain: int(0..2) (representing constraint ((field_00008_00007=1) + (field_00007_00007=1)))
c Both direct and order encoding.
c Var 'aux794' order represents '0' with '13640'
c Var 'aux794' direct represents '0' with '13640'
c Var 'aux794' order represents '1' with '13641'
-13640 13641 0
c Var 'aux794' direct represents '1' with '13642'
13640 -13641 13642 0
-13642 13641 0
-13642 -13640 0
c Var 'aux794' direct represents '2' with '-13641'
13640 13642 -13641 0
c Encoding variable: aux795 with domain: int(0..2) (representing constraint ((field_00003_00007=1) + (field_00005_00007=1)))
c Both direct and order encoding.
c Var 'aux795' order represents '0' with '13643'
c Var 'aux795' direct represents '0' with '13643'
c Var 'aux795' order represents '1' with '13644'
-13643 13644 0
c Var 'aux795' direct represents '1' with '13645'
13643 -13644 13645 0
-13645 13644 0
-13645 -13643 0
c Var 'aux795' direct represents '2' with '-13644'
13643 13645 -13644 0
c Encoding variable: aux796 with domain: int(0..3) (representing constraint ((field_00002_00007=1) + aux795))
c Both direct and order encoding.
c Var 'aux796' order represents '0' with '13646'
c Var 'aux796' direct represents '0' with '13646'
c Var 'aux796' order represents '1' with '13647'
-13646 13647 0
c Var 'aux796' direct represents '1' with '13648'
13646 -13647 13648 0
-13648 13647 0
-13648 -13646 0
c Var 'aux796' order represents '2' with '13649'
-13647 13649 0
c Var 'aux796' direct represents '2' with '13650'
13647 -13649 13650 0
-13650 13649 0
-13650 -13647 0
c Var 'aux796' direct represents '3' with '-13649'
13646 13648 13650 -13649 0
c Encoding variable: aux797 with domain: int(0..4) (representing constraint (aux792 + aux794))
c Both direct and order encoding.
c Var 'aux797' order represents '0' with '13651'
c Var 'aux797' direct represents '0' with '13651'
c Var 'aux797' order represents '1' with '13652'
-13651 13652 0
c Var 'aux797' direct represents '1' with '13653'
13651 -13652 13653 0
-13653 13652 0
-13653 -13651 0
c Var 'aux797' order represents '2' with '13654'
-13652 13654 0
c Var 'aux797' direct represents '2' with '13655'
13652 -13654 13655 0
-13655 13654 0
-13655 -13652 0
c Var 'aux797' order represents '3' with '13656'
-13654 13656 0
c Var 'aux797' direct represents '3' with '13657'
13654 -13656 13657 0
-13657 13656 0
-13657 -13654 0
c Var 'aux797' direct represents '4' with '-13656'
13651 13653 13655 13657 -13656 0
c Encoding variable: aux798 with domain: int(0..2) (representing constraint ((field_00004_00007=2) + (field_00006_00007=2)))
c Both direct and order encoding.
c Var 'aux798' order represents '0' with '13658'
c Var 'aux798' direct represents '0' with '13658'
c Var 'aux798' order represents '1' with '13659'
-13658 13659 0
c Var 'aux798' direct represents '1' with '13660'
13658 -13659 13660 0
-13660 13659 0
-13660 -13658 0
c Var 'aux798' direct represents '2' with '-13659'
13658 13660 -13659 0
c Encoding variable: aux799 with domain: int(0..2) (representing constraint ((field_00001_00007=2) + (field_00009_00007=2)))
c Both direct and order encoding.
c Var 'aux799' order represents '0' with '13661'
c Var 'aux799' direct represents '0' with '13661'
c Var 'aux799' order represents '1' with '13662'
-13661 13662 0
c Var 'aux799' direct represents '1' with '13663'
13661 -13662 13663 0
-13663 13662 0
-13663 -13661 0
c Var 'aux799' direct represents '2' with '-13662'
13661 13663 -13662 0
c Encoding variable: aux800 with domain: int(0..2) (representing constraint ((field_00008_00007=2) + (field_00007_00007=2)))
c Both direct and order encoding.
c Var 'aux800' order represents '0' with '13664'
c Var 'aux800' direct represents '0' with '13664'
c Var 'aux800' order represents '1' with '13665'
-13664 13665 0
c Var 'aux800' direct represents '1' with '13666'
13664 -13665 13666 0
-13666 13665 0
-13666 -13664 0
c Var 'aux800' direct represents '2' with '-13665'
13664 13666 -13665 0
c Encoding variable: aux801 with domain: int(0..2) (representing constraint ((field_00003_00007=2) + (field_00005_00007=2)))
c Both direct and order encoding.
c Var 'aux801' order represents '0' with '13667'
c Var 'aux801' direct represents '0' with '13667'
c Var 'aux801' order represents '1' with '13668'
-13667 13668 0
c Var 'aux801' direct represents '1' with '13669'
13667 -13668 13669 0
-13669 13668 0
-13669 -13667 0
c Var 'aux801' direct represents '2' with '-13668'
13667 13669 -13668 0
c Encoding variable: aux802 with domain: int(0..3) (representing constraint ((field_00002_00007=2) + aux801))
c Both direct and order encoding.
c Var 'aux802' order represents '0' with '13670'
c Var 'aux802' direct represents '0' with '13670'
c Var 'aux802' order represents '1' with '13671'
-13670 13671 0
c Var 'aux802' direct represents '1' with '13672'
13670 -13671 13672 0
-13672 13671 0
-13672 -13670 0
c Var 'aux802' order represents '2' with '13673'
-13671 13673 0
c Var 'aux802' direct represents '2' with '13674'
13671 -13673 13674 0
-13674 13673 0
-13674 -13671 0
c Var 'aux802' direct represents '3' with '-13673'
13670 13672 13674 -13673 0
c Encoding variable: aux803 with domain: int(0..4) (representing constraint (aux798 + aux800))
c Both direct and order encoding.
c Var 'aux803' order represents '0' with '13675'
c Var 'aux803' direct represents '0' with '13675'
c Var 'aux803' order represents '1' with '13676'
-13675 13676 0
c Var 'aux803' direct represents '1' with '13677'
13675 -13676 13677 0
-13677 13676 0
-13677 -13675 0
c Var 'aux803' order represents '2' with '13678'
-13676 13678 0
c Var 'aux803' direct represents '2' with '13679'
13676 -13678 13679 0
-13679 13678 0
-13679 -13676 0
c Var 'aux803' order represents '3' with '13680'
-13678 13680 0
c Var 'aux803' direct represents '3' with '13681'
13678 -13680 13681 0
-13681 13680 0
-13681 -13678 0
c Var 'aux803' direct represents '4' with '-13680'
13675 13677 13679 13681 -13680 0
c Encoding variable: aux804 with domain: int(0..2) (representing constraint ((field_00004_00007=3) + (field_00006_00007=3)))
c Both direct and order encoding.
c Var 'aux804' order represents '0' with '13682'
c Var 'aux804' direct represents '0' with '13682'
c Var 'aux804' order represents '1' with '13683'
-13682 13683 0
c Var 'aux804' direct represents '1' with '13684'
13682 -13683 13684 0
-13684 13683 0
-13684 -13682 0
c Var 'aux804' direct represents '2' with '-13683'
13682 13684 -13683 0
c Encoding variable: aux805 with domain: int(0..2) (representing constraint ((field_00001_00007=3) + (field_00009_00007=3)))
c Both direct and order encoding.
c Var 'aux805' order represents '0' with '13685'
c Var 'aux805' direct represents '0' with '13685'
c Var 'aux805' order represents '1' with '13686'
-13685 13686 0
c Var 'aux805' direct represents '1' with '13687'
13685 -13686 13687 0
-13687 13686 0
-13687 -13685 0
c Var 'aux805' direct represents '2' with '-13686'
13685 13687 -13686 0
c Encoding variable: aux806 with domain: int(0..2) (representing constraint ((field_00008_00007=3) + (field_00007_00007=3)))
c Both direct and order encoding.
c Var 'aux806' order represents '0' with '13688'
c Var 'aux806' direct represents '0' with '13688'
c Var 'aux806' order represents '1' with '13689'
-13688 13689 0
c Var 'aux806' direct represents '1' with '13690'
13688 -13689 13690 0
-13690 13689 0
-13690 -13688 0
c Var 'aux806' direct represents '2' with '-13689'
13688 13690 -13689 0
c Encoding variable: aux807 with domain: int(0..2) (representing constraint ((field_00003_00007=3) + (field_00005_00007=3)))
c Both direct and order encoding.
c Var 'aux807' order represents '0' with '13691'
c Var 'aux807' direct represents '0' with '13691'
c Var 'aux807' order represents '1' with '13692'
-13691 13692 0
c Var 'aux807' direct represents '1' with '13693'
13691 -13692 13693 0
-13693 13692 0
-13693 -13691 0
c Var 'aux807' direct represents '2' with '-13692'
13691 13693 -13692 0
c Encoding variable: aux808 with domain: int(0..3) (representing constraint ((field_00002_00007=3) + aux807))
c Both direct and order encoding.
c Var 'aux808' order represents '0' with '13694'
c Var 'aux808' direct represents '0' with '13694'
c Var 'aux808' order represents '1' with '13695'
-13694 13695 0
c Var 'aux808' direct represents '1' with '13696'
13694 -13695 13696 0
-13696 13695 0
-13696 -13694 0
c Var 'aux808' order represents '2' with '13697'
-13695 13697 0
c Var 'aux808' direct represents '2' with '13698'
13695 -13697 13698 0
-13698 13697 0
-13698 -13695 0
c Var 'aux808' direct represents '3' with '-13697'
13694 13696 13698 -13697 0
c Encoding variable: aux809 with domain: int(0..4) (representing constraint (aux804 + aux806))
c Both direct and order encoding.
c Var 'aux809' order represents '0' with '13699'
c Var 'aux809' direct represents '0' with '13699'
c Var 'aux809' order represents '1' with '13700'
-13699 13700 0
c Var 'aux809' direct represents '1' with '13701'
13699 -13700 13701 0
-13701 13700 0
-13701 -13699 0
c Var 'aux809' order represents '2' with '13702'
-13700 13702 0
c Var 'aux809' direct represents '2' with '13703'
13700 -13702 13703 0
-13703 13702 0
-13703 -13700 0
c Var 'aux809' order represents '3' with '13704'
-13702 13704 0
c Var 'aux809' direct represents '3' with '13705'
13702 -13704 13705 0
-13705 13704 0
-13705 -13702 0
c Var 'aux809' direct represents '4' with '-13704'
13699 13701 13703 13705 -13704 0
c Encoding variable: aux810 with domain: int(0..2) (representing constraint ((field_00004_00007=4) + (field_00006_00007=4)))
c Both direct and order encoding.
c Var 'aux810' order represents '0' with '13706'
c Var 'aux810' direct represents '0' with '13706'
c Var 'aux810' order represents '1' with '13707'
-13706 13707 0
c Var 'aux810' direct represents '1' with '13708'
13706 -13707 13708 0
-13708 13707 0
-13708 -13706 0
c Var 'aux810' direct represents '2' with '-13707'
13706 13708 -13707 0
c Encoding variable: aux811 with domain: int(0..2) (representing constraint ((field_00001_00007=4) + (field_00009_00007=4)))
c Both direct and order encoding.
c Var 'aux811' order represents '0' with '13709'
c Var 'aux811' direct represents '0' with '13709'
c Var 'aux811' order represents '1' with '13710'
-13709 13710 0
c Var 'aux811' direct represents '1' with '13711'
13709 -13710 13711 0
-13711 13710 0
-13711 -13709 0
c Var 'aux811' direct represents '2' with '-13710'
13709 13711 -13710 0
c Encoding variable: aux812 with domain: int(0..2) (representing constraint ((field_00008_00007=4) + (field_00007_00007=4)))
c Both direct and order encoding.
c Var 'aux812' order represents '0' with '13712'
c Var 'aux812' direct represents '0' with '13712'
c Var 'aux812' order represents '1' with '13713'
-13712 13713 0
c Var 'aux812' direct represents '1' with '13714'
13712 -13713 13714 0
-13714 13713 0
-13714 -13712 0
c Var 'aux812' direct represents '2' with '-13713'
13712 13714 -13713 0
c Encoding variable: aux813 with domain: int(0..2) (representing constraint ((field_00003_00007=4) + (field_00005_00007=4)))
c Both direct and order encoding.
c Var 'aux813' order represents '0' with '13715'
c Var 'aux813' direct represents '0' with '13715'
c Var 'aux813' order represents '1' with '13716'
-13715 13716 0
c Var 'aux813' direct represents '1' with '13717'
13715 -13716 13717 0
-13717 13716 0
-13717 -13715 0
c Var 'aux813' direct represents '2' with '-13716'
13715 13717 -13716 0
c Encoding variable: aux814 with domain: int(0..3) (representing constraint ((field_00002_00007=4) + aux813))
c Both direct and order encoding.
c Var 'aux814' order represents '0' with '13718'
c Var 'aux814' direct represents '0' with '13718'
c Var 'aux814' order represents '1' with '13719'
-13718 13719 0
c Var 'aux814' direct represents '1' with '13720'
13718 -13719 13720 0
-13720 13719 0
-13720 -13718 0
c Var 'aux814' order represents '2' with '13721'
-13719 13721 0
c Var 'aux814' direct represents '2' with '13722'
13719 -13721 13722 0
-13722 13721 0
-13722 -13719 0
c Var 'aux814' direct represents '3' with '-13721'
13718 13720 13722 -13721 0
c Encoding variable: aux815 with domain: int(0..4) (representing constraint (aux810 + aux812))
c Both direct and order encoding.
c Var 'aux815' order represents '0' with '13723'
c Var 'aux815' direct represents '0' with '13723'
c Var 'aux815' order represents '1' with '13724'
-13723 13724 0
c Var 'aux815' direct represents '1' with '13725'
13723 -13724 13725 0
-13725 13724 0
-13725 -13723 0
c Var 'aux815' order represents '2' with '13726'
-13724 13726 0
c Var 'aux815' direct represents '2' with '13727'
13724 -13726 13727 0
-13727 13726 0
-13727 -13724 0
c Var 'aux815' order represents '3' with '13728'
-13726 13728 0
c Var 'aux815' direct represents '3' with '13729'
13726 -13728 13729 0
-13729 13728 0
-13729 -13726 0
c Var 'aux815' direct represents '4' with '-13728'
13723 13725 13727 13729 -13728 0
c Encoding variable: aux816 with domain: int(0..2) (representing constraint ((field_00004_00007=5) + (field_00006_00007=5)))
c Both direct and order encoding.
c Var 'aux816' order represents '0' with '13730'
c Var 'aux816' direct represents '0' with '13730'
c Var 'aux816' order represents '1' with '13731'
-13730 13731 0
c Var 'aux816' direct represents '1' with '13732'
13730 -13731 13732 0
-13732 13731 0
-13732 -13730 0
c Var 'aux816' direct represents '2' with '-13731'
13730 13732 -13731 0
c Encoding variable: aux817 with domain: int(0..2) (representing constraint ((field_00001_00007=5) + (field_00009_00007=5)))
c Both direct and order encoding.
c Var 'aux817' order represents '0' with '13733'
c Var 'aux817' direct represents '0' with '13733'
c Var 'aux817' order represents '1' with '13734'
-13733 13734 0
c Var 'aux817' direct represents '1' with '13735'
13733 -13734 13735 0
-13735 13734 0
-13735 -13733 0
c Var 'aux817' direct represents '2' with '-13734'
13733 13735 -13734 0
c Encoding variable: aux818 with domain: int(0..2) (representing constraint ((field_00008_00007=5) + (field_00007_00007=5)))
c Both direct and order encoding.
c Var 'aux818' order represents '0' with '13736'
c Var 'aux818' direct represents '0' with '13736'
c Var 'aux818' order represents '1' with '13737'
-13736 13737 0
c Var 'aux818' direct represents '1' with '13738'
13736 -13737 13738 0
-13738 13737 0
-13738 -13736 0
c Var 'aux818' direct represents '2' with '-13737'
13736 13738 -13737 0
c Encoding variable: aux819 with domain: int(0..2) (representing constraint ((field_00003_00007=5) + (field_00005_00007=5)))
c Both direct and order encoding.
c Var 'aux819' order represents '0' with '13739'
c Var 'aux819' direct represents '0' with '13739'
c Var 'aux819' order represents '1' with '13740'
-13739 13740 0
c Var 'aux819' direct represents '1' with '13741'
13739 -13740 13741 0
-13741 13740 0
-13741 -13739 0
c Var 'aux819' direct represents '2' with '-13740'
13739 13741 -13740 0
c Encoding variable: aux820 with domain: int(0..3) (representing constraint ((field_00002_00007=5) + aux819))
c Both direct and order encoding.
c Var 'aux820' order represents '0' with '13742'
c Var 'aux820' direct represents '0' with '13742'
c Var 'aux820' order represents '1' with '13743'
-13742 13743 0
c Var 'aux820' direct represents '1' with '13744'
13742 -13743 13744 0
-13744 13743 0
-13744 -13742 0
c Var 'aux820' order represents '2' with '13745'
-13743 13745 0
c Var 'aux820' direct represents '2' with '13746'
13743 -13745 13746 0
-13746 13745 0
-13746 -13743 0
c Var 'aux820' direct represents '3' with '-13745'
13742 13744 13746 -13745 0
c Encoding variable: aux821 with domain: int(0..4) (representing constraint (aux816 + aux818))
c Both direct and order encoding.
c Var 'aux821' order represents '0' with '13747'
c Var 'aux821' direct represents '0' with '13747'
c Var 'aux821' order represents '1' with '13748'
-13747 13748 0
c Var 'aux821' direct represents '1' with '13749'
13747 -13748 13749 0
-13749 13748 0
-13749 -13747 0
c Var 'aux821' order represents '2' with '13750'
-13748 13750 0
c Var 'aux821' direct represents '2' with '13751'
13748 -13750 13751 0
-13751 13750 0
-13751 -13748 0
c Var 'aux821' order represents '3' with '13752'
-13750 13752 0
c Var 'aux821' direct represents '3' with '13753'
13750 -13752 13753 0
-13753 13752 0
-13753 -13750 0
c Var 'aux821' direct represents '4' with '-13752'
13747 13749 13751 13753 -13752 0
c Encoding variable: aux822 with domain: int(0..2) (representing constraint ((field_00004_00007=6) + (field_00006_00007=6)))
c Both direct and order encoding.
c Var 'aux822' order represents '0' with '13754'
c Var 'aux822' direct represents '0' with '13754'
c Var 'aux822' order represents '1' with '13755'
-13754 13755 0
c Var 'aux822' direct represents '1' with '13756'
13754 -13755 13756 0
-13756 13755 0
-13756 -13754 0
c Var 'aux822' direct represents '2' with '-13755'
13754 13756 -13755 0
c Encoding variable: aux823 with domain: int(0..2) (representing constraint ((field_00001_00007=6) + (field_00009_00007=6)))
c Both direct and order encoding.
c Var 'aux823' order represents '0' with '13757'
c Var 'aux823' direct represents '0' with '13757'
c Var 'aux823' order represents '1' with '13758'
-13757 13758 0
c Var 'aux823' direct represents '1' with '13759'
13757 -13758 13759 0
-13759 13758 0
-13759 -13757 0
c Var 'aux823' direct represents '2' with '-13758'
13757 13759 -13758 0
c Encoding variable: aux824 with domain: int(0..2) (representing constraint ((field_00008_00007=6) + (field_00007_00007=6)))
c Both direct and order encoding.
c Var 'aux824' order represents '0' with '13760'
c Var 'aux824' direct represents '0' with '13760'
c Var 'aux824' order represents '1' with '13761'
-13760 13761 0
c Var 'aux824' direct represents '1' with '13762'
13760 -13761 13762 0
-13762 13761 0
-13762 -13760 0
c Var 'aux824' direct represents '2' with '-13761'
13760 13762 -13761 0
c Encoding variable: aux825 with domain: int(0..2) (representing constraint ((field_00003_00007=6) + (field_00005_00007=6)))
c Both direct and order encoding.
c Var 'aux825' order represents '0' with '13763'
c Var 'aux825' direct represents '0' with '13763'
c Var 'aux825' order represents '1' with '13764'
-13763 13764 0
c Var 'aux825' direct represents '1' with '13765'
13763 -13764 13765 0
-13765 13764 0
-13765 -13763 0
c Var 'aux825' direct represents '2' with '-13764'
13763 13765 -13764 0
c Encoding variable: aux826 with domain: int(0..3) (representing constraint ((field_00002_00007=6) + aux825))
c Both direct and order encoding.
c Var 'aux826' order represents '0' with '13766'
c Var 'aux826' direct represents '0' with '13766'
c Var 'aux826' order represents '1' with '13767'
-13766 13767 0
c Var 'aux826' direct represents '1' with '13768'
13766 -13767 13768 0
-13768 13767 0
-13768 -13766 0
c Var 'aux826' order represents '2' with '13769'
-13767 13769 0
c Var 'aux826' direct represents '2' with '13770'
13767 -13769 13770 0
-13770 13769 0
-13770 -13767 0
c Var 'aux826' direct represents '3' with '-13769'
13766 13768 13770 -13769 0
c Encoding variable: aux827 with domain: int(0..4) (representing constraint (aux822 + aux824))
c Both direct and order encoding.
c Var 'aux827' order represents '0' with '13771'
c Var 'aux827' direct represents '0' with '13771'
c Var 'aux827' order represents '1' with '13772'
-13771 13772 0
c Var 'aux827' direct represents '1' with '13773'
13771 -13772 13773 0
-13773 13772 0
-13773 -13771 0
c Var 'aux827' order represents '2' with '13774'
-13772 13774 0
c Var 'aux827' direct represents '2' with '13775'
13772 -13774 13775 0
-13775 13774 0
-13775 -13772 0
c Var 'aux827' order represents '3' with '13776'
-13774 13776 0
c Var 'aux827' direct represents '3' with '13777'
13774 -13776 13777 0
-13777 13776 0
-13777 -13774 0
c Var 'aux827' direct represents '4' with '-13776'
13771 13773 13775 13777 -13776 0
c Encoding variable: aux828 with domain: int(0..2) (representing constraint ((field_00004_00007=7) + (field_00006_00007=7)))
c Both direct and order encoding.
c Var 'aux828' order represents '0' with '13778'
c Var 'aux828' direct represents '0' with '13778'
c Var 'aux828' order represents '1' with '13779'
-13778 13779 0
c Var 'aux828' direct represents '1' with '13780'
13778 -13779 13780 0
-13780 13779 0
-13780 -13778 0
c Var 'aux828' direct represents '2' with '-13779'
13778 13780 -13779 0
c Encoding variable: aux829 with domain: int(0..2) (representing constraint ((field_00001_00007=7) + (field_00009_00007=7)))
c Both direct and order encoding.
c Var 'aux829' order represents '0' with '13781'
c Var 'aux829' direct represents '0' with '13781'
c Var 'aux829' order represents '1' with '13782'
-13781 13782 0
c Var 'aux829' direct represents '1' with '13783'
13781 -13782 13783 0
-13783 13782 0
-13783 -13781 0
c Var 'aux829' direct represents '2' with '-13782'
13781 13783 -13782 0
c Encoding variable: aux830 with domain: int(0..2) (representing constraint ((field_00008_00007=7) + (field_00007_00007=7)))
c Both direct and order encoding.
c Var 'aux830' order represents '0' with '13784'
c Var 'aux830' direct represents '0' with '13784'
c Var 'aux830' order represents '1' with '13785'
-13784 13785 0
c Var 'aux830' direct represents '1' with '13786'
13784 -13785 13786 0
-13786 13785 0
-13786 -13784 0
c Var 'aux830' direct represents '2' with '-13785'
13784 13786 -13785 0
c Encoding variable: aux831 with domain: int(0..2) (representing constraint ((field_00003_00007=7) + (field_00005_00007=7)))
c Both direct and order encoding.
c Var 'aux831' order represents '0' with '13787'
c Var 'aux831' direct represents '0' with '13787'
c Var 'aux831' order represents '1' with '13788'
-13787 13788 0
c Var 'aux831' direct represents '1' with '13789'
13787 -13788 13789 0
-13789 13788 0
-13789 -13787 0
c Var 'aux831' direct represents '2' with '-13788'
13787 13789 -13788 0
c Encoding variable: aux832 with domain: int(0..3) (representing constraint ((field_00002_00007=7) + aux831))
c Both direct and order encoding.
c Var 'aux832' order represents '0' with '13790'
c Var 'aux832' direct represents '0' with '13790'
c Var 'aux832' order represents '1' with '13791'
-13790 13791 0
c Var 'aux832' direct represents '1' with '13792'
13790 -13791 13792 0
-13792 13791 0
-13792 -13790 0
c Var 'aux832' order represents '2' with '13793'
-13791 13793 0
c Var 'aux832' direct represents '2' with '13794'
13791 -13793 13794 0
-13794 13793 0
-13794 -13791 0
c Var 'aux832' direct represents '3' with '-13793'
13790 13792 13794 -13793 0
c Encoding variable: aux833 with domain: int(0..4) (representing constraint (aux828 + aux830))
c Both direct and order encoding.
c Var 'aux833' order represents '0' with '13795'
c Var 'aux833' direct represents '0' with '13795'
c Var 'aux833' order represents '1' with '13796'
-13795 13796 0
c Var 'aux833' direct represents '1' with '13797'
13795 -13796 13797 0
-13797 13796 0
-13797 -13795 0
c Var 'aux833' order represents '2' with '13798'
-13796 13798 0
c Var 'aux833' direct represents '2' with '13799'
13796 -13798 13799 0
-13799 13798 0
-13799 -13796 0
c Var 'aux833' order represents '3' with '13800'
-13798 13800 0
c Var 'aux833' direct represents '3' with '13801'
13798 -13800 13801 0
-13801 13800 0
-13801 -13798 0
c Var 'aux833' direct represents '4' with '-13800'
13795 13797 13799 13801 -13800 0
c Encoding variable: aux834 with domain: int(0..2) (representing constraint ((field_00004_00007=8) + (field_00006_00007=8)))
c Both direct and order encoding.
c Var 'aux834' order represents '0' with '13802'
c Var 'aux834' direct represents '0' with '13802'
c Var 'aux834' order represents '1' with '13803'
-13802 13803 0
c Var 'aux834' direct represents '1' with '13804'
13802 -13803 13804 0
-13804 13803 0
-13804 -13802 0
c Var 'aux834' direct represents '2' with '-13803'
13802 13804 -13803 0
c Encoding variable: aux835 with domain: int(0..2) (representing constraint ((field_00001_00007=8) + (field_00009_00007=8)))
c Both direct and order encoding.
c Var 'aux835' order represents '0' with '13805'
c Var 'aux835' direct represents '0' with '13805'
c Var 'aux835' order represents '1' with '13806'
-13805 13806 0
c Var 'aux835' direct represents '1' with '13807'
13805 -13806 13807 0
-13807 13806 0
-13807 -13805 0
c Var 'aux835' direct represents '2' with '-13806'
13805 13807 -13806 0
c Encoding variable: aux836 with domain: int(0..2) (representing constraint ((field_00008_00007=8) + (field_00007_00007=8)))
c Both direct and order encoding.
c Var 'aux836' order represents '0' with '13808'
c Var 'aux836' direct represents '0' with '13808'
c Var 'aux836' order represents '1' with '13809'
-13808 13809 0
c Var 'aux836' direct represents '1' with '13810'
13808 -13809 13810 0
-13810 13809 0
-13810 -13808 0
c Var 'aux836' direct represents '2' with '-13809'
13808 13810 -13809 0
c Encoding variable: aux837 with domain: int(0..2) (representing constraint ((field_00003_00007=8) + (field_00005_00007=8)))
c Both direct and order encoding.
c Var 'aux837' order represents '0' with '13811'
c Var 'aux837' direct represents '0' with '13811'
c Var 'aux837' order represents '1' with '13812'
-13811 13812 0
c Var 'aux837' direct represents '1' with '13813'
13811 -13812 13813 0
-13813 13812 0
-13813 -13811 0
c Var 'aux837' direct represents '2' with '-13812'
13811 13813 -13812 0
c Encoding variable: aux838 with domain: int(0..3) (representing constraint ((field_00002_00007=8) + aux837))
c Both direct and order encoding.
c Var 'aux838' order represents '0' with '13814'
c Var 'aux838' direct represents '0' with '13814'
c Var 'aux838' order represents '1' with '13815'
-13814 13815 0
c Var 'aux838' direct represents '1' with '13816'
13814 -13815 13816 0
-13816 13815 0
-13816 -13814 0
c Var 'aux838' order represents '2' with '13817'
-13815 13817 0
c Var 'aux838' direct represents '2' with '13818'
13815 -13817 13818 0
-13818 13817 0
-13818 -13815 0
c Var 'aux838' direct represents '3' with '-13817'
13814 13816 13818 -13817 0
c Encoding variable: aux839 with domain: int(0..4) (representing constraint (aux834 + aux836))
c Both direct and order encoding.
c Var 'aux839' order represents '0' with '13819'
c Var 'aux839' direct represents '0' with '13819'
c Var 'aux839' order represents '1' with '13820'
-13819 13820 0
c Var 'aux839' direct represents '1' with '13821'
13819 -13820 13821 0
-13821 13820 0
-13821 -13819 0
c Var 'aux839' order represents '2' with '13822'
-13820 13822 0
c Var 'aux839' direct represents '2' with '13823'
13820 -13822 13823 0
-13823 13822 0
-13823 -13820 0
c Var 'aux839' order represents '3' with '13824'
-13822 13824 0
c Var 'aux839' direct represents '3' with '13825'
13822 -13824 13825 0
-13825 13824 0
-13825 -13822 0
c Var 'aux839' direct represents '4' with '-13824'
13819 13821 13823 13825 -13824 0
c Encoding variable: aux840 with domain: int(0..2) (representing constraint ((field_00004_00007=9) + (field_00006_00007=9)))
c Both direct and order encoding.
c Var 'aux840' order represents '0' with '13826'
c Var 'aux840' direct represents '0' with '13826'
c Var 'aux840' order represents '1' with '13827'
-13826 13827 0
c Var 'aux840' direct represents '1' with '13828'
13826 -13827 13828 0
-13828 13827 0
-13828 -13826 0
c Var 'aux840' direct represents '2' with '-13827'
13826 13828 -13827 0
c Encoding variable: aux841 with domain: int(0..2) (representing constraint ((field_00001_00007=9) + (field_00009_00007=9)))
c Both direct and order encoding.
c Var 'aux841' order represents '0' with '13829'
c Var 'aux841' direct represents '0' with '13829'
c Var 'aux841' order represents '1' with '13830'
-13829 13830 0
c Var 'aux841' direct represents '1' with '13831'
13829 -13830 13831 0
-13831 13830 0
-13831 -13829 0
c Var 'aux841' direct represents '2' with '-13830'
13829 13831 -13830 0
c Encoding variable: aux842 with domain: int(0..2) (representing constraint ((field_00008_00007=9) + (field_00007_00007=9)))
c Both direct and order encoding.
c Var 'aux842' order represents '0' with '13832'
c Var 'aux842' direct represents '0' with '13832'
c Var 'aux842' order represents '1' with '13833'
-13832 13833 0
c Var 'aux842' direct represents '1' with '13834'
13832 -13833 13834 0
-13834 13833 0
-13834 -13832 0
c Var 'aux842' direct represents '2' with '-13833'
13832 13834 -13833 0
c Encoding variable: aux843 with domain: int(0..2) (representing constraint ((field_00003_00007=9) + (field_00005_00007=9)))
c Both direct and order encoding.
c Var 'aux843' order represents '0' with '13835'
c Var 'aux843' direct represents '0' with '13835'
c Var 'aux843' order represents '1' with '13836'
-13835 13836 0
c Var 'aux843' direct represents '1' with '13837'
13835 -13836 13837 0
-13837 13836 0
-13837 -13835 0
c Var 'aux843' direct represents '2' with '-13836'
13835 13837 -13836 0
c Encoding variable: aux844 with domain: int(0..3) (representing constraint ((field_00002_00007=9) + aux843))
c Both direct and order encoding.
c Var 'aux844' order represents '0' with '13838'
c Var 'aux844' direct represents '0' with '13838'
c Var 'aux844' order represents '1' with '13839'
-13838 13839 0
c Var 'aux844' direct represents '1' with '13840'
13838 -13839 13840 0
-13840 13839 0
-13840 -13838 0
c Var 'aux844' order represents '2' with '13841'
-13839 13841 0
c Var 'aux844' direct represents '2' with '13842'
13839 -13841 13842 0
-13842 13841 0
-13842 -13839 0
c Var 'aux844' direct represents '3' with '-13841'
13838 13840 13842 -13841 0
c Encoding variable: aux845 with domain: int(0..4) (representing constraint (aux840 + aux842))
c Both direct and order encoding.
c Var 'aux845' order represents '0' with '13843'
c Var 'aux845' direct represents '0' with '13843'
c Var 'aux845' order represents '1' with '13844'
-13843 13844 0
c Var 'aux845' direct represents '1' with '13845'
13843 -13844 13845 0
-13845 13844 0
-13845 -13843 0
c Var 'aux845' order represents '2' with '13846'
-13844 13846 0
c Var 'aux845' direct represents '2' with '13847'
13844 -13846 13847 0
-13847 13846 0
-13847 -13844 0
c Var 'aux845' order represents '3' with '13848'
-13846 13848 0
c Var 'aux845' direct represents '3' with '13849'
13846 -13848 13849 0
-13849 13848 0
-13849 -13846 0
c Var 'aux845' direct represents '4' with '-13848'
13843 13845 13847 13849 -13848 0
c Encoding variable: aux846 with domain: int(0..2) (representing constraint ((field_00004_00008=1) + (field_00006_00008=1)))
c Both direct and order encoding.
c Var 'aux846' order represents '0' with '13850'
c Var 'aux846' direct represents '0' with '13850'
c Var 'aux846' order represents '1' with '13851'
-13850 13851 0
c Var 'aux846' direct represents '1' with '13852'
13850 -13851 13852 0
-13852 13851 0
-13852 -13850 0
c Var 'aux846' direct represents '2' with '-13851'
13850 13852 -13851 0
c Encoding variable: aux847 with domain: int(0..2) (representing constraint ((field_00001_00008=1) + (field_00009_00008=1)))
c Both direct and order encoding.
c Var 'aux847' order represents '0' with '13853'
c Var 'aux847' direct represents '0' with '13853'
c Var 'aux847' order represents '1' with '13854'
-13853 13854 0
c Var 'aux847' direct represents '1' with '13855'
13853 -13854 13855 0
-13855 13854 0
-13855 -13853 0
c Var 'aux847' direct represents '2' with '-13854'
13853 13855 -13854 0
c Encoding variable: aux848 with domain: int(0..2) (representing constraint ((field_00008_00008=1) + (field_00007_00008=1)))
c Both direct and order encoding.
c Var 'aux848' order represents '0' with '13856'
c Var 'aux848' direct represents '0' with '13856'
c Var 'aux848' order represents '1' with '13857'
-13856 13857 0
c Var 'aux848' direct represents '1' with '13858'
13856 -13857 13858 0
-13858 13857 0
-13858 -13856 0
c Var 'aux848' direct represents '2' with '-13857'
13856 13858 -13857 0
c Encoding variable: aux849 with domain: int(0..2) (representing constraint ((field_00003_00008=1) + (field_00005_00008=1)))
c Both direct and order encoding.
c Var 'aux849' order represents '0' with '13859'
c Var 'aux849' direct represents '0' with '13859'
c Var 'aux849' order represents '1' with '13860'
-13859 13860 0
c Var 'aux849' direct represents '1' with '13861'
13859 -13860 13861 0
-13861 13860 0
-13861 -13859 0
c Var 'aux849' direct represents '2' with '-13860'
13859 13861 -13860 0
c Encoding variable: aux850 with domain: int(0..3) (representing constraint ((field_00002_00008=1) + aux849))
c Both direct and order encoding.
c Var 'aux850' order represents '0' with '13862'
c Var 'aux850' direct represents '0' with '13862'
c Var 'aux850' order represents '1' with '13863'
-13862 13863 0
c Var 'aux850' direct represents '1' with '13864'
13862 -13863 13864 0
-13864 13863 0
-13864 -13862 0
c Var 'aux850' order represents '2' with '13865'
-13863 13865 0
c Var 'aux850' direct represents '2' with '13866'
13863 -13865 13866 0
-13866 13865 0
-13866 -13863 0
c Var 'aux850' direct represents '3' with '-13865'
13862 13864 13866 -13865 0
c Encoding variable: aux851 with domain: int(0..4) (representing constraint (aux846 + aux848))
c Both direct and order encoding.
c Var 'aux851' order represents '0' with '13867'
c Var 'aux851' direct represents '0' with '13867'
c Var 'aux851' order represents '1' with '13868'
-13867 13868 0
c Var 'aux851' direct represents '1' with '13869'
13867 -13868 13869 0
-13869 13868 0
-13869 -13867 0
c Var 'aux851' order represents '2' with '13870'
-13868 13870 0
c Var 'aux851' direct represents '2' with '13871'
13868 -13870 13871 0
-13871 13870 0
-13871 -13868 0
c Var 'aux851' order represents '3' with '13872'
-13870 13872 0
c Var 'aux851' direct represents '3' with '13873'
13870 -13872 13873 0
-13873 13872 0
-13873 -13870 0
c Var 'aux851' direct represents '4' with '-13872'
13867 13869 13871 13873 -13872 0
c Encoding variable: aux852 with domain: int(0..2) (representing constraint ((field_00004_00008=2) + (field_00006_00008=2)))
c Both direct and order encoding.
c Var 'aux852' order represents '0' with '13874'
c Var 'aux852' direct represents '0' with '13874'
c Var 'aux852' order represents '1' with '13875'
-13874 13875 0
c Var 'aux852' direct represents '1' with '13876'
13874 -13875 13876 0
-13876 13875 0
-13876 -13874 0
c Var 'aux852' direct represents '2' with '-13875'
13874 13876 -13875 0
c Encoding variable: aux853 with domain: int(0..2) (representing constraint ((field_00001_00008=2) + (field_00009_00008=2)))
c Both direct and order encoding.
c Var 'aux853' order represents '0' with '13877'
c Var 'aux853' direct represents '0' with '13877'
c Var 'aux853' order represents '1' with '13878'
-13877 13878 0
c Var 'aux853' direct represents '1' with '13879'
13877 -13878 13879 0
-13879 13878 0
-13879 -13877 0
c Var 'aux853' direct represents '2' with '-13878'
13877 13879 -13878 0
c Encoding variable: aux854 with domain: int(0..2) (representing constraint ((field_00008_00008=2) + (field_00007_00008=2)))
c Both direct and order encoding.
c Var 'aux854' order represents '0' with '13880'
c Var 'aux854' direct represents '0' with '13880'
c Var 'aux854' order represents '1' with '13881'
-13880 13881 0
c Var 'aux854' direct represents '1' with '13882'
13880 -13881 13882 0
-13882 13881 0
-13882 -13880 0
c Var 'aux854' direct represents '2' with '-13881'
13880 13882 -13881 0
c Encoding variable: aux855 with domain: int(0..2) (representing constraint ((field_00003_00008=2) + (field_00005_00008=2)))
c Both direct and order encoding.
c Var 'aux855' order represents '0' with '13883'
c Var 'aux855' direct represents '0' with '13883'
c Var 'aux855' order represents '1' with '13884'
-13883 13884 0
c Var 'aux855' direct represents '1' with '13885'
13883 -13884 13885 0
-13885 13884 0
-13885 -13883 0
c Var 'aux855' direct represents '2' with '-13884'
13883 13885 -13884 0
c Encoding variable: aux856 with domain: int(0..3) (representing constraint ((field_00002_00008=2) + aux855))
c Both direct and order encoding.
c Var 'aux856' order represents '0' with '13886'
c Var 'aux856' direct represents '0' with '13886'
c Var 'aux856' order represents '1' with '13887'
-13886 13887 0
c Var 'aux856' direct represents '1' with '13888'
13886 -13887 13888 0
-13888 13887 0
-13888 -13886 0
c Var 'aux856' order represents '2' with '13889'
-13887 13889 0
c Var 'aux856' direct represents '2' with '13890'
13887 -13889 13890 0
-13890 13889 0
-13890 -13887 0
c Var 'aux856' direct represents '3' with '-13889'
13886 13888 13890 -13889 0
c Encoding variable: aux857 with domain: int(0..4) (representing constraint (aux852 + aux854))
c Both direct and order encoding.
c Var 'aux857' order represents '0' with '13891'
c Var 'aux857' direct represents '0' with '13891'
c Var 'aux857' order represents '1' with '13892'
-13891 13892 0
c Var 'aux857' direct represents '1' with '13893'
13891 -13892 13893 0
-13893 13892 0
-13893 -13891 0
c Var 'aux857' order represents '2' with '13894'
-13892 13894 0
c Var 'aux857' direct represents '2' with '13895'
13892 -13894 13895 0
-13895 13894 0
-13895 -13892 0
c Var 'aux857' order represents '3' with '13896'
-13894 13896 0
c Var 'aux857' direct represents '3' with '13897'
13894 -13896 13897 0
-13897 13896 0
-13897 -13894 0
c Var 'aux857' direct represents '4' with '-13896'
13891 13893 13895 13897 -13896 0
c Encoding variable: aux858 with domain: int(0..2) (representing constraint ((field_00004_00008=3) + (field_00006_00008=3)))
c Both direct and order encoding.
c Var 'aux858' order represents '0' with '13898'
c Var 'aux858' direct represents '0' with '13898'
c Var 'aux858' order represents '1' with '13899'
-13898 13899 0
c Var 'aux858' direct represents '1' with '13900'
13898 -13899 13900 0
-13900 13899 0
-13900 -13898 0
c Var 'aux858' direct represents '2' with '-13899'
13898 13900 -13899 0
c Encoding variable: aux859 with domain: int(0..2) (representing constraint ((field_00001_00008=3) + (field_00009_00008=3)))
c Both direct and order encoding.
c Var 'aux859' order represents '0' with '13901'
c Var 'aux859' direct represents '0' with '13901'
c Var 'aux859' order represents '1' with '13902'
-13901 13902 0
c Var 'aux859' direct represents '1' with '13903'
13901 -13902 13903 0
-13903 13902 0
-13903 -13901 0
c Var 'aux859' direct represents '2' with '-13902'
13901 13903 -13902 0
c Encoding variable: aux860 with domain: int(0..2) (representing constraint ((field_00008_00008=3) + (field_00007_00008=3)))
c Both direct and order encoding.
c Var 'aux860' order represents '0' with '13904'
c Var 'aux860' direct represents '0' with '13904'
c Var 'aux860' order represents '1' with '13905'
-13904 13905 0
c Var 'aux860' direct represents '1' with '13906'
13904 -13905 13906 0
-13906 13905 0
-13906 -13904 0
c Var 'aux860' direct represents '2' with '-13905'
13904 13906 -13905 0
c Encoding variable: aux861 with domain: int(0..2) (representing constraint ((field_00003_00008=3) + (field_00005_00008=3)))
c Both direct and order encoding.
c Var 'aux861' order represents '0' with '13907'
c Var 'aux861' direct represents '0' with '13907'
c Var 'aux861' order represents '1' with '13908'
-13907 13908 0
c Var 'aux861' direct represents '1' with '13909'
13907 -13908 13909 0
-13909 13908 0
-13909 -13907 0
c Var 'aux861' direct represents '2' with '-13908'
13907 13909 -13908 0
c Encoding variable: aux862 with domain: int(0..3) (representing constraint ((field_00002_00008=3) + aux861))
c Both direct and order encoding.
c Var 'aux862' order represents '0' with '13910'
c Var 'aux862' direct represents '0' with '13910'
c Var 'aux862' order represents '1' with '13911'
-13910 13911 0
c Var 'aux862' direct represents '1' with '13912'
13910 -13911 13912 0
-13912 13911 0
-13912 -13910 0
c Var 'aux862' order represents '2' with '13913'
-13911 13913 0
c Var 'aux862' direct represents '2' with '13914'
13911 -13913 13914 0
-13914 13913 0
-13914 -13911 0
c Var 'aux862' direct represents '3' with '-13913'
13910 13912 13914 -13913 0
c Encoding variable: aux863 with domain: int(0..4) (representing constraint (aux858 + aux860))
c Both direct and order encoding.
c Var 'aux863' order represents '0' with '13915'
c Var 'aux863' direct represents '0' with '13915'
c Var 'aux863' order represents '1' with '13916'
-13915 13916 0
c Var 'aux863' direct represents '1' with '13917'
13915 -13916 13917 0
-13917 13916 0
-13917 -13915 0
c Var 'aux863' order represents '2' with '13918'
-13916 13918 0
c Var 'aux863' direct represents '2' with '13919'
13916 -13918 13919 0
-13919 13918 0
-13919 -13916 0
c Var 'aux863' order represents '3' with '13920'
-13918 13920 0
c Var 'aux863' direct represents '3' with '13921'
13918 -13920 13921 0
-13921 13920 0
-13921 -13918 0
c Var 'aux863' direct represents '4' with '-13920'
13915 13917 13919 13921 -13920 0
c Encoding variable: aux864 with domain: int(0..2) (representing constraint ((field_00004_00008=4) + (field_00006_00008=4)))
c Both direct and order encoding.
c Var 'aux864' order represents '0' with '13922'
c Var 'aux864' direct represents '0' with '13922'
c Var 'aux864' order represents '1' with '13923'
-13922 13923 0
c Var 'aux864' direct represents '1' with '13924'
13922 -13923 13924 0
-13924 13923 0
-13924 -13922 0
c Var 'aux864' direct represents '2' with '-13923'
13922 13924 -13923 0
c Encoding variable: aux865 with domain: int(0..2) (representing constraint ((field_00001_00008=4) + (field_00009_00008=4)))
c Both direct and order encoding.
c Var 'aux865' order represents '0' with '13925'
c Var 'aux865' direct represents '0' with '13925'
c Var 'aux865' order represents '1' with '13926'
-13925 13926 0
c Var 'aux865' direct represents '1' with '13927'
13925 -13926 13927 0
-13927 13926 0
-13927 -13925 0
c Var 'aux865' direct represents '2' with '-13926'
13925 13927 -13926 0
c Encoding variable: aux866 with domain: int(0..2) (representing constraint ((field_00008_00008=4) + (field_00007_00008=4)))
c Both direct and order encoding.
c Var 'aux866' order represents '0' with '13928'
c Var 'aux866' direct represents '0' with '13928'
c Var 'aux866' order represents '1' with '13929'
-13928 13929 0
c Var 'aux866' direct represents '1' with '13930'
13928 -13929 13930 0
-13930 13929 0
-13930 -13928 0
c Var 'aux866' direct represents '2' with '-13929'
13928 13930 -13929 0
c Encoding variable: aux867 with domain: int(0..2) (representing constraint ((field_00003_00008=4) + (field_00005_00008=4)))
c Both direct and order encoding.
c Var 'aux867' order represents '0' with '13931'
c Var 'aux867' direct represents '0' with '13931'
c Var 'aux867' order represents '1' with '13932'
-13931 13932 0
c Var 'aux867' direct represents '1' with '13933'
13931 -13932 13933 0
-13933 13932 0
-13933 -13931 0
c Var 'aux867' direct represents '2' with '-13932'
13931 13933 -13932 0
c Encoding variable: aux868 with domain: int(0..3) (representing constraint ((field_00002_00008=4) + aux867))
c Both direct and order encoding.
c Var 'aux868' order represents '0' with '13934'
c Var 'aux868' direct represents '0' with '13934'
c Var 'aux868' order represents '1' with '13935'
-13934 13935 0
c Var 'aux868' direct represents '1' with '13936'
13934 -13935 13936 0
-13936 13935 0
-13936 -13934 0
c Var 'aux868' order represents '2' with '13937'
-13935 13937 0
c Var 'aux868' direct represents '2' with '13938'
13935 -13937 13938 0
-13938 13937 0
-13938 -13935 0
c Var 'aux868' direct represents '3' with '-13937'
13934 13936 13938 -13937 0
c Encoding variable: aux869 with domain: int(0..4) (representing constraint (aux864 + aux866))
c Both direct and order encoding.
c Var 'aux869' order represents '0' with '13939'
c Var 'aux869' direct represents '0' with '13939'
c Var 'aux869' order represents '1' with '13940'
-13939 13940 0
c Var 'aux869' direct represents '1' with '13941'
13939 -13940 13941 0
-13941 13940 0
-13941 -13939 0
c Var 'aux869' order represents '2' with '13942'
-13940 13942 0
c Var 'aux869' direct represents '2' with '13943'
13940 -13942 13943 0
-13943 13942 0
-13943 -13940 0
c Var 'aux869' order represents '3' with '13944'
-13942 13944 0
c Var 'aux869' direct represents '3' with '13945'
13942 -13944 13945 0
-13945 13944 0
-13945 -13942 0
c Var 'aux869' direct represents '4' with '-13944'
13939 13941 13943 13945 -13944 0
c Encoding variable: aux870 with domain: int(0..2) (representing constraint ((field_00004_00008=5) + (field_00006_00008=5)))
c Both direct and order encoding.
c Var 'aux870' order represents '0' with '13946'
c Var 'aux870' direct represents '0' with '13946'
c Var 'aux870' order represents '1' with '13947'
-13946 13947 0
c Var 'aux870' direct represents '1' with '13948'
13946 -13947 13948 0
-13948 13947 0
-13948 -13946 0
c Var 'aux870' direct represents '2' with '-13947'
13946 13948 -13947 0
c Encoding variable: aux871 with domain: int(0..2) (representing constraint ((field_00001_00008=5) + (field_00009_00008=5)))
c Both direct and order encoding.
c Var 'aux871' order represents '0' with '13949'
c Var 'aux871' direct represents '0' with '13949'
c Var 'aux871' order represents '1' with '13950'
-13949 13950 0
c Var 'aux871' direct represents '1' with '13951'
13949 -13950 13951 0
-13951 13950 0
-13951 -13949 0
c Var 'aux871' direct represents '2' with '-13950'
13949 13951 -13950 0
c Encoding variable: aux872 with domain: int(0..2) (representing constraint ((field_00008_00008=5) + (field_00007_00008=5)))
c Both direct and order encoding.
c Var 'aux872' order represents '0' with '13952'
c Var 'aux872' direct represents '0' with '13952'
c Var 'aux872' order represents '1' with '13953'
-13952 13953 0
c Var 'aux872' direct represents '1' with '13954'
13952 -13953 13954 0
-13954 13953 0
-13954 -13952 0
c Var 'aux872' direct represents '2' with '-13953'
13952 13954 -13953 0
c Encoding variable: aux873 with domain: int(0..2) (representing constraint ((field_00003_00008=5) + (field_00005_00008=5)))
c Both direct and order encoding.
c Var 'aux873' order represents '0' with '13955'
c Var 'aux873' direct represents '0' with '13955'
c Var 'aux873' order represents '1' with '13956'
-13955 13956 0
c Var 'aux873' direct represents '1' with '13957'
13955 -13956 13957 0
-13957 13956 0
-13957 -13955 0
c Var 'aux873' direct represents '2' with '-13956'
13955 13957 -13956 0
c Encoding variable: aux874 with domain: int(0..3) (representing constraint ((field_00002_00008=5) + aux873))
c Both direct and order encoding.
c Var 'aux874' order represents '0' with '13958'
c Var 'aux874' direct represents '0' with '13958'
c Var 'aux874' order represents '1' with '13959'
-13958 13959 0
c Var 'aux874' direct represents '1' with '13960'
13958 -13959 13960 0
-13960 13959 0
-13960 -13958 0
c Var 'aux874' order represents '2' with '13961'
-13959 13961 0
c Var 'aux874' direct represents '2' with '13962'
13959 -13961 13962 0
-13962 13961 0
-13962 -13959 0
c Var 'aux874' direct represents '3' with '-13961'
13958 13960 13962 -13961 0
c Encoding variable: aux875 with domain: int(0..4) (representing constraint (aux870 + aux872))
c Both direct and order encoding.
c Var 'aux875' order represents '0' with '13963'
c Var 'aux875' direct represents '0' with '13963'
c Var 'aux875' order represents '1' with '13964'
-13963 13964 0
c Var 'aux875' direct represents '1' with '13965'
13963 -13964 13965 0
-13965 13964 0
-13965 -13963 0
c Var 'aux875' order represents '2' with '13966'
-13964 13966 0
c Var 'aux875' direct represents '2' with '13967'
13964 -13966 13967 0
-13967 13966 0
-13967 -13964 0
c Var 'aux875' order represents '3' with '13968'
-13966 13968 0
c Var 'aux875' direct represents '3' with '13969'
13966 -13968 13969 0
-13969 13968 0
-13969 -13966 0
c Var 'aux875' direct represents '4' with '-13968'
13963 13965 13967 13969 -13968 0
c Encoding variable: aux876 with domain: int(0..2) (representing constraint ((field_00004_00008=6) + (field_00006_00008=6)))
c Both direct and order encoding.
c Var 'aux876' order represents '0' with '13970'
c Var 'aux876' direct represents '0' with '13970'
c Var 'aux876' order represents '1' with '13971'
-13970 13971 0
c Var 'aux876' direct represents '1' with '13972'
13970 -13971 13972 0
-13972 13971 0
-13972 -13970 0
c Var 'aux876' direct represents '2' with '-13971'
13970 13972 -13971 0
c Encoding variable: aux877 with domain: int(0..2) (representing constraint ((field_00001_00008=6) + (field_00009_00008=6)))
c Both direct and order encoding.
c Var 'aux877' order represents '0' with '13973'
c Var 'aux877' direct represents '0' with '13973'
c Var 'aux877' order represents '1' with '13974'
-13973 13974 0
c Var 'aux877' direct represents '1' with '13975'
13973 -13974 13975 0
-13975 13974 0
-13975 -13973 0
c Var 'aux877' direct represents '2' with '-13974'
13973 13975 -13974 0
c Encoding variable: aux878 with domain: int(0..2) (representing constraint ((field_00008_00008=6) + (field_00007_00008=6)))
c Both direct and order encoding.
c Var 'aux878' order represents '0' with '13976'
c Var 'aux878' direct represents '0' with '13976'
c Var 'aux878' order represents '1' with '13977'
-13976 13977 0
c Var 'aux878' direct represents '1' with '13978'
13976 -13977 13978 0
-13978 13977 0
-13978 -13976 0
c Var 'aux878' direct represents '2' with '-13977'
13976 13978 -13977 0
c Encoding variable: aux879 with domain: int(0..2) (representing constraint ((field_00003_00008=6) + (field_00005_00008=6)))
c Both direct and order encoding.
c Var 'aux879' order represents '0' with '13979'
c Var 'aux879' direct represents '0' with '13979'
c Var 'aux879' order represents '1' with '13980'
-13979 13980 0
c Var 'aux879' direct represents '1' with '13981'
13979 -13980 13981 0
-13981 13980 0
-13981 -13979 0
c Var 'aux879' direct represents '2' with '-13980'
13979 13981 -13980 0
c Encoding variable: aux880 with domain: int(0..3) (representing constraint ((field_00002_00008=6) + aux879))
c Both direct and order encoding.
c Var 'aux880' order represents '0' with '13982'
c Var 'aux880' direct represents '0' with '13982'
c Var 'aux880' order represents '1' with '13983'
-13982 13983 0
c Var 'aux880' direct represents '1' with '13984'
13982 -13983 13984 0
-13984 13983 0
-13984 -13982 0
c Var 'aux880' order represents '2' with '13985'
-13983 13985 0
c Var 'aux880' direct represents '2' with '13986'
13983 -13985 13986 0
-13986 13985 0
-13986 -13983 0
c Var 'aux880' direct represents '3' with '-13985'
13982 13984 13986 -13985 0
c Encoding variable: aux881 with domain: int(0..4) (representing constraint (aux876 + aux878))
c Both direct and order encoding.
c Var 'aux881' order represents '0' with '13987'
c Var 'aux881' direct represents '0' with '13987'
c Var 'aux881' order represents '1' with '13988'
-13987 13988 0
c Var 'aux881' direct represents '1' with '13989'
13987 -13988 13989 0
-13989 13988 0
-13989 -13987 0
c Var 'aux881' order represents '2' with '13990'
-13988 13990 0
c Var 'aux881' direct represents '2' with '13991'
13988 -13990 13991 0
-13991 13990 0
-13991 -13988 0
c Var 'aux881' order represents '3' with '13992'
-13990 13992 0
c Var 'aux881' direct represents '3' with '13993'
13990 -13992 13993 0
-13993 13992 0
-13993 -13990 0
c Var 'aux881' direct represents '4' with '-13992'
13987 13989 13991 13993 -13992 0
c Encoding variable: aux882 with domain: int(0..2) (representing constraint ((field_00004_00008=7) + (field_00006_00008=7)))
c Both direct and order encoding.
c Var 'aux882' order represents '0' with '13994'
c Var 'aux882' direct represents '0' with '13994'
c Var 'aux882' order represents '1' with '13995'
-13994 13995 0
c Var 'aux882' direct represents '1' with '13996'
13994 -13995 13996 0
-13996 13995 0
-13996 -13994 0
c Var 'aux882' direct represents '2' with '-13995'
13994 13996 -13995 0
c Encoding variable: aux883 with domain: int(0..2) (representing constraint ((field_00001_00008=7) + (field_00009_00008=7)))
c Both direct and order encoding.
c Var 'aux883' order represents '0' with '13997'
c Var 'aux883' direct represents '0' with '13997'
c Var 'aux883' order represents '1' with '13998'
-13997 13998 0
c Var 'aux883' direct represents '1' with '13999'
13997 -13998 13999 0
-13999 13998 0
-13999 -13997 0
c Var 'aux883' direct represents '2' with '-13998'
13997 13999 -13998 0
c Encoding variable: aux884 with domain: int(0..2) (representing constraint ((field_00008_00008=7) + (field_00007_00008=7)))
c Both direct and order encoding.
c Var 'aux884' order represents '0' with '14000'
c Var 'aux884' direct represents '0' with '14000'
c Var 'aux884' order represents '1' with '14001'
-14000 14001 0
c Var 'aux884' direct represents '1' with '14002'
14000 -14001 14002 0
-14002 14001 0
-14002 -14000 0
c Var 'aux884' direct represents '2' with '-14001'
14000 14002 -14001 0
c Encoding variable: aux885 with domain: int(0..2) (representing constraint ((field_00003_00008=7) + (field_00005_00008=7)))
c Both direct and order encoding.
c Var 'aux885' order represents '0' with '14003'
c Var 'aux885' direct represents '0' with '14003'
c Var 'aux885' order represents '1' with '14004'
-14003 14004 0
c Var 'aux885' direct represents '1' with '14005'
14003 -14004 14005 0
-14005 14004 0
-14005 -14003 0
c Var 'aux885' direct represents '2' with '-14004'
14003 14005 -14004 0
c Encoding variable: aux886 with domain: int(0..3) (representing constraint ((field_00002_00008=7) + aux885))
c Both direct and order encoding.
c Var 'aux886' order represents '0' with '14006'
c Var 'aux886' direct represents '0' with '14006'
c Var 'aux886' order represents '1' with '14007'
-14006 14007 0
c Var 'aux886' direct represents '1' with '14008'
14006 -14007 14008 0
-14008 14007 0
-14008 -14006 0
c Var 'aux886' order represents '2' with '14009'
-14007 14009 0
c Var 'aux886' direct represents '2' with '14010'
14007 -14009 14010 0
-14010 14009 0
-14010 -14007 0
c Var 'aux886' direct represents '3' with '-14009'
14006 14008 14010 -14009 0
c Encoding variable: aux887 with domain: int(0..4) (representing constraint (aux882 + aux884))
c Both direct and order encoding.
c Var 'aux887' order represents '0' with '14011'
c Var 'aux887' direct represents '0' with '14011'
c Var 'aux887' order represents '1' with '14012'
-14011 14012 0
c Var 'aux887' direct represents '1' with '14013'
14011 -14012 14013 0
-14013 14012 0
-14013 -14011 0
c Var 'aux887' order represents '2' with '14014'
-14012 14014 0
c Var 'aux887' direct represents '2' with '14015'
14012 -14014 14015 0
-14015 14014 0
-14015 -14012 0
c Var 'aux887' order represents '3' with '14016'
-14014 14016 0
c Var 'aux887' direct represents '3' with '14017'
14014 -14016 14017 0
-14017 14016 0
-14017 -14014 0
c Var 'aux887' direct represents '4' with '-14016'
14011 14013 14015 14017 -14016 0
c Encoding variable: aux888 with domain: int(0..2) (representing constraint ((field_00004_00008=8) + (field_00006_00008=8)))
c Both direct and order encoding.
c Var 'aux888' order represents '0' with '14018'
c Var 'aux888' direct represents '0' with '14018'
c Var 'aux888' order represents '1' with '14019'
-14018 14019 0
c Var 'aux888' direct represents '1' with '14020'
14018 -14019 14020 0
-14020 14019 0
-14020 -14018 0
c Var 'aux888' direct represents '2' with '-14019'
14018 14020 -14019 0
c Encoding variable: aux889 with domain: int(0..2) (representing constraint ((field_00001_00008=8) + (field_00009_00008=8)))
c Both direct and order encoding.
c Var 'aux889' order represents '0' with '14021'
c Var 'aux889' direct represents '0' with '14021'
c Var 'aux889' order represents '1' with '14022'
-14021 14022 0
c Var 'aux889' direct represents '1' with '14023'
14021 -14022 14023 0
-14023 14022 0
-14023 -14021 0
c Var 'aux889' direct represents '2' with '-14022'
14021 14023 -14022 0
c Encoding variable: aux890 with domain: int(0..2) (representing constraint ((field_00008_00008=8) + (field_00007_00008=8)))
c Both direct and order encoding.
c Var 'aux890' order represents '0' with '14024'
c Var 'aux890' direct represents '0' with '14024'
c Var 'aux890' order represents '1' with '14025'
-14024 14025 0
c Var 'aux890' direct represents '1' with '14026'
14024 -14025 14026 0
-14026 14025 0
-14026 -14024 0
c Var 'aux890' direct represents '2' with '-14025'
14024 14026 -14025 0
c Encoding variable: aux891 with domain: int(0..2) (representing constraint ((field_00003_00008=8) + (field_00005_00008=8)))
c Both direct and order encoding.
c Var 'aux891' order represents '0' with '14027'
c Var 'aux891' direct represents '0' with '14027'
c Var 'aux891' order represents '1' with '14028'
-14027 14028 0
c Var 'aux891' direct represents '1' with '14029'
14027 -14028 14029 0
-14029 14028 0
-14029 -14027 0
c Var 'aux891' direct represents '2' with '-14028'
14027 14029 -14028 0
c Encoding variable: aux892 with domain: int(0..3) (representing constraint ((field_00002_00008=8) + aux891))
c Both direct and order encoding.
c Var 'aux892' order represents '0' with '14030'
c Var 'aux892' direct represents '0' with '14030'
c Var 'aux892' order represents '1' with '14031'
-14030 14031 0
c Var 'aux892' direct represents '1' with '14032'
14030 -14031 14032 0
-14032 14031 0
-14032 -14030 0
c Var 'aux892' order represents '2' with '14033'
-14031 14033 0
c Var 'aux892' direct represents '2' with '14034'
14031 -14033 14034 0
-14034 14033 0
-14034 -14031 0
c Var 'aux892' direct represents '3' with '-14033'
14030 14032 14034 -14033 0
c Encoding variable: aux893 with domain: int(0..4) (representing constraint (aux888 + aux890))
c Both direct and order encoding.
c Var 'aux893' order represents '0' with '14035'
c Var 'aux893' direct represents '0' with '14035'
c Var 'aux893' order represents '1' with '14036'
-14035 14036 0
c Var 'aux893' direct represents '1' with '14037'
14035 -14036 14037 0
-14037 14036 0
-14037 -14035 0
c Var 'aux893' order represents '2' with '14038'
-14036 14038 0
c Var 'aux893' direct represents '2' with '14039'
14036 -14038 14039 0
-14039 14038 0
-14039 -14036 0
c Var 'aux893' order represents '3' with '14040'
-14038 14040 0
c Var 'aux893' direct represents '3' with '14041'
14038 -14040 14041 0
-14041 14040 0
-14041 -14038 0
c Var 'aux893' direct represents '4' with '-14040'
14035 14037 14039 14041 -14040 0
c Encoding variable: aux894 with domain: int(0..2) (representing constraint ((field_00004_00008=9) + (field_00006_00008=9)))
c Both direct and order encoding.
c Var 'aux894' order represents '0' with '14042'
c Var 'aux894' direct represents '0' with '14042'
c Var 'aux894' order represents '1' with '14043'
-14042 14043 0
c Var 'aux894' direct represents '1' with '14044'
14042 -14043 14044 0
-14044 14043 0
-14044 -14042 0
c Var 'aux894' direct represents '2' with '-14043'
14042 14044 -14043 0
c Encoding variable: aux895 with domain: int(0..2) (representing constraint ((field_00001_00008=9) + (field_00009_00008=9)))
c Both direct and order encoding.
c Var 'aux895' order represents '0' with '14045'
c Var 'aux895' direct represents '0' with '14045'
c Var 'aux895' order represents '1' with '14046'
-14045 14046 0
c Var 'aux895' direct represents '1' with '14047'
14045 -14046 14047 0
-14047 14046 0
-14047 -14045 0
c Var 'aux895' direct represents '2' with '-14046'
14045 14047 -14046 0
c Encoding variable: aux896 with domain: int(0..2) (representing constraint ((field_00008_00008=9) + (field_00007_00008=9)))
c Both direct and order encoding.
c Var 'aux896' order represents '0' with '14048'
c Var 'aux896' direct represents '0' with '14048'
c Var 'aux896' order represents '1' with '14049'
-14048 14049 0
c Var 'aux896' direct represents '1' with '14050'
14048 -14049 14050 0
-14050 14049 0
-14050 -14048 0
c Var 'aux896' direct represents '2' with '-14049'
14048 14050 -14049 0
c Encoding variable: aux897 with domain: int(0..2) (representing constraint ((field_00003_00008=9) + (field_00005_00008=9)))
c Both direct and order encoding.
c Var 'aux897' order represents '0' with '14051'
c Var 'aux897' direct represents '0' with '14051'
c Var 'aux897' order represents '1' with '14052'
-14051 14052 0
c Var 'aux897' direct represents '1' with '14053'
14051 -14052 14053 0
-14053 14052 0
-14053 -14051 0
c Var 'aux897' direct represents '2' with '-14052'
14051 14053 -14052 0
c Encoding variable: aux898 with domain: int(0..3) (representing constraint ((field_00002_00008=9) + aux897))
c Both direct and order encoding.
c Var 'aux898' order represents '0' with '14054'
c Var 'aux898' direct represents '0' with '14054'
c Var 'aux898' order represents '1' with '14055'
-14054 14055 0
c Var 'aux898' direct represents '1' with '14056'
14054 -14055 14056 0
-14056 14055 0
-14056 -14054 0
c Var 'aux898' order represents '2' with '14057'
-14055 14057 0
c Var 'aux898' direct represents '2' with '14058'
14055 -14057 14058 0
-14058 14057 0
-14058 -14055 0
c Var 'aux898' direct represents '3' with '-14057'
14054 14056 14058 -14057 0
c Encoding variable: aux899 with domain: int(0..4) (representing constraint (aux894 + aux896))
c Both direct and order encoding.
c Var 'aux899' order represents '0' with '14059'
c Var 'aux899' direct represents '0' with '14059'
c Var 'aux899' order represents '1' with '14060'
-14059 14060 0
c Var 'aux899' direct represents '1' with '14061'
14059 -14060 14061 0
-14061 14060 0
-14061 -14059 0
c Var 'aux899' order represents '2' with '14062'
-14060 14062 0
c Var 'aux899' direct represents '2' with '14063'
14060 -14062 14063 0
-14063 14062 0
-14063 -14060 0
c Var 'aux899' order represents '3' with '14064'
-14062 14064 0
c Var 'aux899' direct represents '3' with '14065'
14062 -14064 14065 0
-14065 14064 0
-14065 -14062 0
c Var 'aux899' direct represents '4' with '-14064'
14059 14061 14063 14065 -14064 0
c Encoding variable: aux900 with domain: int(0..2) (representing constraint ((field_00004_00009=1) + (field_00006_00009=1)))
c Both direct and order encoding.
c Var 'aux900' order represents '0' with '14066'
c Var 'aux900' direct represents '0' with '14066'
c Var 'aux900' order represents '1' with '14067'
-14066 14067 0
c Var 'aux900' direct represents '1' with '14068'
14066 -14067 14068 0
-14068 14067 0
-14068 -14066 0
c Var 'aux900' direct represents '2' with '-14067'
14066 14068 -14067 0
c Encoding variable: aux901 with domain: int(0..2) (representing constraint ((field_00001_00009=1) + (field_00009_00009=1)))
c Both direct and order encoding.
c Var 'aux901' order represents '0' with '14069'
c Var 'aux901' direct represents '0' with '14069'
c Var 'aux901' order represents '1' with '14070'
-14069 14070 0
c Var 'aux901' direct represents '1' with '14071'
14069 -14070 14071 0
-14071 14070 0
-14071 -14069 0
c Var 'aux901' direct represents '2' with '-14070'
14069 14071 -14070 0
c Encoding variable: aux902 with domain: int(0..2) (representing constraint ((field_00008_00009=1) + (field_00007_00009=1)))
c Both direct and order encoding.
c Var 'aux902' order represents '0' with '14072'
c Var 'aux902' direct represents '0' with '14072'
c Var 'aux902' order represents '1' with '14073'
-14072 14073 0
c Var 'aux902' direct represents '1' with '14074'
14072 -14073 14074 0
-14074 14073 0
-14074 -14072 0
c Var 'aux902' direct represents '2' with '-14073'
14072 14074 -14073 0
c Encoding variable: aux903 with domain: int(0..2) (representing constraint ((field_00003_00009=1) + (field_00005_00009=1)))
c Both direct and order encoding.
c Var 'aux903' order represents '0' with '14075'
c Var 'aux903' direct represents '0' with '14075'
c Var 'aux903' order represents '1' with '14076'
-14075 14076 0
c Var 'aux903' direct represents '1' with '14077'
14075 -14076 14077 0
-14077 14076 0
-14077 -14075 0
c Var 'aux903' direct represents '2' with '-14076'
14075 14077 -14076 0
c Encoding variable: aux904 with domain: int(0..3) (representing constraint ((field_00002_00009=1) + aux903))
c Both direct and order encoding.
c Var 'aux904' order represents '0' with '14078'
c Var 'aux904' direct represents '0' with '14078'
c Var 'aux904' order represents '1' with '14079'
-14078 14079 0
c Var 'aux904' direct represents '1' with '14080'
14078 -14079 14080 0
-14080 14079 0
-14080 -14078 0
c Var 'aux904' order represents '2' with '14081'
-14079 14081 0
c Var 'aux904' direct represents '2' with '14082'
14079 -14081 14082 0
-14082 14081 0
-14082 -14079 0
c Var 'aux904' direct represents '3' with '-14081'
14078 14080 14082 -14081 0
c Encoding variable: aux905 with domain: int(0..4) (representing constraint (aux900 + aux902))
c Both direct and order encoding.
c Var 'aux905' order represents '0' with '14083'
c Var 'aux905' direct represents '0' with '14083'
c Var 'aux905' order represents '1' with '14084'
-14083 14084 0
c Var 'aux905' direct represents '1' with '14085'
14083 -14084 14085 0
-14085 14084 0
-14085 -14083 0
c Var 'aux905' order represents '2' with '14086'
-14084 14086 0
c Var 'aux905' direct represents '2' with '14087'
14084 -14086 14087 0
-14087 14086 0
-14087 -14084 0
c Var 'aux905' order represents '3' with '14088'
-14086 14088 0
c Var 'aux905' direct represents '3' with '14089'
14086 -14088 14089 0
-14089 14088 0
-14089 -14086 0
c Var 'aux905' direct represents '4' with '-14088'
14083 14085 14087 14089 -14088 0
c Encoding variable: aux906 with domain: int(0..2) (representing constraint ((field_00004_00009=2) + (field_00006_00009=2)))
c Both direct and order encoding.
c Var 'aux906' order represents '0' with '14090'
c Var 'aux906' direct represents '0' with '14090'
c Var 'aux906' order represents '1' with '14091'
-14090 14091 0
c Var 'aux906' direct represents '1' with '14092'
14090 -14091 14092 0
-14092 14091 0
-14092 -14090 0
c Var 'aux906' direct represents '2' with '-14091'
14090 14092 -14091 0
c Encoding variable: aux907 with domain: int(0..2) (representing constraint ((field_00001_00009=2) + (field_00009_00009=2)))
c Both direct and order encoding.
c Var 'aux907' order represents '0' with '14093'
c Var 'aux907' direct represents '0' with '14093'
c Var 'aux907' order represents '1' with '14094'
-14093 14094 0
c Var 'aux907' direct represents '1' with '14095'
14093 -14094 14095 0
-14095 14094 0
-14095 -14093 0
c Var 'aux907' direct represents '2' with '-14094'
14093 14095 -14094 0
c Encoding variable: aux908 with domain: int(0..2) (representing constraint ((field_00008_00009=2) + (field_00007_00009=2)))
c Both direct and order encoding.
c Var 'aux908' order represents '0' with '14096'
c Var 'aux908' direct represents '0' with '14096'
c Var 'aux908' order represents '1' with '14097'
-14096 14097 0
c Var 'aux908' direct represents '1' with '14098'
14096 -14097 14098 0
-14098 14097 0
-14098 -14096 0
c Var 'aux908' direct represents '2' with '-14097'
14096 14098 -14097 0
c Encoding variable: aux909 with domain: int(0..2) (representing constraint ((field_00003_00009=2) + (field_00005_00009=2)))
c Both direct and order encoding.
c Var 'aux909' order represents '0' with '14099'
c Var 'aux909' direct represents '0' with '14099'
c Var 'aux909' order represents '1' with '14100'
-14099 14100 0
c Var 'aux909' direct represents '1' with '14101'
14099 -14100 14101 0
-14101 14100 0
-14101 -14099 0
c Var 'aux909' direct represents '2' with '-14100'
14099 14101 -14100 0
c Encoding variable: aux910 with domain: int(0..3) (representing constraint ((field_00002_00009=2) + aux909))
c Both direct and order encoding.
c Var 'aux910' order represents '0' with '14102'
c Var 'aux910' direct represents '0' with '14102'
c Var 'aux910' order represents '1' with '14103'
-14102 14103 0
c Var 'aux910' direct represents '1' with '14104'
14102 -14103 14104 0
-14104 14103 0
-14104 -14102 0
c Var 'aux910' order represents '2' with '14105'
-14103 14105 0
c Var 'aux910' direct represents '2' with '14106'
14103 -14105 14106 0
-14106 14105 0
-14106 -14103 0
c Var 'aux910' direct represents '3' with '-14105'
14102 14104 14106 -14105 0
c Encoding variable: aux911 with domain: int(0..4) (representing constraint (aux906 + aux908))
c Both direct and order encoding.
c Var 'aux911' order represents '0' with '14107'
c Var 'aux911' direct represents '0' with '14107'
c Var 'aux911' order represents '1' with '14108'
-14107 14108 0
c Var 'aux911' direct represents '1' with '14109'
14107 -14108 14109 0
-14109 14108 0
-14109 -14107 0
c Var 'aux911' order represents '2' with '14110'
-14108 14110 0
c Var 'aux911' direct represents '2' with '14111'
14108 -14110 14111 0
-14111 14110 0
-14111 -14108 0
c Var 'aux911' order represents '3' with '14112'
-14110 14112 0
c Var 'aux911' direct represents '3' with '14113'
14110 -14112 14113 0
-14113 14112 0
-14113 -14110 0
c Var 'aux911' direct represents '4' with '-14112'
14107 14109 14111 14113 -14112 0
c Encoding variable: aux912 with domain: int(0..2) (representing constraint ((field_00004_00009=3) + (field_00006_00009=3)))
c Both direct and order encoding.
c Var 'aux912' order represents '0' with '14114'
c Var 'aux912' direct represents '0' with '14114'
c Var 'aux912' order represents '1' with '14115'
-14114 14115 0
c Var 'aux912' direct represents '1' with '14116'
14114 -14115 14116 0
-14116 14115 0
-14116 -14114 0
c Var 'aux912' direct represents '2' with '-14115'
14114 14116 -14115 0
c Encoding variable: aux913 with domain: int(0..2) (representing constraint ((field_00001_00009=3) + (field_00009_00009=3)))
c Both direct and order encoding.
c Var 'aux913' order represents '0' with '14117'
c Var 'aux913' direct represents '0' with '14117'
c Var 'aux913' order represents '1' with '14118'
-14117 14118 0
c Var 'aux913' direct represents '1' with '14119'
14117 -14118 14119 0
-14119 14118 0
-14119 -14117 0
c Var 'aux913' direct represents '2' with '-14118'
14117 14119 -14118 0
c Encoding variable: aux914 with domain: int(0..2) (representing constraint ((field_00008_00009=3) + (field_00007_00009=3)))
c Both direct and order encoding.
c Var 'aux914' order represents '0' with '14120'
c Var 'aux914' direct represents '0' with '14120'
c Var 'aux914' order represents '1' with '14121'
-14120 14121 0
c Var 'aux914' direct represents '1' with '14122'
14120 -14121 14122 0
-14122 14121 0
-14122 -14120 0
c Var 'aux914' direct represents '2' with '-14121'
14120 14122 -14121 0
c Encoding variable: aux915 with domain: int(0..2) (representing constraint ((field_00003_00009=3) + (field_00005_00009=3)))
c Both direct and order encoding.
c Var 'aux915' order represents '0' with '14123'
c Var 'aux915' direct represents '0' with '14123'
c Var 'aux915' order represents '1' with '14124'
-14123 14124 0
c Var 'aux915' direct represents '1' with '14125'
14123 -14124 14125 0
-14125 14124 0
-14125 -14123 0
c Var 'aux915' direct represents '2' with '-14124'
14123 14125 -14124 0
c Encoding variable: aux916 with domain: int(0..3) (representing constraint ((field_00002_00009=3) + aux915))
c Both direct and order encoding.
c Var 'aux916' order represents '0' with '14126'
c Var 'aux916' direct represents '0' with '14126'
c Var 'aux916' order represents '1' with '14127'
-14126 14127 0
c Var 'aux916' direct represents '1' with '14128'
14126 -14127 14128 0
-14128 14127 0
-14128 -14126 0
c Var 'aux916' order represents '2' with '14129'
-14127 14129 0
c Var 'aux916' direct represents '2' with '14130'
14127 -14129 14130 0
-14130 14129 0
-14130 -14127 0
c Var 'aux916' direct represents '3' with '-14129'
14126 14128 14130 -14129 0
c Encoding variable: aux917 with domain: int(0..4) (representing constraint (aux912 + aux914))
c Both direct and order encoding.
c Var 'aux917' order represents '0' with '14131'
c Var 'aux917' direct represents '0' with '14131'
c Var 'aux917' order represents '1' with '14132'
-14131 14132 0
c Var 'aux917' direct represents '1' with '14133'
14131 -14132 14133 0
-14133 14132 0
-14133 -14131 0
c Var 'aux917' order represents '2' with '14134'
-14132 14134 0
c Var 'aux917' direct represents '2' with '14135'
14132 -14134 14135 0
-14135 14134 0
-14135 -14132 0
c Var 'aux917' order represents '3' with '14136'
-14134 14136 0
c Var 'aux917' direct represents '3' with '14137'
14134 -14136 14137 0
-14137 14136 0
-14137 -14134 0
c Var 'aux917' direct represents '4' with '-14136'
14131 14133 14135 14137 -14136 0
c Encoding variable: aux918 with domain: int(0..2) (representing constraint ((field_00004_00009=4) + (field_00006_00009=4)))
c Both direct and order encoding.
c Var 'aux918' order represents '0' with '14138'
c Var 'aux918' direct represents '0' with '14138'
c Var 'aux918' order represents '1' with '14139'
-14138 14139 0
c Var 'aux918' direct represents '1' with '14140'
14138 -14139 14140 0
-14140 14139 0
-14140 -14138 0
c Var 'aux918' direct represents '2' with '-14139'
14138 14140 -14139 0
c Encoding variable: aux919 with domain: int(0..2) (representing constraint ((field_00001_00009=4) + (field_00009_00009=4)))
c Both direct and order encoding.
c Var 'aux919' order represents '0' with '14141'
c Var 'aux919' direct represents '0' with '14141'
c Var 'aux919' order represents '1' with '14142'
-14141 14142 0
c Var 'aux919' direct represents '1' with '14143'
14141 -14142 14143 0
-14143 14142 0
-14143 -14141 0
c Var 'aux919' direct represents '2' with '-14142'
14141 14143 -14142 0
c Encoding variable: aux920 with domain: int(0..2) (representing constraint ((field_00008_00009=4) + (field_00007_00009=4)))
c Both direct and order encoding.
c Var 'aux920' order represents '0' with '14144'
c Var 'aux920' direct represents '0' with '14144'
c Var 'aux920' order represents '1' with '14145'
-14144 14145 0
c Var 'aux920' direct represents '1' with '14146'
14144 -14145 14146 0
-14146 14145 0
-14146 -14144 0
c Var 'aux920' direct represents '2' with '-14145'
14144 14146 -14145 0
c Encoding variable: aux921 with domain: int(0..2) (representing constraint ((field_00003_00009=4) + (field_00005_00009=4)))
c Both direct and order encoding.
c Var 'aux921' order represents '0' with '14147'
c Var 'aux921' direct represents '0' with '14147'
c Var 'aux921' order represents '1' with '14148'
-14147 14148 0
c Var 'aux921' direct represents '1' with '14149'
14147 -14148 14149 0
-14149 14148 0
-14149 -14147 0
c Var 'aux921' direct represents '2' with '-14148'
14147 14149 -14148 0
c Encoding variable: aux922 with domain: int(0..3) (representing constraint ((field_00002_00009=4) + aux921))
c Both direct and order encoding.
c Var 'aux922' order represents '0' with '14150'
c Var 'aux922' direct represents '0' with '14150'
c Var 'aux922' order represents '1' with '14151'
-14150 14151 0
c Var 'aux922' direct represents '1' with '14152'
14150 -14151 14152 0
-14152 14151 0
-14152 -14150 0
c Var 'aux922' order represents '2' with '14153'
-14151 14153 0
c Var 'aux922' direct represents '2' with '14154'
14151 -14153 14154 0
-14154 14153 0
-14154 -14151 0
c Var 'aux922' direct represents '3' with '-14153'
14150 14152 14154 -14153 0
c Encoding variable: aux923 with domain: int(0..4) (representing constraint (aux918 + aux920))
c Both direct and order encoding.
c Var 'aux923' order represents '0' with '14155'
c Var 'aux923' direct represents '0' with '14155'
c Var 'aux923' order represents '1' with '14156'
-14155 14156 0
c Var 'aux923' direct represents '1' with '14157'
14155 -14156 14157 0
-14157 14156 0
-14157 -14155 0
c Var 'aux923' order represents '2' with '14158'
-14156 14158 0
c Var 'aux923' direct represents '2' with '14159'
14156 -14158 14159 0
-14159 14158 0
-14159 -14156 0
c Var 'aux923' order represents '3' with '14160'
-14158 14160 0
c Var 'aux923' direct represents '3' with '14161'
14158 -14160 14161 0
-14161 14160 0
-14161 -14158 0
c Var 'aux923' direct represents '4' with '-14160'
14155 14157 14159 14161 -14160 0
c Encoding variable: aux924 with domain: int(0..2) (representing constraint ((field_00004_00009=5) + (field_00006_00009=5)))
c Both direct and order encoding.
c Var 'aux924' order represents '0' with '14162'
c Var 'aux924' direct represents '0' with '14162'
c Var 'aux924' order represents '1' with '14163'
-14162 14163 0
c Var 'aux924' direct represents '1' with '14164'
14162 -14163 14164 0
-14164 14163 0
-14164 -14162 0
c Var 'aux924' direct represents '2' with '-14163'
14162 14164 -14163 0
c Encoding variable: aux925 with domain: int(0..2) (representing constraint ((field_00001_00009=5) + (field_00009_00009=5)))
c Both direct and order encoding.
c Var 'aux925' order represents '0' with '14165'
c Var 'aux925' direct represents '0' with '14165'
c Var 'aux925' order represents '1' with '14166'
-14165 14166 0
c Var 'aux925' direct represents '1' with '14167'
14165 -14166 14167 0
-14167 14166 0
-14167 -14165 0
c Var 'aux925' direct represents '2' with '-14166'
14165 14167 -14166 0
c Encoding variable: aux926 with domain: int(0..2) (representing constraint ((field_00008_00009=5) + (field_00007_00009=5)))
c Both direct and order encoding.
c Var 'aux926' order represents '0' with '14168'
c Var 'aux926' direct represents '0' with '14168'
c Var 'aux926' order represents '1' with '14169'
-14168 14169 0
c Var 'aux926' direct represents '1' with '14170'
14168 -14169 14170 0
-14170 14169 0
-14170 -14168 0
c Var 'aux926' direct represents '2' with '-14169'
14168 14170 -14169 0
c Encoding variable: aux927 with domain: int(0..2) (representing constraint ((field_00003_00009=5) + (field_00005_00009=5)))
c Both direct and order encoding.
c Var 'aux927' order represents '0' with '14171'
c Var 'aux927' direct represents '0' with '14171'
c Var 'aux927' order represents '1' with '14172'
-14171 14172 0
c Var 'aux927' direct represents '1' with '14173'
14171 -14172 14173 0
-14173 14172 0
-14173 -14171 0
c Var 'aux927' direct represents '2' with '-14172'
14171 14173 -14172 0
c Encoding variable: aux928 with domain: int(0..3) (representing constraint ((field_00002_00009=5) + aux927))
c Both direct and order encoding.
c Var 'aux928' order represents '0' with '14174'
c Var 'aux928' direct represents '0' with '14174'
c Var 'aux928' order represents '1' with '14175'
-14174 14175 0
c Var 'aux928' direct represents '1' with '14176'
14174 -14175 14176 0
-14176 14175 0
-14176 -14174 0
c Var 'aux928' order represents '2' with '14177'
-14175 14177 0
c Var 'aux928' direct represents '2' with '14178'
14175 -14177 14178 0
-14178 14177 0
-14178 -14175 0
c Var 'aux928' direct represents '3' with '-14177'
14174 14176 14178 -14177 0
c Encoding variable: aux929 with domain: int(0..4) (representing constraint (aux924 + aux926))
c Both direct and order encoding.
c Var 'aux929' order represents '0' with '14179'
c Var 'aux929' direct represents '0' with '14179'
c Var 'aux929' order represents '1' with '14180'
-14179 14180 0
c Var 'aux929' direct represents '1' with '14181'
14179 -14180 14181 0
-14181 14180 0
-14181 -14179 0
c Var 'aux929' order represents '2' with '14182'
-14180 14182 0
c Var 'aux929' direct represents '2' with '14183'
14180 -14182 14183 0
-14183 14182 0
-14183 -14180 0
c Var 'aux929' order represents '3' with '14184'
-14182 14184 0
c Var 'aux929' direct represents '3' with '14185'
14182 -14184 14185 0
-14185 14184 0
-14185 -14182 0
c Var 'aux929' direct represents '4' with '-14184'
14179 14181 14183 14185 -14184 0
c Encoding variable: aux930 with domain: int(0..2) (representing constraint ((field_00004_00009=6) + (field_00006_00009=6)))
c Both direct and order encoding.
c Var 'aux930' order represents '0' with '14186'
c Var 'aux930' direct represents '0' with '14186'
c Var 'aux930' order represents '1' with '14187'
-14186 14187 0
c Var 'aux930' direct represents '1' with '14188'
14186 -14187 14188 0
-14188 14187 0
-14188 -14186 0
c Var 'aux930' direct represents '2' with '-14187'
14186 14188 -14187 0
c Encoding variable: aux931 with domain: int(0..2) (representing constraint ((field_00001_00009=6) + (field_00009_00009=6)))
c Both direct and order encoding.
c Var 'aux931' order represents '0' with '14189'
c Var 'aux931' direct represents '0' with '14189'
c Var 'aux931' order represents '1' with '14190'
-14189 14190 0
c Var 'aux931' direct represents '1' with '14191'
14189 -14190 14191 0
-14191 14190 0
-14191 -14189 0
c Var 'aux931' direct represents '2' with '-14190'
14189 14191 -14190 0
c Encoding variable: aux932 with domain: int(0..2) (representing constraint ((field_00008_00009=6) + (field_00007_00009=6)))
c Both direct and order encoding.
c Var 'aux932' order represents '0' with '14192'
c Var 'aux932' direct represents '0' with '14192'
c Var 'aux932' order represents '1' with '14193'
-14192 14193 0
c Var 'aux932' direct represents '1' with '14194'
14192 -14193 14194 0
-14194 14193 0
-14194 -14192 0
c Var 'aux932' direct represents '2' with '-14193'
14192 14194 -14193 0
c Encoding variable: aux933 with domain: int(0..2) (representing constraint ((field_00003_00009=6) + (field_00005_00009=6)))
c Both direct and order encoding.
c Var 'aux933' order represents '0' with '14195'
c Var 'aux933' direct represents '0' with '14195'
c Var 'aux933' order represents '1' with '14196'
-14195 14196 0
c Var 'aux933' direct represents '1' with '14197'
14195 -14196 14197 0
-14197 14196 0
-14197 -14195 0
c Var 'aux933' direct represents '2' with '-14196'
14195 14197 -14196 0
c Encoding variable: aux934 with domain: int(0..3) (representing constraint ((field_00002_00009=6) + aux933))
c Both direct and order encoding.
c Var 'aux934' order represents '0' with '14198'
c Var 'aux934' direct represents '0' with '14198'
c Var 'aux934' order represents '1' with '14199'
-14198 14199 0
c Var 'aux934' direct represents '1' with '14200'
14198 -14199 14200 0
-14200 14199 0
-14200 -14198 0
c Var 'aux934' order represents '2' with '14201'
-14199 14201 0
c Var 'aux934' direct represents '2' with '14202'
14199 -14201 14202 0
-14202 14201 0
-14202 -14199 0
c Var 'aux934' direct represents '3' with '-14201'
14198 14200 14202 -14201 0
c Encoding variable: aux935 with domain: int(0..4) (representing constraint (aux930 + aux932))
c Both direct and order encoding.
c Var 'aux935' order represents '0' with '14203'
c Var 'aux935' direct represents '0' with '14203'
c Var 'aux935' order represents '1' with '14204'
-14203 14204 0
c Var 'aux935' direct represents '1' with '14205'
14203 -14204 14205 0
-14205 14204 0
-14205 -14203 0
c Var 'aux935' order represents '2' with '14206'
-14204 14206 0
c Var 'aux935' direct represents '2' with '14207'
14204 -14206 14207 0
-14207 14206 0
-14207 -14204 0
c Var 'aux935' order represents '3' with '14208'
-14206 14208 0
c Var 'aux935' direct represents '3' with '14209'
14206 -14208 14209 0
-14209 14208 0
-14209 -14206 0
c Var 'aux935' direct represents '4' with '-14208'
14203 14205 14207 14209 -14208 0
c Encoding variable: aux936 with domain: int(0..2) (representing constraint ((field_00004_00009=7) + (field_00006_00009=7)))
c Both direct and order encoding.
c Var 'aux936' order represents '0' with '14210'
c Var 'aux936' direct represents '0' with '14210'
c Var 'aux936' order represents '1' with '14211'
-14210 14211 0
c Var 'aux936' direct represents '1' with '14212'
14210 -14211 14212 0
-14212 14211 0
-14212 -14210 0
c Var 'aux936' direct represents '2' with '-14211'
14210 14212 -14211 0
c Encoding variable: aux937 with domain: int(0..2) (representing constraint ((field_00001_00009=7) + (field_00009_00009=7)))
c Both direct and order encoding.
c Var 'aux937' order represents '0' with '14213'
c Var 'aux937' direct represents '0' with '14213'
c Var 'aux937' order represents '1' with '14214'
-14213 14214 0
c Var 'aux937' direct represents '1' with '14215'
14213 -14214 14215 0
-14215 14214 0
-14215 -14213 0
c Var 'aux937' direct represents '2' with '-14214'
14213 14215 -14214 0
c Encoding variable: aux938 with domain: int(0..2) (representing constraint ((field_00008_00009=7) + (field_00007_00009=7)))
c Both direct and order encoding.
c Var 'aux938' order represents '0' with '14216'
c Var 'aux938' direct represents '0' with '14216'
c Var 'aux938' order represents '1' with '14217'
-14216 14217 0
c Var 'aux938' direct represents '1' with '14218'
14216 -14217 14218 0
-14218 14217 0
-14218 -14216 0
c Var 'aux938' direct represents '2' with '-14217'
14216 14218 -14217 0
c Encoding variable: aux939 with domain: int(0..2) (representing constraint ((field_00003_00009=7) + (field_00005_00009=7)))
c Both direct and order encoding.
c Var 'aux939' order represents '0' with '14219'
c Var 'aux939' direct represents '0' with '14219'
c Var 'aux939' order represents '1' with '14220'
-14219 14220 0
c Var 'aux939' direct represents '1' with '14221'
14219 -14220 14221 0
-14221 14220 0
-14221 -14219 0
c Var 'aux939' direct represents '2' with '-14220'
14219 14221 -14220 0
c Encoding variable: aux940 with domain: int(0..3) (representing constraint ((field_00002_00009=7) + aux939))
c Both direct and order encoding.
c Var 'aux940' order represents '0' with '14222'
c Var 'aux940' direct represents '0' with '14222'
c Var 'aux940' order represents '1' with '14223'
-14222 14223 0
c Var 'aux940' direct represents '1' with '14224'
14222 -14223 14224 0
-14224 14223 0
-14224 -14222 0
c Var 'aux940' order represents '2' with '14225'
-14223 14225 0
c Var 'aux940' direct represents '2' with '14226'
14223 -14225 14226 0
-14226 14225 0
-14226 -14223 0
c Var 'aux940' direct represents '3' with '-14225'
14222 14224 14226 -14225 0
c Encoding variable: aux941 with domain: int(0..4) (representing constraint (aux936 + aux938))
c Both direct and order encoding.
c Var 'aux941' order represents '0' with '14227'
c Var 'aux941' direct represents '0' with '14227'
c Var 'aux941' order represents '1' with '14228'
-14227 14228 0
c Var 'aux941' direct represents '1' with '14229'
14227 -14228 14229 0
-14229 14228 0
-14229 -14227 0
c Var 'aux941' order represents '2' with '14230'
-14228 14230 0
c Var 'aux941' direct represents '2' with '14231'
14228 -14230 14231 0
-14231 14230 0
-14231 -14228 0
c Var 'aux941' order represents '3' with '14232'
-14230 14232 0
c Var 'aux941' direct represents '3' with '14233'
14230 -14232 14233 0
-14233 14232 0
-14233 -14230 0
c Var 'aux941' direct represents '4' with '-14232'
14227 14229 14231 14233 -14232 0
c Encoding variable: aux942 with domain: int(0..2) (representing constraint ((field_00004_00009=8) + (field_00006_00009=8)))
c Both direct and order encoding.
c Var 'aux942' order represents '0' with '14234'
c Var 'aux942' direct represents '0' with '14234'
c Var 'aux942' order represents '1' with '14235'
-14234 14235 0
c Var 'aux942' direct represents '1' with '14236'
14234 -14235 14236 0
-14236 14235 0
-14236 -14234 0
c Var 'aux942' direct represents '2' with '-14235'
14234 14236 -14235 0
c Encoding variable: aux943 with domain: int(0..2) (representing constraint ((field_00001_00009=8) + (field_00009_00009=8)))
c Both direct and order encoding.
c Var 'aux943' order represents '0' with '14237'
c Var 'aux943' direct represents '0' with '14237'
c Var 'aux943' order represents '1' with '14238'
-14237 14238 0
c Var 'aux943' direct represents '1' with '14239'
14237 -14238 14239 0
-14239 14238 0
-14239 -14237 0
c Var 'aux943' direct represents '2' with '-14238'
14237 14239 -14238 0
c Encoding variable: aux944 with domain: int(0..2) (representing constraint ((field_00008_00009=8) + (field_00007_00009=8)))
c Both direct and order encoding.
c Var 'aux944' order represents '0' with '14240'
c Var 'aux944' direct represents '0' with '14240'
c Var 'aux944' order represents '1' with '14241'
-14240 14241 0
c Var 'aux944' direct represents '1' with '14242'
14240 -14241 14242 0
-14242 14241 0
-14242 -14240 0
c Var 'aux944' direct represents '2' with '-14241'
14240 14242 -14241 0
c Encoding variable: aux945 with domain: int(0..2) (representing constraint ((field_00003_00009=8) + (field_00005_00009=8)))
c Both direct and order encoding.
c Var 'aux945' order represents '0' with '14243'
c Var 'aux945' direct represents '0' with '14243'
c Var 'aux945' order represents '1' with '14244'
-14243 14244 0
c Var 'aux945' direct represents '1' with '14245'
14243 -14244 14245 0
-14245 14244 0
-14245 -14243 0
c Var 'aux945' direct represents '2' with '-14244'
14243 14245 -14244 0
c Encoding variable: aux946 with domain: int(0..3) (representing constraint ((field_00002_00009=8) + aux945))
c Both direct and order encoding.
c Var 'aux946' order represents '0' with '14246'
c Var 'aux946' direct represents '0' with '14246'
c Var 'aux946' order represents '1' with '14247'
-14246 14247 0
c Var 'aux946' direct represents '1' with '14248'
14246 -14247 14248 0
-14248 14247 0
-14248 -14246 0
c Var 'aux946' order represents '2' with '14249'
-14247 14249 0
c Var 'aux946' direct represents '2' with '14250'
14247 -14249 14250 0
-14250 14249 0
-14250 -14247 0
c Var 'aux946' direct represents '3' with '-14249'
14246 14248 14250 -14249 0
c Encoding variable: aux947 with domain: int(0..4) (representing constraint (aux942 + aux944))
c Both direct and order encoding.
c Var 'aux947' order represents '0' with '14251'
c Var 'aux947' direct represents '0' with '14251'
c Var 'aux947' order represents '1' with '14252'
-14251 14252 0
c Var 'aux947' direct represents '1' with '14253'
14251 -14252 14253 0
-14253 14252 0
-14253 -14251 0
c Var 'aux947' order represents '2' with '14254'
-14252 14254 0
c Var 'aux947' direct represents '2' with '14255'
14252 -14254 14255 0
-14255 14254 0
-14255 -14252 0
c Var 'aux947' order represents '3' with '14256'
-14254 14256 0
c Var 'aux947' direct represents '3' with '14257'
14254 -14256 14257 0
-14257 14256 0
-14257 -14254 0
c Var 'aux947' direct represents '4' with '-14256'
14251 14253 14255 14257 -14256 0
c Encoding variable: aux948 with domain: int(0..2) (representing constraint ((field_00004_00009=9) + (field_00006_00009=9)))
c Both direct and order encoding.
c Var 'aux948' order represents '0' with '14258'
c Var 'aux948' direct represents '0' with '14258'
c Var 'aux948' order represents '1' with '14259'
-14258 14259 0
c Var 'aux948' direct represents '1' with '14260'
14258 -14259 14260 0
-14260 14259 0
-14260 -14258 0
c Var 'aux948' direct represents '2' with '-14259'
14258 14260 -14259 0
c Encoding variable: aux949 with domain: int(0..2) (representing constraint ((field_00001_00009=9) + (field_00009_00009=9)))
c Both direct and order encoding.
c Var 'aux949' order represents '0' with '14261'
c Var 'aux949' direct represents '0' with '14261'
c Var 'aux949' order represents '1' with '14262'
-14261 14262 0
c Var 'aux949' direct represents '1' with '14263'
14261 -14262 14263 0
-14263 14262 0
-14263 -14261 0
c Var 'aux949' direct represents '2' with '-14262'
14261 14263 -14262 0
c Encoding variable: aux950 with domain: int(0..2) (representing constraint ((field_00008_00009=9) + (field_00007_00009=9)))
c Both direct and order encoding.
c Var 'aux950' order represents '0' with '14264'
c Var 'aux950' direct represents '0' with '14264'
c Var 'aux950' order represents '1' with '14265'
-14264 14265 0
c Var 'aux950' direct represents '1' with '14266'
14264 -14265 14266 0
-14266 14265 0
-14266 -14264 0
c Var 'aux950' direct represents '2' with '-14265'
14264 14266 -14265 0
c Encoding variable: aux951 with domain: int(0..2) (representing constraint ((field_00003_00009=9) + (field_00005_00009=9)))
c Both direct and order encoding.
c Var 'aux951' order represents '0' with '14267'
c Var 'aux951' direct represents '0' with '14267'
c Var 'aux951' order represents '1' with '14268'
-14267 14268 0
c Var 'aux951' direct represents '1' with '14269'
14267 -14268 14269 0
-14269 14268 0
-14269 -14267 0
c Var 'aux951' direct represents '2' with '-14268'
14267 14269 -14268 0
c Encoding variable: aux952 with domain: int(0..3) (representing constraint ((field_00002_00009=9) + aux951))
c Both direct and order encoding.
c Var 'aux952' order represents '0' with '14270'
c Var 'aux952' direct represents '0' with '14270'
c Var 'aux952' order represents '1' with '14271'
-14270 14271 0
c Var 'aux952' direct represents '1' with '14272'
14270 -14271 14272 0
-14272 14271 0
-14272 -14270 0
c Var 'aux952' order represents '2' with '14273'
-14271 14273 0
c Var 'aux952' direct represents '2' with '14274'
14271 -14273 14274 0
-14274 14273 0
-14274 -14271 0
c Var 'aux952' direct represents '3' with '-14273'
14270 14272 14274 -14273 0
c Encoding variable: aux953 with domain: int(0..4) (representing constraint (aux948 + aux950))
c Both direct and order encoding.
c Var 'aux953' order represents '0' with '14275'
c Var 'aux953' direct represents '0' with '14275'
c Var 'aux953' order represents '1' with '14276'
-14275 14276 0
c Var 'aux953' direct represents '1' with '14277'
14275 -14276 14277 0
-14277 14276 0
-14277 -14275 0
c Var 'aux953' order represents '2' with '14278'
-14276 14278 0
c Var 'aux953' direct represents '2' with '14279'
14276 -14278 14279 0
-14279 14278 0
-14279 -14276 0
c Var 'aux953' order represents '3' with '14280'
-14278 14280 0
c Var 'aux953' direct represents '3' with '14281'
14278 -14280 14281 0
-14281 14280 0
-14281 -14278 0
c Var 'aux953' direct represents '4' with '-14280'
14275 14277 14279 14281 -14280 0
c Encoding variable: aux954 with domain: int(0..2) (representing constraint ((field_00001_00001=1) + (field_00001_00009=1)))
c Both direct and order encoding.
c Var 'aux954' order represents '0' with '14282'
c Var 'aux954' direct represents '0' with '14282'
c Var 'aux954' order represents '1' with '14283'
-14282 14283 0
c Var 'aux954' direct represents '1' with '14284'
14282 -14283 14284 0
-14284 14283 0
-14284 -14282 0
c Var 'aux954' direct represents '2' with '-14283'
14282 14284 -14283 0
c Encoding variable: aux955 with domain: int(0..2) (representing constraint ((field_00001_00008=1) + (field_00001_00002=1)))
c Both direct and order encoding.
c Var 'aux955' order represents '0' with '14285'
c Var 'aux955' direct represents '0' with '14285'
c Var 'aux955' order represents '1' with '14286'
-14285 14286 0
c Var 'aux955' direct represents '1' with '14287'
14285 -14286 14287 0
-14287 14286 0
-14287 -14285 0
c Var 'aux955' direct represents '2' with '-14286'
14285 14287 -14286 0
c Encoding variable: aux956 with domain: int(0..2) (representing constraint ((field_00001_00007=1) + (field_00001_00004=1)))
c Both direct and order encoding.
c Var 'aux956' order represents '0' with '14288'
c Var 'aux956' direct represents '0' with '14288'
c Var 'aux956' order represents '1' with '14289'
-14288 14289 0
c Var 'aux956' direct represents '1' with '14290'
14288 -14289 14290 0
-14290 14289 0
-14290 -14288 0
c Var 'aux956' direct represents '2' with '-14289'
14288 14290 -14289 0
c Encoding variable: aux957 with domain: int(0..2) (representing constraint ((field_00001_00006=1) + (field_00001_00005=1)))
c Both direct and order encoding.
c Var 'aux957' order represents '0' with '14291'
c Var 'aux957' direct represents '0' with '14291'
c Var 'aux957' order represents '1' with '14292'
-14291 14292 0
c Var 'aux957' direct represents '1' with '14293'
14291 -14292 14293 0
-14293 14292 0
-14293 -14291 0
c Var 'aux957' direct represents '2' with '-14292'
14291 14293 -14292 0
c Encoding variable: aux958 with domain: int(0..3) (representing constraint ((field_00001_00003=1) + aux957))
c Both direct and order encoding.
c Var 'aux958' order represents '0' with '14294'
c Var 'aux958' direct represents '0' with '14294'
c Var 'aux958' order represents '1' with '14295'
-14294 14295 0
c Var 'aux958' direct represents '1' with '14296'
14294 -14295 14296 0
-14296 14295 0
-14296 -14294 0
c Var 'aux958' order represents '2' with '14297'
-14295 14297 0
c Var 'aux958' direct represents '2' with '14298'
14295 -14297 14298 0
-14298 14297 0
-14298 -14295 0
c Var 'aux958' direct represents '3' with '-14297'
14294 14296 14298 -14297 0
c Encoding variable: aux959 with domain: int(0..4) (representing constraint (aux954 + aux956))
c Both direct and order encoding.
c Var 'aux959' order represents '0' with '14299'
c Var 'aux959' direct represents '0' with '14299'
c Var 'aux959' order represents '1' with '14300'
-14299 14300 0
c Var 'aux959' direct represents '1' with '14301'
14299 -14300 14301 0
-14301 14300 0
-14301 -14299 0
c Var 'aux959' order represents '2' with '14302'
-14300 14302 0
c Var 'aux959' direct represents '2' with '14303'
14300 -14302 14303 0
-14303 14302 0
-14303 -14300 0
c Var 'aux959' order represents '3' with '14304'
-14302 14304 0
c Var 'aux959' direct represents '3' with '14305'
14302 -14304 14305 0
-14305 14304 0
-14305 -14302 0
c Var 'aux959' direct represents '4' with '-14304'
14299 14301 14303 14305 -14304 0
c Encoding variable: aux960 with domain: int(0..2) (representing constraint ((field_00001_00001=2) + (field_00001_00009=2)))
c Both direct and order encoding.
c Var 'aux960' order represents '0' with '14306'
c Var 'aux960' direct represents '0' with '14306'
c Var 'aux960' order represents '1' with '14307'
-14306 14307 0
c Var 'aux960' direct represents '1' with '14308'
14306 -14307 14308 0
-14308 14307 0
-14308 -14306 0
c Var 'aux960' direct represents '2' with '-14307'
14306 14308 -14307 0
c Encoding variable: aux961 with domain: int(0..2) (representing constraint ((field_00001_00008=2) + (field_00001_00002=2)))
c Both direct and order encoding.
c Var 'aux961' order represents '0' with '14309'
c Var 'aux961' direct represents '0' with '14309'
c Var 'aux961' order represents '1' with '14310'
-14309 14310 0
c Var 'aux961' direct represents '1' with '14311'
14309 -14310 14311 0
-14311 14310 0
-14311 -14309 0
c Var 'aux961' direct represents '2' with '-14310'
14309 14311 -14310 0
c Encoding variable: aux962 with domain: int(0..2) (representing constraint ((field_00001_00007=2) + (field_00001_00004=2)))
c Both direct and order encoding.
c Var 'aux962' order represents '0' with '14312'
c Var 'aux962' direct represents '0' with '14312'
c Var 'aux962' order represents '1' with '14313'
-14312 14313 0
c Var 'aux962' direct represents '1' with '14314'
14312 -14313 14314 0
-14314 14313 0
-14314 -14312 0
c Var 'aux962' direct represents '2' with '-14313'
14312 14314 -14313 0
c Encoding variable: aux963 with domain: int(0..2) (representing constraint ((field_00001_00006=2) + (field_00001_00005=2)))
c Both direct and order encoding.
c Var 'aux963' order represents '0' with '14315'
c Var 'aux963' direct represents '0' with '14315'
c Var 'aux963' order represents '1' with '14316'
-14315 14316 0
c Var 'aux963' direct represents '1' with '14317'
14315 -14316 14317 0
-14317 14316 0
-14317 -14315 0
c Var 'aux963' direct represents '2' with '-14316'
14315 14317 -14316 0
c Encoding variable: aux964 with domain: int(0..3) (representing constraint ((field_00001_00003=2) + aux963))
c Both direct and order encoding.
c Var 'aux964' order represents '0' with '14318'
c Var 'aux964' direct represents '0' with '14318'
c Var 'aux964' order represents '1' with '14319'
-14318 14319 0
c Var 'aux964' direct represents '1' with '14320'
14318 -14319 14320 0
-14320 14319 0
-14320 -14318 0
c Var 'aux964' order represents '2' with '14321'
-14319 14321 0
c Var 'aux964' direct represents '2' with '14322'
14319 -14321 14322 0
-14322 14321 0
-14322 -14319 0
c Var 'aux964' direct represents '3' with '-14321'
14318 14320 14322 -14321 0
c Encoding variable: aux965 with domain: int(0..4) (representing constraint (aux960 + aux962))
c Both direct and order encoding.
c Var 'aux965' order represents '0' with '14323'
c Var 'aux965' direct represents '0' with '14323'
c Var 'aux965' order represents '1' with '14324'
-14323 14324 0
c Var 'aux965' direct represents '1' with '14325'
14323 -14324 14325 0
-14325 14324 0
-14325 -14323 0
c Var 'aux965' order represents '2' with '14326'
-14324 14326 0
c Var 'aux965' direct represents '2' with '14327'
14324 -14326 14327 0
-14327 14326 0
-14327 -14324 0
c Var 'aux965' order represents '3' with '14328'
-14326 14328 0
c Var 'aux965' direct represents '3' with '14329'
14326 -14328 14329 0
-14329 14328 0
-14329 -14326 0
c Var 'aux965' direct represents '4' with '-14328'
14323 14325 14327 14329 -14328 0
c Encoding variable: aux966 with domain: int(0..2) (representing constraint ((field_00001_00001=3) + (field_00001_00009=3)))
c Both direct and order encoding.
c Var 'aux966' order represents '0' with '14330'
c Var 'aux966' direct represents '0' with '14330'
c Var 'aux966' order represents '1' with '14331'
-14330 14331 0
c Var 'aux966' direct represents '1' with '14332'
14330 -14331 14332 0
-14332 14331 0
-14332 -14330 0
c Var 'aux966' direct represents '2' with '-14331'
14330 14332 -14331 0
c Encoding variable: aux967 with domain: int(0..2) (representing constraint ((field_00001_00008=3) + (field_00001_00002=3)))
c Both direct and order encoding.
c Var 'aux967' order represents '0' with '14333'
c Var 'aux967' direct represents '0' with '14333'
c Var 'aux967' order represents '1' with '14334'
-14333 14334 0
c Var 'aux967' direct represents '1' with '14335'
14333 -14334 14335 0
-14335 14334 0
-14335 -14333 0
c Var 'aux967' direct represents '2' with '-14334'
14333 14335 -14334 0
c Encoding variable: aux968 with domain: int(0..2) (representing constraint ((field_00001_00007=3) + (field_00001_00004=3)))
c Both direct and order encoding.
c Var 'aux968' order represents '0' with '14336'
c Var 'aux968' direct represents '0' with '14336'
c Var 'aux968' order represents '1' with '14337'
-14336 14337 0
c Var 'aux968' direct represents '1' with '14338'
14336 -14337 14338 0
-14338 14337 0
-14338 -14336 0
c Var 'aux968' direct represents '2' with '-14337'
14336 14338 -14337 0
c Encoding variable: aux969 with domain: int(0..2) (representing constraint ((field_00001_00006=3) + (field_00001_00005=3)))
c Both direct and order encoding.
c Var 'aux969' order represents '0' with '14339'
c Var 'aux969' direct represents '0' with '14339'
c Var 'aux969' order represents '1' with '14340'
-14339 14340 0
c Var 'aux969' direct represents '1' with '14341'
14339 -14340 14341 0
-14341 14340 0
-14341 -14339 0
c Var 'aux969' direct represents '2' with '-14340'
14339 14341 -14340 0
c Encoding variable: aux970 with domain: int(0..3) (representing constraint ((field_00001_00003=3) + aux969))
c Both direct and order encoding.
c Var 'aux970' order represents '0' with '14342'
c Var 'aux970' direct represents '0' with '14342'
c Var 'aux970' order represents '1' with '14343'
-14342 14343 0
c Var 'aux970' direct represents '1' with '14344'
14342 -14343 14344 0
-14344 14343 0
-14344 -14342 0
c Var 'aux970' order represents '2' with '14345'
-14343 14345 0
c Var 'aux970' direct represents '2' with '14346'
14343 -14345 14346 0
-14346 14345 0
-14346 -14343 0
c Var 'aux970' direct represents '3' with '-14345'
14342 14344 14346 -14345 0
c Encoding variable: aux971 with domain: int(0..4) (representing constraint (aux966 + aux968))
c Both direct and order encoding.
c Var 'aux971' order represents '0' with '14347'
c Var 'aux971' direct represents '0' with '14347'
c Var 'aux971' order represents '1' with '14348'
-14347 14348 0
c Var 'aux971' direct represents '1' with '14349'
14347 -14348 14349 0
-14349 14348 0
-14349 -14347 0
c Var 'aux971' order represents '2' with '14350'
-14348 14350 0
c Var 'aux971' direct represents '2' with '14351'
14348 -14350 14351 0
-14351 14350 0
-14351 -14348 0
c Var 'aux971' order represents '3' with '14352'
-14350 14352 0
c Var 'aux971' direct represents '3' with '14353'
14350 -14352 14353 0
-14353 14352 0
-14353 -14350 0
c Var 'aux971' direct represents '4' with '-14352'
14347 14349 14351 14353 -14352 0
c Encoding variable: aux972 with domain: int(0..2) (representing constraint ((field_00001_00001=4) + (field_00001_00009=4)))
c Both direct and order encoding.
c Var 'aux972' order represents '0' with '14354'
c Var 'aux972' direct represents '0' with '14354'
c Var 'aux972' order represents '1' with '14355'
-14354 14355 0
c Var 'aux972' direct represents '1' with '14356'
14354 -14355 14356 0
-14356 14355 0
-14356 -14354 0
c Var 'aux972' direct represents '2' with '-14355'
14354 14356 -14355 0
c Encoding variable: aux973 with domain: int(0..2) (representing constraint ((field_00001_00008=4) + (field_00001_00002=4)))
c Both direct and order encoding.
c Var 'aux973' order represents '0' with '14357'
c Var 'aux973' direct represents '0' with '14357'
c Var 'aux973' order represents '1' with '14358'
-14357 14358 0
c Var 'aux973' direct represents '1' with '14359'
14357 -14358 14359 0
-14359 14358 0
-14359 -14357 0
c Var 'aux973' direct represents '2' with '-14358'
14357 14359 -14358 0
c Encoding variable: aux974 with domain: int(0..2) (representing constraint ((field_00001_00007=4) + (field_00001_00004=4)))
c Both direct and order encoding.
c Var 'aux974' order represents '0' with '14360'
c Var 'aux974' direct represents '0' with '14360'
c Var 'aux974' order represents '1' with '14361'
-14360 14361 0
c Var 'aux974' direct represents '1' with '14362'
14360 -14361 14362 0
-14362 14361 0
-14362 -14360 0
c Var 'aux974' direct represents '2' with '-14361'
14360 14362 -14361 0
c Encoding variable: aux975 with domain: int(0..2) (representing constraint ((field_00001_00006=4) + (field_00001_00005=4)))
c Both direct and order encoding.
c Var 'aux975' order represents '0' with '14363'
c Var 'aux975' direct represents '0' with '14363'
c Var 'aux975' order represents '1' with '14364'
-14363 14364 0
c Var 'aux975' direct represents '1' with '14365'
14363 -14364 14365 0
-14365 14364 0
-14365 -14363 0
c Var 'aux975' direct represents '2' with '-14364'
14363 14365 -14364 0
c Encoding variable: aux976 with domain: int(0..3) (representing constraint ((field_00001_00003=4) + aux975))
c Both direct and order encoding.
c Var 'aux976' order represents '0' with '14366'
c Var 'aux976' direct represents '0' with '14366'
c Var 'aux976' order represents '1' with '14367'
-14366 14367 0
c Var 'aux976' direct represents '1' with '14368'
14366 -14367 14368 0
-14368 14367 0
-14368 -14366 0
c Var 'aux976' order represents '2' with '14369'
-14367 14369 0
c Var 'aux976' direct represents '2' with '14370'
14367 -14369 14370 0
-14370 14369 0
-14370 -14367 0
c Var 'aux976' direct represents '3' with '-14369'
14366 14368 14370 -14369 0
c Encoding variable: aux977 with domain: int(0..4) (representing constraint (aux972 + aux974))
c Both direct and order encoding.
c Var 'aux977' order represents '0' with '14371'
c Var 'aux977' direct represents '0' with '14371'
c Var 'aux977' order represents '1' with '14372'
-14371 14372 0
c Var 'aux977' direct represents '1' with '14373'
14371 -14372 14373 0
-14373 14372 0
-14373 -14371 0
c Var 'aux977' order represents '2' with '14374'
-14372 14374 0
c Var 'aux977' direct represents '2' with '14375'
14372 -14374 14375 0
-14375 14374 0
-14375 -14372 0
c Var 'aux977' order represents '3' with '14376'
-14374 14376 0
c Var 'aux977' direct represents '3' with '14377'
14374 -14376 14377 0
-14377 14376 0
-14377 -14374 0
c Var 'aux977' direct represents '4' with '-14376'
14371 14373 14375 14377 -14376 0
c Encoding variable: aux978 with domain: int(0..2) (representing constraint ((field_00001_00001=5) + (field_00001_00009=5)))
c Both direct and order encoding.
c Var 'aux978' order represents '0' with '14378'
c Var 'aux978' direct represents '0' with '14378'
c Var 'aux978' order represents '1' with '14379'
-14378 14379 0
c Var 'aux978' direct represents '1' with '14380'
14378 -14379 14380 0
-14380 14379 0
-14380 -14378 0
c Var 'aux978' direct represents '2' with '-14379'
14378 14380 -14379 0
c Encoding variable: aux979 with domain: int(0..2) (representing constraint ((field_00001_00008=5) + (field_00001_00002=5)))
c Both direct and order encoding.
c Var 'aux979' order represents '0' with '14381'
c Var 'aux979' direct represents '0' with '14381'
c Var 'aux979' order represents '1' with '14382'
-14381 14382 0
c Var 'aux979' direct represents '1' with '14383'
14381 -14382 14383 0
-14383 14382 0
-14383 -14381 0
c Var 'aux979' direct represents '2' with '-14382'
14381 14383 -14382 0
c Encoding variable: aux980 with domain: int(0..2) (representing constraint ((field_00001_00007=5) + (field_00001_00004=5)))
c Both direct and order encoding.
c Var 'aux980' order represents '0' with '14384'
c Var 'aux980' direct represents '0' with '14384'
c Var 'aux980' order represents '1' with '14385'
-14384 14385 0
c Var 'aux980' direct represents '1' with '14386'
14384 -14385 14386 0
-14386 14385 0
-14386 -14384 0
c Var 'aux980' direct represents '2' with '-14385'
14384 14386 -14385 0
c Encoding variable: aux981 with domain: int(0..2) (representing constraint ((field_00001_00006=5) + (field_00001_00005=5)))
c Both direct and order encoding.
c Var 'aux981' order represents '0' with '14387'
c Var 'aux981' direct represents '0' with '14387'
c Var 'aux981' order represents '1' with '14388'
-14387 14388 0
c Var 'aux981' direct represents '1' with '14389'
14387 -14388 14389 0
-14389 14388 0
-14389 -14387 0
c Var 'aux981' direct represents '2' with '-14388'
14387 14389 -14388 0
c Encoding variable: aux982 with domain: int(0..3) (representing constraint ((field_00001_00003=5) + aux981))
c Both direct and order encoding.
c Var 'aux982' order represents '0' with '14390'
c Var 'aux982' direct represents '0' with '14390'
c Var 'aux982' order represents '1' with '14391'
-14390 14391 0
c Var 'aux982' direct represents '1' with '14392'
14390 -14391 14392 0
-14392 14391 0
-14392 -14390 0
c Var 'aux982' order represents '2' with '14393'
-14391 14393 0
c Var 'aux982' direct represents '2' with '14394'
14391 -14393 14394 0
-14394 14393 0
-14394 -14391 0
c Var 'aux982' direct represents '3' with '-14393'
14390 14392 14394 -14393 0
c Encoding variable: aux983 with domain: int(0..4) (representing constraint (aux978 + aux980))
c Both direct and order encoding.
c Var 'aux983' order represents '0' with '14395'
c Var 'aux983' direct represents '0' with '14395'
c Var 'aux983' order represents '1' with '14396'
-14395 14396 0
c Var 'aux983' direct represents '1' with '14397'
14395 -14396 14397 0
-14397 14396 0
-14397 -14395 0
c Var 'aux983' order represents '2' with '14398'
-14396 14398 0
c Var 'aux983' direct represents '2' with '14399'
14396 -14398 14399 0
-14399 14398 0
-14399 -14396 0
c Var 'aux983' order represents '3' with '14400'
-14398 14400 0
c Var 'aux983' direct represents '3' with '14401'
14398 -14400 14401 0
-14401 14400 0
-14401 -14398 0
c Var 'aux983' direct represents '4' with '-14400'
14395 14397 14399 14401 -14400 0
c Encoding variable: aux984 with domain: int(0..2) (representing constraint ((field_00001_00001=6) + (field_00001_00009=6)))
c Both direct and order encoding.
c Var 'aux984' order represents '0' with '14402'
c Var 'aux984' direct represents '0' with '14402'
c Var 'aux984' order represents '1' with '14403'
-14402 14403 0
c Var 'aux984' direct represents '1' with '14404'
14402 -14403 14404 0
-14404 14403 0
-14404 -14402 0
c Var 'aux984' direct represents '2' with '-14403'
14402 14404 -14403 0
c Encoding variable: aux985 with domain: int(0..2) (representing constraint ((field_00001_00008=6) + (field_00001_00002=6)))
c Both direct and order encoding.
c Var 'aux985' order represents '0' with '14405'
c Var 'aux985' direct represents '0' with '14405'
c Var 'aux985' order represents '1' with '14406'
-14405 14406 0
c Var 'aux985' direct represents '1' with '14407'
14405 -14406 14407 0
-14407 14406 0
-14407 -14405 0
c Var 'aux985' direct represents '2' with '-14406'
14405 14407 -14406 0
c Encoding variable: aux986 with domain: int(0..2) (representing constraint ((field_00001_00007=6) + (field_00001_00004=6)))
c Both direct and order encoding.
c Var 'aux986' order represents '0' with '14408'
c Var 'aux986' direct represents '0' with '14408'
c Var 'aux986' order represents '1' with '14409'
-14408 14409 0
c Var 'aux986' direct represents '1' with '14410'
14408 -14409 14410 0
-14410 14409 0
-14410 -14408 0
c Var 'aux986' direct represents '2' with '-14409'
14408 14410 -14409 0
c Encoding variable: aux987 with domain: int(0..2) (representing constraint ((field_00001_00006=6) + (field_00001_00005=6)))
c Both direct and order encoding.
c Var 'aux987' order represents '0' with '14411'
c Var 'aux987' direct represents '0' with '14411'
c Var 'aux987' order represents '1' with '14412'
-14411 14412 0
c Var 'aux987' direct represents '1' with '14413'
14411 -14412 14413 0
-14413 14412 0
-14413 -14411 0
c Var 'aux987' direct represents '2' with '-14412'
14411 14413 -14412 0
c Encoding variable: aux988 with domain: int(0..3) (representing constraint ((field_00001_00003=6) + aux987))
c Both direct and order encoding.
c Var 'aux988' order represents '0' with '14414'
c Var 'aux988' direct represents '0' with '14414'
c Var 'aux988' order represents '1' with '14415'
-14414 14415 0
c Var 'aux988' direct represents '1' with '14416'
14414 -14415 14416 0
-14416 14415 0
-14416 -14414 0
c Var 'aux988' order represents '2' with '14417'
-14415 14417 0
c Var 'aux988' direct represents '2' with '14418'
14415 -14417 14418 0
-14418 14417 0
-14418 -14415 0
c Var 'aux988' direct represents '3' with '-14417'
14414 14416 14418 -14417 0
c Encoding variable: aux989 with domain: int(0..4) (representing constraint (aux984 + aux986))
c Both direct and order encoding.
c Var 'aux989' order represents '0' with '14419'
c Var 'aux989' direct represents '0' with '14419'
c Var 'aux989' order represents '1' with '14420'
-14419 14420 0
c Var 'aux989' direct represents '1' with '14421'
14419 -14420 14421 0
-14421 14420 0
-14421 -14419 0
c Var 'aux989' order represents '2' with '14422'
-14420 14422 0
c Var 'aux989' direct represents '2' with '14423'
14420 -14422 14423 0
-14423 14422 0
-14423 -14420 0
c Var 'aux989' order represents '3' with '14424'
-14422 14424 0
c Var 'aux989' direct represents '3' with '14425'
14422 -14424 14425 0
-14425 14424 0
-14425 -14422 0
c Var 'aux989' direct represents '4' with '-14424'
14419 14421 14423 14425 -14424 0
c Encoding variable: aux990 with domain: int(0..2) (representing constraint ((field_00001_00001=7) + (field_00001_00009=7)))
c Both direct and order encoding.
c Var 'aux990' order represents '0' with '14426'
c Var 'aux990' direct represents '0' with '14426'
c Var 'aux990' order represents '1' with '14427'
-14426 14427 0
c Var 'aux990' direct represents '1' with '14428'
14426 -14427 14428 0
-14428 14427 0
-14428 -14426 0
c Var 'aux990' direct represents '2' with '-14427'
14426 14428 -14427 0
c Encoding variable: aux991 with domain: int(0..2) (representing constraint ((field_00001_00008=7) + (field_00001_00002=7)))
c Both direct and order encoding.
c Var 'aux991' order represents '0' with '14429'
c Var 'aux991' direct represents '0' with '14429'
c Var 'aux991' order represents '1' with '14430'
-14429 14430 0
c Var 'aux991' direct represents '1' with '14431'
14429 -14430 14431 0
-14431 14430 0
-14431 -14429 0
c Var 'aux991' direct represents '2' with '-14430'
14429 14431 -14430 0
c Encoding variable: aux992 with domain: int(0..2) (representing constraint ((field_00001_00007=7) + (field_00001_00004=7)))
c Both direct and order encoding.
c Var 'aux992' order represents '0' with '14432'
c Var 'aux992' direct represents '0' with '14432'
c Var 'aux992' order represents '1' with '14433'
-14432 14433 0
c Var 'aux992' direct represents '1' with '14434'
14432 -14433 14434 0
-14434 14433 0
-14434 -14432 0
c Var 'aux992' direct represents '2' with '-14433'
14432 14434 -14433 0
c Encoding variable: aux993 with domain: int(0..2) (representing constraint ((field_00001_00006=7) + (field_00001_00005=7)))
c Both direct and order encoding.
c Var 'aux993' order represents '0' with '14435'
c Var 'aux993' direct represents '0' with '14435'
c Var 'aux993' order represents '1' with '14436'
-14435 14436 0
c Var 'aux993' direct represents '1' with '14437'
14435 -14436 14437 0
-14437 14436 0
-14437 -14435 0
c Var 'aux993' direct represents '2' with '-14436'
14435 14437 -14436 0
c Encoding variable: aux994 with domain: int(0..3) (representing constraint ((field_00001_00003=7) + aux993))
c Both direct and order encoding.
c Var 'aux994' order represents '0' with '14438'
c Var 'aux994' direct represents '0' with '14438'
c Var 'aux994' order represents '1' with '14439'
-14438 14439 0
c Var 'aux994' direct represents '1' with '14440'
14438 -14439 14440 0
-14440 14439 0
-14440 -14438 0
c Var 'aux994' order represents '2' with '14441'
-14439 14441 0
c Var 'aux994' direct represents '2' with '14442'
14439 -14441 14442 0
-14442 14441 0
-14442 -14439 0
c Var 'aux994' direct represents '3' with '-14441'
14438 14440 14442 -14441 0
c Encoding variable: aux995 with domain: int(0..4) (representing constraint (aux990 + aux992))
c Both direct and order encoding.
c Var 'aux995' order represents '0' with '14443'
c Var 'aux995' direct represents '0' with '14443'
c Var 'aux995' order represents '1' with '14444'
-14443 14444 0
c Var 'aux995' direct represents '1' with '14445'
14443 -14444 14445 0
-14445 14444 0
-14445 -14443 0
c Var 'aux995' order represents '2' with '14446'
-14444 14446 0
c Var 'aux995' direct represents '2' with '14447'
14444 -14446 14447 0
-14447 14446 0
-14447 -14444 0
c Var 'aux995' order represents '3' with '14448'
-14446 14448 0
c Var 'aux995' direct represents '3' with '14449'
14446 -14448 14449 0
-14449 14448 0
-14449 -14446 0
c Var 'aux995' direct represents '4' with '-14448'
14443 14445 14447 14449 -14448 0
c Encoding variable: aux996 with domain: int(0..2) (representing constraint ((field_00001_00001=8) + (field_00001_00009=8)))
c Both direct and order encoding.
c Var 'aux996' order represents '0' with '14450'
c Var 'aux996' direct represents '0' with '14450'
c Var 'aux996' order represents '1' with '14451'
-14450 14451 0
c Var 'aux996' direct represents '1' with '14452'
14450 -14451 14452 0
-14452 14451 0
-14452 -14450 0
c Var 'aux996' direct represents '2' with '-14451'
14450 14452 -14451 0
c Encoding variable: aux997 with domain: int(0..2) (representing constraint ((field_00001_00008=8) + (field_00001_00002=8)))
c Both direct and order encoding.
c Var 'aux997' order represents '0' with '14453'
c Var 'aux997' direct represents '0' with '14453'
c Var 'aux997' order represents '1' with '14454'
-14453 14454 0
c Var 'aux997' direct represents '1' with '14455'
14453 -14454 14455 0
-14455 14454 0
-14455 -14453 0
c Var 'aux997' direct represents '2' with '-14454'
14453 14455 -14454 0
c Encoding variable: aux998 with domain: int(0..2) (representing constraint ((field_00001_00007=8) + (field_00001_00004=8)))
c Both direct and order encoding.
c Var 'aux998' order represents '0' with '14456'
c Var 'aux998' direct represents '0' with '14456'
c Var 'aux998' order represents '1' with '14457'
-14456 14457 0
c Var 'aux998' direct represents '1' with '14458'
14456 -14457 14458 0
-14458 14457 0
-14458 -14456 0
c Var 'aux998' direct represents '2' with '-14457'
14456 14458 -14457 0
c Encoding variable: aux999 with domain: int(0..2) (representing constraint ((field_00001_00006=8) + (field_00001_00005=8)))
c Both direct and order encoding.
c Var 'aux999' order represents '0' with '14459'
c Var 'aux999' direct represents '0' with '14459'
c Var 'aux999' order represents '1' with '14460'
-14459 14460 0
c Var 'aux999' direct represents '1' with '14461'
14459 -14460 14461 0
-14461 14460 0
-14461 -14459 0
c Var 'aux999' direct represents '2' with '-14460'
14459 14461 -14460 0
c Encoding variable: aux1000 with domain: int(0..3) (representing constraint ((field_00001_00003=8) + aux999))
c Both direct and order encoding.
c Var 'aux1000' order represents '0' with '14462'
c Var 'aux1000' direct represents '0' with '14462'
c Var 'aux1000' order represents '1' with '14463'
-14462 14463 0
c Var 'aux1000' direct represents '1' with '14464'
14462 -14463 14464 0
-14464 14463 0
-14464 -14462 0
c Var 'aux1000' order represents '2' with '14465'
-14463 14465 0
c Var 'aux1000' direct represents '2' with '14466'
14463 -14465 14466 0
-14466 14465 0
-14466 -14463 0
c Var 'aux1000' direct represents '3' with '-14465'
14462 14464 14466 -14465 0
c Encoding variable: aux1001 with domain: int(0..4) (representing constraint (aux996 + aux998))
c Both direct and order encoding.
c Var 'aux1001' order represents '0' with '14467'
c Var 'aux1001' direct represents '0' with '14467'
c Var 'aux1001' order represents '1' with '14468'
-14467 14468 0
c Var 'aux1001' direct represents '1' with '14469'
14467 -14468 14469 0
-14469 14468 0
-14469 -14467 0
c Var 'aux1001' order represents '2' with '14470'
-14468 14470 0
c Var 'aux1001' direct represents '2' with '14471'
14468 -14470 14471 0
-14471 14470 0
-14471 -14468 0
c Var 'aux1001' order represents '3' with '14472'
-14470 14472 0
c Var 'aux1001' direct represents '3' with '14473'
14470 -14472 14473 0
-14473 14472 0
-14473 -14470 0
c Var 'aux1001' direct represents '4' with '-14472'
14467 14469 14471 14473 -14472 0
c Encoding variable: aux1002 with domain: int(0..2) (representing constraint ((field_00001_00001=9) + (field_00001_00009=9)))
c Both direct and order encoding.
c Var 'aux1002' order represents '0' with '14474'
c Var 'aux1002' direct represents '0' with '14474'
c Var 'aux1002' order represents '1' with '14475'
-14474 14475 0
c Var 'aux1002' direct represents '1' with '14476'
14474 -14475 14476 0
-14476 14475 0
-14476 -14474 0
c Var 'aux1002' direct represents '2' with '-14475'
14474 14476 -14475 0
c Encoding variable: aux1003 with domain: int(0..2) (representing constraint ((field_00001_00008=9) + (field_00001_00002=9)))
c Both direct and order encoding.
c Var 'aux1003' order represents '0' with '14477'
c Var 'aux1003' direct represents '0' with '14477'
c Var 'aux1003' order represents '1' with '14478'
-14477 14478 0
c Var 'aux1003' direct represents '1' with '14479'
14477 -14478 14479 0
-14479 14478 0
-14479 -14477 0
c Var 'aux1003' direct represents '2' with '-14478'
14477 14479 -14478 0
c Encoding variable: aux1004 with domain: int(0..2) (representing constraint ((field_00001_00007=9) + (field_00001_00004=9)))
c Both direct and order encoding.
c Var 'aux1004' order represents '0' with '14480'
c Var 'aux1004' direct represents '0' with '14480'
c Var 'aux1004' order represents '1' with '14481'
-14480 14481 0
c Var 'aux1004' direct represents '1' with '14482'
14480 -14481 14482 0
-14482 14481 0
-14482 -14480 0
c Var 'aux1004' direct represents '2' with '-14481'
14480 14482 -14481 0
c Encoding variable: aux1005 with domain: int(0..2) (representing constraint ((field_00001_00006=9) + (field_00001_00005=9)))
c Both direct and order encoding.
c Var 'aux1005' order represents '0' with '14483'
c Var 'aux1005' direct represents '0' with '14483'
c Var 'aux1005' order represents '1' with '14484'
-14483 14484 0
c Var 'aux1005' direct represents '1' with '14485'
14483 -14484 14485 0
-14485 14484 0
-14485 -14483 0
c Var 'aux1005' direct represents '2' with '-14484'
14483 14485 -14484 0
c Encoding variable: aux1006 with domain: int(0..3) (representing constraint ((field_00001_00003=9) + aux1005))
c Both direct and order encoding.
c Var 'aux1006' order represents '0' with '14486'
c Var 'aux1006' direct represents '0' with '14486'
c Var 'aux1006' order represents '1' with '14487'
-14486 14487 0
c Var 'aux1006' direct represents '1' with '14488'
14486 -14487 14488 0
-14488 14487 0
-14488 -14486 0
c Var 'aux1006' order represents '2' with '14489'
-14487 14489 0
c Var 'aux1006' direct represents '2' with '14490'
14487 -14489 14490 0
-14490 14489 0
-14490 -14487 0
c Var 'aux1006' direct represents '3' with '-14489'
14486 14488 14490 -14489 0
c Encoding variable: aux1007 with domain: int(0..4) (representing constraint (aux1002 + aux1004))
c Both direct and order encoding.
c Var 'aux1007' order represents '0' with '14491'
c Var 'aux1007' direct represents '0' with '14491'
c Var 'aux1007' order represents '1' with '14492'
-14491 14492 0
c Var 'aux1007' direct represents '1' with '14493'
14491 -14492 14493 0
-14493 14492 0
-14493 -14491 0
c Var 'aux1007' order represents '2' with '14494'
-14492 14494 0
c Var 'aux1007' direct represents '2' with '14495'
14492 -14494 14495 0
-14495 14494 0
-14495 -14492 0
c Var 'aux1007' order represents '3' with '14496'
-14494 14496 0
c Var 'aux1007' direct represents '3' with '14497'
14494 -14496 14497 0
-14497 14496 0
-14497 -14494 0
c Var 'aux1007' direct represents '4' with '-14496'
14491 14493 14495 14497 -14496 0
c Encoding variable: aux1008 with domain: int(0..2) (representing constraint ((field_00002_00001=1) + (field_00002_00009=1)))
c Both direct and order encoding.
c Var 'aux1008' order represents '0' with '14498'
c Var 'aux1008' direct represents '0' with '14498'
c Var 'aux1008' order represents '1' with '14499'
-14498 14499 0
c Var 'aux1008' direct represents '1' with '14500'
14498 -14499 14500 0
-14500 14499 0
-14500 -14498 0
c Var 'aux1008' direct represents '2' with '-14499'
14498 14500 -14499 0
c Encoding variable: aux1009 with domain: int(0..2) (representing constraint ((field_00002_00008=1) + (field_00002_00002=1)))
c Both direct and order encoding.
c Var 'aux1009' order represents '0' with '14501'
c Var 'aux1009' direct represents '0' with '14501'
c Var 'aux1009' order represents '1' with '14502'
-14501 14502 0
c Var 'aux1009' direct represents '1' with '14503'
14501 -14502 14503 0
-14503 14502 0
-14503 -14501 0
c Var 'aux1009' direct represents '2' with '-14502'
14501 14503 -14502 0
c Encoding variable: aux1010 with domain: int(0..2) (representing constraint ((field_00002_00007=1) + (field_00002_00004=1)))
c Both direct and order encoding.
c Var 'aux1010' order represents '0' with '14504'
c Var 'aux1010' direct represents '0' with '14504'
c Var 'aux1010' order represents '1' with '14505'
-14504 14505 0
c Var 'aux1010' direct represents '1' with '14506'
14504 -14505 14506 0
-14506 14505 0
-14506 -14504 0
c Var 'aux1010' direct represents '2' with '-14505'
14504 14506 -14505 0
c Encoding variable: aux1011 with domain: int(0..2) (representing constraint ((field_00002_00006=1) + (field_00002_00005=1)))
c Both direct and order encoding.
c Var 'aux1011' order represents '0' with '14507'
c Var 'aux1011' direct represents '0' with '14507'
c Var 'aux1011' order represents '1' with '14508'
-14507 14508 0
c Var 'aux1011' direct represents '1' with '14509'
14507 -14508 14509 0
-14509 14508 0
-14509 -14507 0
c Var 'aux1011' direct represents '2' with '-14508'
14507 14509 -14508 0
c Encoding variable: aux1012 with domain: int(0..3) (representing constraint ((field_00002_00003=1) + aux1011))
c Both direct and order encoding.
c Var 'aux1012' order represents '0' with '14510'
c Var 'aux1012' direct represents '0' with '14510'
c Var 'aux1012' order represents '1' with '14511'
-14510 14511 0
c Var 'aux1012' direct represents '1' with '14512'
14510 -14511 14512 0
-14512 14511 0
-14512 -14510 0
c Var 'aux1012' order represents '2' with '14513'
-14511 14513 0
c Var 'aux1012' direct represents '2' with '14514'
14511 -14513 14514 0
-14514 14513 0
-14514 -14511 0
c Var 'aux1012' direct represents '3' with '-14513'
14510 14512 14514 -14513 0
c Encoding variable: aux1013 with domain: int(0..4) (representing constraint (aux1008 + aux1010))
c Both direct and order encoding.
c Var 'aux1013' order represents '0' with '14515'
c Var 'aux1013' direct represents '0' with '14515'
c Var 'aux1013' order represents '1' with '14516'
-14515 14516 0
c Var 'aux1013' direct represents '1' with '14517'
14515 -14516 14517 0
-14517 14516 0
-14517 -14515 0
c Var 'aux1013' order represents '2' with '14518'
-14516 14518 0
c Var 'aux1013' direct represents '2' with '14519'
14516 -14518 14519 0
-14519 14518 0
-14519 -14516 0
c Var 'aux1013' order represents '3' with '14520'
-14518 14520 0
c Var 'aux1013' direct represents '3' with '14521'
14518 -14520 14521 0
-14521 14520 0
-14521 -14518 0
c Var 'aux1013' direct represents '4' with '-14520'
14515 14517 14519 14521 -14520 0
c Encoding variable: aux1014 with domain: int(0..2) (representing constraint ((field_00002_00001=2) + (field_00002_00009=2)))
c Both direct and order encoding.
c Var 'aux1014' order represents '0' with '14522'
c Var 'aux1014' direct represents '0' with '14522'
c Var 'aux1014' order represents '1' with '14523'
-14522 14523 0
c Var 'aux1014' direct represents '1' with '14524'
14522 -14523 14524 0
-14524 14523 0
-14524 -14522 0
c Var 'aux1014' direct represents '2' with '-14523'
14522 14524 -14523 0
c Encoding variable: aux1015 with domain: int(0..2) (representing constraint ((field_00002_00008=2) + (field_00002_00002=2)))
c Both direct and order encoding.
c Var 'aux1015' order represents '0' with '14525'
c Var 'aux1015' direct represents '0' with '14525'
c Var 'aux1015' order represents '1' with '14526'
-14525 14526 0
c Var 'aux1015' direct represents '1' with '14527'
14525 -14526 14527 0
-14527 14526 0
-14527 -14525 0
c Var 'aux1015' direct represents '2' with '-14526'
14525 14527 -14526 0
c Encoding variable: aux1016 with domain: int(0..2) (representing constraint ((field_00002_00007=2) + (field_00002_00004=2)))
c Both direct and order encoding.
c Var 'aux1016' order represents '0' with '14528'
c Var 'aux1016' direct represents '0' with '14528'
c Var 'aux1016' order represents '1' with '14529'
-14528 14529 0
c Var 'aux1016' direct represents '1' with '14530'
14528 -14529 14530 0
-14530 14529 0
-14530 -14528 0
c Var 'aux1016' direct represents '2' with '-14529'
14528 14530 -14529 0
c Encoding variable: aux1017 with domain: int(0..2) (representing constraint ((field_00002_00006=2) + (field_00002_00005=2)))
c Both direct and order encoding.
c Var 'aux1017' order represents '0' with '14531'
c Var 'aux1017' direct represents '0' with '14531'
c Var 'aux1017' order represents '1' with '14532'
-14531 14532 0
c Var 'aux1017' direct represents '1' with '14533'
14531 -14532 14533 0
-14533 14532 0
-14533 -14531 0
c Var 'aux1017' direct represents '2' with '-14532'
14531 14533 -14532 0
c Encoding variable: aux1018 with domain: int(0..3) (representing constraint ((field_00002_00003=2) + aux1017))
c Both direct and order encoding.
c Var 'aux1018' order represents '0' with '14534'
c Var 'aux1018' direct represents '0' with '14534'
c Var 'aux1018' order represents '1' with '14535'
-14534 14535 0
c Var 'aux1018' direct represents '1' with '14536'
14534 -14535 14536 0
-14536 14535 0
-14536 -14534 0
c Var 'aux1018' order represents '2' with '14537'
-14535 14537 0
c Var 'aux1018' direct represents '2' with '14538'
14535 -14537 14538 0
-14538 14537 0
-14538 -14535 0
c Var 'aux1018' direct represents '3' with '-14537'
14534 14536 14538 -14537 0
c Encoding variable: aux1019 with domain: int(0..4) (representing constraint (aux1014 + aux1016))
c Both direct and order encoding.
c Var 'aux1019' order represents '0' with '14539'
c Var 'aux1019' direct represents '0' with '14539'
c Var 'aux1019' order represents '1' with '14540'
-14539 14540 0
c Var 'aux1019' direct represents '1' with '14541'
14539 -14540 14541 0
-14541 14540 0
-14541 -14539 0
c Var 'aux1019' order represents '2' with '14542'
-14540 14542 0
c Var 'aux1019' direct represents '2' with '14543'
14540 -14542 14543 0
-14543 14542 0
-14543 -14540 0
c Var 'aux1019' order represents '3' with '14544'
-14542 14544 0
c Var 'aux1019' direct represents '3' with '14545'
14542 -14544 14545 0
-14545 14544 0
-14545 -14542 0
c Var 'aux1019' direct represents '4' with '-14544'
14539 14541 14543 14545 -14544 0
c Encoding variable: aux1020 with domain: int(0..2) (representing constraint ((field_00002_00001=3) + (field_00002_00009=3)))
c Both direct and order encoding.
c Var 'aux1020' order represents '0' with '14546'
c Var 'aux1020' direct represents '0' with '14546'
c Var 'aux1020' order represents '1' with '14547'
-14546 14547 0
c Var 'aux1020' direct represents '1' with '14548'
14546 -14547 14548 0
-14548 14547 0
-14548 -14546 0
c Var 'aux1020' direct represents '2' with '-14547'
14546 14548 -14547 0
c Encoding variable: aux1021 with domain: int(0..2) (representing constraint ((field_00002_00008=3) + (field_00002_00002=3)))
c Both direct and order encoding.
c Var 'aux1021' order represents '0' with '14549'
c Var 'aux1021' direct represents '0' with '14549'
c Var 'aux1021' order represents '1' with '14550'
-14549 14550 0
c Var 'aux1021' direct represents '1' with '14551'
14549 -14550 14551 0
-14551 14550 0
-14551 -14549 0
c Var 'aux1021' direct represents '2' with '-14550'
14549 14551 -14550 0
c Encoding variable: aux1022 with domain: int(0..2) (representing constraint ((field_00002_00007=3) + (field_00002_00004=3)))
c Both direct and order encoding.
c Var 'aux1022' order represents '0' with '14552'
c Var 'aux1022' direct represents '0' with '14552'
c Var 'aux1022' order represents '1' with '14553'
-14552 14553 0
c Var 'aux1022' direct represents '1' with '14554'
14552 -14553 14554 0
-14554 14553 0
-14554 -14552 0
c Var 'aux1022' direct represents '2' with '-14553'
14552 14554 -14553 0
c Encoding variable: aux1023 with domain: int(0..2) (representing constraint ((field_00002_00006=3) + (field_00002_00005=3)))
c Both direct and order encoding.
c Var 'aux1023' order represents '0' with '14555'
c Var 'aux1023' direct represents '0' with '14555'
c Var 'aux1023' order represents '1' with '14556'
-14555 14556 0
c Var 'aux1023' direct represents '1' with '14557'
14555 -14556 14557 0
-14557 14556 0
-14557 -14555 0
c Var 'aux1023' direct represents '2' with '-14556'
14555 14557 -14556 0
c Encoding variable: aux1024 with domain: int(0..3) (representing constraint ((field_00002_00003=3) + aux1023))
c Both direct and order encoding.
c Var 'aux1024' order represents '0' with '14558'
c Var 'aux1024' direct represents '0' with '14558'
c Var 'aux1024' order represents '1' with '14559'
-14558 14559 0
c Var 'aux1024' direct represents '1' with '14560'
14558 -14559 14560 0
-14560 14559 0
-14560 -14558 0
c Var 'aux1024' order represents '2' with '14561'
-14559 14561 0
c Var 'aux1024' direct represents '2' with '14562'
14559 -14561 14562 0
-14562 14561 0
-14562 -14559 0
c Var 'aux1024' direct represents '3' with '-14561'
14558 14560 14562 -14561 0
c Encoding variable: aux1025 with domain: int(0..4) (representing constraint (aux1020 + aux1022))
c Both direct and order encoding.
c Var 'aux1025' order represents '0' with '14563'
c Var 'aux1025' direct represents '0' with '14563'
c Var 'aux1025' order represents '1' with '14564'
-14563 14564 0
c Var 'aux1025' direct represents '1' with '14565'
14563 -14564 14565 0
-14565 14564 0
-14565 -14563 0
c Var 'aux1025' order represents '2' with '14566'
-14564 14566 0
c Var 'aux1025' direct represents '2' with '14567'
14564 -14566 14567 0
-14567 14566 0
-14567 -14564 0
c Var 'aux1025' order represents '3' with '14568'
-14566 14568 0
c Var 'aux1025' direct represents '3' with '14569'
14566 -14568 14569 0
-14569 14568 0
-14569 -14566 0
c Var 'aux1025' direct represents '4' with '-14568'
14563 14565 14567 14569 -14568 0
c Encoding variable: aux1026 with domain: int(0..2) (representing constraint ((field_00002_00001=4) + (field_00002_00009=4)))
c Both direct and order encoding.
c Var 'aux1026' order represents '0' with '14570'
c Var 'aux1026' direct represents '0' with '14570'
c Var 'aux1026' order represents '1' with '14571'
-14570 14571 0
c Var 'aux1026' direct represents '1' with '14572'
14570 -14571 14572 0
-14572 14571 0
-14572 -14570 0
c Var 'aux1026' direct represents '2' with '-14571'
14570 14572 -14571 0
c Encoding variable: aux1027 with domain: int(0..2) (representing constraint ((field_00002_00008=4) + (field_00002_00002=4)))
c Both direct and order encoding.
c Var 'aux1027' order represents '0' with '14573'
c Var 'aux1027' direct represents '0' with '14573'
c Var 'aux1027' order represents '1' with '14574'
-14573 14574 0
c Var 'aux1027' direct represents '1' with '14575'
14573 -14574 14575 0
-14575 14574 0
-14575 -14573 0
c Var 'aux1027' direct represents '2' with '-14574'
14573 14575 -14574 0
c Encoding variable: aux1028 with domain: int(0..2) (representing constraint ((field_00002_00007=4) + (field_00002_00004=4)))
c Both direct and order encoding.
c Var 'aux1028' order represents '0' with '14576'
c Var 'aux1028' direct represents '0' with '14576'
c Var 'aux1028' order represents '1' with '14577'
-14576 14577 0
c Var 'aux1028' direct represents '1' with '14578'
14576 -14577 14578 0
-14578 14577 0
-14578 -14576 0
c Var 'aux1028' direct represents '2' with '-14577'
14576 14578 -14577 0
c Encoding variable: aux1029 with domain: int(0..2) (representing constraint ((field_00002_00006=4) + (field_00002_00005=4)))
c Both direct and order encoding.
c Var 'aux1029' order represents '0' with '14579'
c Var 'aux1029' direct represents '0' with '14579'
c Var 'aux1029' order represents '1' with '14580'
-14579 14580 0
c Var 'aux1029' direct represents '1' with '14581'
14579 -14580 14581 0
-14581 14580 0
-14581 -14579 0
c Var 'aux1029' direct represents '2' with '-14580'
14579 14581 -14580 0
c Encoding variable: aux1030 with domain: int(0..3) (representing constraint ((field_00002_00003=4) + aux1029))
c Both direct and order encoding.
c Var 'aux1030' order represents '0' with '14582'
c Var 'aux1030' direct represents '0' with '14582'
c Var 'aux1030' order represents '1' with '14583'
-14582 14583 0
c Var 'aux1030' direct represents '1' with '14584'
14582 -14583 14584 0
-14584 14583 0
-14584 -14582 0
c Var 'aux1030' order represents '2' with '14585'
-14583 14585 0
c Var 'aux1030' direct represents '2' with '14586'
14583 -14585 14586 0
-14586 14585 0
-14586 -14583 0
c Var 'aux1030' direct represents '3' with '-14585'
14582 14584 14586 -14585 0
c Encoding variable: aux1031 with domain: int(0..4) (representing constraint (aux1026 + aux1028))
c Both direct and order encoding.
c Var 'aux1031' order represents '0' with '14587'
c Var 'aux1031' direct represents '0' with '14587'
c Var 'aux1031' order represents '1' with '14588'
-14587 14588 0
c Var 'aux1031' direct represents '1' with '14589'
14587 -14588 14589 0
-14589 14588 0
-14589 -14587 0
c Var 'aux1031' order represents '2' with '14590'
-14588 14590 0
c Var 'aux1031' direct represents '2' with '14591'
14588 -14590 14591 0
-14591 14590 0
-14591 -14588 0
c Var 'aux1031' order represents '3' with '14592'
-14590 14592 0
c Var 'aux1031' direct represents '3' with '14593'
14590 -14592 14593 0
-14593 14592 0
-14593 -14590 0
c Var 'aux1031' direct represents '4' with '-14592'
14587 14589 14591 14593 -14592 0
c Encoding variable: aux1032 with domain: int(0..2) (representing constraint ((field_00002_00001=5) + (field_00002_00009=5)))
c Both direct and order encoding.
c Var 'aux1032' order represents '0' with '14594'
c Var 'aux1032' direct represents '0' with '14594'
c Var 'aux1032' order represents '1' with '14595'
-14594 14595 0
c Var 'aux1032' direct represents '1' with '14596'
14594 -14595 14596 0
-14596 14595 0
-14596 -14594 0
c Var 'aux1032' direct represents '2' with '-14595'
14594 14596 -14595 0
c Encoding variable: aux1033 with domain: int(0..2) (representing constraint ((field_00002_00008=5) + (field_00002_00002=5)))
c Both direct and order encoding.
c Var 'aux1033' order represents '0' with '14597'
c Var 'aux1033' direct represents '0' with '14597'
c Var 'aux1033' order represents '1' with '14598'
-14597 14598 0
c Var 'aux1033' direct represents '1' with '14599'
14597 -14598 14599 0
-14599 14598 0
-14599 -14597 0
c Var 'aux1033' direct represents '2' with '-14598'
14597 14599 -14598 0
c Encoding variable: aux1034 with domain: int(0..2) (representing constraint ((field_00002_00007=5) + (field_00002_00004=5)))
c Both direct and order encoding.
c Var 'aux1034' order represents '0' with '14600'
c Var 'aux1034' direct represents '0' with '14600'
c Var 'aux1034' order represents '1' with '14601'
-14600 14601 0
c Var 'aux1034' direct represents '1' with '14602'
14600 -14601 14602 0
-14602 14601 0
-14602 -14600 0
c Var 'aux1034' direct represents '2' with '-14601'
14600 14602 -14601 0
c Encoding variable: aux1035 with domain: int(0..2) (representing constraint ((field_00002_00006=5) + (field_00002_00005=5)))
c Both direct and order encoding.
c Var 'aux1035' order represents '0' with '14603'
c Var 'aux1035' direct represents '0' with '14603'
c Var 'aux1035' order represents '1' with '14604'
-14603 14604 0
c Var 'aux1035' direct represents '1' with '14605'
14603 -14604 14605 0
-14605 14604 0
-14605 -14603 0
c Var 'aux1035' direct represents '2' with '-14604'
14603 14605 -14604 0
c Encoding variable: aux1036 with domain: int(0..3) (representing constraint ((field_00002_00003=5) + aux1035))
c Both direct and order encoding.
c Var 'aux1036' order represents '0' with '14606'
c Var 'aux1036' direct represents '0' with '14606'
c Var 'aux1036' order represents '1' with '14607'
-14606 14607 0
c Var 'aux1036' direct represents '1' with '14608'
14606 -14607 14608 0
-14608 14607 0
-14608 -14606 0
c Var 'aux1036' order represents '2' with '14609'
-14607 14609 0
c Var 'aux1036' direct represents '2' with '14610'
14607 -14609 14610 0
-14610 14609 0
-14610 -14607 0
c Var 'aux1036' direct represents '3' with '-14609'
14606 14608 14610 -14609 0
c Encoding variable: aux1037 with domain: int(0..4) (representing constraint (aux1032 + aux1034))
c Both direct and order encoding.
c Var 'aux1037' order represents '0' with '14611'
c Var 'aux1037' direct represents '0' with '14611'
c Var 'aux1037' order represents '1' with '14612'
-14611 14612 0
c Var 'aux1037' direct represents '1' with '14613'
14611 -14612 14613 0
-14613 14612 0
-14613 -14611 0
c Var 'aux1037' order represents '2' with '14614'
-14612 14614 0
c Var 'aux1037' direct represents '2' with '14615'
14612 -14614 14615 0
-14615 14614 0
-14615 -14612 0
c Var 'aux1037' order represents '3' with '14616'
-14614 14616 0
c Var 'aux1037' direct represents '3' with '14617'
14614 -14616 14617 0
-14617 14616 0
-14617 -14614 0
c Var 'aux1037' direct represents '4' with '-14616'
14611 14613 14615 14617 -14616 0
c Encoding variable: aux1038 with domain: int(0..2) (representing constraint ((field_00002_00001=6) + (field_00002_00009=6)))
c Both direct and order encoding.
c Var 'aux1038' order represents '0' with '14618'
c Var 'aux1038' direct represents '0' with '14618'
c Var 'aux1038' order represents '1' with '14619'
-14618 14619 0
c Var 'aux1038' direct represents '1' with '14620'
14618 -14619 14620 0
-14620 14619 0
-14620 -14618 0
c Var 'aux1038' direct represents '2' with '-14619'
14618 14620 -14619 0
c Encoding variable: aux1039 with domain: int(0..2) (representing constraint ((field_00002_00008=6) + (field_00002_00002=6)))
c Both direct and order encoding.
c Var 'aux1039' order represents '0' with '14621'
c Var 'aux1039' direct represents '0' with '14621'
c Var 'aux1039' order represents '1' with '14622'
-14621 14622 0
c Var 'aux1039' direct represents '1' with '14623'
14621 -14622 14623 0
-14623 14622 0
-14623 -14621 0
c Var 'aux1039' direct represents '2' with '-14622'
14621 14623 -14622 0
c Encoding variable: aux1040 with domain: int(0..2) (representing constraint ((field_00002_00007=6) + (field_00002_00004=6)))
c Both direct and order encoding.
c Var 'aux1040' order represents '0' with '14624'
c Var 'aux1040' direct represents '0' with '14624'
c Var 'aux1040' order represents '1' with '14625'
-14624 14625 0
c Var 'aux1040' direct represents '1' with '14626'
14624 -14625 14626 0
-14626 14625 0
-14626 -14624 0
c Var 'aux1040' direct represents '2' with '-14625'
14624 14626 -14625 0
c Encoding variable: aux1041 with domain: int(0..2) (representing constraint ((field_00002_00006=6) + (field_00002_00005=6)))
c Both direct and order encoding.
c Var 'aux1041' order represents '0' with '14627'
c Var 'aux1041' direct represents '0' with '14627'
c Var 'aux1041' order represents '1' with '14628'
-14627 14628 0
c Var 'aux1041' direct represents '1' with '14629'
14627 -14628 14629 0
-14629 14628 0
-14629 -14627 0
c Var 'aux1041' direct represents '2' with '-14628'
14627 14629 -14628 0
c Encoding variable: aux1042 with domain: int(0..3) (representing constraint ((field_00002_00003=6) + aux1041))
c Both direct and order encoding.
c Var 'aux1042' order represents '0' with '14630'
c Var 'aux1042' direct represents '0' with '14630'
c Var 'aux1042' order represents '1' with '14631'
-14630 14631 0
c Var 'aux1042' direct represents '1' with '14632'
14630 -14631 14632 0
-14632 14631 0
-14632 -14630 0
c Var 'aux1042' order represents '2' with '14633'
-14631 14633 0
c Var 'aux1042' direct represents '2' with '14634'
14631 -14633 14634 0
-14634 14633 0
-14634 -14631 0
c Var 'aux1042' direct represents '3' with '-14633'
14630 14632 14634 -14633 0
c Encoding variable: aux1043 with domain: int(0..4) (representing constraint (aux1038 + aux1040))
c Both direct and order encoding.
c Var 'aux1043' order represents '0' with '14635'
c Var 'aux1043' direct represents '0' with '14635'
c Var 'aux1043' order represents '1' with '14636'
-14635 14636 0
c Var 'aux1043' direct represents '1' with '14637'
14635 -14636 14637 0
-14637 14636 0
-14637 -14635 0
c Var 'aux1043' order represents '2' with '14638'
-14636 14638 0
c Var 'aux1043' direct represents '2' with '14639'
14636 -14638 14639 0
-14639 14638 0
-14639 -14636 0
c Var 'aux1043' order represents '3' with '14640'
-14638 14640 0
c Var 'aux1043' direct represents '3' with '14641'
14638 -14640 14641 0
-14641 14640 0
-14641 -14638 0
c Var 'aux1043' direct represents '4' with '-14640'
14635 14637 14639 14641 -14640 0
c Encoding variable: aux1044 with domain: int(0..2) (representing constraint ((field_00002_00001=7) + (field_00002_00009=7)))
c Both direct and order encoding.
c Var 'aux1044' order represents '0' with '14642'
c Var 'aux1044' direct represents '0' with '14642'
c Var 'aux1044' order represents '1' with '14643'
-14642 14643 0
c Var 'aux1044' direct represents '1' with '14644'
14642 -14643 14644 0
-14644 14643 0
-14644 -14642 0
c Var 'aux1044' direct represents '2' with '-14643'
14642 14644 -14643 0
c Encoding variable: aux1045 with domain: int(0..2) (representing constraint ((field_00002_00008=7) + (field_00002_00002=7)))
c Both direct and order encoding.
c Var 'aux1045' order represents '0' with '14645'
c Var 'aux1045' direct represents '0' with '14645'
c Var 'aux1045' order represents '1' with '14646'
-14645 14646 0
c Var 'aux1045' direct represents '1' with '14647'
14645 -14646 14647 0
-14647 14646 0
-14647 -14645 0
c Var 'aux1045' direct represents '2' with '-14646'
14645 14647 -14646 0
c Encoding variable: aux1046 with domain: int(0..2) (representing constraint ((field_00002_00007=7) + (field_00002_00004=7)))
c Both direct and order encoding.
c Var 'aux1046' order represents '0' with '14648'
c Var 'aux1046' direct represents '0' with '14648'
c Var 'aux1046' order represents '1' with '14649'
-14648 14649 0
c Var 'aux1046' direct represents '1' with '14650'
14648 -14649 14650 0
-14650 14649 0
-14650 -14648 0
c Var 'aux1046' direct represents '2' with '-14649'
14648 14650 -14649 0
c Encoding variable: aux1047 with domain: int(0..2) (representing constraint ((field_00002_00006=7) + (field_00002_00005=7)))
c Both direct and order encoding.
c Var 'aux1047' order represents '0' with '14651'
c Var 'aux1047' direct represents '0' with '14651'
c Var 'aux1047' order represents '1' with '14652'
-14651 14652 0
c Var 'aux1047' direct represents '1' with '14653'
14651 -14652 14653 0
-14653 14652 0
-14653 -14651 0
c Var 'aux1047' direct represents '2' with '-14652'
14651 14653 -14652 0
c Encoding variable: aux1048 with domain: int(0..3) (representing constraint ((field_00002_00003=7) + aux1047))
c Both direct and order encoding.
c Var 'aux1048' order represents '0' with '14654'
c Var 'aux1048' direct represents '0' with '14654'
c Var 'aux1048' order represents '1' with '14655'
-14654 14655 0
c Var 'aux1048' direct represents '1' with '14656'
14654 -14655 14656 0
-14656 14655 0
-14656 -14654 0
c Var 'aux1048' order represents '2' with '14657'
-14655 14657 0
c Var 'aux1048' direct represents '2' with '14658'
14655 -14657 14658 0
-14658 14657 0
-14658 -14655 0
c Var 'aux1048' direct represents '3' with '-14657'
14654 14656 14658 -14657 0
c Encoding variable: aux1049 with domain: int(0..4) (representing constraint (aux1044 + aux1046))
c Both direct and order encoding.
c Var 'aux1049' order represents '0' with '14659'
c Var 'aux1049' direct represents '0' with '14659'
c Var 'aux1049' order represents '1' with '14660'
-14659 14660 0
c Var 'aux1049' direct represents '1' with '14661'
14659 -14660 14661 0
-14661 14660 0
-14661 -14659 0
c Var 'aux1049' order represents '2' with '14662'
-14660 14662 0
c Var 'aux1049' direct represents '2' with '14663'
14660 -14662 14663 0
-14663 14662 0
-14663 -14660 0
c Var 'aux1049' order represents '3' with '14664'
-14662 14664 0
c Var 'aux1049' direct represents '3' with '14665'
14662 -14664 14665 0
-14665 14664 0
-14665 -14662 0
c Var 'aux1049' direct represents '4' with '-14664'
14659 14661 14663 14665 -14664 0
c Encoding variable: aux1050 with domain: int(0..2) (representing constraint ((field_00002_00001=8) + (field_00002_00009=8)))
c Both direct and order encoding.
c Var 'aux1050' order represents '0' with '14666'
c Var 'aux1050' direct represents '0' with '14666'
c Var 'aux1050' order represents '1' with '14667'
-14666 14667 0
c Var 'aux1050' direct represents '1' with '14668'
14666 -14667 14668 0
-14668 14667 0
-14668 -14666 0
c Var 'aux1050' direct represents '2' with '-14667'
14666 14668 -14667 0
c Encoding variable: aux1051 with domain: int(0..2) (representing constraint ((field_00002_00008=8) + (field_00002_00002=8)))
c Both direct and order encoding.
c Var 'aux1051' order represents '0' with '14669'
c Var 'aux1051' direct represents '0' with '14669'
c Var 'aux1051' order represents '1' with '14670'
-14669 14670 0
c Var 'aux1051' direct represents '1' with '14671'
14669 -14670 14671 0
-14671 14670 0
-14671 -14669 0
c Var 'aux1051' direct represents '2' with '-14670'
14669 14671 -14670 0
c Encoding variable: aux1052 with domain: int(0..2) (representing constraint ((field_00002_00007=8) + (field_00002_00004=8)))
c Both direct and order encoding.
c Var 'aux1052' order represents '0' with '14672'
c Var 'aux1052' direct represents '0' with '14672'
c Var 'aux1052' order represents '1' with '14673'
-14672 14673 0
c Var 'aux1052' direct represents '1' with '14674'
14672 -14673 14674 0
-14674 14673 0
-14674 -14672 0
c Var 'aux1052' direct represents '2' with '-14673'
14672 14674 -14673 0
c Encoding variable: aux1053 with domain: int(0..2) (representing constraint ((field_00002_00006=8) + (field_00002_00005=8)))
c Both direct and order encoding.
c Var 'aux1053' order represents '0' with '14675'
c Var 'aux1053' direct represents '0' with '14675'
c Var 'aux1053' order represents '1' with '14676'
-14675 14676 0
c Var 'aux1053' direct represents '1' with '14677'
14675 -14676 14677 0
-14677 14676 0
-14677 -14675 0
c Var 'aux1053' direct represents '2' with '-14676'
14675 14677 -14676 0
c Encoding variable: aux1054 with domain: int(0..3) (representing constraint ((field_00002_00003=8) + aux1053))
c Both direct and order encoding.
c Var 'aux1054' order represents '0' with '14678'
c Var 'aux1054' direct represents '0' with '14678'
c Var 'aux1054' order represents '1' with '14679'
-14678 14679 0
c Var 'aux1054' direct represents '1' with '14680'
14678 -14679 14680 0
-14680 14679 0
-14680 -14678 0
c Var 'aux1054' order represents '2' with '14681'
-14679 14681 0
c Var 'aux1054' direct represents '2' with '14682'
14679 -14681 14682 0
-14682 14681 0
-14682 -14679 0
c Var 'aux1054' direct represents '3' with '-14681'
14678 14680 14682 -14681 0
c Encoding variable: aux1055 with domain: int(0..4) (representing constraint (aux1050 + aux1052))
c Both direct and order encoding.
c Var 'aux1055' order represents '0' with '14683'
c Var 'aux1055' direct represents '0' with '14683'
c Var 'aux1055' order represents '1' with '14684'
-14683 14684 0
c Var 'aux1055' direct represents '1' with '14685'
14683 -14684 14685 0
-14685 14684 0
-14685 -14683 0
c Var 'aux1055' order represents '2' with '14686'
-14684 14686 0
c Var 'aux1055' direct represents '2' with '14687'
14684 -14686 14687 0
-14687 14686 0
-14687 -14684 0
c Var 'aux1055' order represents '3' with '14688'
-14686 14688 0
c Var 'aux1055' direct represents '3' with '14689'
14686 -14688 14689 0
-14689 14688 0
-14689 -14686 0
c Var 'aux1055' direct represents '4' with '-14688'
14683 14685 14687 14689 -14688 0
c Encoding variable: aux1056 with domain: int(0..2) (representing constraint ((field_00002_00001=9) + (field_00002_00009=9)))
c Both direct and order encoding.
c Var 'aux1056' order represents '0' with '14690'
c Var 'aux1056' direct represents '0' with '14690'
c Var 'aux1056' order represents '1' with '14691'
-14690 14691 0
c Var 'aux1056' direct represents '1' with '14692'
14690 -14691 14692 0
-14692 14691 0
-14692 -14690 0
c Var 'aux1056' direct represents '2' with '-14691'
14690 14692 -14691 0
c Encoding variable: aux1057 with domain: int(0..2) (representing constraint ((field_00002_00008=9) + (field_00002_00002=9)))
c Both direct and order encoding.
c Var 'aux1057' order represents '0' with '14693'
c Var 'aux1057' direct represents '0' with '14693'
c Var 'aux1057' order represents '1' with '14694'
-14693 14694 0
c Var 'aux1057' direct represents '1' with '14695'
14693 -14694 14695 0
-14695 14694 0
-14695 -14693 0
c Var 'aux1057' direct represents '2' with '-14694'
14693 14695 -14694 0
c Encoding variable: aux1058 with domain: int(0..2) (representing constraint ((field_00002_00007=9) + (field_00002_00004=9)))
c Both direct and order encoding.
c Var 'aux1058' order represents '0' with '14696'
c Var 'aux1058' direct represents '0' with '14696'
c Var 'aux1058' order represents '1' with '14697'
-14696 14697 0
c Var 'aux1058' direct represents '1' with '14698'
14696 -14697 14698 0
-14698 14697 0
-14698 -14696 0
c Var 'aux1058' direct represents '2' with '-14697'
14696 14698 -14697 0
c Encoding variable: aux1059 with domain: int(0..2) (representing constraint ((field_00002_00006=9) + (field_00002_00005=9)))
c Both direct and order encoding.
c Var 'aux1059' order represents '0' with '14699'
c Var 'aux1059' direct represents '0' with '14699'
c Var 'aux1059' order represents '1' with '14700'
-14699 14700 0
c Var 'aux1059' direct represents '1' with '14701'
14699 -14700 14701 0
-14701 14700 0
-14701 -14699 0
c Var 'aux1059' direct represents '2' with '-14700'
14699 14701 -14700 0
c Encoding variable: aux1060 with domain: int(0..3) (representing constraint ((field_00002_00003=9) + aux1059))
c Both direct and order encoding.
c Var 'aux1060' order represents '0' with '14702'
c Var 'aux1060' direct represents '0' with '14702'
c Var 'aux1060' order represents '1' with '14703'
-14702 14703 0
c Var 'aux1060' direct represents '1' with '14704'
14702 -14703 14704 0
-14704 14703 0
-14704 -14702 0
c Var 'aux1060' order represents '2' with '14705'
-14703 14705 0
c Var 'aux1060' direct represents '2' with '14706'
14703 -14705 14706 0
-14706 14705 0
-14706 -14703 0
c Var 'aux1060' direct represents '3' with '-14705'
14702 14704 14706 -14705 0
c Encoding variable: aux1061 with domain: int(0..4) (representing constraint (aux1056 + aux1058))
c Both direct and order encoding.
c Var 'aux1061' order represents '0' with '14707'
c Var 'aux1061' direct represents '0' with '14707'
c Var 'aux1061' order represents '1' with '14708'
-14707 14708 0
c Var 'aux1061' direct represents '1' with '14709'
14707 -14708 14709 0
-14709 14708 0
-14709 -14707 0
c Var 'aux1061' order represents '2' with '14710'
-14708 14710 0
c Var 'aux1061' direct represents '2' with '14711'
14708 -14710 14711 0
-14711 14710 0
-14711 -14708 0
c Var 'aux1061' order represents '3' with '14712'
-14710 14712 0
c Var 'aux1061' direct represents '3' with '14713'
14710 -14712 14713 0
-14713 14712 0
-14713 -14710 0
c Var 'aux1061' direct represents '4' with '-14712'
14707 14709 14711 14713 -14712 0
c Encoding variable: aux1062 with domain: int(0..2) (representing constraint ((field_00003_00001=1) + (field_00003_00009=1)))
c Both direct and order encoding.
c Var 'aux1062' order represents '0' with '14714'
c Var 'aux1062' direct represents '0' with '14714'
c Var 'aux1062' order represents '1' with '14715'
-14714 14715 0
c Var 'aux1062' direct represents '1' with '14716'
14714 -14715 14716 0
-14716 14715 0
-14716 -14714 0
c Var 'aux1062' direct represents '2' with '-14715'
14714 14716 -14715 0
c Encoding variable: aux1063 with domain: int(0..2) (representing constraint ((field_00003_00008=1) + (field_00003_00002=1)))
c Both direct and order encoding.
c Var 'aux1063' order represents '0' with '14717'
c Var 'aux1063' direct represents '0' with '14717'
c Var 'aux1063' order represents '1' with '14718'
-14717 14718 0
c Var 'aux1063' direct represents '1' with '14719'
14717 -14718 14719 0
-14719 14718 0
-14719 -14717 0
c Var 'aux1063' direct represents '2' with '-14718'
14717 14719 -14718 0
c Encoding variable: aux1064 with domain: int(0..2) (representing constraint ((field_00003_00007=1) + (field_00003_00004=1)))
c Both direct and order encoding.
c Var 'aux1064' order represents '0' with '14720'
c Var 'aux1064' direct represents '0' with '14720'
c Var 'aux1064' order represents '1' with '14721'
-14720 14721 0
c Var 'aux1064' direct represents '1' with '14722'
14720 -14721 14722 0
-14722 14721 0
-14722 -14720 0
c Var 'aux1064' direct represents '2' with '-14721'
14720 14722 -14721 0
c Encoding variable: aux1065 with domain: int(0..2) (representing constraint ((field_00003_00006=1) + (field_00003_00005=1)))
c Both direct and order encoding.
c Var 'aux1065' order represents '0' with '14723'
c Var 'aux1065' direct represents '0' with '14723'
c Var 'aux1065' order represents '1' with '14724'
-14723 14724 0
c Var 'aux1065' direct represents '1' with '14725'
14723 -14724 14725 0
-14725 14724 0
-14725 -14723 0
c Var 'aux1065' direct represents '2' with '-14724'
14723 14725 -14724 0
c Encoding variable: aux1066 with domain: int(0..3) (representing constraint ((field_00003_00003=1) + aux1065))
c Both direct and order encoding.
c Var 'aux1066' order represents '0' with '14726'
c Var 'aux1066' direct represents '0' with '14726'
c Var 'aux1066' order represents '1' with '14727'
-14726 14727 0
c Var 'aux1066' direct represents '1' with '14728'
14726 -14727 14728 0
-14728 14727 0
-14728 -14726 0
c Var 'aux1066' order represents '2' with '14729'
-14727 14729 0
c Var 'aux1066' direct represents '2' with '14730'
14727 -14729 14730 0
-14730 14729 0
-14730 -14727 0
c Var 'aux1066' direct represents '3' with '-14729'
14726 14728 14730 -14729 0
c Encoding variable: aux1067 with domain: int(0..4) (representing constraint (aux1062 + aux1064))
c Both direct and order encoding.
c Var 'aux1067' order represents '0' with '14731'
c Var 'aux1067' direct represents '0' with '14731'
c Var 'aux1067' order represents '1' with '14732'
-14731 14732 0
c Var 'aux1067' direct represents '1' with '14733'
14731 -14732 14733 0
-14733 14732 0
-14733 -14731 0
c Var 'aux1067' order represents '2' with '14734'
-14732 14734 0
c Var 'aux1067' direct represents '2' with '14735'
14732 -14734 14735 0
-14735 14734 0
-14735 -14732 0
c Var 'aux1067' order represents '3' with '14736'
-14734 14736 0
c Var 'aux1067' direct represents '3' with '14737'
14734 -14736 14737 0
-14737 14736 0
-14737 -14734 0
c Var 'aux1067' direct represents '4' with '-14736'
14731 14733 14735 14737 -14736 0
c Encoding variable: aux1068 with domain: int(0..2) (representing constraint ((field_00003_00001=2) + (field_00003_00009=2)))
c Both direct and order encoding.
c Var 'aux1068' order represents '0' with '14738'
c Var 'aux1068' direct represents '0' with '14738'
c Var 'aux1068' order represents '1' with '14739'
-14738 14739 0
c Var 'aux1068' direct represents '1' with '14740'
14738 -14739 14740 0
-14740 14739 0
-14740 -14738 0
c Var 'aux1068' direct represents '2' with '-14739'
14738 14740 -14739 0
c Encoding variable: aux1069 with domain: int(0..2) (representing constraint ((field_00003_00008=2) + (field_00003_00002=2)))
c Both direct and order encoding.
c Var 'aux1069' order represents '0' with '14741'
c Var 'aux1069' direct represents '0' with '14741'
c Var 'aux1069' order represents '1' with '14742'
-14741 14742 0
c Var 'aux1069' direct represents '1' with '14743'
14741 -14742 14743 0
-14743 14742 0
-14743 -14741 0
c Var 'aux1069' direct represents '2' with '-14742'
14741 14743 -14742 0
c Encoding variable: aux1070 with domain: int(0..2) (representing constraint ((field_00003_00007=2) + (field_00003_00004=2)))
c Both direct and order encoding.
c Var 'aux1070' order represents '0' with '14744'
c Var 'aux1070' direct represents '0' with '14744'
c Var 'aux1070' order represents '1' with '14745'
-14744 14745 0
c Var 'aux1070' direct represents '1' with '14746'
14744 -14745 14746 0
-14746 14745 0
-14746 -14744 0
c Var 'aux1070' direct represents '2' with '-14745'
14744 14746 -14745 0
c Encoding variable: aux1071 with domain: int(0..2) (representing constraint ((field_00003_00006=2) + (field_00003_00005=2)))
c Both direct and order encoding.
c Var 'aux1071' order represents '0' with '14747'
c Var 'aux1071' direct represents '0' with '14747'
c Var 'aux1071' order represents '1' with '14748'
-14747 14748 0
c Var 'aux1071' direct represents '1' with '14749'
14747 -14748 14749 0
-14749 14748 0
-14749 -14747 0
c Var 'aux1071' direct represents '2' with '-14748'
14747 14749 -14748 0
c Encoding variable: aux1072 with domain: int(0..3) (representing constraint ((field_00003_00003=2) + aux1071))
c Both direct and order encoding.
c Var 'aux1072' order represents '0' with '14750'
c Var 'aux1072' direct represents '0' with '14750'
c Var 'aux1072' order represents '1' with '14751'
-14750 14751 0
c Var 'aux1072' direct represents '1' with '14752'
14750 -14751 14752 0
-14752 14751 0
-14752 -14750 0
c Var 'aux1072' order represents '2' with '14753'
-14751 14753 0
c Var 'aux1072' direct represents '2' with '14754'
14751 -14753 14754 0
-14754 14753 0
-14754 -14751 0
c Var 'aux1072' direct represents '3' with '-14753'
14750 14752 14754 -14753 0
c Encoding variable: aux1073 with domain: int(0..4) (representing constraint (aux1068 + aux1070))
c Both direct and order encoding.
c Var 'aux1073' order represents '0' with '14755'
c Var 'aux1073' direct represents '0' with '14755'
c Var 'aux1073' order represents '1' with '14756'
-14755 14756 0
c Var 'aux1073' direct represents '1' with '14757'
14755 -14756 14757 0
-14757 14756 0
-14757 -14755 0
c Var 'aux1073' order represents '2' with '14758'
-14756 14758 0
c Var 'aux1073' direct represents '2' with '14759'
14756 -14758 14759 0
-14759 14758 0
-14759 -14756 0
c Var 'aux1073' order represents '3' with '14760'
-14758 14760 0
c Var 'aux1073' direct represents '3' with '14761'
14758 -14760 14761 0
-14761 14760 0
-14761 -14758 0
c Var 'aux1073' direct represents '4' with '-14760'
14755 14757 14759 14761 -14760 0
c Encoding variable: aux1074 with domain: int(0..2) (representing constraint ((field_00003_00001=3) + (field_00003_00009=3)))
c Both direct and order encoding.
c Var 'aux1074' order represents '0' with '14762'
c Var 'aux1074' direct represents '0' with '14762'
c Var 'aux1074' order represents '1' with '14763'
-14762 14763 0
c Var 'aux1074' direct represents '1' with '14764'
14762 -14763 14764 0
-14764 14763 0
-14764 -14762 0
c Var 'aux1074' direct represents '2' with '-14763'
14762 14764 -14763 0
c Encoding variable: aux1075 with domain: int(0..2) (representing constraint ((field_00003_00008=3) + (field_00003_00002=3)))
c Both direct and order encoding.
c Var 'aux1075' order represents '0' with '14765'
c Var 'aux1075' direct represents '0' with '14765'
c Var 'aux1075' order represents '1' with '14766'
-14765 14766 0
c Var 'aux1075' direct represents '1' with '14767'
14765 -14766 14767 0
-14767 14766 0
-14767 -14765 0
c Var 'aux1075' direct represents '2' with '-14766'
14765 14767 -14766 0
c Encoding variable: aux1076 with domain: int(0..2) (representing constraint ((field_00003_00007=3) + (field_00003_00004=3)))
c Both direct and order encoding.
c Var 'aux1076' order represents '0' with '14768'
c Var 'aux1076' direct represents '0' with '14768'
c Var 'aux1076' order represents '1' with '14769'
-14768 14769 0
c Var 'aux1076' direct represents '1' with '14770'
14768 -14769 14770 0
-14770 14769 0
-14770 -14768 0
c Var 'aux1076' direct represents '2' with '-14769'
14768 14770 -14769 0
c Encoding variable: aux1077 with domain: int(0..2) (representing constraint ((field_00003_00006=3) + (field_00003_00005=3)))
c Both direct and order encoding.
c Var 'aux1077' order represents '0' with '14771'
c Var 'aux1077' direct represents '0' with '14771'
c Var 'aux1077' order represents '1' with '14772'
-14771 14772 0
c Var 'aux1077' direct represents '1' with '14773'
14771 -14772 14773 0
-14773 14772 0
-14773 -14771 0
c Var 'aux1077' direct represents '2' with '-14772'
14771 14773 -14772 0
c Encoding variable: aux1078 with domain: int(0..3) (representing constraint ((field_00003_00003=3) + aux1077))
c Both direct and order encoding.
c Var 'aux1078' order represents '0' with '14774'
c Var 'aux1078' direct represents '0' with '14774'
c Var 'aux1078' order represents '1' with '14775'
-14774 14775 0
c Var 'aux1078' direct represents '1' with '14776'
14774 -14775 14776 0
-14776 14775 0
-14776 -14774 0
c Var 'aux1078' order represents '2' with '14777'
-14775 14777 0
c Var 'aux1078' direct represents '2' with '14778'
14775 -14777 14778 0
-14778 14777 0
-14778 -14775 0
c Var 'aux1078' direct represents '3' with '-14777'
14774 14776 14778 -14777 0
c Encoding variable: aux1079 with domain: int(0..4) (representing constraint (aux1074 + aux1076))
c Both direct and order encoding.
c Var 'aux1079' order represents '0' with '14779'
c Var 'aux1079' direct represents '0' with '14779'
c Var 'aux1079' order represents '1' with '14780'
-14779 14780 0
c Var 'aux1079' direct represents '1' with '14781'
14779 -14780 14781 0
-14781 14780 0
-14781 -14779 0
c Var 'aux1079' order represents '2' with '14782'
-14780 14782 0
c Var 'aux1079' direct represents '2' with '14783'
14780 -14782 14783 0
-14783 14782 0
-14783 -14780 0
c Var 'aux1079' order represents '3' with '14784'
-14782 14784 0
c Var 'aux1079' direct represents '3' with '14785'
14782 -14784 14785 0
-14785 14784 0
-14785 -14782 0
c Var 'aux1079' direct represents '4' with '-14784'
14779 14781 14783 14785 -14784 0
c Encoding variable: aux1080 with domain: int(0..2) (representing constraint ((field_00003_00001=4) + (field_00003_00009=4)))
c Both direct and order encoding.
c Var 'aux1080' order represents '0' with '14786'
c Var 'aux1080' direct represents '0' with '14786'
c Var 'aux1080' order represents '1' with '14787'
-14786 14787 0
c Var 'aux1080' direct represents '1' with '14788'
14786 -14787 14788 0
-14788 14787 0
-14788 -14786 0
c Var 'aux1080' direct represents '2' with '-14787'
14786 14788 -14787 0
c Encoding variable: aux1081 with domain: int(0..2) (representing constraint ((field_00003_00008=4) + (field_00003_00002=4)))
c Both direct and order encoding.
c Var 'aux1081' order represents '0' with '14789'
c Var 'aux1081' direct represents '0' with '14789'
c Var 'aux1081' order represents '1' with '14790'
-14789 14790 0
c Var 'aux1081' direct represents '1' with '14791'
14789 -14790 14791 0
-14791 14790 0
-14791 -14789 0
c Var 'aux1081' direct represents '2' with '-14790'
14789 14791 -14790 0
c Encoding variable: aux1082 with domain: int(0..2) (representing constraint ((field_00003_00007=4) + (field_00003_00004=4)))
c Both direct and order encoding.
c Var 'aux1082' order represents '0' with '14792'
c Var 'aux1082' direct represents '0' with '14792'
c Var 'aux1082' order represents '1' with '14793'
-14792 14793 0
c Var 'aux1082' direct represents '1' with '14794'
14792 -14793 14794 0
-14794 14793 0
-14794 -14792 0
c Var 'aux1082' direct represents '2' with '-14793'
14792 14794 -14793 0
c Encoding variable: aux1083 with domain: int(0..2) (representing constraint ((field_00003_00006=4) + (field_00003_00005=4)))
c Both direct and order encoding.
c Var 'aux1083' order represents '0' with '14795'
c Var 'aux1083' direct represents '0' with '14795'
c Var 'aux1083' order represents '1' with '14796'
-14795 14796 0
c Var 'aux1083' direct represents '1' with '14797'
14795 -14796 14797 0
-14797 14796 0
-14797 -14795 0
c Var 'aux1083' direct represents '2' with '-14796'
14795 14797 -14796 0
c Encoding variable: aux1084 with domain: int(0..3) (representing constraint ((field_00003_00003=4) + aux1083))
c Both direct and order encoding.
c Var 'aux1084' order represents '0' with '14798'
c Var 'aux1084' direct represents '0' with '14798'
c Var 'aux1084' order represents '1' with '14799'
-14798 14799 0
c Var 'aux1084' direct represents '1' with '14800'
14798 -14799 14800 0
-14800 14799 0
-14800 -14798 0
c Var 'aux1084' order represents '2' with '14801'
-14799 14801 0
c Var 'aux1084' direct represents '2' with '14802'
14799 -14801 14802 0
-14802 14801 0
-14802 -14799 0
c Var 'aux1084' direct represents '3' with '-14801'
14798 14800 14802 -14801 0
c Encoding variable: aux1085 with domain: int(0..4) (representing constraint (aux1080 + aux1082))
c Both direct and order encoding.
c Var 'aux1085' order represents '0' with '14803'
c Var 'aux1085' direct represents '0' with '14803'
c Var 'aux1085' order represents '1' with '14804'
-14803 14804 0
c Var 'aux1085' direct represents '1' with '14805'
14803 -14804 14805 0
-14805 14804 0
-14805 -14803 0
c Var 'aux1085' order represents '2' with '14806'
-14804 14806 0
c Var 'aux1085' direct represents '2' with '14807'
14804 -14806 14807 0
-14807 14806 0
-14807 -14804 0
c Var 'aux1085' order represents '3' with '14808'
-14806 14808 0
c Var 'aux1085' direct represents '3' with '14809'
14806 -14808 14809 0
-14809 14808 0
-14809 -14806 0
c Var 'aux1085' direct represents '4' with '-14808'
14803 14805 14807 14809 -14808 0
c Encoding variable: aux1086 with domain: int(0..2) (representing constraint ((field_00003_00001=5) + (field_00003_00009=5)))
c Both direct and order encoding.
c Var 'aux1086' order represents '0' with '14810'
c Var 'aux1086' direct represents '0' with '14810'
c Var 'aux1086' order represents '1' with '14811'
-14810 14811 0
c Var 'aux1086' direct represents '1' with '14812'
14810 -14811 14812 0
-14812 14811 0
-14812 -14810 0
c Var 'aux1086' direct represents '2' with '-14811'
14810 14812 -14811 0
c Encoding variable: aux1087 with domain: int(0..2) (representing constraint ((field_00003_00008=5) + (field_00003_00002=5)))
c Both direct and order encoding.
c Var 'aux1087' order represents '0' with '14813'
c Var 'aux1087' direct represents '0' with '14813'
c Var 'aux1087' order represents '1' with '14814'
-14813 14814 0
c Var 'aux1087' direct represents '1' with '14815'
14813 -14814 14815 0
-14815 14814 0
-14815 -14813 0
c Var 'aux1087' direct represents '2' with '-14814'
14813 14815 -14814 0
c Encoding variable: aux1088 with domain: int(0..2) (representing constraint ((field_00003_00007=5) + (field_00003_00004=5)))
c Both direct and order encoding.
c Var 'aux1088' order represents '0' with '14816'
c Var 'aux1088' direct represents '0' with '14816'
c Var 'aux1088' order represents '1' with '14817'
-14816 14817 0
c Var 'aux1088' direct represents '1' with '14818'
14816 -14817 14818 0
-14818 14817 0
-14818 -14816 0
c Var 'aux1088' direct represents '2' with '-14817'
14816 14818 -14817 0
c Encoding variable: aux1089 with domain: int(0..2) (representing constraint ((field_00003_00006=5) + (field_00003_00005=5)))
c Both direct and order encoding.
c Var 'aux1089' order represents '0' with '14819'
c Var 'aux1089' direct represents '0' with '14819'
c Var 'aux1089' order represents '1' with '14820'
-14819 14820 0
c Var 'aux1089' direct represents '1' with '14821'
14819 -14820 14821 0
-14821 14820 0
-14821 -14819 0
c Var 'aux1089' direct represents '2' with '-14820'
14819 14821 -14820 0
c Encoding variable: aux1090 with domain: int(0..3) (representing constraint ((field_00003_00003=5) + aux1089))
c Both direct and order encoding.
c Var 'aux1090' order represents '0' with '14822'
c Var 'aux1090' direct represents '0' with '14822'
c Var 'aux1090' order represents '1' with '14823'
-14822 14823 0
c Var 'aux1090' direct represents '1' with '14824'
14822 -14823 14824 0
-14824 14823 0
-14824 -14822 0
c Var 'aux1090' order represents '2' with '14825'
-14823 14825 0
c Var 'aux1090' direct represents '2' with '14826'
14823 -14825 14826 0
-14826 14825 0
-14826 -14823 0
c Var 'aux1090' direct represents '3' with '-14825'
14822 14824 14826 -14825 0
c Encoding variable: aux1091 with domain: int(0..4) (representing constraint (aux1086 + aux1088))
c Both direct and order encoding.
c Var 'aux1091' order represents '0' with '14827'
c Var 'aux1091' direct represents '0' with '14827'
c Var 'aux1091' order represents '1' with '14828'
-14827 14828 0
c Var 'aux1091' direct represents '1' with '14829'
14827 -14828 14829 0
-14829 14828 0
-14829 -14827 0
c Var 'aux1091' order represents '2' with '14830'
-14828 14830 0
c Var 'aux1091' direct represents '2' with '14831'
14828 -14830 14831 0
-14831 14830 0
-14831 -14828 0
c Var 'aux1091' order represents '3' with '14832'
-14830 14832 0
c Var 'aux1091' direct represents '3' with '14833'
14830 -14832 14833 0
-14833 14832 0
-14833 -14830 0
c Var 'aux1091' direct represents '4' with '-14832'
14827 14829 14831 14833 -14832 0
c Encoding variable: aux1092 with domain: int(0..2) (representing constraint ((field_00003_00001=6) + (field_00003_00009=6)))
c Both direct and order encoding.
c Var 'aux1092' order represents '0' with '14834'
c Var 'aux1092' direct represents '0' with '14834'
c Var 'aux1092' order represents '1' with '14835'
-14834 14835 0
c Var 'aux1092' direct represents '1' with '14836'
14834 -14835 14836 0
-14836 14835 0
-14836 -14834 0
c Var 'aux1092' direct represents '2' with '-14835'
14834 14836 -14835 0
c Encoding variable: aux1093 with domain: int(0..2) (representing constraint ((field_00003_00008=6) + (field_00003_00002=6)))
c Both direct and order encoding.
c Var 'aux1093' order represents '0' with '14837'
c Var 'aux1093' direct represents '0' with '14837'
c Var 'aux1093' order represents '1' with '14838'
-14837 14838 0
c Var 'aux1093' direct represents '1' with '14839'
14837 -14838 14839 0
-14839 14838 0
-14839 -14837 0
c Var 'aux1093' direct represents '2' with '-14838'
14837 14839 -14838 0
c Encoding variable: aux1094 with domain: int(0..2) (representing constraint ((field_00003_00007=6) + (field_00003_00004=6)))
c Both direct and order encoding.
c Var 'aux1094' order represents '0' with '14840'
c Var 'aux1094' direct represents '0' with '14840'
c Var 'aux1094' order represents '1' with '14841'
-14840 14841 0
c Var 'aux1094' direct represents '1' with '14842'
14840 -14841 14842 0
-14842 14841 0
-14842 -14840 0
c Var 'aux1094' direct represents '2' with '-14841'
14840 14842 -14841 0
c Encoding variable: aux1095 with domain: int(0..2) (representing constraint ((field_00003_00006=6) + (field_00003_00005=6)))
c Both direct and order encoding.
c Var 'aux1095' order represents '0' with '14843'
c Var 'aux1095' direct represents '0' with '14843'
c Var 'aux1095' order represents '1' with '14844'
-14843 14844 0
c Var 'aux1095' direct represents '1' with '14845'
14843 -14844 14845 0
-14845 14844 0
-14845 -14843 0
c Var 'aux1095' direct represents '2' with '-14844'
14843 14845 -14844 0
c Encoding variable: aux1096 with domain: int(0..3) (representing constraint ((field_00003_00003=6) + aux1095))
c Both direct and order encoding.
c Var 'aux1096' order represents '0' with '14846'
c Var 'aux1096' direct represents '0' with '14846'
c Var 'aux1096' order represents '1' with '14847'
-14846 14847 0
c Var 'aux1096' direct represents '1' with '14848'
14846 -14847 14848 0
-14848 14847 0
-14848 -14846 0
c Var 'aux1096' order represents '2' with '14849'
-14847 14849 0
c Var 'aux1096' direct represents '2' with '14850'
14847 -14849 14850 0
-14850 14849 0
-14850 -14847 0
c Var 'aux1096' direct represents '3' with '-14849'
14846 14848 14850 -14849 0
c Encoding variable: aux1097 with domain: int(0..4) (representing constraint (aux1092 + aux1094))
c Both direct and order encoding.
c Var 'aux1097' order represents '0' with '14851'
c Var 'aux1097' direct represents '0' with '14851'
c Var 'aux1097' order represents '1' with '14852'
-14851 14852 0
c Var 'aux1097' direct represents '1' with '14853'
14851 -14852 14853 0
-14853 14852 0
-14853 -14851 0
c Var 'aux1097' order represents '2' with '14854'
-14852 14854 0
c Var 'aux1097' direct represents '2' with '14855'
14852 -14854 14855 0
-14855 14854 0
-14855 -14852 0
c Var 'aux1097' order represents '3' with '14856'
-14854 14856 0
c Var 'aux1097' direct represents '3' with '14857'
14854 -14856 14857 0
-14857 14856 0
-14857 -14854 0
c Var 'aux1097' direct represents '4' with '-14856'
14851 14853 14855 14857 -14856 0
c Encoding variable: aux1098 with domain: int(0..2) (representing constraint ((field_00003_00001=7) + (field_00003_00009=7)))
c Both direct and order encoding.
c Var 'aux1098' order represents '0' with '14858'
c Var 'aux1098' direct represents '0' with '14858'
c Var 'aux1098' order represents '1' with '14859'
-14858 14859 0
c Var 'aux1098' direct represents '1' with '14860'
14858 -14859 14860 0
-14860 14859 0
-14860 -14858 0
c Var 'aux1098' direct represents '2' with '-14859'
14858 14860 -14859 0
c Encoding variable: aux1099 with domain: int(0..2) (representing constraint ((field_00003_00008=7) + (field_00003_00002=7)))
c Both direct and order encoding.
c Var 'aux1099' order represents '0' with '14861'
c Var 'aux1099' direct represents '0' with '14861'
c Var 'aux1099' order represents '1' with '14862'
-14861 14862 0
c Var 'aux1099' direct represents '1' with '14863'
14861 -14862 14863 0
-14863 14862 0
-14863 -14861 0
c Var 'aux1099' direct represents '2' with '-14862'
14861 14863 -14862 0
c Encoding variable: aux1100 with domain: int(0..2) (representing constraint ((field_00003_00007=7) + (field_00003_00004=7)))
c Both direct and order encoding.
c Var 'aux1100' order represents '0' with '14864'
c Var 'aux1100' direct represents '0' with '14864'
c Var 'aux1100' order represents '1' with '14865'
-14864 14865 0
c Var 'aux1100' direct represents '1' with '14866'
14864 -14865 14866 0
-14866 14865 0
-14866 -14864 0
c Var 'aux1100' direct represents '2' with '-14865'
14864 14866 -14865 0
c Encoding variable: aux1101 with domain: int(0..2) (representing constraint ((field_00003_00006=7) + (field_00003_00005=7)))
c Both direct and order encoding.
c Var 'aux1101' order represents '0' with '14867'
c Var 'aux1101' direct represents '0' with '14867'
c Var 'aux1101' order represents '1' with '14868'
-14867 14868 0
c Var 'aux1101' direct represents '1' with '14869'
14867 -14868 14869 0
-14869 14868 0
-14869 -14867 0
c Var 'aux1101' direct represents '2' with '-14868'
14867 14869 -14868 0
c Encoding variable: aux1102 with domain: int(0..3) (representing constraint ((field_00003_00003=7) + aux1101))
c Both direct and order encoding.
c Var 'aux1102' order represents '0' with '14870'
c Var 'aux1102' direct represents '0' with '14870'
c Var 'aux1102' order represents '1' with '14871'
-14870 14871 0
c Var 'aux1102' direct represents '1' with '14872'
14870 -14871 14872 0
-14872 14871 0
-14872 -14870 0
c Var 'aux1102' order represents '2' with '14873'
-14871 14873 0
c Var 'aux1102' direct represents '2' with '14874'
14871 -14873 14874 0
-14874 14873 0
-14874 -14871 0
c Var 'aux1102' direct represents '3' with '-14873'
14870 14872 14874 -14873 0
c Encoding variable: aux1103 with domain: int(0..4) (representing constraint (aux1098 + aux1100))
c Both direct and order encoding.
c Var 'aux1103' order represents '0' with '14875'
c Var 'aux1103' direct represents '0' with '14875'
c Var 'aux1103' order represents '1' with '14876'
-14875 14876 0
c Var 'aux1103' direct represents '1' with '14877'
14875 -14876 14877 0
-14877 14876 0
-14877 -14875 0
c Var 'aux1103' order represents '2' with '14878'
-14876 14878 0
c Var 'aux1103' direct represents '2' with '14879'
14876 -14878 14879 0
-14879 14878 0
-14879 -14876 0
c Var 'aux1103' order represents '3' with '14880'
-14878 14880 0
c Var 'aux1103' direct represents '3' with '14881'
14878 -14880 14881 0
-14881 14880 0
-14881 -14878 0
c Var 'aux1103' direct represents '4' with '-14880'
14875 14877 14879 14881 -14880 0
c Encoding variable: aux1104 with domain: int(0..2) (representing constraint ((field_00003_00001=8) + (field_00003_00009=8)))
c Both direct and order encoding.
c Var 'aux1104' order represents '0' with '14882'
c Var 'aux1104' direct represents '0' with '14882'
c Var 'aux1104' order represents '1' with '14883'
-14882 14883 0
c Var 'aux1104' direct represents '1' with '14884'
14882 -14883 14884 0
-14884 14883 0
-14884 -14882 0
c Var 'aux1104' direct represents '2' with '-14883'
14882 14884 -14883 0
c Encoding variable: aux1105 with domain: int(0..2) (representing constraint ((field_00003_00008=8) + (field_00003_00002=8)))
c Both direct and order encoding.
c Var 'aux1105' order represents '0' with '14885'
c Var 'aux1105' direct represents '0' with '14885'
c Var 'aux1105' order represents '1' with '14886'
-14885 14886 0
c Var 'aux1105' direct represents '1' with '14887'
14885 -14886 14887 0
-14887 14886 0
-14887 -14885 0
c Var 'aux1105' direct represents '2' with '-14886'
14885 14887 -14886 0
c Encoding variable: aux1106 with domain: int(0..2) (representing constraint ((field_00003_00007=8) + (field_00003_00004=8)))
c Both direct and order encoding.
c Var 'aux1106' order represents '0' with '14888'
c Var 'aux1106' direct represents '0' with '14888'
c Var 'aux1106' order represents '1' with '14889'
-14888 14889 0
c Var 'aux1106' direct represents '1' with '14890'
14888 -14889 14890 0
-14890 14889 0
-14890 -14888 0
c Var 'aux1106' direct represents '2' with '-14889'
14888 14890 -14889 0
c Encoding variable: aux1107 with domain: int(0..2) (representing constraint ((field_00003_00006=8) + (field_00003_00005=8)))
c Both direct and order encoding.
c Var 'aux1107' order represents '0' with '14891'
c Var 'aux1107' direct represents '0' with '14891'
c Var 'aux1107' order represents '1' with '14892'
-14891 14892 0
c Var 'aux1107' direct represents '1' with '14893'
14891 -14892 14893 0
-14893 14892 0
-14893 -14891 0
c Var 'aux1107' direct represents '2' with '-14892'
14891 14893 -14892 0
c Encoding variable: aux1108 with domain: int(0..3) (representing constraint ((field_00003_00003=8) + aux1107))
c Both direct and order encoding.
c Var 'aux1108' order represents '0' with '14894'
c Var 'aux1108' direct represents '0' with '14894'
c Var 'aux1108' order represents '1' with '14895'
-14894 14895 0
c Var 'aux1108' direct represents '1' with '14896'
14894 -14895 14896 0
-14896 14895 0
-14896 -14894 0
c Var 'aux1108' order represents '2' with '14897'
-14895 14897 0
c Var 'aux1108' direct represents '2' with '14898'
14895 -14897 14898 0
-14898 14897 0
-14898 -14895 0
c Var 'aux1108' direct represents '3' with '-14897'
14894 14896 14898 -14897 0
c Encoding variable: aux1109 with domain: int(0..4) (representing constraint (aux1104 + aux1106))
c Both direct and order encoding.
c Var 'aux1109' order represents '0' with '14899'
c Var 'aux1109' direct represents '0' with '14899'
c Var 'aux1109' order represents '1' with '14900'
-14899 14900 0
c Var 'aux1109' direct represents '1' with '14901'
14899 -14900 14901 0
-14901 14900 0
-14901 -14899 0
c Var 'aux1109' order represents '2' with '14902'
-14900 14902 0
c Var 'aux1109' direct represents '2' with '14903'
14900 -14902 14903 0
-14903 14902 0
-14903 -14900 0
c Var 'aux1109' order represents '3' with '14904'
-14902 14904 0
c Var 'aux1109' direct represents '3' with '14905'
14902 -14904 14905 0
-14905 14904 0
-14905 -14902 0
c Var 'aux1109' direct represents '4' with '-14904'
14899 14901 14903 14905 -14904 0
c Encoding variable: aux1110 with domain: int(0..2) (representing constraint ((field_00003_00001=9) + (field_00003_00009=9)))
c Both direct and order encoding.
c Var 'aux1110' order represents '0' with '14906'
c Var 'aux1110' direct represents '0' with '14906'
c Var 'aux1110' order represents '1' with '14907'
-14906 14907 0
c Var 'aux1110' direct represents '1' with '14908'
14906 -14907 14908 0
-14908 14907 0
-14908 -14906 0
c Var 'aux1110' direct represents '2' with '-14907'
14906 14908 -14907 0
c Encoding variable: aux1111 with domain: int(0..2) (representing constraint ((field_00003_00008=9) + (field_00003_00002=9)))
c Both direct and order encoding.
c Var 'aux1111' order represents '0' with '14909'
c Var 'aux1111' direct represents '0' with '14909'
c Var 'aux1111' order represents '1' with '14910'
-14909 14910 0
c Var 'aux1111' direct represents '1' with '14911'
14909 -14910 14911 0
-14911 14910 0
-14911 -14909 0
c Var 'aux1111' direct represents '2' with '-14910'
14909 14911 -14910 0
c Encoding variable: aux1112 with domain: int(0..2) (representing constraint ((field_00003_00007=9) + (field_00003_00004=9)))
c Both direct and order encoding.
c Var 'aux1112' order represents '0' with '14912'
c Var 'aux1112' direct represents '0' with '14912'
c Var 'aux1112' order represents '1' with '14913'
-14912 14913 0
c Var 'aux1112' direct represents '1' with '14914'
14912 -14913 14914 0
-14914 14913 0
-14914 -14912 0
c Var 'aux1112' direct represents '2' with '-14913'
14912 14914 -14913 0
c Encoding variable: aux1113 with domain: int(0..2) (representing constraint ((field_00003_00006=9) + (field_00003_00005=9)))
c Both direct and order encoding.
c Var 'aux1113' order represents '0' with '14915'
c Var 'aux1113' direct represents '0' with '14915'
c Var 'aux1113' order represents '1' with '14916'
-14915 14916 0
c Var 'aux1113' direct represents '1' with '14917'
14915 -14916 14917 0
-14917 14916 0
-14917 -14915 0
c Var 'aux1113' direct represents '2' with '-14916'
14915 14917 -14916 0
c Encoding variable: aux1114 with domain: int(0..3) (representing constraint ((field_00003_00003=9) + aux1113))
c Both direct and order encoding.
c Var 'aux1114' order represents '0' with '14918'
c Var 'aux1114' direct represents '0' with '14918'
c Var 'aux1114' order represents '1' with '14919'
-14918 14919 0
c Var 'aux1114' direct represents '1' with '14920'
14918 -14919 14920 0
-14920 14919 0
-14920 -14918 0
c Var 'aux1114' order represents '2' with '14921'
-14919 14921 0
c Var 'aux1114' direct represents '2' with '14922'
14919 -14921 14922 0
-14922 14921 0
-14922 -14919 0
c Var 'aux1114' direct represents '3' with '-14921'
14918 14920 14922 -14921 0
c Encoding variable: aux1115 with domain: int(0..4) (representing constraint (aux1110 + aux1112))
c Both direct and order encoding.
c Var 'aux1115' order represents '0' with '14923'
c Var 'aux1115' direct represents '0' with '14923'
c Var 'aux1115' order represents '1' with '14924'
-14923 14924 0
c Var 'aux1115' direct represents '1' with '14925'
14923 -14924 14925 0
-14925 14924 0
-14925 -14923 0
c Var 'aux1115' order represents '2' with '14926'
-14924 14926 0
c Var 'aux1115' direct represents '2' with '14927'
14924 -14926 14927 0
-14927 14926 0
-14927 -14924 0
c Var 'aux1115' order represents '3' with '14928'
-14926 14928 0
c Var 'aux1115' direct represents '3' with '14929'
14926 -14928 14929 0
-14929 14928 0
-14929 -14926 0
c Var 'aux1115' direct represents '4' with '-14928'
14923 14925 14927 14929 -14928 0
c Encoding variable: aux1116 with domain: int(0..2) (representing constraint ((field_00004_00001=1) + (field_00004_00009=1)))
c Both direct and order encoding.
c Var 'aux1116' order represents '0' with '14930'
c Var 'aux1116' direct represents '0' with '14930'
c Var 'aux1116' order represents '1' with '14931'
-14930 14931 0
c Var 'aux1116' direct represents '1' with '14932'
14930 -14931 14932 0
-14932 14931 0
-14932 -14930 0
c Var 'aux1116' direct represents '2' with '-14931'
14930 14932 -14931 0
c Encoding variable: aux1117 with domain: int(0..2) (representing constraint ((field_00004_00008=1) + (field_00004_00002=1)))
c Both direct and order encoding.
c Var 'aux1117' order represents '0' with '14933'
c Var 'aux1117' direct represents '0' with '14933'
c Var 'aux1117' order represents '1' with '14934'
-14933 14934 0
c Var 'aux1117' direct represents '1' with '14935'
14933 -14934 14935 0
-14935 14934 0
-14935 -14933 0
c Var 'aux1117' direct represents '2' with '-14934'
14933 14935 -14934 0
c Encoding variable: aux1118 with domain: int(0..2) (representing constraint ((field_00004_00007=1) + (field_00004_00004=1)))
c Both direct and order encoding.
c Var 'aux1118' order represents '0' with '14936'
c Var 'aux1118' direct represents '0' with '14936'
c Var 'aux1118' order represents '1' with '14937'
-14936 14937 0
c Var 'aux1118' direct represents '1' with '14938'
14936 -14937 14938 0
-14938 14937 0
-14938 -14936 0
c Var 'aux1118' direct represents '2' with '-14937'
14936 14938 -14937 0
c Encoding variable: aux1119 with domain: int(0..2) (representing constraint ((field_00004_00006=1) + (field_00004_00005=1)))
c Both direct and order encoding.
c Var 'aux1119' order represents '0' with '14939'
c Var 'aux1119' direct represents '0' with '14939'
c Var 'aux1119' order represents '1' with '14940'
-14939 14940 0
c Var 'aux1119' direct represents '1' with '14941'
14939 -14940 14941 0
-14941 14940 0
-14941 -14939 0
c Var 'aux1119' direct represents '2' with '-14940'
14939 14941 -14940 0
c Encoding variable: aux1120 with domain: int(0..3) (representing constraint ((field_00004_00003=1) + aux1119))
c Both direct and order encoding.
c Var 'aux1120' order represents '0' with '14942'
c Var 'aux1120' direct represents '0' with '14942'
c Var 'aux1120' order represents '1' with '14943'
-14942 14943 0
c Var 'aux1120' direct represents '1' with '14944'
14942 -14943 14944 0
-14944 14943 0
-14944 -14942 0
c Var 'aux1120' order represents '2' with '14945'
-14943 14945 0
c Var 'aux1120' direct represents '2' with '14946'
14943 -14945 14946 0
-14946 14945 0
-14946 -14943 0
c Var 'aux1120' direct represents '3' with '-14945'
14942 14944 14946 -14945 0
c Encoding variable: aux1121 with domain: int(0..4) (representing constraint (aux1116 + aux1118))
c Both direct and order encoding.
c Var 'aux1121' order represents '0' with '14947'
c Var 'aux1121' direct represents '0' with '14947'
c Var 'aux1121' order represents '1' with '14948'
-14947 14948 0
c Var 'aux1121' direct represents '1' with '14949'
14947 -14948 14949 0
-14949 14948 0
-14949 -14947 0
c Var 'aux1121' order represents '2' with '14950'
-14948 14950 0
c Var 'aux1121' direct represents '2' with '14951'
14948 -14950 14951 0
-14951 14950 0
-14951 -14948 0
c Var 'aux1121' order represents '3' with '14952'
-14950 14952 0
c Var 'aux1121' direct represents '3' with '14953'
14950 -14952 14953 0
-14953 14952 0
-14953 -14950 0
c Var 'aux1121' direct represents '4' with '-14952'
14947 14949 14951 14953 -14952 0
c Encoding variable: aux1122 with domain: int(0..2) (representing constraint ((field_00004_00001=2) + (field_00004_00009=2)))
c Both direct and order encoding.
c Var 'aux1122' order represents '0' with '14954'
c Var 'aux1122' direct represents '0' with '14954'
c Var 'aux1122' order represents '1' with '14955'
-14954 14955 0
c Var 'aux1122' direct represents '1' with '14956'
14954 -14955 14956 0
-14956 14955 0
-14956 -14954 0
c Var 'aux1122' direct represents '2' with '-14955'
14954 14956 -14955 0
c Encoding variable: aux1123 with domain: int(0..2) (representing constraint ((field_00004_00008=2) + (field_00004_00002=2)))
c Both direct and order encoding.
c Var 'aux1123' order represents '0' with '14957'
c Var 'aux1123' direct represents '0' with '14957'
c Var 'aux1123' order represents '1' with '14958'
-14957 14958 0
c Var 'aux1123' direct represents '1' with '14959'
14957 -14958 14959 0
-14959 14958 0
-14959 -14957 0
c Var 'aux1123' direct represents '2' with '-14958'
14957 14959 -14958 0
c Encoding variable: aux1124 with domain: int(0..2) (representing constraint ((field_00004_00007=2) + (field_00004_00004=2)))
c Both direct and order encoding.
c Var 'aux1124' order represents '0' with '14960'
c Var 'aux1124' direct represents '0' with '14960'
c Var 'aux1124' order represents '1' with '14961'
-14960 14961 0
c Var 'aux1124' direct represents '1' with '14962'
14960 -14961 14962 0
-14962 14961 0
-14962 -14960 0
c Var 'aux1124' direct represents '2' with '-14961'
14960 14962 -14961 0
c Encoding variable: aux1125 with domain: int(0..2) (representing constraint ((field_00004_00006=2) + (field_00004_00005=2)))
c Both direct and order encoding.
c Var 'aux1125' order represents '0' with '14963'
c Var 'aux1125' direct represents '0' with '14963'
c Var 'aux1125' order represents '1' with '14964'
-14963 14964 0
c Var 'aux1125' direct represents '1' with '14965'
14963 -14964 14965 0
-14965 14964 0
-14965 -14963 0
c Var 'aux1125' direct represents '2' with '-14964'
14963 14965 -14964 0
c Encoding variable: aux1126 with domain: int(0..3) (representing constraint ((field_00004_00003=2) + aux1125))
c Both direct and order encoding.
c Var 'aux1126' order represents '0' with '14966'
c Var 'aux1126' direct represents '0' with '14966'
c Var 'aux1126' order represents '1' with '14967'
-14966 14967 0
c Var 'aux1126' direct represents '1' with '14968'
14966 -14967 14968 0
-14968 14967 0
-14968 -14966 0
c Var 'aux1126' order represents '2' with '14969'
-14967 14969 0
c Var 'aux1126' direct represents '2' with '14970'
14967 -14969 14970 0
-14970 14969 0
-14970 -14967 0
c Var 'aux1126' direct represents '3' with '-14969'
14966 14968 14970 -14969 0
c Encoding variable: aux1127 with domain: int(0..4) (representing constraint (aux1122 + aux1124))
c Both direct and order encoding.
c Var 'aux1127' order represents '0' with '14971'
c Var 'aux1127' direct represents '0' with '14971'
c Var 'aux1127' order represents '1' with '14972'
-14971 14972 0
c Var 'aux1127' direct represents '1' with '14973'
14971 -14972 14973 0
-14973 14972 0
-14973 -14971 0
c Var 'aux1127' order represents '2' with '14974'
-14972 14974 0
c Var 'aux1127' direct represents '2' with '14975'
14972 -14974 14975 0
-14975 14974 0
-14975 -14972 0
c Var 'aux1127' order represents '3' with '14976'
-14974 14976 0
c Var 'aux1127' direct represents '3' with '14977'
14974 -14976 14977 0
-14977 14976 0
-14977 -14974 0
c Var 'aux1127' direct represents '4' with '-14976'
14971 14973 14975 14977 -14976 0
c Encoding variable: aux1128 with domain: int(0..2) (representing constraint ((field_00004_00001=3) + (field_00004_00009=3)))
c Both direct and order encoding.
c Var 'aux1128' order represents '0' with '14978'
c Var 'aux1128' direct represents '0' with '14978'
c Var 'aux1128' order represents '1' with '14979'
-14978 14979 0
c Var 'aux1128' direct represents '1' with '14980'
14978 -14979 14980 0
-14980 14979 0
-14980 -14978 0
c Var 'aux1128' direct represents '2' with '-14979'
14978 14980 -14979 0
c Encoding variable: aux1129 with domain: int(0..2) (representing constraint ((field_00004_00008=3) + (field_00004_00002=3)))
c Both direct and order encoding.
c Var 'aux1129' order represents '0' with '14981'
c Var 'aux1129' direct represents '0' with '14981'
c Var 'aux1129' order represents '1' with '14982'
-14981 14982 0
c Var 'aux1129' direct represents '1' with '14983'
14981 -14982 14983 0
-14983 14982 0
-14983 -14981 0
c Var 'aux1129' direct represents '2' with '-14982'
14981 14983 -14982 0
c Encoding variable: aux1130 with domain: int(0..2) (representing constraint ((field_00004_00007=3) + (field_00004_00004=3)))
c Both direct and order encoding.
c Var 'aux1130' order represents '0' with '14984'
c Var 'aux1130' direct represents '0' with '14984'
c Var 'aux1130' order represents '1' with '14985'
-14984 14985 0
c Var 'aux1130' direct represents '1' with '14986'
14984 -14985 14986 0
-14986 14985 0
-14986 -14984 0
c Var 'aux1130' direct represents '2' with '-14985'
14984 14986 -14985 0
c Encoding variable: aux1131 with domain: int(0..2) (representing constraint ((field_00004_00006=3) + (field_00004_00005=3)))
c Both direct and order encoding.
c Var 'aux1131' order represents '0' with '14987'
c Var 'aux1131' direct represents '0' with '14987'
c Var 'aux1131' order represents '1' with '14988'
-14987 14988 0
c Var 'aux1131' direct represents '1' with '14989'
14987 -14988 14989 0
-14989 14988 0
-14989 -14987 0
c Var 'aux1131' direct represents '2' with '-14988'
14987 14989 -14988 0
c Encoding variable: aux1132 with domain: int(0..3) (representing constraint ((field_00004_00003=3) + aux1131))
c Both direct and order encoding.
c Var 'aux1132' order represents '0' with '14990'
c Var 'aux1132' direct represents '0' with '14990'
c Var 'aux1132' order represents '1' with '14991'
-14990 14991 0
c Var 'aux1132' direct represents '1' with '14992'
14990 -14991 14992 0
-14992 14991 0
-14992 -14990 0
c Var 'aux1132' order represents '2' with '14993'
-14991 14993 0
c Var 'aux1132' direct represents '2' with '14994'
14991 -14993 14994 0
-14994 14993 0
-14994 -14991 0
c Var 'aux1132' direct represents '3' with '-14993'
14990 14992 14994 -14993 0
c Encoding variable: aux1133 with domain: int(0..4) (representing constraint (aux1128 + aux1130))
c Both direct and order encoding.
c Var 'aux1133' order represents '0' with '14995'
c Var 'aux1133' direct represents '0' with '14995'
c Var 'aux1133' order represents '1' with '14996'
-14995 14996 0
c Var 'aux1133' direct represents '1' with '14997'
14995 -14996 14997 0
-14997 14996 0
-14997 -14995 0
c Var 'aux1133' order represents '2' with '14998'
-14996 14998 0
c Var 'aux1133' direct represents '2' with '14999'
14996 -14998 14999 0
-14999 14998 0
-14999 -14996 0
c Var 'aux1133' order represents '3' with '15000'
-14998 15000 0
c Var 'aux1133' direct represents '3' with '15001'
14998 -15000 15001 0
-15001 15000 0
-15001 -14998 0
c Var 'aux1133' direct represents '4' with '-15000'
14995 14997 14999 15001 -15000 0
c Encoding variable: aux1134 with domain: int(0..2) (representing constraint ((field_00004_00001=4) + (field_00004_00009=4)))
c Both direct and order encoding.
c Var 'aux1134' order represents '0' with '15002'
c Var 'aux1134' direct represents '0' with '15002'
c Var 'aux1134' order represents '1' with '15003'
-15002 15003 0
c Var 'aux1134' direct represents '1' with '15004'
15002 -15003 15004 0
-15004 15003 0
-15004 -15002 0
c Var 'aux1134' direct represents '2' with '-15003'
15002 15004 -15003 0
c Encoding variable: aux1135 with domain: int(0..2) (representing constraint ((field_00004_00008=4) + (field_00004_00002=4)))
c Both direct and order encoding.
c Var 'aux1135' order represents '0' with '15005'
c Var 'aux1135' direct represents '0' with '15005'
c Var 'aux1135' order represents '1' with '15006'
-15005 15006 0
c Var 'aux1135' direct represents '1' with '15007'
15005 -15006 15007 0
-15007 15006 0
-15007 -15005 0
c Var 'aux1135' direct represents '2' with '-15006'
15005 15007 -15006 0
c Encoding variable: aux1136 with domain: int(0..2) (representing constraint ((field_00004_00007=4) + (field_00004_00004=4)))
c Both direct and order encoding.
c Var 'aux1136' order represents '0' with '15008'
c Var 'aux1136' direct represents '0' with '15008'
c Var 'aux1136' order represents '1' with '15009'
-15008 15009 0
c Var 'aux1136' direct represents '1' with '15010'
15008 -15009 15010 0
-15010 15009 0
-15010 -15008 0
c Var 'aux1136' direct represents '2' with '-15009'
15008 15010 -15009 0
c Encoding variable: aux1137 with domain: int(0..2) (representing constraint ((field_00004_00006=4) + (field_00004_00005=4)))
c Both direct and order encoding.
c Var 'aux1137' order represents '0' with '15011'
c Var 'aux1137' direct represents '0' with '15011'
c Var 'aux1137' order represents '1' with '15012'
-15011 15012 0
c Var 'aux1137' direct represents '1' with '15013'
15011 -15012 15013 0
-15013 15012 0
-15013 -15011 0
c Var 'aux1137' direct represents '2' with '-15012'
15011 15013 -15012 0
c Encoding variable: aux1138 with domain: int(0..3) (representing constraint ((field_00004_00003=4) + aux1137))
c Both direct and order encoding.
c Var 'aux1138' order represents '0' with '15014'
c Var 'aux1138' direct represents '0' with '15014'
c Var 'aux1138' order represents '1' with '15015'
-15014 15015 0
c Var 'aux1138' direct represents '1' with '15016'
15014 -15015 15016 0
-15016 15015 0
-15016 -15014 0
c Var 'aux1138' order represents '2' with '15017'
-15015 15017 0
c Var 'aux1138' direct represents '2' with '15018'
15015 -15017 15018 0
-15018 15017 0
-15018 -15015 0
c Var 'aux1138' direct represents '3' with '-15017'
15014 15016 15018 -15017 0
c Encoding variable: aux1139 with domain: int(0..4) (representing constraint (aux1134 + aux1136))
c Both direct and order encoding.
c Var 'aux1139' order represents '0' with '15019'
c Var 'aux1139' direct represents '0' with '15019'
c Var 'aux1139' order represents '1' with '15020'
-15019 15020 0
c Var 'aux1139' direct represents '1' with '15021'
15019 -15020 15021 0
-15021 15020 0
-15021 -15019 0
c Var 'aux1139' order represents '2' with '15022'
-15020 15022 0
c Var 'aux1139' direct represents '2' with '15023'
15020 -15022 15023 0
-15023 15022 0
-15023 -15020 0
c Var 'aux1139' order represents '3' with '15024'
-15022 15024 0
c Var 'aux1139' direct represents '3' with '15025'
15022 -15024 15025 0
-15025 15024 0
-15025 -15022 0
c Var 'aux1139' direct represents '4' with '-15024'
15019 15021 15023 15025 -15024 0
c Encoding variable: aux1140 with domain: int(0..2) (representing constraint ((field_00004_00001=5) + (field_00004_00009=5)))
c Both direct and order encoding.
c Var 'aux1140' order represents '0' with '15026'
c Var 'aux1140' direct represents '0' with '15026'
c Var 'aux1140' order represents '1' with '15027'
-15026 15027 0
c Var 'aux1140' direct represents '1' with '15028'
15026 -15027 15028 0
-15028 15027 0
-15028 -15026 0
c Var 'aux1140' direct represents '2' with '-15027'
15026 15028 -15027 0
c Encoding variable: aux1141 with domain: int(0..2) (representing constraint ((field_00004_00008=5) + (field_00004_00002=5)))
c Both direct and order encoding.
c Var 'aux1141' order represents '0' with '15029'
c Var 'aux1141' direct represents '0' with '15029'
c Var 'aux1141' order represents '1' with '15030'
-15029 15030 0
c Var 'aux1141' direct represents '1' with '15031'
15029 -15030 15031 0
-15031 15030 0
-15031 -15029 0
c Var 'aux1141' direct represents '2' with '-15030'
15029 15031 -15030 0
c Encoding variable: aux1142 with domain: int(0..2) (representing constraint ((field_00004_00007=5) + (field_00004_00004=5)))
c Both direct and order encoding.
c Var 'aux1142' order represents '0' with '15032'
c Var 'aux1142' direct represents '0' with '15032'
c Var 'aux1142' order represents '1' with '15033'
-15032 15033 0
c Var 'aux1142' direct represents '1' with '15034'
15032 -15033 15034 0
-15034 15033 0
-15034 -15032 0
c Var 'aux1142' direct represents '2' with '-15033'
15032 15034 -15033 0
c Encoding variable: aux1143 with domain: int(0..2) (representing constraint ((field_00004_00006=5) + (field_00004_00005=5)))
c Both direct and order encoding.
c Var 'aux1143' order represents '0' with '15035'
c Var 'aux1143' direct represents '0' with '15035'
c Var 'aux1143' order represents '1' with '15036'
-15035 15036 0
c Var 'aux1143' direct represents '1' with '15037'
15035 -15036 15037 0
-15037 15036 0
-15037 -15035 0
c Var 'aux1143' direct represents '2' with '-15036'
15035 15037 -15036 0
c Encoding variable: aux1144 with domain: int(0..3) (representing constraint ((field_00004_00003=5) + aux1143))
c Both direct and order encoding.
c Var 'aux1144' order represents '0' with '15038'
c Var 'aux1144' direct represents '0' with '15038'
c Var 'aux1144' order represents '1' with '15039'
-15038 15039 0
c Var 'aux1144' direct represents '1' with '15040'
15038 -15039 15040 0
-15040 15039 0
-15040 -15038 0
c Var 'aux1144' order represents '2' with '15041'
-15039 15041 0
c Var 'aux1144' direct represents '2' with '15042'
15039 -15041 15042 0
-15042 15041 0
-15042 -15039 0
c Var 'aux1144' direct represents '3' with '-15041'
15038 15040 15042 -15041 0
c Encoding variable: aux1145 with domain: int(0..4) (representing constraint (aux1140 + aux1142))
c Both direct and order encoding.
c Var 'aux1145' order represents '0' with '15043'
c Var 'aux1145' direct represents '0' with '15043'
c Var 'aux1145' order represents '1' with '15044'
-15043 15044 0
c Var 'aux1145' direct represents '1' with '15045'
15043 -15044 15045 0
-15045 15044 0
-15045 -15043 0
c Var 'aux1145' order represents '2' with '15046'
-15044 15046 0
c Var 'aux1145' direct represents '2' with '15047'
15044 -15046 15047 0
-15047 15046 0
-15047 -15044 0
c Var 'aux1145' order represents '3' with '15048'
-15046 15048 0
c Var 'aux1145' direct represents '3' with '15049'
15046 -15048 15049 0
-15049 15048 0
-15049 -15046 0
c Var 'aux1145' direct represents '4' with '-15048'
15043 15045 15047 15049 -15048 0
c Encoding variable: aux1146 with domain: int(0..2) (representing constraint ((field_00004_00001=6) + (field_00004_00009=6)))
c Both direct and order encoding.
c Var 'aux1146' order represents '0' with '15050'
c Var 'aux1146' direct represents '0' with '15050'
c Var 'aux1146' order represents '1' with '15051'
-15050 15051 0
c Var 'aux1146' direct represents '1' with '15052'
15050 -15051 15052 0
-15052 15051 0
-15052 -15050 0
c Var 'aux1146' direct represents '2' with '-15051'
15050 15052 -15051 0
c Encoding variable: aux1147 with domain: int(0..2) (representing constraint ((field_00004_00008=6) + (field_00004_00002=6)))
c Both direct and order encoding.
c Var 'aux1147' order represents '0' with '15053'
c Var 'aux1147' direct represents '0' with '15053'
c Var 'aux1147' order represents '1' with '15054'
-15053 15054 0
c Var 'aux1147' direct represents '1' with '15055'
15053 -15054 15055 0
-15055 15054 0
-15055 -15053 0
c Var 'aux1147' direct represents '2' with '-15054'
15053 15055 -15054 0
c Encoding variable: aux1148 with domain: int(0..2) (representing constraint ((field_00004_00007=6) + (field_00004_00004=6)))
c Both direct and order encoding.
c Var 'aux1148' order represents '0' with '15056'
c Var 'aux1148' direct represents '0' with '15056'
c Var 'aux1148' order represents '1' with '15057'
-15056 15057 0
c Var 'aux1148' direct represents '1' with '15058'
15056 -15057 15058 0
-15058 15057 0
-15058 -15056 0
c Var 'aux1148' direct represents '2' with '-15057'
15056 15058 -15057 0
c Encoding variable: aux1149 with domain: int(0..2) (representing constraint ((field_00004_00006=6) + (field_00004_00005=6)))
c Both direct and order encoding.
c Var 'aux1149' order represents '0' with '15059'
c Var 'aux1149' direct represents '0' with '15059'
c Var 'aux1149' order represents '1' with '15060'
-15059 15060 0
c Var 'aux1149' direct represents '1' with '15061'
15059 -15060 15061 0
-15061 15060 0
-15061 -15059 0
c Var 'aux1149' direct represents '2' with '-15060'
15059 15061 -15060 0
c Encoding variable: aux1150 with domain: int(0..3) (representing constraint ((field_00004_00003=6) + aux1149))
c Both direct and order encoding.
c Var 'aux1150' order represents '0' with '15062'
c Var 'aux1150' direct represents '0' with '15062'
c Var 'aux1150' order represents '1' with '15063'
-15062 15063 0
c Var 'aux1150' direct represents '1' with '15064'
15062 -15063 15064 0
-15064 15063 0
-15064 -15062 0
c Var 'aux1150' order represents '2' with '15065'
-15063 15065 0
c Var 'aux1150' direct represents '2' with '15066'
15063 -15065 15066 0
-15066 15065 0
-15066 -15063 0
c Var 'aux1150' direct represents '3' with '-15065'
15062 15064 15066 -15065 0
c Encoding variable: aux1151 with domain: int(0..4) (representing constraint (aux1146 + aux1148))
c Both direct and order encoding.
c Var 'aux1151' order represents '0' with '15067'
c Var 'aux1151' direct represents '0' with '15067'
c Var 'aux1151' order represents '1' with '15068'
-15067 15068 0
c Var 'aux1151' direct represents '1' with '15069'
15067 -15068 15069 0
-15069 15068 0
-15069 -15067 0
c Var 'aux1151' order represents '2' with '15070'
-15068 15070 0
c Var 'aux1151' direct represents '2' with '15071'
15068 -15070 15071 0
-15071 15070 0
-15071 -15068 0
c Var 'aux1151' order represents '3' with '15072'
-15070 15072 0
c Var 'aux1151' direct represents '3' with '15073'
15070 -15072 15073 0
-15073 15072 0
-15073 -15070 0
c Var 'aux1151' direct represents '4' with '-15072'
15067 15069 15071 15073 -15072 0
c Encoding variable: aux1152 with domain: int(0..2) (representing constraint ((field_00004_00001=7) + (field_00004_00009=7)))
c Both direct and order encoding.
c Var 'aux1152' order represents '0' with '15074'
c Var 'aux1152' direct represents '0' with '15074'
c Var 'aux1152' order represents '1' with '15075'
-15074 15075 0
c Var 'aux1152' direct represents '1' with '15076'
15074 -15075 15076 0
-15076 15075 0
-15076 -15074 0
c Var 'aux1152' direct represents '2' with '-15075'
15074 15076 -15075 0
c Encoding variable: aux1153 with domain: int(0..2) (representing constraint ((field_00004_00008=7) + (field_00004_00002=7)))
c Both direct and order encoding.
c Var 'aux1153' order represents '0' with '15077'
c Var 'aux1153' direct represents '0' with '15077'
c Var 'aux1153' order represents '1' with '15078'
-15077 15078 0
c Var 'aux1153' direct represents '1' with '15079'
15077 -15078 15079 0
-15079 15078 0
-15079 -15077 0
c Var 'aux1153' direct represents '2' with '-15078'
15077 15079 -15078 0
c Encoding variable: aux1154 with domain: int(0..2) (representing constraint ((field_00004_00007=7) + (field_00004_00004=7)))
c Both direct and order encoding.
c Var 'aux1154' order represents '0' with '15080'
c Var 'aux1154' direct represents '0' with '15080'
c Var 'aux1154' order represents '1' with '15081'
-15080 15081 0
c Var 'aux1154' direct represents '1' with '15082'
15080 -15081 15082 0
-15082 15081 0
-15082 -15080 0
c Var 'aux1154' direct represents '2' with '-15081'
15080 15082 -15081 0
c Encoding variable: aux1155 with domain: int(0..2) (representing constraint ((field_00004_00006=7) + (field_00004_00005=7)))
c Both direct and order encoding.
c Var 'aux1155' order represents '0' with '15083'
c Var 'aux1155' direct represents '0' with '15083'
c Var 'aux1155' order represents '1' with '15084'
-15083 15084 0
c Var 'aux1155' direct represents '1' with '15085'
15083 -15084 15085 0
-15085 15084 0
-15085 -15083 0
c Var 'aux1155' direct represents '2' with '-15084'
15083 15085 -15084 0
c Encoding variable: aux1156 with domain: int(0..3) (representing constraint ((field_00004_00003=7) + aux1155))
c Both direct and order encoding.
c Var 'aux1156' order represents '0' with '15086'
c Var 'aux1156' direct represents '0' with '15086'
c Var 'aux1156' order represents '1' with '15087'
-15086 15087 0
c Var 'aux1156' direct represents '1' with '15088'
15086 -15087 15088 0
-15088 15087 0
-15088 -15086 0
c Var 'aux1156' order represents '2' with '15089'
-15087 15089 0
c Var 'aux1156' direct represents '2' with '15090'
15087 -15089 15090 0
-15090 15089 0
-15090 -15087 0
c Var 'aux1156' direct represents '3' with '-15089'
15086 15088 15090 -15089 0
c Encoding variable: aux1157 with domain: int(0..4) (representing constraint (aux1152 + aux1154))
c Both direct and order encoding.
c Var 'aux1157' order represents '0' with '15091'
c Var 'aux1157' direct represents '0' with '15091'
c Var 'aux1157' order represents '1' with '15092'
-15091 15092 0
c Var 'aux1157' direct represents '1' with '15093'
15091 -15092 15093 0
-15093 15092 0
-15093 -15091 0
c Var 'aux1157' order represents '2' with '15094'
-15092 15094 0
c Var 'aux1157' direct represents '2' with '15095'
15092 -15094 15095 0
-15095 15094 0
-15095 -15092 0
c Var 'aux1157' order represents '3' with '15096'
-15094 15096 0
c Var 'aux1157' direct represents '3' with '15097'
15094 -15096 15097 0
-15097 15096 0
-15097 -15094 0
c Var 'aux1157' direct represents '4' with '-15096'
15091 15093 15095 15097 -15096 0
c Encoding variable: aux1158 with domain: int(0..2) (representing constraint ((field_00004_00001=8) + (field_00004_00009=8)))
c Both direct and order encoding.
c Var 'aux1158' order represents '0' with '15098'
c Var 'aux1158' direct represents '0' with '15098'
c Var 'aux1158' order represents '1' with '15099'
-15098 15099 0
c Var 'aux1158' direct represents '1' with '15100'
15098 -15099 15100 0
-15100 15099 0
-15100 -15098 0
c Var 'aux1158' direct represents '2' with '-15099'
15098 15100 -15099 0
c Encoding variable: aux1159 with domain: int(0..2) (representing constraint ((field_00004_00008=8) + (field_00004_00002=8)))
c Both direct and order encoding.
c Var 'aux1159' order represents '0' with '15101'
c Var 'aux1159' direct represents '0' with '15101'
c Var 'aux1159' order represents '1' with '15102'
-15101 15102 0
c Var 'aux1159' direct represents '1' with '15103'
15101 -15102 15103 0
-15103 15102 0
-15103 -15101 0
c Var 'aux1159' direct represents '2' with '-15102'
15101 15103 -15102 0
c Encoding variable: aux1160 with domain: int(0..2) (representing constraint ((field_00004_00007=8) + (field_00004_00004=8)))
c Both direct and order encoding.
c Var 'aux1160' order represents '0' with '15104'
c Var 'aux1160' direct represents '0' with '15104'
c Var 'aux1160' order represents '1' with '15105'
-15104 15105 0
c Var 'aux1160' direct represents '1' with '15106'
15104 -15105 15106 0
-15106 15105 0
-15106 -15104 0
c Var 'aux1160' direct represents '2' with '-15105'
15104 15106 -15105 0
c Encoding variable: aux1161 with domain: int(0..2) (representing constraint ((field_00004_00006=8) + (field_00004_00005=8)))
c Both direct and order encoding.
c Var 'aux1161' order represents '0' with '15107'
c Var 'aux1161' direct represents '0' with '15107'
c Var 'aux1161' order represents '1' with '15108'
-15107 15108 0
c Var 'aux1161' direct represents '1' with '15109'
15107 -15108 15109 0
-15109 15108 0
-15109 -15107 0
c Var 'aux1161' direct represents '2' with '-15108'
15107 15109 -15108 0
c Encoding variable: aux1162 with domain: int(0..3) (representing constraint ((field_00004_00003=8) + aux1161))
c Both direct and order encoding.
c Var 'aux1162' order represents '0' with '15110'
c Var 'aux1162' direct represents '0' with '15110'
c Var 'aux1162' order represents '1' with '15111'
-15110 15111 0
c Var 'aux1162' direct represents '1' with '15112'
15110 -15111 15112 0
-15112 15111 0
-15112 -15110 0
c Var 'aux1162' order represents '2' with '15113'
-15111 15113 0
c Var 'aux1162' direct represents '2' with '15114'
15111 -15113 15114 0
-15114 15113 0
-15114 -15111 0
c Var 'aux1162' direct represents '3' with '-15113'
15110 15112 15114 -15113 0
c Encoding variable: aux1163 with domain: int(0..4) (representing constraint (aux1158 + aux1160))
c Both direct and order encoding.
c Var 'aux1163' order represents '0' with '15115'
c Var 'aux1163' direct represents '0' with '15115'
c Var 'aux1163' order represents '1' with '15116'
-15115 15116 0
c Var 'aux1163' direct represents '1' with '15117'
15115 -15116 15117 0
-15117 15116 0
-15117 -15115 0
c Var 'aux1163' order represents '2' with '15118'
-15116 15118 0
c Var 'aux1163' direct represents '2' with '15119'
15116 -15118 15119 0
-15119 15118 0
-15119 -15116 0
c Var 'aux1163' order represents '3' with '15120'
-15118 15120 0
c Var 'aux1163' direct represents '3' with '15121'
15118 -15120 15121 0
-15121 15120 0
-15121 -15118 0
c Var 'aux1163' direct represents '4' with '-15120'
15115 15117 15119 15121 -15120 0
c Encoding variable: aux1164 with domain: int(0..2) (representing constraint ((field_00004_00001=9) + (field_00004_00009=9)))
c Both direct and order encoding.
c Var 'aux1164' order represents '0' with '15122'
c Var 'aux1164' direct represents '0' with '15122'
c Var 'aux1164' order represents '1' with '15123'
-15122 15123 0
c Var 'aux1164' direct represents '1' with '15124'
15122 -15123 15124 0
-15124 15123 0
-15124 -15122 0
c Var 'aux1164' direct represents '2' with '-15123'
15122 15124 -15123 0
c Encoding variable: aux1165 with domain: int(0..2) (representing constraint ((field_00004_00008=9) + (field_00004_00002=9)))
c Both direct and order encoding.
c Var 'aux1165' order represents '0' with '15125'
c Var 'aux1165' direct represents '0' with '15125'
c Var 'aux1165' order represents '1' with '15126'
-15125 15126 0
c Var 'aux1165' direct represents '1' with '15127'
15125 -15126 15127 0
-15127 15126 0
-15127 -15125 0
c Var 'aux1165' direct represents '2' with '-15126'
15125 15127 -15126 0
c Encoding variable: aux1166 with domain: int(0..2) (representing constraint ((field_00004_00007=9) + (field_00004_00004=9)))
c Both direct and order encoding.
c Var 'aux1166' order represents '0' with '15128'
c Var 'aux1166' direct represents '0' with '15128'
c Var 'aux1166' order represents '1' with '15129'
-15128 15129 0
c Var 'aux1166' direct represents '1' with '15130'
15128 -15129 15130 0
-15130 15129 0
-15130 -15128 0
c Var 'aux1166' direct represents '2' with '-15129'
15128 15130 -15129 0
c Encoding variable: aux1167 with domain: int(0..2) (representing constraint ((field_00004_00006=9) + (field_00004_00005=9)))
c Both direct and order encoding.
c Var 'aux1167' order represents '0' with '15131'
c Var 'aux1167' direct represents '0' with '15131'
c Var 'aux1167' order represents '1' with '15132'
-15131 15132 0
c Var 'aux1167' direct represents '1' with '15133'
15131 -15132 15133 0
-15133 15132 0
-15133 -15131 0
c Var 'aux1167' direct represents '2' with '-15132'
15131 15133 -15132 0
c Encoding variable: aux1168 with domain: int(0..3) (representing constraint ((field_00004_00003=9) + aux1167))
c Both direct and order encoding.
c Var 'aux1168' order represents '0' with '15134'
c Var 'aux1168' direct represents '0' with '15134'
c Var 'aux1168' order represents '1' with '15135'
-15134 15135 0
c Var 'aux1168' direct represents '1' with '15136'
15134 -15135 15136 0
-15136 15135 0
-15136 -15134 0
c Var 'aux1168' order represents '2' with '15137'
-15135 15137 0
c Var 'aux1168' direct represents '2' with '15138'
15135 -15137 15138 0
-15138 15137 0
-15138 -15135 0
c Var 'aux1168' direct represents '3' with '-15137'
15134 15136 15138 -15137 0
c Encoding variable: aux1169 with domain: int(0..4) (representing constraint (aux1164 + aux1166))
c Both direct and order encoding.
c Var 'aux1169' order represents '0' with '15139'
c Var 'aux1169' direct represents '0' with '15139'
c Var 'aux1169' order represents '1' with '15140'
-15139 15140 0
c Var 'aux1169' direct represents '1' with '15141'
15139 -15140 15141 0
-15141 15140 0
-15141 -15139 0
c Var 'aux1169' order represents '2' with '15142'
-15140 15142 0
c Var 'aux1169' direct represents '2' with '15143'
15140 -15142 15143 0
-15143 15142 0
-15143 -15140 0
c Var 'aux1169' order represents '3' with '15144'
-15142 15144 0
c Var 'aux1169' direct represents '3' with '15145'
15142 -15144 15145 0
-15145 15144 0
-15145 -15142 0
c Var 'aux1169' direct represents '4' with '-15144'
15139 15141 15143 15145 -15144 0
c Encoding variable: aux1170 with domain: int(0..2) (representing constraint ((field_00005_00001=1) + (field_00005_00009=1)))
c Both direct and order encoding.
c Var 'aux1170' order represents '0' with '15146'
c Var 'aux1170' direct represents '0' with '15146'
c Var 'aux1170' order represents '1' with '15147'
-15146 15147 0
c Var 'aux1170' direct represents '1' with '15148'
15146 -15147 15148 0
-15148 15147 0
-15148 -15146 0
c Var 'aux1170' direct represents '2' with '-15147'
15146 15148 -15147 0
c Encoding variable: aux1171 with domain: int(0..2) (representing constraint ((field_00005_00008=1) + (field_00005_00002=1)))
c Both direct and order encoding.
c Var 'aux1171' order represents '0' with '15149'
c Var 'aux1171' direct represents '0' with '15149'
c Var 'aux1171' order represents '1' with '15150'
-15149 15150 0
c Var 'aux1171' direct represents '1' with '15151'
15149 -15150 15151 0
-15151 15150 0
-15151 -15149 0
c Var 'aux1171' direct represents '2' with '-15150'
15149 15151 -15150 0
c Encoding variable: aux1172 with domain: int(0..2) (representing constraint ((field_00005_00007=1) + (field_00005_00004=1)))
c Both direct and order encoding.
c Var 'aux1172' order represents '0' with '15152'
c Var 'aux1172' direct represents '0' with '15152'
c Var 'aux1172' order represents '1' with '15153'
-15152 15153 0
c Var 'aux1172' direct represents '1' with '15154'
15152 -15153 15154 0
-15154 15153 0
-15154 -15152 0
c Var 'aux1172' direct represents '2' with '-15153'
15152 15154 -15153 0
c Encoding variable: aux1173 with domain: int(0..2) (representing constraint ((field_00005_00006=1) + (field_00005_00005=1)))
c Both direct and order encoding.
c Var 'aux1173' order represents '0' with '15155'
c Var 'aux1173' direct represents '0' with '15155'
c Var 'aux1173' order represents '1' with '15156'
-15155 15156 0
c Var 'aux1173' direct represents '1' with '15157'
15155 -15156 15157 0
-15157 15156 0
-15157 -15155 0
c Var 'aux1173' direct represents '2' with '-15156'
15155 15157 -15156 0
c Encoding variable: aux1174 with domain: int(0..3) (representing constraint ((field_00005_00003=1) + aux1173))
c Both direct and order encoding.
c Var 'aux1174' order represents '0' with '15158'
c Var 'aux1174' direct represents '0' with '15158'
c Var 'aux1174' order represents '1' with '15159'
-15158 15159 0
c Var 'aux1174' direct represents '1' with '15160'
15158 -15159 15160 0
-15160 15159 0
-15160 -15158 0
c Var 'aux1174' order represents '2' with '15161'
-15159 15161 0
c Var 'aux1174' direct represents '2' with '15162'
15159 -15161 15162 0
-15162 15161 0
-15162 -15159 0
c Var 'aux1174' direct represents '3' with '-15161'
15158 15160 15162 -15161 0
c Encoding variable: aux1175 with domain: int(0..4) (representing constraint (aux1170 + aux1172))
c Both direct and order encoding.
c Var 'aux1175' order represents '0' with '15163'
c Var 'aux1175' direct represents '0' with '15163'
c Var 'aux1175' order represents '1' with '15164'
-15163 15164 0
c Var 'aux1175' direct represents '1' with '15165'
15163 -15164 15165 0
-15165 15164 0
-15165 -15163 0
c Var 'aux1175' order represents '2' with '15166'
-15164 15166 0
c Var 'aux1175' direct represents '2' with '15167'
15164 -15166 15167 0
-15167 15166 0
-15167 -15164 0
c Var 'aux1175' order represents '3' with '15168'
-15166 15168 0
c Var 'aux1175' direct represents '3' with '15169'
15166 -15168 15169 0
-15169 15168 0
-15169 -15166 0
c Var 'aux1175' direct represents '4' with '-15168'
15163 15165 15167 15169 -15168 0
c Encoding variable: aux1176 with domain: int(0..2) (representing constraint ((field_00005_00001=2) + (field_00005_00009=2)))
c Both direct and order encoding.
c Var 'aux1176' order represents '0' with '15170'
c Var 'aux1176' direct represents '0' with '15170'
c Var 'aux1176' order represents '1' with '15171'
-15170 15171 0
c Var 'aux1176' direct represents '1' with '15172'
15170 -15171 15172 0
-15172 15171 0
-15172 -15170 0
c Var 'aux1176' direct represents '2' with '-15171'
15170 15172 -15171 0
c Encoding variable: aux1177 with domain: int(0..2) (representing constraint ((field_00005_00008=2) + (field_00005_00002=2)))
c Both direct and order encoding.
c Var 'aux1177' order represents '0' with '15173'
c Var 'aux1177' direct represents '0' with '15173'
c Var 'aux1177' order represents '1' with '15174'
-15173 15174 0
c Var 'aux1177' direct represents '1' with '15175'
15173 -15174 15175 0
-15175 15174 0
-15175 -15173 0
c Var 'aux1177' direct represents '2' with '-15174'
15173 15175 -15174 0
c Encoding variable: aux1178 with domain: int(0..2) (representing constraint ((field_00005_00007=2) + (field_00005_00004=2)))
c Both direct and order encoding.
c Var 'aux1178' order represents '0' with '15176'
c Var 'aux1178' direct represents '0' with '15176'
c Var 'aux1178' order represents '1' with '15177'
-15176 15177 0
c Var 'aux1178' direct represents '1' with '15178'
15176 -15177 15178 0
-15178 15177 0
-15178 -15176 0
c Var 'aux1178' direct represents '2' with '-15177'
15176 15178 -15177 0
c Encoding variable: aux1179 with domain: int(0..2) (representing constraint ((field_00005_00006=2) + (field_00005_00005=2)))
c Both direct and order encoding.
c Var 'aux1179' order represents '0' with '15179'
c Var 'aux1179' direct represents '0' with '15179'
c Var 'aux1179' order represents '1' with '15180'
-15179 15180 0
c Var 'aux1179' direct represents '1' with '15181'
15179 -15180 15181 0
-15181 15180 0
-15181 -15179 0
c Var 'aux1179' direct represents '2' with '-15180'
15179 15181 -15180 0
c Encoding variable: aux1180 with domain: int(0..3) (representing constraint ((field_00005_00003=2) + aux1179))
c Both direct and order encoding.
c Var 'aux1180' order represents '0' with '15182'
c Var 'aux1180' direct represents '0' with '15182'
c Var 'aux1180' order represents '1' with '15183'
-15182 15183 0
c Var 'aux1180' direct represents '1' with '15184'
15182 -15183 15184 0
-15184 15183 0
-15184 -15182 0
c Var 'aux1180' order represents '2' with '15185'
-15183 15185 0
c Var 'aux1180' direct represents '2' with '15186'
15183 -15185 15186 0
-15186 15185 0
-15186 -15183 0
c Var 'aux1180' direct represents '3' with '-15185'
15182 15184 15186 -15185 0
c Encoding variable: aux1181 with domain: int(0..4) (representing constraint (aux1176 + aux1178))
c Both direct and order encoding.
c Var 'aux1181' order represents '0' with '15187'
c Var 'aux1181' direct represents '0' with '15187'
c Var 'aux1181' order represents '1' with '15188'
-15187 15188 0
c Var 'aux1181' direct represents '1' with '15189'
15187 -15188 15189 0
-15189 15188 0
-15189 -15187 0
c Var 'aux1181' order represents '2' with '15190'
-15188 15190 0
c Var 'aux1181' direct represents '2' with '15191'
15188 -15190 15191 0
-15191 15190 0
-15191 -15188 0
c Var 'aux1181' order represents '3' with '15192'
-15190 15192 0
c Var 'aux1181' direct represents '3' with '15193'
15190 -15192 15193 0
-15193 15192 0
-15193 -15190 0
c Var 'aux1181' direct represents '4' with '-15192'
15187 15189 15191 15193 -15192 0
c Encoding variable: aux1182 with domain: int(0..2) (representing constraint ((field_00005_00001=3) + (field_00005_00009=3)))
c Both direct and order encoding.
c Var 'aux1182' order represents '0' with '15194'
c Var 'aux1182' direct represents '0' with '15194'
c Var 'aux1182' order represents '1' with '15195'
-15194 15195 0
c Var 'aux1182' direct represents '1' with '15196'
15194 -15195 15196 0
-15196 15195 0
-15196 -15194 0
c Var 'aux1182' direct represents '2' with '-15195'
15194 15196 -15195 0
c Encoding variable: aux1183 with domain: int(0..2) (representing constraint ((field_00005_00008=3) + (field_00005_00002=3)))
c Both direct and order encoding.
c Var 'aux1183' order represents '0' with '15197'
c Var 'aux1183' direct represents '0' with '15197'
c Var 'aux1183' order represents '1' with '15198'
-15197 15198 0
c Var 'aux1183' direct represents '1' with '15199'
15197 -15198 15199 0
-15199 15198 0
-15199 -15197 0
c Var 'aux1183' direct represents '2' with '-15198'
15197 15199 -15198 0
c Encoding variable: aux1184 with domain: int(0..2) (representing constraint ((field_00005_00007=3) + (field_00005_00004=3)))
c Both direct and order encoding.
c Var 'aux1184' order represents '0' with '15200'
c Var 'aux1184' direct represents '0' with '15200'
c Var 'aux1184' order represents '1' with '15201'
-15200 15201 0
c Var 'aux1184' direct represents '1' with '15202'
15200 -15201 15202 0
-15202 15201 0
-15202 -15200 0
c Var 'aux1184' direct represents '2' with '-15201'
15200 15202 -15201 0
c Encoding variable: aux1185 with domain: int(0..2) (representing constraint ((field_00005_00006=3) + (field_00005_00005=3)))
c Both direct and order encoding.
c Var 'aux1185' order represents '0' with '15203'
c Var 'aux1185' direct represents '0' with '15203'
c Var 'aux1185' order represents '1' with '15204'
-15203 15204 0
c Var 'aux1185' direct represents '1' with '15205'
15203 -15204 15205 0
-15205 15204 0
-15205 -15203 0
c Var 'aux1185' direct represents '2' with '-15204'
15203 15205 -15204 0
c Encoding variable: aux1186 with domain: int(0..3) (representing constraint ((field_00005_00003=3) + aux1185))
c Both direct and order encoding.
c Var 'aux1186' order represents '0' with '15206'
c Var 'aux1186' direct represents '0' with '15206'
c Var 'aux1186' order represents '1' with '15207'
-15206 15207 0
c Var 'aux1186' direct represents '1' with '15208'
15206 -15207 15208 0
-15208 15207 0
-15208 -15206 0
c Var 'aux1186' order represents '2' with '15209'
-15207 15209 0
c Var 'aux1186' direct represents '2' with '15210'
15207 -15209 15210 0
-15210 15209 0
-15210 -15207 0
c Var 'aux1186' direct represents '3' with '-15209'
15206 15208 15210 -15209 0
c Encoding variable: aux1187 with domain: int(0..4) (representing constraint (aux1182 + aux1184))
c Both direct and order encoding.
c Var 'aux1187' order represents '0' with '15211'
c Var 'aux1187' direct represents '0' with '15211'
c Var 'aux1187' order represents '1' with '15212'
-15211 15212 0
c Var 'aux1187' direct represents '1' with '15213'
15211 -15212 15213 0
-15213 15212 0
-15213 -15211 0
c Var 'aux1187' order represents '2' with '15214'
-15212 15214 0
c Var 'aux1187' direct represents '2' with '15215'
15212 -15214 15215 0
-15215 15214 0
-15215 -15212 0
c Var 'aux1187' order represents '3' with '15216'
-15214 15216 0
c Var 'aux1187' direct represents '3' with '15217'
15214 -15216 15217 0
-15217 15216 0
-15217 -15214 0
c Var 'aux1187' direct represents '4' with '-15216'
15211 15213 15215 15217 -15216 0
c Encoding variable: aux1188 with domain: int(0..2) (representing constraint ((field_00005_00001=4) + (field_00005_00009=4)))
c Both direct and order encoding.
c Var 'aux1188' order represents '0' with '15218'
c Var 'aux1188' direct represents '0' with '15218'
c Var 'aux1188' order represents '1' with '15219'
-15218 15219 0
c Var 'aux1188' direct represents '1' with '15220'
15218 -15219 15220 0
-15220 15219 0
-15220 -15218 0
c Var 'aux1188' direct represents '2' with '-15219'
15218 15220 -15219 0
c Encoding variable: aux1189 with domain: int(0..2) (representing constraint ((field_00005_00008=4) + (field_00005_00002=4)))
c Both direct and order encoding.
c Var 'aux1189' order represents '0' with '15221'
c Var 'aux1189' direct represents '0' with '15221'
c Var 'aux1189' order represents '1' with '15222'
-15221 15222 0
c Var 'aux1189' direct represents '1' with '15223'
15221 -15222 15223 0
-15223 15222 0
-15223 -15221 0
c Var 'aux1189' direct represents '2' with '-15222'
15221 15223 -15222 0
c Encoding variable: aux1190 with domain: int(0..2) (representing constraint ((field_00005_00007=4) + (field_00005_00004=4)))
c Both direct and order encoding.
c Var 'aux1190' order represents '0' with '15224'
c Var 'aux1190' direct represents '0' with '15224'
c Var 'aux1190' order represents '1' with '15225'
-15224 15225 0
c Var 'aux1190' direct represents '1' with '15226'
15224 -15225 15226 0
-15226 15225 0
-15226 -15224 0
c Var 'aux1190' direct represents '2' with '-15225'
15224 15226 -15225 0
c Encoding variable: aux1191 with domain: int(0..2) (representing constraint ((field_00005_00006=4) + (field_00005_00005=4)))
c Both direct and order encoding.
c Var 'aux1191' order represents '0' with '15227'
c Var 'aux1191' direct represents '0' with '15227'
c Var 'aux1191' order represents '1' with '15228'
-15227 15228 0
c Var 'aux1191' direct represents '1' with '15229'
15227 -15228 15229 0
-15229 15228 0
-15229 -15227 0
c Var 'aux1191' direct represents '2' with '-15228'
15227 15229 -15228 0
c Encoding variable: aux1192 with domain: int(0..3) (representing constraint ((field_00005_00003=4) + aux1191))
c Both direct and order encoding.
c Var 'aux1192' order represents '0' with '15230'
c Var 'aux1192' direct represents '0' with '15230'
c Var 'aux1192' order represents '1' with '15231'
-15230 15231 0
c Var 'aux1192' direct represents '1' with '15232'
15230 -15231 15232 0
-15232 15231 0
-15232 -15230 0
c Var 'aux1192' order represents '2' with '15233'
-15231 15233 0
c Var 'aux1192' direct represents '2' with '15234'
15231 -15233 15234 0
-15234 15233 0
-15234 -15231 0
c Var 'aux1192' direct represents '3' with '-15233'
15230 15232 15234 -15233 0
c Encoding variable: aux1193 with domain: int(0..4) (representing constraint (aux1188 + aux1190))
c Both direct and order encoding.
c Var 'aux1193' order represents '0' with '15235'
c Var 'aux1193' direct represents '0' with '15235'
c Var 'aux1193' order represents '1' with '15236'
-15235 15236 0
c Var 'aux1193' direct represents '1' with '15237'
15235 -15236 15237 0
-15237 15236 0
-15237 -15235 0
c Var 'aux1193' order represents '2' with '15238'
-15236 15238 0
c Var 'aux1193' direct represents '2' with '15239'
15236 -15238 15239 0
-15239 15238 0
-15239 -15236 0
c Var 'aux1193' order represents '3' with '15240'
-15238 15240 0
c Var 'aux1193' direct represents '3' with '15241'
15238 -15240 15241 0
-15241 15240 0
-15241 -15238 0
c Var 'aux1193' direct represents '4' with '-15240'
15235 15237 15239 15241 -15240 0
c Encoding variable: aux1194 with domain: int(0..2) (representing constraint ((field_00005_00001=5) + (field_00005_00009=5)))
c Both direct and order encoding.
c Var 'aux1194' order represents '0' with '15242'
c Var 'aux1194' direct represents '0' with '15242'
c Var 'aux1194' order represents '1' with '15243'
-15242 15243 0
c Var 'aux1194' direct represents '1' with '15244'
15242 -15243 15244 0
-15244 15243 0
-15244 -15242 0
c Var 'aux1194' direct represents '2' with '-15243'
15242 15244 -15243 0
c Encoding variable: aux1195 with domain: int(0..2) (representing constraint ((field_00005_00008=5) + (field_00005_00002=5)))
c Both direct and order encoding.
c Var 'aux1195' order represents '0' with '15245'
c Var 'aux1195' direct represents '0' with '15245'
c Var 'aux1195' order represents '1' with '15246'
-15245 15246 0
c Var 'aux1195' direct represents '1' with '15247'
15245 -15246 15247 0
-15247 15246 0
-15247 -15245 0
c Var 'aux1195' direct represents '2' with '-15246'
15245 15247 -15246 0
c Encoding variable: aux1196 with domain: int(0..2) (representing constraint ((field_00005_00007=5) + (field_00005_00004=5)))
c Both direct and order encoding.
c Var 'aux1196' order represents '0' with '15248'
c Var 'aux1196' direct represents '0' with '15248'
c Var 'aux1196' order represents '1' with '15249'
-15248 15249 0
c Var 'aux1196' direct represents '1' with '15250'
15248 -15249 15250 0
-15250 15249 0
-15250 -15248 0
c Var 'aux1196' direct represents '2' with '-15249'
15248 15250 -15249 0
c Encoding variable: aux1197 with domain: int(0..2) (representing constraint ((field_00005_00006=5) + (field_00005_00005=5)))
c Both direct and order encoding.
c Var 'aux1197' order represents '0' with '15251'
c Var 'aux1197' direct represents '0' with '15251'
c Var 'aux1197' order represents '1' with '15252'
-15251 15252 0
c Var 'aux1197' direct represents '1' with '15253'
15251 -15252 15253 0
-15253 15252 0
-15253 -15251 0
c Var 'aux1197' direct represents '2' with '-15252'
15251 15253 -15252 0
c Encoding variable: aux1198 with domain: int(0..3) (representing constraint ((field_00005_00003=5) + aux1197))
c Both direct and order encoding.
c Var 'aux1198' order represents '0' with '15254'
c Var 'aux1198' direct represents '0' with '15254'
c Var 'aux1198' order represents '1' with '15255'
-15254 15255 0
c Var 'aux1198' direct represents '1' with '15256'
15254 -15255 15256 0
-15256 15255 0
-15256 -15254 0
c Var 'aux1198' order represents '2' with '15257'
-15255 15257 0
c Var 'aux1198' direct represents '2' with '15258'
15255 -15257 15258 0
-15258 15257 0
-15258 -15255 0
c Var 'aux1198' direct represents '3' with '-15257'
15254 15256 15258 -15257 0
c Encoding variable: aux1199 with domain: int(0..4) (representing constraint (aux1194 + aux1196))
c Both direct and order encoding.
c Var 'aux1199' order represents '0' with '15259'
c Var 'aux1199' direct represents '0' with '15259'
c Var 'aux1199' order represents '1' with '15260'
-15259 15260 0
c Var 'aux1199' direct represents '1' with '15261'
15259 -15260 15261 0
-15261 15260 0
-15261 -15259 0
c Var 'aux1199' order represents '2' with '15262'
-15260 15262 0
c Var 'aux1199' direct represents '2' with '15263'
15260 -15262 15263 0
-15263 15262 0
-15263 -15260 0
c Var 'aux1199' order represents '3' with '15264'
-15262 15264 0
c Var 'aux1199' direct represents '3' with '15265'
15262 -15264 15265 0
-15265 15264 0
-15265 -15262 0
c Var 'aux1199' direct represents '4' with '-15264'
15259 15261 15263 15265 -15264 0
c Encoding variable: aux1200 with domain: int(0..2) (representing constraint ((field_00005_00001=6) + (field_00005_00009=6)))
c Both direct and order encoding.
c Var 'aux1200' order represents '0' with '15266'
c Var 'aux1200' direct represents '0' with '15266'
c Var 'aux1200' order represents '1' with '15267'
-15266 15267 0
c Var 'aux1200' direct represents '1' with '15268'
15266 -15267 15268 0
-15268 15267 0
-15268 -15266 0
c Var 'aux1200' direct represents '2' with '-15267'
15266 15268 -15267 0
c Encoding variable: aux1201 with domain: int(0..2) (representing constraint ((field_00005_00008=6) + (field_00005_00002=6)))
c Both direct and order encoding.
c Var 'aux1201' order represents '0' with '15269'
c Var 'aux1201' direct represents '0' with '15269'
c Var 'aux1201' order represents '1' with '15270'
-15269 15270 0
c Var 'aux1201' direct represents '1' with '15271'
15269 -15270 15271 0
-15271 15270 0
-15271 -15269 0
c Var 'aux1201' direct represents '2' with '-15270'
15269 15271 -15270 0
c Encoding variable: aux1202 with domain: int(0..2) (representing constraint ((field_00005_00007=6) + (field_00005_00004=6)))
c Both direct and order encoding.
c Var 'aux1202' order represents '0' with '15272'
c Var 'aux1202' direct represents '0' with '15272'
c Var 'aux1202' order represents '1' with '15273'
-15272 15273 0
c Var 'aux1202' direct represents '1' with '15274'
15272 -15273 15274 0
-15274 15273 0
-15274 -15272 0
c Var 'aux1202' direct represents '2' with '-15273'
15272 15274 -15273 0
c Encoding variable: aux1203 with domain: int(0..2) (representing constraint ((field_00005_00006=6) + (field_00005_00005=6)))
c Both direct and order encoding.
c Var 'aux1203' order represents '0' with '15275'
c Var 'aux1203' direct represents '0' with '15275'
c Var 'aux1203' order represents '1' with '15276'
-15275 15276 0
c Var 'aux1203' direct represents '1' with '15277'
15275 -15276 15277 0
-15277 15276 0
-15277 -15275 0
c Var 'aux1203' direct represents '2' with '-15276'
15275 15277 -15276 0
c Encoding variable: aux1204 with domain: int(0..3) (representing constraint ((field_00005_00003=6) + aux1203))
c Both direct and order encoding.
c Var 'aux1204' order represents '0' with '15278'
c Var 'aux1204' direct represents '0' with '15278'
c Var 'aux1204' order represents '1' with '15279'
-15278 15279 0
c Var 'aux1204' direct represents '1' with '15280'
15278 -15279 15280 0
-15280 15279 0
-15280 -15278 0
c Var 'aux1204' order represents '2' with '15281'
-15279 15281 0
c Var 'aux1204' direct represents '2' with '15282'
15279 -15281 15282 0
-15282 15281 0
-15282 -15279 0
c Var 'aux1204' direct represents '3' with '-15281'
15278 15280 15282 -15281 0
c Encoding variable: aux1205 with domain: int(0..4) (representing constraint (aux1200 + aux1202))
c Both direct and order encoding.
c Var 'aux1205' order represents '0' with '15283'
c Var 'aux1205' direct represents '0' with '15283'
c Var 'aux1205' order represents '1' with '15284'
-15283 15284 0
c Var 'aux1205' direct represents '1' with '15285'
15283 -15284 15285 0
-15285 15284 0
-15285 -15283 0
c Var 'aux1205' order represents '2' with '15286'
-15284 15286 0
c Var 'aux1205' direct represents '2' with '15287'
15284 -15286 15287 0
-15287 15286 0
-15287 -15284 0
c Var 'aux1205' order represents '3' with '15288'
-15286 15288 0
c Var 'aux1205' direct represents '3' with '15289'
15286 -15288 15289 0
-15289 15288 0
-15289 -15286 0
c Var 'aux1205' direct represents '4' with '-15288'
15283 15285 15287 15289 -15288 0
c Encoding variable: aux1206 with domain: int(0..2) (representing constraint ((field_00005_00001=7) + (field_00005_00009=7)))
c Both direct and order encoding.
c Var 'aux1206' order represents '0' with '15290'
c Var 'aux1206' direct represents '0' with '15290'
c Var 'aux1206' order represents '1' with '15291'
-15290 15291 0
c Var 'aux1206' direct represents '1' with '15292'
15290 -15291 15292 0
-15292 15291 0
-15292 -15290 0
c Var 'aux1206' direct represents '2' with '-15291'
15290 15292 -15291 0
c Encoding variable: aux1207 with domain: int(0..2) (representing constraint ((field_00005_00008=7) + (field_00005_00002=7)))
c Both direct and order encoding.
c Var 'aux1207' order represents '0' with '15293'
c Var 'aux1207' direct represents '0' with '15293'
c Var 'aux1207' order represents '1' with '15294'
-15293 15294 0
c Var 'aux1207' direct represents '1' with '15295'
15293 -15294 15295 0
-15295 15294 0
-15295 -15293 0
c Var 'aux1207' direct represents '2' with '-15294'
15293 15295 -15294 0
c Encoding variable: aux1208 with domain: int(0..2) (representing constraint ((field_00005_00007=7) + (field_00005_00004=7)))
c Both direct and order encoding.
c Var 'aux1208' order represents '0' with '15296'
c Var 'aux1208' direct represents '0' with '15296'
c Var 'aux1208' order represents '1' with '15297'
-15296 15297 0
c Var 'aux1208' direct represents '1' with '15298'
15296 -15297 15298 0
-15298 15297 0
-15298 -15296 0
c Var 'aux1208' direct represents '2' with '-15297'
15296 15298 -15297 0
c Encoding variable: aux1209 with domain: int(0..2) (representing constraint ((field_00005_00006=7) + (field_00005_00005=7)))
c Both direct and order encoding.
c Var 'aux1209' order represents '0' with '15299'
c Var 'aux1209' direct represents '0' with '15299'
c Var 'aux1209' order represents '1' with '15300'
-15299 15300 0
c Var 'aux1209' direct represents '1' with '15301'
15299 -15300 15301 0
-15301 15300 0
-15301 -15299 0
c Var 'aux1209' direct represents '2' with '-15300'
15299 15301 -15300 0
c Encoding variable: aux1210 with domain: int(0..3) (representing constraint ((field_00005_00003=7) + aux1209))
c Both direct and order encoding.
c Var 'aux1210' order represents '0' with '15302'
c Var 'aux1210' direct represents '0' with '15302'
c Var 'aux1210' order represents '1' with '15303'
-15302 15303 0
c Var 'aux1210' direct represents '1' with '15304'
15302 -15303 15304 0
-15304 15303 0
-15304 -15302 0
c Var 'aux1210' order represents '2' with '15305'
-15303 15305 0
c Var 'aux1210' direct represents '2' with '15306'
15303 -15305 15306 0
-15306 15305 0
-15306 -15303 0
c Var 'aux1210' direct represents '3' with '-15305'
15302 15304 15306 -15305 0
c Encoding variable: aux1211 with domain: int(0..4) (representing constraint (aux1206 + aux1208))
c Both direct and order encoding.
c Var 'aux1211' order represents '0' with '15307'
c Var 'aux1211' direct represents '0' with '15307'
c Var 'aux1211' order represents '1' with '15308'
-15307 15308 0
c Var 'aux1211' direct represents '1' with '15309'
15307 -15308 15309 0
-15309 15308 0
-15309 -15307 0
c Var 'aux1211' order represents '2' with '15310'
-15308 15310 0
c Var 'aux1211' direct represents '2' with '15311'
15308 -15310 15311 0
-15311 15310 0
-15311 -15308 0
c Var 'aux1211' order represents '3' with '15312'
-15310 15312 0
c Var 'aux1211' direct represents '3' with '15313'
15310 -15312 15313 0
-15313 15312 0
-15313 -15310 0
c Var 'aux1211' direct represents '4' with '-15312'
15307 15309 15311 15313 -15312 0
c Encoding variable: aux1212 with domain: int(0..2) (representing constraint ((field_00005_00001=8) + (field_00005_00009=8)))
c Both direct and order encoding.
c Var 'aux1212' order represents '0' with '15314'
c Var 'aux1212' direct represents '0' with '15314'
c Var 'aux1212' order represents '1' with '15315'
-15314 15315 0
c Var 'aux1212' direct represents '1' with '15316'
15314 -15315 15316 0
-15316 15315 0
-15316 -15314 0
c Var 'aux1212' direct represents '2' with '-15315'
15314 15316 -15315 0
c Encoding variable: aux1213 with domain: int(0..2) (representing constraint ((field_00005_00008=8) + (field_00005_00002=8)))
c Both direct and order encoding.
c Var 'aux1213' order represents '0' with '15317'
c Var 'aux1213' direct represents '0' with '15317'
c Var 'aux1213' order represents '1' with '15318'
-15317 15318 0
c Var 'aux1213' direct represents '1' with '15319'
15317 -15318 15319 0
-15319 15318 0
-15319 -15317 0
c Var 'aux1213' direct represents '2' with '-15318'
15317 15319 -15318 0
c Encoding variable: aux1214 with domain: int(0..2) (representing constraint ((field_00005_00007=8) + (field_00005_00004=8)))
c Both direct and order encoding.
c Var 'aux1214' order represents '0' with '15320'
c Var 'aux1214' direct represents '0' with '15320'
c Var 'aux1214' order represents '1' with '15321'
-15320 15321 0
c Var 'aux1214' direct represents '1' with '15322'
15320 -15321 15322 0
-15322 15321 0
-15322 -15320 0
c Var 'aux1214' direct represents '2' with '-15321'
15320 15322 -15321 0
c Encoding variable: aux1215 with domain: int(0..2) (representing constraint ((field_00005_00006=8) + (field_00005_00005=8)))
c Both direct and order encoding.
c Var 'aux1215' order represents '0' with '15323'
c Var 'aux1215' direct represents '0' with '15323'
c Var 'aux1215' order represents '1' with '15324'
-15323 15324 0
c Var 'aux1215' direct represents '1' with '15325'
15323 -15324 15325 0
-15325 15324 0
-15325 -15323 0
c Var 'aux1215' direct represents '2' with '-15324'
15323 15325 -15324 0
c Encoding variable: aux1216 with domain: int(0..3) (representing constraint ((field_00005_00003=8) + aux1215))
c Both direct and order encoding.
c Var 'aux1216' order represents '0' with '15326'
c Var 'aux1216' direct represents '0' with '15326'
c Var 'aux1216' order represents '1' with '15327'
-15326 15327 0
c Var 'aux1216' direct represents '1' with '15328'
15326 -15327 15328 0
-15328 15327 0
-15328 -15326 0
c Var 'aux1216' order represents '2' with '15329'
-15327 15329 0
c Var 'aux1216' direct represents '2' with '15330'
15327 -15329 15330 0
-15330 15329 0
-15330 -15327 0
c Var 'aux1216' direct represents '3' with '-15329'
15326 15328 15330 -15329 0
c Encoding variable: aux1217 with domain: int(0..4) (representing constraint (aux1212 + aux1214))
c Both direct and order encoding.
c Var 'aux1217' order represents '0' with '15331'
c Var 'aux1217' direct represents '0' with '15331'
c Var 'aux1217' order represents '1' with '15332'
-15331 15332 0
c Var 'aux1217' direct represents '1' with '15333'
15331 -15332 15333 0
-15333 15332 0
-15333 -15331 0
c Var 'aux1217' order represents '2' with '15334'
-15332 15334 0
c Var 'aux1217' direct represents '2' with '15335'
15332 -15334 15335 0
-15335 15334 0
-15335 -15332 0
c Var 'aux1217' order represents '3' with '15336'
-15334 15336 0
c Var 'aux1217' direct represents '3' with '15337'
15334 -15336 15337 0
-15337 15336 0
-15337 -15334 0
c Var 'aux1217' direct represents '4' with '-15336'
15331 15333 15335 15337 -15336 0
c Encoding variable: aux1218 with domain: int(0..2) (representing constraint ((field_00005_00001=9) + (field_00005_00009=9)))
c Both direct and order encoding.
c Var 'aux1218' order represents '0' with '15338'
c Var 'aux1218' direct represents '0' with '15338'
c Var 'aux1218' order represents '1' with '15339'
-15338 15339 0
c Var 'aux1218' direct represents '1' with '15340'
15338 -15339 15340 0
-15340 15339 0
-15340 -15338 0
c Var 'aux1218' direct represents '2' with '-15339'
15338 15340 -15339 0
c Encoding variable: aux1219 with domain: int(0..2) (representing constraint ((field_00005_00008=9) + (field_00005_00002=9)))
c Both direct and order encoding.
c Var 'aux1219' order represents '0' with '15341'
c Var 'aux1219' direct represents '0' with '15341'
c Var 'aux1219' order represents '1' with '15342'
-15341 15342 0
c Var 'aux1219' direct represents '1' with '15343'
15341 -15342 15343 0
-15343 15342 0
-15343 -15341 0
c Var 'aux1219' direct represents '2' with '-15342'
15341 15343 -15342 0
c Encoding variable: aux1220 with domain: int(0..2) (representing constraint ((field_00005_00007=9) + (field_00005_00004=9)))
c Both direct and order encoding.
c Var 'aux1220' order represents '0' with '15344'
c Var 'aux1220' direct represents '0' with '15344'
c Var 'aux1220' order represents '1' with '15345'
-15344 15345 0
c Var 'aux1220' direct represents '1' with '15346'
15344 -15345 15346 0
-15346 15345 0
-15346 -15344 0
c Var 'aux1220' direct represents '2' with '-15345'
15344 15346 -15345 0
c Encoding variable: aux1221 with domain: int(0..2) (representing constraint ((field_00005_00006=9) + (field_00005_00005=9)))
c Both direct and order encoding.
c Var 'aux1221' order represents '0' with '15347'
c Var 'aux1221' direct represents '0' with '15347'
c Var 'aux1221' order represents '1' with '15348'
-15347 15348 0
c Var 'aux1221' direct represents '1' with '15349'
15347 -15348 15349 0
-15349 15348 0
-15349 -15347 0
c Var 'aux1221' direct represents '2' with '-15348'
15347 15349 -15348 0
c Encoding variable: aux1222 with domain: int(0..3) (representing constraint ((field_00005_00003=9) + aux1221))
c Both direct and order encoding.
c Var 'aux1222' order represents '0' with '15350'
c Var 'aux1222' direct represents '0' with '15350'
c Var 'aux1222' order represents '1' with '15351'
-15350 15351 0
c Var 'aux1222' direct represents '1' with '15352'
15350 -15351 15352 0
-15352 15351 0
-15352 -15350 0
c Var 'aux1222' order represents '2' with '15353'
-15351 15353 0
c Var 'aux1222' direct represents '2' with '15354'
15351 -15353 15354 0
-15354 15353 0
-15354 -15351 0
c Var 'aux1222' direct represents '3' with '-15353'
15350 15352 15354 -15353 0
c Encoding variable: aux1223 with domain: int(0..4) (representing constraint (aux1218 + aux1220))
c Both direct and order encoding.
c Var 'aux1223' order represents '0' with '15355'
c Var 'aux1223' direct represents '0' with '15355'
c Var 'aux1223' order represents '1' with '15356'
-15355 15356 0
c Var 'aux1223' direct represents '1' with '15357'
15355 -15356 15357 0
-15357 15356 0
-15357 -15355 0
c Var 'aux1223' order represents '2' with '15358'
-15356 15358 0
c Var 'aux1223' direct represents '2' with '15359'
15356 -15358 15359 0
-15359 15358 0
-15359 -15356 0
c Var 'aux1223' order represents '3' with '15360'
-15358 15360 0
c Var 'aux1223' direct represents '3' with '15361'
15358 -15360 15361 0
-15361 15360 0
-15361 -15358 0
c Var 'aux1223' direct represents '4' with '-15360'
15355 15357 15359 15361 -15360 0
c Encoding variable: aux1224 with domain: int(0..2) (representing constraint ((field_00006_00001=1) + (field_00006_00009=1)))
c Both direct and order encoding.
c Var 'aux1224' order represents '0' with '15362'
c Var 'aux1224' direct represents '0' with '15362'
c Var 'aux1224' order represents '1' with '15363'
-15362 15363 0
c Var 'aux1224' direct represents '1' with '15364'
15362 -15363 15364 0
-15364 15363 0
-15364 -15362 0
c Var 'aux1224' direct represents '2' with '-15363'
15362 15364 -15363 0
c Encoding variable: aux1225 with domain: int(0..2) (representing constraint ((field_00006_00008=1) + (field_00006_00002=1)))
c Both direct and order encoding.
c Var 'aux1225' order represents '0' with '15365'
c Var 'aux1225' direct represents '0' with '15365'
c Var 'aux1225' order represents '1' with '15366'
-15365 15366 0
c Var 'aux1225' direct represents '1' with '15367'
15365 -15366 15367 0
-15367 15366 0
-15367 -15365 0
c Var 'aux1225' direct represents '2' with '-15366'
15365 15367 -15366 0
c Encoding variable: aux1226 with domain: int(0..2) (representing constraint ((field_00006_00007=1) + (field_00006_00004=1)))
c Both direct and order encoding.
c Var 'aux1226' order represents '0' with '15368'
c Var 'aux1226' direct represents '0' with '15368'
c Var 'aux1226' order represents '1' with '15369'
-15368 15369 0
c Var 'aux1226' direct represents '1' with '15370'
15368 -15369 15370 0
-15370 15369 0
-15370 -15368 0
c Var 'aux1226' direct represents '2' with '-15369'
15368 15370 -15369 0
c Encoding variable: aux1227 with domain: int(0..2) (representing constraint ((field_00006_00006=1) + (field_00006_00005=1)))
c Both direct and order encoding.
c Var 'aux1227' order represents '0' with '15371'
c Var 'aux1227' direct represents '0' with '15371'
c Var 'aux1227' order represents '1' with '15372'
-15371 15372 0
c Var 'aux1227' direct represents '1' with '15373'
15371 -15372 15373 0
-15373 15372 0
-15373 -15371 0
c Var 'aux1227' direct represents '2' with '-15372'
15371 15373 -15372 0
c Encoding variable: aux1228 with domain: int(0..3) (representing constraint ((field_00006_00003=1) + aux1227))
c Both direct and order encoding.
c Var 'aux1228' order represents '0' with '15374'
c Var 'aux1228' direct represents '0' with '15374'
c Var 'aux1228' order represents '1' with '15375'
-15374 15375 0
c Var 'aux1228' direct represents '1' with '15376'
15374 -15375 15376 0
-15376 15375 0
-15376 -15374 0
c Var 'aux1228' order represents '2' with '15377'
-15375 15377 0
c Var 'aux1228' direct represents '2' with '15378'
15375 -15377 15378 0
-15378 15377 0
-15378 -15375 0
c Var 'aux1228' direct represents '3' with '-15377'
15374 15376 15378 -15377 0
c Encoding variable: aux1229 with domain: int(0..4) (representing constraint (aux1224 + aux1226))
c Both direct and order encoding.
c Var 'aux1229' order represents '0' with '15379'
c Var 'aux1229' direct represents '0' with '15379'
c Var 'aux1229' order represents '1' with '15380'
-15379 15380 0
c Var 'aux1229' direct represents '1' with '15381'
15379 -15380 15381 0
-15381 15380 0
-15381 -15379 0
c Var 'aux1229' order represents '2' with '15382'
-15380 15382 0
c Var 'aux1229' direct represents '2' with '15383'
15380 -15382 15383 0
-15383 15382 0
-15383 -15380 0
c Var 'aux1229' order represents '3' with '15384'
-15382 15384 0
c Var 'aux1229' direct represents '3' with '15385'
15382 -15384 15385 0
-15385 15384 0
-15385 -15382 0
c Var 'aux1229' direct represents '4' with '-15384'
15379 15381 15383 15385 -15384 0
c Encoding variable: aux1230 with domain: int(0..2) (representing constraint ((field_00006_00001=2) + (field_00006_00009=2)))
c Both direct and order encoding.
c Var 'aux1230' order represents '0' with '15386'
c Var 'aux1230' direct represents '0' with '15386'
c Var 'aux1230' order represents '1' with '15387'
-15386 15387 0
c Var 'aux1230' direct represents '1' with '15388'
15386 -15387 15388 0
-15388 15387 0
-15388 -15386 0
c Var 'aux1230' direct represents '2' with '-15387'
15386 15388 -15387 0
c Encoding variable: aux1231 with domain: int(0..2) (representing constraint ((field_00006_00008=2) + (field_00006_00002=2)))
c Both direct and order encoding.
c Var 'aux1231' order represents '0' with '15389'
c Var 'aux1231' direct represents '0' with '15389'
c Var 'aux1231' order represents '1' with '15390'
-15389 15390 0
c Var 'aux1231' direct represents '1' with '15391'
15389 -15390 15391 0
-15391 15390 0
-15391 -15389 0
c Var 'aux1231' direct represents '2' with '-15390'
15389 15391 -15390 0
c Encoding variable: aux1232 with domain: int(0..2) (representing constraint ((field_00006_00007=2) + (field_00006_00004=2)))
c Both direct and order encoding.
c Var 'aux1232' order represents '0' with '15392'
c Var 'aux1232' direct represents '0' with '15392'
c Var 'aux1232' order represents '1' with '15393'
-15392 15393 0
c Var 'aux1232' direct represents '1' with '15394'
15392 -15393 15394 0
-15394 15393 0
-15394 -15392 0
c Var 'aux1232' direct represents '2' with '-15393'
15392 15394 -15393 0
c Encoding variable: aux1233 with domain: int(0..2) (representing constraint ((field_00006_00006=2) + (field_00006_00005=2)))
c Both direct and order encoding.
c Var 'aux1233' order represents '0' with '15395'
c Var 'aux1233' direct represents '0' with '15395'
c Var 'aux1233' order represents '1' with '15396'
-15395 15396 0
c Var 'aux1233' direct represents '1' with '15397'
15395 -15396 15397 0
-15397 15396 0
-15397 -15395 0
c Var 'aux1233' direct represents '2' with '-15396'
15395 15397 -15396 0
c Encoding variable: aux1234 with domain: int(0..3) (representing constraint ((field_00006_00003=2) + aux1233))
c Both direct and order encoding.
c Var 'aux1234' order represents '0' with '15398'
c Var 'aux1234' direct represents '0' with '15398'
c Var 'aux1234' order represents '1' with '15399'
-15398 15399 0
c Var 'aux1234' direct represents '1' with '15400'
15398 -15399 15400 0
-15400 15399 0
-15400 -15398 0
c Var 'aux1234' order represents '2' with '15401'
-15399 15401 0
c Var 'aux1234' direct represents '2' with '15402'
15399 -15401 15402 0
-15402 15401 0
-15402 -15399 0
c Var 'aux1234' direct represents '3' with '-15401'
15398 15400 15402 -15401 0
c Encoding variable: aux1235 with domain: int(0..4) (representing constraint (aux1230 + aux1232))
c Both direct and order encoding.
c Var 'aux1235' order represents '0' with '15403'
c Var 'aux1235' direct represents '0' with '15403'
c Var 'aux1235' order represents '1' with '15404'
-15403 15404 0
c Var 'aux1235' direct represents '1' with '15405'
15403 -15404 15405 0
-15405 15404 0
-15405 -15403 0
c Var 'aux1235' order represents '2' with '15406'
-15404 15406 0
c Var 'aux1235' direct represents '2' with '15407'
15404 -15406 15407 0
-15407 15406 0
-15407 -15404 0
c Var 'aux1235' order represents '3' with '15408'
-15406 15408 0
c Var 'aux1235' direct represents '3' with '15409'
15406 -15408 15409 0
-15409 15408 0
-15409 -15406 0
c Var 'aux1235' direct represents '4' with '-15408'
15403 15405 15407 15409 -15408 0
c Encoding variable: aux1236 with domain: int(0..2) (representing constraint ((field_00006_00001=3) + (field_00006_00009=3)))
c Both direct and order encoding.
c Var 'aux1236' order represents '0' with '15410'
c Var 'aux1236' direct represents '0' with '15410'
c Var 'aux1236' order represents '1' with '15411'
-15410 15411 0
c Var 'aux1236' direct represents '1' with '15412'
15410 -15411 15412 0
-15412 15411 0
-15412 -15410 0
c Var 'aux1236' direct represents '2' with '-15411'
15410 15412 -15411 0
c Encoding variable: aux1237 with domain: int(0..2) (representing constraint ((field_00006_00008=3) + (field_00006_00002=3)))
c Both direct and order encoding.
c Var 'aux1237' order represents '0' with '15413'
c Var 'aux1237' direct represents '0' with '15413'
c Var 'aux1237' order represents '1' with '15414'
-15413 15414 0
c Var 'aux1237' direct represents '1' with '15415'
15413 -15414 15415 0
-15415 15414 0
-15415 -15413 0
c Var 'aux1237' direct represents '2' with '-15414'
15413 15415 -15414 0
c Encoding variable: aux1238 with domain: int(0..2) (representing constraint ((field_00006_00007=3) + (field_00006_00004=3)))
c Both direct and order encoding.
c Var 'aux1238' order represents '0' with '15416'
c Var 'aux1238' direct represents '0' with '15416'
c Var 'aux1238' order represents '1' with '15417'
-15416 15417 0
c Var 'aux1238' direct represents '1' with '15418'
15416 -15417 15418 0
-15418 15417 0
-15418 -15416 0
c Var 'aux1238' direct represents '2' with '-15417'
15416 15418 -15417 0
c Encoding variable: aux1239 with domain: int(0..2) (representing constraint ((field_00006_00006=3) + (field_00006_00005=3)))
c Both direct and order encoding.
c Var 'aux1239' order represents '0' with '15419'
c Var 'aux1239' direct represents '0' with '15419'
c Var 'aux1239' order represents '1' with '15420'
-15419 15420 0
c Var 'aux1239' direct represents '1' with '15421'
15419 -15420 15421 0
-15421 15420 0
-15421 -15419 0
c Var 'aux1239' direct represents '2' with '-15420'
15419 15421 -15420 0
c Encoding variable: aux1240 with domain: int(0..3) (representing constraint ((field_00006_00003=3) + aux1239))
c Both direct and order encoding.
c Var 'aux1240' order represents '0' with '15422'
c Var 'aux1240' direct represents '0' with '15422'
c Var 'aux1240' order represents '1' with '15423'
-15422 15423 0
c Var 'aux1240' direct represents '1' with '15424'
15422 -15423 15424 0
-15424 15423 0
-15424 -15422 0
c Var 'aux1240' order represents '2' with '15425'
-15423 15425 0
c Var 'aux1240' direct represents '2' with '15426'
15423 -15425 15426 0
-15426 15425 0
-15426 -15423 0
c Var 'aux1240' direct represents '3' with '-15425'
15422 15424 15426 -15425 0
c Encoding variable: aux1241 with domain: int(0..4) (representing constraint (aux1236 + aux1238))
c Both direct and order encoding.
c Var 'aux1241' order represents '0' with '15427'
c Var 'aux1241' direct represents '0' with '15427'
c Var 'aux1241' order represents '1' with '15428'
-15427 15428 0
c Var 'aux1241' direct represents '1' with '15429'
15427 -15428 15429 0
-15429 15428 0
-15429 -15427 0
c Var 'aux1241' order represents '2' with '15430'
-15428 15430 0
c Var 'aux1241' direct represents '2' with '15431'
15428 -15430 15431 0
-15431 15430 0
-15431 -15428 0
c Var 'aux1241' order represents '3' with '15432'
-15430 15432 0
c Var 'aux1241' direct represents '3' with '15433'
15430 -15432 15433 0
-15433 15432 0
-15433 -15430 0
c Var 'aux1241' direct represents '4' with '-15432'
15427 15429 15431 15433 -15432 0
c Encoding variable: aux1242 with domain: int(0..2) (representing constraint ((field_00006_00001=4) + (field_00006_00009=4)))
c Both direct and order encoding.
c Var 'aux1242' order represents '0' with '15434'
c Var 'aux1242' direct represents '0' with '15434'
c Var 'aux1242' order represents '1' with '15435'
-15434 15435 0
c Var 'aux1242' direct represents '1' with '15436'
15434 -15435 15436 0
-15436 15435 0
-15436 -15434 0
c Var 'aux1242' direct represents '2' with '-15435'
15434 15436 -15435 0
c Encoding variable: aux1243 with domain: int(0..2) (representing constraint ((field_00006_00008=4) + (field_00006_00002=4)))
c Both direct and order encoding.
c Var 'aux1243' order represents '0' with '15437'
c Var 'aux1243' direct represents '0' with '15437'
c Var 'aux1243' order represents '1' with '15438'
-15437 15438 0
c Var 'aux1243' direct represents '1' with '15439'
15437 -15438 15439 0
-15439 15438 0
-15439 -15437 0
c Var 'aux1243' direct represents '2' with '-15438'
15437 15439 -15438 0
c Encoding variable: aux1244 with domain: int(0..2) (representing constraint ((field_00006_00007=4) + (field_00006_00004=4)))
c Both direct and order encoding.
c Var 'aux1244' order represents '0' with '15440'
c Var 'aux1244' direct represents '0' with '15440'
c Var 'aux1244' order represents '1' with '15441'
-15440 15441 0
c Var 'aux1244' direct represents '1' with '15442'
15440 -15441 15442 0
-15442 15441 0
-15442 -15440 0
c Var 'aux1244' direct represents '2' with '-15441'
15440 15442 -15441 0
c Encoding variable: aux1245 with domain: int(0..2) (representing constraint ((field_00006_00006=4) + (field_00006_00005=4)))
c Both direct and order encoding.
c Var 'aux1245' order represents '0' with '15443'
c Var 'aux1245' direct represents '0' with '15443'
c Var 'aux1245' order represents '1' with '15444'
-15443 15444 0
c Var 'aux1245' direct represents '1' with '15445'
15443 -15444 15445 0
-15445 15444 0
-15445 -15443 0
c Var 'aux1245' direct represents '2' with '-15444'
15443 15445 -15444 0
c Encoding variable: aux1246 with domain: int(0..3) (representing constraint ((field_00006_00003=4) + aux1245))
c Both direct and order encoding.
c Var 'aux1246' order represents '0' with '15446'
c Var 'aux1246' direct represents '0' with '15446'
c Var 'aux1246' order represents '1' with '15447'
-15446 15447 0
c Var 'aux1246' direct represents '1' with '15448'
15446 -15447 15448 0
-15448 15447 0
-15448 -15446 0
c Var 'aux1246' order represents '2' with '15449'
-15447 15449 0
c Var 'aux1246' direct represents '2' with '15450'
15447 -15449 15450 0
-15450 15449 0
-15450 -15447 0
c Var 'aux1246' direct represents '3' with '-15449'
15446 15448 15450 -15449 0
c Encoding variable: aux1247 with domain: int(0..4) (representing constraint (aux1242 + aux1244))
c Both direct and order encoding.
c Var 'aux1247' order represents '0' with '15451'
c Var 'aux1247' direct represents '0' with '15451'
c Var 'aux1247' order represents '1' with '15452'
-15451 15452 0
c Var 'aux1247' direct represents '1' with '15453'
15451 -15452 15453 0
-15453 15452 0
-15453 -15451 0
c Var 'aux1247' order represents '2' with '15454'
-15452 15454 0
c Var 'aux1247' direct represents '2' with '15455'
15452 -15454 15455 0
-15455 15454 0
-15455 -15452 0
c Var 'aux1247' order represents '3' with '15456'
-15454 15456 0
c Var 'aux1247' direct represents '3' with '15457'
15454 -15456 15457 0
-15457 15456 0
-15457 -15454 0
c Var 'aux1247' direct represents '4' with '-15456'
15451 15453 15455 15457 -15456 0
c Encoding variable: aux1248 with domain: int(0..2) (representing constraint ((field_00006_00001=5) + (field_00006_00009=5)))
c Both direct and order encoding.
c Var 'aux1248' order represents '0' with '15458'
c Var 'aux1248' direct represents '0' with '15458'
c Var 'aux1248' order represents '1' with '15459'
-15458 15459 0
c Var 'aux1248' direct represents '1' with '15460'
15458 -15459 15460 0
-15460 15459 0
-15460 -15458 0
c Var 'aux1248' direct represents '2' with '-15459'
15458 15460 -15459 0
c Encoding variable: aux1249 with domain: int(0..2) (representing constraint ((field_00006_00008=5) + (field_00006_00002=5)))
c Both direct and order encoding.
c Var 'aux1249' order represents '0' with '15461'
c Var 'aux1249' direct represents '0' with '15461'
c Var 'aux1249' order represents '1' with '15462'
-15461 15462 0
c Var 'aux1249' direct represents '1' with '15463'
15461 -15462 15463 0
-15463 15462 0
-15463 -15461 0
c Var 'aux1249' direct represents '2' with '-15462'
15461 15463 -15462 0
c Encoding variable: aux1250 with domain: int(0..2) (representing constraint ((field_00006_00007=5) + (field_00006_00004=5)))
c Both direct and order encoding.
c Var 'aux1250' order represents '0' with '15464'
c Var 'aux1250' direct represents '0' with '15464'
c Var 'aux1250' order represents '1' with '15465'
-15464 15465 0
c Var 'aux1250' direct represents '1' with '15466'
15464 -15465 15466 0
-15466 15465 0
-15466 -15464 0
c Var 'aux1250' direct represents '2' with '-15465'
15464 15466 -15465 0
c Encoding variable: aux1251 with domain: int(0..2) (representing constraint ((field_00006_00006=5) + (field_00006_00005=5)))
c Both direct and order encoding.
c Var 'aux1251' order represents '0' with '15467'
c Var 'aux1251' direct represents '0' with '15467'
c Var 'aux1251' order represents '1' with '15468'
-15467 15468 0
c Var 'aux1251' direct represents '1' with '15469'
15467 -15468 15469 0
-15469 15468 0
-15469 -15467 0
c Var 'aux1251' direct represents '2' with '-15468'
15467 15469 -15468 0
c Encoding variable: aux1252 with domain: int(0..3) (representing constraint ((field_00006_00003=5) + aux1251))
c Both direct and order encoding.
c Var 'aux1252' order represents '0' with '15470'
c Var 'aux1252' direct represents '0' with '15470'
c Var 'aux1252' order represents '1' with '15471'
-15470 15471 0
c Var 'aux1252' direct represents '1' with '15472'
15470 -15471 15472 0
-15472 15471 0
-15472 -15470 0
c Var 'aux1252' order represents '2' with '15473'
-15471 15473 0
c Var 'aux1252' direct represents '2' with '15474'
15471 -15473 15474 0
-15474 15473 0
-15474 -15471 0
c Var 'aux1252' direct represents '3' with '-15473'
15470 15472 15474 -15473 0
c Encoding variable: aux1253 with domain: int(0..4) (representing constraint (aux1248 + aux1250))
c Both direct and order encoding.
c Var 'aux1253' order represents '0' with '15475'
c Var 'aux1253' direct represents '0' with '15475'
c Var 'aux1253' order represents '1' with '15476'
-15475 15476 0
c Var 'aux1253' direct represents '1' with '15477'
15475 -15476 15477 0
-15477 15476 0
-15477 -15475 0
c Var 'aux1253' order represents '2' with '15478'
-15476 15478 0
c Var 'aux1253' direct represents '2' with '15479'
15476 -15478 15479 0
-15479 15478 0
-15479 -15476 0
c Var 'aux1253' order represents '3' with '15480'
-15478 15480 0
c Var 'aux1253' direct represents '3' with '15481'
15478 -15480 15481 0
-15481 15480 0
-15481 -15478 0
c Var 'aux1253' direct represents '4' with '-15480'
15475 15477 15479 15481 -15480 0
c Encoding variable: aux1254 with domain: int(0..2) (representing constraint ((field_00006_00001=6) + (field_00006_00009=6)))
c Both direct and order encoding.
c Var 'aux1254' order represents '0' with '15482'
c Var 'aux1254' direct represents '0' with '15482'
c Var 'aux1254' order represents '1' with '15483'
-15482 15483 0
c Var 'aux1254' direct represents '1' with '15484'
15482 -15483 15484 0
-15484 15483 0
-15484 -15482 0
c Var 'aux1254' direct represents '2' with '-15483'
15482 15484 -15483 0
c Encoding variable: aux1255 with domain: int(0..2) (representing constraint ((field_00006_00008=6) + (field_00006_00002=6)))
c Both direct and order encoding.
c Var 'aux1255' order represents '0' with '15485'
c Var 'aux1255' direct represents '0' with '15485'
c Var 'aux1255' order represents '1' with '15486'
-15485 15486 0
c Var 'aux1255' direct represents '1' with '15487'
15485 -15486 15487 0
-15487 15486 0
-15487 -15485 0
c Var 'aux1255' direct represents '2' with '-15486'
15485 15487 -15486 0
c Encoding variable: aux1256 with domain: int(0..2) (representing constraint ((field_00006_00007=6) + (field_00006_00004=6)))
c Both direct and order encoding.
c Var 'aux1256' order represents '0' with '15488'
c Var 'aux1256' direct represents '0' with '15488'
c Var 'aux1256' order represents '1' with '15489'
-15488 15489 0
c Var 'aux1256' direct represents '1' with '15490'
15488 -15489 15490 0
-15490 15489 0
-15490 -15488 0
c Var 'aux1256' direct represents '2' with '-15489'
15488 15490 -15489 0
c Encoding variable: aux1257 with domain: int(0..2) (representing constraint ((field_00006_00006=6) + (field_00006_00005=6)))
c Both direct and order encoding.
c Var 'aux1257' order represents '0' with '15491'
c Var 'aux1257' direct represents '0' with '15491'
c Var 'aux1257' order represents '1' with '15492'
-15491 15492 0
c Var 'aux1257' direct represents '1' with '15493'
15491 -15492 15493 0
-15493 15492 0
-15493 -15491 0
c Var 'aux1257' direct represents '2' with '-15492'
15491 15493 -15492 0
c Encoding variable: aux1258 with domain: int(0..3) (representing constraint ((field_00006_00003=6) + aux1257))
c Both direct and order encoding.
c Var 'aux1258' order represents '0' with '15494'
c Var 'aux1258' direct represents '0' with '15494'
c Var 'aux1258' order represents '1' with '15495'
-15494 15495 0
c Var 'aux1258' direct represents '1' with '15496'
15494 -15495 15496 0
-15496 15495 0
-15496 -15494 0
c Var 'aux1258' order represents '2' with '15497'
-15495 15497 0
c Var 'aux1258' direct represents '2' with '15498'
15495 -15497 15498 0
-15498 15497 0
-15498 -15495 0
c Var 'aux1258' direct represents '3' with '-15497'
15494 15496 15498 -15497 0
c Encoding variable: aux1259 with domain: int(0..4) (representing constraint (aux1254 + aux1256))
c Both direct and order encoding.
c Var 'aux1259' order represents '0' with '15499'
c Var 'aux1259' direct represents '0' with '15499'
c Var 'aux1259' order represents '1' with '15500'
-15499 15500 0
c Var 'aux1259' direct represents '1' with '15501'
15499 -15500 15501 0
-15501 15500 0
-15501 -15499 0
c Var 'aux1259' order represents '2' with '15502'
-15500 15502 0
c Var 'aux1259' direct represents '2' with '15503'
15500 -15502 15503 0
-15503 15502 0
-15503 -15500 0
c Var 'aux1259' order represents '3' with '15504'
-15502 15504 0
c Var 'aux1259' direct represents '3' with '15505'
15502 -15504 15505 0
-15505 15504 0
-15505 -15502 0
c Var 'aux1259' direct represents '4' with '-15504'
15499 15501 15503 15505 -15504 0
c Encoding variable: aux1260 with domain: int(0..2) (representing constraint ((field_00006_00001=7) + (field_00006_00009=7)))
c Both direct and order encoding.
c Var 'aux1260' order represents '0' with '15506'
c Var 'aux1260' direct represents '0' with '15506'
c Var 'aux1260' order represents '1' with '15507'
-15506 15507 0
c Var 'aux1260' direct represents '1' with '15508'
15506 -15507 15508 0
-15508 15507 0
-15508 -15506 0
c Var 'aux1260' direct represents '2' with '-15507'
15506 15508 -15507 0
c Encoding variable: aux1261 with domain: int(0..2) (representing constraint ((field_00006_00008=7) + (field_00006_00002=7)))
c Both direct and order encoding.
c Var 'aux1261' order represents '0' with '15509'
c Var 'aux1261' direct represents '0' with '15509'
c Var 'aux1261' order represents '1' with '15510'
-15509 15510 0
c Var 'aux1261' direct represents '1' with '15511'
15509 -15510 15511 0
-15511 15510 0
-15511 -15509 0
c Var 'aux1261' direct represents '2' with '-15510'
15509 15511 -15510 0
c Encoding variable: aux1262 with domain: int(0..2) (representing constraint ((field_00006_00007=7) + (field_00006_00004=7)))
c Both direct and order encoding.
c Var 'aux1262' order represents '0' with '15512'
c Var 'aux1262' direct represents '0' with '15512'
c Var 'aux1262' order represents '1' with '15513'
-15512 15513 0
c Var 'aux1262' direct represents '1' with '15514'
15512 -15513 15514 0
-15514 15513 0
-15514 -15512 0
c Var 'aux1262' direct represents '2' with '-15513'
15512 15514 -15513 0
c Encoding variable: aux1263 with domain: int(0..2) (representing constraint ((field_00006_00006=7) + (field_00006_00005=7)))
c Both direct and order encoding.
c Var 'aux1263' order represents '0' with '15515'
c Var 'aux1263' direct represents '0' with '15515'
c Var 'aux1263' order represents '1' with '15516'
-15515 15516 0
c Var 'aux1263' direct represents '1' with '15517'
15515 -15516 15517 0
-15517 15516 0
-15517 -15515 0
c Var 'aux1263' direct represents '2' with '-15516'
15515 15517 -15516 0
c Encoding variable: aux1264 with domain: int(0..3) (representing constraint ((field_00006_00003=7) + aux1263))
c Both direct and order encoding.
c Var 'aux1264' order represents '0' with '15518'
c Var 'aux1264' direct represents '0' with '15518'
c Var 'aux1264' order represents '1' with '15519'
-15518 15519 0
c Var 'aux1264' direct represents '1' with '15520'
15518 -15519 15520 0
-15520 15519 0
-15520 -15518 0
c Var 'aux1264' order represents '2' with '15521'
-15519 15521 0
c Var 'aux1264' direct represents '2' with '15522'
15519 -15521 15522 0
-15522 15521 0
-15522 -15519 0
c Var 'aux1264' direct represents '3' with '-15521'
15518 15520 15522 -15521 0
c Encoding variable: aux1265 with domain: int(0..4) (representing constraint (aux1260 + aux1262))
c Both direct and order encoding.
c Var 'aux1265' order represents '0' with '15523'
c Var 'aux1265' direct represents '0' with '15523'
c Var 'aux1265' order represents '1' with '15524'
-15523 15524 0
c Var 'aux1265' direct represents '1' with '15525'
15523 -15524 15525 0
-15525 15524 0
-15525 -15523 0
c Var 'aux1265' order represents '2' with '15526'
-15524 15526 0
c Var 'aux1265' direct represents '2' with '15527'
15524 -15526 15527 0
-15527 15526 0
-15527 -15524 0
c Var 'aux1265' order represents '3' with '15528'
-15526 15528 0
c Var 'aux1265' direct represents '3' with '15529'
15526 -15528 15529 0
-15529 15528 0
-15529 -15526 0
c Var 'aux1265' direct represents '4' with '-15528'
15523 15525 15527 15529 -15528 0
c Encoding variable: aux1266 with domain: int(0..2) (representing constraint ((field_00006_00001=8) + (field_00006_00009=8)))
c Both direct and order encoding.
c Var 'aux1266' order represents '0' with '15530'
c Var 'aux1266' direct represents '0' with '15530'
c Var 'aux1266' order represents '1' with '15531'
-15530 15531 0
c Var 'aux1266' direct represents '1' with '15532'
15530 -15531 15532 0
-15532 15531 0
-15532 -15530 0
c Var 'aux1266' direct represents '2' with '-15531'
15530 15532 -15531 0
c Encoding variable: aux1267 with domain: int(0..2) (representing constraint ((field_00006_00008=8) + (field_00006_00002=8)))
c Both direct and order encoding.
c Var 'aux1267' order represents '0' with '15533'
c Var 'aux1267' direct represents '0' with '15533'
c Var 'aux1267' order represents '1' with '15534'
-15533 15534 0
c Var 'aux1267' direct represents '1' with '15535'
15533 -15534 15535 0
-15535 15534 0
-15535 -15533 0
c Var 'aux1267' direct represents '2' with '-15534'
15533 15535 -15534 0
c Encoding variable: aux1268 with domain: int(0..2) (representing constraint ((field_00006_00007=8) + (field_00006_00004=8)))
c Both direct and order encoding.
c Var 'aux1268' order represents '0' with '15536'
c Var 'aux1268' direct represents '0' with '15536'
c Var 'aux1268' order represents '1' with '15537'
-15536 15537 0
c Var 'aux1268' direct represents '1' with '15538'
15536 -15537 15538 0
-15538 15537 0
-15538 -15536 0
c Var 'aux1268' direct represents '2' with '-15537'
15536 15538 -15537 0
c Encoding variable: aux1269 with domain: int(0..2) (representing constraint ((field_00006_00006=8) + (field_00006_00005=8)))
c Both direct and order encoding.
c Var 'aux1269' order represents '0' with '15539'
c Var 'aux1269' direct represents '0' with '15539'
c Var 'aux1269' order represents '1' with '15540'
-15539 15540 0
c Var 'aux1269' direct represents '1' with '15541'
15539 -15540 15541 0
-15541 15540 0
-15541 -15539 0
c Var 'aux1269' direct represents '2' with '-15540'
15539 15541 -15540 0
c Encoding variable: aux1270 with domain: int(0..3) (representing constraint ((field_00006_00003=8) + aux1269))
c Both direct and order encoding.
c Var 'aux1270' order represents '0' with '15542'
c Var 'aux1270' direct represents '0' with '15542'
c Var 'aux1270' order represents '1' with '15543'
-15542 15543 0
c Var 'aux1270' direct represents '1' with '15544'
15542 -15543 15544 0
-15544 15543 0
-15544 -15542 0
c Var 'aux1270' order represents '2' with '15545'
-15543 15545 0
c Var 'aux1270' direct represents '2' with '15546'
15543 -15545 15546 0
-15546 15545 0
-15546 -15543 0
c Var 'aux1270' direct represents '3' with '-15545'
15542 15544 15546 -15545 0
c Encoding variable: aux1271 with domain: int(0..4) (representing constraint (aux1266 + aux1268))
c Both direct and order encoding.
c Var 'aux1271' order represents '0' with '15547'
c Var 'aux1271' direct represents '0' with '15547'
c Var 'aux1271' order represents '1' with '15548'
-15547 15548 0
c Var 'aux1271' direct represents '1' with '15549'
15547 -15548 15549 0
-15549 15548 0
-15549 -15547 0
c Var 'aux1271' order represents '2' with '15550'
-15548 15550 0
c Var 'aux1271' direct represents '2' with '15551'
15548 -15550 15551 0
-15551 15550 0
-15551 -15548 0
c Var 'aux1271' order represents '3' with '15552'
-15550 15552 0
c Var 'aux1271' direct represents '3' with '15553'
15550 -15552 15553 0
-15553 15552 0
-15553 -15550 0
c Var 'aux1271' direct represents '4' with '-15552'
15547 15549 15551 15553 -15552 0
c Encoding variable: aux1272 with domain: int(0..2) (representing constraint ((field_00006_00001=9) + (field_00006_00009=9)))
c Both direct and order encoding.
c Var 'aux1272' order represents '0' with '15554'
c Var 'aux1272' direct represents '0' with '15554'
c Var 'aux1272' order represents '1' with '15555'
-15554 15555 0
c Var 'aux1272' direct represents '1' with '15556'
15554 -15555 15556 0
-15556 15555 0
-15556 -15554 0
c Var 'aux1272' direct represents '2' with '-15555'
15554 15556 -15555 0
c Encoding variable: aux1273 with domain: int(0..2) (representing constraint ((field_00006_00008=9) + (field_00006_00002=9)))
c Both direct and order encoding.
c Var 'aux1273' order represents '0' with '15557'
c Var 'aux1273' direct represents '0' with '15557'
c Var 'aux1273' order represents '1' with '15558'
-15557 15558 0
c Var 'aux1273' direct represents '1' with '15559'
15557 -15558 15559 0
-15559 15558 0
-15559 -15557 0
c Var 'aux1273' direct represents '2' with '-15558'
15557 15559 -15558 0
c Encoding variable: aux1274 with domain: int(0..2) (representing constraint ((field_00006_00007=9) + (field_00006_00004=9)))
c Both direct and order encoding.
c Var 'aux1274' order represents '0' with '15560'
c Var 'aux1274' direct represents '0' with '15560'
c Var 'aux1274' order represents '1' with '15561'
-15560 15561 0
c Var 'aux1274' direct represents '1' with '15562'
15560 -15561 15562 0
-15562 15561 0
-15562 -15560 0
c Var 'aux1274' direct represents '2' with '-15561'
15560 15562 -15561 0
c Encoding variable: aux1275 with domain: int(0..2) (representing constraint ((field_00006_00006=9) + (field_00006_00005=9)))
c Both direct and order encoding.
c Var 'aux1275' order represents '0' with '15563'
c Var 'aux1275' direct represents '0' with '15563'
c Var 'aux1275' order represents '1' with '15564'
-15563 15564 0
c Var 'aux1275' direct represents '1' with '15565'
15563 -15564 15565 0
-15565 15564 0
-15565 -15563 0
c Var 'aux1275' direct represents '2' with '-15564'
15563 15565 -15564 0
c Encoding variable: aux1276 with domain: int(0..3) (representing constraint ((field_00006_00003=9) + aux1275))
c Both direct and order encoding.
c Var 'aux1276' order represents '0' with '15566'
c Var 'aux1276' direct represents '0' with '15566'
c Var 'aux1276' order represents '1' with '15567'
-15566 15567 0
c Var 'aux1276' direct represents '1' with '15568'
15566 -15567 15568 0
-15568 15567 0
-15568 -15566 0
c Var 'aux1276' order represents '2' with '15569'
-15567 15569 0
c Var 'aux1276' direct represents '2' with '15570'
15567 -15569 15570 0
-15570 15569 0
-15570 -15567 0
c Var 'aux1276' direct represents '3' with '-15569'
15566 15568 15570 -15569 0
c Encoding variable: aux1277 with domain: int(0..4) (representing constraint (aux1272 + aux1274))
c Both direct and order encoding.
c Var 'aux1277' order represents '0' with '15571'
c Var 'aux1277' direct represents '0' with '15571'
c Var 'aux1277' order represents '1' with '15572'
-15571 15572 0
c Var 'aux1277' direct represents '1' with '15573'
15571 -15572 15573 0
-15573 15572 0
-15573 -15571 0
c Var 'aux1277' order represents '2' with '15574'
-15572 15574 0
c Var 'aux1277' direct represents '2' with '15575'
15572 -15574 15575 0
-15575 15574 0
-15575 -15572 0
c Var 'aux1277' order represents '3' with '15576'
-15574 15576 0
c Var 'aux1277' direct represents '3' with '15577'
15574 -15576 15577 0
-15577 15576 0
-15577 -15574 0
c Var 'aux1277' direct represents '4' with '-15576'
15571 15573 15575 15577 -15576 0
c Encoding variable: aux1278 with domain: int(0..2) (representing constraint ((field_00007_00001=1) + (field_00007_00009=1)))
c Both direct and order encoding.
c Var 'aux1278' order represents '0' with '15578'
c Var 'aux1278' direct represents '0' with '15578'
c Var 'aux1278' order represents '1' with '15579'
-15578 15579 0
c Var 'aux1278' direct represents '1' with '15580'
15578 -15579 15580 0
-15580 15579 0
-15580 -15578 0
c Var 'aux1278' direct represents '2' with '-15579'
15578 15580 -15579 0
c Encoding variable: aux1279 with domain: int(0..2) (representing constraint ((field_00007_00008=1) + (field_00007_00002=1)))
c Both direct and order encoding.
c Var 'aux1279' order represents '0' with '15581'
c Var 'aux1279' direct represents '0' with '15581'
c Var 'aux1279' order represents '1' with '15582'
-15581 15582 0
c Var 'aux1279' direct represents '1' with '15583'
15581 -15582 15583 0
-15583 15582 0
-15583 -15581 0
c Var 'aux1279' direct represents '2' with '-15582'
15581 15583 -15582 0
c Encoding variable: aux1280 with domain: int(0..2) (representing constraint ((field_00007_00007=1) + (field_00007_00004=1)))
c Both direct and order encoding.
c Var 'aux1280' order represents '0' with '15584'
c Var 'aux1280' direct represents '0' with '15584'
c Var 'aux1280' order represents '1' with '15585'
-15584 15585 0
c Var 'aux1280' direct represents '1' with '15586'
15584 -15585 15586 0
-15586 15585 0
-15586 -15584 0
c Var 'aux1280' direct represents '2' with '-15585'
15584 15586 -15585 0
c Encoding variable: aux1281 with domain: int(0..2) (representing constraint ((field_00007_00006=1) + (field_00007_00005=1)))
c Both direct and order encoding.
c Var 'aux1281' order represents '0' with '15587'
c Var 'aux1281' direct represents '0' with '15587'
c Var 'aux1281' order represents '1' with '15588'
-15587 15588 0
c Var 'aux1281' direct represents '1' with '15589'
15587 -15588 15589 0
-15589 15588 0
-15589 -15587 0
c Var 'aux1281' direct represents '2' with '-15588'
15587 15589 -15588 0
c Encoding variable: aux1282 with domain: int(0..3) (representing constraint ((field_00007_00003=1) + aux1281))
c Both direct and order encoding.
c Var 'aux1282' order represents '0' with '15590'
c Var 'aux1282' direct represents '0' with '15590'
c Var 'aux1282' order represents '1' with '15591'
-15590 15591 0
c Var 'aux1282' direct represents '1' with '15592'
15590 -15591 15592 0
-15592 15591 0
-15592 -15590 0
c Var 'aux1282' order represents '2' with '15593'
-15591 15593 0
c Var 'aux1282' direct represents '2' with '15594'
15591 -15593 15594 0
-15594 15593 0
-15594 -15591 0
c Var 'aux1282' direct represents '3' with '-15593'
15590 15592 15594 -15593 0
c Encoding variable: aux1283 with domain: int(0..4) (representing constraint (aux1278 + aux1280))
c Both direct and order encoding.
c Var 'aux1283' order represents '0' with '15595'
c Var 'aux1283' direct represents '0' with '15595'
c Var 'aux1283' order represents '1' with '15596'
-15595 15596 0
c Var 'aux1283' direct represents '1' with '15597'
15595 -15596 15597 0
-15597 15596 0
-15597 -15595 0
c Var 'aux1283' order represents '2' with '15598'
-15596 15598 0
c Var 'aux1283' direct represents '2' with '15599'
15596 -15598 15599 0
-15599 15598 0
-15599 -15596 0
c Var 'aux1283' order represents '3' with '15600'
-15598 15600 0
c Var 'aux1283' direct represents '3' with '15601'
15598 -15600 15601 0
-15601 15600 0
-15601 -15598 0
c Var 'aux1283' direct represents '4' with '-15600'
15595 15597 15599 15601 -15600 0
c Encoding variable: aux1284 with domain: int(0..2) (representing constraint ((field_00007_00001=2) + (field_00007_00009=2)))
c Both direct and order encoding.
c Var 'aux1284' order represents '0' with '15602'
c Var 'aux1284' direct represents '0' with '15602'
c Var 'aux1284' order represents '1' with '15603'
-15602 15603 0
c Var 'aux1284' direct represents '1' with '15604'
15602 -15603 15604 0
-15604 15603 0
-15604 -15602 0
c Var 'aux1284' direct represents '2' with '-15603'
15602 15604 -15603 0
c Encoding variable: aux1285 with domain: int(0..2) (representing constraint ((field_00007_00008=2) + (field_00007_00002=2)))
c Both direct and order encoding.
c Var 'aux1285' order represents '0' with '15605'
c Var 'aux1285' direct represents '0' with '15605'
c Var 'aux1285' order represents '1' with '15606'
-15605 15606 0
c Var 'aux1285' direct represents '1' with '15607'
15605 -15606 15607 0
-15607 15606 0
-15607 -15605 0
c Var 'aux1285' direct represents '2' with '-15606'
15605 15607 -15606 0
c Encoding variable: aux1286 with domain: int(0..2) (representing constraint ((field_00007_00007=2) + (field_00007_00004=2)))
c Both direct and order encoding.
c Var 'aux1286' order represents '0' with '15608'
c Var 'aux1286' direct represents '0' with '15608'
c Var 'aux1286' order represents '1' with '15609'
-15608 15609 0
c Var 'aux1286' direct represents '1' with '15610'
15608 -15609 15610 0
-15610 15609 0
-15610 -15608 0
c Var 'aux1286' direct represents '2' with '-15609'
15608 15610 -15609 0
c Encoding variable: aux1287 with domain: int(0..2) (representing constraint ((field_00007_00006=2) + (field_00007_00005=2)))
c Both direct and order encoding.
c Var 'aux1287' order represents '0' with '15611'
c Var 'aux1287' direct represents '0' with '15611'
c Var 'aux1287' order represents '1' with '15612'
-15611 15612 0
c Var 'aux1287' direct represents '1' with '15613'
15611 -15612 15613 0
-15613 15612 0
-15613 -15611 0
c Var 'aux1287' direct represents '2' with '-15612'
15611 15613 -15612 0
c Encoding variable: aux1288 with domain: int(0..3) (representing constraint ((field_00007_00003=2) + aux1287))
c Both direct and order encoding.
c Var 'aux1288' order represents '0' with '15614'
c Var 'aux1288' direct represents '0' with '15614'
c Var 'aux1288' order represents '1' with '15615'
-15614 15615 0
c Var 'aux1288' direct represents '1' with '15616'
15614 -15615 15616 0
-15616 15615 0
-15616 -15614 0
c Var 'aux1288' order represents '2' with '15617'
-15615 15617 0
c Var 'aux1288' direct represents '2' with '15618'
15615 -15617 15618 0
-15618 15617 0
-15618 -15615 0
c Var 'aux1288' direct represents '3' with '-15617'
15614 15616 15618 -15617 0
c Encoding variable: aux1289 with domain: int(0..4) (representing constraint (aux1284 + aux1286))
c Both direct and order encoding.
c Var 'aux1289' order represents '0' with '15619'
c Var 'aux1289' direct represents '0' with '15619'
c Var 'aux1289' order represents '1' with '15620'
-15619 15620 0
c Var 'aux1289' direct represents '1' with '15621'
15619 -15620 15621 0
-15621 15620 0
-15621 -15619 0
c Var 'aux1289' order represents '2' with '15622'
-15620 15622 0
c Var 'aux1289' direct represents '2' with '15623'
15620 -15622 15623 0
-15623 15622 0
-15623 -15620 0
c Var 'aux1289' order represents '3' with '15624'
-15622 15624 0
c Var 'aux1289' direct represents '3' with '15625'
15622 -15624 15625 0
-15625 15624 0
-15625 -15622 0
c Var 'aux1289' direct represents '4' with '-15624'
15619 15621 15623 15625 -15624 0
c Encoding variable: aux1290 with domain: int(0..2) (representing constraint ((field_00007_00001=3) + (field_00007_00009=3)))
c Both direct and order encoding.
c Var 'aux1290' order represents '0' with '15626'
c Var 'aux1290' direct represents '0' with '15626'
c Var 'aux1290' order represents '1' with '15627'
-15626 15627 0
c Var 'aux1290' direct represents '1' with '15628'
15626 -15627 15628 0
-15628 15627 0
-15628 -15626 0
c Var 'aux1290' direct represents '2' with '-15627'
15626 15628 -15627 0
c Encoding variable: aux1291 with domain: int(0..2) (representing constraint ((field_00007_00008=3) + (field_00007_00002=3)))
c Both direct and order encoding.
c Var 'aux1291' order represents '0' with '15629'
c Var 'aux1291' direct represents '0' with '15629'
c Var 'aux1291' order represents '1' with '15630'
-15629 15630 0
c Var 'aux1291' direct represents '1' with '15631'
15629 -15630 15631 0
-15631 15630 0
-15631 -15629 0
c Var 'aux1291' direct represents '2' with '-15630'
15629 15631 -15630 0
c Encoding variable: aux1292 with domain: int(0..2) (representing constraint ((field_00007_00007=3) + (field_00007_00004=3)))
c Both direct and order encoding.
c Var 'aux1292' order represents '0' with '15632'
c Var 'aux1292' direct represents '0' with '15632'
c Var 'aux1292' order represents '1' with '15633'
-15632 15633 0
c Var 'aux1292' direct represents '1' with '15634'
15632 -15633 15634 0
-15634 15633 0
-15634 -15632 0
c Var 'aux1292' direct represents '2' with '-15633'
15632 15634 -15633 0
c Encoding variable: aux1293 with domain: int(0..2) (representing constraint ((field_00007_00006=3) + (field_00007_00005=3)))
c Both direct and order encoding.
c Var 'aux1293' order represents '0' with '15635'
c Var 'aux1293' direct represents '0' with '15635'
c Var 'aux1293' order represents '1' with '15636'
-15635 15636 0
c Var 'aux1293' direct represents '1' with '15637'
15635 -15636 15637 0
-15637 15636 0
-15637 -15635 0
c Var 'aux1293' direct represents '2' with '-15636'
15635 15637 -15636 0
c Encoding variable: aux1294 with domain: int(0..3) (representing constraint ((field_00007_00003=3) + aux1293))
c Both direct and order encoding.
c Var 'aux1294' order represents '0' with '15638'
c Var 'aux1294' direct represents '0' with '15638'
c Var 'aux1294' order represents '1' with '15639'
-15638 15639 0
c Var 'aux1294' direct represents '1' with '15640'
15638 -15639 15640 0
-15640 15639 0
-15640 -15638 0
c Var 'aux1294' order represents '2' with '15641'
-15639 15641 0
c Var 'aux1294' direct represents '2' with '15642'
15639 -15641 15642 0
-15642 15641 0
-15642 -15639 0
c Var 'aux1294' direct represents '3' with '-15641'
15638 15640 15642 -15641 0
c Encoding variable: aux1295 with domain: int(0..4) (representing constraint (aux1290 + aux1292))
c Both direct and order encoding.
c Var 'aux1295' order represents '0' with '15643'
c Var 'aux1295' direct represents '0' with '15643'
c Var 'aux1295' order represents '1' with '15644'
-15643 15644 0
c Var 'aux1295' direct represents '1' with '15645'
15643 -15644 15645 0
-15645 15644 0
-15645 -15643 0
c Var 'aux1295' order represents '2' with '15646'
-15644 15646 0
c Var 'aux1295' direct represents '2' with '15647'
15644 -15646 15647 0
-15647 15646 0
-15647 -15644 0
c Var 'aux1295' order represents '3' with '15648'
-15646 15648 0
c Var 'aux1295' direct represents '3' with '15649'
15646 -15648 15649 0
-15649 15648 0
-15649 -15646 0
c Var 'aux1295' direct represents '4' with '-15648'
15643 15645 15647 15649 -15648 0
c Encoding variable: aux1296 with domain: int(0..2) (representing constraint ((field_00007_00001=4) + (field_00007_00009=4)))
c Both direct and order encoding.
c Var 'aux1296' order represents '0' with '15650'
c Var 'aux1296' direct represents '0' with '15650'
c Var 'aux1296' order represents '1' with '15651'
-15650 15651 0
c Var 'aux1296' direct represents '1' with '15652'
15650 -15651 15652 0
-15652 15651 0
-15652 -15650 0
c Var 'aux1296' direct represents '2' with '-15651'
15650 15652 -15651 0
c Encoding variable: aux1297 with domain: int(0..2) (representing constraint ((field_00007_00008=4) + (field_00007_00002=4)))
c Both direct and order encoding.
c Var 'aux1297' order represents '0' with '15653'
c Var 'aux1297' direct represents '0' with '15653'
c Var 'aux1297' order represents '1' with '15654'
-15653 15654 0
c Var 'aux1297' direct represents '1' with '15655'
15653 -15654 15655 0
-15655 15654 0
-15655 -15653 0
c Var 'aux1297' direct represents '2' with '-15654'
15653 15655 -15654 0
c Encoding variable: aux1298 with domain: int(0..2) (representing constraint ((field_00007_00007=4) + (field_00007_00004=4)))
c Both direct and order encoding.
c Var 'aux1298' order represents '0' with '15656'
c Var 'aux1298' direct represents '0' with '15656'
c Var 'aux1298' order represents '1' with '15657'
-15656 15657 0
c Var 'aux1298' direct represents '1' with '15658'
15656 -15657 15658 0
-15658 15657 0
-15658 -15656 0
c Var 'aux1298' direct represents '2' with '-15657'
15656 15658 -15657 0
c Encoding variable: aux1299 with domain: int(0..2) (representing constraint ((field_00007_00006=4) + (field_00007_00005=4)))
c Both direct and order encoding.
c Var 'aux1299' order represents '0' with '15659'
c Var 'aux1299' direct represents '0' with '15659'
c Var 'aux1299' order represents '1' with '15660'
-15659 15660 0
c Var 'aux1299' direct represents '1' with '15661'
15659 -15660 15661 0
-15661 15660 0
-15661 -15659 0
c Var 'aux1299' direct represents '2' with '-15660'
15659 15661 -15660 0
c Encoding variable: aux1300 with domain: int(0..3) (representing constraint ((field_00007_00003=4) + aux1299))
c Both direct and order encoding.
c Var 'aux1300' order represents '0' with '15662'
c Var 'aux1300' direct represents '0' with '15662'
c Var 'aux1300' order represents '1' with '15663'
-15662 15663 0
c Var 'aux1300' direct represents '1' with '15664'
15662 -15663 15664 0
-15664 15663 0
-15664 -15662 0
c Var 'aux1300' order represents '2' with '15665'
-15663 15665 0
c Var 'aux1300' direct represents '2' with '15666'
15663 -15665 15666 0
-15666 15665 0
-15666 -15663 0
c Var 'aux1300' direct represents '3' with '-15665'
15662 15664 15666 -15665 0
c Encoding variable: aux1301 with domain: int(0..4) (representing constraint (aux1296 + aux1298))
c Both direct and order encoding.
c Var 'aux1301' order represents '0' with '15667'
c Var 'aux1301' direct represents '0' with '15667'
c Var 'aux1301' order represents '1' with '15668'
-15667 15668 0
c Var 'aux1301' direct represents '1' with '15669'
15667 -15668 15669 0
-15669 15668 0
-15669 -15667 0
c Var 'aux1301' order represents '2' with '15670'
-15668 15670 0
c Var 'aux1301' direct represents '2' with '15671'
15668 -15670 15671 0
-15671 15670 0
-15671 -15668 0
c Var 'aux1301' order represents '3' with '15672'
-15670 15672 0
c Var 'aux1301' direct represents '3' with '15673'
15670 -15672 15673 0
-15673 15672 0
-15673 -15670 0
c Var 'aux1301' direct represents '4' with '-15672'
15667 15669 15671 15673 -15672 0
c Encoding variable: aux1302 with domain: int(0..2) (representing constraint ((field_00007_00001=5) + (field_00007_00009=5)))
c Both direct and order encoding.
c Var 'aux1302' order represents '0' with '15674'
c Var 'aux1302' direct represents '0' with '15674'
c Var 'aux1302' order represents '1' with '15675'
-15674 15675 0
c Var 'aux1302' direct represents '1' with '15676'
15674 -15675 15676 0
-15676 15675 0
-15676 -15674 0
c Var 'aux1302' direct represents '2' with '-15675'
15674 15676 -15675 0
c Encoding variable: aux1303 with domain: int(0..2) (representing constraint ((field_00007_00008=5) + (field_00007_00002=5)))
c Both direct and order encoding.
c Var 'aux1303' order represents '0' with '15677'
c Var 'aux1303' direct represents '0' with '15677'
c Var 'aux1303' order represents '1' with '15678'
-15677 15678 0
c Var 'aux1303' direct represents '1' with '15679'
15677 -15678 15679 0
-15679 15678 0
-15679 -15677 0
c Var 'aux1303' direct represents '2' with '-15678'
15677 15679 -15678 0
c Encoding variable: aux1304 with domain: int(0..2) (representing constraint ((field_00007_00007=5) + (field_00007_00004=5)))
c Both direct and order encoding.
c Var 'aux1304' order represents '0' with '15680'
c Var 'aux1304' direct represents '0' with '15680'
c Var 'aux1304' order represents '1' with '15681'
-15680 15681 0
c Var 'aux1304' direct represents '1' with '15682'
15680 -15681 15682 0
-15682 15681 0
-15682 -15680 0
c Var 'aux1304' direct represents '2' with '-15681'
15680 15682 -15681 0
c Encoding variable: aux1305 with domain: int(0..2) (representing constraint ((field_00007_00006=5) + (field_00007_00005=5)))
c Both direct and order encoding.
c Var 'aux1305' order represents '0' with '15683'
c Var 'aux1305' direct represents '0' with '15683'
c Var 'aux1305' order represents '1' with '15684'
-15683 15684 0
c Var 'aux1305' direct represents '1' with '15685'
15683 -15684 15685 0
-15685 15684 0
-15685 -15683 0
c Var 'aux1305' direct represents '2' with '-15684'
15683 15685 -15684 0
c Encoding variable: aux1306 with domain: int(0..3) (representing constraint ((field_00007_00003=5) + aux1305))
c Both direct and order encoding.
c Var 'aux1306' order represents '0' with '15686'
c Var 'aux1306' direct represents '0' with '15686'
c Var 'aux1306' order represents '1' with '15687'
-15686 15687 0
c Var 'aux1306' direct represents '1' with '15688'
15686 -15687 15688 0
-15688 15687 0
-15688 -15686 0
c Var 'aux1306' order represents '2' with '15689'
-15687 15689 0
c Var 'aux1306' direct represents '2' with '15690'
15687 -15689 15690 0
-15690 15689 0
-15690 -15687 0
c Var 'aux1306' direct represents '3' with '-15689'
15686 15688 15690 -15689 0
c Encoding variable: aux1307 with domain: int(0..4) (representing constraint (aux1302 + aux1304))
c Both direct and order encoding.
c Var 'aux1307' order represents '0' with '15691'
c Var 'aux1307' direct represents '0' with '15691'
c Var 'aux1307' order represents '1' with '15692'
-15691 15692 0
c Var 'aux1307' direct represents '1' with '15693'
15691 -15692 15693 0
-15693 15692 0
-15693 -15691 0
c Var 'aux1307' order represents '2' with '15694'
-15692 15694 0
c Var 'aux1307' direct represents '2' with '15695'
15692 -15694 15695 0
-15695 15694 0
-15695 -15692 0
c Var 'aux1307' order represents '3' with '15696'
-15694 15696 0
c Var 'aux1307' direct represents '3' with '15697'
15694 -15696 15697 0
-15697 15696 0
-15697 -15694 0
c Var 'aux1307' direct represents '4' with '-15696'
15691 15693 15695 15697 -15696 0
c Encoding variable: aux1308 with domain: int(0..2) (representing constraint ((field_00007_00001=6) + (field_00007_00009=6)))
c Both direct and order encoding.
c Var 'aux1308' order represents '0' with '15698'
c Var 'aux1308' direct represents '0' with '15698'
c Var 'aux1308' order represents '1' with '15699'
-15698 15699 0
c Var 'aux1308' direct represents '1' with '15700'
15698 -15699 15700 0
-15700 15699 0
-15700 -15698 0
c Var 'aux1308' direct represents '2' with '-15699'
15698 15700 -15699 0
c Encoding variable: aux1309 with domain: int(0..2) (representing constraint ((field_00007_00008=6) + (field_00007_00002=6)))
c Both direct and order encoding.
c Var 'aux1309' order represents '0' with '15701'
c Var 'aux1309' direct represents '0' with '15701'
c Var 'aux1309' order represents '1' with '15702'
-15701 15702 0
c Var 'aux1309' direct represents '1' with '15703'
15701 -15702 15703 0
-15703 15702 0
-15703 -15701 0
c Var 'aux1309' direct represents '2' with '-15702'
15701 15703 -15702 0
c Encoding variable: aux1310 with domain: int(0..2) (representing constraint ((field_00007_00007=6) + (field_00007_00004=6)))
c Both direct and order encoding.
c Var 'aux1310' order represents '0' with '15704'
c Var 'aux1310' direct represents '0' with '15704'
c Var 'aux1310' order represents '1' with '15705'
-15704 15705 0
c Var 'aux1310' direct represents '1' with '15706'
15704 -15705 15706 0
-15706 15705 0
-15706 -15704 0
c Var 'aux1310' direct represents '2' with '-15705'
15704 15706 -15705 0
c Encoding variable: aux1311 with domain: int(0..2) (representing constraint ((field_00007_00006=6) + (field_00007_00005=6)))
c Both direct and order encoding.
c Var 'aux1311' order represents '0' with '15707'
c Var 'aux1311' direct represents '0' with '15707'
c Var 'aux1311' order represents '1' with '15708'
-15707 15708 0
c Var 'aux1311' direct represents '1' with '15709'
15707 -15708 15709 0
-15709 15708 0
-15709 -15707 0
c Var 'aux1311' direct represents '2' with '-15708'
15707 15709 -15708 0
c Encoding variable: aux1312 with domain: int(0..3) (representing constraint ((field_00007_00003=6) + aux1311))
c Both direct and order encoding.
c Var 'aux1312' order represents '0' with '15710'
c Var 'aux1312' direct represents '0' with '15710'
c Var 'aux1312' order represents '1' with '15711'
-15710 15711 0
c Var 'aux1312' direct represents '1' with '15712'
15710 -15711 15712 0
-15712 15711 0
-15712 -15710 0
c Var 'aux1312' order represents '2' with '15713'
-15711 15713 0
c Var 'aux1312' direct represents '2' with '15714'
15711 -15713 15714 0
-15714 15713 0
-15714 -15711 0
c Var 'aux1312' direct represents '3' with '-15713'
15710 15712 15714 -15713 0
c Encoding variable: aux1313 with domain: int(0..4) (representing constraint (aux1308 + aux1310))
c Both direct and order encoding.
c Var 'aux1313' order represents '0' with '15715'
c Var 'aux1313' direct represents '0' with '15715'
c Var 'aux1313' order represents '1' with '15716'
-15715 15716 0
c Var 'aux1313' direct represents '1' with '15717'
15715 -15716 15717 0
-15717 15716 0
-15717 -15715 0
c Var 'aux1313' order represents '2' with '15718'
-15716 15718 0
c Var 'aux1313' direct represents '2' with '15719'
15716 -15718 15719 0
-15719 15718 0
-15719 -15716 0
c Var 'aux1313' order represents '3' with '15720'
-15718 15720 0
c Var 'aux1313' direct represents '3' with '15721'
15718 -15720 15721 0
-15721 15720 0
-15721 -15718 0
c Var 'aux1313' direct represents '4' with '-15720'
15715 15717 15719 15721 -15720 0
c Encoding variable: aux1314 with domain: int(0..2) (representing constraint ((field_00007_00001=7) + (field_00007_00009=7)))
c Both direct and order encoding.
c Var 'aux1314' order represents '0' with '15722'
c Var 'aux1314' direct represents '0' with '15722'
c Var 'aux1314' order represents '1' with '15723'
-15722 15723 0
c Var 'aux1314' direct represents '1' with '15724'
15722 -15723 15724 0
-15724 15723 0
-15724 -15722 0
c Var 'aux1314' direct represents '2' with '-15723'
15722 15724 -15723 0
c Encoding variable: aux1315 with domain: int(0..2) (representing constraint ((field_00007_00008=7) + (field_00007_00002=7)))
c Both direct and order encoding.
c Var 'aux1315' order represents '0' with '15725'
c Var 'aux1315' direct represents '0' with '15725'
c Var 'aux1315' order represents '1' with '15726'
-15725 15726 0
c Var 'aux1315' direct represents '1' with '15727'
15725 -15726 15727 0
-15727 15726 0
-15727 -15725 0
c Var 'aux1315' direct represents '2' with '-15726'
15725 15727 -15726 0
c Encoding variable: aux1316 with domain: int(0..2) (representing constraint ((field_00007_00007=7) + (field_00007_00004=7)))
c Both direct and order encoding.
c Var 'aux1316' order represents '0' with '15728'
c Var 'aux1316' direct represents '0' with '15728'
c Var 'aux1316' order represents '1' with '15729'
-15728 15729 0
c Var 'aux1316' direct represents '1' with '15730'
15728 -15729 15730 0
-15730 15729 0
-15730 -15728 0
c Var 'aux1316' direct represents '2' with '-15729'
15728 15730 -15729 0
c Encoding variable: aux1317 with domain: int(0..2) (representing constraint ((field_00007_00006=7) + (field_00007_00005=7)))
c Both direct and order encoding.
c Var 'aux1317' order represents '0' with '15731'
c Var 'aux1317' direct represents '0' with '15731'
c Var 'aux1317' order represents '1' with '15732'
-15731 15732 0
c Var 'aux1317' direct represents '1' with '15733'
15731 -15732 15733 0
-15733 15732 0
-15733 -15731 0
c Var 'aux1317' direct represents '2' with '-15732'
15731 15733 -15732 0
c Encoding variable: aux1318 with domain: int(0..3) (representing constraint ((field_00007_00003=7) + aux1317))
c Both direct and order encoding.
c Var 'aux1318' order represents '0' with '15734'
c Var 'aux1318' direct represents '0' with '15734'
c Var 'aux1318' order represents '1' with '15735'
-15734 15735 0
c Var 'aux1318' direct represents '1' with '15736'
15734 -15735 15736 0
-15736 15735 0
-15736 -15734 0
c Var 'aux1318' order represents '2' with '15737'
-15735 15737 0
c Var 'aux1318' direct represents '2' with '15738'
15735 -15737 15738 0
-15738 15737 0
-15738 -15735 0
c Var 'aux1318' direct represents '3' with '-15737'
15734 15736 15738 -15737 0
c Encoding variable: aux1319 with domain: int(0..4) (representing constraint (aux1314 + aux1316))
c Both direct and order encoding.
c Var 'aux1319' order represents '0' with '15739'
c Var 'aux1319' direct represents '0' with '15739'
c Var 'aux1319' order represents '1' with '15740'
-15739 15740 0
c Var 'aux1319' direct represents '1' with '15741'
15739 -15740 15741 0
-15741 15740 0
-15741 -15739 0
c Var 'aux1319' order represents '2' with '15742'
-15740 15742 0
c Var 'aux1319' direct represents '2' with '15743'
15740 -15742 15743 0
-15743 15742 0
-15743 -15740 0
c Var 'aux1319' order represents '3' with '15744'
-15742 15744 0
c Var 'aux1319' direct represents '3' with '15745'
15742 -15744 15745 0
-15745 15744 0
-15745 -15742 0
c Var 'aux1319' direct represents '4' with '-15744'
15739 15741 15743 15745 -15744 0
c Encoding variable: aux1320 with domain: int(0..2) (representing constraint ((field_00007_00001=8) + (field_00007_00009=8)))
c Both direct and order encoding.
c Var 'aux1320' order represents '0' with '15746'
c Var 'aux1320' direct represents '0' with '15746'
c Var 'aux1320' order represents '1' with '15747'
-15746 15747 0
c Var 'aux1320' direct represents '1' with '15748'
15746 -15747 15748 0
-15748 15747 0
-15748 -15746 0
c Var 'aux1320' direct represents '2' with '-15747'
15746 15748 -15747 0
c Encoding variable: aux1321 with domain: int(0..2) (representing constraint ((field_00007_00008=8) + (field_00007_00002=8)))
c Both direct and order encoding.
c Var 'aux1321' order represents '0' with '15749'
c Var 'aux1321' direct represents '0' with '15749'
c Var 'aux1321' order represents '1' with '15750'
-15749 15750 0
c Var 'aux1321' direct represents '1' with '15751'
15749 -15750 15751 0
-15751 15750 0
-15751 -15749 0
c Var 'aux1321' direct represents '2' with '-15750'
15749 15751 -15750 0
c Encoding variable: aux1322 with domain: int(0..2) (representing constraint ((field_00007_00007=8) + (field_00007_00004=8)))
c Both direct and order encoding.
c Var 'aux1322' order represents '0' with '15752'
c Var 'aux1322' direct represents '0' with '15752'
c Var 'aux1322' order represents '1' with '15753'
-15752 15753 0
c Var 'aux1322' direct represents '1' with '15754'
15752 -15753 15754 0
-15754 15753 0
-15754 -15752 0
c Var 'aux1322' direct represents '2' with '-15753'
15752 15754 -15753 0
c Encoding variable: aux1323 with domain: int(0..2) (representing constraint ((field_00007_00006=8) + (field_00007_00005=8)))
c Both direct and order encoding.
c Var 'aux1323' order represents '0' with '15755'
c Var 'aux1323' direct represents '0' with '15755'
c Var 'aux1323' order represents '1' with '15756'
-15755 15756 0
c Var 'aux1323' direct represents '1' with '15757'
15755 -15756 15757 0
-15757 15756 0
-15757 -15755 0
c Var 'aux1323' direct represents '2' with '-15756'
15755 15757 -15756 0
c Encoding variable: aux1324 with domain: int(0..3) (representing constraint ((field_00007_00003=8) + aux1323))
c Both direct and order encoding.
c Var 'aux1324' order represents '0' with '15758'
c Var 'aux1324' direct represents '0' with '15758'
c Var 'aux1324' order represents '1' with '15759'
-15758 15759 0
c Var 'aux1324' direct represents '1' with '15760'
15758 -15759 15760 0
-15760 15759 0
-15760 -15758 0
c Var 'aux1324' order represents '2' with '15761'
-15759 15761 0
c Var 'aux1324' direct represents '2' with '15762'
15759 -15761 15762 0
-15762 15761 0
-15762 -15759 0
c Var 'aux1324' direct represents '3' with '-15761'
15758 15760 15762 -15761 0
c Encoding variable: aux1325 with domain: int(0..4) (representing constraint (aux1320 + aux1322))
c Both direct and order encoding.
c Var 'aux1325' order represents '0' with '15763'
c Var 'aux1325' direct represents '0' with '15763'
c Var 'aux1325' order represents '1' with '15764'
-15763 15764 0
c Var 'aux1325' direct represents '1' with '15765'
15763 -15764 15765 0
-15765 15764 0
-15765 -15763 0
c Var 'aux1325' order represents '2' with '15766'
-15764 15766 0
c Var 'aux1325' direct represents '2' with '15767'
15764 -15766 15767 0
-15767 15766 0
-15767 -15764 0
c Var 'aux1325' order represents '3' with '15768'
-15766 15768 0
c Var 'aux1325' direct represents '3' with '15769'
15766 -15768 15769 0
-15769 15768 0
-15769 -15766 0
c Var 'aux1325' direct represents '4' with '-15768'
15763 15765 15767 15769 -15768 0
c Encoding variable: aux1326 with domain: int(0..2) (representing constraint ((field_00007_00001=9) + (field_00007_00009=9)))
c Both direct and order encoding.
c Var 'aux1326' order represents '0' with '15770'
c Var 'aux1326' direct represents '0' with '15770'
c Var 'aux1326' order represents '1' with '15771'
-15770 15771 0
c Var 'aux1326' direct represents '1' with '15772'
15770 -15771 15772 0
-15772 15771 0
-15772 -15770 0
c Var 'aux1326' direct represents '2' with '-15771'
15770 15772 -15771 0
c Encoding variable: aux1327 with domain: int(0..2) (representing constraint ((field_00007_00008=9) + (field_00007_00002=9)))
c Both direct and order encoding.
c Var 'aux1327' order represents '0' with '15773'
c Var 'aux1327' direct represents '0' with '15773'
c Var 'aux1327' order represents '1' with '15774'
-15773 15774 0
c Var 'aux1327' direct represents '1' with '15775'
15773 -15774 15775 0
-15775 15774 0
-15775 -15773 0
c Var 'aux1327' direct represents '2' with '-15774'
15773 15775 -15774 0
c Encoding variable: aux1328 with domain: int(0..2) (representing constraint ((field_00007_00007=9) + (field_00007_00004=9)))
c Both direct and order encoding.
c Var 'aux1328' order represents '0' with '15776'
c Var 'aux1328' direct represents '0' with '15776'
c Var 'aux1328' order represents '1' with '15777'
-15776 15777 0
c Var 'aux1328' direct represents '1' with '15778'
15776 -15777 15778 0
-15778 15777 0
-15778 -15776 0
c Var 'aux1328' direct represents '2' with '-15777'
15776 15778 -15777 0
c Encoding variable: aux1329 with domain: int(0..2) (representing constraint ((field_00007_00006=9) + (field_00007_00005=9)))
c Both direct and order encoding.
c Var 'aux1329' order represents '0' with '15779'
c Var 'aux1329' direct represents '0' with '15779'
c Var 'aux1329' order represents '1' with '15780'
-15779 15780 0
c Var 'aux1329' direct represents '1' with '15781'
15779 -15780 15781 0
-15781 15780 0
-15781 -15779 0
c Var 'aux1329' direct represents '2' with '-15780'
15779 15781 -15780 0
c Encoding variable: aux1330 with domain: int(0..3) (representing constraint ((field_00007_00003=9) + aux1329))
c Both direct and order encoding.
c Var 'aux1330' order represents '0' with '15782'
c Var 'aux1330' direct represents '0' with '15782'
c Var 'aux1330' order represents '1' with '15783'
-15782 15783 0
c Var 'aux1330' direct represents '1' with '15784'
15782 -15783 15784 0
-15784 15783 0
-15784 -15782 0
c Var 'aux1330' order represents '2' with '15785'
-15783 15785 0
c Var 'aux1330' direct represents '2' with '15786'
15783 -15785 15786 0
-15786 15785 0
-15786 -15783 0
c Var 'aux1330' direct represents '3' with '-15785'
15782 15784 15786 -15785 0
c Encoding variable: aux1331 with domain: int(0..4) (representing constraint (aux1326 + aux1328))
c Both direct and order encoding.
c Var 'aux1331' order represents '0' with '15787'
c Var 'aux1331' direct represents '0' with '15787'
c Var 'aux1331' order represents '1' with '15788'
-15787 15788 0
c Var 'aux1331' direct represents '1' with '15789'
15787 -15788 15789 0
-15789 15788 0
-15789 -15787 0
c Var 'aux1331' order represents '2' with '15790'
-15788 15790 0
c Var 'aux1331' direct represents '2' with '15791'
15788 -15790 15791 0
-15791 15790 0
-15791 -15788 0
c Var 'aux1331' order represents '3' with '15792'
-15790 15792 0
c Var 'aux1331' direct represents '3' with '15793'
15790 -15792 15793 0
-15793 15792 0
-15793 -15790 0
c Var 'aux1331' direct represents '4' with '-15792'
15787 15789 15791 15793 -15792 0
c Encoding variable: aux1332 with domain: int(0..2) (representing constraint ((field_00008_00001=1) + (field_00008_00009=1)))
c Both direct and order encoding.
c Var 'aux1332' order represents '0' with '15794'
c Var 'aux1332' direct represents '0' with '15794'
c Var 'aux1332' order represents '1' with '15795'
-15794 15795 0
c Var 'aux1332' direct represents '1' with '15796'
15794 -15795 15796 0
-15796 15795 0
-15796 -15794 0
c Var 'aux1332' direct represents '2' with '-15795'
15794 15796 -15795 0
c Encoding variable: aux1333 with domain: int(0..2) (representing constraint ((field_00008_00008=1) + (field_00008_00002=1)))
c Both direct and order encoding.
c Var 'aux1333' order represents '0' with '15797'
c Var 'aux1333' direct represents '0' with '15797'
c Var 'aux1333' order represents '1' with '15798'
-15797 15798 0
c Var 'aux1333' direct represents '1' with '15799'
15797 -15798 15799 0
-15799 15798 0
-15799 -15797 0
c Var 'aux1333' direct represents '2' with '-15798'
15797 15799 -15798 0
c Encoding variable: aux1334 with domain: int(0..2) (representing constraint ((field_00008_00007=1) + (field_00008_00004=1)))
c Both direct and order encoding.
c Var 'aux1334' order represents '0' with '15800'
c Var 'aux1334' direct represents '0' with '15800'
c Var 'aux1334' order represents '1' with '15801'
-15800 15801 0
c Var 'aux1334' direct represents '1' with '15802'
15800 -15801 15802 0
-15802 15801 0
-15802 -15800 0
c Var 'aux1334' direct represents '2' with '-15801'
15800 15802 -15801 0
c Encoding variable: aux1335 with domain: int(0..2) (representing constraint ((field_00008_00006=1) + (field_00008_00005=1)))
c Both direct and order encoding.
c Var 'aux1335' order represents '0' with '15803'
c Var 'aux1335' direct represents '0' with '15803'
c Var 'aux1335' order represents '1' with '15804'
-15803 15804 0
c Var 'aux1335' direct represents '1' with '15805'
15803 -15804 15805 0
-15805 15804 0
-15805 -15803 0
c Var 'aux1335' direct represents '2' with '-15804'
15803 15805 -15804 0
c Encoding variable: aux1336 with domain: int(0..3) (representing constraint ((field_00008_00003=1) + aux1335))
c Both direct and order encoding.
c Var 'aux1336' order represents '0' with '15806'
c Var 'aux1336' direct represents '0' with '15806'
c Var 'aux1336' order represents '1' with '15807'
-15806 15807 0
c Var 'aux1336' direct represents '1' with '15808'
15806 -15807 15808 0
-15808 15807 0
-15808 -15806 0
c Var 'aux1336' order represents '2' with '15809'
-15807 15809 0
c Var 'aux1336' direct represents '2' with '15810'
15807 -15809 15810 0
-15810 15809 0
-15810 -15807 0
c Var 'aux1336' direct represents '3' with '-15809'
15806 15808 15810 -15809 0
c Encoding variable: aux1337 with domain: int(0..4) (representing constraint (aux1332 + aux1334))
c Both direct and order encoding.
c Var 'aux1337' order represents '0' with '15811'
c Var 'aux1337' direct represents '0' with '15811'
c Var 'aux1337' order represents '1' with '15812'
-15811 15812 0
c Var 'aux1337' direct represents '1' with '15813'
15811 -15812 15813 0
-15813 15812 0
-15813 -15811 0
c Var 'aux1337' order represents '2' with '15814'
-15812 15814 0
c Var 'aux1337' direct represents '2' with '15815'
15812 -15814 15815 0
-15815 15814 0
-15815 -15812 0
c Var 'aux1337' order represents '3' with '15816'
-15814 15816 0
c Var 'aux1337' direct represents '3' with '15817'
15814 -15816 15817 0
-15817 15816 0
-15817 -15814 0
c Var 'aux1337' direct represents '4' with '-15816'
15811 15813 15815 15817 -15816 0
c Encoding variable: aux1338 with domain: int(0..2) (representing constraint ((field_00008_00001=2) + (field_00008_00009=2)))
c Both direct and order encoding.
c Var 'aux1338' order represents '0' with '15818'
c Var 'aux1338' direct represents '0' with '15818'
c Var 'aux1338' order represents '1' with '15819'
-15818 15819 0
c Var 'aux1338' direct represents '1' with '15820'
15818 -15819 15820 0
-15820 15819 0
-15820 -15818 0
c Var 'aux1338' direct represents '2' with '-15819'
15818 15820 -15819 0
c Encoding variable: aux1339 with domain: int(0..2) (representing constraint ((field_00008_00008=2) + (field_00008_00002=2)))
c Both direct and order encoding.
c Var 'aux1339' order represents '0' with '15821'
c Var 'aux1339' direct represents '0' with '15821'
c Var 'aux1339' order represents '1' with '15822'
-15821 15822 0
c Var 'aux1339' direct represents '1' with '15823'
15821 -15822 15823 0
-15823 15822 0
-15823 -15821 0
c Var 'aux1339' direct represents '2' with '-15822'
15821 15823 -15822 0
c Encoding variable: aux1340 with domain: int(0..2) (representing constraint ((field_00008_00007=2) + (field_00008_00004=2)))
c Both direct and order encoding.
c Var 'aux1340' order represents '0' with '15824'
c Var 'aux1340' direct represents '0' with '15824'
c Var 'aux1340' order represents '1' with '15825'
-15824 15825 0
c Var 'aux1340' direct represents '1' with '15826'
15824 -15825 15826 0
-15826 15825 0
-15826 -15824 0
c Var 'aux1340' direct represents '2' with '-15825'
15824 15826 -15825 0
c Encoding variable: aux1341 with domain: int(0..2) (representing constraint ((field_00008_00006=2) + (field_00008_00005=2)))
c Both direct and order encoding.
c Var 'aux1341' order represents '0' with '15827'
c Var 'aux1341' direct represents '0' with '15827'
c Var 'aux1341' order represents '1' with '15828'
-15827 15828 0
c Var 'aux1341' direct represents '1' with '15829'
15827 -15828 15829 0
-15829 15828 0
-15829 -15827 0
c Var 'aux1341' direct represents '2' with '-15828'
15827 15829 -15828 0
c Encoding variable: aux1342 with domain: int(0..3) (representing constraint ((field_00008_00003=2) + aux1341))
c Both direct and order encoding.
c Var 'aux1342' order represents '0' with '15830'
c Var 'aux1342' direct represents '0' with '15830'
c Var 'aux1342' order represents '1' with '15831'
-15830 15831 0
c Var 'aux1342' direct represents '1' with '15832'
15830 -15831 15832 0
-15832 15831 0
-15832 -15830 0
c Var 'aux1342' order represents '2' with '15833'
-15831 15833 0
c Var 'aux1342' direct represents '2' with '15834'
15831 -15833 15834 0
-15834 15833 0
-15834 -15831 0
c Var 'aux1342' direct represents '3' with '-15833'
15830 15832 15834 -15833 0
c Encoding variable: aux1343 with domain: int(0..4) (representing constraint (aux1338 + aux1340))
c Both direct and order encoding.
c Var 'aux1343' order represents '0' with '15835'
c Var 'aux1343' direct represents '0' with '15835'
c Var 'aux1343' order represents '1' with '15836'
-15835 15836 0
c Var 'aux1343' direct represents '1' with '15837'
15835 -15836 15837 0
-15837 15836 0
-15837 -15835 0
c Var 'aux1343' order represents '2' with '15838'
-15836 15838 0
c Var 'aux1343' direct represents '2' with '15839'
15836 -15838 15839 0
-15839 15838 0
-15839 -15836 0
c Var 'aux1343' order represents '3' with '15840'
-15838 15840 0
c Var 'aux1343' direct represents '3' with '15841'
15838 -15840 15841 0
-15841 15840 0
-15841 -15838 0
c Var 'aux1343' direct represents '4' with '-15840'
15835 15837 15839 15841 -15840 0
c Encoding variable: aux1344 with domain: int(0..2) (representing constraint ((field_00008_00001=3) + (field_00008_00009=3)))
c Both direct and order encoding.
c Var 'aux1344' order represents '0' with '15842'
c Var 'aux1344' direct represents '0' with '15842'
c Var 'aux1344' order represents '1' with '15843'
-15842 15843 0
c Var 'aux1344' direct represents '1' with '15844'
15842 -15843 15844 0
-15844 15843 0
-15844 -15842 0
c Var 'aux1344' direct represents '2' with '-15843'
15842 15844 -15843 0
c Encoding variable: aux1345 with domain: int(0..2) (representing constraint ((field_00008_00008=3) + (field_00008_00002=3)))
c Both direct and order encoding.
c Var 'aux1345' order represents '0' with '15845'
c Var 'aux1345' direct represents '0' with '15845'
c Var 'aux1345' order represents '1' with '15846'
-15845 15846 0
c Var 'aux1345' direct represents '1' with '15847'
15845 -15846 15847 0
-15847 15846 0
-15847 -15845 0
c Var 'aux1345' direct represents '2' with '-15846'
15845 15847 -15846 0
c Encoding variable: aux1346 with domain: int(0..2) (representing constraint ((field_00008_00007=3) + (field_00008_00004=3)))
c Both direct and order encoding.
c Var 'aux1346' order represents '0' with '15848'
c Var 'aux1346' direct represents '0' with '15848'
c Var 'aux1346' order represents '1' with '15849'
-15848 15849 0
c Var 'aux1346' direct represents '1' with '15850'
15848 -15849 15850 0
-15850 15849 0
-15850 -15848 0
c Var 'aux1346' direct represents '2' with '-15849'
15848 15850 -15849 0
c Encoding variable: aux1347 with domain: int(0..2) (representing constraint ((field_00008_00006=3) + (field_00008_00005=3)))
c Both direct and order encoding.
c Var 'aux1347' order represents '0' with '15851'
c Var 'aux1347' direct represents '0' with '15851'
c Var 'aux1347' order represents '1' with '15852'
-15851 15852 0
c Var 'aux1347' direct represents '1' with '15853'
15851 -15852 15853 0
-15853 15852 0
-15853 -15851 0
c Var 'aux1347' direct represents '2' with '-15852'
15851 15853 -15852 0
c Encoding variable: aux1348 with domain: int(0..3) (representing constraint ((field_00008_00003=3) + aux1347))
c Both direct and order encoding.
c Var 'aux1348' order represents '0' with '15854'
c Var 'aux1348' direct represents '0' with '15854'
c Var 'aux1348' order represents '1' with '15855'
-15854 15855 0
c Var 'aux1348' direct represents '1' with '15856'
15854 -15855 15856 0
-15856 15855 0
-15856 -15854 0
c Var 'aux1348' order represents '2' with '15857'
-15855 15857 0
c Var 'aux1348' direct represents '2' with '15858'
15855 -15857 15858 0
-15858 15857 0
-15858 -15855 0
c Var 'aux1348' direct represents '3' with '-15857'
15854 15856 15858 -15857 0
c Encoding variable: aux1349 with domain: int(0..4) (representing constraint (aux1344 + aux1346))
c Both direct and order encoding.
c Var 'aux1349' order represents '0' with '15859'
c Var 'aux1349' direct represents '0' with '15859'
c Var 'aux1349' order represents '1' with '15860'
-15859 15860 0
c Var 'aux1349' direct represents '1' with '15861'
15859 -15860 15861 0
-15861 15860 0
-15861 -15859 0
c Var 'aux1349' order represents '2' with '15862'
-15860 15862 0
c Var 'aux1349' direct represents '2' with '15863'
15860 -15862 15863 0
-15863 15862 0
-15863 -15860 0
c Var 'aux1349' order represents '3' with '15864'
-15862 15864 0
c Var 'aux1349' direct represents '3' with '15865'
15862 -15864 15865 0
-15865 15864 0
-15865 -15862 0
c Var 'aux1349' direct represents '4' with '-15864'
15859 15861 15863 15865 -15864 0
c Encoding variable: aux1350 with domain: int(0..2) (representing constraint ((field_00008_00001=4) + (field_00008_00009=4)))
c Both direct and order encoding.
c Var 'aux1350' order represents '0' with '15866'
c Var 'aux1350' direct represents '0' with '15866'
c Var 'aux1350' order represents '1' with '15867'
-15866 15867 0
c Var 'aux1350' direct represents '1' with '15868'
15866 -15867 15868 0
-15868 15867 0
-15868 -15866 0
c Var 'aux1350' direct represents '2' with '-15867'
15866 15868 -15867 0
c Encoding variable: aux1351 with domain: int(0..2) (representing constraint ((field_00008_00008=4) + (field_00008_00002=4)))
c Both direct and order encoding.
c Var 'aux1351' order represents '0' with '15869'
c Var 'aux1351' direct represents '0' with '15869'
c Var 'aux1351' order represents '1' with '15870'
-15869 15870 0
c Var 'aux1351' direct represents '1' with '15871'
15869 -15870 15871 0
-15871 15870 0
-15871 -15869 0
c Var 'aux1351' direct represents '2' with '-15870'
15869 15871 -15870 0
c Encoding variable: aux1352 with domain: int(0..2) (representing constraint ((field_00008_00007=4) + (field_00008_00004=4)))
c Both direct and order encoding.
c Var 'aux1352' order represents '0' with '15872'
c Var 'aux1352' direct represents '0' with '15872'
c Var 'aux1352' order represents '1' with '15873'
-15872 15873 0
c Var 'aux1352' direct represents '1' with '15874'
15872 -15873 15874 0
-15874 15873 0
-15874 -15872 0
c Var 'aux1352' direct represents '2' with '-15873'
15872 15874 -15873 0
c Encoding variable: aux1353 with domain: int(0..2) (representing constraint ((field_00008_00006=4) + (field_00008_00005=4)))
c Both direct and order encoding.
c Var 'aux1353' order represents '0' with '15875'
c Var 'aux1353' direct represents '0' with '15875'
c Var 'aux1353' order represents '1' with '15876'
-15875 15876 0
c Var 'aux1353' direct represents '1' with '15877'
15875 -15876 15877 0
-15877 15876 0
-15877 -15875 0
c Var 'aux1353' direct represents '2' with '-15876'
15875 15877 -15876 0
c Encoding variable: aux1354 with domain: int(0..3) (representing constraint ((field_00008_00003=4) + aux1353))
c Both direct and order encoding.
c Var 'aux1354' order represents '0' with '15878'
c Var 'aux1354' direct represents '0' with '15878'
c Var 'aux1354' order represents '1' with '15879'
-15878 15879 0
c Var 'aux1354' direct represents '1' with '15880'
15878 -15879 15880 0
-15880 15879 0
-15880 -15878 0
c Var 'aux1354' order represents '2' with '15881'
-15879 15881 0
c Var 'aux1354' direct represents '2' with '15882'
15879 -15881 15882 0
-15882 15881 0
-15882 -15879 0
c Var 'aux1354' direct represents '3' with '-15881'
15878 15880 15882 -15881 0
c Encoding variable: aux1355 with domain: int(0..4) (representing constraint (aux1350 + aux1352))
c Both direct and order encoding.
c Var 'aux1355' order represents '0' with '15883'
c Var 'aux1355' direct represents '0' with '15883'
c Var 'aux1355' order represents '1' with '15884'
-15883 15884 0
c Var 'aux1355' direct represents '1' with '15885'
15883 -15884 15885 0
-15885 15884 0
-15885 -15883 0
c Var 'aux1355' order represents '2' with '15886'
-15884 15886 0
c Var 'aux1355' direct represents '2' with '15887'
15884 -15886 15887 0
-15887 15886 0
-15887 -15884 0
c Var 'aux1355' order represents '3' with '15888'
-15886 15888 0
c Var 'aux1355' direct represents '3' with '15889'
15886 -15888 15889 0
-15889 15888 0
-15889 -15886 0
c Var 'aux1355' direct represents '4' with '-15888'
15883 15885 15887 15889 -15888 0
c Encoding variable: aux1356 with domain: int(0..2) (representing constraint ((field_00008_00001=5) + (field_00008_00009=5)))
c Both direct and order encoding.
c Var 'aux1356' order represents '0' with '15890'
c Var 'aux1356' direct represents '0' with '15890'
c Var 'aux1356' order represents '1' with '15891'
-15890 15891 0
c Var 'aux1356' direct represents '1' with '15892'
15890 -15891 15892 0
-15892 15891 0
-15892 -15890 0
c Var 'aux1356' direct represents '2' with '-15891'
15890 15892 -15891 0
c Encoding variable: aux1357 with domain: int(0..2) (representing constraint ((field_00008_00008=5) + (field_00008_00002=5)))
c Both direct and order encoding.
c Var 'aux1357' order represents '0' with '15893'
c Var 'aux1357' direct represents '0' with '15893'
c Var 'aux1357' order represents '1' with '15894'
-15893 15894 0
c Var 'aux1357' direct represents '1' with '15895'
15893 -15894 15895 0
-15895 15894 0
-15895 -15893 0
c Var 'aux1357' direct represents '2' with '-15894'
15893 15895 -15894 0
c Encoding variable: aux1358 with domain: int(0..2) (representing constraint ((field_00008_00007=5) + (field_00008_00004=5)))
c Both direct and order encoding.
c Var 'aux1358' order represents '0' with '15896'
c Var 'aux1358' direct represents '0' with '15896'
c Var 'aux1358' order represents '1' with '15897'
-15896 15897 0
c Var 'aux1358' direct represents '1' with '15898'
15896 -15897 15898 0
-15898 15897 0
-15898 -15896 0
c Var 'aux1358' direct represents '2' with '-15897'
15896 15898 -15897 0
c Encoding variable: aux1359 with domain: int(0..2) (representing constraint ((field_00008_00006=5) + (field_00008_00005=5)))
c Both direct and order encoding.
c Var 'aux1359' order represents '0' with '15899'
c Var 'aux1359' direct represents '0' with '15899'
c Var 'aux1359' order represents '1' with '15900'
-15899 15900 0
c Var 'aux1359' direct represents '1' with '15901'
15899 -15900 15901 0
-15901 15900 0
-15901 -15899 0
c Var 'aux1359' direct represents '2' with '-15900'
15899 15901 -15900 0
c Encoding variable: aux1360 with domain: int(0..3) (representing constraint ((field_00008_00003=5) + aux1359))
c Both direct and order encoding.
c Var 'aux1360' order represents '0' with '15902'
c Var 'aux1360' direct represents '0' with '15902'
c Var 'aux1360' order represents '1' with '15903'
-15902 15903 0
c Var 'aux1360' direct represents '1' with '15904'
15902 -15903 15904 0
-15904 15903 0
-15904 -15902 0
c Var 'aux1360' order represents '2' with '15905'
-15903 15905 0
c Var 'aux1360' direct represents '2' with '15906'
15903 -15905 15906 0
-15906 15905 0
-15906 -15903 0
c Var 'aux1360' direct represents '3' with '-15905'
15902 15904 15906 -15905 0
c Encoding variable: aux1361 with domain: int(0..4) (representing constraint (aux1356 + aux1358))
c Both direct and order encoding.
c Var 'aux1361' order represents '0' with '15907'
c Var 'aux1361' direct represents '0' with '15907'
c Var 'aux1361' order represents '1' with '15908'
-15907 15908 0
c Var 'aux1361' direct represents '1' with '15909'
15907 -15908 15909 0
-15909 15908 0
-15909 -15907 0
c Var 'aux1361' order represents '2' with '15910'
-15908 15910 0
c Var 'aux1361' direct represents '2' with '15911'
15908 -15910 15911 0
-15911 15910 0
-15911 -15908 0
c Var 'aux1361' order represents '3' with '15912'
-15910 15912 0
c Var 'aux1361' direct represents '3' with '15913'
15910 -15912 15913 0
-15913 15912 0
-15913 -15910 0
c Var 'aux1361' direct represents '4' with '-15912'
15907 15909 15911 15913 -15912 0
c Encoding variable: aux1362 with domain: int(0..2) (representing constraint ((field_00008_00001=6) + (field_00008_00009=6)))
c Both direct and order encoding.
c Var 'aux1362' order represents '0' with '15914'
c Var 'aux1362' direct represents '0' with '15914'
c Var 'aux1362' order represents '1' with '15915'
-15914 15915 0
c Var 'aux1362' direct represents '1' with '15916'
15914 -15915 15916 0
-15916 15915 0
-15916 -15914 0
c Var 'aux1362' direct represents '2' with '-15915'
15914 15916 -15915 0
c Encoding variable: aux1363 with domain: int(0..2) (representing constraint ((field_00008_00008=6) + (field_00008_00002=6)))
c Both direct and order encoding.
c Var 'aux1363' order represents '0' with '15917'
c Var 'aux1363' direct represents '0' with '15917'
c Var 'aux1363' order represents '1' with '15918'
-15917 15918 0
c Var 'aux1363' direct represents '1' with '15919'
15917 -15918 15919 0
-15919 15918 0
-15919 -15917 0
c Var 'aux1363' direct represents '2' with '-15918'
15917 15919 -15918 0
c Encoding variable: aux1364 with domain: int(0..2) (representing constraint ((field_00008_00007=6) + (field_00008_00004=6)))
c Both direct and order encoding.
c Var 'aux1364' order represents '0' with '15920'
c Var 'aux1364' direct represents '0' with '15920'
c Var 'aux1364' order represents '1' with '15921'
-15920 15921 0
c Var 'aux1364' direct represents '1' with '15922'
15920 -15921 15922 0
-15922 15921 0
-15922 -15920 0
c Var 'aux1364' direct represents '2' with '-15921'
15920 15922 -15921 0
c Encoding variable: aux1365 with domain: int(0..2) (representing constraint ((field_00008_00006=6) + (field_00008_00005=6)))
c Both direct and order encoding.
c Var 'aux1365' order represents '0' with '15923'
c Var 'aux1365' direct represents '0' with '15923'
c Var 'aux1365' order represents '1' with '15924'
-15923 15924 0
c Var 'aux1365' direct represents '1' with '15925'
15923 -15924 15925 0
-15925 15924 0
-15925 -15923 0
c Var 'aux1365' direct represents '2' with '-15924'
15923 15925 -15924 0
c Encoding variable: aux1366 with domain: int(0..3) (representing constraint ((field_00008_00003=6) + aux1365))
c Both direct and order encoding.
c Var 'aux1366' order represents '0' with '15926'
c Var 'aux1366' direct represents '0' with '15926'
c Var 'aux1366' order represents '1' with '15927'
-15926 15927 0
c Var 'aux1366' direct represents '1' with '15928'
15926 -15927 15928 0
-15928 15927 0
-15928 -15926 0
c Var 'aux1366' order represents '2' with '15929'
-15927 15929 0
c Var 'aux1366' direct represents '2' with '15930'
15927 -15929 15930 0
-15930 15929 0
-15930 -15927 0
c Var 'aux1366' direct represents '3' with '-15929'
15926 15928 15930 -15929 0
c Encoding variable: aux1367 with domain: int(0..4) (representing constraint (aux1362 + aux1364))
c Both direct and order encoding.
c Var 'aux1367' order represents '0' with '15931'
c Var 'aux1367' direct represents '0' with '15931'
c Var 'aux1367' order represents '1' with '15932'
-15931 15932 0
c Var 'aux1367' direct represents '1' with '15933'
15931 -15932 15933 0
-15933 15932 0
-15933 -15931 0
c Var 'aux1367' order represents '2' with '15934'
-15932 15934 0
c Var 'aux1367' direct represents '2' with '15935'
15932 -15934 15935 0
-15935 15934 0
-15935 -15932 0
c Var 'aux1367' order represents '3' with '15936'
-15934 15936 0
c Var 'aux1367' direct represents '3' with '15937'
15934 -15936 15937 0
-15937 15936 0
-15937 -15934 0
c Var 'aux1367' direct represents '4' with '-15936'
15931 15933 15935 15937 -15936 0
c Encoding variable: aux1368 with domain: int(0..2) (representing constraint ((field_00008_00001=7) + (field_00008_00009=7)))
c Both direct and order encoding.
c Var 'aux1368' order represents '0' with '15938'
c Var 'aux1368' direct represents '0' with '15938'
c Var 'aux1368' order represents '1' with '15939'
-15938 15939 0
c Var 'aux1368' direct represents '1' with '15940'
15938 -15939 15940 0
-15940 15939 0
-15940 -15938 0
c Var 'aux1368' direct represents '2' with '-15939'
15938 15940 -15939 0
c Encoding variable: aux1369 with domain: int(0..2) (representing constraint ((field_00008_00008=7) + (field_00008_00002=7)))
c Both direct and order encoding.
c Var 'aux1369' order represents '0' with '15941'
c Var 'aux1369' direct represents '0' with '15941'
c Var 'aux1369' order represents '1' with '15942'
-15941 15942 0
c Var 'aux1369' direct represents '1' with '15943'
15941 -15942 15943 0
-15943 15942 0
-15943 -15941 0
c Var 'aux1369' direct represents '2' with '-15942'
15941 15943 -15942 0
c Encoding variable: aux1370 with domain: int(0..2) (representing constraint ((field_00008_00007=7) + (field_00008_00004=7)))
c Both direct and order encoding.
c Var 'aux1370' order represents '0' with '15944'
c Var 'aux1370' direct represents '0' with '15944'
c Var 'aux1370' order represents '1' with '15945'
-15944 15945 0
c Var 'aux1370' direct represents '1' with '15946'
15944 -15945 15946 0
-15946 15945 0
-15946 -15944 0
c Var 'aux1370' direct represents '2' with '-15945'
15944 15946 -15945 0
c Encoding variable: aux1371 with domain: int(0..2) (representing constraint ((field_00008_00006=7) + (field_00008_00005=7)))
c Both direct and order encoding.
c Var 'aux1371' order represents '0' with '15947'
c Var 'aux1371' direct represents '0' with '15947'
c Var 'aux1371' order represents '1' with '15948'
-15947 15948 0
c Var 'aux1371' direct represents '1' with '15949'
15947 -15948 15949 0
-15949 15948 0
-15949 -15947 0
c Var 'aux1371' direct represents '2' with '-15948'
15947 15949 -15948 0
c Encoding variable: aux1372 with domain: int(0..3) (representing constraint ((field_00008_00003=7) + aux1371))
c Both direct and order encoding.
c Var 'aux1372' order represents '0' with '15950'
c Var 'aux1372' direct represents '0' with '15950'
c Var 'aux1372' order represents '1' with '15951'
-15950 15951 0
c Var 'aux1372' direct represents '1' with '15952'
15950 -15951 15952 0
-15952 15951 0
-15952 -15950 0
c Var 'aux1372' order represents '2' with '15953'
-15951 15953 0
c Var 'aux1372' direct represents '2' with '15954'
15951 -15953 15954 0
-15954 15953 0
-15954 -15951 0
c Var 'aux1372' direct represents '3' with '-15953'
15950 15952 15954 -15953 0
c Encoding variable: aux1373 with domain: int(0..4) (representing constraint (aux1368 + aux1370))
c Both direct and order encoding.
c Var 'aux1373' order represents '0' with '15955'
c Var 'aux1373' direct represents '0' with '15955'
c Var 'aux1373' order represents '1' with '15956'
-15955 15956 0
c Var 'aux1373' direct represents '1' with '15957'
15955 -15956 15957 0
-15957 15956 0
-15957 -15955 0
c Var 'aux1373' order represents '2' with '15958'
-15956 15958 0
c Var 'aux1373' direct represents '2' with '15959'
15956 -15958 15959 0
-15959 15958 0
-15959 -15956 0
c Var 'aux1373' order represents '3' with '15960'
-15958 15960 0
c Var 'aux1373' direct represents '3' with '15961'
15958 -15960 15961 0
-15961 15960 0
-15961 -15958 0
c Var 'aux1373' direct represents '4' with '-15960'
15955 15957 15959 15961 -15960 0
c Encoding variable: aux1374 with domain: int(0..2) (representing constraint ((field_00008_00001=8) + (field_00008_00009=8)))
c Both direct and order encoding.
c Var 'aux1374' order represents '0' with '15962'
c Var 'aux1374' direct represents '0' with '15962'
c Var 'aux1374' order represents '1' with '15963'
-15962 15963 0
c Var 'aux1374' direct represents '1' with '15964'
15962 -15963 15964 0
-15964 15963 0
-15964 -15962 0
c Var 'aux1374' direct represents '2' with '-15963'
15962 15964 -15963 0
c Encoding variable: aux1375 with domain: int(0..2) (representing constraint ((field_00008_00008=8) + (field_00008_00002=8)))
c Both direct and order encoding.
c Var 'aux1375' order represents '0' with '15965'
c Var 'aux1375' direct represents '0' with '15965'
c Var 'aux1375' order represents '1' with '15966'
-15965 15966 0
c Var 'aux1375' direct represents '1' with '15967'
15965 -15966 15967 0
-15967 15966 0
-15967 -15965 0
c Var 'aux1375' direct represents '2' with '-15966'
15965 15967 -15966 0
c Encoding variable: aux1376 with domain: int(0..2) (representing constraint ((field_00008_00007=8) + (field_00008_00004=8)))
c Both direct and order encoding.
c Var 'aux1376' order represents '0' with '15968'
c Var 'aux1376' direct represents '0' with '15968'
c Var 'aux1376' order represents '1' with '15969'
-15968 15969 0
c Var 'aux1376' direct represents '1' with '15970'
15968 -15969 15970 0
-15970 15969 0
-15970 -15968 0
c Var 'aux1376' direct represents '2' with '-15969'
15968 15970 -15969 0
c Encoding variable: aux1377 with domain: int(0..2) (representing constraint ((field_00008_00006=8) + (field_00008_00005=8)))
c Both direct and order encoding.
c Var 'aux1377' order represents '0' with '15971'
c Var 'aux1377' direct represents '0' with '15971'
c Var 'aux1377' order represents '1' with '15972'
-15971 15972 0
c Var 'aux1377' direct represents '1' with '15973'
15971 -15972 15973 0
-15973 15972 0
-15973 -15971 0
c Var 'aux1377' direct represents '2' with '-15972'
15971 15973 -15972 0
c Encoding variable: aux1378 with domain: int(0..3) (representing constraint ((field_00008_00003=8) + aux1377))
c Both direct and order encoding.
c Var 'aux1378' order represents '0' with '15974'
c Var 'aux1378' direct represents '0' with '15974'
c Var 'aux1378' order represents '1' with '15975'
-15974 15975 0
c Var 'aux1378' direct represents '1' with '15976'
15974 -15975 15976 0
-15976 15975 0
-15976 -15974 0
c Var 'aux1378' order represents '2' with '15977'
-15975 15977 0
c Var 'aux1378' direct represents '2' with '15978'
15975 -15977 15978 0
-15978 15977 0
-15978 -15975 0
c Var 'aux1378' direct represents '3' with '-15977'
15974 15976 15978 -15977 0
c Encoding variable: aux1379 with domain: int(0..4) (representing constraint (aux1374 + aux1376))
c Both direct and order encoding.
c Var 'aux1379' order represents '0' with '15979'
c Var 'aux1379' direct represents '0' with '15979'
c Var 'aux1379' order represents '1' with '15980'
-15979 15980 0
c Var 'aux1379' direct represents '1' with '15981'
15979 -15980 15981 0
-15981 15980 0
-15981 -15979 0
c Var 'aux1379' order represents '2' with '15982'
-15980 15982 0
c Var 'aux1379' direct represents '2' with '15983'
15980 -15982 15983 0
-15983 15982 0
-15983 -15980 0
c Var 'aux1379' order represents '3' with '15984'
-15982 15984 0
c Var 'aux1379' direct represents '3' with '15985'
15982 -15984 15985 0
-15985 15984 0
-15985 -15982 0
c Var 'aux1379' direct represents '4' with '-15984'
15979 15981 15983 15985 -15984 0
c Encoding variable: aux1380 with domain: int(0..2) (representing constraint ((field_00008_00001=9) + (field_00008_00009=9)))
c Both direct and order encoding.
c Var 'aux1380' order represents '0' with '15986'
c Var 'aux1380' direct represents '0' with '15986'
c Var 'aux1380' order represents '1' with '15987'
-15986 15987 0
c Var 'aux1380' direct represents '1' with '15988'
15986 -15987 15988 0
-15988 15987 0
-15988 -15986 0
c Var 'aux1380' direct represents '2' with '-15987'
15986 15988 -15987 0
c Encoding variable: aux1381 with domain: int(0..2) (representing constraint ((field_00008_00008=9) + (field_00008_00002=9)))
c Both direct and order encoding.
c Var 'aux1381' order represents '0' with '15989'
c Var 'aux1381' direct represents '0' with '15989'
c Var 'aux1381' order represents '1' with '15990'
-15989 15990 0
c Var 'aux1381' direct represents '1' with '15991'
15989 -15990 15991 0
-15991 15990 0
-15991 -15989 0
c Var 'aux1381' direct represents '2' with '-15990'
15989 15991 -15990 0
c Encoding variable: aux1382 with domain: int(0..2) (representing constraint ((field_00008_00007=9) + (field_00008_00004=9)))
c Both direct and order encoding.
c Var 'aux1382' order represents '0' with '15992'
c Var 'aux1382' direct represents '0' with '15992'
c Var 'aux1382' order represents '1' with '15993'
-15992 15993 0
c Var 'aux1382' direct represents '1' with '15994'
15992 -15993 15994 0
-15994 15993 0
-15994 -15992 0
c Var 'aux1382' direct represents '2' with '-15993'
15992 15994 -15993 0
c Encoding variable: aux1383 with domain: int(0..2) (representing constraint ((field_00008_00006=9) + (field_00008_00005=9)))
c Both direct and order encoding.
c Var 'aux1383' order represents '0' with '15995'
c Var 'aux1383' direct represents '0' with '15995'
c Var 'aux1383' order represents '1' with '15996'
-15995 15996 0
c Var 'aux1383' direct represents '1' with '15997'
15995 -15996 15997 0
-15997 15996 0
-15997 -15995 0
c Var 'aux1383' direct represents '2' with '-15996'
15995 15997 -15996 0
c Encoding variable: aux1384 with domain: int(0..3) (representing constraint ((field_00008_00003=9) + aux1383))
c Both direct and order encoding.
c Var 'aux1384' order represents '0' with '15998'
c Var 'aux1384' direct represents '0' with '15998'
c Var 'aux1384' order represents '1' with '15999'
-15998 15999 0
c Var 'aux1384' direct represents '1' with '16000'
15998 -15999 16000 0
-16000 15999 0
-16000 -15998 0
c Var 'aux1384' order represents '2' with '16001'
-15999 16001 0
c Var 'aux1384' direct represents '2' with '16002'
15999 -16001 16002 0
-16002 16001 0
-16002 -15999 0
c Var 'aux1384' direct represents '3' with '-16001'
15998 16000 16002 -16001 0
c Encoding variable: aux1385 with domain: int(0..4) (representing constraint (aux1380 + aux1382))
c Both direct and order encoding.
c Var 'aux1385' order represents '0' with '16003'
c Var 'aux1385' direct represents '0' with '16003'
c Var 'aux1385' order represents '1' with '16004'
-16003 16004 0
c Var 'aux1385' direct represents '1' with '16005'
16003 -16004 16005 0
-16005 16004 0
-16005 -16003 0
c Var 'aux1385' order represents '2' with '16006'
-16004 16006 0
c Var 'aux1385' direct represents '2' with '16007'
16004 -16006 16007 0
-16007 16006 0
-16007 -16004 0
c Var 'aux1385' order represents '3' with '16008'
-16006 16008 0
c Var 'aux1385' direct represents '3' with '16009'
16006 -16008 16009 0
-16009 16008 0
-16009 -16006 0
c Var 'aux1385' direct represents '4' with '-16008'
16003 16005 16007 16009 -16008 0
c Encoding variable: aux1386 with domain: int(0..2) (representing constraint ((field_00009_00001=1) + (field_00009_00009=1)))
c Both direct and order encoding.
c Var 'aux1386' order represents '0' with '16010'
c Var 'aux1386' direct represents '0' with '16010'
c Var 'aux1386' order represents '1' with '16011'
-16010 16011 0
c Var 'aux1386' direct represents '1' with '16012'
16010 -16011 16012 0
-16012 16011 0
-16012 -16010 0
c Var 'aux1386' direct represents '2' with '-16011'
16010 16012 -16011 0
c Encoding variable: aux1387 with domain: int(0..2) (representing constraint ((field_00009_00008=1) + (field_00009_00002=1)))
c Both direct and order encoding.
c Var 'aux1387' order represents '0' with '16013'
c Var 'aux1387' direct represents '0' with '16013'
c Var 'aux1387' order represents '1' with '16014'
-16013 16014 0
c Var 'aux1387' direct represents '1' with '16015'
16013 -16014 16015 0
-16015 16014 0
-16015 -16013 0
c Var 'aux1387' direct represents '2' with '-16014'
16013 16015 -16014 0
c Encoding variable: aux1388 with domain: int(0..2) (representing constraint ((field_00009_00007=1) + (field_00009_00004=1)))
c Both direct and order encoding.
c Var 'aux1388' order represents '0' with '16016'
c Var 'aux1388' direct represents '0' with '16016'
c Var 'aux1388' order represents '1' with '16017'
-16016 16017 0
c Var 'aux1388' direct represents '1' with '16018'
16016 -16017 16018 0
-16018 16017 0
-16018 -16016 0
c Var 'aux1388' direct represents '2' with '-16017'
16016 16018 -16017 0
c Encoding variable: aux1389 with domain: int(0..2) (representing constraint ((field_00009_00006=1) + (field_00009_00005=1)))
c Both direct and order encoding.
c Var 'aux1389' order represents '0' with '16019'
c Var 'aux1389' direct represents '0' with '16019'
c Var 'aux1389' order represents '1' with '16020'
-16019 16020 0
c Var 'aux1389' direct represents '1' with '16021'
16019 -16020 16021 0
-16021 16020 0
-16021 -16019 0
c Var 'aux1389' direct represents '2' with '-16020'
16019 16021 -16020 0
c Encoding variable: aux1390 with domain: int(0..3) (representing constraint ((field_00009_00003=1) + aux1389))
c Both direct and order encoding.
c Var 'aux1390' order represents '0' with '16022'
c Var 'aux1390' direct represents '0' with '16022'
c Var 'aux1390' order represents '1' with '16023'
-16022 16023 0
c Var 'aux1390' direct represents '1' with '16024'
16022 -16023 16024 0
-16024 16023 0
-16024 -16022 0
c Var 'aux1390' order represents '2' with '16025'
-16023 16025 0
c Var 'aux1390' direct represents '2' with '16026'
16023 -16025 16026 0
-16026 16025 0
-16026 -16023 0
c Var 'aux1390' direct represents '3' with '-16025'
16022 16024 16026 -16025 0
c Encoding variable: aux1391 with domain: int(0..4) (representing constraint (aux1386 + aux1388))
c Both direct and order encoding.
c Var 'aux1391' order represents '0' with '16027'
c Var 'aux1391' direct represents '0' with '16027'
c Var 'aux1391' order represents '1' with '16028'
-16027 16028 0
c Var 'aux1391' direct represents '1' with '16029'
16027 -16028 16029 0
-16029 16028 0
-16029 -16027 0
c Var 'aux1391' order represents '2' with '16030'
-16028 16030 0
c Var 'aux1391' direct represents '2' with '16031'
16028 -16030 16031 0
-16031 16030 0
-16031 -16028 0
c Var 'aux1391' order represents '3' with '16032'
-16030 16032 0
c Var 'aux1391' direct represents '3' with '16033'
16030 -16032 16033 0
-16033 16032 0
-16033 -16030 0
c Var 'aux1391' direct represents '4' with '-16032'
16027 16029 16031 16033 -16032 0
c Encoding variable: aux1392 with domain: int(0..2) (representing constraint ((field_00009_00001=2) + (field_00009_00009=2)))
c Both direct and order encoding.
c Var 'aux1392' order represents '0' with '16034'
c Var 'aux1392' direct represents '0' with '16034'
c Var 'aux1392' order represents '1' with '16035'
-16034 16035 0
c Var 'aux1392' direct represents '1' with '16036'
16034 -16035 16036 0
-16036 16035 0
-16036 -16034 0
c Var 'aux1392' direct represents '2' with '-16035'
16034 16036 -16035 0
c Encoding variable: aux1393 with domain: int(0..2) (representing constraint ((field_00009_00008=2) + (field_00009_00002=2)))
c Both direct and order encoding.
c Var 'aux1393' order represents '0' with '16037'
c Var 'aux1393' direct represents '0' with '16037'
c Var 'aux1393' order represents '1' with '16038'
-16037 16038 0
c Var 'aux1393' direct represents '1' with '16039'
16037 -16038 16039 0
-16039 16038 0
-16039 -16037 0
c Var 'aux1393' direct represents '2' with '-16038'
16037 16039 -16038 0
c Encoding variable: aux1394 with domain: int(0..2) (representing constraint ((field_00009_00007=2) + (field_00009_00004=2)))
c Both direct and order encoding.
c Var 'aux1394' order represents '0' with '16040'
c Var 'aux1394' direct represents '0' with '16040'
c Var 'aux1394' order represents '1' with '16041'
-16040 16041 0
c Var 'aux1394' direct represents '1' with '16042'
16040 -16041 16042 0
-16042 16041 0
-16042 -16040 0
c Var 'aux1394' direct represents '2' with '-16041'
16040 16042 -16041 0
c Encoding variable: aux1395 with domain: int(0..2) (representing constraint ((field_00009_00006=2) + (field_00009_00005=2)))
c Both direct and order encoding.
c Var 'aux1395' order represents '0' with '16043'
c Var 'aux1395' direct represents '0' with '16043'
c Var 'aux1395' order represents '1' with '16044'
-16043 16044 0
c Var 'aux1395' direct represents '1' with '16045'
16043 -16044 16045 0
-16045 16044 0
-16045 -16043 0
c Var 'aux1395' direct represents '2' with '-16044'
16043 16045 -16044 0
c Encoding variable: aux1396 with domain: int(0..3) (representing constraint ((field_00009_00003=2) + aux1395))
c Both direct and order encoding.
c Var 'aux1396' order represents '0' with '16046'
c Var 'aux1396' direct represents '0' with '16046'
c Var 'aux1396' order represents '1' with '16047'
-16046 16047 0
c Var 'aux1396' direct represents '1' with '16048'
16046 -16047 16048 0
-16048 16047 0
-16048 -16046 0
c Var 'aux1396' order represents '2' with '16049'
-16047 16049 0
c Var 'aux1396' direct represents '2' with '16050'
16047 -16049 16050 0
-16050 16049 0
-16050 -16047 0
c Var 'aux1396' direct represents '3' with '-16049'
16046 16048 16050 -16049 0
c Encoding variable: aux1397 with domain: int(0..4) (representing constraint (aux1392 + aux1394))
c Both direct and order encoding.
c Var 'aux1397' order represents '0' with '16051'
c Var 'aux1397' direct represents '0' with '16051'
c Var 'aux1397' order represents '1' with '16052'
-16051 16052 0
c Var 'aux1397' direct represents '1' with '16053'
16051 -16052 16053 0
-16053 16052 0
-16053 -16051 0
c Var 'aux1397' order represents '2' with '16054'
-16052 16054 0
c Var 'aux1397' direct represents '2' with '16055'
16052 -16054 16055 0
-16055 16054 0
-16055 -16052 0
c Var 'aux1397' order represents '3' with '16056'
-16054 16056 0
c Var 'aux1397' direct represents '3' with '16057'
16054 -16056 16057 0
-16057 16056 0
-16057 -16054 0
c Var 'aux1397' direct represents '4' with '-16056'
16051 16053 16055 16057 -16056 0
c Encoding variable: aux1398 with domain: int(0..2) (representing constraint ((field_00009_00001=3) + (field_00009_00009=3)))
c Both direct and order encoding.
c Var 'aux1398' order represents '0' with '16058'
c Var 'aux1398' direct represents '0' with '16058'
c Var 'aux1398' order represents '1' with '16059'
-16058 16059 0
c Var 'aux1398' direct represents '1' with '16060'
16058 -16059 16060 0
-16060 16059 0
-16060 -16058 0
c Var 'aux1398' direct represents '2' with '-16059'
16058 16060 -16059 0
c Encoding variable: aux1399 with domain: int(0..2) (representing constraint ((field_00009_00008=3) + (field_00009_00002=3)))
c Both direct and order encoding.
c Var 'aux1399' order represents '0' with '16061'
c Var 'aux1399' direct represents '0' with '16061'
c Var 'aux1399' order represents '1' with '16062'
-16061 16062 0
c Var 'aux1399' direct represents '1' with '16063'
16061 -16062 16063 0
-16063 16062 0
-16063 -16061 0
c Var 'aux1399' direct represents '2' with '-16062'
16061 16063 -16062 0
c Encoding variable: aux1400 with domain: int(0..2) (representing constraint ((field_00009_00007=3) + (field_00009_00004=3)))
c Both direct and order encoding.
c Var 'aux1400' order represents '0' with '16064'
c Var 'aux1400' direct represents '0' with '16064'
c Var 'aux1400' order represents '1' with '16065'
-16064 16065 0
c Var 'aux1400' direct represents '1' with '16066'
16064 -16065 16066 0
-16066 16065 0
-16066 -16064 0
c Var 'aux1400' direct represents '2' with '-16065'
16064 16066 -16065 0
c Encoding variable: aux1401 with domain: int(0..2) (representing constraint ((field_00009_00006=3) + (field_00009_00005=3)))
c Both direct and order encoding.
c Var 'aux1401' order represents '0' with '16067'
c Var 'aux1401' direct represents '0' with '16067'
c Var 'aux1401' order represents '1' with '16068'
-16067 16068 0
c Var 'aux1401' direct represents '1' with '16069'
16067 -16068 16069 0
-16069 16068 0
-16069 -16067 0
c Var 'aux1401' direct represents '2' with '-16068'
16067 16069 -16068 0
c Encoding variable: aux1402 with domain: int(0..3) (representing constraint ((field_00009_00003=3) + aux1401))
c Both direct and order encoding.
c Var 'aux1402' order represents '0' with '16070'
c Var 'aux1402' direct represents '0' with '16070'
c Var 'aux1402' order represents '1' with '16071'
-16070 16071 0
c Var 'aux1402' direct represents '1' with '16072'
16070 -16071 16072 0
-16072 16071 0
-16072 -16070 0
c Var 'aux1402' order represents '2' with '16073'
-16071 16073 0
c Var 'aux1402' direct represents '2' with '16074'
16071 -16073 16074 0
-16074 16073 0
-16074 -16071 0
c Var 'aux1402' direct represents '3' with '-16073'
16070 16072 16074 -16073 0
c Encoding variable: aux1403 with domain: int(0..4) (representing constraint (aux1398 + aux1400))
c Both direct and order encoding.
c Var 'aux1403' order represents '0' with '16075'
c Var 'aux1403' direct represents '0' with '16075'
c Var 'aux1403' order represents '1' with '16076'
-16075 16076 0
c Var 'aux1403' direct represents '1' with '16077'
16075 -16076 16077 0
-16077 16076 0
-16077 -16075 0
c Var 'aux1403' order represents '2' with '16078'
-16076 16078 0
c Var 'aux1403' direct represents '2' with '16079'
16076 -16078 16079 0
-16079 16078 0
-16079 -16076 0
c Var 'aux1403' order represents '3' with '16080'
-16078 16080 0
c Var 'aux1403' direct represents '3' with '16081'
16078 -16080 16081 0
-16081 16080 0
-16081 -16078 0
c Var 'aux1403' direct represents '4' with '-16080'
16075 16077 16079 16081 -16080 0
c Encoding variable: aux1404 with domain: int(0..2) (representing constraint ((field_00009_00001=4) + (field_00009_00009=4)))
c Both direct and order encoding.
c Var 'aux1404' order represents '0' with '16082'
c Var 'aux1404' direct represents '0' with '16082'
c Var 'aux1404' order represents '1' with '16083'
-16082 16083 0
c Var 'aux1404' direct represents '1' with '16084'
16082 -16083 16084 0
-16084 16083 0
-16084 -16082 0
c Var 'aux1404' direct represents '2' with '-16083'
16082 16084 -16083 0
c Encoding variable: aux1405 with domain: int(0..2) (representing constraint ((field_00009_00008=4) + (field_00009_00002=4)))
c Both direct and order encoding.
c Var 'aux1405' order represents '0' with '16085'
c Var 'aux1405' direct represents '0' with '16085'
c Var 'aux1405' order represents '1' with '16086'
-16085 16086 0
c Var 'aux1405' direct represents '1' with '16087'
16085 -16086 16087 0
-16087 16086 0
-16087 -16085 0
c Var 'aux1405' direct represents '2' with '-16086'
16085 16087 -16086 0
c Encoding variable: aux1406 with domain: int(0..2) (representing constraint ((field_00009_00007=4) + (field_00009_00004=4)))
c Both direct and order encoding.
c Var 'aux1406' order represents '0' with '16088'
c Var 'aux1406' direct represents '0' with '16088'
c Var 'aux1406' order represents '1' with '16089'
-16088 16089 0
c Var 'aux1406' direct represents '1' with '16090'
16088 -16089 16090 0
-16090 16089 0
-16090 -16088 0
c Var 'aux1406' direct represents '2' with '-16089'
16088 16090 -16089 0
c Encoding variable: aux1407 with domain: int(0..2) (representing constraint ((field_00009_00006=4) + (field_00009_00005=4)))
c Both direct and order encoding.
c Var 'aux1407' order represents '0' with '16091'
c Var 'aux1407' direct represents '0' with '16091'
c Var 'aux1407' order represents '1' with '16092'
-16091 16092 0
c Var 'aux1407' direct represents '1' with '16093'
16091 -16092 16093 0
-16093 16092 0
-16093 -16091 0
c Var 'aux1407' direct represents '2' with '-16092'
16091 16093 -16092 0
c Encoding variable: aux1408 with domain: int(0..3) (representing constraint ((field_00009_00003=4) + aux1407))
c Both direct and order encoding.
c Var 'aux1408' order represents '0' with '16094'
c Var 'aux1408' direct represents '0' with '16094'
c Var 'aux1408' order represents '1' with '16095'
-16094 16095 0
c Var 'aux1408' direct represents '1' with '16096'
16094 -16095 16096 0
-16096 16095 0
-16096 -16094 0
c Var 'aux1408' order represents '2' with '16097'
-16095 16097 0
c Var 'aux1408' direct represents '2' with '16098'
16095 -16097 16098 0
-16098 16097 0
-16098 -16095 0
c Var 'aux1408' direct represents '3' with '-16097'
16094 16096 16098 -16097 0
c Encoding variable: aux1409 with domain: int(0..4) (representing constraint (aux1404 + aux1406))
c Both direct and order encoding.
c Var 'aux1409' order represents '0' with '16099'
c Var 'aux1409' direct represents '0' with '16099'
c Var 'aux1409' order represents '1' with '16100'
-16099 16100 0
c Var 'aux1409' direct represents '1' with '16101'
16099 -16100 16101 0
-16101 16100 0
-16101 -16099 0
c Var 'aux1409' order represents '2' with '16102'
-16100 16102 0
c Var 'aux1409' direct represents '2' with '16103'
16100 -16102 16103 0
-16103 16102 0
-16103 -16100 0
c Var 'aux1409' order represents '3' with '16104'
-16102 16104 0
c Var 'aux1409' direct represents '3' with '16105'
16102 -16104 16105 0
-16105 16104 0
-16105 -16102 0
c Var 'aux1409' direct represents '4' with '-16104'
16099 16101 16103 16105 -16104 0
c Encoding variable: aux1410 with domain: int(0..2) (representing constraint ((field_00009_00001=5) + (field_00009_00009=5)))
c Both direct and order encoding.
c Var 'aux1410' order represents '0' with '16106'
c Var 'aux1410' direct represents '0' with '16106'
c Var 'aux1410' order represents '1' with '16107'
-16106 16107 0
c Var 'aux1410' direct represents '1' with '16108'
16106 -16107 16108 0
-16108 16107 0
-16108 -16106 0
c Var 'aux1410' direct represents '2' with '-16107'
16106 16108 -16107 0
c Encoding variable: aux1411 with domain: int(0..2) (representing constraint ((field_00009_00008=5) + (field_00009_00002=5)))
c Both direct and order encoding.
c Var 'aux1411' order represents '0' with '16109'
c Var 'aux1411' direct represents '0' with '16109'
c Var 'aux1411' order represents '1' with '16110'
-16109 16110 0
c Var 'aux1411' direct represents '1' with '16111'
16109 -16110 16111 0
-16111 16110 0
-16111 -16109 0
c Var 'aux1411' direct represents '2' with '-16110'
16109 16111 -16110 0
c Encoding variable: aux1412 with domain: int(0..2) (representing constraint ((field_00009_00007=5) + (field_00009_00004=5)))
c Both direct and order encoding.
c Var 'aux1412' order represents '0' with '16112'
c Var 'aux1412' direct represents '0' with '16112'
c Var 'aux1412' order represents '1' with '16113'
-16112 16113 0
c Var 'aux1412' direct represents '1' with '16114'
16112 -16113 16114 0
-16114 16113 0
-16114 -16112 0
c Var 'aux1412' direct represents '2' with '-16113'
16112 16114 -16113 0
c Encoding variable: aux1413 with domain: int(0..2) (representing constraint ((field_00009_00006=5) + (field_00009_00005=5)))
c Both direct and order encoding.
c Var 'aux1413' order represents '0' with '16115'
c Var 'aux1413' direct represents '0' with '16115'
c Var 'aux1413' order represents '1' with '16116'
-16115 16116 0
c Var 'aux1413' direct represents '1' with '16117'
16115 -16116 16117 0
-16117 16116 0
-16117 -16115 0
c Var 'aux1413' direct represents '2' with '-16116'
16115 16117 -16116 0
c Encoding variable: aux1414 with domain: int(0..3) (representing constraint ((field_00009_00003=5) + aux1413))
c Both direct and order encoding.
c Var 'aux1414' order represents '0' with '16118'
c Var 'aux1414' direct represents '0' with '16118'
c Var 'aux1414' order represents '1' with '16119'
-16118 16119 0
c Var 'aux1414' direct represents '1' with '16120'
16118 -16119 16120 0
-16120 16119 0
-16120 -16118 0
c Var 'aux1414' order represents '2' with '16121'
-16119 16121 0
c Var 'aux1414' direct represents '2' with '16122'
16119 -16121 16122 0
-16122 16121 0
-16122 -16119 0
c Var 'aux1414' direct represents '3' with '-16121'
16118 16120 16122 -16121 0
c Encoding variable: aux1415 with domain: int(0..4) (representing constraint (aux1410 + aux1412))
c Both direct and order encoding.
c Var 'aux1415' order represents '0' with '16123'
c Var 'aux1415' direct represents '0' with '16123'
c Var 'aux1415' order represents '1' with '16124'
-16123 16124 0
c Var 'aux1415' direct represents '1' with '16125'
16123 -16124 16125 0
-16125 16124 0
-16125 -16123 0
c Var 'aux1415' order represents '2' with '16126'
-16124 16126 0
c Var 'aux1415' direct represents '2' with '16127'
16124 -16126 16127 0
-16127 16126 0
-16127 -16124 0
c Var 'aux1415' order represents '3' with '16128'
-16126 16128 0
c Var 'aux1415' direct represents '3' with '16129'
16126 -16128 16129 0
-16129 16128 0
-16129 -16126 0
c Var 'aux1415' direct represents '4' with '-16128'
16123 16125 16127 16129 -16128 0
c Encoding variable: aux1416 with domain: int(0..2) (representing constraint ((field_00009_00001=6) + (field_00009_00009=6)))
c Both direct and order encoding.
c Var 'aux1416' order represents '0' with '16130'
c Var 'aux1416' direct represents '0' with '16130'
c Var 'aux1416' order represents '1' with '16131'
-16130 16131 0
c Var 'aux1416' direct represents '1' with '16132'
16130 -16131 16132 0
-16132 16131 0
-16132 -16130 0
c Var 'aux1416' direct represents '2' with '-16131'
16130 16132 -16131 0
c Encoding variable: aux1417 with domain: int(0..2) (representing constraint ((field_00009_00008=6) + (field_00009_00002=6)))
c Both direct and order encoding.
c Var 'aux1417' order represents '0' with '16133'
c Var 'aux1417' direct represents '0' with '16133'
c Var 'aux1417' order represents '1' with '16134'
-16133 16134 0
c Var 'aux1417' direct represents '1' with '16135'
16133 -16134 16135 0
-16135 16134 0
-16135 -16133 0
c Var 'aux1417' direct represents '2' with '-16134'
16133 16135 -16134 0
c Encoding variable: aux1418 with domain: int(0..2) (representing constraint ((field_00009_00007=6) + (field_00009_00004=6)))
c Both direct and order encoding.
c Var 'aux1418' order represents '0' with '16136'
c Var 'aux1418' direct represents '0' with '16136'
c Var 'aux1418' order represents '1' with '16137'
-16136 16137 0
c Var 'aux1418' direct represents '1' with '16138'
16136 -16137 16138 0
-16138 16137 0
-16138 -16136 0
c Var 'aux1418' direct represents '2' with '-16137'
16136 16138 -16137 0
c Encoding variable: aux1419 with domain: int(0..2) (representing constraint ((field_00009_00006=6) + (field_00009_00005=6)))
c Both direct and order encoding.
c Var 'aux1419' order represents '0' with '16139'
c Var 'aux1419' direct represents '0' with '16139'
c Var 'aux1419' order represents '1' with '16140'
-16139 16140 0
c Var 'aux1419' direct represents '1' with '16141'
16139 -16140 16141 0
-16141 16140 0
-16141 -16139 0
c Var 'aux1419' direct represents '2' with '-16140'
16139 16141 -16140 0
c Encoding variable: aux1420 with domain: int(0..3) (representing constraint ((field_00009_00003=6) + aux1419))
c Both direct and order encoding.
c Var 'aux1420' order represents '0' with '16142'
c Var 'aux1420' direct represents '0' with '16142'
c Var 'aux1420' order represents '1' with '16143'
-16142 16143 0
c Var 'aux1420' direct represents '1' with '16144'
16142 -16143 16144 0
-16144 16143 0
-16144 -16142 0
c Var 'aux1420' order represents '2' with '16145'
-16143 16145 0
c Var 'aux1420' direct represents '2' with '16146'
16143 -16145 16146 0
-16146 16145 0
-16146 -16143 0
c Var 'aux1420' direct represents '3' with '-16145'
16142 16144 16146 -16145 0
c Encoding variable: aux1421 with domain: int(0..4) (representing constraint (aux1416 + aux1418))
c Both direct and order encoding.
c Var 'aux1421' order represents '0' with '16147'
c Var 'aux1421' direct represents '0' with '16147'
c Var 'aux1421' order represents '1' with '16148'
-16147 16148 0
c Var 'aux1421' direct represents '1' with '16149'
16147 -16148 16149 0
-16149 16148 0
-16149 -16147 0
c Var 'aux1421' order represents '2' with '16150'
-16148 16150 0
c Var 'aux1421' direct represents '2' with '16151'
16148 -16150 16151 0
-16151 16150 0
-16151 -16148 0
c Var 'aux1421' order represents '3' with '16152'
-16150 16152 0
c Var 'aux1421' direct represents '3' with '16153'
16150 -16152 16153 0
-16153 16152 0
-16153 -16150 0
c Var 'aux1421' direct represents '4' with '-16152'
16147 16149 16151 16153 -16152 0
c Encoding variable: aux1422 with domain: int(0..2) (representing constraint ((field_00009_00001=7) + (field_00009_00009=7)))
c Both direct and order encoding.
c Var 'aux1422' order represents '0' with '16154'
c Var 'aux1422' direct represents '0' with '16154'
c Var 'aux1422' order represents '1' with '16155'
-16154 16155 0
c Var 'aux1422' direct represents '1' with '16156'
16154 -16155 16156 0
-16156 16155 0
-16156 -16154 0
c Var 'aux1422' direct represents '2' with '-16155'
16154 16156 -16155 0
c Encoding variable: aux1423 with domain: int(0..2) (representing constraint ((field_00009_00008=7) + (field_00009_00002=7)))
c Both direct and order encoding.
c Var 'aux1423' order represents '0' with '16157'
c Var 'aux1423' direct represents '0' with '16157'
c Var 'aux1423' order represents '1' with '16158'
-16157 16158 0
c Var 'aux1423' direct represents '1' with '16159'
16157 -16158 16159 0
-16159 16158 0
-16159 -16157 0
c Var 'aux1423' direct represents '2' with '-16158'
16157 16159 -16158 0
c Encoding variable: aux1424 with domain: int(0..2) (representing constraint ((field_00009_00007=7) + (field_00009_00004=7)))
c Both direct and order encoding.
c Var 'aux1424' order represents '0' with '16160'
c Var 'aux1424' direct represents '0' with '16160'
c Var 'aux1424' order represents '1' with '16161'
-16160 16161 0
c Var 'aux1424' direct represents '1' with '16162'
16160 -16161 16162 0
-16162 16161 0
-16162 -16160 0
c Var 'aux1424' direct represents '2' with '-16161'
16160 16162 -16161 0
c Encoding variable: aux1425 with domain: int(0..2) (representing constraint ((field_00009_00006=7) + (field_00009_00005=7)))
c Both direct and order encoding.
c Var 'aux1425' order represents '0' with '16163'
c Var 'aux1425' direct represents '0' with '16163'
c Var 'aux1425' order represents '1' with '16164'
-16163 16164 0
c Var 'aux1425' direct represents '1' with '16165'
16163 -16164 16165 0
-16165 16164 0
-16165 -16163 0
c Var 'aux1425' direct represents '2' with '-16164'
16163 16165 -16164 0
c Encoding variable: aux1426 with domain: int(0..3) (representing constraint ((field_00009_00003=7) + aux1425))
c Both direct and order encoding.
c Var 'aux1426' order represents '0' with '16166'
c Var 'aux1426' direct represents '0' with '16166'
c Var 'aux1426' order represents '1' with '16167'
-16166 16167 0
c Var 'aux1426' direct represents '1' with '16168'
16166 -16167 16168 0
-16168 16167 0
-16168 -16166 0
c Var 'aux1426' order represents '2' with '16169'
-16167 16169 0
c Var 'aux1426' direct represents '2' with '16170'
16167 -16169 16170 0
-16170 16169 0
-16170 -16167 0
c Var 'aux1426' direct represents '3' with '-16169'
16166 16168 16170 -16169 0
c Encoding variable: aux1427 with domain: int(0..4) (representing constraint (aux1422 + aux1424))
c Both direct and order encoding.
c Var 'aux1427' order represents '0' with '16171'
c Var 'aux1427' direct represents '0' with '16171'
c Var 'aux1427' order represents '1' with '16172'
-16171 16172 0
c Var 'aux1427' direct represents '1' with '16173'
16171 -16172 16173 0
-16173 16172 0
-16173 -16171 0
c Var 'aux1427' order represents '2' with '16174'
-16172 16174 0
c Var 'aux1427' direct represents '2' with '16175'
16172 -16174 16175 0
-16175 16174 0
-16175 -16172 0
c Var 'aux1427' order represents '3' with '16176'
-16174 16176 0
c Var 'aux1427' direct represents '3' with '16177'
16174 -16176 16177 0
-16177 16176 0
-16177 -16174 0
c Var 'aux1427' direct represents '4' with '-16176'
16171 16173 16175 16177 -16176 0
c Encoding variable: aux1428 with domain: int(0..2) (representing constraint ((field_00009_00001=8) + (field_00009_00009=8)))
c Both direct and order encoding.
c Var 'aux1428' order represents '0' with '16178'
c Var 'aux1428' direct represents '0' with '16178'
c Var 'aux1428' order represents '1' with '16179'
-16178 16179 0
c Var 'aux1428' direct represents '1' with '16180'
16178 -16179 16180 0
-16180 16179 0
-16180 -16178 0
c Var 'aux1428' direct represents '2' with '-16179'
16178 16180 -16179 0
c Encoding variable: aux1429 with domain: int(0..2) (representing constraint ((field_00009_00008=8) + (field_00009_00002=8)))
c Both direct and order encoding.
c Var 'aux1429' order represents '0' with '16181'
c Var 'aux1429' direct represents '0' with '16181'
c Var 'aux1429' order represents '1' with '16182'
-16181 16182 0
c Var 'aux1429' direct represents '1' with '16183'
16181 -16182 16183 0
-16183 16182 0
-16183 -16181 0
c Var 'aux1429' direct represents '2' with '-16182'
16181 16183 -16182 0
c Encoding variable: aux1430 with domain: int(0..2) (representing constraint ((field_00009_00007=8) + (field_00009_00004=8)))
c Both direct and order encoding.
c Var 'aux1430' order represents '0' with '16184'
c Var 'aux1430' direct represents '0' with '16184'
c Var 'aux1430' order represents '1' with '16185'
-16184 16185 0
c Var 'aux1430' direct represents '1' with '16186'
16184 -16185 16186 0
-16186 16185 0
-16186 -16184 0
c Var 'aux1430' direct represents '2' with '-16185'
16184 16186 -16185 0
c Encoding variable: aux1431 with domain: int(0..2) (representing constraint ((field_00009_00006=8) + (field_00009_00005=8)))
c Both direct and order encoding.
c Var 'aux1431' order represents '0' with '16187'
c Var 'aux1431' direct represents '0' with '16187'
c Var 'aux1431' order represents '1' with '16188'
-16187 16188 0
c Var 'aux1431' direct represents '1' with '16189'
16187 -16188 16189 0
-16189 16188 0
-16189 -16187 0
c Var 'aux1431' direct represents '2' with '-16188'
16187 16189 -16188 0
c Encoding variable: aux1432 with domain: int(0..3) (representing constraint ((field_00009_00003=8) + aux1431))
c Both direct and order encoding.
c Var 'aux1432' order represents '0' with '16190'
c Var 'aux1432' direct represents '0' with '16190'
c Var 'aux1432' order represents '1' with '16191'
-16190 16191 0
c Var 'aux1432' direct represents '1' with '16192'
16190 -16191 16192 0
-16192 16191 0
-16192 -16190 0
c Var 'aux1432' order represents '2' with '16193'
-16191 16193 0
c Var 'aux1432' direct represents '2' with '16194'
16191 -16193 16194 0
-16194 16193 0
-16194 -16191 0
c Var 'aux1432' direct represents '3' with '-16193'
16190 16192 16194 -16193 0
c Encoding variable: aux1433 with domain: int(0..4) (representing constraint (aux1428 + aux1430))
c Both direct and order encoding.
c Var 'aux1433' order represents '0' with '16195'
c Var 'aux1433' direct represents '0' with '16195'
c Var 'aux1433' order represents '1' with '16196'
-16195 16196 0
c Var 'aux1433' direct represents '1' with '16197'
16195 -16196 16197 0
-16197 16196 0
-16197 -16195 0
c Var 'aux1433' order represents '2' with '16198'
-16196 16198 0
c Var 'aux1433' direct represents '2' with '16199'
16196 -16198 16199 0
-16199 16198 0
-16199 -16196 0
c Var 'aux1433' order represents '3' with '16200'
-16198 16200 0
c Var 'aux1433' direct represents '3' with '16201'
16198 -16200 16201 0
-16201 16200 0
-16201 -16198 0
c Var 'aux1433' direct represents '4' with '-16200'
16195 16197 16199 16201 -16200 0
c Encoding variable: aux1434 with domain: int(0..2) (representing constraint ((field_00009_00001=9) + (field_00009_00009=9)))
c Both direct and order encoding.
c Var 'aux1434' order represents '0' with '16202'
c Var 'aux1434' direct represents '0' with '16202'
c Var 'aux1434' order represents '1' with '16203'
-16202 16203 0
c Var 'aux1434' direct represents '1' with '16204'
16202 -16203 16204 0
-16204 16203 0
-16204 -16202 0
c Var 'aux1434' direct represents '2' with '-16203'
16202 16204 -16203 0
c Encoding variable: aux1435 with domain: int(0..2) (representing constraint ((field_00009_00008=9) + (field_00009_00002=9)))
c Both direct and order encoding.
c Var 'aux1435' order represents '0' with '16205'
c Var 'aux1435' direct represents '0' with '16205'
c Var 'aux1435' order represents '1' with '16206'
-16205 16206 0
c Var 'aux1435' direct represents '1' with '16207'
16205 -16206 16207 0
-16207 16206 0
-16207 -16205 0
c Var 'aux1435' direct represents '2' with '-16206'
16205 16207 -16206 0
c Encoding variable: aux1436 with domain: int(0..2) (representing constraint ((field_00009_00007=9) + (field_00009_00004=9)))
c Both direct and order encoding.
c Var 'aux1436' order represents '0' with '16208'
c Var 'aux1436' direct represents '0' with '16208'
c Var 'aux1436' order represents '1' with '16209'
-16208 16209 0
c Var 'aux1436' direct represents '1' with '16210'
16208 -16209 16210 0
-16210 16209 0
-16210 -16208 0
c Var 'aux1436' direct represents '2' with '-16209'
16208 16210 -16209 0
c Encoding variable: aux1437 with domain: int(0..2) (representing constraint ((field_00009_00006=9) + (field_00009_00005=9)))
c Both direct and order encoding.
c Var 'aux1437' order represents '0' with '16211'
c Var 'aux1437' direct represents '0' with '16211'
c Var 'aux1437' order represents '1' with '16212'
-16211 16212 0
c Var 'aux1437' direct represents '1' with '16213'
16211 -16212 16213 0
-16213 16212 0
-16213 -16211 0
c Var 'aux1437' direct represents '2' with '-16212'
16211 16213 -16212 0
c Encoding variable: aux1438 with domain: int(0..3) (representing constraint ((field_00009_00003=9) + aux1437))
c Both direct and order encoding.
c Var 'aux1438' order represents '0' with '16214'
c Var 'aux1438' direct represents '0' with '16214'
c Var 'aux1438' order represents '1' with '16215'
-16214 16215 0
c Var 'aux1438' direct represents '1' with '16216'
16214 -16215 16216 0
-16216 16215 0
-16216 -16214 0
c Var 'aux1438' order represents '2' with '16217'
-16215 16217 0
c Var 'aux1438' direct represents '2' with '16218'
16215 -16217 16218 0
-16218 16217 0
-16218 -16215 0
c Var 'aux1438' direct represents '3' with '-16217'
16214 16216 16218 -16217 0
c Encoding variable: aux1439 with domain: int(0..4) (representing constraint (aux1434 + aux1436))
c Both direct and order encoding.
c Var 'aux1439' order represents '0' with '16219'
c Var 'aux1439' direct represents '0' with '16219'
c Var 'aux1439' order represents '1' with '16220'
-16219 16220 0
c Var 'aux1439' direct represents '1' with '16221'
16219 -16220 16221 0
-16221 16220 0
-16221 -16219 0
c Var 'aux1439' order represents '2' with '16222'
-16220 16222 0
c Var 'aux1439' direct represents '2' with '16223'
16220 -16222 16223 0
-16223 16222 0
-16223 -16220 0
c Var 'aux1439' order represents '3' with '16224'
-16222 16224 0
c Var 'aux1439' direct represents '3' with '16225'
16222 -16224 16225 0
-16225 16224 0
-16225 -16222 0
c Var 'aux1439' direct represents '4' with '-16224'
16219 16221 16223 16225 -16224 0
c Encoding variable: aux1440 with domain: int(0..2) (representing constraint ((field_00002_00001=1) + (field_00001_00003=1)))
c Both direct and order encoding.
c Var 'aux1440' order represents '0' with '16226'
c Var 'aux1440' direct represents '0' with '16226'
c Var 'aux1440' order represents '1' with '16227'
-16226 16227 0
c Var 'aux1440' direct represents '1' with '16228'
16226 -16227 16228 0
-16228 16227 0
-16228 -16226 0
c Var 'aux1440' direct represents '2' with '-16227'
16226 16228 -16227 0
c Encoding variable: aux1441 with domain: int(0..2) (representing constraint ((field_00001_00002=1) + (field_00002_00002=1)))
c Both direct and order encoding.
c Var 'aux1441' order represents '0' with '16229'
c Var 'aux1441' direct represents '0' with '16229'
c Var 'aux1441' order represents '1' with '16230'
-16229 16230 0
c Var 'aux1441' direct represents '1' with '16231'
16229 -16230 16231 0
-16231 16230 0
-16231 -16229 0
c Var 'aux1441' direct represents '2' with '-16230'
16229 16231 -16230 0
c Encoding variable: aux1442 with domain: int(0..2) (representing constraint ((field_00001_00001=1) + (field_00003_00001=1)))
c Both direct and order encoding.
c Var 'aux1442' order represents '0' with '16232'
c Var 'aux1442' direct represents '0' with '16232'
c Var 'aux1442' order represents '1' with '16233'
-16232 16233 0
c Var 'aux1442' direct represents '1' with '16234'
16232 -16233 16234 0
-16234 16233 0
-16234 -16232 0
c Var 'aux1442' direct represents '2' with '-16233'
16232 16234 -16233 0
c Encoding variable: aux1443 with domain: int(0..2) (representing constraint ((field_00003_00003=1) + (field_00003_00002=1)))
c Both direct and order encoding.
c Var 'aux1443' order represents '0' with '16235'
c Var 'aux1443' direct represents '0' with '16235'
c Var 'aux1443' order represents '1' with '16236'
-16235 16236 0
c Var 'aux1443' direct represents '1' with '16237'
16235 -16236 16237 0
-16237 16236 0
-16237 -16235 0
c Var 'aux1443' direct represents '2' with '-16236'
16235 16237 -16236 0
c Encoding variable: aux1444 with domain: int(0..3) (representing constraint ((field_00002_00003=1) + aux1443))
c Both direct and order encoding.
c Var 'aux1444' order represents '0' with '16238'
c Var 'aux1444' direct represents '0' with '16238'
c Var 'aux1444' order represents '1' with '16239'
-16238 16239 0
c Var 'aux1444' direct represents '1' with '16240'
16238 -16239 16240 0
-16240 16239 0
-16240 -16238 0
c Var 'aux1444' order represents '2' with '16241'
-16239 16241 0
c Var 'aux1444' direct represents '2' with '16242'
16239 -16241 16242 0
-16242 16241 0
-16242 -16239 0
c Var 'aux1444' direct represents '3' with '-16241'
16238 16240 16242 -16241 0
c Encoding variable: aux1445 with domain: int(0..4) (representing constraint (aux1440 + aux1442))
c Both direct and order encoding.
c Var 'aux1445' order represents '0' with '16243'
c Var 'aux1445' direct represents '0' with '16243'
c Var 'aux1445' order represents '1' with '16244'
-16243 16244 0
c Var 'aux1445' direct represents '1' with '16245'
16243 -16244 16245 0
-16245 16244 0
-16245 -16243 0
c Var 'aux1445' order represents '2' with '16246'
-16244 16246 0
c Var 'aux1445' direct represents '2' with '16247'
16244 -16246 16247 0
-16247 16246 0
-16247 -16244 0
c Var 'aux1445' order represents '3' with '16248'
-16246 16248 0
c Var 'aux1445' direct represents '3' with '16249'
16246 -16248 16249 0
-16249 16248 0
-16249 -16246 0
c Var 'aux1445' direct represents '4' with '-16248'
16243 16245 16247 16249 -16248 0
c Encoding variable: aux1446 with domain: int(0..2) (representing constraint ((field_00002_00001=2) + (field_00001_00003=2)))
c Both direct and order encoding.
c Var 'aux1446' order represents '0' with '16250'
c Var 'aux1446' direct represents '0' with '16250'
c Var 'aux1446' order represents '1' with '16251'
-16250 16251 0
c Var 'aux1446' direct represents '1' with '16252'
16250 -16251 16252 0
-16252 16251 0
-16252 -16250 0
c Var 'aux1446' direct represents '2' with '-16251'
16250 16252 -16251 0
c Encoding variable: aux1447 with domain: int(0..2) (representing constraint ((field_00001_00002=2) + (field_00002_00002=2)))
c Both direct and order encoding.
c Var 'aux1447' order represents '0' with '16253'
c Var 'aux1447' direct represents '0' with '16253'
c Var 'aux1447' order represents '1' with '16254'
-16253 16254 0
c Var 'aux1447' direct represents '1' with '16255'
16253 -16254 16255 0
-16255 16254 0
-16255 -16253 0
c Var 'aux1447' direct represents '2' with '-16254'
16253 16255 -16254 0
c Encoding variable: aux1448 with domain: int(0..2) (representing constraint ((field_00001_00001=2) + (field_00003_00001=2)))
c Both direct and order encoding.
c Var 'aux1448' order represents '0' with '16256'
c Var 'aux1448' direct represents '0' with '16256'
c Var 'aux1448' order represents '1' with '16257'
-16256 16257 0
c Var 'aux1448' direct represents '1' with '16258'
16256 -16257 16258 0
-16258 16257 0
-16258 -16256 0
c Var 'aux1448' direct represents '2' with '-16257'
16256 16258 -16257 0
c Encoding variable: aux1449 with domain: int(0..2) (representing constraint ((field_00003_00003=2) + (field_00003_00002=2)))
c Both direct and order encoding.
c Var 'aux1449' order represents '0' with '16259'
c Var 'aux1449' direct represents '0' with '16259'
c Var 'aux1449' order represents '1' with '16260'
-16259 16260 0
c Var 'aux1449' direct represents '1' with '16261'
16259 -16260 16261 0
-16261 16260 0
-16261 -16259 0
c Var 'aux1449' direct represents '2' with '-16260'
16259 16261 -16260 0
c Encoding variable: aux1450 with domain: int(0..3) (representing constraint ((field_00002_00003=2) + aux1449))
c Both direct and order encoding.
c Var 'aux1450' order represents '0' with '16262'
c Var 'aux1450' direct represents '0' with '16262'
c Var 'aux1450' order represents '1' with '16263'
-16262 16263 0
c Var 'aux1450' direct represents '1' with '16264'
16262 -16263 16264 0
-16264 16263 0
-16264 -16262 0
c Var 'aux1450' order represents '2' with '16265'
-16263 16265 0
c Var 'aux1450' direct represents '2' with '16266'
16263 -16265 16266 0
-16266 16265 0
-16266 -16263 0
c Var 'aux1450' direct represents '3' with '-16265'
16262 16264 16266 -16265 0
c Encoding variable: aux1451 with domain: int(0..4) (representing constraint (aux1446 + aux1448))
c Both direct and order encoding.
c Var 'aux1451' order represents '0' with '16267'
c Var 'aux1451' direct represents '0' with '16267'
c Var 'aux1451' order represents '1' with '16268'
-16267 16268 0
c Var 'aux1451' direct represents '1' with '16269'
16267 -16268 16269 0
-16269 16268 0
-16269 -16267 0
c Var 'aux1451' order represents '2' with '16270'
-16268 16270 0
c Var 'aux1451' direct represents '2' with '16271'
16268 -16270 16271 0
-16271 16270 0
-16271 -16268 0
c Var 'aux1451' order represents '3' with '16272'
-16270 16272 0
c Var 'aux1451' direct represents '3' with '16273'
16270 -16272 16273 0
-16273 16272 0
-16273 -16270 0
c Var 'aux1451' direct represents '4' with '-16272'
16267 16269 16271 16273 -16272 0
c Encoding variable: aux1452 with domain: int(0..2) (representing constraint ((field_00002_00001=3) + (field_00001_00003=3)))
c Both direct and order encoding.
c Var 'aux1452' order represents '0' with '16274'
c Var 'aux1452' direct represents '0' with '16274'
c Var 'aux1452' order represents '1' with '16275'
-16274 16275 0
c Var 'aux1452' direct represents '1' with '16276'
16274 -16275 16276 0
-16276 16275 0
-16276 -16274 0
c Var 'aux1452' direct represents '2' with '-16275'
16274 16276 -16275 0
c Encoding variable: aux1453 with domain: int(0..2) (representing constraint ((field_00001_00002=3) + (field_00002_00002=3)))
c Both direct and order encoding.
c Var 'aux1453' order represents '0' with '16277'
c Var 'aux1453' direct represents '0' with '16277'
c Var 'aux1453' order represents '1' with '16278'
-16277 16278 0
c Var 'aux1453' direct represents '1' with '16279'
16277 -16278 16279 0
-16279 16278 0
-16279 -16277 0
c Var 'aux1453' direct represents '2' with '-16278'
16277 16279 -16278 0
c Encoding variable: aux1454 with domain: int(0..2) (representing constraint ((field_00001_00001=3) + (field_00003_00001=3)))
c Both direct and order encoding.
c Var 'aux1454' order represents '0' with '16280'
c Var 'aux1454' direct represents '0' with '16280'
c Var 'aux1454' order represents '1' with '16281'
-16280 16281 0
c Var 'aux1454' direct represents '1' with '16282'
16280 -16281 16282 0
-16282 16281 0
-16282 -16280 0
c Var 'aux1454' direct represents '2' with '-16281'
16280 16282 -16281 0
c Encoding variable: aux1455 with domain: int(0..2) (representing constraint ((field_00003_00003=3) + (field_00003_00002=3)))
c Both direct and order encoding.
c Var 'aux1455' order represents '0' with '16283'
c Var 'aux1455' direct represents '0' with '16283'
c Var 'aux1455' order represents '1' with '16284'
-16283 16284 0
c Var 'aux1455' direct represents '1' with '16285'
16283 -16284 16285 0
-16285 16284 0
-16285 -16283 0
c Var 'aux1455' direct represents '2' with '-16284'
16283 16285 -16284 0
c Encoding variable: aux1456 with domain: int(0..3) (representing constraint ((field_00002_00003=3) + aux1455))
c Both direct and order encoding.
c Var 'aux1456' order represents '0' with '16286'
c Var 'aux1456' direct represents '0' with '16286'
c Var 'aux1456' order represents '1' with '16287'
-16286 16287 0
c Var 'aux1456' direct represents '1' with '16288'
16286 -16287 16288 0
-16288 16287 0
-16288 -16286 0
c Var 'aux1456' order represents '2' with '16289'
-16287 16289 0
c Var 'aux1456' direct represents '2' with '16290'
16287 -16289 16290 0
-16290 16289 0
-16290 -16287 0
c Var 'aux1456' direct represents '3' with '-16289'
16286 16288 16290 -16289 0
c Encoding variable: aux1457 with domain: int(0..4) (representing constraint (aux1452 + aux1454))
c Both direct and order encoding.
c Var 'aux1457' order represents '0' with '16291'
c Var 'aux1457' direct represents '0' with '16291'
c Var 'aux1457' order represents '1' with '16292'
-16291 16292 0
c Var 'aux1457' direct represents '1' with '16293'
16291 -16292 16293 0
-16293 16292 0
-16293 -16291 0
c Var 'aux1457' order represents '2' with '16294'
-16292 16294 0
c Var 'aux1457' direct represents '2' with '16295'
16292 -16294 16295 0
-16295 16294 0
-16295 -16292 0
c Var 'aux1457' order represents '3' with '16296'
-16294 16296 0
c Var 'aux1457' direct represents '3' with '16297'
16294 -16296 16297 0
-16297 16296 0
-16297 -16294 0
c Var 'aux1457' direct represents '4' with '-16296'
16291 16293 16295 16297 -16296 0
c Encoding variable: aux1458 with domain: int(0..2) (representing constraint ((field_00002_00001=4) + (field_00001_00003=4)))
c Both direct and order encoding.
c Var 'aux1458' order represents '0' with '16298'
c Var 'aux1458' direct represents '0' with '16298'
c Var 'aux1458' order represents '1' with '16299'
-16298 16299 0
c Var 'aux1458' direct represents '1' with '16300'
16298 -16299 16300 0
-16300 16299 0
-16300 -16298 0
c Var 'aux1458' direct represents '2' with '-16299'
16298 16300 -16299 0
c Encoding variable: aux1459 with domain: int(0..2) (representing constraint ((field_00001_00002=4) + (field_00002_00002=4)))
c Both direct and order encoding.
c Var 'aux1459' order represents '0' with '16301'
c Var 'aux1459' direct represents '0' with '16301'
c Var 'aux1459' order represents '1' with '16302'
-16301 16302 0
c Var 'aux1459' direct represents '1' with '16303'
16301 -16302 16303 0
-16303 16302 0
-16303 -16301 0
c Var 'aux1459' direct represents '2' with '-16302'
16301 16303 -16302 0
c Encoding variable: aux1460 with domain: int(0..2) (representing constraint ((field_00001_00001=4) + (field_00003_00001=4)))
c Both direct and order encoding.
c Var 'aux1460' order represents '0' with '16304'
c Var 'aux1460' direct represents '0' with '16304'
c Var 'aux1460' order represents '1' with '16305'
-16304 16305 0
c Var 'aux1460' direct represents '1' with '16306'
16304 -16305 16306 0
-16306 16305 0
-16306 -16304 0
c Var 'aux1460' direct represents '2' with '-16305'
16304 16306 -16305 0
c Encoding variable: aux1461 with domain: int(0..2) (representing constraint ((field_00003_00003=4) + (field_00003_00002=4)))
c Both direct and order encoding.
c Var 'aux1461' order represents '0' with '16307'
c Var 'aux1461' direct represents '0' with '16307'
c Var 'aux1461' order represents '1' with '16308'
-16307 16308 0
c Var 'aux1461' direct represents '1' with '16309'
16307 -16308 16309 0
-16309 16308 0
-16309 -16307 0
c Var 'aux1461' direct represents '2' with '-16308'
16307 16309 -16308 0
c Encoding variable: aux1462 with domain: int(0..3) (representing constraint ((field_00002_00003=4) + aux1461))
c Both direct and order encoding.
c Var 'aux1462' order represents '0' with '16310'
c Var 'aux1462' direct represents '0' with '16310'
c Var 'aux1462' order represents '1' with '16311'
-16310 16311 0
c Var 'aux1462' direct represents '1' with '16312'
16310 -16311 16312 0
-16312 16311 0
-16312 -16310 0
c Var 'aux1462' order represents '2' with '16313'
-16311 16313 0
c Var 'aux1462' direct represents '2' with '16314'
16311 -16313 16314 0
-16314 16313 0
-16314 -16311 0
c Var 'aux1462' direct represents '3' with '-16313'
16310 16312 16314 -16313 0
c Encoding variable: aux1463 with domain: int(0..4) (representing constraint (aux1458 + aux1460))
c Both direct and order encoding.
c Var 'aux1463' order represents '0' with '16315'
c Var 'aux1463' direct represents '0' with '16315'
c Var 'aux1463' order represents '1' with '16316'
-16315 16316 0
c Var 'aux1463' direct represents '1' with '16317'
16315 -16316 16317 0
-16317 16316 0
-16317 -16315 0
c Var 'aux1463' order represents '2' with '16318'
-16316 16318 0
c Var 'aux1463' direct represents '2' with '16319'
16316 -16318 16319 0
-16319 16318 0
-16319 -16316 0
c Var 'aux1463' order represents '3' with '16320'
-16318 16320 0
c Var 'aux1463' direct represents '3' with '16321'
16318 -16320 16321 0
-16321 16320 0
-16321 -16318 0
c Var 'aux1463' direct represents '4' with '-16320'
16315 16317 16319 16321 -16320 0
c Encoding variable: aux1464 with domain: int(0..2) (representing constraint ((field_00002_00001=5) + (field_00001_00003=5)))
c Both direct and order encoding.
c Var 'aux1464' order represents '0' with '16322'
c Var 'aux1464' direct represents '0' with '16322'
c Var 'aux1464' order represents '1' with '16323'
-16322 16323 0
c Var 'aux1464' direct represents '1' with '16324'
16322 -16323 16324 0
-16324 16323 0
-16324 -16322 0
c Var 'aux1464' direct represents '2' with '-16323'
16322 16324 -16323 0
c Encoding variable: aux1465 with domain: int(0..2) (representing constraint ((field_00001_00002=5) + (field_00002_00002=5)))
c Both direct and order encoding.
c Var 'aux1465' order represents '0' with '16325'
c Var 'aux1465' direct represents '0' with '16325'
c Var 'aux1465' order represents '1' with '16326'
-16325 16326 0
c Var 'aux1465' direct represents '1' with '16327'
16325 -16326 16327 0
-16327 16326 0
-16327 -16325 0
c Var 'aux1465' direct represents '2' with '-16326'
16325 16327 -16326 0
c Encoding variable: aux1466 with domain: int(0..2) (representing constraint ((field_00001_00001=5) + (field_00003_00001=5)))
c Both direct and order encoding.
c Var 'aux1466' order represents '0' with '16328'
c Var 'aux1466' direct represents '0' with '16328'
c Var 'aux1466' order represents '1' with '16329'
-16328 16329 0
c Var 'aux1466' direct represents '1' with '16330'
16328 -16329 16330 0
-16330 16329 0
-16330 -16328 0
c Var 'aux1466' direct represents '2' with '-16329'
16328 16330 -16329 0
c Encoding variable: aux1467 with domain: int(0..2) (representing constraint ((field_00003_00003=5) + (field_00003_00002=5)))
c Both direct and order encoding.
c Var 'aux1467' order represents '0' with '16331'
c Var 'aux1467' direct represents '0' with '16331'
c Var 'aux1467' order represents '1' with '16332'
-16331 16332 0
c Var 'aux1467' direct represents '1' with '16333'
16331 -16332 16333 0
-16333 16332 0
-16333 -16331 0
c Var 'aux1467' direct represents '2' with '-16332'
16331 16333 -16332 0
c Encoding variable: aux1468 with domain: int(0..3) (representing constraint ((field_00002_00003=5) + aux1467))
c Both direct and order encoding.
c Var 'aux1468' order represents '0' with '16334'
c Var 'aux1468' direct represents '0' with '16334'
c Var 'aux1468' order represents '1' with '16335'
-16334 16335 0
c Var 'aux1468' direct represents '1' with '16336'
16334 -16335 16336 0
-16336 16335 0
-16336 -16334 0
c Var 'aux1468' order represents '2' with '16337'
-16335 16337 0
c Var 'aux1468' direct represents '2' with '16338'
16335 -16337 16338 0
-16338 16337 0
-16338 -16335 0
c Var 'aux1468' direct represents '3' with '-16337'
16334 16336 16338 -16337 0
c Encoding variable: aux1469 with domain: int(0..4) (representing constraint (aux1464 + aux1466))
c Both direct and order encoding.
c Var 'aux1469' order represents '0' with '16339'
c Var 'aux1469' direct represents '0' with '16339'
c Var 'aux1469' order represents '1' with '16340'
-16339 16340 0
c Var 'aux1469' direct represents '1' with '16341'
16339 -16340 16341 0
-16341 16340 0
-16341 -16339 0
c Var 'aux1469' order represents '2' with '16342'
-16340 16342 0
c Var 'aux1469' direct represents '2' with '16343'
16340 -16342 16343 0
-16343 16342 0
-16343 -16340 0
c Var 'aux1469' order represents '3' with '16344'
-16342 16344 0
c Var 'aux1469' direct represents '3' with '16345'
16342 -16344 16345 0
-16345 16344 0
-16345 -16342 0
c Var 'aux1469' direct represents '4' with '-16344'
16339 16341 16343 16345 -16344 0
c Encoding variable: aux1470 with domain: int(0..2) (representing constraint ((field_00002_00001=6) + (field_00001_00003=6)))
c Both direct and order encoding.
c Var 'aux1470' order represents '0' with '16346'
c Var 'aux1470' direct represents '0' with '16346'
c Var 'aux1470' order represents '1' with '16347'
-16346 16347 0
c Var 'aux1470' direct represents '1' with '16348'
16346 -16347 16348 0
-16348 16347 0
-16348 -16346 0
c Var 'aux1470' direct represents '2' with '-16347'
16346 16348 -16347 0
c Encoding variable: aux1471 with domain: int(0..2) (representing constraint ((field_00001_00002=6) + (field_00002_00002=6)))
c Both direct and order encoding.
c Var 'aux1471' order represents '0' with '16349'
c Var 'aux1471' direct represents '0' with '16349'
c Var 'aux1471' order represents '1' with '16350'
-16349 16350 0
c Var 'aux1471' direct represents '1' with '16351'
16349 -16350 16351 0
-16351 16350 0
-16351 -16349 0
c Var 'aux1471' direct represents '2' with '-16350'
16349 16351 -16350 0
c Encoding variable: aux1472 with domain: int(0..2) (representing constraint ((field_00001_00001=6) + (field_00003_00001=6)))
c Both direct and order encoding.
c Var 'aux1472' order represents '0' with '16352'
c Var 'aux1472' direct represents '0' with '16352'
c Var 'aux1472' order represents '1' with '16353'
-16352 16353 0
c Var 'aux1472' direct represents '1' with '16354'
16352 -16353 16354 0
-16354 16353 0
-16354 -16352 0
c Var 'aux1472' direct represents '2' with '-16353'
16352 16354 -16353 0
c Encoding variable: aux1473 with domain: int(0..2) (representing constraint ((field_00003_00003=6) + (field_00003_00002=6)))
c Both direct and order encoding.
c Var 'aux1473' order represents '0' with '16355'
c Var 'aux1473' direct represents '0' with '16355'
c Var 'aux1473' order represents '1' with '16356'
-16355 16356 0
c Var 'aux1473' direct represents '1' with '16357'
16355 -16356 16357 0
-16357 16356 0
-16357 -16355 0
c Var 'aux1473' direct represents '2' with '-16356'
16355 16357 -16356 0
c Encoding variable: aux1474 with domain: int(0..3) (representing constraint ((field_00002_00003=6) + aux1473))
c Both direct and order encoding.
c Var 'aux1474' order represents '0' with '16358'
c Var 'aux1474' direct represents '0' with '16358'
c Var 'aux1474' order represents '1' with '16359'
-16358 16359 0
c Var 'aux1474' direct represents '1' with '16360'
16358 -16359 16360 0
-16360 16359 0
-16360 -16358 0
c Var 'aux1474' order represents '2' with '16361'
-16359 16361 0
c Var 'aux1474' direct represents '2' with '16362'
16359 -16361 16362 0
-16362 16361 0
-16362 -16359 0
c Var 'aux1474' direct represents '3' with '-16361'
16358 16360 16362 -16361 0
c Encoding variable: aux1475 with domain: int(0..4) (representing constraint (aux1470 + aux1472))
c Both direct and order encoding.
c Var 'aux1475' order represents '0' with '16363'
c Var 'aux1475' direct represents '0' with '16363'
c Var 'aux1475' order represents '1' with '16364'
-16363 16364 0
c Var 'aux1475' direct represents '1' with '16365'
16363 -16364 16365 0
-16365 16364 0
-16365 -16363 0
c Var 'aux1475' order represents '2' with '16366'
-16364 16366 0
c Var 'aux1475' direct represents '2' with '16367'
16364 -16366 16367 0
-16367 16366 0
-16367 -16364 0
c Var 'aux1475' order represents '3' with '16368'
-16366 16368 0
c Var 'aux1475' direct represents '3' with '16369'
16366 -16368 16369 0
-16369 16368 0
-16369 -16366 0
c Var 'aux1475' direct represents '4' with '-16368'
16363 16365 16367 16369 -16368 0
c Encoding variable: aux1476 with domain: int(0..2) (representing constraint ((field_00002_00001=7) + (field_00001_00003=7)))
c Both direct and order encoding.
c Var 'aux1476' order represents '0' with '16370'
c Var 'aux1476' direct represents '0' with '16370'
c Var 'aux1476' order represents '1' with '16371'
-16370 16371 0
c Var 'aux1476' direct represents '1' with '16372'
16370 -16371 16372 0
-16372 16371 0
-16372 -16370 0
c Var 'aux1476' direct represents '2' with '-16371'
16370 16372 -16371 0
c Encoding variable: aux1477 with domain: int(0..2) (representing constraint ((field_00001_00002=7) + (field_00002_00002=7)))
c Both direct and order encoding.
c Var 'aux1477' order represents '0' with '16373'
c Var 'aux1477' direct represents '0' with '16373'
c Var 'aux1477' order represents '1' with '16374'
-16373 16374 0
c Var 'aux1477' direct represents '1' with '16375'
16373 -16374 16375 0
-16375 16374 0
-16375 -16373 0
c Var 'aux1477' direct represents '2' with '-16374'
16373 16375 -16374 0
c Encoding variable: aux1478 with domain: int(0..2) (representing constraint ((field_00001_00001=7) + (field_00003_00001=7)))
c Both direct and order encoding.
c Var 'aux1478' order represents '0' with '16376'
c Var 'aux1478' direct represents '0' with '16376'
c Var 'aux1478' order represents '1' with '16377'
-16376 16377 0
c Var 'aux1478' direct represents '1' with '16378'
16376 -16377 16378 0
-16378 16377 0
-16378 -16376 0
c Var 'aux1478' direct represents '2' with '-16377'
16376 16378 -16377 0
c Encoding variable: aux1479 with domain: int(0..2) (representing constraint ((field_00003_00003=7) + (field_00003_00002=7)))
c Both direct and order encoding.
c Var 'aux1479' order represents '0' with '16379'
c Var 'aux1479' direct represents '0' with '16379'
c Var 'aux1479' order represents '1' with '16380'
-16379 16380 0
c Var 'aux1479' direct represents '1' with '16381'
16379 -16380 16381 0
-16381 16380 0
-16381 -16379 0
c Var 'aux1479' direct represents '2' with '-16380'
16379 16381 -16380 0
c Encoding variable: aux1480 with domain: int(0..3) (representing constraint ((field_00002_00003=7) + aux1479))
c Both direct and order encoding.
c Var 'aux1480' order represents '0' with '16382'
c Var 'aux1480' direct represents '0' with '16382'
c Var 'aux1480' order represents '1' with '16383'
-16382 16383 0
c Var 'aux1480' direct represents '1' with '16384'
16382 -16383 16384 0
-16384 16383 0
-16384 -16382 0
c Var 'aux1480' order represents '2' with '16385'
-16383 16385 0
c Var 'aux1480' direct represents '2' with '16386'
16383 -16385 16386 0
-16386 16385 0
-16386 -16383 0
c Var 'aux1480' direct represents '3' with '-16385'
16382 16384 16386 -16385 0
c Encoding variable: aux1481 with domain: int(0..4) (representing constraint (aux1476 + aux1478))
c Both direct and order encoding.
c Var 'aux1481' order represents '0' with '16387'
c Var 'aux1481' direct represents '0' with '16387'
c Var 'aux1481' order represents '1' with '16388'
-16387 16388 0
c Var 'aux1481' direct represents '1' with '16389'
16387 -16388 16389 0
-16389 16388 0
-16389 -16387 0
c Var 'aux1481' order represents '2' with '16390'
-16388 16390 0
c Var 'aux1481' direct represents '2' with '16391'
16388 -16390 16391 0
-16391 16390 0
-16391 -16388 0
c Var 'aux1481' order represents '3' with '16392'
-16390 16392 0
c Var 'aux1481' direct represents '3' with '16393'
16390 -16392 16393 0
-16393 16392 0
-16393 -16390 0
c Var 'aux1481' direct represents '4' with '-16392'
16387 16389 16391 16393 -16392 0
c Encoding variable: aux1482 with domain: int(0..2) (representing constraint ((field_00002_00001=8) + (field_00001_00003=8)))
c Both direct and order encoding.
c Var 'aux1482' order represents '0' with '16394'
c Var 'aux1482' direct represents '0' with '16394'
c Var 'aux1482' order represents '1' with '16395'
-16394 16395 0
c Var 'aux1482' direct represents '1' with '16396'
16394 -16395 16396 0
-16396 16395 0
-16396 -16394 0
c Var 'aux1482' direct represents '2' with '-16395'
16394 16396 -16395 0
c Encoding variable: aux1483 with domain: int(0..2) (representing constraint ((field_00001_00002=8) + (field_00002_00002=8)))
c Both direct and order encoding.
c Var 'aux1483' order represents '0' with '16397'
c Var 'aux1483' direct represents '0' with '16397'
c Var 'aux1483' order represents '1' with '16398'
-16397 16398 0
c Var 'aux1483' direct represents '1' with '16399'
16397 -16398 16399 0
-16399 16398 0
-16399 -16397 0
c Var 'aux1483' direct represents '2' with '-16398'
16397 16399 -16398 0
c Encoding variable: aux1484 with domain: int(0..2) (representing constraint ((field_00001_00001=8) + (field_00003_00001=8)))
c Both direct and order encoding.
c Var 'aux1484' order represents '0' with '16400'
c Var 'aux1484' direct represents '0' with '16400'
c Var 'aux1484' order represents '1' with '16401'
-16400 16401 0
c Var 'aux1484' direct represents '1' with '16402'
16400 -16401 16402 0
-16402 16401 0
-16402 -16400 0
c Var 'aux1484' direct represents '2' with '-16401'
16400 16402 -16401 0
c Encoding variable: aux1485 with domain: int(0..2) (representing constraint ((field_00003_00003=8) + (field_00003_00002=8)))
c Both direct and order encoding.
c Var 'aux1485' order represents '0' with '16403'
c Var 'aux1485' direct represents '0' with '16403'
c Var 'aux1485' order represents '1' with '16404'
-16403 16404 0
c Var 'aux1485' direct represents '1' with '16405'
16403 -16404 16405 0
-16405 16404 0
-16405 -16403 0
c Var 'aux1485' direct represents '2' with '-16404'
16403 16405 -16404 0
c Encoding variable: aux1486 with domain: int(0..3) (representing constraint ((field_00002_00003=8) + aux1485))
c Both direct and order encoding.
c Var 'aux1486' order represents '0' with '16406'
c Var 'aux1486' direct represents '0' with '16406'
c Var 'aux1486' order represents '1' with '16407'
-16406 16407 0
c Var 'aux1486' direct represents '1' with '16408'
16406 -16407 16408 0
-16408 16407 0
-16408 -16406 0
c Var 'aux1486' order represents '2' with '16409'
-16407 16409 0
c Var 'aux1486' direct represents '2' with '16410'
16407 -16409 16410 0
-16410 16409 0
-16410 -16407 0
c Var 'aux1486' direct represents '3' with '-16409'
16406 16408 16410 -16409 0
c Encoding variable: aux1487 with domain: int(0..4) (representing constraint (aux1482 + aux1484))
c Both direct and order encoding.
c Var 'aux1487' order represents '0' with '16411'
c Var 'aux1487' direct represents '0' with '16411'
c Var 'aux1487' order represents '1' with '16412'
-16411 16412 0
c Var 'aux1487' direct represents '1' with '16413'
16411 -16412 16413 0
-16413 16412 0
-16413 -16411 0
c Var 'aux1487' order represents '2' with '16414'
-16412 16414 0
c Var 'aux1487' direct represents '2' with '16415'
16412 -16414 16415 0
-16415 16414 0
-16415 -16412 0
c Var 'aux1487' order represents '3' with '16416'
-16414 16416 0
c Var 'aux1487' direct represents '3' with '16417'
16414 -16416 16417 0
-16417 16416 0
-16417 -16414 0
c Var 'aux1487' direct represents '4' with '-16416'
16411 16413 16415 16417 -16416 0
c Encoding variable: aux1488 with domain: int(0..2) (representing constraint ((field_00002_00001=9) + (field_00001_00003=9)))
c Both direct and order encoding.
c Var 'aux1488' order represents '0' with '16418'
c Var 'aux1488' direct represents '0' with '16418'
c Var 'aux1488' order represents '1' with '16419'
-16418 16419 0
c Var 'aux1488' direct represents '1' with '16420'
16418 -16419 16420 0
-16420 16419 0
-16420 -16418 0
c Var 'aux1488' direct represents '2' with '-16419'
16418 16420 -16419 0
c Encoding variable: aux1489 with domain: int(0..2) (representing constraint ((field_00001_00002=9) + (field_00002_00002=9)))
c Both direct and order encoding.
c Var 'aux1489' order represents '0' with '16421'
c Var 'aux1489' direct represents '0' with '16421'
c Var 'aux1489' order represents '1' with '16422'
-16421 16422 0
c Var 'aux1489' direct represents '1' with '16423'
16421 -16422 16423 0
-16423 16422 0
-16423 -16421 0
c Var 'aux1489' direct represents '2' with '-16422'
16421 16423 -16422 0
c Encoding variable: aux1490 with domain: int(0..2) (representing constraint ((field_00001_00001=9) + (field_00003_00001=9)))
c Both direct and order encoding.
c Var 'aux1490' order represents '0' with '16424'
c Var 'aux1490' direct represents '0' with '16424'
c Var 'aux1490' order represents '1' with '16425'
-16424 16425 0
c Var 'aux1490' direct represents '1' with '16426'
16424 -16425 16426 0
-16426 16425 0
-16426 -16424 0
c Var 'aux1490' direct represents '2' with '-16425'
16424 16426 -16425 0
c Encoding variable: aux1491 with domain: int(0..2) (representing constraint ((field_00003_00003=9) + (field_00003_00002=9)))
c Both direct and order encoding.
c Var 'aux1491' order represents '0' with '16427'
c Var 'aux1491' direct represents '0' with '16427'
c Var 'aux1491' order represents '1' with '16428'
-16427 16428 0
c Var 'aux1491' direct represents '1' with '16429'
16427 -16428 16429 0
-16429 16428 0
-16429 -16427 0
c Var 'aux1491' direct represents '2' with '-16428'
16427 16429 -16428 0
c Encoding variable: aux1492 with domain: int(0..3) (representing constraint ((field_00002_00003=9) + aux1491))
c Both direct and order encoding.
c Var 'aux1492' order represents '0' with '16430'
c Var 'aux1492' direct represents '0' with '16430'
c Var 'aux1492' order represents '1' with '16431'
-16430 16431 0
c Var 'aux1492' direct represents '1' with '16432'
16430 -16431 16432 0
-16432 16431 0
-16432 -16430 0
c Var 'aux1492' order represents '2' with '16433'
-16431 16433 0
c Var 'aux1492' direct represents '2' with '16434'
16431 -16433 16434 0
-16434 16433 0
-16434 -16431 0
c Var 'aux1492' direct represents '3' with '-16433'
16430 16432 16434 -16433 0
c Encoding variable: aux1493 with domain: int(0..4) (representing constraint (aux1488 + aux1490))
c Both direct and order encoding.
c Var 'aux1493' order represents '0' with '16435'
c Var 'aux1493' direct represents '0' with '16435'
c Var 'aux1493' order represents '1' with '16436'
-16435 16436 0
c Var 'aux1493' direct represents '1' with '16437'
16435 -16436 16437 0
-16437 16436 0
-16437 -16435 0
c Var 'aux1493' order represents '2' with '16438'
-16436 16438 0
c Var 'aux1493' direct represents '2' with '16439'
16436 -16438 16439 0
-16439 16438 0
-16439 -16436 0
c Var 'aux1493' order represents '3' with '16440'
-16438 16440 0
c Var 'aux1493' direct represents '3' with '16441'
16438 -16440 16441 0
-16441 16440 0
-16441 -16438 0
c Var 'aux1493' direct represents '4' with '-16440'
16435 16437 16439 16441 -16440 0
c Encoding variable: aux1494 with domain: int(0..2) (representing constraint ((field_00002_00004=1) + (field_00001_00006=1)))
c Both direct and order encoding.
c Var 'aux1494' order represents '0' with '16442'
c Var 'aux1494' direct represents '0' with '16442'
c Var 'aux1494' order represents '1' with '16443'
-16442 16443 0
c Var 'aux1494' direct represents '1' with '16444'
16442 -16443 16444 0
-16444 16443 0
-16444 -16442 0
c Var 'aux1494' direct represents '2' with '-16443'
16442 16444 -16443 0
c Encoding variable: aux1495 with domain: int(0..2) (representing constraint ((field_00001_00005=1) + (field_00002_00005=1)))
c Both direct and order encoding.
c Var 'aux1495' order represents '0' with '16445'
c Var 'aux1495' direct represents '0' with '16445'
c Var 'aux1495' order represents '1' with '16446'
-16445 16446 0
c Var 'aux1495' direct represents '1' with '16447'
16445 -16446 16447 0
-16447 16446 0
-16447 -16445 0
c Var 'aux1495' direct represents '2' with '-16446'
16445 16447 -16446 0
c Encoding variable: aux1496 with domain: int(0..2) (representing constraint ((field_00001_00004=1) + (field_00003_00004=1)))
c Both direct and order encoding.
c Var 'aux1496' order represents '0' with '16448'
c Var 'aux1496' direct represents '0' with '16448'
c Var 'aux1496' order represents '1' with '16449'
-16448 16449 0
c Var 'aux1496' direct represents '1' with '16450'
16448 -16449 16450 0
-16450 16449 0
-16450 -16448 0
c Var 'aux1496' direct represents '2' with '-16449'
16448 16450 -16449 0
c Encoding variable: aux1497 with domain: int(0..2) (representing constraint ((field_00003_00006=1) + (field_00003_00005=1)))
c Both direct and order encoding.
c Var 'aux1497' order represents '0' with '16451'
c Var 'aux1497' direct represents '0' with '16451'
c Var 'aux1497' order represents '1' with '16452'
-16451 16452 0
c Var 'aux1497' direct represents '1' with '16453'
16451 -16452 16453 0
-16453 16452 0
-16453 -16451 0
c Var 'aux1497' direct represents '2' with '-16452'
16451 16453 -16452 0
c Encoding variable: aux1498 with domain: int(0..3) (representing constraint ((field_00002_00006=1) + aux1497))
c Both direct and order encoding.
c Var 'aux1498' order represents '0' with '16454'
c Var 'aux1498' direct represents '0' with '16454'
c Var 'aux1498' order represents '1' with '16455'
-16454 16455 0
c Var 'aux1498' direct represents '1' with '16456'
16454 -16455 16456 0
-16456 16455 0
-16456 -16454 0
c Var 'aux1498' order represents '2' with '16457'
-16455 16457 0
c Var 'aux1498' direct represents '2' with '16458'
16455 -16457 16458 0
-16458 16457 0
-16458 -16455 0
c Var 'aux1498' direct represents '3' with '-16457'
16454 16456 16458 -16457 0
c Encoding variable: aux1499 with domain: int(0..4) (representing constraint (aux1494 + aux1496))
c Both direct and order encoding.
c Var 'aux1499' order represents '0' with '16459'
c Var 'aux1499' direct represents '0' with '16459'
c Var 'aux1499' order represents '1' with '16460'
-16459 16460 0
c Var 'aux1499' direct represents '1' with '16461'
16459 -16460 16461 0
-16461 16460 0
-16461 -16459 0
c Var 'aux1499' order represents '2' with '16462'
-16460 16462 0
c Var 'aux1499' direct represents '2' with '16463'
16460 -16462 16463 0
-16463 16462 0
-16463 -16460 0
c Var 'aux1499' order represents '3' with '16464'
-16462 16464 0
c Var 'aux1499' direct represents '3' with '16465'
16462 -16464 16465 0
-16465 16464 0
-16465 -16462 0
c Var 'aux1499' direct represents '4' with '-16464'
16459 16461 16463 16465 -16464 0
c Encoding variable: aux1500 with domain: int(0..2) (representing constraint ((field_00002_00004=2) + (field_00001_00006=2)))
c Both direct and order encoding.
c Var 'aux1500' order represents '0' with '16466'
c Var 'aux1500' direct represents '0' with '16466'
c Var 'aux1500' order represents '1' with '16467'
-16466 16467 0
c Var 'aux1500' direct represents '1' with '16468'
16466 -16467 16468 0
-16468 16467 0
-16468 -16466 0
c Var 'aux1500' direct represents '2' with '-16467'
16466 16468 -16467 0
c Encoding variable: aux1501 with domain: int(0..2) (representing constraint ((field_00001_00005=2) + (field_00002_00005=2)))
c Both direct and order encoding.
c Var 'aux1501' order represents '0' with '16469'
c Var 'aux1501' direct represents '0' with '16469'
c Var 'aux1501' order represents '1' with '16470'
-16469 16470 0
c Var 'aux1501' direct represents '1' with '16471'
16469 -16470 16471 0
-16471 16470 0
-16471 -16469 0
c Var 'aux1501' direct represents '2' with '-16470'
16469 16471 -16470 0
c Encoding variable: aux1502 with domain: int(0..2) (representing constraint ((field_00001_00004=2) + (field_00003_00004=2)))
c Both direct and order encoding.
c Var 'aux1502' order represents '0' with '16472'
c Var 'aux1502' direct represents '0' with '16472'
c Var 'aux1502' order represents '1' with '16473'
-16472 16473 0
c Var 'aux1502' direct represents '1' with '16474'
16472 -16473 16474 0
-16474 16473 0
-16474 -16472 0
c Var 'aux1502' direct represents '2' with '-16473'
16472 16474 -16473 0
c Encoding variable: aux1503 with domain: int(0..2) (representing constraint ((field_00003_00006=2) + (field_00003_00005=2)))
c Both direct and order encoding.
c Var 'aux1503' order represents '0' with '16475'
c Var 'aux1503' direct represents '0' with '16475'
c Var 'aux1503' order represents '1' with '16476'
-16475 16476 0
c Var 'aux1503' direct represents '1' with '16477'
16475 -16476 16477 0
-16477 16476 0
-16477 -16475 0
c Var 'aux1503' direct represents '2' with '-16476'
16475 16477 -16476 0
c Encoding variable: aux1504 with domain: int(0..3) (representing constraint ((field_00002_00006=2) + aux1503))
c Both direct and order encoding.
c Var 'aux1504' order represents '0' with '16478'
c Var 'aux1504' direct represents '0' with '16478'
c Var 'aux1504' order represents '1' with '16479'
-16478 16479 0
c Var 'aux1504' direct represents '1' with '16480'
16478 -16479 16480 0
-16480 16479 0
-16480 -16478 0
c Var 'aux1504' order represents '2' with '16481'
-16479 16481 0
c Var 'aux1504' direct represents '2' with '16482'
16479 -16481 16482 0
-16482 16481 0
-16482 -16479 0
c Var 'aux1504' direct represents '3' with '-16481'
16478 16480 16482 -16481 0
c Encoding variable: aux1505 with domain: int(0..4) (representing constraint (aux1500 + aux1502))
c Both direct and order encoding.
c Var 'aux1505' order represents '0' with '16483'
c Var 'aux1505' direct represents '0' with '16483'
c Var 'aux1505' order represents '1' with '16484'
-16483 16484 0
c Var 'aux1505' direct represents '1' with '16485'
16483 -16484 16485 0
-16485 16484 0
-16485 -16483 0
c Var 'aux1505' order represents '2' with '16486'
-16484 16486 0
c Var 'aux1505' direct represents '2' with '16487'
16484 -16486 16487 0
-16487 16486 0
-16487 -16484 0
c Var 'aux1505' order represents '3' with '16488'
-16486 16488 0
c Var 'aux1505' direct represents '3' with '16489'
16486 -16488 16489 0
-16489 16488 0
-16489 -16486 0
c Var 'aux1505' direct represents '4' with '-16488'
16483 16485 16487 16489 -16488 0
c Encoding variable: aux1506 with domain: int(0..2) (representing constraint ((field_00002_00004=3) + (field_00001_00006=3)))
c Both direct and order encoding.
c Var 'aux1506' order represents '0' with '16490'
c Var 'aux1506' direct represents '0' with '16490'
c Var 'aux1506' order represents '1' with '16491'
-16490 16491 0
c Var 'aux1506' direct represents '1' with '16492'
16490 -16491 16492 0
-16492 16491 0
-16492 -16490 0
c Var 'aux1506' direct represents '2' with '-16491'
16490 16492 -16491 0
c Encoding variable: aux1507 with domain: int(0..2) (representing constraint ((field_00001_00005=3) + (field_00002_00005=3)))
c Both direct and order encoding.
c Var 'aux1507' order represents '0' with '16493'
c Var 'aux1507' direct represents '0' with '16493'
c Var 'aux1507' order represents '1' with '16494'
-16493 16494 0
c Var 'aux1507' direct represents '1' with '16495'
16493 -16494 16495 0
-16495 16494 0
-16495 -16493 0
c Var 'aux1507' direct represents '2' with '-16494'
16493 16495 -16494 0
c Encoding variable: aux1508 with domain: int(0..2) (representing constraint ((field_00001_00004=3) + (field_00003_00004=3)))
c Both direct and order encoding.
c Var 'aux1508' order represents '0' with '16496'
c Var 'aux1508' direct represents '0' with '16496'
c Var 'aux1508' order represents '1' with '16497'
-16496 16497 0
c Var 'aux1508' direct represents '1' with '16498'
16496 -16497 16498 0
-16498 16497 0
-16498 -16496 0
c Var 'aux1508' direct represents '2' with '-16497'
16496 16498 -16497 0
c Encoding variable: aux1509 with domain: int(0..2) (representing constraint ((field_00003_00006=3) + (field_00003_00005=3)))
c Both direct and order encoding.
c Var 'aux1509' order represents '0' with '16499'
c Var 'aux1509' direct represents '0' with '16499'
c Var 'aux1509' order represents '1' with '16500'
-16499 16500 0
c Var 'aux1509' direct represents '1' with '16501'
16499 -16500 16501 0
-16501 16500 0
-16501 -16499 0
c Var 'aux1509' direct represents '2' with '-16500'
16499 16501 -16500 0
c Encoding variable: aux1510 with domain: int(0..3) (representing constraint ((field_00002_00006=3) + aux1509))
c Both direct and order encoding.
c Var 'aux1510' order represents '0' with '16502'
c Var 'aux1510' direct represents '0' with '16502'
c Var 'aux1510' order represents '1' with '16503'
-16502 16503 0
c Var 'aux1510' direct represents '1' with '16504'
16502 -16503 16504 0
-16504 16503 0
-16504 -16502 0
c Var 'aux1510' order represents '2' with '16505'
-16503 16505 0
c Var 'aux1510' direct represents '2' with '16506'
16503 -16505 16506 0
-16506 16505 0
-16506 -16503 0
c Var 'aux1510' direct represents '3' with '-16505'
16502 16504 16506 -16505 0
c Encoding variable: aux1511 with domain: int(0..4) (representing constraint (aux1506 + aux1508))
c Both direct and order encoding.
c Var 'aux1511' order represents '0' with '16507'
c Var 'aux1511' direct represents '0' with '16507'
c Var 'aux1511' order represents '1' with '16508'
-16507 16508 0
c Var 'aux1511' direct represents '1' with '16509'
16507 -16508 16509 0
-16509 16508 0
-16509 -16507 0
c Var 'aux1511' order represents '2' with '16510'
-16508 16510 0
c Var 'aux1511' direct represents '2' with '16511'
16508 -16510 16511 0
-16511 16510 0
-16511 -16508 0
c Var 'aux1511' order represents '3' with '16512'
-16510 16512 0
c Var 'aux1511' direct represents '3' with '16513'
16510 -16512 16513 0
-16513 16512 0
-16513 -16510 0
c Var 'aux1511' direct represents '4' with '-16512'
16507 16509 16511 16513 -16512 0
c Encoding variable: aux1512 with domain: int(0..2) (representing constraint ((field_00002_00004=4) + (field_00001_00006=4)))
c Both direct and order encoding.
c Var 'aux1512' order represents '0' with '16514'
c Var 'aux1512' direct represents '0' with '16514'
c Var 'aux1512' order represents '1' with '16515'
-16514 16515 0
c Var 'aux1512' direct represents '1' with '16516'
16514 -16515 16516 0
-16516 16515 0
-16516 -16514 0
c Var 'aux1512' direct represents '2' with '-16515'
16514 16516 -16515 0
c Encoding variable: aux1513 with domain: int(0..2) (representing constraint ((field_00001_00005=4) + (field_00002_00005=4)))
c Both direct and order encoding.
c Var 'aux1513' order represents '0' with '16517'
c Var 'aux1513' direct represents '0' with '16517'
c Var 'aux1513' order represents '1' with '16518'
-16517 16518 0
c Var 'aux1513' direct represents '1' with '16519'
16517 -16518 16519 0
-16519 16518 0
-16519 -16517 0
c Var 'aux1513' direct represents '2' with '-16518'
16517 16519 -16518 0
c Encoding variable: aux1514 with domain: int(0..2) (representing constraint ((field_00001_00004=4) + (field_00003_00004=4)))
c Both direct and order encoding.
c Var 'aux1514' order represents '0' with '16520'
c Var 'aux1514' direct represents '0' with '16520'
c Var 'aux1514' order represents '1' with '16521'
-16520 16521 0
c Var 'aux1514' direct represents '1' with '16522'
16520 -16521 16522 0
-16522 16521 0
-16522 -16520 0
c Var 'aux1514' direct represents '2' with '-16521'
16520 16522 -16521 0
c Encoding variable: aux1515 with domain: int(0..2) (representing constraint ((field_00003_00006=4) + (field_00003_00005=4)))
c Both direct and order encoding.
c Var 'aux1515' order represents '0' with '16523'
c Var 'aux1515' direct represents '0' with '16523'
c Var 'aux1515' order represents '1' with '16524'
-16523 16524 0
c Var 'aux1515' direct represents '1' with '16525'
16523 -16524 16525 0
-16525 16524 0
-16525 -16523 0
c Var 'aux1515' direct represents '2' with '-16524'
16523 16525 -16524 0
c Encoding variable: aux1516 with domain: int(0..3) (representing constraint ((field_00002_00006=4) + aux1515))
c Both direct and order encoding.
c Var 'aux1516' order represents '0' with '16526'
c Var 'aux1516' direct represents '0' with '16526'
c Var 'aux1516' order represents '1' with '16527'
-16526 16527 0
c Var 'aux1516' direct represents '1' with '16528'
16526 -16527 16528 0
-16528 16527 0
-16528 -16526 0
c Var 'aux1516' order represents '2' with '16529'
-16527 16529 0
c Var 'aux1516' direct represents '2' with '16530'
16527 -16529 16530 0
-16530 16529 0
-16530 -16527 0
c Var 'aux1516' direct represents '3' with '-16529'
16526 16528 16530 -16529 0
c Encoding variable: aux1517 with domain: int(0..4) (representing constraint (aux1512 + aux1514))
c Both direct and order encoding.
c Var 'aux1517' order represents '0' with '16531'
c Var 'aux1517' direct represents '0' with '16531'
c Var 'aux1517' order represents '1' with '16532'
-16531 16532 0
c Var 'aux1517' direct represents '1' with '16533'
16531 -16532 16533 0
-16533 16532 0
-16533 -16531 0
c Var 'aux1517' order represents '2' with '16534'
-16532 16534 0
c Var 'aux1517' direct represents '2' with '16535'
16532 -16534 16535 0
-16535 16534 0
-16535 -16532 0
c Var 'aux1517' order represents '3' with '16536'
-16534 16536 0
c Var 'aux1517' direct represents '3' with '16537'
16534 -16536 16537 0
-16537 16536 0
-16537 -16534 0
c Var 'aux1517' direct represents '4' with '-16536'
16531 16533 16535 16537 -16536 0
c Encoding variable: aux1518 with domain: int(0..2) (representing constraint ((field_00002_00004=5) + (field_00001_00006=5)))
c Both direct and order encoding.
c Var 'aux1518' order represents '0' with '16538'
c Var 'aux1518' direct represents '0' with '16538'
c Var 'aux1518' order represents '1' with '16539'
-16538 16539 0
c Var 'aux1518' direct represents '1' with '16540'
16538 -16539 16540 0
-16540 16539 0
-16540 -16538 0
c Var 'aux1518' direct represents '2' with '-16539'
16538 16540 -16539 0
c Encoding variable: aux1519 with domain: int(0..2) (representing constraint ((field_00001_00005=5) + (field_00002_00005=5)))
c Both direct and order encoding.
c Var 'aux1519' order represents '0' with '16541'
c Var 'aux1519' direct represents '0' with '16541'
c Var 'aux1519' order represents '1' with '16542'
-16541 16542 0
c Var 'aux1519' direct represents '1' with '16543'
16541 -16542 16543 0
-16543 16542 0
-16543 -16541 0
c Var 'aux1519' direct represents '2' with '-16542'
16541 16543 -16542 0
c Encoding variable: aux1520 with domain: int(0..2) (representing constraint ((field_00001_00004=5) + (field_00003_00004=5)))
c Both direct and order encoding.
c Var 'aux1520' order represents '0' with '16544'
c Var 'aux1520' direct represents '0' with '16544'
c Var 'aux1520' order represents '1' with '16545'
-16544 16545 0
c Var 'aux1520' direct represents '1' with '16546'
16544 -16545 16546 0
-16546 16545 0
-16546 -16544 0
c Var 'aux1520' direct represents '2' with '-16545'
16544 16546 -16545 0
c Encoding variable: aux1521 with domain: int(0..2) (representing constraint ((field_00003_00006=5) + (field_00003_00005=5)))
c Both direct and order encoding.
c Var 'aux1521' order represents '0' with '16547'
c Var 'aux1521' direct represents '0' with '16547'
c Var 'aux1521' order represents '1' with '16548'
-16547 16548 0
c Var 'aux1521' direct represents '1' with '16549'
16547 -16548 16549 0
-16549 16548 0
-16549 -16547 0
c Var 'aux1521' direct represents '2' with '-16548'
16547 16549 -16548 0
c Encoding variable: aux1522 with domain: int(0..3) (representing constraint ((field_00002_00006=5) + aux1521))
c Both direct and order encoding.
c Var 'aux1522' order represents '0' with '16550'
c Var 'aux1522' direct represents '0' with '16550'
c Var 'aux1522' order represents '1' with '16551'
-16550 16551 0
c Var 'aux1522' direct represents '1' with '16552'
16550 -16551 16552 0
-16552 16551 0
-16552 -16550 0
c Var 'aux1522' order represents '2' with '16553'
-16551 16553 0
c Var 'aux1522' direct represents '2' with '16554'
16551 -16553 16554 0
-16554 16553 0
-16554 -16551 0
c Var 'aux1522' direct represents '3' with '-16553'
16550 16552 16554 -16553 0
c Encoding variable: aux1523 with domain: int(0..4) (representing constraint (aux1518 + aux1520))
c Both direct and order encoding.
c Var 'aux1523' order represents '0' with '16555'
c Var 'aux1523' direct represents '0' with '16555'
c Var 'aux1523' order represents '1' with '16556'
-16555 16556 0
c Var 'aux1523' direct represents '1' with '16557'
16555 -16556 16557 0
-16557 16556 0
-16557 -16555 0
c Var 'aux1523' order represents '2' with '16558'
-16556 16558 0
c Var 'aux1523' direct represents '2' with '16559'
16556 -16558 16559 0
-16559 16558 0
-16559 -16556 0
c Var 'aux1523' order represents '3' with '16560'
-16558 16560 0
c Var 'aux1523' direct represents '3' with '16561'
16558 -16560 16561 0
-16561 16560 0
-16561 -16558 0
c Var 'aux1523' direct represents '4' with '-16560'
16555 16557 16559 16561 -16560 0
c Encoding variable: aux1524 with domain: int(0..2) (representing constraint ((field_00002_00004=6) + (field_00001_00006=6)))
c Both direct and order encoding.
c Var 'aux1524' order represents '0' with '16562'
c Var 'aux1524' direct represents '0' with '16562'
c Var 'aux1524' order represents '1' with '16563'
-16562 16563 0
c Var 'aux1524' direct represents '1' with '16564'
16562 -16563 16564 0
-16564 16563 0
-16564 -16562 0
c Var 'aux1524' direct represents '2' with '-16563'
16562 16564 -16563 0
c Encoding variable: aux1525 with domain: int(0..2) (representing constraint ((field_00001_00005=6) + (field_00002_00005=6)))
c Both direct and order encoding.
c Var 'aux1525' order represents '0' with '16565'
c Var 'aux1525' direct represents '0' with '16565'
c Var 'aux1525' order represents '1' with '16566'
-16565 16566 0
c Var 'aux1525' direct represents '1' with '16567'
16565 -16566 16567 0
-16567 16566 0
-16567 -16565 0
c Var 'aux1525' direct represents '2' with '-16566'
16565 16567 -16566 0
c Encoding variable: aux1526 with domain: int(0..2) (representing constraint ((field_00001_00004=6) + (field_00003_00004=6)))
c Both direct and order encoding.
c Var 'aux1526' order represents '0' with '16568'
c Var 'aux1526' direct represents '0' with '16568'
c Var 'aux1526' order represents '1' with '16569'
-16568 16569 0
c Var 'aux1526' direct represents '1' with '16570'
16568 -16569 16570 0
-16570 16569 0
-16570 -16568 0
c Var 'aux1526' direct represents '2' with '-16569'
16568 16570 -16569 0
c Encoding variable: aux1527 with domain: int(0..2) (representing constraint ((field_00003_00006=6) + (field_00003_00005=6)))
c Both direct and order encoding.
c Var 'aux1527' order represents '0' with '16571'
c Var 'aux1527' direct represents '0' with '16571'
c Var 'aux1527' order represents '1' with '16572'
-16571 16572 0
c Var 'aux1527' direct represents '1' with '16573'
16571 -16572 16573 0
-16573 16572 0
-16573 -16571 0
c Var 'aux1527' direct represents '2' with '-16572'
16571 16573 -16572 0
c Encoding variable: aux1528 with domain: int(0..3) (representing constraint ((field_00002_00006=6) + aux1527))
c Both direct and order encoding.
c Var 'aux1528' order represents '0' with '16574'
c Var 'aux1528' direct represents '0' with '16574'
c Var 'aux1528' order represents '1' with '16575'
-16574 16575 0
c Var 'aux1528' direct represents '1' with '16576'
16574 -16575 16576 0
-16576 16575 0
-16576 -16574 0
c Var 'aux1528' order represents '2' with '16577'
-16575 16577 0
c Var 'aux1528' direct represents '2' with '16578'
16575 -16577 16578 0
-16578 16577 0
-16578 -16575 0
c Var 'aux1528' direct represents '3' with '-16577'
16574 16576 16578 -16577 0
c Encoding variable: aux1529 with domain: int(0..4) (representing constraint (aux1524 + aux1526))
c Both direct and order encoding.
c Var 'aux1529' order represents '0' with '16579'
c Var 'aux1529' direct represents '0' with '16579'
c Var 'aux1529' order represents '1' with '16580'
-16579 16580 0
c Var 'aux1529' direct represents '1' with '16581'
16579 -16580 16581 0
-16581 16580 0
-16581 -16579 0
c Var 'aux1529' order represents '2' with '16582'
-16580 16582 0
c Var 'aux1529' direct represents '2' with '16583'
16580 -16582 16583 0
-16583 16582 0
-16583 -16580 0
c Var 'aux1529' order represents '3' with '16584'
-16582 16584 0
c Var 'aux1529' direct represents '3' with '16585'
16582 -16584 16585 0
-16585 16584 0
-16585 -16582 0
c Var 'aux1529' direct represents '4' with '-16584'
16579 16581 16583 16585 -16584 0
c Encoding variable: aux1530 with domain: int(0..2) (representing constraint ((field_00002_00004=7) + (field_00001_00006=7)))
c Both direct and order encoding.
c Var 'aux1530' order represents '0' with '16586'
c Var 'aux1530' direct represents '0' with '16586'
c Var 'aux1530' order represents '1' with '16587'
-16586 16587 0
c Var 'aux1530' direct represents '1' with '16588'
16586 -16587 16588 0
-16588 16587 0
-16588 -16586 0
c Var 'aux1530' direct represents '2' with '-16587'
16586 16588 -16587 0
c Encoding variable: aux1531 with domain: int(0..2) (representing constraint ((field_00001_00005=7) + (field_00002_00005=7)))
c Both direct and order encoding.
c Var 'aux1531' order represents '0' with '16589'
c Var 'aux1531' direct represents '0' with '16589'
c Var 'aux1531' order represents '1' with '16590'
-16589 16590 0
c Var 'aux1531' direct represents '1' with '16591'
16589 -16590 16591 0
-16591 16590 0
-16591 -16589 0
c Var 'aux1531' direct represents '2' with '-16590'
16589 16591 -16590 0
c Encoding variable: aux1532 with domain: int(0..2) (representing constraint ((field_00001_00004=7) + (field_00003_00004=7)))
c Both direct and order encoding.
c Var 'aux1532' order represents '0' with '16592'
c Var 'aux1532' direct represents '0' with '16592'
c Var 'aux1532' order represents '1' with '16593'
-16592 16593 0
c Var 'aux1532' direct represents '1' with '16594'
16592 -16593 16594 0
-16594 16593 0
-16594 -16592 0
c Var 'aux1532' direct represents '2' with '-16593'
16592 16594 -16593 0
c Encoding variable: aux1533 with domain: int(0..2) (representing constraint ((field_00003_00006=7) + (field_00003_00005=7)))
c Both direct and order encoding.
c Var 'aux1533' order represents '0' with '16595'
c Var 'aux1533' direct represents '0' with '16595'
c Var 'aux1533' order represents '1' with '16596'
-16595 16596 0
c Var 'aux1533' direct represents '1' with '16597'
16595 -16596 16597 0
-16597 16596 0
-16597 -16595 0
c Var 'aux1533' direct represents '2' with '-16596'
16595 16597 -16596 0
c Encoding variable: aux1534 with domain: int(0..3) (representing constraint ((field_00002_00006=7) + aux1533))
c Both direct and order encoding.
c Var 'aux1534' order represents '0' with '16598'
c Var 'aux1534' direct represents '0' with '16598'
c Var 'aux1534' order represents '1' with '16599'
-16598 16599 0
c Var 'aux1534' direct represents '1' with '16600'
16598 -16599 16600 0
-16600 16599 0
-16600 -16598 0
c Var 'aux1534' order represents '2' with '16601'
-16599 16601 0
c Var 'aux1534' direct represents '2' with '16602'
16599 -16601 16602 0
-16602 16601 0
-16602 -16599 0
c Var 'aux1534' direct represents '3' with '-16601'
16598 16600 16602 -16601 0
c Encoding variable: aux1535 with domain: int(0..4) (representing constraint (aux1530 + aux1532))
c Both direct and order encoding.
c Var 'aux1535' order represents '0' with '16603'
c Var 'aux1535' direct represents '0' with '16603'
c Var 'aux1535' order represents '1' with '16604'
-16603 16604 0
c Var 'aux1535' direct represents '1' with '16605'
16603 -16604 16605 0
-16605 16604 0
-16605 -16603 0
c Var 'aux1535' order represents '2' with '16606'
-16604 16606 0
c Var 'aux1535' direct represents '2' with '16607'
16604 -16606 16607 0
-16607 16606 0
-16607 -16604 0
c Var 'aux1535' order represents '3' with '16608'
-16606 16608 0
c Var 'aux1535' direct represents '3' with '16609'
16606 -16608 16609 0
-16609 16608 0
-16609 -16606 0
c Var 'aux1535' direct represents '4' with '-16608'
16603 16605 16607 16609 -16608 0
c Encoding variable: aux1536 with domain: int(0..2) (representing constraint ((field_00002_00004=8) + (field_00001_00006=8)))
c Both direct and order encoding.
c Var 'aux1536' order represents '0' with '16610'
c Var 'aux1536' direct represents '0' with '16610'
c Var 'aux1536' order represents '1' with '16611'
-16610 16611 0
c Var 'aux1536' direct represents '1' with '16612'
16610 -16611 16612 0
-16612 16611 0
-16612 -16610 0
c Var 'aux1536' direct represents '2' with '-16611'
16610 16612 -16611 0
c Encoding variable: aux1537 with domain: int(0..2) (representing constraint ((field_00001_00005=8) + (field_00002_00005=8)))
c Both direct and order encoding.
c Var 'aux1537' order represents '0' with '16613'
c Var 'aux1537' direct represents '0' with '16613'
c Var 'aux1537' order represents '1' with '16614'
-16613 16614 0
c Var 'aux1537' direct represents '1' with '16615'
16613 -16614 16615 0
-16615 16614 0
-16615 -16613 0
c Var 'aux1537' direct represents '2' with '-16614'
16613 16615 -16614 0
c Encoding variable: aux1538 with domain: int(0..2) (representing constraint ((field_00001_00004=8) + (field_00003_00004=8)))
c Both direct and order encoding.
c Var 'aux1538' order represents '0' with '16616'
c Var 'aux1538' direct represents '0' with '16616'
c Var 'aux1538' order represents '1' with '16617'
-16616 16617 0
c Var 'aux1538' direct represents '1' with '16618'
16616 -16617 16618 0
-16618 16617 0
-16618 -16616 0
c Var 'aux1538' direct represents '2' with '-16617'
16616 16618 -16617 0
c Encoding variable: aux1539 with domain: int(0..2) (representing constraint ((field_00003_00006=8) + (field_00003_00005=8)))
c Both direct and order encoding.
c Var 'aux1539' order represents '0' with '16619'
c Var 'aux1539' direct represents '0' with '16619'
c Var 'aux1539' order represents '1' with '16620'
-16619 16620 0
c Var 'aux1539' direct represents '1' with '16621'
16619 -16620 16621 0
-16621 16620 0
-16621 -16619 0
c Var 'aux1539' direct represents '2' with '-16620'
16619 16621 -16620 0
c Encoding variable: aux1540 with domain: int(0..3) (representing constraint ((field_00002_00006=8) + aux1539))
c Both direct and order encoding.
c Var 'aux1540' order represents '0' with '16622'
c Var 'aux1540' direct represents '0' with '16622'
c Var 'aux1540' order represents '1' with '16623'
-16622 16623 0
c Var 'aux1540' direct represents '1' with '16624'
16622 -16623 16624 0
-16624 16623 0
-16624 -16622 0
c Var 'aux1540' order represents '2' with '16625'
-16623 16625 0
c Var 'aux1540' direct represents '2' with '16626'
16623 -16625 16626 0
-16626 16625 0
-16626 -16623 0
c Var 'aux1540' direct represents '3' with '-16625'
16622 16624 16626 -16625 0
c Encoding variable: aux1541 with domain: int(0..4) (representing constraint (aux1536 + aux1538))
c Both direct and order encoding.
c Var 'aux1541' order represents '0' with '16627'
c Var 'aux1541' direct represents '0' with '16627'
c Var 'aux1541' order represents '1' with '16628'
-16627 16628 0
c Var 'aux1541' direct represents '1' with '16629'
16627 -16628 16629 0
-16629 16628 0
-16629 -16627 0
c Var 'aux1541' order represents '2' with '16630'
-16628 16630 0
c Var 'aux1541' direct represents '2' with '16631'
16628 -16630 16631 0
-16631 16630 0
-16631 -16628 0
c Var 'aux1541' order represents '3' with '16632'
-16630 16632 0
c Var 'aux1541' direct represents '3' with '16633'
16630 -16632 16633 0
-16633 16632 0
-16633 -16630 0
c Var 'aux1541' direct represents '4' with '-16632'
16627 16629 16631 16633 -16632 0
c Encoding variable: aux1542 with domain: int(0..2) (representing constraint ((field_00002_00004=9) + (field_00001_00006=9)))
c Both direct and order encoding.
c Var 'aux1542' order represents '0' with '16634'
c Var 'aux1542' direct represents '0' with '16634'
c Var 'aux1542' order represents '1' with '16635'
-16634 16635 0
c Var 'aux1542' direct represents '1' with '16636'
16634 -16635 16636 0
-16636 16635 0
-16636 -16634 0
c Var 'aux1542' direct represents '2' with '-16635'
16634 16636 -16635 0
c Encoding variable: aux1543 with domain: int(0..2) (representing constraint ((field_00001_00005=9) + (field_00002_00005=9)))
c Both direct and order encoding.
c Var 'aux1543' order represents '0' with '16637'
c Var 'aux1543' direct represents '0' with '16637'
c Var 'aux1543' order represents '1' with '16638'
-16637 16638 0
c Var 'aux1543' direct represents '1' with '16639'
16637 -16638 16639 0
-16639 16638 0
-16639 -16637 0
c Var 'aux1543' direct represents '2' with '-16638'
16637 16639 -16638 0
c Encoding variable: aux1544 with domain: int(0..2) (representing constraint ((field_00001_00004=9) + (field_00003_00004=9)))
c Both direct and order encoding.
c Var 'aux1544' order represents '0' with '16640'
c Var 'aux1544' direct represents '0' with '16640'
c Var 'aux1544' order represents '1' with '16641'
-16640 16641 0
c Var 'aux1544' direct represents '1' with '16642'
16640 -16641 16642 0
-16642 16641 0
-16642 -16640 0
c Var 'aux1544' direct represents '2' with '-16641'
16640 16642 -16641 0
c Encoding variable: aux1545 with domain: int(0..2) (representing constraint ((field_00003_00006=9) + (field_00003_00005=9)))
c Both direct and order encoding.
c Var 'aux1545' order represents '0' with '16643'
c Var 'aux1545' direct represents '0' with '16643'
c Var 'aux1545' order represents '1' with '16644'
-16643 16644 0
c Var 'aux1545' direct represents '1' with '16645'
16643 -16644 16645 0
-16645 16644 0
-16645 -16643 0
c Var 'aux1545' direct represents '2' with '-16644'
16643 16645 -16644 0
c Encoding variable: aux1546 with domain: int(0..3) (representing constraint ((field_00002_00006=9) + aux1545))
c Both direct and order encoding.
c Var 'aux1546' order represents '0' with '16646'
c Var 'aux1546' direct represents '0' with '16646'
c Var 'aux1546' order represents '1' with '16647'
-16646 16647 0
c Var 'aux1546' direct represents '1' with '16648'
16646 -16647 16648 0
-16648 16647 0
-16648 -16646 0
c Var 'aux1546' order represents '2' with '16649'
-16647 16649 0
c Var 'aux1546' direct represents '2' with '16650'
16647 -16649 16650 0
-16650 16649 0
-16650 -16647 0
c Var 'aux1546' direct represents '3' with '-16649'
16646 16648 16650 -16649 0
c Encoding variable: aux1547 with domain: int(0..4) (representing constraint (aux1542 + aux1544))
c Both direct and order encoding.
c Var 'aux1547' order represents '0' with '16651'
c Var 'aux1547' direct represents '0' with '16651'
c Var 'aux1547' order represents '1' with '16652'
-16651 16652 0
c Var 'aux1547' direct represents '1' with '16653'
16651 -16652 16653 0
-16653 16652 0
-16653 -16651 0
c Var 'aux1547' order represents '2' with '16654'
-16652 16654 0
c Var 'aux1547' direct represents '2' with '16655'
16652 -16654 16655 0
-16655 16654 0
-16655 -16652 0
c Var 'aux1547' order represents '3' with '16656'
-16654 16656 0
c Var 'aux1547' direct represents '3' with '16657'
16654 -16656 16657 0
-16657 16656 0
-16657 -16654 0
c Var 'aux1547' direct represents '4' with '-16656'
16651 16653 16655 16657 -16656 0
c Encoding variable: aux1548 with domain: int(0..2) (representing constraint ((field_00002_00007=1) + (field_00001_00009=1)))
c Both direct and order encoding.
c Var 'aux1548' order represents '0' with '16658'
c Var 'aux1548' direct represents '0' with '16658'
c Var 'aux1548' order represents '1' with '16659'
-16658 16659 0
c Var 'aux1548' direct represents '1' with '16660'
16658 -16659 16660 0
-16660 16659 0
-16660 -16658 0
c Var 'aux1548' direct represents '2' with '-16659'
16658 16660 -16659 0
c Encoding variable: aux1549 with domain: int(0..2) (representing constraint ((field_00001_00008=1) + (field_00002_00008=1)))
c Both direct and order encoding.
c Var 'aux1549' order represents '0' with '16661'
c Var 'aux1549' direct represents '0' with '16661'
c Var 'aux1549' order represents '1' with '16662'
-16661 16662 0
c Var 'aux1549' direct represents '1' with '16663'
16661 -16662 16663 0
-16663 16662 0
-16663 -16661 0
c Var 'aux1549' direct represents '2' with '-16662'
16661 16663 -16662 0
c Encoding variable: aux1550 with domain: int(0..2) (representing constraint ((field_00001_00007=1) + (field_00003_00007=1)))
c Both direct and order encoding.
c Var 'aux1550' order represents '0' with '16664'
c Var 'aux1550' direct represents '0' with '16664'
c Var 'aux1550' order represents '1' with '16665'
-16664 16665 0
c Var 'aux1550' direct represents '1' with '16666'
16664 -16665 16666 0
-16666 16665 0
-16666 -16664 0
c Var 'aux1550' direct represents '2' with '-16665'
16664 16666 -16665 0
c Encoding variable: aux1551 with domain: int(0..2) (representing constraint ((field_00003_00009=1) + (field_00003_00008=1)))
c Both direct and order encoding.
c Var 'aux1551' order represents '0' with '16667'
c Var 'aux1551' direct represents '0' with '16667'
c Var 'aux1551' order represents '1' with '16668'
-16667 16668 0
c Var 'aux1551' direct represents '1' with '16669'
16667 -16668 16669 0
-16669 16668 0
-16669 -16667 0
c Var 'aux1551' direct represents '2' with '-16668'
16667 16669 -16668 0
c Encoding variable: aux1552 with domain: int(0..3) (representing constraint ((field_00002_00009=1) + aux1551))
c Both direct and order encoding.
c Var 'aux1552' order represents '0' with '16670'
c Var 'aux1552' direct represents '0' with '16670'
c Var 'aux1552' order represents '1' with '16671'
-16670 16671 0
c Var 'aux1552' direct represents '1' with '16672'
16670 -16671 16672 0
-16672 16671 0
-16672 -16670 0
c Var 'aux1552' order represents '2' with '16673'
-16671 16673 0
c Var 'aux1552' direct represents '2' with '16674'
16671 -16673 16674 0
-16674 16673 0
-16674 -16671 0
c Var 'aux1552' direct represents '3' with '-16673'
16670 16672 16674 -16673 0
c Encoding variable: aux1553 with domain: int(0..4) (representing constraint (aux1548 + aux1550))
c Both direct and order encoding.
c Var 'aux1553' order represents '0' with '16675'
c Var 'aux1553' direct represents '0' with '16675'
c Var 'aux1553' order represents '1' with '16676'
-16675 16676 0
c Var 'aux1553' direct represents '1' with '16677'
16675 -16676 16677 0
-16677 16676 0
-16677 -16675 0
c Var 'aux1553' order represents '2' with '16678'
-16676 16678 0
c Var 'aux1553' direct represents '2' with '16679'
16676 -16678 16679 0
-16679 16678 0
-16679 -16676 0
c Var 'aux1553' order represents '3' with '16680'
-16678 16680 0
c Var 'aux1553' direct represents '3' with '16681'
16678 -16680 16681 0
-16681 16680 0
-16681 -16678 0
c Var 'aux1553' direct represents '4' with '-16680'
16675 16677 16679 16681 -16680 0
c Encoding variable: aux1554 with domain: int(0..2) (representing constraint ((field_00002_00007=2) + (field_00001_00009=2)))
c Both direct and order encoding.
c Var 'aux1554' order represents '0' with '16682'
c Var 'aux1554' direct represents '0' with '16682'
c Var 'aux1554' order represents '1' with '16683'
-16682 16683 0
c Var 'aux1554' direct represents '1' with '16684'
16682 -16683 16684 0
-16684 16683 0
-16684 -16682 0
c Var 'aux1554' direct represents '2' with '-16683'
16682 16684 -16683 0
c Encoding variable: aux1555 with domain: int(0..2) (representing constraint ((field_00001_00008=2) + (field_00002_00008=2)))
c Both direct and order encoding.
c Var 'aux1555' order represents '0' with '16685'
c Var 'aux1555' direct represents '0' with '16685'
c Var 'aux1555' order represents '1' with '16686'
-16685 16686 0
c Var 'aux1555' direct represents '1' with '16687'
16685 -16686 16687 0
-16687 16686 0
-16687 -16685 0
c Var 'aux1555' direct represents '2' with '-16686'
16685 16687 -16686 0
c Encoding variable: aux1556 with domain: int(0..2) (representing constraint ((field_00001_00007=2) + (field_00003_00007=2)))
c Both direct and order encoding.
c Var 'aux1556' order represents '0' with '16688'
c Var 'aux1556' direct represents '0' with '16688'
c Var 'aux1556' order represents '1' with '16689'
-16688 16689 0
c Var 'aux1556' direct represents '1' with '16690'
16688 -16689 16690 0
-16690 16689 0
-16690 -16688 0
c Var 'aux1556' direct represents '2' with '-16689'
16688 16690 -16689 0
c Encoding variable: aux1557 with domain: int(0..2) (representing constraint ((field_00003_00009=2) + (field_00003_00008=2)))
c Both direct and order encoding.
c Var 'aux1557' order represents '0' with '16691'
c Var 'aux1557' direct represents '0' with '16691'
c Var 'aux1557' order represents '1' with '16692'
-16691 16692 0
c Var 'aux1557' direct represents '1' with '16693'
16691 -16692 16693 0
-16693 16692 0
-16693 -16691 0
c Var 'aux1557' direct represents '2' with '-16692'
16691 16693 -16692 0
c Encoding variable: aux1558 with domain: int(0..3) (representing constraint ((field_00002_00009=2) + aux1557))
c Both direct and order encoding.
c Var 'aux1558' order represents '0' with '16694'
c Var 'aux1558' direct represents '0' with '16694'
c Var 'aux1558' order represents '1' with '16695'
-16694 16695 0
c Var 'aux1558' direct represents '1' with '16696'
16694 -16695 16696 0
-16696 16695 0
-16696 -16694 0
c Var 'aux1558' order represents '2' with '16697'
-16695 16697 0
c Var 'aux1558' direct represents '2' with '16698'
16695 -16697 16698 0
-16698 16697 0
-16698 -16695 0
c Var 'aux1558' direct represents '3' with '-16697'
16694 16696 16698 -16697 0
c Encoding variable: aux1559 with domain: int(0..4) (representing constraint (aux1554 + aux1556))
c Both direct and order encoding.
c Var 'aux1559' order represents '0' with '16699'
c Var 'aux1559' direct represents '0' with '16699'
c Var 'aux1559' order represents '1' with '16700'
-16699 16700 0
c Var 'aux1559' direct represents '1' with '16701'
16699 -16700 16701 0
-16701 16700 0
-16701 -16699 0
c Var 'aux1559' order represents '2' with '16702'
-16700 16702 0
c Var 'aux1559' direct represents '2' with '16703'
16700 -16702 16703 0
-16703 16702 0
-16703 -16700 0
c Var 'aux1559' order represents '3' with '16704'
-16702 16704 0
c Var 'aux1559' direct represents '3' with '16705'
16702 -16704 16705 0
-16705 16704 0
-16705 -16702 0
c Var 'aux1559' direct represents '4' with '-16704'
16699 16701 16703 16705 -16704 0
c Encoding variable: aux1560 with domain: int(0..2) (representing constraint ((field_00002_00007=3) + (field_00001_00009=3)))
c Both direct and order encoding.
c Var 'aux1560' order represents '0' with '16706'
c Var 'aux1560' direct represents '0' with '16706'
c Var 'aux1560' order represents '1' with '16707'
-16706 16707 0
c Var 'aux1560' direct represents '1' with '16708'
16706 -16707 16708 0
-16708 16707 0
-16708 -16706 0
c Var 'aux1560' direct represents '2' with '-16707'
16706 16708 -16707 0
c Encoding variable: aux1561 with domain: int(0..2) (representing constraint ((field_00001_00008=3) + (field_00002_00008=3)))
c Both direct and order encoding.
c Var 'aux1561' order represents '0' with '16709'
c Var 'aux1561' direct represents '0' with '16709'
c Var 'aux1561' order represents '1' with '16710'
-16709 16710 0
c Var 'aux1561' direct represents '1' with '16711'
16709 -16710 16711 0
-16711 16710 0
-16711 -16709 0
c Var 'aux1561' direct represents '2' with '-16710'
16709 16711 -16710 0
c Encoding variable: aux1562 with domain: int(0..2) (representing constraint ((field_00001_00007=3) + (field_00003_00007=3)))
c Both direct and order encoding.
c Var 'aux1562' order represents '0' with '16712'
c Var 'aux1562' direct represents '0' with '16712'
c Var 'aux1562' order represents '1' with '16713'
-16712 16713 0
c Var 'aux1562' direct represents '1' with '16714'
16712 -16713 16714 0
-16714 16713 0
-16714 -16712 0
c Var 'aux1562' direct represents '2' with '-16713'
16712 16714 -16713 0
c Encoding variable: aux1563 with domain: int(0..2) (representing constraint ((field_00003_00009=3) + (field_00003_00008=3)))
c Both direct and order encoding.
c Var 'aux1563' order represents '0' with '16715'
c Var 'aux1563' direct represents '0' with '16715'
c Var 'aux1563' order represents '1' with '16716'
-16715 16716 0
c Var 'aux1563' direct represents '1' with '16717'
16715 -16716 16717 0
-16717 16716 0
-16717 -16715 0
c Var 'aux1563' direct represents '2' with '-16716'
16715 16717 -16716 0
c Encoding variable: aux1564 with domain: int(0..3) (representing constraint ((field_00002_00009=3) + aux1563))
c Both direct and order encoding.
c Var 'aux1564' order represents '0' with '16718'
c Var 'aux1564' direct represents '0' with '16718'
c Var 'aux1564' order represents '1' with '16719'
-16718 16719 0
c Var 'aux1564' direct represents '1' with '16720'
16718 -16719 16720 0
-16720 16719 0
-16720 -16718 0
c Var 'aux1564' order represents '2' with '16721'
-16719 16721 0
c Var 'aux1564' direct represents '2' with '16722'
16719 -16721 16722 0
-16722 16721 0
-16722 -16719 0
c Var 'aux1564' direct represents '3' with '-16721'
16718 16720 16722 -16721 0
c Encoding variable: aux1565 with domain: int(0..4) (representing constraint (aux1560 + aux1562))
c Both direct and order encoding.
c Var 'aux1565' order represents '0' with '16723'
c Var 'aux1565' direct represents '0' with '16723'
c Var 'aux1565' order represents '1' with '16724'
-16723 16724 0
c Var 'aux1565' direct represents '1' with '16725'
16723 -16724 16725 0
-16725 16724 0
-16725 -16723 0
c Var 'aux1565' order represents '2' with '16726'
-16724 16726 0
c Var 'aux1565' direct represents '2' with '16727'
16724 -16726 16727 0
-16727 16726 0
-16727 -16724 0
c Var 'aux1565' order represents '3' with '16728'
-16726 16728 0
c Var 'aux1565' direct represents '3' with '16729'
16726 -16728 16729 0
-16729 16728 0
-16729 -16726 0
c Var 'aux1565' direct represents '4' with '-16728'
16723 16725 16727 16729 -16728 0
c Encoding variable: aux1566 with domain: int(0..2) (representing constraint ((field_00002_00007=4) + (field_00001_00009=4)))
c Both direct and order encoding.
c Var 'aux1566' order represents '0' with '16730'
c Var 'aux1566' direct represents '0' with '16730'
c Var 'aux1566' order represents '1' with '16731'
-16730 16731 0
c Var 'aux1566' direct represents '1' with '16732'
16730 -16731 16732 0
-16732 16731 0
-16732 -16730 0
c Var 'aux1566' direct represents '2' with '-16731'
16730 16732 -16731 0
c Encoding variable: aux1567 with domain: int(0..2) (representing constraint ((field_00001_00008=4) + (field_00002_00008=4)))
c Both direct and order encoding.
c Var 'aux1567' order represents '0' with '16733'
c Var 'aux1567' direct represents '0' with '16733'
c Var 'aux1567' order represents '1' with '16734'
-16733 16734 0
c Var 'aux1567' direct represents '1' with '16735'
16733 -16734 16735 0
-16735 16734 0
-16735 -16733 0
c Var 'aux1567' direct represents '2' with '-16734'
16733 16735 -16734 0
c Encoding variable: aux1568 with domain: int(0..2) (representing constraint ((field_00001_00007=4) + (field_00003_00007=4)))
c Both direct and order encoding.
c Var 'aux1568' order represents '0' with '16736'
c Var 'aux1568' direct represents '0' with '16736'
c Var 'aux1568' order represents '1' with '16737'
-16736 16737 0
c Var 'aux1568' direct represents '1' with '16738'
16736 -16737 16738 0
-16738 16737 0
-16738 -16736 0
c Var 'aux1568' direct represents '2' with '-16737'
16736 16738 -16737 0
c Encoding variable: aux1569 with domain: int(0..2) (representing constraint ((field_00003_00009=4) + (field_00003_00008=4)))
c Both direct and order encoding.
c Var 'aux1569' order represents '0' with '16739'
c Var 'aux1569' direct represents '0' with '16739'
c Var 'aux1569' order represents '1' with '16740'
-16739 16740 0
c Var 'aux1569' direct represents '1' with '16741'
16739 -16740 16741 0
-16741 16740 0
-16741 -16739 0
c Var 'aux1569' direct represents '2' with '-16740'
16739 16741 -16740 0
c Encoding variable: aux1570 with domain: int(0..3) (representing constraint ((field_00002_00009=4) + aux1569))
c Both direct and order encoding.
c Var 'aux1570' order represents '0' with '16742'
c Var 'aux1570' direct represents '0' with '16742'
c Var 'aux1570' order represents '1' with '16743'
-16742 16743 0
c Var 'aux1570' direct represents '1' with '16744'
16742 -16743 16744 0
-16744 16743 0
-16744 -16742 0
c Var 'aux1570' order represents '2' with '16745'
-16743 16745 0
c Var 'aux1570' direct represents '2' with '16746'
16743 -16745 16746 0
-16746 16745 0
-16746 -16743 0
c Var 'aux1570' direct represents '3' with '-16745'
16742 16744 16746 -16745 0
c Encoding variable: aux1571 with domain: int(0..4) (representing constraint (aux1566 + aux1568))
c Both direct and order encoding.
c Var 'aux1571' order represents '0' with '16747'
c Var 'aux1571' direct represents '0' with '16747'
c Var 'aux1571' order represents '1' with '16748'
-16747 16748 0
c Var 'aux1571' direct represents '1' with '16749'
16747 -16748 16749 0
-16749 16748 0
-16749 -16747 0
c Var 'aux1571' order represents '2' with '16750'
-16748 16750 0
c Var 'aux1571' direct represents '2' with '16751'
16748 -16750 16751 0
-16751 16750 0
-16751 -16748 0
c Var 'aux1571' order represents '3' with '16752'
-16750 16752 0
c Var 'aux1571' direct represents '3' with '16753'
16750 -16752 16753 0
-16753 16752 0
-16753 -16750 0
c Var 'aux1571' direct represents '4' with '-16752'
16747 16749 16751 16753 -16752 0
c Encoding variable: aux1572 with domain: int(0..2) (representing constraint ((field_00002_00007=5) + (field_00001_00009=5)))
c Both direct and order encoding.
c Var 'aux1572' order represents '0' with '16754'
c Var 'aux1572' direct represents '0' with '16754'
c Var 'aux1572' order represents '1' with '16755'
-16754 16755 0
c Var 'aux1572' direct represents '1' with '16756'
16754 -16755 16756 0
-16756 16755 0
-16756 -16754 0
c Var 'aux1572' direct represents '2' with '-16755'
16754 16756 -16755 0
c Encoding variable: aux1573 with domain: int(0..2) (representing constraint ((field_00001_00008=5) + (field_00002_00008=5)))
c Both direct and order encoding.
c Var 'aux1573' order represents '0' with '16757'
c Var 'aux1573' direct represents '0' with '16757'
c Var 'aux1573' order represents '1' with '16758'
-16757 16758 0
c Var 'aux1573' direct represents '1' with '16759'
16757 -16758 16759 0
-16759 16758 0
-16759 -16757 0
c Var 'aux1573' direct represents '2' with '-16758'
16757 16759 -16758 0
c Encoding variable: aux1574 with domain: int(0..2) (representing constraint ((field_00001_00007=5) + (field_00003_00007=5)))
c Both direct and order encoding.
c Var 'aux1574' order represents '0' with '16760'
c Var 'aux1574' direct represents '0' with '16760'
c Var 'aux1574' order represents '1' with '16761'
-16760 16761 0
c Var 'aux1574' direct represents '1' with '16762'
16760 -16761 16762 0
-16762 16761 0
-16762 -16760 0
c Var 'aux1574' direct represents '2' with '-16761'
16760 16762 -16761 0
c Encoding variable: aux1575 with domain: int(0..2) (representing constraint ((field_00003_00009=5) + (field_00003_00008=5)))
c Both direct and order encoding.
c Var 'aux1575' order represents '0' with '16763'
c Var 'aux1575' direct represents '0' with '16763'
c Var 'aux1575' order represents '1' with '16764'
-16763 16764 0
c Var 'aux1575' direct represents '1' with '16765'
16763 -16764 16765 0
-16765 16764 0
-16765 -16763 0
c Var 'aux1575' direct represents '2' with '-16764'
16763 16765 -16764 0
c Encoding variable: aux1576 with domain: int(0..3) (representing constraint ((field_00002_00009=5) + aux1575))
c Both direct and order encoding.
c Var 'aux1576' order represents '0' with '16766'
c Var 'aux1576' direct represents '0' with '16766'
c Var 'aux1576' order represents '1' with '16767'
-16766 16767 0
c Var 'aux1576' direct represents '1' with '16768'
16766 -16767 16768 0
-16768 16767 0
-16768 -16766 0
c Var 'aux1576' order represents '2' with '16769'
-16767 16769 0
c Var 'aux1576' direct represents '2' with '16770'
16767 -16769 16770 0
-16770 16769 0
-16770 -16767 0
c Var 'aux1576' direct represents '3' with '-16769'
16766 16768 16770 -16769 0
c Encoding variable: aux1577 with domain: int(0..4) (representing constraint (aux1572 + aux1574))
c Both direct and order encoding.
c Var 'aux1577' order represents '0' with '16771'
c Var 'aux1577' direct represents '0' with '16771'
c Var 'aux1577' order represents '1' with '16772'
-16771 16772 0
c Var 'aux1577' direct represents '1' with '16773'
16771 -16772 16773 0
-16773 16772 0
-16773 -16771 0
c Var 'aux1577' order represents '2' with '16774'
-16772 16774 0
c Var 'aux1577' direct represents '2' with '16775'
16772 -16774 16775 0
-16775 16774 0
-16775 -16772 0
c Var 'aux1577' order represents '3' with '16776'
-16774 16776 0
c Var 'aux1577' direct represents '3' with '16777'
16774 -16776 16777 0
-16777 16776 0
-16777 -16774 0
c Var 'aux1577' direct represents '4' with '-16776'
16771 16773 16775 16777 -16776 0
c Encoding variable: aux1578 with domain: int(0..2) (representing constraint ((field_00002_00007=6) + (field_00001_00009=6)))
c Both direct and order encoding.
c Var 'aux1578' order represents '0' with '16778'
c Var 'aux1578' direct represents '0' with '16778'
c Var 'aux1578' order represents '1' with '16779'
-16778 16779 0
c Var 'aux1578' direct represents '1' with '16780'
16778 -16779 16780 0
-16780 16779 0
-16780 -16778 0
c Var 'aux1578' direct represents '2' with '-16779'
16778 16780 -16779 0
c Encoding variable: aux1579 with domain: int(0..2) (representing constraint ((field_00001_00008=6) + (field_00002_00008=6)))
c Both direct and order encoding.
c Var 'aux1579' order represents '0' with '16781'
c Var 'aux1579' direct represents '0' with '16781'
c Var 'aux1579' order represents '1' with '16782'
-16781 16782 0
c Var 'aux1579' direct represents '1' with '16783'
16781 -16782 16783 0
-16783 16782 0
-16783 -16781 0
c Var 'aux1579' direct represents '2' with '-16782'
16781 16783 -16782 0
c Encoding variable: aux1580 with domain: int(0..2) (representing constraint ((field_00001_00007=6) + (field_00003_00007=6)))
c Both direct and order encoding.
c Var 'aux1580' order represents '0' with '16784'
c Var 'aux1580' direct represents '0' with '16784'
c Var 'aux1580' order represents '1' with '16785'
-16784 16785 0
c Var 'aux1580' direct represents '1' with '16786'
16784 -16785 16786 0
-16786 16785 0
-16786 -16784 0
c Var 'aux1580' direct represents '2' with '-16785'
16784 16786 -16785 0
c Encoding variable: aux1581 with domain: int(0..2) (representing constraint ((field_00003_00009=6) + (field_00003_00008=6)))
c Both direct and order encoding.
c Var 'aux1581' order represents '0' with '16787'
c Var 'aux1581' direct represents '0' with '16787'
c Var 'aux1581' order represents '1' with '16788'
-16787 16788 0
c Var 'aux1581' direct represents '1' with '16789'
16787 -16788 16789 0
-16789 16788 0
-16789 -16787 0
c Var 'aux1581' direct represents '2' with '-16788'
16787 16789 -16788 0
c Encoding variable: aux1582 with domain: int(0..3) (representing constraint ((field_00002_00009=6) + aux1581))
c Both direct and order encoding.
c Var 'aux1582' order represents '0' with '16790'
c Var 'aux1582' direct represents '0' with '16790'
c Var 'aux1582' order represents '1' with '16791'
-16790 16791 0
c Var 'aux1582' direct represents '1' with '16792'
16790 -16791 16792 0
-16792 16791 0
-16792 -16790 0
c Var 'aux1582' order represents '2' with '16793'
-16791 16793 0
c Var 'aux1582' direct represents '2' with '16794'
16791 -16793 16794 0
-16794 16793 0
-16794 -16791 0
c Var 'aux1582' direct represents '3' with '-16793'
16790 16792 16794 -16793 0
c Encoding variable: aux1583 with domain: int(0..4) (representing constraint (aux1578 + aux1580))
c Both direct and order encoding.
c Var 'aux1583' order represents '0' with '16795'
c Var 'aux1583' direct represents '0' with '16795'
c Var 'aux1583' order represents '1' with '16796'
-16795 16796 0
c Var 'aux1583' direct represents '1' with '16797'
16795 -16796 16797 0
-16797 16796 0
-16797 -16795 0
c Var 'aux1583' order represents '2' with '16798'
-16796 16798 0
c Var 'aux1583' direct represents '2' with '16799'
16796 -16798 16799 0
-16799 16798 0
-16799 -16796 0
c Var 'aux1583' order represents '3' with '16800'
-16798 16800 0
c Var 'aux1583' direct represents '3' with '16801'
16798 -16800 16801 0
-16801 16800 0
-16801 -16798 0
c Var 'aux1583' direct represents '4' with '-16800'
16795 16797 16799 16801 -16800 0
c Encoding variable: aux1584 with domain: int(0..2) (representing constraint ((field_00002_00007=7) + (field_00001_00009=7)))
c Both direct and order encoding.
c Var 'aux1584' order represents '0' with '16802'
c Var 'aux1584' direct represents '0' with '16802'
c Var 'aux1584' order represents '1' with '16803'
-16802 16803 0
c Var 'aux1584' direct represents '1' with '16804'
16802 -16803 16804 0
-16804 16803 0
-16804 -16802 0
c Var 'aux1584' direct represents '2' with '-16803'
16802 16804 -16803 0
c Encoding variable: aux1585 with domain: int(0..2) (representing constraint ((field_00001_00008=7) + (field_00002_00008=7)))
c Both direct and order encoding.
c Var 'aux1585' order represents '0' with '16805'
c Var 'aux1585' direct represents '0' with '16805'
c Var 'aux1585' order represents '1' with '16806'
-16805 16806 0
c Var 'aux1585' direct represents '1' with '16807'
16805 -16806 16807 0
-16807 16806 0
-16807 -16805 0
c Var 'aux1585' direct represents '2' with '-16806'
16805 16807 -16806 0
c Encoding variable: aux1586 with domain: int(0..2) (representing constraint ((field_00001_00007=7) + (field_00003_00007=7)))
c Both direct and order encoding.
c Var 'aux1586' order represents '0' with '16808'
c Var 'aux1586' direct represents '0' with '16808'
c Var 'aux1586' order represents '1' with '16809'
-16808 16809 0
c Var 'aux1586' direct represents '1' with '16810'
16808 -16809 16810 0
-16810 16809 0
-16810 -16808 0
c Var 'aux1586' direct represents '2' with '-16809'
16808 16810 -16809 0
c Encoding variable: aux1587 with domain: int(0..2) (representing constraint ((field_00003_00009=7) + (field_00003_00008=7)))
c Both direct and order encoding.
c Var 'aux1587' order represents '0' with '16811'
c Var 'aux1587' direct represents '0' with '16811'
c Var 'aux1587' order represents '1' with '16812'
-16811 16812 0
c Var 'aux1587' direct represents '1' with '16813'
16811 -16812 16813 0
-16813 16812 0
-16813 -16811 0
c Var 'aux1587' direct represents '2' with '-16812'
16811 16813 -16812 0
c Encoding variable: aux1588 with domain: int(0..3) (representing constraint ((field_00002_00009=7) + aux1587))
c Both direct and order encoding.
c Var 'aux1588' order represents '0' with '16814'
c Var 'aux1588' direct represents '0' with '16814'
c Var 'aux1588' order represents '1' with '16815'
-16814 16815 0
c Var 'aux1588' direct represents '1' with '16816'
16814 -16815 16816 0
-16816 16815 0
-16816 -16814 0
c Var 'aux1588' order represents '2' with '16817'
-16815 16817 0
c Var 'aux1588' direct represents '2' with '16818'
16815 -16817 16818 0
-16818 16817 0
-16818 -16815 0
c Var 'aux1588' direct represents '3' with '-16817'
16814 16816 16818 -16817 0
c Encoding variable: aux1589 with domain: int(0..4) (representing constraint (aux1584 + aux1586))
c Both direct and order encoding.
c Var 'aux1589' order represents '0' with '16819'
c Var 'aux1589' direct represents '0' with '16819'
c Var 'aux1589' order represents '1' with '16820'
-16819 16820 0
c Var 'aux1589' direct represents '1' with '16821'
16819 -16820 16821 0
-16821 16820 0
-16821 -16819 0
c Var 'aux1589' order represents '2' with '16822'
-16820 16822 0
c Var 'aux1589' direct represents '2' with '16823'
16820 -16822 16823 0
-16823 16822 0
-16823 -16820 0
c Var 'aux1589' order represents '3' with '16824'
-16822 16824 0
c Var 'aux1589' direct represents '3' with '16825'
16822 -16824 16825 0
-16825 16824 0
-16825 -16822 0
c Var 'aux1589' direct represents '4' with '-16824'
16819 16821 16823 16825 -16824 0
c Encoding variable: aux1590 with domain: int(0..2) (representing constraint ((field_00002_00007=8) + (field_00001_00009=8)))
c Both direct and order encoding.
c Var 'aux1590' order represents '0' with '16826'
c Var 'aux1590' direct represents '0' with '16826'
c Var 'aux1590' order represents '1' with '16827'
-16826 16827 0
c Var 'aux1590' direct represents '1' with '16828'
16826 -16827 16828 0
-16828 16827 0
-16828 -16826 0
c Var 'aux1590' direct represents '2' with '-16827'
16826 16828 -16827 0
c Encoding variable: aux1591 with domain: int(0..2) (representing constraint ((field_00001_00008=8) + (field_00002_00008=8)))
c Both direct and order encoding.
c Var 'aux1591' order represents '0' with '16829'
c Var 'aux1591' direct represents '0' with '16829'
c Var 'aux1591' order represents '1' with '16830'
-16829 16830 0
c Var 'aux1591' direct represents '1' with '16831'
16829 -16830 16831 0
-16831 16830 0
-16831 -16829 0
c Var 'aux1591' direct represents '2' with '-16830'
16829 16831 -16830 0
c Encoding variable: aux1592 with domain: int(0..2) (representing constraint ((field_00001_00007=8) + (field_00003_00007=8)))
c Both direct and order encoding.
c Var 'aux1592' order represents '0' with '16832'
c Var 'aux1592' direct represents '0' with '16832'
c Var 'aux1592' order represents '1' with '16833'
-16832 16833 0
c Var 'aux1592' direct represents '1' with '16834'
16832 -16833 16834 0
-16834 16833 0
-16834 -16832 0
c Var 'aux1592' direct represents '2' with '-16833'
16832 16834 -16833 0
c Encoding variable: aux1593 with domain: int(0..2) (representing constraint ((field_00003_00009=8) + (field_00003_00008=8)))
c Both direct and order encoding.
c Var 'aux1593' order represents '0' with '16835'
c Var 'aux1593' direct represents '0' with '16835'
c Var 'aux1593' order represents '1' with '16836'
-16835 16836 0
c Var 'aux1593' direct represents '1' with '16837'
16835 -16836 16837 0
-16837 16836 0
-16837 -16835 0
c Var 'aux1593' direct represents '2' with '-16836'
16835 16837 -16836 0
c Encoding variable: aux1594 with domain: int(0..3) (representing constraint ((field_00002_00009=8) + aux1593))
c Both direct and order encoding.
c Var 'aux1594' order represents '0' with '16838'
c Var 'aux1594' direct represents '0' with '16838'
c Var 'aux1594' order represents '1' with '16839'
-16838 16839 0
c Var 'aux1594' direct represents '1' with '16840'
16838 -16839 16840 0
-16840 16839 0
-16840 -16838 0
c Var 'aux1594' order represents '2' with '16841'
-16839 16841 0
c Var 'aux1594' direct represents '2' with '16842'
16839 -16841 16842 0
-16842 16841 0
-16842 -16839 0
c Var 'aux1594' direct represents '3' with '-16841'
16838 16840 16842 -16841 0
c Encoding variable: aux1595 with domain: int(0..4) (representing constraint (aux1590 + aux1592))
c Both direct and order encoding.
c Var 'aux1595' order represents '0' with '16843'
c Var 'aux1595' direct represents '0' with '16843'
c Var 'aux1595' order represents '1' with '16844'
-16843 16844 0
c Var 'aux1595' direct represents '1' with '16845'
16843 -16844 16845 0
-16845 16844 0
-16845 -16843 0
c Var 'aux1595' order represents '2' with '16846'
-16844 16846 0
c Var 'aux1595' direct represents '2' with '16847'
16844 -16846 16847 0
-16847 16846 0
-16847 -16844 0
c Var 'aux1595' order represents '3' with '16848'
-16846 16848 0
c Var 'aux1595' direct represents '3' with '16849'
16846 -16848 16849 0
-16849 16848 0
-16849 -16846 0
c Var 'aux1595' direct represents '4' with '-16848'
16843 16845 16847 16849 -16848 0
c Encoding variable: aux1596 with domain: int(0..2) (representing constraint ((field_00002_00007=9) + (field_00001_00009=9)))
c Both direct and order encoding.
c Var 'aux1596' order represents '0' with '16850'
c Var 'aux1596' direct represents '0' with '16850'
c Var 'aux1596' order represents '1' with '16851'
-16850 16851 0
c Var 'aux1596' direct represents '1' with '16852'
16850 -16851 16852 0
-16852 16851 0
-16852 -16850 0
c Var 'aux1596' direct represents '2' with '-16851'
16850 16852 -16851 0
c Encoding variable: aux1597 with domain: int(0..2) (representing constraint ((field_00001_00008=9) + (field_00002_00008=9)))
c Both direct and order encoding.
c Var 'aux1597' order represents '0' with '16853'
c Var 'aux1597' direct represents '0' with '16853'
c Var 'aux1597' order represents '1' with '16854'
-16853 16854 0
c Var 'aux1597' direct represents '1' with '16855'
16853 -16854 16855 0
-16855 16854 0
-16855 -16853 0
c Var 'aux1597' direct represents '2' with '-16854'
16853 16855 -16854 0
c Encoding variable: aux1598 with domain: int(0..2) (representing constraint ((field_00001_00007=9) + (field_00003_00007=9)))
c Both direct and order encoding.
c Var 'aux1598' order represents '0' with '16856'
c Var 'aux1598' direct represents '0' with '16856'
c Var 'aux1598' order represents '1' with '16857'
-16856 16857 0
c Var 'aux1598' direct represents '1' with '16858'
16856 -16857 16858 0
-16858 16857 0
-16858 -16856 0
c Var 'aux1598' direct represents '2' with '-16857'
16856 16858 -16857 0
c Encoding variable: aux1599 with domain: int(0..2) (representing constraint ((field_00003_00009=9) + (field_00003_00008=9)))
c Both direct and order encoding.
c Var 'aux1599' order represents '0' with '16859'
c Var 'aux1599' direct represents '0' with '16859'
c Var 'aux1599' order represents '1' with '16860'
-16859 16860 0
c Var 'aux1599' direct represents '1' with '16861'
16859 -16860 16861 0
-16861 16860 0
-16861 -16859 0
c Var 'aux1599' direct represents '2' with '-16860'
16859 16861 -16860 0
c Encoding variable: aux1600 with domain: int(0..3) (representing constraint ((field_00002_00009=9) + aux1599))
c Both direct and order encoding.
c Var 'aux1600' order represents '0' with '16862'
c Var 'aux1600' direct represents '0' with '16862'
c Var 'aux1600' order represents '1' with '16863'
-16862 16863 0
c Var 'aux1600' direct represents '1' with '16864'
16862 -16863 16864 0
-16864 16863 0
-16864 -16862 0
c Var 'aux1600' order represents '2' with '16865'
-16863 16865 0
c Var 'aux1600' direct represents '2' with '16866'
16863 -16865 16866 0
-16866 16865 0
-16866 -16863 0
c Var 'aux1600' direct represents '3' with '-16865'
16862 16864 16866 -16865 0
c Encoding variable: aux1601 with domain: int(0..4) (representing constraint (aux1596 + aux1598))
c Both direct and order encoding.
c Var 'aux1601' order represents '0' with '16867'
c Var 'aux1601' direct represents '0' with '16867'
c Var 'aux1601' order represents '1' with '16868'
-16867 16868 0
c Var 'aux1601' direct represents '1' with '16869'
16867 -16868 16869 0
-16869 16868 0
-16869 -16867 0
c Var 'aux1601' order represents '2' with '16870'
-16868 16870 0
c Var 'aux1601' direct represents '2' with '16871'
16868 -16870 16871 0
-16871 16870 0
-16871 -16868 0
c Var 'aux1601' order represents '3' with '16872'
-16870 16872 0
c Var 'aux1601' direct represents '3' with '16873'
16870 -16872 16873 0
-16873 16872 0
-16873 -16870 0
c Var 'aux1601' direct represents '4' with '-16872'
16867 16869 16871 16873 -16872 0
c Encoding variable: aux1602 with domain: int(0..2) (representing constraint ((field_00004_00001=1) + (field_00006_00003=1)))
c Both direct and order encoding.
c Var 'aux1602' order represents '0' with '16874'
c Var 'aux1602' direct represents '0' with '16874'
c Var 'aux1602' order represents '1' with '16875'
-16874 16875 0
c Var 'aux1602' direct represents '1' with '16876'
16874 -16875 16876 0
-16876 16875 0
-16876 -16874 0
c Var 'aux1602' direct represents '2' with '-16875'
16874 16876 -16875 0
c Encoding variable: aux1603 with domain: int(0..2) (representing constraint ((field_00006_00002=1) + (field_00004_00002=1)))
c Both direct and order encoding.
c Var 'aux1603' order represents '0' with '16877'
c Var 'aux1603' direct represents '0' with '16877'
c Var 'aux1603' order represents '1' with '16878'
-16877 16878 0
c Var 'aux1603' direct represents '1' with '16879'
16877 -16878 16879 0
-16879 16878 0
-16879 -16877 0
c Var 'aux1603' direct represents '2' with '-16878'
16877 16879 -16878 0
c Encoding variable: aux1604 with domain: int(0..2) (representing constraint ((field_00006_00001=1) + (field_00005_00001=1)))
c Both direct and order encoding.
c Var 'aux1604' order represents '0' with '16880'
c Var 'aux1604' direct represents '0' with '16880'
c Var 'aux1604' order represents '1' with '16881'
-16880 16881 0
c Var 'aux1604' direct represents '1' with '16882'
16880 -16881 16882 0
-16882 16881 0
-16882 -16880 0
c Var 'aux1604' direct represents '2' with '-16881'
16880 16882 -16881 0
c Encoding variable: aux1605 with domain: int(0..2) (representing constraint ((field_00005_00003=1) + (field_00005_00002=1)))
c Both direct and order encoding.
c Var 'aux1605' order represents '0' with '16883'
c Var 'aux1605' direct represents '0' with '16883'
c Var 'aux1605' order represents '1' with '16884'
-16883 16884 0
c Var 'aux1605' direct represents '1' with '16885'
16883 -16884 16885 0
-16885 16884 0
-16885 -16883 0
c Var 'aux1605' direct represents '2' with '-16884'
16883 16885 -16884 0
c Encoding variable: aux1606 with domain: int(0..3) (representing constraint ((field_00004_00003=1) + aux1605))
c Both direct and order encoding.
c Var 'aux1606' order represents '0' with '16886'
c Var 'aux1606' direct represents '0' with '16886'
c Var 'aux1606' order represents '1' with '16887'
-16886 16887 0
c Var 'aux1606' direct represents '1' with '16888'
16886 -16887 16888 0
-16888 16887 0
-16888 -16886 0
c Var 'aux1606' order represents '2' with '16889'
-16887 16889 0
c Var 'aux1606' direct represents '2' with '16890'
16887 -16889 16890 0
-16890 16889 0
-16890 -16887 0
c Var 'aux1606' direct represents '3' with '-16889'
16886 16888 16890 -16889 0
c Encoding variable: aux1607 with domain: int(0..4) (representing constraint (aux1602 + aux1604))
c Both direct and order encoding.
c Var 'aux1607' order represents '0' with '16891'
c Var 'aux1607' direct represents '0' with '16891'
c Var 'aux1607' order represents '1' with '16892'
-16891 16892 0
c Var 'aux1607' direct represents '1' with '16893'
16891 -16892 16893 0
-16893 16892 0
-16893 -16891 0
c Var 'aux1607' order represents '2' with '16894'
-16892 16894 0
c Var 'aux1607' direct represents '2' with '16895'
16892 -16894 16895 0
-16895 16894 0
-16895 -16892 0
c Var 'aux1607' order represents '3' with '16896'
-16894 16896 0
c Var 'aux1607' direct represents '3' with '16897'
16894 -16896 16897 0
-16897 16896 0
-16897 -16894 0
c Var 'aux1607' direct represents '4' with '-16896'
16891 16893 16895 16897 -16896 0
c Encoding variable: aux1608 with domain: int(0..2) (representing constraint ((field_00004_00001=2) + (field_00006_00003=2)))
c Both direct and order encoding.
c Var 'aux1608' order represents '0' with '16898'
c Var 'aux1608' direct represents '0' with '16898'
c Var 'aux1608' order represents '1' with '16899'
-16898 16899 0
c Var 'aux1608' direct represents '1' with '16900'
16898 -16899 16900 0
-16900 16899 0
-16900 -16898 0
c Var 'aux1608' direct represents '2' with '-16899'
16898 16900 -16899 0
c Encoding variable: aux1609 with domain: int(0..2) (representing constraint ((field_00006_00002=2) + (field_00004_00002=2)))
c Both direct and order encoding.
c Var 'aux1609' order represents '0' with '16901'
c Var 'aux1609' direct represents '0' with '16901'
c Var 'aux1609' order represents '1' with '16902'
-16901 16902 0
c Var 'aux1609' direct represents '1' with '16903'
16901 -16902 16903 0
-16903 16902 0
-16903 -16901 0
c Var 'aux1609' direct represents '2' with '-16902'
16901 16903 -16902 0
c Encoding variable: aux1610 with domain: int(0..2) (representing constraint ((field_00006_00001=2) + (field_00005_00001=2)))
c Both direct and order encoding.
c Var 'aux1610' order represents '0' with '16904'
c Var 'aux1610' direct represents '0' with '16904'
c Var 'aux1610' order represents '1' with '16905'
-16904 16905 0
c Var 'aux1610' direct represents '1' with '16906'
16904 -16905 16906 0
-16906 16905 0
-16906 -16904 0
c Var 'aux1610' direct represents '2' with '-16905'
16904 16906 -16905 0
c Encoding variable: aux1611 with domain: int(0..2) (representing constraint ((field_00005_00003=2) + (field_00005_00002=2)))
c Both direct and order encoding.
c Var 'aux1611' order represents '0' with '16907'
c Var 'aux1611' direct represents '0' with '16907'
c Var 'aux1611' order represents '1' with '16908'
-16907 16908 0
c Var 'aux1611' direct represents '1' with '16909'
16907 -16908 16909 0
-16909 16908 0
-16909 -16907 0
c Var 'aux1611' direct represents '2' with '-16908'
16907 16909 -16908 0
c Encoding variable: aux1612 with domain: int(0..3) (representing constraint ((field_00004_00003=2) + aux1611))
c Both direct and order encoding.
c Var 'aux1612' order represents '0' with '16910'
c Var 'aux1612' direct represents '0' with '16910'
c Var 'aux1612' order represents '1' with '16911'
-16910 16911 0
c Var 'aux1612' direct represents '1' with '16912'
16910 -16911 16912 0
-16912 16911 0
-16912 -16910 0
c Var 'aux1612' order represents '2' with '16913'
-16911 16913 0
c Var 'aux1612' direct represents '2' with '16914'
16911 -16913 16914 0
-16914 16913 0
-16914 -16911 0
c Var 'aux1612' direct represents '3' with '-16913'
16910 16912 16914 -16913 0
c Encoding variable: aux1613 with domain: int(0..4) (representing constraint (aux1608 + aux1610))
c Both direct and order encoding.
c Var 'aux1613' order represents '0' with '16915'
c Var 'aux1613' direct represents '0' with '16915'
c Var 'aux1613' order represents '1' with '16916'
-16915 16916 0
c Var 'aux1613' direct represents '1' with '16917'
16915 -16916 16917 0
-16917 16916 0
-16917 -16915 0
c Var 'aux1613' order represents '2' with '16918'
-16916 16918 0
c Var 'aux1613' direct represents '2' with '16919'
16916 -16918 16919 0
-16919 16918 0
-16919 -16916 0
c Var 'aux1613' order represents '3' with '16920'
-16918 16920 0
c Var 'aux1613' direct represents '3' with '16921'
16918 -16920 16921 0
-16921 16920 0
-16921 -16918 0
c Var 'aux1613' direct represents '4' with '-16920'
16915 16917 16919 16921 -16920 0
c Encoding variable: aux1614 with domain: int(0..2) (representing constraint ((field_00004_00001=3) + (field_00006_00003=3)))
c Both direct and order encoding.
c Var 'aux1614' order represents '0' with '16922'
c Var 'aux1614' direct represents '0' with '16922'
c Var 'aux1614' order represents '1' with '16923'
-16922 16923 0
c Var 'aux1614' direct represents '1' with '16924'
16922 -16923 16924 0
-16924 16923 0
-16924 -16922 0
c Var 'aux1614' direct represents '2' with '-16923'
16922 16924 -16923 0
c Encoding variable: aux1615 with domain: int(0..2) (representing constraint ((field_00006_00002=3) + (field_00004_00002=3)))
c Both direct and order encoding.
c Var 'aux1615' order represents '0' with '16925'
c Var 'aux1615' direct represents '0' with '16925'
c Var 'aux1615' order represents '1' with '16926'
-16925 16926 0
c Var 'aux1615' direct represents '1' with '16927'
16925 -16926 16927 0
-16927 16926 0
-16927 -16925 0
c Var 'aux1615' direct represents '2' with '-16926'
16925 16927 -16926 0
c Encoding variable: aux1616 with domain: int(0..2) (representing constraint ((field_00006_00001=3) + (field_00005_00001=3)))
c Both direct and order encoding.
c Var 'aux1616' order represents '0' with '16928'
c Var 'aux1616' direct represents '0' with '16928'
c Var 'aux1616' order represents '1' with '16929'
-16928 16929 0
c Var 'aux1616' direct represents '1' with '16930'
16928 -16929 16930 0
-16930 16929 0
-16930 -16928 0
c Var 'aux1616' direct represents '2' with '-16929'
16928 16930 -16929 0
c Encoding variable: aux1617 with domain: int(0..2) (representing constraint ((field_00005_00003=3) + (field_00005_00002=3)))
c Both direct and order encoding.
c Var 'aux1617' order represents '0' with '16931'
c Var 'aux1617' direct represents '0' with '16931'
c Var 'aux1617' order represents '1' with '16932'
-16931 16932 0
c Var 'aux1617' direct represents '1' with '16933'
16931 -16932 16933 0
-16933 16932 0
-16933 -16931 0
c Var 'aux1617' direct represents '2' with '-16932'
16931 16933 -16932 0
c Encoding variable: aux1618 with domain: int(0..3) (representing constraint ((field_00004_00003=3) + aux1617))
c Both direct and order encoding.
c Var 'aux1618' order represents '0' with '16934'
c Var 'aux1618' direct represents '0' with '16934'
c Var 'aux1618' order represents '1' with '16935'
-16934 16935 0
c Var 'aux1618' direct represents '1' with '16936'
16934 -16935 16936 0
-16936 16935 0
-16936 -16934 0
c Var 'aux1618' order represents '2' with '16937'
-16935 16937 0
c Var 'aux1618' direct represents '2' with '16938'
16935 -16937 16938 0
-16938 16937 0
-16938 -16935 0
c Var 'aux1618' direct represents '3' with '-16937'
16934 16936 16938 -16937 0
c Encoding variable: aux1619 with domain: int(0..4) (representing constraint (aux1614 + aux1616))
c Both direct and order encoding.
c Var 'aux1619' order represents '0' with '16939'
c Var 'aux1619' direct represents '0' with '16939'
c Var 'aux1619' order represents '1' with '16940'
-16939 16940 0
c Var 'aux1619' direct represents '1' with '16941'
16939 -16940 16941 0
-16941 16940 0
-16941 -16939 0
c Var 'aux1619' order represents '2' with '16942'
-16940 16942 0
c Var 'aux1619' direct represents '2' with '16943'
16940 -16942 16943 0
-16943 16942 0
-16943 -16940 0
c Var 'aux1619' order represents '3' with '16944'
-16942 16944 0
c Var 'aux1619' direct represents '3' with '16945'
16942 -16944 16945 0
-16945 16944 0
-16945 -16942 0
c Var 'aux1619' direct represents '4' with '-16944'
16939 16941 16943 16945 -16944 0
c Encoding variable: aux1620 with domain: int(0..2) (representing constraint ((field_00004_00001=4) + (field_00006_00003=4)))
c Both direct and order encoding.
c Var 'aux1620' order represents '0' with '16946'
c Var 'aux1620' direct represents '0' with '16946'
c Var 'aux1620' order represents '1' with '16947'
-16946 16947 0
c Var 'aux1620' direct represents '1' with '16948'
16946 -16947 16948 0
-16948 16947 0
-16948 -16946 0
c Var 'aux1620' direct represents '2' with '-16947'
16946 16948 -16947 0
c Encoding variable: aux1621 with domain: int(0..2) (representing constraint ((field_00006_00002=4) + (field_00004_00002=4)))
c Both direct and order encoding.
c Var 'aux1621' order represents '0' with '16949'
c Var 'aux1621' direct represents '0' with '16949'
c Var 'aux1621' order represents '1' with '16950'
-16949 16950 0
c Var 'aux1621' direct represents '1' with '16951'
16949 -16950 16951 0
-16951 16950 0
-16951 -16949 0
c Var 'aux1621' direct represents '2' with '-16950'
16949 16951 -16950 0
c Encoding variable: aux1622 with domain: int(0..2) (representing constraint ((field_00006_00001=4) + (field_00005_00001=4)))
c Both direct and order encoding.
c Var 'aux1622' order represents '0' with '16952'
c Var 'aux1622' direct represents '0' with '16952'
c Var 'aux1622' order represents '1' with '16953'
-16952 16953 0
c Var 'aux1622' direct represents '1' with '16954'
16952 -16953 16954 0
-16954 16953 0
-16954 -16952 0
c Var 'aux1622' direct represents '2' with '-16953'
16952 16954 -16953 0
c Encoding variable: aux1623 with domain: int(0..2) (representing constraint ((field_00005_00003=4) + (field_00005_00002=4)))
c Both direct and order encoding.
c Var 'aux1623' order represents '0' with '16955'
c Var 'aux1623' direct represents '0' with '16955'
c Var 'aux1623' order represents '1' with '16956'
-16955 16956 0
c Var 'aux1623' direct represents '1' with '16957'
16955 -16956 16957 0
-16957 16956 0
-16957 -16955 0
c Var 'aux1623' direct represents '2' with '-16956'
16955 16957 -16956 0
c Encoding variable: aux1624 with domain: int(0..3) (representing constraint ((field_00004_00003=4) + aux1623))
c Both direct and order encoding.
c Var 'aux1624' order represents '0' with '16958'
c Var 'aux1624' direct represents '0' with '16958'
c Var 'aux1624' order represents '1' with '16959'
-16958 16959 0
c Var 'aux1624' direct represents '1' with '16960'
16958 -16959 16960 0
-16960 16959 0
-16960 -16958 0
c Var 'aux1624' order represents '2' with '16961'
-16959 16961 0
c Var 'aux1624' direct represents '2' with '16962'
16959 -16961 16962 0
-16962 16961 0
-16962 -16959 0
c Var 'aux1624' direct represents '3' with '-16961'
16958 16960 16962 -16961 0
c Encoding variable: aux1625 with domain: int(0..4) (representing constraint (aux1620 + aux1622))
c Both direct and order encoding.
c Var 'aux1625' order represents '0' with '16963'
c Var 'aux1625' direct represents '0' with '16963'
c Var 'aux1625' order represents '1' with '16964'
-16963 16964 0
c Var 'aux1625' direct represents '1' with '16965'
16963 -16964 16965 0
-16965 16964 0
-16965 -16963 0
c Var 'aux1625' order represents '2' with '16966'
-16964 16966 0
c Var 'aux1625' direct represents '2' with '16967'
16964 -16966 16967 0
-16967 16966 0
-16967 -16964 0
c Var 'aux1625' order represents '3' with '16968'
-16966 16968 0
c Var 'aux1625' direct represents '3' with '16969'
16966 -16968 16969 0
-16969 16968 0
-16969 -16966 0
c Var 'aux1625' direct represents '4' with '-16968'
16963 16965 16967 16969 -16968 0
c Encoding variable: aux1626 with domain: int(0..2) (representing constraint ((field_00004_00001=5) + (field_00006_00003=5)))
c Both direct and order encoding.
c Var 'aux1626' order represents '0' with '16970'
c Var 'aux1626' direct represents '0' with '16970'
c Var 'aux1626' order represents '1' with '16971'
-16970 16971 0
c Var 'aux1626' direct represents '1' with '16972'
16970 -16971 16972 0
-16972 16971 0
-16972 -16970 0
c Var 'aux1626' direct represents '2' with '-16971'
16970 16972 -16971 0
c Encoding variable: aux1627 with domain: int(0..2) (representing constraint ((field_00006_00002=5) + (field_00004_00002=5)))
c Both direct and order encoding.
c Var 'aux1627' order represents '0' with '16973'
c Var 'aux1627' direct represents '0' with '16973'
c Var 'aux1627' order represents '1' with '16974'
-16973 16974 0
c Var 'aux1627' direct represents '1' with '16975'
16973 -16974 16975 0
-16975 16974 0
-16975 -16973 0
c Var 'aux1627' direct represents '2' with '-16974'
16973 16975 -16974 0
c Encoding variable: aux1628 with domain: int(0..2) (representing constraint ((field_00006_00001=5) + (field_00005_00001=5)))
c Both direct and order encoding.
c Var 'aux1628' order represents '0' with '16976'
c Var 'aux1628' direct represents '0' with '16976'
c Var 'aux1628' order represents '1' with '16977'
-16976 16977 0
c Var 'aux1628' direct represents '1' with '16978'
16976 -16977 16978 0
-16978 16977 0
-16978 -16976 0
c Var 'aux1628' direct represents '2' with '-16977'
16976 16978 -16977 0
c Encoding variable: aux1629 with domain: int(0..2) (representing constraint ((field_00005_00003=5) + (field_00005_00002=5)))
c Both direct and order encoding.
c Var 'aux1629' order represents '0' with '16979'
c Var 'aux1629' direct represents '0' with '16979'
c Var 'aux1629' order represents '1' with '16980'
-16979 16980 0
c Var 'aux1629' direct represents '1' with '16981'
16979 -16980 16981 0
-16981 16980 0
-16981 -16979 0
c Var 'aux1629' direct represents '2' with '-16980'
16979 16981 -16980 0
c Encoding variable: aux1630 with domain: int(0..3) (representing constraint ((field_00004_00003=5) + aux1629))
c Both direct and order encoding.
c Var 'aux1630' order represents '0' with '16982'
c Var 'aux1630' direct represents '0' with '16982'
c Var 'aux1630' order represents '1' with '16983'
-16982 16983 0
c Var 'aux1630' direct represents '1' with '16984'
16982 -16983 16984 0
-16984 16983 0
-16984 -16982 0
c Var 'aux1630' order represents '2' with '16985'
-16983 16985 0
c Var 'aux1630' direct represents '2' with '16986'
16983 -16985 16986 0
-16986 16985 0
-16986 -16983 0
c Var 'aux1630' direct represents '3' with '-16985'
16982 16984 16986 -16985 0
c Encoding variable: aux1631 with domain: int(0..4) (representing constraint (aux1626 + aux1628))
c Both direct and order encoding.
c Var 'aux1631' order represents '0' with '16987'
c Var 'aux1631' direct represents '0' with '16987'
c Var 'aux1631' order represents '1' with '16988'
-16987 16988 0
c Var 'aux1631' direct represents '1' with '16989'
16987 -16988 16989 0
-16989 16988 0
-16989 -16987 0
c Var 'aux1631' order represents '2' with '16990'
-16988 16990 0
c Var 'aux1631' direct represents '2' with '16991'
16988 -16990 16991 0
-16991 16990 0
-16991 -16988 0
c Var 'aux1631' order represents '3' with '16992'
-16990 16992 0
c Var 'aux1631' direct represents '3' with '16993'
16990 -16992 16993 0
-16993 16992 0
-16993 -16990 0
c Var 'aux1631' direct represents '4' with '-16992'
16987 16989 16991 16993 -16992 0
c Encoding variable: aux1632 with domain: int(0..2) (representing constraint ((field_00004_00001=6) + (field_00006_00003=6)))
c Both direct and order encoding.
c Var 'aux1632' order represents '0' with '16994'
c Var 'aux1632' direct represents '0' with '16994'
c Var 'aux1632' order represents '1' with '16995'
-16994 16995 0
c Var 'aux1632' direct represents '1' with '16996'
16994 -16995 16996 0
-16996 16995 0
-16996 -16994 0
c Var 'aux1632' direct represents '2' with '-16995'
16994 16996 -16995 0
c Encoding variable: aux1633 with domain: int(0..2) (representing constraint ((field_00006_00002=6) + (field_00004_00002=6)))
c Both direct and order encoding.
c Var 'aux1633' order represents '0' with '16997'
c Var 'aux1633' direct represents '0' with '16997'
c Var 'aux1633' order represents '1' with '16998'
-16997 16998 0
c Var 'aux1633' direct represents '1' with '16999'
16997 -16998 16999 0
-16999 16998 0
-16999 -16997 0
c Var 'aux1633' direct represents '2' with '-16998'
16997 16999 -16998 0
c Encoding variable: aux1634 with domain: int(0..2) (representing constraint ((field_00006_00001=6) + (field_00005_00001=6)))
c Both direct and order encoding.
c Var 'aux1634' order represents '0' with '17000'
c Var 'aux1634' direct represents '0' with '17000'
c Var 'aux1634' order represents '1' with '17001'
-17000 17001 0
c Var 'aux1634' direct represents '1' with '17002'
17000 -17001 17002 0
-17002 17001 0
-17002 -17000 0
c Var 'aux1634' direct represents '2' with '-17001'
17000 17002 -17001 0
c Encoding variable: aux1635 with domain: int(0..2) (representing constraint ((field_00005_00003=6) + (field_00005_00002=6)))
c Both direct and order encoding.
c Var 'aux1635' order represents '0' with '17003'
c Var 'aux1635' direct represents '0' with '17003'
c Var 'aux1635' order represents '1' with '17004'
-17003 17004 0
c Var 'aux1635' direct represents '1' with '17005'
17003 -17004 17005 0
-17005 17004 0
-17005 -17003 0
c Var 'aux1635' direct represents '2' with '-17004'
17003 17005 -17004 0
c Encoding variable: aux1636 with domain: int(0..3) (representing constraint ((field_00004_00003=6) + aux1635))
c Both direct and order encoding.
c Var 'aux1636' order represents '0' with '17006'
c Var 'aux1636' direct represents '0' with '17006'
c Var 'aux1636' order represents '1' with '17007'
-17006 17007 0
c Var 'aux1636' direct represents '1' with '17008'
17006 -17007 17008 0
-17008 17007 0
-17008 -17006 0
c Var 'aux1636' order represents '2' with '17009'
-17007 17009 0
c Var 'aux1636' direct represents '2' with '17010'
17007 -17009 17010 0
-17010 17009 0
-17010 -17007 0
c Var 'aux1636' direct represents '3' with '-17009'
17006 17008 17010 -17009 0
c Encoding variable: aux1637 with domain: int(0..4) (representing constraint (aux1632 + aux1634))
c Both direct and order encoding.
c Var 'aux1637' order represents '0' with '17011'
c Var 'aux1637' direct represents '0' with '17011'
c Var 'aux1637' order represents '1' with '17012'
-17011 17012 0
c Var 'aux1637' direct represents '1' with '17013'
17011 -17012 17013 0
-17013 17012 0
-17013 -17011 0
c Var 'aux1637' order represents '2' with '17014'
-17012 17014 0
c Var 'aux1637' direct represents '2' with '17015'
17012 -17014 17015 0
-17015 17014 0
-17015 -17012 0
c Var 'aux1637' order represents '3' with '17016'
-17014 17016 0
c Var 'aux1637' direct represents '3' with '17017'
17014 -17016 17017 0
-17017 17016 0
-17017 -17014 0
c Var 'aux1637' direct represents '4' with '-17016'
17011 17013 17015 17017 -17016 0
c Encoding variable: aux1638 with domain: int(0..2) (representing constraint ((field_00004_00001=7) + (field_00006_00003=7)))
c Both direct and order encoding.
c Var 'aux1638' order represents '0' with '17018'
c Var 'aux1638' direct represents '0' with '17018'
c Var 'aux1638' order represents '1' with '17019'
-17018 17019 0
c Var 'aux1638' direct represents '1' with '17020'
17018 -17019 17020 0
-17020 17019 0
-17020 -17018 0
c Var 'aux1638' direct represents '2' with '-17019'
17018 17020 -17019 0
c Encoding variable: aux1639 with domain: int(0..2) (representing constraint ((field_00006_00002=7) + (field_00004_00002=7)))
c Both direct and order encoding.
c Var 'aux1639' order represents '0' with '17021'
c Var 'aux1639' direct represents '0' with '17021'
c Var 'aux1639' order represents '1' with '17022'
-17021 17022 0
c Var 'aux1639' direct represents '1' with '17023'
17021 -17022 17023 0
-17023 17022 0
-17023 -17021 0
c Var 'aux1639' direct represents '2' with '-17022'
17021 17023 -17022 0
c Encoding variable: aux1640 with domain: int(0..2) (representing constraint ((field_00006_00001=7) + (field_00005_00001=7)))
c Both direct and order encoding.
c Var 'aux1640' order represents '0' with '17024'
c Var 'aux1640' direct represents '0' with '17024'
c Var 'aux1640' order represents '1' with '17025'
-17024 17025 0
c Var 'aux1640' direct represents '1' with '17026'
17024 -17025 17026 0
-17026 17025 0
-17026 -17024 0
c Var 'aux1640' direct represents '2' with '-17025'
17024 17026 -17025 0
c Encoding variable: aux1641 with domain: int(0..2) (representing constraint ((field_00005_00003=7) + (field_00005_00002=7)))
c Both direct and order encoding.
c Var 'aux1641' order represents '0' with '17027'
c Var 'aux1641' direct represents '0' with '17027'
c Var 'aux1641' order represents '1' with '17028'
-17027 17028 0
c Var 'aux1641' direct represents '1' with '17029'
17027 -17028 17029 0
-17029 17028 0
-17029 -17027 0
c Var 'aux1641' direct represents '2' with '-17028'
17027 17029 -17028 0
c Encoding variable: aux1642 with domain: int(0..3) (representing constraint ((field_00004_00003=7) + aux1641))
c Both direct and order encoding.
c Var 'aux1642' order represents '0' with '17030'
c Var 'aux1642' direct represents '0' with '17030'
c Var 'aux1642' order represents '1' with '17031'
-17030 17031 0
c Var 'aux1642' direct represents '1' with '17032'
17030 -17031 17032 0
-17032 17031 0
-17032 -17030 0
c Var 'aux1642' order represents '2' with '17033'
-17031 17033 0
c Var 'aux1642' direct represents '2' with '17034'
17031 -17033 17034 0
-17034 17033 0
-17034 -17031 0
c Var 'aux1642' direct represents '3' with '-17033'
17030 17032 17034 -17033 0
c Encoding variable: aux1643 with domain: int(0..4) (representing constraint (aux1638 + aux1640))
c Both direct and order encoding.
c Var 'aux1643' order represents '0' with '17035'
c Var 'aux1643' direct represents '0' with '17035'
c Var 'aux1643' order represents '1' with '17036'
-17035 17036 0
c Var 'aux1643' direct represents '1' with '17037'
17035 -17036 17037 0
-17037 17036 0
-17037 -17035 0
c Var 'aux1643' order represents '2' with '17038'
-17036 17038 0
c Var 'aux1643' direct represents '2' with '17039'
17036 -17038 17039 0
-17039 17038 0
-17039 -17036 0
c Var 'aux1643' order represents '3' with '17040'
-17038 17040 0
c Var 'aux1643' direct represents '3' with '17041'
17038 -17040 17041 0
-17041 17040 0
-17041 -17038 0
c Var 'aux1643' direct represents '4' with '-17040'
17035 17037 17039 17041 -17040 0
c Encoding variable: aux1644 with domain: int(0..2) (representing constraint ((field_00004_00001=8) + (field_00006_00003=8)))
c Both direct and order encoding.
c Var 'aux1644' order represents '0' with '17042'
c Var 'aux1644' direct represents '0' with '17042'
c Var 'aux1644' order represents '1' with '17043'
-17042 17043 0
c Var 'aux1644' direct represents '1' with '17044'
17042 -17043 17044 0
-17044 17043 0
-17044 -17042 0
c Var 'aux1644' direct represents '2' with '-17043'
17042 17044 -17043 0
c Encoding variable: aux1645 with domain: int(0..2) (representing constraint ((field_00006_00002=8) + (field_00004_00002=8)))
c Both direct and order encoding.
c Var 'aux1645' order represents '0' with '17045'
c Var 'aux1645' direct represents '0' with '17045'
c Var 'aux1645' order represents '1' with '17046'
-17045 17046 0
c Var 'aux1645' direct represents '1' with '17047'
17045 -17046 17047 0
-17047 17046 0
-17047 -17045 0
c Var 'aux1645' direct represents '2' with '-17046'
17045 17047 -17046 0
c Encoding variable: aux1646 with domain: int(0..2) (representing constraint ((field_00006_00001=8) + (field_00005_00001=8)))
c Both direct and order encoding.
c Var 'aux1646' order represents '0' with '17048'
c Var 'aux1646' direct represents '0' with '17048'
c Var 'aux1646' order represents '1' with '17049'
-17048 17049 0
c Var 'aux1646' direct represents '1' with '17050'
17048 -17049 17050 0
-17050 17049 0
-17050 -17048 0
c Var 'aux1646' direct represents '2' with '-17049'
17048 17050 -17049 0
c Encoding variable: aux1647 with domain: int(0..2) (representing constraint ((field_00005_00003=8) + (field_00005_00002=8)))
c Both direct and order encoding.
c Var 'aux1647' order represents '0' with '17051'
c Var 'aux1647' direct represents '0' with '17051'
c Var 'aux1647' order represents '1' with '17052'
-17051 17052 0
c Var 'aux1647' direct represents '1' with '17053'
17051 -17052 17053 0
-17053 17052 0
-17053 -17051 0
c Var 'aux1647' direct represents '2' with '-17052'
17051 17053 -17052 0
c Encoding variable: aux1648 with domain: int(0..3) (representing constraint ((field_00004_00003=8) + aux1647))
c Both direct and order encoding.
c Var 'aux1648' order represents '0' with '17054'
c Var 'aux1648' direct represents '0' with '17054'
c Var 'aux1648' order represents '1' with '17055'
-17054 17055 0
c Var 'aux1648' direct represents '1' with '17056'
17054 -17055 17056 0
-17056 17055 0
-17056 -17054 0
c Var 'aux1648' order represents '2' with '17057'
-17055 17057 0
c Var 'aux1648' direct represents '2' with '17058'
17055 -17057 17058 0
-17058 17057 0
-17058 -17055 0
c Var 'aux1648' direct represents '3' with '-17057'
17054 17056 17058 -17057 0
c Encoding variable: aux1649 with domain: int(0..4) (representing constraint (aux1644 + aux1646))
c Both direct and order encoding.
c Var 'aux1649' order represents '0' with '17059'
c Var 'aux1649' direct represents '0' with '17059'
c Var 'aux1649' order represents '1' with '17060'
-17059 17060 0
c Var 'aux1649' direct represents '1' with '17061'
17059 -17060 17061 0
-17061 17060 0
-17061 -17059 0
c Var 'aux1649' order represents '2' with '17062'
-17060 17062 0
c Var 'aux1649' direct represents '2' with '17063'
17060 -17062 17063 0
-17063 17062 0
-17063 -17060 0
c Var 'aux1649' order represents '3' with '17064'
-17062 17064 0
c Var 'aux1649' direct represents '3' with '17065'
17062 -17064 17065 0
-17065 17064 0
-17065 -17062 0
c Var 'aux1649' direct represents '4' with '-17064'
17059 17061 17063 17065 -17064 0
c Encoding variable: aux1650 with domain: int(0..2) (representing constraint ((field_00004_00001=9) + (field_00006_00003=9)))
c Both direct and order encoding.
c Var 'aux1650' order represents '0' with '17066'
c Var 'aux1650' direct represents '0' with '17066'
c Var 'aux1650' order represents '1' with '17067'
-17066 17067 0
c Var 'aux1650' direct represents '1' with '17068'
17066 -17067 17068 0
-17068 17067 0
-17068 -17066 0
c Var 'aux1650' direct represents '2' with '-17067'
17066 17068 -17067 0
c Encoding variable: aux1651 with domain: int(0..2) (representing constraint ((field_00006_00002=9) + (field_00004_00002=9)))
c Both direct and order encoding.
c Var 'aux1651' order represents '0' with '17069'
c Var 'aux1651' direct represents '0' with '17069'
c Var 'aux1651' order represents '1' with '17070'
-17069 17070 0
c Var 'aux1651' direct represents '1' with '17071'
17069 -17070 17071 0
-17071 17070 0
-17071 -17069 0
c Var 'aux1651' direct represents '2' with '-17070'
17069 17071 -17070 0
c Encoding variable: aux1652 with domain: int(0..2) (representing constraint ((field_00006_00001=9) + (field_00005_00001=9)))
c Both direct and order encoding.
c Var 'aux1652' order represents '0' with '17072'
c Var 'aux1652' direct represents '0' with '17072'
c Var 'aux1652' order represents '1' with '17073'
-17072 17073 0
c Var 'aux1652' direct represents '1' with '17074'
17072 -17073 17074 0
-17074 17073 0
-17074 -17072 0
c Var 'aux1652' direct represents '2' with '-17073'
17072 17074 -17073 0
c Encoding variable: aux1653 with domain: int(0..2) (representing constraint ((field_00005_00003=9) + (field_00005_00002=9)))
c Both direct and order encoding.
c Var 'aux1653' order represents '0' with '17075'
c Var 'aux1653' direct represents '0' with '17075'
c Var 'aux1653' order represents '1' with '17076'
-17075 17076 0
c Var 'aux1653' direct represents '1' with '17077'
17075 -17076 17077 0
-17077 17076 0
-17077 -17075 0
c Var 'aux1653' direct represents '2' with '-17076'
17075 17077 -17076 0
c Encoding variable: aux1654 with domain: int(0..3) (representing constraint ((field_00004_00003=9) + aux1653))
c Both direct and order encoding.
c Var 'aux1654' order represents '0' with '17078'
c Var 'aux1654' direct represents '0' with '17078'
c Var 'aux1654' order represents '1' with '17079'
-17078 17079 0
c Var 'aux1654' direct represents '1' with '17080'
17078 -17079 17080 0
-17080 17079 0
-17080 -17078 0
c Var 'aux1654' order represents '2' with '17081'
-17079 17081 0
c Var 'aux1654' direct represents '2' with '17082'
17079 -17081 17082 0
-17082 17081 0
-17082 -17079 0
c Var 'aux1654' direct represents '3' with '-17081'
17078 17080 17082 -17081 0
c Encoding variable: aux1655 with domain: int(0..4) (representing constraint (aux1650 + aux1652))
c Both direct and order encoding.
c Var 'aux1655' order represents '0' with '17083'
c Var 'aux1655' direct represents '0' with '17083'
c Var 'aux1655' order represents '1' with '17084'
-17083 17084 0
c Var 'aux1655' direct represents '1' with '17085'
17083 -17084 17085 0
-17085 17084 0
-17085 -17083 0
c Var 'aux1655' order represents '2' with '17086'
-17084 17086 0
c Var 'aux1655' direct represents '2' with '17087'
17084 -17086 17087 0
-17087 17086 0
-17087 -17084 0
c Var 'aux1655' order represents '3' with '17088'
-17086 17088 0
c Var 'aux1655' direct represents '3' with '17089'
17086 -17088 17089 0
-17089 17088 0
-17089 -17086 0
c Var 'aux1655' direct represents '4' with '-17088'
17083 17085 17087 17089 -17088 0
c Encoding variable: aux1656 with domain: int(0..2) (representing constraint ((field_00004_00004=1) + (field_00006_00006=1)))
c Both direct and order encoding.
c Var 'aux1656' order represents '0' with '17090'
c Var 'aux1656' direct represents '0' with '17090'
c Var 'aux1656' order represents '1' with '17091'
-17090 17091 0
c Var 'aux1656' direct represents '1' with '17092'
17090 -17091 17092 0
-17092 17091 0
-17092 -17090 0
c Var 'aux1656' direct represents '2' with '-17091'
17090 17092 -17091 0
c Encoding variable: aux1657 with domain: int(0..2) (representing constraint ((field_00006_00005=1) + (field_00004_00005=1)))
c Both direct and order encoding.
c Var 'aux1657' order represents '0' with '17093'
c Var 'aux1657' direct represents '0' with '17093'
c Var 'aux1657' order represents '1' with '17094'
-17093 17094 0
c Var 'aux1657' direct represents '1' with '17095'
17093 -17094 17095 0
-17095 17094 0
-17095 -17093 0
c Var 'aux1657' direct represents '2' with '-17094'
17093 17095 -17094 0
c Encoding variable: aux1658 with domain: int(0..2) (representing constraint ((field_00006_00004=1) + (field_00005_00004=1)))
c Both direct and order encoding.
c Var 'aux1658' order represents '0' with '17096'
c Var 'aux1658' direct represents '0' with '17096'
c Var 'aux1658' order represents '1' with '17097'
-17096 17097 0
c Var 'aux1658' direct represents '1' with '17098'
17096 -17097 17098 0
-17098 17097 0
-17098 -17096 0
c Var 'aux1658' direct represents '2' with '-17097'
17096 17098 -17097 0
c Encoding variable: aux1659 with domain: int(0..2) (representing constraint ((field_00005_00006=1) + (field_00005_00005=1)))
c Both direct and order encoding.
c Var 'aux1659' order represents '0' with '17099'
c Var 'aux1659' direct represents '0' with '17099'
c Var 'aux1659' order represents '1' with '17100'
-17099 17100 0
c Var 'aux1659' direct represents '1' with '17101'
17099 -17100 17101 0
-17101 17100 0
-17101 -17099 0
c Var 'aux1659' direct represents '2' with '-17100'
17099 17101 -17100 0
c Encoding variable: aux1660 with domain: int(0..3) (representing constraint ((field_00004_00006=1) + aux1659))
c Both direct and order encoding.
c Var 'aux1660' order represents '0' with '17102'
c Var 'aux1660' direct represents '0' with '17102'
c Var 'aux1660' order represents '1' with '17103'
-17102 17103 0
c Var 'aux1660' direct represents '1' with '17104'
17102 -17103 17104 0
-17104 17103 0
-17104 -17102 0
c Var 'aux1660' order represents '2' with '17105'
-17103 17105 0
c Var 'aux1660' direct represents '2' with '17106'
17103 -17105 17106 0
-17106 17105 0
-17106 -17103 0
c Var 'aux1660' direct represents '3' with '-17105'
17102 17104 17106 -17105 0
c Encoding variable: aux1661 with domain: int(0..4) (representing constraint (aux1656 + aux1658))
c Both direct and order encoding.
c Var 'aux1661' order represents '0' with '17107'
c Var 'aux1661' direct represents '0' with '17107'
c Var 'aux1661' order represents '1' with '17108'
-17107 17108 0
c Var 'aux1661' direct represents '1' with '17109'
17107 -17108 17109 0
-17109 17108 0
-17109 -17107 0
c Var 'aux1661' order represents '2' with '17110'
-17108 17110 0
c Var 'aux1661' direct represents '2' with '17111'
17108 -17110 17111 0
-17111 17110 0
-17111 -17108 0
c Var 'aux1661' order represents '3' with '17112'
-17110 17112 0
c Var 'aux1661' direct represents '3' with '17113'
17110 -17112 17113 0
-17113 17112 0
-17113 -17110 0
c Var 'aux1661' direct represents '4' with '-17112'
17107 17109 17111 17113 -17112 0
c Encoding variable: aux1662 with domain: int(0..2) (representing constraint ((field_00004_00004=2) + (field_00006_00006=2)))
c Both direct and order encoding.
c Var 'aux1662' order represents '0' with '17114'
c Var 'aux1662' direct represents '0' with '17114'
c Var 'aux1662' order represents '1' with '17115'
-17114 17115 0
c Var 'aux1662' direct represents '1' with '17116'
17114 -17115 17116 0
-17116 17115 0
-17116 -17114 0
c Var 'aux1662' direct represents '2' with '-17115'
17114 17116 -17115 0
c Encoding variable: aux1663 with domain: int(0..2) (representing constraint ((field_00006_00005=2) + (field_00004_00005=2)))
c Both direct and order encoding.
c Var 'aux1663' order represents '0' with '17117'
c Var 'aux1663' direct represents '0' with '17117'
c Var 'aux1663' order represents '1' with '17118'
-17117 17118 0
c Var 'aux1663' direct represents '1' with '17119'
17117 -17118 17119 0
-17119 17118 0
-17119 -17117 0
c Var 'aux1663' direct represents '2' with '-17118'
17117 17119 -17118 0
c Encoding variable: aux1664 with domain: int(0..2) (representing constraint ((field_00006_00004=2) + (field_00005_00004=2)))
c Both direct and order encoding.
c Var 'aux1664' order represents '0' with '17120'
c Var 'aux1664' direct represents '0' with '17120'
c Var 'aux1664' order represents '1' with '17121'
-17120 17121 0
c Var 'aux1664' direct represents '1' with '17122'
17120 -17121 17122 0
-17122 17121 0
-17122 -17120 0
c Var 'aux1664' direct represents '2' with '-17121'
17120 17122 -17121 0
c Encoding variable: aux1665 with domain: int(0..2) (representing constraint ((field_00005_00006=2) + (field_00005_00005=2)))
c Both direct and order encoding.
c Var 'aux1665' order represents '0' with '17123'
c Var 'aux1665' direct represents '0' with '17123'
c Var 'aux1665' order represents '1' with '17124'
-17123 17124 0
c Var 'aux1665' direct represents '1' with '17125'
17123 -17124 17125 0
-17125 17124 0
-17125 -17123 0
c Var 'aux1665' direct represents '2' with '-17124'
17123 17125 -17124 0
c Encoding variable: aux1666 with domain: int(0..3) (representing constraint ((field_00004_00006=2) + aux1665))
c Both direct and order encoding.
c Var 'aux1666' order represents '0' with '17126'
c Var 'aux1666' direct represents '0' with '17126'
c Var 'aux1666' order represents '1' with '17127'
-17126 17127 0
c Var 'aux1666' direct represents '1' with '17128'
17126 -17127 17128 0
-17128 17127 0
-17128 -17126 0
c Var 'aux1666' order represents '2' with '17129'
-17127 17129 0
c Var 'aux1666' direct represents '2' with '17130'
17127 -17129 17130 0
-17130 17129 0
-17130 -17127 0
c Var 'aux1666' direct represents '3' with '-17129'
17126 17128 17130 -17129 0
c Encoding variable: aux1667 with domain: int(0..4) (representing constraint (aux1662 + aux1664))
c Both direct and order encoding.
c Var 'aux1667' order represents '0' with '17131'
c Var 'aux1667' direct represents '0' with '17131'
c Var 'aux1667' order represents '1' with '17132'
-17131 17132 0
c Var 'aux1667' direct represents '1' with '17133'
17131 -17132 17133 0
-17133 17132 0
-17133 -17131 0
c Var 'aux1667' order represents '2' with '17134'
-17132 17134 0
c Var 'aux1667' direct represents '2' with '17135'
17132 -17134 17135 0
-17135 17134 0
-17135 -17132 0
c Var 'aux1667' order represents '3' with '17136'
-17134 17136 0
c Var 'aux1667' direct represents '3' with '17137'
17134 -17136 17137 0
-17137 17136 0
-17137 -17134 0
c Var 'aux1667' direct represents '4' with '-17136'
17131 17133 17135 17137 -17136 0
c Encoding variable: aux1668 with domain: int(0..2) (representing constraint ((field_00004_00004=3) + (field_00006_00006=3)))
c Both direct and order encoding.
c Var 'aux1668' order represents '0' with '17138'
c Var 'aux1668' direct represents '0' with '17138'
c Var 'aux1668' order represents '1' with '17139'
-17138 17139 0
c Var 'aux1668' direct represents '1' with '17140'
17138 -17139 17140 0
-17140 17139 0
-17140 -17138 0
c Var 'aux1668' direct represents '2' with '-17139'
17138 17140 -17139 0
c Encoding variable: aux1669 with domain: int(0..2) (representing constraint ((field_00006_00005=3) + (field_00004_00005=3)))
c Both direct and order encoding.
c Var 'aux1669' order represents '0' with '17141'
c Var 'aux1669' direct represents '0' with '17141'
c Var 'aux1669' order represents '1' with '17142'
-17141 17142 0
c Var 'aux1669' direct represents '1' with '17143'
17141 -17142 17143 0
-17143 17142 0
-17143 -17141 0
c Var 'aux1669' direct represents '2' with '-17142'
17141 17143 -17142 0
c Encoding variable: aux1670 with domain: int(0..2) (representing constraint ((field_00006_00004=3) + (field_00005_00004=3)))
c Both direct and order encoding.
c Var 'aux1670' order represents '0' with '17144'
c Var 'aux1670' direct represents '0' with '17144'
c Var 'aux1670' order represents '1' with '17145'
-17144 17145 0
c Var 'aux1670' direct represents '1' with '17146'
17144 -17145 17146 0
-17146 17145 0
-17146 -17144 0
c Var 'aux1670' direct represents '2' with '-17145'
17144 17146 -17145 0
c Encoding variable: aux1671 with domain: int(0..2) (representing constraint ((field_00005_00006=3) + (field_00005_00005=3)))
c Both direct and order encoding.
c Var 'aux1671' order represents '0' with '17147'
c Var 'aux1671' direct represents '0' with '17147'
c Var 'aux1671' order represents '1' with '17148'
-17147 17148 0
c Var 'aux1671' direct represents '1' with '17149'
17147 -17148 17149 0
-17149 17148 0
-17149 -17147 0
c Var 'aux1671' direct represents '2' with '-17148'
17147 17149 -17148 0
c Encoding variable: aux1672 with domain: int(0..3) (representing constraint ((field_00004_00006=3) + aux1671))
c Both direct and order encoding.
c Var 'aux1672' order represents '0' with '17150'
c Var 'aux1672' direct represents '0' with '17150'
c Var 'aux1672' order represents '1' with '17151'
-17150 17151 0
c Var 'aux1672' direct represents '1' with '17152'
17150 -17151 17152 0
-17152 17151 0
-17152 -17150 0
c Var 'aux1672' order represents '2' with '17153'
-17151 17153 0
c Var 'aux1672' direct represents '2' with '17154'
17151 -17153 17154 0
-17154 17153 0
-17154 -17151 0
c Var 'aux1672' direct represents '3' with '-17153'
17150 17152 17154 -17153 0
c Encoding variable: aux1673 with domain: int(0..4) (representing constraint (aux1668 + aux1670))
c Both direct and order encoding.
c Var 'aux1673' order represents '0' with '17155'
c Var 'aux1673' direct represents '0' with '17155'
c Var 'aux1673' order represents '1' with '17156'
-17155 17156 0
c Var 'aux1673' direct represents '1' with '17157'
17155 -17156 17157 0
-17157 17156 0
-17157 -17155 0
c Var 'aux1673' order represents '2' with '17158'
-17156 17158 0
c Var 'aux1673' direct represents '2' with '17159'
17156 -17158 17159 0
-17159 17158 0
-17159 -17156 0
c Var 'aux1673' order represents '3' with '17160'
-17158 17160 0
c Var 'aux1673' direct represents '3' with '17161'
17158 -17160 17161 0
-17161 17160 0
-17161 -17158 0
c Var 'aux1673' direct represents '4' with '-17160'
17155 17157 17159 17161 -17160 0
c Encoding variable: aux1674 with domain: int(0..2) (representing constraint ((field_00004_00004=4) + (field_00006_00006=4)))
c Both direct and order encoding.
c Var 'aux1674' order represents '0' with '17162'
c Var 'aux1674' direct represents '0' with '17162'
c Var 'aux1674' order represents '1' with '17163'
-17162 17163 0
c Var 'aux1674' direct represents '1' with '17164'
17162 -17163 17164 0
-17164 17163 0
-17164 -17162 0
c Var 'aux1674' direct represents '2' with '-17163'
17162 17164 -17163 0
c Encoding variable: aux1675 with domain: int(0..2) (representing constraint ((field_00006_00005=4) + (field_00004_00005=4)))
c Both direct and order encoding.
c Var 'aux1675' order represents '0' with '17165'
c Var 'aux1675' direct represents '0' with '17165'
c Var 'aux1675' order represents '1' with '17166'
-17165 17166 0
c Var 'aux1675' direct represents '1' with '17167'
17165 -17166 17167 0
-17167 17166 0
-17167 -17165 0
c Var 'aux1675' direct represents '2' with '-17166'
17165 17167 -17166 0
c Encoding variable: aux1676 with domain: int(0..2) (representing constraint ((field_00006_00004=4) + (field_00005_00004=4)))
c Both direct and order encoding.
c Var 'aux1676' order represents '0' with '17168'
c Var 'aux1676' direct represents '0' with '17168'
c Var 'aux1676' order represents '1' with '17169'
-17168 17169 0
c Var 'aux1676' direct represents '1' with '17170'
17168 -17169 17170 0
-17170 17169 0
-17170 -17168 0
c Var 'aux1676' direct represents '2' with '-17169'
17168 17170 -17169 0
c Encoding variable: aux1677 with domain: int(0..2) (representing constraint ((field_00005_00006=4) + (field_00005_00005=4)))
c Both direct and order encoding.
c Var 'aux1677' order represents '0' with '17171'
c Var 'aux1677' direct represents '0' with '17171'
c Var 'aux1677' order represents '1' with '17172'
-17171 17172 0
c Var 'aux1677' direct represents '1' with '17173'
17171 -17172 17173 0
-17173 17172 0
-17173 -17171 0
c Var 'aux1677' direct represents '2' with '-17172'
17171 17173 -17172 0
c Encoding variable: aux1678 with domain: int(0..3) (representing constraint ((field_00004_00006=4) + aux1677))
c Both direct and order encoding.
c Var 'aux1678' order represents '0' with '17174'
c Var 'aux1678' direct represents '0' with '17174'
c Var 'aux1678' order represents '1' with '17175'
-17174 17175 0
c Var 'aux1678' direct represents '1' with '17176'
17174 -17175 17176 0
-17176 17175 0
-17176 -17174 0
c Var 'aux1678' order represents '2' with '17177'
-17175 17177 0
c Var 'aux1678' direct represents '2' with '17178'
17175 -17177 17178 0
-17178 17177 0
-17178 -17175 0
c Var 'aux1678' direct represents '3' with '-17177'
17174 17176 17178 -17177 0
c Encoding variable: aux1679 with domain: int(0..4) (representing constraint (aux1674 + aux1676))
c Both direct and order encoding.
c Var 'aux1679' order represents '0' with '17179'
c Var 'aux1679' direct represents '0' with '17179'
c Var 'aux1679' order represents '1' with '17180'
-17179 17180 0
c Var 'aux1679' direct represents '1' with '17181'
17179 -17180 17181 0
-17181 17180 0
-17181 -17179 0
c Var 'aux1679' order represents '2' with '17182'
-17180 17182 0
c Var 'aux1679' direct represents '2' with '17183'
17180 -17182 17183 0
-17183 17182 0
-17183 -17180 0
c Var 'aux1679' order represents '3' with '17184'
-17182 17184 0
c Var 'aux1679' direct represents '3' with '17185'
17182 -17184 17185 0
-17185 17184 0
-17185 -17182 0
c Var 'aux1679' direct represents '4' with '-17184'
17179 17181 17183 17185 -17184 0
c Encoding variable: aux1680 with domain: int(0..2) (representing constraint ((field_00004_00004=5) + (field_00006_00006=5)))
c Both direct and order encoding.
c Var 'aux1680' order represents '0' with '17186'
c Var 'aux1680' direct represents '0' with '17186'
c Var 'aux1680' order represents '1' with '17187'
-17186 17187 0
c Var 'aux1680' direct represents '1' with '17188'
17186 -17187 17188 0
-17188 17187 0
-17188 -17186 0
c Var 'aux1680' direct represents '2' with '-17187'
17186 17188 -17187 0
c Encoding variable: aux1681 with domain: int(0..2) (representing constraint ((field_00006_00005=5) + (field_00004_00005=5)))
c Both direct and order encoding.
c Var 'aux1681' order represents '0' with '17189'
c Var 'aux1681' direct represents '0' with '17189'
c Var 'aux1681' order represents '1' with '17190'
-17189 17190 0
c Var 'aux1681' direct represents '1' with '17191'
17189 -17190 17191 0
-17191 17190 0
-17191 -17189 0
c Var 'aux1681' direct represents '2' with '-17190'
17189 17191 -17190 0
c Encoding variable: aux1682 with domain: int(0..2) (representing constraint ((field_00006_00004=5) + (field_00005_00004=5)))
c Both direct and order encoding.
c Var 'aux1682' order represents '0' with '17192'
c Var 'aux1682' direct represents '0' with '17192'
c Var 'aux1682' order represents '1' with '17193'
-17192 17193 0
c Var 'aux1682' direct represents '1' with '17194'
17192 -17193 17194 0
-17194 17193 0
-17194 -17192 0
c Var 'aux1682' direct represents '2' with '-17193'
17192 17194 -17193 0
c Encoding variable: aux1683 with domain: int(0..2) (representing constraint ((field_00005_00006=5) + (field_00005_00005=5)))
c Both direct and order encoding.
c Var 'aux1683' order represents '0' with '17195'
c Var 'aux1683' direct represents '0' with '17195'
c Var 'aux1683' order represents '1' with '17196'
-17195 17196 0
c Var 'aux1683' direct represents '1' with '17197'
17195 -17196 17197 0
-17197 17196 0
-17197 -17195 0
c Var 'aux1683' direct represents '2' with '-17196'
17195 17197 -17196 0
c Encoding variable: aux1684 with domain: int(0..3) (representing constraint ((field_00004_00006=5) + aux1683))
c Both direct and order encoding.
c Var 'aux1684' order represents '0' with '17198'
c Var 'aux1684' direct represents '0' with '17198'
c Var 'aux1684' order represents '1' with '17199'
-17198 17199 0
c Var 'aux1684' direct represents '1' with '17200'
17198 -17199 17200 0
-17200 17199 0
-17200 -17198 0
c Var 'aux1684' order represents '2' with '17201'
-17199 17201 0
c Var 'aux1684' direct represents '2' with '17202'
17199 -17201 17202 0
-17202 17201 0
-17202 -17199 0
c Var 'aux1684' direct represents '3' with '-17201'
17198 17200 17202 -17201 0
c Encoding variable: aux1685 with domain: int(0..4) (representing constraint (aux1680 + aux1682))
c Both direct and order encoding.
c Var 'aux1685' order represents '0' with '17203'
c Var 'aux1685' direct represents '0' with '17203'
c Var 'aux1685' order represents '1' with '17204'
-17203 17204 0
c Var 'aux1685' direct represents '1' with '17205'
17203 -17204 17205 0
-17205 17204 0
-17205 -17203 0
c Var 'aux1685' order represents '2' with '17206'
-17204 17206 0
c Var 'aux1685' direct represents '2' with '17207'
17204 -17206 17207 0
-17207 17206 0
-17207 -17204 0
c Var 'aux1685' order represents '3' with '17208'
-17206 17208 0
c Var 'aux1685' direct represents '3' with '17209'
17206 -17208 17209 0
-17209 17208 0
-17209 -17206 0
c Var 'aux1685' direct represents '4' with '-17208'
17203 17205 17207 17209 -17208 0
c Encoding variable: aux1686 with domain: int(0..2) (representing constraint ((field_00004_00004=6) + (field_00006_00006=6)))
c Both direct and order encoding.
c Var 'aux1686' order represents '0' with '17210'
c Var 'aux1686' direct represents '0' with '17210'
c Var 'aux1686' order represents '1' with '17211'
-17210 17211 0
c Var 'aux1686' direct represents '1' with '17212'
17210 -17211 17212 0
-17212 17211 0
-17212 -17210 0
c Var 'aux1686' direct represents '2' with '-17211'
17210 17212 -17211 0
c Encoding variable: aux1687 with domain: int(0..2) (representing constraint ((field_00006_00005=6) + (field_00004_00005=6)))
c Both direct and order encoding.
c Var 'aux1687' order represents '0' with '17213'
c Var 'aux1687' direct represents '0' with '17213'
c Var 'aux1687' order represents '1' with '17214'
-17213 17214 0
c Var 'aux1687' direct represents '1' with '17215'
17213 -17214 17215 0
-17215 17214 0
-17215 -17213 0
c Var 'aux1687' direct represents '2' with '-17214'
17213 17215 -17214 0
c Encoding variable: aux1688 with domain: int(0..2) (representing constraint ((field_00006_00004=6) + (field_00005_00004=6)))
c Both direct and order encoding.
c Var 'aux1688' order represents '0' with '17216'
c Var 'aux1688' direct represents '0' with '17216'
c Var 'aux1688' order represents '1' with '17217'
-17216 17217 0
c Var 'aux1688' direct represents '1' with '17218'
17216 -17217 17218 0
-17218 17217 0
-17218 -17216 0
c Var 'aux1688' direct represents '2' with '-17217'
17216 17218 -17217 0
c Encoding variable: aux1689 with domain: int(0..2) (representing constraint ((field_00005_00006=6) + (field_00005_00005=6)))
c Both direct and order encoding.
c Var 'aux1689' order represents '0' with '17219'
c Var 'aux1689' direct represents '0' with '17219'
c Var 'aux1689' order represents '1' with '17220'
-17219 17220 0
c Var 'aux1689' direct represents '1' with '17221'
17219 -17220 17221 0
-17221 17220 0
-17221 -17219 0
c Var 'aux1689' direct represents '2' with '-17220'
17219 17221 -17220 0
c Encoding variable: aux1690 with domain: int(0..3) (representing constraint ((field_00004_00006=6) + aux1689))
c Both direct and order encoding.
c Var 'aux1690' order represents '0' with '17222'
c Var 'aux1690' direct represents '0' with '17222'
c Var 'aux1690' order represents '1' with '17223'
-17222 17223 0
c Var 'aux1690' direct represents '1' with '17224'
17222 -17223 17224 0
-17224 17223 0
-17224 -17222 0
c Var 'aux1690' order represents '2' with '17225'
-17223 17225 0
c Var 'aux1690' direct represents '2' with '17226'
17223 -17225 17226 0
-17226 17225 0
-17226 -17223 0
c Var 'aux1690' direct represents '3' with '-17225'
17222 17224 17226 -17225 0
c Encoding variable: aux1691 with domain: int(0..4) (representing constraint (aux1686 + aux1688))
c Both direct and order encoding.
c Var 'aux1691' order represents '0' with '17227'
c Var 'aux1691' direct represents '0' with '17227'
c Var 'aux1691' order represents '1' with '17228'
-17227 17228 0
c Var 'aux1691' direct represents '1' with '17229'
17227 -17228 17229 0
-17229 17228 0
-17229 -17227 0
c Var 'aux1691' order represents '2' with '17230'
-17228 17230 0
c Var 'aux1691' direct represents '2' with '17231'
17228 -17230 17231 0
-17231 17230 0
-17231 -17228 0
c Var 'aux1691' order represents '3' with '17232'
-17230 17232 0
c Var 'aux1691' direct represents '3' with '17233'
17230 -17232 17233 0
-17233 17232 0
-17233 -17230 0
c Var 'aux1691' direct represents '4' with '-17232'
17227 17229 17231 17233 -17232 0
c Encoding variable: aux1692 with domain: int(0..2) (representing constraint ((field_00004_00004=7) + (field_00006_00006=7)))
c Both direct and order encoding.
c Var 'aux1692' order represents '0' with '17234'
c Var 'aux1692' direct represents '0' with '17234'
c Var 'aux1692' order represents '1' with '17235'
-17234 17235 0
c Var 'aux1692' direct represents '1' with '17236'
17234 -17235 17236 0
-17236 17235 0
-17236 -17234 0
c Var 'aux1692' direct represents '2' with '-17235'
17234 17236 -17235 0
c Encoding variable: aux1693 with domain: int(0..2) (representing constraint ((field_00006_00005=7) + (field_00004_00005=7)))
c Both direct and order encoding.
c Var 'aux1693' order represents '0' with '17237'
c Var 'aux1693' direct represents '0' with '17237'
c Var 'aux1693' order represents '1' with '17238'
-17237 17238 0
c Var 'aux1693' direct represents '1' with '17239'
17237 -17238 17239 0
-17239 17238 0
-17239 -17237 0
c Var 'aux1693' direct represents '2' with '-17238'
17237 17239 -17238 0
c Encoding variable: aux1694 with domain: int(0..2) (representing constraint ((field_00006_00004=7) + (field_00005_00004=7)))
c Both direct and order encoding.
c Var 'aux1694' order represents '0' with '17240'
c Var 'aux1694' direct represents '0' with '17240'
c Var 'aux1694' order represents '1' with '17241'
-17240 17241 0
c Var 'aux1694' direct represents '1' with '17242'
17240 -17241 17242 0
-17242 17241 0
-17242 -17240 0
c Var 'aux1694' direct represents '2' with '-17241'
17240 17242 -17241 0
c Encoding variable: aux1695 with domain: int(0..2) (representing constraint ((field_00005_00006=7) + (field_00005_00005=7)))
c Both direct and order encoding.
c Var 'aux1695' order represents '0' with '17243'
c Var 'aux1695' direct represents '0' with '17243'
c Var 'aux1695' order represents '1' with '17244'
-17243 17244 0
c Var 'aux1695' direct represents '1' with '17245'
17243 -17244 17245 0
-17245 17244 0
-17245 -17243 0
c Var 'aux1695' direct represents '2' with '-17244'
17243 17245 -17244 0
c Encoding variable: aux1696 with domain: int(0..3) (representing constraint ((field_00004_00006=7) + aux1695))
c Both direct and order encoding.
c Var 'aux1696' order represents '0' with '17246'
c Var 'aux1696' direct represents '0' with '17246'
c Var 'aux1696' order represents '1' with '17247'
-17246 17247 0
c Var 'aux1696' direct represents '1' with '17248'
17246 -17247 17248 0
-17248 17247 0
-17248 -17246 0
c Var 'aux1696' order represents '2' with '17249'
-17247 17249 0
c Var 'aux1696' direct represents '2' with '17250'
17247 -17249 17250 0
-17250 17249 0
-17250 -17247 0
c Var 'aux1696' direct represents '3' with '-17249'
17246 17248 17250 -17249 0
c Encoding variable: aux1697 with domain: int(0..4) (representing constraint (aux1692 + aux1694))
c Both direct and order encoding.
c Var 'aux1697' order represents '0' with '17251'
c Var 'aux1697' direct represents '0' with '17251'
c Var 'aux1697' order represents '1' with '17252'
-17251 17252 0
c Var 'aux1697' direct represents '1' with '17253'
17251 -17252 17253 0
-17253 17252 0
-17253 -17251 0
c Var 'aux1697' order represents '2' with '17254'
-17252 17254 0
c Var 'aux1697' direct represents '2' with '17255'
17252 -17254 17255 0
-17255 17254 0
-17255 -17252 0
c Var 'aux1697' order represents '3' with '17256'
-17254 17256 0
c Var 'aux1697' direct represents '3' with '17257'
17254 -17256 17257 0
-17257 17256 0
-17257 -17254 0
c Var 'aux1697' direct represents '4' with '-17256'
17251 17253 17255 17257 -17256 0
c Encoding variable: aux1698 with domain: int(0..2) (representing constraint ((field_00004_00004=8) + (field_00006_00006=8)))
c Both direct and order encoding.
c Var 'aux1698' order represents '0' with '17258'
c Var 'aux1698' direct represents '0' with '17258'
c Var 'aux1698' order represents '1' with '17259'
-17258 17259 0
c Var 'aux1698' direct represents '1' with '17260'
17258 -17259 17260 0
-17260 17259 0
-17260 -17258 0
c Var 'aux1698' direct represents '2' with '-17259'
17258 17260 -17259 0
c Encoding variable: aux1699 with domain: int(0..2) (representing constraint ((field_00006_00005=8) + (field_00004_00005=8)))
c Both direct and order encoding.
c Var 'aux1699' order represents '0' with '17261'
c Var 'aux1699' direct represents '0' with '17261'
c Var 'aux1699' order represents '1' with '17262'
-17261 17262 0
c Var 'aux1699' direct represents '1' with '17263'
17261 -17262 17263 0
-17263 17262 0
-17263 -17261 0
c Var 'aux1699' direct represents '2' with '-17262'
17261 17263 -17262 0
c Encoding variable: aux1700 with domain: int(0..2) (representing constraint ((field_00006_00004=8) + (field_00005_00004=8)))
c Both direct and order encoding.
c Var 'aux1700' order represents '0' with '17264'
c Var 'aux1700' direct represents '0' with '17264'
c Var 'aux1700' order represents '1' with '17265'
-17264 17265 0
c Var 'aux1700' direct represents '1' with '17266'
17264 -17265 17266 0
-17266 17265 0
-17266 -17264 0
c Var 'aux1700' direct represents '2' with '-17265'
17264 17266 -17265 0
c Encoding variable: aux1701 with domain: int(0..2) (representing constraint ((field_00005_00006=8) + (field_00005_00005=8)))
c Both direct and order encoding.
c Var 'aux1701' order represents '0' with '17267'
c Var 'aux1701' direct represents '0' with '17267'
c Var 'aux1701' order represents '1' with '17268'
-17267 17268 0
c Var 'aux1701' direct represents '1' with '17269'
17267 -17268 17269 0
-17269 17268 0
-17269 -17267 0
c Var 'aux1701' direct represents '2' with '-17268'
17267 17269 -17268 0
c Encoding variable: aux1702 with domain: int(0..3) (representing constraint ((field_00004_00006=8) + aux1701))
c Both direct and order encoding.
c Var 'aux1702' order represents '0' with '17270'
c Var 'aux1702' direct represents '0' with '17270'
c Var 'aux1702' order represents '1' with '17271'
-17270 17271 0
c Var 'aux1702' direct represents '1' with '17272'
17270 -17271 17272 0
-17272 17271 0
-17272 -17270 0
c Var 'aux1702' order represents '2' with '17273'
-17271 17273 0
c Var 'aux1702' direct represents '2' with '17274'
17271 -17273 17274 0
-17274 17273 0
-17274 -17271 0
c Var 'aux1702' direct represents '3' with '-17273'
17270 17272 17274 -17273 0
c Encoding variable: aux1703 with domain: int(0..4) (representing constraint (aux1698 + aux1700))
c Both direct and order encoding.
c Var 'aux1703' order represents '0' with '17275'
c Var 'aux1703' direct represents '0' with '17275'
c Var 'aux1703' order represents '1' with '17276'
-17275 17276 0
c Var 'aux1703' direct represents '1' with '17277'
17275 -17276 17277 0
-17277 17276 0
-17277 -17275 0
c Var 'aux1703' order represents '2' with '17278'
-17276 17278 0
c Var 'aux1703' direct represents '2' with '17279'
17276 -17278 17279 0
-17279 17278 0
-17279 -17276 0
c Var 'aux1703' order represents '3' with '17280'
-17278 17280 0
c Var 'aux1703' direct represents '3' with '17281'
17278 -17280 17281 0
-17281 17280 0
-17281 -17278 0
c Var 'aux1703' direct represents '4' with '-17280'
17275 17277 17279 17281 -17280 0
c Encoding variable: aux1704 with domain: int(0..2) (representing constraint ((field_00004_00004=9) + (field_00006_00006=9)))
c Both direct and order encoding.
c Var 'aux1704' order represents '0' with '17282'
c Var 'aux1704' direct represents '0' with '17282'
c Var 'aux1704' order represents '1' with '17283'
-17282 17283 0
c Var 'aux1704' direct represents '1' with '17284'
17282 -17283 17284 0
-17284 17283 0
-17284 -17282 0
c Var 'aux1704' direct represents '2' with '-17283'
17282 17284 -17283 0
c Encoding variable: aux1705 with domain: int(0..2) (representing constraint ((field_00006_00005=9) + (field_00004_00005=9)))
c Both direct and order encoding.
c Var 'aux1705' order represents '0' with '17285'
c Var 'aux1705' direct represents '0' with '17285'
c Var 'aux1705' order represents '1' with '17286'
-17285 17286 0
c Var 'aux1705' direct represents '1' with '17287'
17285 -17286 17287 0
-17287 17286 0
-17287 -17285 0
c Var 'aux1705' direct represents '2' with '-17286'
17285 17287 -17286 0
c Encoding variable: aux1706 with domain: int(0..2) (representing constraint ((field_00006_00004=9) + (field_00005_00004=9)))
c Both direct and order encoding.
c Var 'aux1706' order represents '0' with '17288'
c Var 'aux1706' direct represents '0' with '17288'
c Var 'aux1706' order represents '1' with '17289'
-17288 17289 0
c Var 'aux1706' direct represents '1' with '17290'
17288 -17289 17290 0
-17290 17289 0
-17290 -17288 0
c Var 'aux1706' direct represents '2' with '-17289'
17288 17290 -17289 0
c Encoding variable: aux1707 with domain: int(0..2) (representing constraint ((field_00005_00006=9) + (field_00005_00005=9)))
c Both direct and order encoding.
c Var 'aux1707' order represents '0' with '17291'
c Var 'aux1707' direct represents '0' with '17291'
c Var 'aux1707' order represents '1' with '17292'
-17291 17292 0
c Var 'aux1707' direct represents '1' with '17293'
17291 -17292 17293 0
-17293 17292 0
-17293 -17291 0
c Var 'aux1707' direct represents '2' with '-17292'
17291 17293 -17292 0
c Encoding variable: aux1708 with domain: int(0..3) (representing constraint ((field_00004_00006=9) + aux1707))
c Both direct and order encoding.
c Var 'aux1708' order represents '0' with '17294'
c Var 'aux1708' direct represents '0' with '17294'
c Var 'aux1708' order represents '1' with '17295'
-17294 17295 0
c Var 'aux1708' direct represents '1' with '17296'
17294 -17295 17296 0
-17296 17295 0
-17296 -17294 0
c Var 'aux1708' order represents '2' with '17297'
-17295 17297 0
c Var 'aux1708' direct represents '2' with '17298'
17295 -17297 17298 0
-17298 17297 0
-17298 -17295 0
c Var 'aux1708' direct represents '3' with '-17297'
17294 17296 17298 -17297 0
c Encoding variable: aux1709 with domain: int(0..4) (representing constraint (aux1704 + aux1706))
c Both direct and order encoding.
c Var 'aux1709' order represents '0' with '17299'
c Var 'aux1709' direct represents '0' with '17299'
c Var 'aux1709' order represents '1' with '17300'
-17299 17300 0
c Var 'aux1709' direct represents '1' with '17301'
17299 -17300 17301 0
-17301 17300 0
-17301 -17299 0
c Var 'aux1709' order represents '2' with '17302'
-17300 17302 0
c Var 'aux1709' direct represents '2' with '17303'
17300 -17302 17303 0
-17303 17302 0
-17303 -17300 0
c Var 'aux1709' order represents '3' with '17304'
-17302 17304 0
c Var 'aux1709' direct represents '3' with '17305'
17302 -17304 17305 0
-17305 17304 0
-17305 -17302 0
c Var 'aux1709' direct represents '4' with '-17304'
17299 17301 17303 17305 -17304 0
c Encoding variable: aux1710 with domain: int(0..2) (representing constraint ((field_00004_00007=1) + (field_00006_00009=1)))
c Both direct and order encoding.
c Var 'aux1710' order represents '0' with '17306'
c Var 'aux1710' direct represents '0' with '17306'
c Var 'aux1710' order represents '1' with '17307'
-17306 17307 0
c Var 'aux1710' direct represents '1' with '17308'
17306 -17307 17308 0
-17308 17307 0
-17308 -17306 0
c Var 'aux1710' direct represents '2' with '-17307'
17306 17308 -17307 0
c Encoding variable: aux1711 with domain: int(0..2) (representing constraint ((field_00006_00008=1) + (field_00004_00008=1)))
c Both direct and order encoding.
c Var 'aux1711' order represents '0' with '17309'
c Var 'aux1711' direct represents '0' with '17309'
c Var 'aux1711' order represents '1' with '17310'
-17309 17310 0
c Var 'aux1711' direct represents '1' with '17311'
17309 -17310 17311 0
-17311 17310 0
-17311 -17309 0
c Var 'aux1711' direct represents '2' with '-17310'
17309 17311 -17310 0
c Encoding variable: aux1712 with domain: int(0..2) (representing constraint ((field_00006_00007=1) + (field_00005_00007=1)))
c Both direct and order encoding.
c Var 'aux1712' order represents '0' with '17312'
c Var 'aux1712' direct represents '0' with '17312'
c Var 'aux1712' order represents '1' with '17313'
-17312 17313 0
c Var 'aux1712' direct represents '1' with '17314'
17312 -17313 17314 0
-17314 17313 0
-17314 -17312 0
c Var 'aux1712' direct represents '2' with '-17313'
17312 17314 -17313 0
c Encoding variable: aux1713 with domain: int(0..2) (representing constraint ((field_00005_00009=1) + (field_00005_00008=1)))
c Both direct and order encoding.
c Var 'aux1713' order represents '0' with '17315'
c Var 'aux1713' direct represents '0' with '17315'
c Var 'aux1713' order represents '1' with '17316'
-17315 17316 0
c Var 'aux1713' direct represents '1' with '17317'
17315 -17316 17317 0
-17317 17316 0
-17317 -17315 0
c Var 'aux1713' direct represents '2' with '-17316'
17315 17317 -17316 0
c Encoding variable: aux1714 with domain: int(0..3) (representing constraint ((field_00004_00009=1) + aux1713))
c Both direct and order encoding.
c Var 'aux1714' order represents '0' with '17318'
c Var 'aux1714' direct represents '0' with '17318'
c Var 'aux1714' order represents '1' with '17319'
-17318 17319 0
c Var 'aux1714' direct represents '1' with '17320'
17318 -17319 17320 0
-17320 17319 0
-17320 -17318 0
c Var 'aux1714' order represents '2' with '17321'
-17319 17321 0
c Var 'aux1714' direct represents '2' with '17322'
17319 -17321 17322 0
-17322 17321 0
-17322 -17319 0
c Var 'aux1714' direct represents '3' with '-17321'
17318 17320 17322 -17321 0
c Encoding variable: aux1715 with domain: int(0..4) (representing constraint (aux1710 + aux1712))
c Both direct and order encoding.
c Var 'aux1715' order represents '0' with '17323'
c Var 'aux1715' direct represents '0' with '17323'
c Var 'aux1715' order represents '1' with '17324'
-17323 17324 0
c Var 'aux1715' direct represents '1' with '17325'
17323 -17324 17325 0
-17325 17324 0
-17325 -17323 0
c Var 'aux1715' order represents '2' with '17326'
-17324 17326 0
c Var 'aux1715' direct represents '2' with '17327'
17324 -17326 17327 0
-17327 17326 0
-17327 -17324 0
c Var 'aux1715' order represents '3' with '17328'
-17326 17328 0
c Var 'aux1715' direct represents '3' with '17329'
17326 -17328 17329 0
-17329 17328 0
-17329 -17326 0
c Var 'aux1715' direct represents '4' with '-17328'
17323 17325 17327 17329 -17328 0
c Encoding variable: aux1716 with domain: int(0..2) (representing constraint ((field_00004_00007=2) + (field_00006_00009=2)))
c Both direct and order encoding.
c Var 'aux1716' order represents '0' with '17330'
c Var 'aux1716' direct represents '0' with '17330'
c Var 'aux1716' order represents '1' with '17331'
-17330 17331 0
c Var 'aux1716' direct represents '1' with '17332'
17330 -17331 17332 0
-17332 17331 0
-17332 -17330 0
c Var 'aux1716' direct represents '2' with '-17331'
17330 17332 -17331 0
c Encoding variable: aux1717 with domain: int(0..2) (representing constraint ((field_00006_00008=2) + (field_00004_00008=2)))
c Both direct and order encoding.
c Var 'aux1717' order represents '0' with '17333'
c Var 'aux1717' direct represents '0' with '17333'
c Var 'aux1717' order represents '1' with '17334'
-17333 17334 0
c Var 'aux1717' direct represents '1' with '17335'
17333 -17334 17335 0
-17335 17334 0
-17335 -17333 0
c Var 'aux1717' direct represents '2' with '-17334'
17333 17335 -17334 0
c Encoding variable: aux1718 with domain: int(0..2) (representing constraint ((field_00006_00007=2) + (field_00005_00007=2)))
c Both direct and order encoding.
c Var 'aux1718' order represents '0' with '17336'
c Var 'aux1718' direct represents '0' with '17336'
c Var 'aux1718' order represents '1' with '17337'
-17336 17337 0
c Var 'aux1718' direct represents '1' with '17338'
17336 -17337 17338 0
-17338 17337 0
-17338 -17336 0
c Var 'aux1718' direct represents '2' with '-17337'
17336 17338 -17337 0
c Encoding variable: aux1719 with domain: int(0..2) (representing constraint ((field_00005_00009=2) + (field_00005_00008=2)))
c Both direct and order encoding.
c Var 'aux1719' order represents '0' with '17339'
c Var 'aux1719' direct represents '0' with '17339'
c Var 'aux1719' order represents '1' with '17340'
-17339 17340 0
c Var 'aux1719' direct represents '1' with '17341'
17339 -17340 17341 0
-17341 17340 0
-17341 -17339 0
c Var 'aux1719' direct represents '2' with '-17340'
17339 17341 -17340 0
c Encoding variable: aux1720 with domain: int(0..3) (representing constraint ((field_00004_00009=2) + aux1719))
c Both direct and order encoding.
c Var 'aux1720' order represents '0' with '17342'
c Var 'aux1720' direct represents '0' with '17342'
c Var 'aux1720' order represents '1' with '17343'
-17342 17343 0
c Var 'aux1720' direct represents '1' with '17344'
17342 -17343 17344 0
-17344 17343 0
-17344 -17342 0
c Var 'aux1720' order represents '2' with '17345'
-17343 17345 0
c Var 'aux1720' direct represents '2' with '17346'
17343 -17345 17346 0
-17346 17345 0
-17346 -17343 0
c Var 'aux1720' direct represents '3' with '-17345'
17342 17344 17346 -17345 0
c Encoding variable: aux1721 with domain: int(0..4) (representing constraint (aux1716 + aux1718))
c Both direct and order encoding.
c Var 'aux1721' order represents '0' with '17347'
c Var 'aux1721' direct represents '0' with '17347'
c Var 'aux1721' order represents '1' with '17348'
-17347 17348 0
c Var 'aux1721' direct represents '1' with '17349'
17347 -17348 17349 0
-17349 17348 0
-17349 -17347 0
c Var 'aux1721' order represents '2' with '17350'
-17348 17350 0
c Var 'aux1721' direct represents '2' with '17351'
17348 -17350 17351 0
-17351 17350 0
-17351 -17348 0
c Var 'aux1721' order represents '3' with '17352'
-17350 17352 0
c Var 'aux1721' direct represents '3' with '17353'
17350 -17352 17353 0
-17353 17352 0
-17353 -17350 0
c Var 'aux1721' direct represents '4' with '-17352'
17347 17349 17351 17353 -17352 0
c Encoding variable: aux1722 with domain: int(0..2) (representing constraint ((field_00004_00007=3) + (field_00006_00009=3)))
c Both direct and order encoding.
c Var 'aux1722' order represents '0' with '17354'
c Var 'aux1722' direct represents '0' with '17354'
c Var 'aux1722' order represents '1' with '17355'
-17354 17355 0
c Var 'aux1722' direct represents '1' with '17356'
17354 -17355 17356 0
-17356 17355 0
-17356 -17354 0
c Var 'aux1722' direct represents '2' with '-17355'
17354 17356 -17355 0
c Encoding variable: aux1723 with domain: int(0..2) (representing constraint ((field_00006_00008=3) + (field_00004_00008=3)))
c Both direct and order encoding.
c Var 'aux1723' order represents '0' with '17357'
c Var 'aux1723' direct represents '0' with '17357'
c Var 'aux1723' order represents '1' with '17358'
-17357 17358 0
c Var 'aux1723' direct represents '1' with '17359'
17357 -17358 17359 0
-17359 17358 0
-17359 -17357 0
c Var 'aux1723' direct represents '2' with '-17358'
17357 17359 -17358 0
c Encoding variable: aux1724 with domain: int(0..2) (representing constraint ((field_00006_00007=3) + (field_00005_00007=3)))
c Both direct and order encoding.
c Var 'aux1724' order represents '0' with '17360'
c Var 'aux1724' direct represents '0' with '17360'
c Var 'aux1724' order represents '1' with '17361'
-17360 17361 0
c Var 'aux1724' direct represents '1' with '17362'
17360 -17361 17362 0
-17362 17361 0
-17362 -17360 0
c Var 'aux1724' direct represents '2' with '-17361'
17360 17362 -17361 0
c Encoding variable: aux1725 with domain: int(0..2) (representing constraint ((field_00005_00009=3) + (field_00005_00008=3)))
c Both direct and order encoding.
c Var 'aux1725' order represents '0' with '17363'
c Var 'aux1725' direct represents '0' with '17363'
c Var 'aux1725' order represents '1' with '17364'
-17363 17364 0
c Var 'aux1725' direct represents '1' with '17365'
17363 -17364 17365 0
-17365 17364 0
-17365 -17363 0
c Var 'aux1725' direct represents '2' with '-17364'
17363 17365 -17364 0
c Encoding variable: aux1726 with domain: int(0..3) (representing constraint ((field_00004_00009=3) + aux1725))
c Both direct and order encoding.
c Var 'aux1726' order represents '0' with '17366'
c Var 'aux1726' direct represents '0' with '17366'
c Var 'aux1726' order represents '1' with '17367'
-17366 17367 0
c Var 'aux1726' direct represents '1' with '17368'
17366 -17367 17368 0
-17368 17367 0
-17368 -17366 0
c Var 'aux1726' order represents '2' with '17369'
-17367 17369 0
c Var 'aux1726' direct represents '2' with '17370'
17367 -17369 17370 0
-17370 17369 0
-17370 -17367 0
c Var 'aux1726' direct represents '3' with '-17369'
17366 17368 17370 -17369 0
c Encoding variable: aux1727 with domain: int(0..4) (representing constraint (aux1722 + aux1724))
c Both direct and order encoding.
c Var 'aux1727' order represents '0' with '17371'
c Var 'aux1727' direct represents '0' with '17371'
c Var 'aux1727' order represents '1' with '17372'
-17371 17372 0
c Var 'aux1727' direct represents '1' with '17373'
17371 -17372 17373 0
-17373 17372 0
-17373 -17371 0
c Var 'aux1727' order represents '2' with '17374'
-17372 17374 0
c Var 'aux1727' direct represents '2' with '17375'
17372 -17374 17375 0
-17375 17374 0
-17375 -17372 0
c Var 'aux1727' order represents '3' with '17376'
-17374 17376 0
c Var 'aux1727' direct represents '3' with '17377'
17374 -17376 17377 0
-17377 17376 0
-17377 -17374 0
c Var 'aux1727' direct represents '4' with '-17376'
17371 17373 17375 17377 -17376 0
c Encoding variable: aux1728 with domain: int(0..2) (representing constraint ((field_00004_00007=4) + (field_00006_00009=4)))
c Both direct and order encoding.
c Var 'aux1728' order represents '0' with '17378'
c Var 'aux1728' direct represents '0' with '17378'
c Var 'aux1728' order represents '1' with '17379'
-17378 17379 0
c Var 'aux1728' direct represents '1' with '17380'
17378 -17379 17380 0
-17380 17379 0
-17380 -17378 0
c Var 'aux1728' direct represents '2' with '-17379'
17378 17380 -17379 0
c Encoding variable: aux1729 with domain: int(0..2) (representing constraint ((field_00006_00008=4) + (field_00004_00008=4)))
c Both direct and order encoding.
c Var 'aux1729' order represents '0' with '17381'
c Var 'aux1729' direct represents '0' with '17381'
c Var 'aux1729' order represents '1' with '17382'
-17381 17382 0
c Var 'aux1729' direct represents '1' with '17383'
17381 -17382 17383 0
-17383 17382 0
-17383 -17381 0
c Var 'aux1729' direct represents '2' with '-17382'
17381 17383 -17382 0
c Encoding variable: aux1730 with domain: int(0..2) (representing constraint ((field_00006_00007=4) + (field_00005_00007=4)))
c Both direct and order encoding.
c Var 'aux1730' order represents '0' with '17384'
c Var 'aux1730' direct represents '0' with '17384'
c Var 'aux1730' order represents '1' with '17385'
-17384 17385 0
c Var 'aux1730' direct represents '1' with '17386'
17384 -17385 17386 0
-17386 17385 0
-17386 -17384 0
c Var 'aux1730' direct represents '2' with '-17385'
17384 17386 -17385 0
c Encoding variable: aux1731 with domain: int(0..2) (representing constraint ((field_00005_00009=4) + (field_00005_00008=4)))
c Both direct and order encoding.
c Var 'aux1731' order represents '0' with '17387'
c Var 'aux1731' direct represents '0' with '17387'
c Var 'aux1731' order represents '1' with '17388'
-17387 17388 0
c Var 'aux1731' direct represents '1' with '17389'
17387 -17388 17389 0
-17389 17388 0
-17389 -17387 0
c Var 'aux1731' direct represents '2' with '-17388'
17387 17389 -17388 0
c Encoding variable: aux1732 with domain: int(0..3) (representing constraint ((field_00004_00009=4) + aux1731))
c Both direct and order encoding.
c Var 'aux1732' order represents '0' with '17390'
c Var 'aux1732' direct represents '0' with '17390'
c Var 'aux1732' order represents '1' with '17391'
-17390 17391 0
c Var 'aux1732' direct represents '1' with '17392'
17390 -17391 17392 0
-17392 17391 0
-17392 -17390 0
c Var 'aux1732' order represents '2' with '17393'
-17391 17393 0
c Var 'aux1732' direct represents '2' with '17394'
17391 -17393 17394 0
-17394 17393 0
-17394 -17391 0
c Var 'aux1732' direct represents '3' with '-17393'
17390 17392 17394 -17393 0
c Encoding variable: aux1733 with domain: int(0..4) (representing constraint (aux1728 + aux1730))
c Both direct and order encoding.
c Var 'aux1733' order represents '0' with '17395'
c Var 'aux1733' direct represents '0' with '17395'
c Var 'aux1733' order represents '1' with '17396'
-17395 17396 0
c Var 'aux1733' direct represents '1' with '17397'
17395 -17396 17397 0
-17397 17396 0
-17397 -17395 0
c Var 'aux1733' order represents '2' with '17398'
-17396 17398 0
c Var 'aux1733' direct represents '2' with '17399'
17396 -17398 17399 0
-17399 17398 0
-17399 -17396 0
c Var 'aux1733' order represents '3' with '17400'
-17398 17400 0
c Var 'aux1733' direct represents '3' with '17401'
17398 -17400 17401 0
-17401 17400 0
-17401 -17398 0
c Var 'aux1733' direct represents '4' with '-17400'
17395 17397 17399 17401 -17400 0
c Encoding variable: aux1734 with domain: int(0..2) (representing constraint ((field_00004_00007=5) + (field_00006_00009=5)))
c Both direct and order encoding.
c Var 'aux1734' order represents '0' with '17402'
c Var 'aux1734' direct represents '0' with '17402'
c Var 'aux1734' order represents '1' with '17403'
-17402 17403 0
c Var 'aux1734' direct represents '1' with '17404'
17402 -17403 17404 0
-17404 17403 0
-17404 -17402 0
c Var 'aux1734' direct represents '2' with '-17403'
17402 17404 -17403 0
c Encoding variable: aux1735 with domain: int(0..2) (representing constraint ((field_00006_00008=5) + (field_00004_00008=5)))
c Both direct and order encoding.
c Var 'aux1735' order represents '0' with '17405'
c Var 'aux1735' direct represents '0' with '17405'
c Var 'aux1735' order represents '1' with '17406'
-17405 17406 0
c Var 'aux1735' direct represents '1' with '17407'
17405 -17406 17407 0
-17407 17406 0
-17407 -17405 0
c Var 'aux1735' direct represents '2' with '-17406'
17405 17407 -17406 0
c Encoding variable: aux1736 with domain: int(0..2) (representing constraint ((field_00006_00007=5) + (field_00005_00007=5)))
c Both direct and order encoding.
c Var 'aux1736' order represents '0' with '17408'
c Var 'aux1736' direct represents '0' with '17408'
c Var 'aux1736' order represents '1' with '17409'
-17408 17409 0
c Var 'aux1736' direct represents '1' with '17410'
17408 -17409 17410 0
-17410 17409 0
-17410 -17408 0
c Var 'aux1736' direct represents '2' with '-17409'
17408 17410 -17409 0
c Encoding variable: aux1737 with domain: int(0..2) (representing constraint ((field_00005_00009=5) + (field_00005_00008=5)))
c Both direct and order encoding.
c Var 'aux1737' order represents '0' with '17411'
c Var 'aux1737' direct represents '0' with '17411'
c Var 'aux1737' order represents '1' with '17412'
-17411 17412 0
c Var 'aux1737' direct represents '1' with '17413'
17411 -17412 17413 0
-17413 17412 0
-17413 -17411 0
c Var 'aux1737' direct represents '2' with '-17412'
17411 17413 -17412 0
c Encoding variable: aux1738 with domain: int(0..3) (representing constraint ((field_00004_00009=5) + aux1737))
c Both direct and order encoding.
c Var 'aux1738' order represents '0' with '17414'
c Var 'aux1738' direct represents '0' with '17414'
c Var 'aux1738' order represents '1' with '17415'
-17414 17415 0
c Var 'aux1738' direct represents '1' with '17416'
17414 -17415 17416 0
-17416 17415 0
-17416 -17414 0
c Var 'aux1738' order represents '2' with '17417'
-17415 17417 0
c Var 'aux1738' direct represents '2' with '17418'
17415 -17417 17418 0
-17418 17417 0
-17418 -17415 0
c Var 'aux1738' direct represents '3' with '-17417'
17414 17416 17418 -17417 0
c Encoding variable: aux1739 with domain: int(0..4) (representing constraint (aux1734 + aux1736))
c Both direct and order encoding.
c Var 'aux1739' order represents '0' with '17419'
c Var 'aux1739' direct represents '0' with '17419'
c Var 'aux1739' order represents '1' with '17420'
-17419 17420 0
c Var 'aux1739' direct represents '1' with '17421'
17419 -17420 17421 0
-17421 17420 0
-17421 -17419 0
c Var 'aux1739' order represents '2' with '17422'
-17420 17422 0
c Var 'aux1739' direct represents '2' with '17423'
17420 -17422 17423 0
-17423 17422 0
-17423 -17420 0
c Var 'aux1739' order represents '3' with '17424'
-17422 17424 0
c Var 'aux1739' direct represents '3' with '17425'
17422 -17424 17425 0
-17425 17424 0
-17425 -17422 0
c Var 'aux1739' direct represents '4' with '-17424'
17419 17421 17423 17425 -17424 0
c Encoding variable: aux1740 with domain: int(0..2) (representing constraint ((field_00004_00007=6) + (field_00006_00009=6)))
c Both direct and order encoding.
c Var 'aux1740' order represents '0' with '17426'
c Var 'aux1740' direct represents '0' with '17426'
c Var 'aux1740' order represents '1' with '17427'
-17426 17427 0
c Var 'aux1740' direct represents '1' with '17428'
17426 -17427 17428 0
-17428 17427 0
-17428 -17426 0
c Var 'aux1740' direct represents '2' with '-17427'
17426 17428 -17427 0
c Encoding variable: aux1741 with domain: int(0..2) (representing constraint ((field_00006_00008=6) + (field_00004_00008=6)))
c Both direct and order encoding.
c Var 'aux1741' order represents '0' with '17429'
c Var 'aux1741' direct represents '0' with '17429'
c Var 'aux1741' order represents '1' with '17430'
-17429 17430 0
c Var 'aux1741' direct represents '1' with '17431'
17429 -17430 17431 0
-17431 17430 0
-17431 -17429 0
c Var 'aux1741' direct represents '2' with '-17430'
17429 17431 -17430 0
c Encoding variable: aux1742 with domain: int(0..2) (representing constraint ((field_00006_00007=6) + (field_00005_00007=6)))
c Both direct and order encoding.
c Var 'aux1742' order represents '0' with '17432'
c Var 'aux1742' direct represents '0' with '17432'
c Var 'aux1742' order represents '1' with '17433'
-17432 17433 0
c Var 'aux1742' direct represents '1' with '17434'
17432 -17433 17434 0
-17434 17433 0
-17434 -17432 0
c Var 'aux1742' direct represents '2' with '-17433'
17432 17434 -17433 0
c Encoding variable: aux1743 with domain: int(0..2) (representing constraint ((field_00005_00009=6) + (field_00005_00008=6)))
c Both direct and order encoding.
c Var 'aux1743' order represents '0' with '17435'
c Var 'aux1743' direct represents '0' with '17435'
c Var 'aux1743' order represents '1' with '17436'
-17435 17436 0
c Var 'aux1743' direct represents '1' with '17437'
17435 -17436 17437 0
-17437 17436 0
-17437 -17435 0
c Var 'aux1743' direct represents '2' with '-17436'
17435 17437 -17436 0
c Encoding variable: aux1744 with domain: int(0..3) (representing constraint ((field_00004_00009=6) + aux1743))
c Both direct and order encoding.
c Var 'aux1744' order represents '0' with '17438'
c Var 'aux1744' direct represents '0' with '17438'
c Var 'aux1744' order represents '1' with '17439'
-17438 17439 0
c Var 'aux1744' direct represents '1' with '17440'
17438 -17439 17440 0
-17440 17439 0
-17440 -17438 0
c Var 'aux1744' order represents '2' with '17441'
-17439 17441 0
c Var 'aux1744' direct represents '2' with '17442'
17439 -17441 17442 0
-17442 17441 0
-17442 -17439 0
c Var 'aux1744' direct represents '3' with '-17441'
17438 17440 17442 -17441 0
c Encoding variable: aux1745 with domain: int(0..4) (representing constraint (aux1740 + aux1742))
c Both direct and order encoding.
c Var 'aux1745' order represents '0' with '17443'
c Var 'aux1745' direct represents '0' with '17443'
c Var 'aux1745' order represents '1' with '17444'
-17443 17444 0
c Var 'aux1745' direct represents '1' with '17445'
17443 -17444 17445 0
-17445 17444 0
-17445 -17443 0
c Var 'aux1745' order represents '2' with '17446'
-17444 17446 0
c Var 'aux1745' direct represents '2' with '17447'
17444 -17446 17447 0
-17447 17446 0
-17447 -17444 0
c Var 'aux1745' order represents '3' with '17448'
-17446 17448 0
c Var 'aux1745' direct represents '3' with '17449'
17446 -17448 17449 0
-17449 17448 0
-17449 -17446 0
c Var 'aux1745' direct represents '4' with '-17448'
17443 17445 17447 17449 -17448 0
c Encoding variable: aux1746 with domain: int(0..2) (representing constraint ((field_00004_00007=7) + (field_00006_00009=7)))
c Both direct and order encoding.
c Var 'aux1746' order represents '0' with '17450'
c Var 'aux1746' direct represents '0' with '17450'
c Var 'aux1746' order represents '1' with '17451'
-17450 17451 0
c Var 'aux1746' direct represents '1' with '17452'
17450 -17451 17452 0
-17452 17451 0
-17452 -17450 0
c Var 'aux1746' direct represents '2' with '-17451'
17450 17452 -17451 0
c Encoding variable: aux1747 with domain: int(0..2) (representing constraint ((field_00006_00008=7) + (field_00004_00008=7)))
c Both direct and order encoding.
c Var 'aux1747' order represents '0' with '17453'
c Var 'aux1747' direct represents '0' with '17453'
c Var 'aux1747' order represents '1' with '17454'
-17453 17454 0
c Var 'aux1747' direct represents '1' with '17455'
17453 -17454 17455 0
-17455 17454 0
-17455 -17453 0
c Var 'aux1747' direct represents '2' with '-17454'
17453 17455 -17454 0
c Encoding variable: aux1748 with domain: int(0..2) (representing constraint ((field_00006_00007=7) + (field_00005_00007=7)))
c Both direct and order encoding.
c Var 'aux1748' order represents '0' with '17456'
c Var 'aux1748' direct represents '0' with '17456'
c Var 'aux1748' order represents '1' with '17457'
-17456 17457 0
c Var 'aux1748' direct represents '1' with '17458'
17456 -17457 17458 0
-17458 17457 0
-17458 -17456 0
c Var 'aux1748' direct represents '2' with '-17457'
17456 17458 -17457 0
c Encoding variable: aux1749 with domain: int(0..2) (representing constraint ((field_00005_00009=7) + (field_00005_00008=7)))
c Both direct and order encoding.
c Var 'aux1749' order represents '0' with '17459'
c Var 'aux1749' direct represents '0' with '17459'
c Var 'aux1749' order represents '1' with '17460'
-17459 17460 0
c Var 'aux1749' direct represents '1' with '17461'
17459 -17460 17461 0
-17461 17460 0
-17461 -17459 0
c Var 'aux1749' direct represents '2' with '-17460'
17459 17461 -17460 0
c Encoding variable: aux1750 with domain: int(0..3) (representing constraint ((field_00004_00009=7) + aux1749))
c Both direct and order encoding.
c Var 'aux1750' order represents '0' with '17462'
c Var 'aux1750' direct represents '0' with '17462'
c Var 'aux1750' order represents '1' with '17463'
-17462 17463 0
c Var 'aux1750' direct represents '1' with '17464'
17462 -17463 17464 0
-17464 17463 0
-17464 -17462 0
c Var 'aux1750' order represents '2' with '17465'
-17463 17465 0
c Var 'aux1750' direct represents '2' with '17466'
17463 -17465 17466 0
-17466 17465 0
-17466 -17463 0
c Var 'aux1750' direct represents '3' with '-17465'
17462 17464 17466 -17465 0
c Encoding variable: aux1751 with domain: int(0..4) (representing constraint (aux1746 + aux1748))
c Both direct and order encoding.
c Var 'aux1751' order represents '0' with '17467'
c Var 'aux1751' direct represents '0' with '17467'
c Var 'aux1751' order represents '1' with '17468'
-17467 17468 0
c Var 'aux1751' direct represents '1' with '17469'
17467 -17468 17469 0
-17469 17468 0
-17469 -17467 0
c Var 'aux1751' order represents '2' with '17470'
-17468 17470 0
c Var 'aux1751' direct represents '2' with '17471'
17468 -17470 17471 0
-17471 17470 0
-17471 -17468 0
c Var 'aux1751' order represents '3' with '17472'
-17470 17472 0
c Var 'aux1751' direct represents '3' with '17473'
17470 -17472 17473 0
-17473 17472 0
-17473 -17470 0
c Var 'aux1751' direct represents '4' with '-17472'
17467 17469 17471 17473 -17472 0
c Encoding variable: aux1752 with domain: int(0..2) (representing constraint ((field_00004_00007=8) + (field_00006_00009=8)))
c Both direct and order encoding.
c Var 'aux1752' order represents '0' with '17474'
c Var 'aux1752' direct represents '0' with '17474'
c Var 'aux1752' order represents '1' with '17475'
-17474 17475 0
c Var 'aux1752' direct represents '1' with '17476'
17474 -17475 17476 0
-17476 17475 0
-17476 -17474 0
c Var 'aux1752' direct represents '2' with '-17475'
17474 17476 -17475 0
c Encoding variable: aux1753 with domain: int(0..2) (representing constraint ((field_00006_00008=8) + (field_00004_00008=8)))
c Both direct and order encoding.
c Var 'aux1753' order represents '0' with '17477'
c Var 'aux1753' direct represents '0' with '17477'
c Var 'aux1753' order represents '1' with '17478'
-17477 17478 0
c Var 'aux1753' direct represents '1' with '17479'
17477 -17478 17479 0
-17479 17478 0
-17479 -17477 0
c Var 'aux1753' direct represents '2' with '-17478'
17477 17479 -17478 0
c Encoding variable: aux1754 with domain: int(0..2) (representing constraint ((field_00006_00007=8) + (field_00005_00007=8)))
c Both direct and order encoding.
c Var 'aux1754' order represents '0' with '17480'
c Var 'aux1754' direct represents '0' with '17480'
c Var 'aux1754' order represents '1' with '17481'
-17480 17481 0
c Var 'aux1754' direct represents '1' with '17482'
17480 -17481 17482 0
-17482 17481 0
-17482 -17480 0
c Var 'aux1754' direct represents '2' with '-17481'
17480 17482 -17481 0
c Encoding variable: aux1755 with domain: int(0..2) (representing constraint ((field_00005_00009=8) + (field_00005_00008=8)))
c Both direct and order encoding.
c Var 'aux1755' order represents '0' with '17483'
c Var 'aux1755' direct represents '0' with '17483'
c Var 'aux1755' order represents '1' with '17484'
-17483 17484 0
c Var 'aux1755' direct represents '1' with '17485'
17483 -17484 17485 0
-17485 17484 0
-17485 -17483 0
c Var 'aux1755' direct represents '2' with '-17484'
17483 17485 -17484 0
c Encoding variable: aux1756 with domain: int(0..3) (representing constraint ((field_00004_00009=8) + aux1755))
c Both direct and order encoding.
c Var 'aux1756' order represents '0' with '17486'
c Var 'aux1756' direct represents '0' with '17486'
c Var 'aux1756' order represents '1' with '17487'
-17486 17487 0
c Var 'aux1756' direct represents '1' with '17488'
17486 -17487 17488 0
-17488 17487 0
-17488 -17486 0
c Var 'aux1756' order represents '2' with '17489'
-17487 17489 0
c Var 'aux1756' direct represents '2' with '17490'
17487 -17489 17490 0
-17490 17489 0
-17490 -17487 0
c Var 'aux1756' direct represents '3' with '-17489'
17486 17488 17490 -17489 0
c Encoding variable: aux1757 with domain: int(0..4) (representing constraint (aux1752 + aux1754))
c Both direct and order encoding.
c Var 'aux1757' order represents '0' with '17491'
c Var 'aux1757' direct represents '0' with '17491'
c Var 'aux1757' order represents '1' with '17492'
-17491 17492 0
c Var 'aux1757' direct represents '1' with '17493'
17491 -17492 17493 0
-17493 17492 0
-17493 -17491 0
c Var 'aux1757' order represents '2' with '17494'
-17492 17494 0
c Var 'aux1757' direct represents '2' with '17495'
17492 -17494 17495 0
-17495 17494 0
-17495 -17492 0
c Var 'aux1757' order represents '3' with '17496'
-17494 17496 0
c Var 'aux1757' direct represents '3' with '17497'
17494 -17496 17497 0
-17497 17496 0
-17497 -17494 0
c Var 'aux1757' direct represents '4' with '-17496'
17491 17493 17495 17497 -17496 0
c Encoding variable: aux1758 with domain: int(0..2) (representing constraint ((field_00004_00007=9) + (field_00006_00009=9)))
c Both direct and order encoding.
c Var 'aux1758' order represents '0' with '17498'
c Var 'aux1758' direct represents '0' with '17498'
c Var 'aux1758' order represents '1' with '17499'
-17498 17499 0
c Var 'aux1758' direct represents '1' with '17500'
17498 -17499 17500 0
-17500 17499 0
-17500 -17498 0
c Var 'aux1758' direct represents '2' with '-17499'
17498 17500 -17499 0
c Encoding variable: aux1759 with domain: int(0..2) (representing constraint ((field_00006_00008=9) + (field_00004_00008=9)))
c Both direct and order encoding.
c Var 'aux1759' order represents '0' with '17501'
c Var 'aux1759' direct represents '0' with '17501'
c Var 'aux1759' order represents '1' with '17502'
-17501 17502 0
c Var 'aux1759' direct represents '1' with '17503'
17501 -17502 17503 0
-17503 17502 0
-17503 -17501 0
c Var 'aux1759' direct represents '2' with '-17502'
17501 17503 -17502 0
c Encoding variable: aux1760 with domain: int(0..2) (representing constraint ((field_00006_00007=9) + (field_00005_00007=9)))
c Both direct and order encoding.
c Var 'aux1760' order represents '0' with '17504'
c Var 'aux1760' direct represents '0' with '17504'
c Var 'aux1760' order represents '1' with '17505'
-17504 17505 0
c Var 'aux1760' direct represents '1' with '17506'
17504 -17505 17506 0
-17506 17505 0
-17506 -17504 0
c Var 'aux1760' direct represents '2' with '-17505'
17504 17506 -17505 0
c Encoding variable: aux1761 with domain: int(0..2) (representing constraint ((field_00005_00009=9) + (field_00005_00008=9)))
c Both direct and order encoding.
c Var 'aux1761' order represents '0' with '17507'
c Var 'aux1761' direct represents '0' with '17507'
c Var 'aux1761' order represents '1' with '17508'
-17507 17508 0
c Var 'aux1761' direct represents '1' with '17509'
17507 -17508 17509 0
-17509 17508 0
-17509 -17507 0
c Var 'aux1761' direct represents '2' with '-17508'
17507 17509 -17508 0
c Encoding variable: aux1762 with domain: int(0..3) (representing constraint ((field_00004_00009=9) + aux1761))
c Both direct and order encoding.
c Var 'aux1762' order represents '0' with '17510'
c Var 'aux1762' direct represents '0' with '17510'
c Var 'aux1762' order represents '1' with '17511'
-17510 17511 0
c Var 'aux1762' direct represents '1' with '17512'
17510 -17511 17512 0
-17512 17511 0
-17512 -17510 0
c Var 'aux1762' order represents '2' with '17513'
-17511 17513 0
c Var 'aux1762' direct represents '2' with '17514'
17511 -17513 17514 0
-17514 17513 0
-17514 -17511 0
c Var 'aux1762' direct represents '3' with '-17513'
17510 17512 17514 -17513 0
c Encoding variable: aux1763 with domain: int(0..4) (representing constraint (aux1758 + aux1760))
c Both direct and order encoding.
c Var 'aux1763' order represents '0' with '17515'
c Var 'aux1763' direct represents '0' with '17515'
c Var 'aux1763' order represents '1' with '17516'
-17515 17516 0
c Var 'aux1763' direct represents '1' with '17517'
17515 -17516 17517 0
-17517 17516 0
-17517 -17515 0
c Var 'aux1763' order represents '2' with '17518'
-17516 17518 0
c Var 'aux1763' direct represents '2' with '17519'
17516 -17518 17519 0
-17519 17518 0
-17519 -17516 0
c Var 'aux1763' order represents '3' with '17520'
-17518 17520 0
c Var 'aux1763' direct represents '3' with '17521'
17518 -17520 17521 0
-17521 17520 0
-17521 -17518 0
c Var 'aux1763' direct represents '4' with '-17520'
17515 17517 17519 17521 -17520 0
c Encoding variable: aux1764 with domain: int(0..2) (representing constraint ((field_00009_00001=1) + (field_00008_00003=1)))
c Both direct and order encoding.
c Var 'aux1764' order represents '0' with '17522'
c Var 'aux1764' direct represents '0' with '17522'
c Var 'aux1764' order represents '1' with '17523'
-17522 17523 0
c Var 'aux1764' direct represents '1' with '17524'
17522 -17523 17524 0
-17524 17523 0
-17524 -17522 0
c Var 'aux1764' direct represents '2' with '-17523'
17522 17524 -17523 0
c Encoding variable: aux1765 with domain: int(0..2) (representing constraint ((field_00008_00002=1) + (field_00009_00002=1)))
c Both direct and order encoding.
c Var 'aux1765' order represents '0' with '17525'
c Var 'aux1765' direct represents '0' with '17525'
c Var 'aux1765' order represents '1' with '17526'
-17525 17526 0
c Var 'aux1765' direct represents '1' with '17527'
17525 -17526 17527 0
-17527 17526 0
-17527 -17525 0
c Var 'aux1765' direct represents '2' with '-17526'
17525 17527 -17526 0
c Encoding variable: aux1766 with domain: int(0..2) (representing constraint ((field_00008_00001=1) + (field_00007_00001=1)))
c Both direct and order encoding.
c Var 'aux1766' order represents '0' with '17528'
c Var 'aux1766' direct represents '0' with '17528'
c Var 'aux1766' order represents '1' with '17529'
-17528 17529 0
c Var 'aux1766' direct represents '1' with '17530'
17528 -17529 17530 0
-17530 17529 0
-17530 -17528 0
c Var 'aux1766' direct represents '2' with '-17529'
17528 17530 -17529 0
c Encoding variable: aux1767 with domain: int(0..2) (representing constraint ((field_00007_00003=1) + (field_00007_00002=1)))
c Both direct and order encoding.
c Var 'aux1767' order represents '0' with '17531'
c Var 'aux1767' direct represents '0' with '17531'
c Var 'aux1767' order represents '1' with '17532'
-17531 17532 0
c Var 'aux1767' direct represents '1' with '17533'
17531 -17532 17533 0
-17533 17532 0
-17533 -17531 0
c Var 'aux1767' direct represents '2' with '-17532'
17531 17533 -17532 0
c Encoding variable: aux1768 with domain: int(0..3) (representing constraint ((field_00009_00003=1) + aux1767))
c Both direct and order encoding.
c Var 'aux1768' order represents '0' with '17534'
c Var 'aux1768' direct represents '0' with '17534'
c Var 'aux1768' order represents '1' with '17535'
-17534 17535 0
c Var 'aux1768' direct represents '1' with '17536'
17534 -17535 17536 0
-17536 17535 0
-17536 -17534 0
c Var 'aux1768' order represents '2' with '17537'
-17535 17537 0
c Var 'aux1768' direct represents '2' with '17538'
17535 -17537 17538 0
-17538 17537 0
-17538 -17535 0
c Var 'aux1768' direct represents '3' with '-17537'
17534 17536 17538 -17537 0
c Encoding variable: aux1769 with domain: int(0..4) (representing constraint (aux1764 + aux1766))
c Both direct and order encoding.
c Var 'aux1769' order represents '0' with '17539'
c Var 'aux1769' direct represents '0' with '17539'
c Var 'aux1769' order represents '1' with '17540'
-17539 17540 0
c Var 'aux1769' direct represents '1' with '17541'
17539 -17540 17541 0
-17541 17540 0
-17541 -17539 0
c Var 'aux1769' order represents '2' with '17542'
-17540 17542 0
c Var 'aux1769' direct represents '2' with '17543'
17540 -17542 17543 0
-17543 17542 0
-17543 -17540 0
c Var 'aux1769' order represents '3' with '17544'
-17542 17544 0
c Var 'aux1769' direct represents '3' with '17545'
17542 -17544 17545 0
-17545 17544 0
-17545 -17542 0
c Var 'aux1769' direct represents '4' with '-17544'
17539 17541 17543 17545 -17544 0
c Encoding variable: aux1770 with domain: int(0..2) (representing constraint ((field_00009_00001=2) + (field_00008_00003=2)))
c Both direct and order encoding.
c Var 'aux1770' order represents '0' with '17546'
c Var 'aux1770' direct represents '0' with '17546'
c Var 'aux1770' order represents '1' with '17547'
-17546 17547 0
c Var 'aux1770' direct represents '1' with '17548'
17546 -17547 17548 0
-17548 17547 0
-17548 -17546 0
c Var 'aux1770' direct represents '2' with '-17547'
17546 17548 -17547 0
c Encoding variable: aux1771 with domain: int(0..2) (representing constraint ((field_00008_00002=2) + (field_00009_00002=2)))
c Both direct and order encoding.
c Var 'aux1771' order represents '0' with '17549'
c Var 'aux1771' direct represents '0' with '17549'
c Var 'aux1771' order represents '1' with '17550'
-17549 17550 0
c Var 'aux1771' direct represents '1' with '17551'
17549 -17550 17551 0
-17551 17550 0
-17551 -17549 0
c Var 'aux1771' direct represents '2' with '-17550'
17549 17551 -17550 0
c Encoding variable: aux1772 with domain: int(0..2) (representing constraint ((field_00008_00001=2) + (field_00007_00001=2)))
c Both direct and order encoding.
c Var 'aux1772' order represents '0' with '17552'
c Var 'aux1772' direct represents '0' with '17552'
c Var 'aux1772' order represents '1' with '17553'
-17552 17553 0
c Var 'aux1772' direct represents '1' with '17554'
17552 -17553 17554 0
-17554 17553 0
-17554 -17552 0
c Var 'aux1772' direct represents '2' with '-17553'
17552 17554 -17553 0
c Encoding variable: aux1773 with domain: int(0..2) (representing constraint ((field_00007_00003=2) + (field_00007_00002=2)))
c Both direct and order encoding.
c Var 'aux1773' order represents '0' with '17555'
c Var 'aux1773' direct represents '0' with '17555'
c Var 'aux1773' order represents '1' with '17556'
-17555 17556 0
c Var 'aux1773' direct represents '1' with '17557'
17555 -17556 17557 0
-17557 17556 0
-17557 -17555 0
c Var 'aux1773' direct represents '2' with '-17556'
17555 17557 -17556 0
c Encoding variable: aux1774 with domain: int(0..3) (representing constraint ((field_00009_00003=2) + aux1773))
c Both direct and order encoding.
c Var 'aux1774' order represents '0' with '17558'
c Var 'aux1774' direct represents '0' with '17558'
c Var 'aux1774' order represents '1' with '17559'
-17558 17559 0
c Var 'aux1774' direct represents '1' with '17560'
17558 -17559 17560 0
-17560 17559 0
-17560 -17558 0
c Var 'aux1774' order represents '2' with '17561'
-17559 17561 0
c Var 'aux1774' direct represents '2' with '17562'
17559 -17561 17562 0
-17562 17561 0
-17562 -17559 0
c Var 'aux1774' direct represents '3' with '-17561'
17558 17560 17562 -17561 0
c Encoding variable: aux1775 with domain: int(0..4) (representing constraint (aux1770 + aux1772))
c Both direct and order encoding.
c Var 'aux1775' order represents '0' with '17563'
c Var 'aux1775' direct represents '0' with '17563'
c Var 'aux1775' order represents '1' with '17564'
-17563 17564 0
c Var 'aux1775' direct represents '1' with '17565'
17563 -17564 17565 0
-17565 17564 0
-17565 -17563 0
c Var 'aux1775' order represents '2' with '17566'
-17564 17566 0
c Var 'aux1775' direct represents '2' with '17567'
17564 -17566 17567 0
-17567 17566 0
-17567 -17564 0
c Var 'aux1775' order represents '3' with '17568'
-17566 17568 0
c Var 'aux1775' direct represents '3' with '17569'
17566 -17568 17569 0
-17569 17568 0
-17569 -17566 0
c Var 'aux1775' direct represents '4' with '-17568'
17563 17565 17567 17569 -17568 0
c Encoding variable: aux1776 with domain: int(0..2) (representing constraint ((field_00009_00001=3) + (field_00008_00003=3)))
c Both direct and order encoding.
c Var 'aux1776' order represents '0' with '17570'
c Var 'aux1776' direct represents '0' with '17570'
c Var 'aux1776' order represents '1' with '17571'
-17570 17571 0
c Var 'aux1776' direct represents '1' with '17572'
17570 -17571 17572 0
-17572 17571 0
-17572 -17570 0
c Var 'aux1776' direct represents '2' with '-17571'
17570 17572 -17571 0
c Encoding variable: aux1777 with domain: int(0..2) (representing constraint ((field_00008_00002=3) + (field_00009_00002=3)))
c Both direct and order encoding.
c Var 'aux1777' order represents '0' with '17573'
c Var 'aux1777' direct represents '0' with '17573'
c Var 'aux1777' order represents '1' with '17574'
-17573 17574 0
c Var 'aux1777' direct represents '1' with '17575'
17573 -17574 17575 0
-17575 17574 0
-17575 -17573 0
c Var 'aux1777' direct represents '2' with '-17574'
17573 17575 -17574 0
c Encoding variable: aux1778 with domain: int(0..2) (representing constraint ((field_00008_00001=3) + (field_00007_00001=3)))
c Both direct and order encoding.
c Var 'aux1778' order represents '0' with '17576'
c Var 'aux1778' direct represents '0' with '17576'
c Var 'aux1778' order represents '1' with '17577'
-17576 17577 0
c Var 'aux1778' direct represents '1' with '17578'
17576 -17577 17578 0
-17578 17577 0
-17578 -17576 0
c Var 'aux1778' direct represents '2' with '-17577'
17576 17578 -17577 0
c Encoding variable: aux1779 with domain: int(0..2) (representing constraint ((field_00007_00003=3) + (field_00007_00002=3)))
c Both direct and order encoding.
c Var 'aux1779' order represents '0' with '17579'
c Var 'aux1779' direct represents '0' with '17579'
c Var 'aux1779' order represents '1' with '17580'
-17579 17580 0
c Var 'aux1779' direct represents '1' with '17581'
17579 -17580 17581 0
-17581 17580 0
-17581 -17579 0
c Var 'aux1779' direct represents '2' with '-17580'
17579 17581 -17580 0
c Encoding variable: aux1780 with domain: int(0..3) (representing constraint ((field_00009_00003=3) + aux1779))
c Both direct and order encoding.
c Var 'aux1780' order represents '0' with '17582'
c Var 'aux1780' direct represents '0' with '17582'
c Var 'aux1780' order represents '1' with '17583'
-17582 17583 0
c Var 'aux1780' direct represents '1' with '17584'
17582 -17583 17584 0
-17584 17583 0
-17584 -17582 0
c Var 'aux1780' order represents '2' with '17585'
-17583 17585 0
c Var 'aux1780' direct represents '2' with '17586'
17583 -17585 17586 0
-17586 17585 0
-17586 -17583 0
c Var 'aux1780' direct represents '3' with '-17585'
17582 17584 17586 -17585 0
c Encoding variable: aux1781 with domain: int(0..4) (representing constraint (aux1776 + aux1778))
c Both direct and order encoding.
c Var 'aux1781' order represents '0' with '17587'
c Var 'aux1781' direct represents '0' with '17587'
c Var 'aux1781' order represents '1' with '17588'
-17587 17588 0
c Var 'aux1781' direct represents '1' with '17589'
17587 -17588 17589 0
-17589 17588 0
-17589 -17587 0
c Var 'aux1781' order represents '2' with '17590'
-17588 17590 0
c Var 'aux1781' direct represents '2' with '17591'
17588 -17590 17591 0
-17591 17590 0
-17591 -17588 0
c Var 'aux1781' order represents '3' with '17592'
-17590 17592 0
c Var 'aux1781' direct represents '3' with '17593'
17590 -17592 17593 0
-17593 17592 0
-17593 -17590 0
c Var 'aux1781' direct represents '4' with '-17592'
17587 17589 17591 17593 -17592 0
c Encoding variable: aux1782 with domain: int(0..2) (representing constraint ((field_00009_00001=4) + (field_00008_00003=4)))
c Both direct and order encoding.
c Var 'aux1782' order represents '0' with '17594'
c Var 'aux1782' direct represents '0' with '17594'
c Var 'aux1782' order represents '1' with '17595'
-17594 17595 0
c Var 'aux1782' direct represents '1' with '17596'
17594 -17595 17596 0
-17596 17595 0
-17596 -17594 0
c Var 'aux1782' direct represents '2' with '-17595'
17594 17596 -17595 0
c Encoding variable: aux1783 with domain: int(0..2) (representing constraint ((field_00008_00002=4) + (field_00009_00002=4)))
c Both direct and order encoding.
c Var 'aux1783' order represents '0' with '17597'
c Var 'aux1783' direct represents '0' with '17597'
c Var 'aux1783' order represents '1' with '17598'
-17597 17598 0
c Var 'aux1783' direct represents '1' with '17599'
17597 -17598 17599 0
-17599 17598 0
-17599 -17597 0
c Var 'aux1783' direct represents '2' with '-17598'
17597 17599 -17598 0
c Encoding variable: aux1784 with domain: int(0..2) (representing constraint ((field_00008_00001=4) + (field_00007_00001=4)))
c Both direct and order encoding.
c Var 'aux1784' order represents '0' with '17600'
c Var 'aux1784' direct represents '0' with '17600'
c Var 'aux1784' order represents '1' with '17601'
-17600 17601 0
c Var 'aux1784' direct represents '1' with '17602'
17600 -17601 17602 0
-17602 17601 0
-17602 -17600 0
c Var 'aux1784' direct represents '2' with '-17601'
17600 17602 -17601 0
c Encoding variable: aux1785 with domain: int(0..2) (representing constraint ((field_00007_00003=4) + (field_00007_00002=4)))
c Both direct and order encoding.
c Var 'aux1785' order represents '0' with '17603'
c Var 'aux1785' direct represents '0' with '17603'
c Var 'aux1785' order represents '1' with '17604'
-17603 17604 0
c Var 'aux1785' direct represents '1' with '17605'
17603 -17604 17605 0
-17605 17604 0
-17605 -17603 0
c Var 'aux1785' direct represents '2' with '-17604'
17603 17605 -17604 0
c Encoding variable: aux1786 with domain: int(0..3) (representing constraint ((field_00009_00003=4) + aux1785))
c Both direct and order encoding.
c Var 'aux1786' order represents '0' with '17606'
c Var 'aux1786' direct represents '0' with '17606'
c Var 'aux1786' order represents '1' with '17607'
-17606 17607 0
c Var 'aux1786' direct represents '1' with '17608'
17606 -17607 17608 0
-17608 17607 0
-17608 -17606 0
c Var 'aux1786' order represents '2' with '17609'
-17607 17609 0
c Var 'aux1786' direct represents '2' with '17610'
17607 -17609 17610 0
-17610 17609 0
-17610 -17607 0
c Var 'aux1786' direct represents '3' with '-17609'
17606 17608 17610 -17609 0
c Encoding variable: aux1787 with domain: int(0..4) (representing constraint (aux1782 + aux1784))
c Both direct and order encoding.
c Var 'aux1787' order represents '0' with '17611'
c Var 'aux1787' direct represents '0' with '17611'
c Var 'aux1787' order represents '1' with '17612'
-17611 17612 0
c Var 'aux1787' direct represents '1' with '17613'
17611 -17612 17613 0
-17613 17612 0
-17613 -17611 0
c Var 'aux1787' order represents '2' with '17614'
-17612 17614 0
c Var 'aux1787' direct represents '2' with '17615'
17612 -17614 17615 0
-17615 17614 0
-17615 -17612 0
c Var 'aux1787' order represents '3' with '17616'
-17614 17616 0
c Var 'aux1787' direct represents '3' with '17617'
17614 -17616 17617 0
-17617 17616 0
-17617 -17614 0
c Var 'aux1787' direct represents '4' with '-17616'
17611 17613 17615 17617 -17616 0
c Encoding variable: aux1788 with domain: int(0..2) (representing constraint ((field_00009_00001=5) + (field_00008_00003=5)))
c Both direct and order encoding.
c Var 'aux1788' order represents '0' with '17618'
c Var 'aux1788' direct represents '0' with '17618'
c Var 'aux1788' order represents '1' with '17619'
-17618 17619 0
c Var 'aux1788' direct represents '1' with '17620'
17618 -17619 17620 0
-17620 17619 0
-17620 -17618 0
c Var 'aux1788' direct represents '2' with '-17619'
17618 17620 -17619 0
c Encoding variable: aux1789 with domain: int(0..2) (representing constraint ((field_00008_00002=5) + (field_00009_00002=5)))
c Both direct and order encoding.
c Var 'aux1789' order represents '0' with '17621'
c Var 'aux1789' direct represents '0' with '17621'
c Var 'aux1789' order represents '1' with '17622'
-17621 17622 0
c Var 'aux1789' direct represents '1' with '17623'
17621 -17622 17623 0
-17623 17622 0
-17623 -17621 0
c Var 'aux1789' direct represents '2' with '-17622'
17621 17623 -17622 0
c Encoding variable: aux1790 with domain: int(0..2) (representing constraint ((field_00008_00001=5) + (field_00007_00001=5)))
c Both direct and order encoding.
c Var 'aux1790' order represents '0' with '17624'
c Var 'aux1790' direct represents '0' with '17624'
c Var 'aux1790' order represents '1' with '17625'
-17624 17625 0
c Var 'aux1790' direct represents '1' with '17626'
17624 -17625 17626 0
-17626 17625 0
-17626 -17624 0
c Var 'aux1790' direct represents '2' with '-17625'
17624 17626 -17625 0
c Encoding variable: aux1791 with domain: int(0..2) (representing constraint ((field_00007_00003=5) + (field_00007_00002=5)))
c Both direct and order encoding.
c Var 'aux1791' order represents '0' with '17627'
c Var 'aux1791' direct represents '0' with '17627'
c Var 'aux1791' order represents '1' with '17628'
-17627 17628 0
c Var 'aux1791' direct represents '1' with '17629'
17627 -17628 17629 0
-17629 17628 0
-17629 -17627 0
c Var 'aux1791' direct represents '2' with '-17628'
17627 17629 -17628 0
c Encoding variable: aux1792 with domain: int(0..3) (representing constraint ((field_00009_00003=5) + aux1791))
c Both direct and order encoding.
c Var 'aux1792' order represents '0' with '17630'
c Var 'aux1792' direct represents '0' with '17630'
c Var 'aux1792' order represents '1' with '17631'
-17630 17631 0
c Var 'aux1792' direct represents '1' with '17632'
17630 -17631 17632 0
-17632 17631 0
-17632 -17630 0
c Var 'aux1792' order represents '2' with '17633'
-17631 17633 0
c Var 'aux1792' direct represents '2' with '17634'
17631 -17633 17634 0
-17634 17633 0
-17634 -17631 0
c Var 'aux1792' direct represents '3' with '-17633'
17630 17632 17634 -17633 0
c Encoding variable: aux1793 with domain: int(0..4) (representing constraint (aux1788 + aux1790))
c Both direct and order encoding.
c Var 'aux1793' order represents '0' with '17635'
c Var 'aux1793' direct represents '0' with '17635'
c Var 'aux1793' order represents '1' with '17636'
-17635 17636 0
c Var 'aux1793' direct represents '1' with '17637'
17635 -17636 17637 0
-17637 17636 0
-17637 -17635 0
c Var 'aux1793' order represents '2' with '17638'
-17636 17638 0
c Var 'aux1793' direct represents '2' with '17639'
17636 -17638 17639 0
-17639 17638 0
-17639 -17636 0
c Var 'aux1793' order represents '3' with '17640'
-17638 17640 0
c Var 'aux1793' direct represents '3' with '17641'
17638 -17640 17641 0
-17641 17640 0
-17641 -17638 0
c Var 'aux1793' direct represents '4' with '-17640'
17635 17637 17639 17641 -17640 0
c Encoding variable: aux1794 with domain: int(0..2) (representing constraint ((field_00009_00001=6) + (field_00008_00003=6)))
c Both direct and order encoding.
c Var 'aux1794' order represents '0' with '17642'
c Var 'aux1794' direct represents '0' with '17642'
c Var 'aux1794' order represents '1' with '17643'
-17642 17643 0
c Var 'aux1794' direct represents '1' with '17644'
17642 -17643 17644 0
-17644 17643 0
-17644 -17642 0
c Var 'aux1794' direct represents '2' with '-17643'
17642 17644 -17643 0
c Encoding variable: aux1795 with domain: int(0..2) (representing constraint ((field_00008_00002=6) + (field_00009_00002=6)))
c Both direct and order encoding.
c Var 'aux1795' order represents '0' with '17645'
c Var 'aux1795' direct represents '0' with '17645'
c Var 'aux1795' order represents '1' with '17646'
-17645 17646 0
c Var 'aux1795' direct represents '1' with '17647'
17645 -17646 17647 0
-17647 17646 0
-17647 -17645 0
c Var 'aux1795' direct represents '2' with '-17646'
17645 17647 -17646 0
c Encoding variable: aux1796 with domain: int(0..2) (representing constraint ((field_00008_00001=6) + (field_00007_00001=6)))
c Both direct and order encoding.
c Var 'aux1796' order represents '0' with '17648'
c Var 'aux1796' direct represents '0' with '17648'
c Var 'aux1796' order represents '1' with '17649'
-17648 17649 0
c Var 'aux1796' direct represents '1' with '17650'
17648 -17649 17650 0
-17650 17649 0
-17650 -17648 0
c Var 'aux1796' direct represents '2' with '-17649'
17648 17650 -17649 0
c Encoding variable: aux1797 with domain: int(0..2) (representing constraint ((field_00007_00003=6) + (field_00007_00002=6)))
c Both direct and order encoding.
c Var 'aux1797' order represents '0' with '17651'
c Var 'aux1797' direct represents '0' with '17651'
c Var 'aux1797' order represents '1' with '17652'
-17651 17652 0
c Var 'aux1797' direct represents '1' with '17653'
17651 -17652 17653 0
-17653 17652 0
-17653 -17651 0
c Var 'aux1797' direct represents '2' with '-17652'
17651 17653 -17652 0
c Encoding variable: aux1798 with domain: int(0..3) (representing constraint ((field_00009_00003=6) + aux1797))
c Both direct and order encoding.
c Var 'aux1798' order represents '0' with '17654'
c Var 'aux1798' direct represents '0' with '17654'
c Var 'aux1798' order represents '1' with '17655'
-17654 17655 0
c Var 'aux1798' direct represents '1' with '17656'
17654 -17655 17656 0
-17656 17655 0
-17656 -17654 0
c Var 'aux1798' order represents '2' with '17657'
-17655 17657 0
c Var 'aux1798' direct represents '2' with '17658'
17655 -17657 17658 0
-17658 17657 0
-17658 -17655 0
c Var 'aux1798' direct represents '3' with '-17657'
17654 17656 17658 -17657 0
c Encoding variable: aux1799 with domain: int(0..4) (representing constraint (aux1794 + aux1796))
c Both direct and order encoding.
c Var 'aux1799' order represents '0' with '17659'
c Var 'aux1799' direct represents '0' with '17659'
c Var 'aux1799' order represents '1' with '17660'
-17659 17660 0
c Var 'aux1799' direct represents '1' with '17661'
17659 -17660 17661 0
-17661 17660 0
-17661 -17659 0
c Var 'aux1799' order represents '2' with '17662'
-17660 17662 0
c Var 'aux1799' direct represents '2' with '17663'
17660 -17662 17663 0
-17663 17662 0
-17663 -17660 0
c Var 'aux1799' order represents '3' with '17664'
-17662 17664 0
c Var 'aux1799' direct represents '3' with '17665'
17662 -17664 17665 0
-17665 17664 0
-17665 -17662 0
c Var 'aux1799' direct represents '4' with '-17664'
17659 17661 17663 17665 -17664 0
c Encoding variable: aux1800 with domain: int(0..2) (representing constraint ((field_00009_00001=7) + (field_00008_00003=7)))
c Both direct and order encoding.
c Var 'aux1800' order represents '0' with '17666'
c Var 'aux1800' direct represents '0' with '17666'
c Var 'aux1800' order represents '1' with '17667'
-17666 17667 0
c Var 'aux1800' direct represents '1' with '17668'
17666 -17667 17668 0
-17668 17667 0
-17668 -17666 0
c Var 'aux1800' direct represents '2' with '-17667'
17666 17668 -17667 0
c Encoding variable: aux1801 with domain: int(0..2) (representing constraint ((field_00008_00002=7) + (field_00009_00002=7)))
c Both direct and order encoding.
c Var 'aux1801' order represents '0' with '17669'
c Var 'aux1801' direct represents '0' with '17669'
c Var 'aux1801' order represents '1' with '17670'
-17669 17670 0
c Var 'aux1801' direct represents '1' with '17671'
17669 -17670 17671 0
-17671 17670 0
-17671 -17669 0
c Var 'aux1801' direct represents '2' with '-17670'
17669 17671 -17670 0
c Encoding variable: aux1802 with domain: int(0..2) (representing constraint ((field_00008_00001=7) + (field_00007_00001=7)))
c Both direct and order encoding.
c Var 'aux1802' order represents '0' with '17672'
c Var 'aux1802' direct represents '0' with '17672'
c Var 'aux1802' order represents '1' with '17673'
-17672 17673 0
c Var 'aux1802' direct represents '1' with '17674'
17672 -17673 17674 0
-17674 17673 0
-17674 -17672 0
c Var 'aux1802' direct represents '2' with '-17673'
17672 17674 -17673 0
c Encoding variable: aux1803 with domain: int(0..2) (representing constraint ((field_00007_00003=7) + (field_00007_00002=7)))
c Both direct and order encoding.
c Var 'aux1803' order represents '0' with '17675'
c Var 'aux1803' direct represents '0' with '17675'
c Var 'aux1803' order represents '1' with '17676'
-17675 17676 0
c Var 'aux1803' direct represents '1' with '17677'
17675 -17676 17677 0
-17677 17676 0
-17677 -17675 0
c Var 'aux1803' direct represents '2' with '-17676'
17675 17677 -17676 0
c Encoding variable: aux1804 with domain: int(0..3) (representing constraint ((field_00009_00003=7) + aux1803))
c Both direct and order encoding.
c Var 'aux1804' order represents '0' with '17678'
c Var 'aux1804' direct represents '0' with '17678'
c Var 'aux1804' order represents '1' with '17679'
-17678 17679 0
c Var 'aux1804' direct represents '1' with '17680'
17678 -17679 17680 0
-17680 17679 0
-17680 -17678 0
c Var 'aux1804' order represents '2' with '17681'
-17679 17681 0
c Var 'aux1804' direct represents '2' with '17682'
17679 -17681 17682 0
-17682 17681 0
-17682 -17679 0
c Var 'aux1804' direct represents '3' with '-17681'
17678 17680 17682 -17681 0
c Encoding variable: aux1805 with domain: int(0..4) (representing constraint (aux1800 + aux1802))
c Both direct and order encoding.
c Var 'aux1805' order represents '0' with '17683'
c Var 'aux1805' direct represents '0' with '17683'
c Var 'aux1805' order represents '1' with '17684'
-17683 17684 0
c Var 'aux1805' direct represents '1' with '17685'
17683 -17684 17685 0
-17685 17684 0
-17685 -17683 0
c Var 'aux1805' order represents '2' with '17686'
-17684 17686 0
c Var 'aux1805' direct represents '2' with '17687'
17684 -17686 17687 0
-17687 17686 0
-17687 -17684 0
c Var 'aux1805' order represents '3' with '17688'
-17686 17688 0
c Var 'aux1805' direct represents '3' with '17689'
17686 -17688 17689 0
-17689 17688 0
-17689 -17686 0
c Var 'aux1805' direct represents '4' with '-17688'
17683 17685 17687 17689 -17688 0
c Encoding variable: aux1806 with domain: int(0..2) (representing constraint ((field_00009_00001=8) + (field_00008_00003=8)))
c Both direct and order encoding.
c Var 'aux1806' order represents '0' with '17690'
c Var 'aux1806' direct represents '0' with '17690'
c Var 'aux1806' order represents '1' with '17691'
-17690 17691 0
c Var 'aux1806' direct represents '1' with '17692'
17690 -17691 17692 0
-17692 17691 0
-17692 -17690 0
c Var 'aux1806' direct represents '2' with '-17691'
17690 17692 -17691 0
c Encoding variable: aux1807 with domain: int(0..2) (representing constraint ((field_00008_00002=8) + (field_00009_00002=8)))
c Both direct and order encoding.
c Var 'aux1807' order represents '0' with '17693'
c Var 'aux1807' direct represents '0' with '17693'
c Var 'aux1807' order represents '1' with '17694'
-17693 17694 0
c Var 'aux1807' direct represents '1' with '17695'
17693 -17694 17695 0
-17695 17694 0
-17695 -17693 0
c Var 'aux1807' direct represents '2' with '-17694'
17693 17695 -17694 0
c Encoding variable: aux1808 with domain: int(0..2) (representing constraint ((field_00008_00001=8) + (field_00007_00001=8)))
c Both direct and order encoding.
c Var 'aux1808' order represents '0' with '17696'
c Var 'aux1808' direct represents '0' with '17696'
c Var 'aux1808' order represents '1' with '17697'
-17696 17697 0
c Var 'aux1808' direct represents '1' with '17698'
17696 -17697 17698 0
-17698 17697 0
-17698 -17696 0
c Var 'aux1808' direct represents '2' with '-17697'
17696 17698 -17697 0
c Encoding variable: aux1809 with domain: int(0..2) (representing constraint ((field_00007_00003=8) + (field_00007_00002=8)))
c Both direct and order encoding.
c Var 'aux1809' order represents '0' with '17699'
c Var 'aux1809' direct represents '0' with '17699'
c Var 'aux1809' order represents '1' with '17700'
-17699 17700 0
c Var 'aux1809' direct represents '1' with '17701'
17699 -17700 17701 0
-17701 17700 0
-17701 -17699 0
c Var 'aux1809' direct represents '2' with '-17700'
17699 17701 -17700 0
c Encoding variable: aux1810 with domain: int(0..3) (representing constraint ((field_00009_00003=8) + aux1809))
c Both direct and order encoding.
c Var 'aux1810' order represents '0' with '17702'
c Var 'aux1810' direct represents '0' with '17702'
c Var 'aux1810' order represents '1' with '17703'
-17702 17703 0
c Var 'aux1810' direct represents '1' with '17704'
17702 -17703 17704 0
-17704 17703 0
-17704 -17702 0
c Var 'aux1810' order represents '2' with '17705'
-17703 17705 0
c Var 'aux1810' direct represents '2' with '17706'
17703 -17705 17706 0
-17706 17705 0
-17706 -17703 0
c Var 'aux1810' direct represents '3' with '-17705'
17702 17704 17706 -17705 0
c Encoding variable: aux1811 with domain: int(0..4) (representing constraint (aux1806 + aux1808))
c Both direct and order encoding.
c Var 'aux1811' order represents '0' with '17707'
c Var 'aux1811' direct represents '0' with '17707'
c Var 'aux1811' order represents '1' with '17708'
-17707 17708 0
c Var 'aux1811' direct represents '1' with '17709'
17707 -17708 17709 0
-17709 17708 0
-17709 -17707 0
c Var 'aux1811' order represents '2' with '17710'
-17708 17710 0
c Var 'aux1811' direct represents '2' with '17711'
17708 -17710 17711 0
-17711 17710 0
-17711 -17708 0
c Var 'aux1811' order represents '3' with '17712'
-17710 17712 0
c Var 'aux1811' direct represents '3' with '17713'
17710 -17712 17713 0
-17713 17712 0
-17713 -17710 0
c Var 'aux1811' direct represents '4' with '-17712'
17707 17709 17711 17713 -17712 0
c Encoding variable: aux1812 with domain: int(0..2) (representing constraint ((field_00009_00001=9) + (field_00008_00003=9)))
c Both direct and order encoding.
c Var 'aux1812' order represents '0' with '17714'
c Var 'aux1812' direct represents '0' with '17714'
c Var 'aux1812' order represents '1' with '17715'
-17714 17715 0
c Var 'aux1812' direct represents '1' with '17716'
17714 -17715 17716 0
-17716 17715 0
-17716 -17714 0
c Var 'aux1812' direct represents '2' with '-17715'
17714 17716 -17715 0
c Encoding variable: aux1813 with domain: int(0..2) (representing constraint ((field_00008_00002=9) + (field_00009_00002=9)))
c Both direct and order encoding.
c Var 'aux1813' order represents '0' with '17717'
c Var 'aux1813' direct represents '0' with '17717'
c Var 'aux1813' order represents '1' with '17718'
-17717 17718 0
c Var 'aux1813' direct represents '1' with '17719'
17717 -17718 17719 0
-17719 17718 0
-17719 -17717 0
c Var 'aux1813' direct represents '2' with '-17718'
17717 17719 -17718 0
c Encoding variable: aux1814 with domain: int(0..2) (representing constraint ((field_00008_00001=9) + (field_00007_00001=9)))
c Both direct and order encoding.
c Var 'aux1814' order represents '0' with '17720'
c Var 'aux1814' direct represents '0' with '17720'
c Var 'aux1814' order represents '1' with '17721'
-17720 17721 0
c Var 'aux1814' direct represents '1' with '17722'
17720 -17721 17722 0
-17722 17721 0
-17722 -17720 0
c Var 'aux1814' direct represents '2' with '-17721'
17720 17722 -17721 0
c Encoding variable: aux1815 with domain: int(0..2) (representing constraint ((field_00007_00003=9) + (field_00007_00002=9)))
c Both direct and order encoding.
c Var 'aux1815' order represents '0' with '17723'
c Var 'aux1815' direct represents '0' with '17723'
c Var 'aux1815' order represents '1' with '17724'
-17723 17724 0
c Var 'aux1815' direct represents '1' with '17725'
17723 -17724 17725 0
-17725 17724 0
-17725 -17723 0
c Var 'aux1815' direct represents '2' with '-17724'
17723 17725 -17724 0
c Encoding variable: aux1816 with domain: int(0..3) (representing constraint ((field_00009_00003=9) + aux1815))
c Both direct and order encoding.
c Var 'aux1816' order represents '0' with '17726'
c Var 'aux1816' direct represents '0' with '17726'
c Var 'aux1816' order represents '1' with '17727'
-17726 17727 0
c Var 'aux1816' direct represents '1' with '17728'
17726 -17727 17728 0
-17728 17727 0
-17728 -17726 0
c Var 'aux1816' order represents '2' with '17729'
-17727 17729 0
c Var 'aux1816' direct represents '2' with '17730'
17727 -17729 17730 0
-17730 17729 0
-17730 -17727 0
c Var 'aux1816' direct represents '3' with '-17729'
17726 17728 17730 -17729 0
c Encoding variable: aux1817 with domain: int(0..4) (representing constraint (aux1812 + aux1814))
c Both direct and order encoding.
c Var 'aux1817' order represents '0' with '17731'
c Var 'aux1817' direct represents '0' with '17731'
c Var 'aux1817' order represents '1' with '17732'
-17731 17732 0
c Var 'aux1817' direct represents '1' with '17733'
17731 -17732 17733 0
-17733 17732 0
-17733 -17731 0
c Var 'aux1817' order represents '2' with '17734'
-17732 17734 0
c Var 'aux1817' direct represents '2' with '17735'
17732 -17734 17735 0
-17735 17734 0
-17735 -17732 0
c Var 'aux1817' order represents '3' with '17736'
-17734 17736 0
c Var 'aux1817' direct represents '3' with '17737'
17734 -17736 17737 0
-17737 17736 0
-17737 -17734 0
c Var 'aux1817' direct represents '4' with '-17736'
17731 17733 17735 17737 -17736 0
c Encoding variable: aux1818 with domain: int(0..2) (representing constraint ((field_00009_00004=1) + (field_00008_00006=1)))
c Both direct and order encoding.
c Var 'aux1818' order represents '0' with '17738'
c Var 'aux1818' direct represents '0' with '17738'
c Var 'aux1818' order represents '1' with '17739'
-17738 17739 0
c Var 'aux1818' direct represents '1' with '17740'
17738 -17739 17740 0
-17740 17739 0
-17740 -17738 0
c Var 'aux1818' direct represents '2' with '-17739'
17738 17740 -17739 0
c Encoding variable: aux1819 with domain: int(0..2) (representing constraint ((field_00008_00005=1) + (field_00009_00005=1)))
c Both direct and order encoding.
c Var 'aux1819' order represents '0' with '17741'
c Var 'aux1819' direct represents '0' with '17741'
c Var 'aux1819' order represents '1' with '17742'
-17741 17742 0
c Var 'aux1819' direct represents '1' with '17743'
17741 -17742 17743 0
-17743 17742 0
-17743 -17741 0
c Var 'aux1819' direct represents '2' with '-17742'
17741 17743 -17742 0
c Encoding variable: aux1820 with domain: int(0..2) (representing constraint ((field_00008_00004=1) + (field_00007_00004=1)))
c Both direct and order encoding.
c Var 'aux1820' order represents '0' with '17744'
c Var 'aux1820' direct represents '0' with '17744'
c Var 'aux1820' order represents '1' with '17745'
-17744 17745 0
c Var 'aux1820' direct represents '1' with '17746'
17744 -17745 17746 0
-17746 17745 0
-17746 -17744 0
c Var 'aux1820' direct represents '2' with '-17745'
17744 17746 -17745 0
c Encoding variable: aux1821 with domain: int(0..2) (representing constraint ((field_00007_00006=1) + (field_00007_00005=1)))
c Both direct and order encoding.
c Var 'aux1821' order represents '0' with '17747'
c Var 'aux1821' direct represents '0' with '17747'
c Var 'aux1821' order represents '1' with '17748'
-17747 17748 0
c Var 'aux1821' direct represents '1' with '17749'
17747 -17748 17749 0
-17749 17748 0
-17749 -17747 0
c Var 'aux1821' direct represents '2' with '-17748'
17747 17749 -17748 0
c Encoding variable: aux1822 with domain: int(0..3) (representing constraint ((field_00009_00006=1) + aux1821))
c Both direct and order encoding.
c Var 'aux1822' order represents '0' with '17750'
c Var 'aux1822' direct represents '0' with '17750'
c Var 'aux1822' order represents '1' with '17751'
-17750 17751 0
c Var 'aux1822' direct represents '1' with '17752'
17750 -17751 17752 0
-17752 17751 0
-17752 -17750 0
c Var 'aux1822' order represents '2' with '17753'
-17751 17753 0
c Var 'aux1822' direct represents '2' with '17754'
17751 -17753 17754 0
-17754 17753 0
-17754 -17751 0
c Var 'aux1822' direct represents '3' with '-17753'
17750 17752 17754 -17753 0
c Encoding variable: aux1823 with domain: int(0..4) (representing constraint (aux1818 + aux1820))
c Both direct and order encoding.
c Var 'aux1823' order represents '0' with '17755'
c Var 'aux1823' direct represents '0' with '17755'
c Var 'aux1823' order represents '1' with '17756'
-17755 17756 0
c Var 'aux1823' direct represents '1' with '17757'
17755 -17756 17757 0
-17757 17756 0
-17757 -17755 0
c Var 'aux1823' order represents '2' with '17758'
-17756 17758 0
c Var 'aux1823' direct represents '2' with '17759'
17756 -17758 17759 0
-17759 17758 0
-17759 -17756 0
c Var 'aux1823' order represents '3' with '17760'
-17758 17760 0
c Var 'aux1823' direct represents '3' with '17761'
17758 -17760 17761 0
-17761 17760 0
-17761 -17758 0
c Var 'aux1823' direct represents '4' with '-17760'
17755 17757 17759 17761 -17760 0
c Encoding variable: aux1824 with domain: int(0..2) (representing constraint ((field_00009_00004=2) + (field_00008_00006=2)))
c Both direct and order encoding.
c Var 'aux1824' order represents '0' with '17762'
c Var 'aux1824' direct represents '0' with '17762'
c Var 'aux1824' order represents '1' with '17763'
-17762 17763 0
c Var 'aux1824' direct represents '1' with '17764'
17762 -17763 17764 0
-17764 17763 0
-17764 -17762 0
c Var 'aux1824' direct represents '2' with '-17763'
17762 17764 -17763 0
c Encoding variable: aux1825 with domain: int(0..2) (representing constraint ((field_00008_00005=2) + (field_00009_00005=2)))
c Both direct and order encoding.
c Var 'aux1825' order represents '0' with '17765'
c Var 'aux1825' direct represents '0' with '17765'
c Var 'aux1825' order represents '1' with '17766'
-17765 17766 0
c Var 'aux1825' direct represents '1' with '17767'
17765 -17766 17767 0
-17767 17766 0
-17767 -17765 0
c Var 'aux1825' direct represents '2' with '-17766'
17765 17767 -17766 0
c Encoding variable: aux1826 with domain: int(0..2) (representing constraint ((field_00008_00004=2) + (field_00007_00004=2)))
c Both direct and order encoding.
c Var 'aux1826' order represents '0' with '17768'
c Var 'aux1826' direct represents '0' with '17768'
c Var 'aux1826' order represents '1' with '17769'
-17768 17769 0
c Var 'aux1826' direct represents '1' with '17770'
17768 -17769 17770 0
-17770 17769 0
-17770 -17768 0
c Var 'aux1826' direct represents '2' with '-17769'
17768 17770 -17769 0
c Encoding variable: aux1827 with domain: int(0..2) (representing constraint ((field_00007_00006=2) + (field_00007_00005=2)))
c Both direct and order encoding.
c Var 'aux1827' order represents '0' with '17771'
c Var 'aux1827' direct represents '0' with '17771'
c Var 'aux1827' order represents '1' with '17772'
-17771 17772 0
c Var 'aux1827' direct represents '1' with '17773'
17771 -17772 17773 0
-17773 17772 0
-17773 -17771 0
c Var 'aux1827' direct represents '2' with '-17772'
17771 17773 -17772 0
c Encoding variable: aux1828 with domain: int(0..3) (representing constraint ((field_00009_00006=2) + aux1827))
c Both direct and order encoding.
c Var 'aux1828' order represents '0' with '17774'
c Var 'aux1828' direct represents '0' with '17774'
c Var 'aux1828' order represents '1' with '17775'
-17774 17775 0
c Var 'aux1828' direct represents '1' with '17776'
17774 -17775 17776 0
-17776 17775 0
-17776 -17774 0
c Var 'aux1828' order represents '2' with '17777'
-17775 17777 0
c Var 'aux1828' direct represents '2' with '17778'
17775 -17777 17778 0
-17778 17777 0
-17778 -17775 0
c Var 'aux1828' direct represents '3' with '-17777'
17774 17776 17778 -17777 0
c Encoding variable: aux1829 with domain: int(0..4) (representing constraint (aux1824 + aux1826))
c Both direct and order encoding.
c Var 'aux1829' order represents '0' with '17779'
c Var 'aux1829' direct represents '0' with '17779'
c Var 'aux1829' order represents '1' with '17780'
-17779 17780 0
c Var 'aux1829' direct represents '1' with '17781'
17779 -17780 17781 0
-17781 17780 0
-17781 -17779 0
c Var 'aux1829' order represents '2' with '17782'
-17780 17782 0
c Var 'aux1829' direct represents '2' with '17783'
17780 -17782 17783 0
-17783 17782 0
-17783 -17780 0
c Var 'aux1829' order represents '3' with '17784'
-17782 17784 0
c Var 'aux1829' direct represents '3' with '17785'
17782 -17784 17785 0
-17785 17784 0
-17785 -17782 0
c Var 'aux1829' direct represents '4' with '-17784'
17779 17781 17783 17785 -17784 0
c Encoding variable: aux1830 with domain: int(0..2) (representing constraint ((field_00009_00004=3) + (field_00008_00006=3)))
c Both direct and order encoding.
c Var 'aux1830' order represents '0' with '17786'
c Var 'aux1830' direct represents '0' with '17786'
c Var 'aux1830' order represents '1' with '17787'
-17786 17787 0
c Var 'aux1830' direct represents '1' with '17788'
17786 -17787 17788 0
-17788 17787 0
-17788 -17786 0
c Var 'aux1830' direct represents '2' with '-17787'
17786 17788 -17787 0
c Encoding variable: aux1831 with domain: int(0..2) (representing constraint ((field_00008_00005=3) + (field_00009_00005=3)))
c Both direct and order encoding.
c Var 'aux1831' order represents '0' with '17789'
c Var 'aux1831' direct represents '0' with '17789'
c Var 'aux1831' order represents '1' with '17790'
-17789 17790 0
c Var 'aux1831' direct represents '1' with '17791'
17789 -17790 17791 0
-17791 17790 0
-17791 -17789 0
c Var 'aux1831' direct represents '2' with '-17790'
17789 17791 -17790 0
c Encoding variable: aux1832 with domain: int(0..2) (representing constraint ((field_00008_00004=3) + (field_00007_00004=3)))
c Both direct and order encoding.
c Var 'aux1832' order represents '0' with '17792'
c Var 'aux1832' direct represents '0' with '17792'
c Var 'aux1832' order represents '1' with '17793'
-17792 17793 0
c Var 'aux1832' direct represents '1' with '17794'
17792 -17793 17794 0
-17794 17793 0
-17794 -17792 0
c Var 'aux1832' direct represents '2' with '-17793'
17792 17794 -17793 0
c Encoding variable: aux1833 with domain: int(0..2) (representing constraint ((field_00007_00006=3) + (field_00007_00005=3)))
c Both direct and order encoding.
c Var 'aux1833' order represents '0' with '17795'
c Var 'aux1833' direct represents '0' with '17795'
c Var 'aux1833' order represents '1' with '17796'
-17795 17796 0
c Var 'aux1833' direct represents '1' with '17797'
17795 -17796 17797 0
-17797 17796 0
-17797 -17795 0
c Var 'aux1833' direct represents '2' with '-17796'
17795 17797 -17796 0
c Encoding variable: aux1834 with domain: int(0..3) (representing constraint ((field_00009_00006=3) + aux1833))
c Both direct and order encoding.
c Var 'aux1834' order represents '0' with '17798'
c Var 'aux1834' direct represents '0' with '17798'
c Var 'aux1834' order represents '1' with '17799'
-17798 17799 0
c Var 'aux1834' direct represents '1' with '17800'
17798 -17799 17800 0
-17800 17799 0
-17800 -17798 0
c Var 'aux1834' order represents '2' with '17801'
-17799 17801 0
c Var 'aux1834' direct represents '2' with '17802'
17799 -17801 17802 0
-17802 17801 0
-17802 -17799 0
c Var 'aux1834' direct represents '3' with '-17801'
17798 17800 17802 -17801 0
c Encoding variable: aux1835 with domain: int(0..4) (representing constraint (aux1830 + aux1832))
c Both direct and order encoding.
c Var 'aux1835' order represents '0' with '17803'
c Var 'aux1835' direct represents '0' with '17803'
c Var 'aux1835' order represents '1' with '17804'
-17803 17804 0
c Var 'aux1835' direct represents '1' with '17805'
17803 -17804 17805 0
-17805 17804 0
-17805 -17803 0
c Var 'aux1835' order represents '2' with '17806'
-17804 17806 0
c Var 'aux1835' direct represents '2' with '17807'
17804 -17806 17807 0
-17807 17806 0
-17807 -17804 0
c Var 'aux1835' order represents '3' with '17808'
-17806 17808 0
c Var 'aux1835' direct represents '3' with '17809'
17806 -17808 17809 0
-17809 17808 0
-17809 -17806 0
c Var 'aux1835' direct represents '4' with '-17808'
17803 17805 17807 17809 -17808 0
c Encoding variable: aux1836 with domain: int(0..2) (representing constraint ((field_00009_00004=4) + (field_00008_00006=4)))
c Both direct and order encoding.
c Var 'aux1836' order represents '0' with '17810'
c Var 'aux1836' direct represents '0' with '17810'
c Var 'aux1836' order represents '1' with '17811'
-17810 17811 0
c Var 'aux1836' direct represents '1' with '17812'
17810 -17811 17812 0
-17812 17811 0
-17812 -17810 0
c Var 'aux1836' direct represents '2' with '-17811'
17810 17812 -17811 0
c Encoding variable: aux1837 with domain: int(0..2) (representing constraint ((field_00008_00005=4) + (field_00009_00005=4)))
c Both direct and order encoding.
c Var 'aux1837' order represents '0' with '17813'
c Var 'aux1837' direct represents '0' with '17813'
c Var 'aux1837' order represents '1' with '17814'
-17813 17814 0
c Var 'aux1837' direct represents '1' with '17815'
17813 -17814 17815 0
-17815 17814 0
-17815 -17813 0
c Var 'aux1837' direct represents '2' with '-17814'
17813 17815 -17814 0
c Encoding variable: aux1838 with domain: int(0..2) (representing constraint ((field_00008_00004=4) + (field_00007_00004=4)))
c Both direct and order encoding.
c Var 'aux1838' order represents '0' with '17816'
c Var 'aux1838' direct represents '0' with '17816'
c Var 'aux1838' order represents '1' with '17817'
-17816 17817 0
c Var 'aux1838' direct represents '1' with '17818'
17816 -17817 17818 0
-17818 17817 0
-17818 -17816 0
c Var 'aux1838' direct represents '2' with '-17817'
17816 17818 -17817 0
c Encoding variable: aux1839 with domain: int(0..2) (representing constraint ((field_00007_00006=4) + (field_00007_00005=4)))
c Both direct and order encoding.
c Var 'aux1839' order represents '0' with '17819'
c Var 'aux1839' direct represents '0' with '17819'
c Var 'aux1839' order represents '1' with '17820'
-17819 17820 0
c Var 'aux1839' direct represents '1' with '17821'
17819 -17820 17821 0
-17821 17820 0
-17821 -17819 0
c Var 'aux1839' direct represents '2' with '-17820'
17819 17821 -17820 0
c Encoding variable: aux1840 with domain: int(0..3) (representing constraint ((field_00009_00006=4) + aux1839))
c Both direct and order encoding.
c Var 'aux1840' order represents '0' with '17822'
c Var 'aux1840' direct represents '0' with '17822'
c Var 'aux1840' order represents '1' with '17823'
-17822 17823 0
c Var 'aux1840' direct represents '1' with '17824'
17822 -17823 17824 0
-17824 17823 0
-17824 -17822 0
c Var 'aux1840' order represents '2' with '17825'
-17823 17825 0
c Var 'aux1840' direct represents '2' with '17826'
17823 -17825 17826 0
-17826 17825 0
-17826 -17823 0
c Var 'aux1840' direct represents '3' with '-17825'
17822 17824 17826 -17825 0
c Encoding variable: aux1841 with domain: int(0..4) (representing constraint (aux1836 + aux1838))
c Both direct and order encoding.
c Var 'aux1841' order represents '0' with '17827'
c Var 'aux1841' direct represents '0' with '17827'
c Var 'aux1841' order represents '1' with '17828'
-17827 17828 0
c Var 'aux1841' direct represents '1' with '17829'
17827 -17828 17829 0
-17829 17828 0
-17829 -17827 0
c Var 'aux1841' order represents '2' with '17830'
-17828 17830 0
c Var 'aux1841' direct represents '2' with '17831'
17828 -17830 17831 0
-17831 17830 0
-17831 -17828 0
c Var 'aux1841' order represents '3' with '17832'
-17830 17832 0
c Var 'aux1841' direct represents '3' with '17833'
17830 -17832 17833 0
-17833 17832 0
-17833 -17830 0
c Var 'aux1841' direct represents '4' with '-17832'
17827 17829 17831 17833 -17832 0
c Encoding variable: aux1842 with domain: int(0..2) (representing constraint ((field_00009_00004=5) + (field_00008_00006=5)))
c Both direct and order encoding.
c Var 'aux1842' order represents '0' with '17834'
c Var 'aux1842' direct represents '0' with '17834'
c Var 'aux1842' order represents '1' with '17835'
-17834 17835 0
c Var 'aux1842' direct represents '1' with '17836'
17834 -17835 17836 0
-17836 17835 0
-17836 -17834 0
c Var 'aux1842' direct represents '2' with '-17835'
17834 17836 -17835 0
c Encoding variable: aux1843 with domain: int(0..2) (representing constraint ((field_00008_00005=5) + (field_00009_00005=5)))
c Both direct and order encoding.
c Var 'aux1843' order represents '0' with '17837'
c Var 'aux1843' direct represents '0' with '17837'
c Var 'aux1843' order represents '1' with '17838'
-17837 17838 0
c Var 'aux1843' direct represents '1' with '17839'
17837 -17838 17839 0
-17839 17838 0
-17839 -17837 0
c Var 'aux1843' direct represents '2' with '-17838'
17837 17839 -17838 0
c Encoding variable: aux1844 with domain: int(0..2) (representing constraint ((field_00008_00004=5) + (field_00007_00004=5)))
c Both direct and order encoding.
c Var 'aux1844' order represents '0' with '17840'
c Var 'aux1844' direct represents '0' with '17840'
c Var 'aux1844' order represents '1' with '17841'
-17840 17841 0
c Var 'aux1844' direct represents '1' with '17842'
17840 -17841 17842 0
-17842 17841 0
-17842 -17840 0
c Var 'aux1844' direct represents '2' with '-17841'
17840 17842 -17841 0
c Encoding variable: aux1845 with domain: int(0..2) (representing constraint ((field_00007_00006=5) + (field_00007_00005=5)))
c Both direct and order encoding.
c Var 'aux1845' order represents '0' with '17843'
c Var 'aux1845' direct represents '0' with '17843'
c Var 'aux1845' order represents '1' with '17844'
-17843 17844 0
c Var 'aux1845' direct represents '1' with '17845'
17843 -17844 17845 0
-17845 17844 0
-17845 -17843 0
c Var 'aux1845' direct represents '2' with '-17844'
17843 17845 -17844 0
c Encoding variable: aux1846 with domain: int(0..3) (representing constraint ((field_00009_00006=5) + aux1845))
c Both direct and order encoding.
c Var 'aux1846' order represents '0' with '17846'
c Var 'aux1846' direct represents '0' with '17846'
c Var 'aux1846' order represents '1' with '17847'
-17846 17847 0
c Var 'aux1846' direct represents '1' with '17848'
17846 -17847 17848 0
-17848 17847 0
-17848 -17846 0
c Var 'aux1846' order represents '2' with '17849'
-17847 17849 0
c Var 'aux1846' direct represents '2' with '17850'
17847 -17849 17850 0
-17850 17849 0
-17850 -17847 0
c Var 'aux1846' direct represents '3' with '-17849'
17846 17848 17850 -17849 0
c Encoding variable: aux1847 with domain: int(0..4) (representing constraint (aux1842 + aux1844))
c Both direct and order encoding.
c Var 'aux1847' order represents '0' with '17851'
c Var 'aux1847' direct represents '0' with '17851'
c Var 'aux1847' order represents '1' with '17852'
-17851 17852 0
c Var 'aux1847' direct represents '1' with '17853'
17851 -17852 17853 0
-17853 17852 0
-17853 -17851 0
c Var 'aux1847' order represents '2' with '17854'
-17852 17854 0
c Var 'aux1847' direct represents '2' with '17855'
17852 -17854 17855 0
-17855 17854 0
-17855 -17852 0
c Var 'aux1847' order represents '3' with '17856'
-17854 17856 0
c Var 'aux1847' direct represents '3' with '17857'
17854 -17856 17857 0
-17857 17856 0
-17857 -17854 0
c Var 'aux1847' direct represents '4' with '-17856'
17851 17853 17855 17857 -17856 0
c Encoding variable: aux1848 with domain: int(0..2) (representing constraint ((field_00009_00004=6) + (field_00008_00006=6)))
c Both direct and order encoding.
c Var 'aux1848' order represents '0' with '17858'
c Var 'aux1848' direct represents '0' with '17858'
c Var 'aux1848' order represents '1' with '17859'
-17858 17859 0
c Var 'aux1848' direct represents '1' with '17860'
17858 -17859 17860 0
-17860 17859 0
-17860 -17858 0
c Var 'aux1848' direct represents '2' with '-17859'
17858 17860 -17859 0
c Encoding variable: aux1849 with domain: int(0..2) (representing constraint ((field_00008_00005=6) + (field_00009_00005=6)))
c Both direct and order encoding.
c Var 'aux1849' order represents '0' with '17861'
c Var 'aux1849' direct represents '0' with '17861'
c Var 'aux1849' order represents '1' with '17862'
-17861 17862 0
c Var 'aux1849' direct represents '1' with '17863'
17861 -17862 17863 0
-17863 17862 0
-17863 -17861 0
c Var 'aux1849' direct represents '2' with '-17862'
17861 17863 -17862 0
c Encoding variable: aux1850 with domain: int(0..2) (representing constraint ((field_00008_00004=6) + (field_00007_00004=6)))
c Both direct and order encoding.
c Var 'aux1850' order represents '0' with '17864'
c Var 'aux1850' direct represents '0' with '17864'
c Var 'aux1850' order represents '1' with '17865'
-17864 17865 0
c Var 'aux1850' direct represents '1' with '17866'
17864 -17865 17866 0
-17866 17865 0
-17866 -17864 0
c Var 'aux1850' direct represents '2' with '-17865'
17864 17866 -17865 0
c Encoding variable: aux1851 with domain: int(0..2) (representing constraint ((field_00007_00006=6) + (field_00007_00005=6)))
c Both direct and order encoding.
c Var 'aux1851' order represents '0' with '17867'
c Var 'aux1851' direct represents '0' with '17867'
c Var 'aux1851' order represents '1' with '17868'
-17867 17868 0
c Var 'aux1851' direct represents '1' with '17869'
17867 -17868 17869 0
-17869 17868 0
-17869 -17867 0
c Var 'aux1851' direct represents '2' with '-17868'
17867 17869 -17868 0
c Encoding variable: aux1852 with domain: int(0..3) (representing constraint ((field_00009_00006=6) + aux1851))
c Both direct and order encoding.
c Var 'aux1852' order represents '0' with '17870'
c Var 'aux1852' direct represents '0' with '17870'
c Var 'aux1852' order represents '1' with '17871'
-17870 17871 0
c Var 'aux1852' direct represents '1' with '17872'
17870 -17871 17872 0
-17872 17871 0
-17872 -17870 0
c Var 'aux1852' order represents '2' with '17873'
-17871 17873 0
c Var 'aux1852' direct represents '2' with '17874'
17871 -17873 17874 0
-17874 17873 0
-17874 -17871 0
c Var 'aux1852' direct represents '3' with '-17873'
17870 17872 17874 -17873 0
c Encoding variable: aux1853 with domain: int(0..4) (representing constraint (aux1848 + aux1850))
c Both direct and order encoding.
c Var 'aux1853' order represents '0' with '17875'
c Var 'aux1853' direct represents '0' with '17875'
c Var 'aux1853' order represents '1' with '17876'
-17875 17876 0
c Var 'aux1853' direct represents '1' with '17877'
17875 -17876 17877 0
-17877 17876 0
-17877 -17875 0
c Var 'aux1853' order represents '2' with '17878'
-17876 17878 0
c Var 'aux1853' direct represents '2' with '17879'
17876 -17878 17879 0
-17879 17878 0
-17879 -17876 0
c Var 'aux1853' order represents '3' with '17880'
-17878 17880 0
c Var 'aux1853' direct represents '3' with '17881'
17878 -17880 17881 0
-17881 17880 0
-17881 -17878 0
c Var 'aux1853' direct represents '4' with '-17880'
17875 17877 17879 17881 -17880 0
c Encoding variable: aux1854 with domain: int(0..2) (representing constraint ((field_00009_00004=7) + (field_00008_00006=7)))
c Both direct and order encoding.
c Var 'aux1854' order represents '0' with '17882'
c Var 'aux1854' direct represents '0' with '17882'
c Var 'aux1854' order represents '1' with '17883'
-17882 17883 0
c Var 'aux1854' direct represents '1' with '17884'
17882 -17883 17884 0
-17884 17883 0
-17884 -17882 0
c Var 'aux1854' direct represents '2' with '-17883'
17882 17884 -17883 0
c Encoding variable: aux1855 with domain: int(0..2) (representing constraint ((field_00008_00005=7) + (field_00009_00005=7)))
c Both direct and order encoding.
c Var 'aux1855' order represents '0' with '17885'
c Var 'aux1855' direct represents '0' with '17885'
c Var 'aux1855' order represents '1' with '17886'
-17885 17886 0
c Var 'aux1855' direct represents '1' with '17887'
17885 -17886 17887 0
-17887 17886 0
-17887 -17885 0
c Var 'aux1855' direct represents '2' with '-17886'
17885 17887 -17886 0
c Encoding variable: aux1856 with domain: int(0..2) (representing constraint ((field_00008_00004=7) + (field_00007_00004=7)))
c Both direct and order encoding.
c Var 'aux1856' order represents '0' with '17888'
c Var 'aux1856' direct represents '0' with '17888'
c Var 'aux1856' order represents '1' with '17889'
-17888 17889 0
c Var 'aux1856' direct represents '1' with '17890'
17888 -17889 17890 0
-17890 17889 0
-17890 -17888 0
c Var 'aux1856' direct represents '2' with '-17889'
17888 17890 -17889 0
c Encoding variable: aux1857 with domain: int(0..2) (representing constraint ((field_00007_00006=7) + (field_00007_00005=7)))
c Both direct and order encoding.
c Var 'aux1857' order represents '0' with '17891'
c Var 'aux1857' direct represents '0' with '17891'
c Var 'aux1857' order represents '1' with '17892'
-17891 17892 0
c Var 'aux1857' direct represents '1' with '17893'
17891 -17892 17893 0
-17893 17892 0
-17893 -17891 0
c Var 'aux1857' direct represents '2' with '-17892'
17891 17893 -17892 0
c Encoding variable: aux1858 with domain: int(0..3) (representing constraint ((field_00009_00006=7) + aux1857))
c Both direct and order encoding.
c Var 'aux1858' order represents '0' with '17894'
c Var 'aux1858' direct represents '0' with '17894'
c Var 'aux1858' order represents '1' with '17895'
-17894 17895 0
c Var 'aux1858' direct represents '1' with '17896'
17894 -17895 17896 0
-17896 17895 0
-17896 -17894 0
c Var 'aux1858' order represents '2' with '17897'
-17895 17897 0
c Var 'aux1858' direct represents '2' with '17898'
17895 -17897 17898 0
-17898 17897 0
-17898 -17895 0
c Var 'aux1858' direct represents '3' with '-17897'
17894 17896 17898 -17897 0
c Encoding variable: aux1859 with domain: int(0..4) (representing constraint (aux1854 + aux1856))
c Both direct and order encoding.
c Var 'aux1859' order represents '0' with '17899'
c Var 'aux1859' direct represents '0' with '17899'
c Var 'aux1859' order represents '1' with '17900'
-17899 17900 0
c Var 'aux1859' direct represents '1' with '17901'
17899 -17900 17901 0
-17901 17900 0
-17901 -17899 0
c Var 'aux1859' order represents '2' with '17902'
-17900 17902 0
c Var 'aux1859' direct represents '2' with '17903'
17900 -17902 17903 0
-17903 17902 0
-17903 -17900 0
c Var 'aux1859' order represents '3' with '17904'
-17902 17904 0
c Var 'aux1859' direct represents '3' with '17905'
17902 -17904 17905 0
-17905 17904 0
-17905 -17902 0
c Var 'aux1859' direct represents '4' with '-17904'
17899 17901 17903 17905 -17904 0
c Encoding variable: aux1860 with domain: int(0..2) (representing constraint ((field_00009_00004=8) + (field_00008_00006=8)))
c Both direct and order encoding.
c Var 'aux1860' order represents '0' with '17906'
c Var 'aux1860' direct represents '0' with '17906'
c Var 'aux1860' order represents '1' with '17907'
-17906 17907 0
c Var 'aux1860' direct represents '1' with '17908'
17906 -17907 17908 0
-17908 17907 0
-17908 -17906 0
c Var 'aux1860' direct represents '2' with '-17907'
17906 17908 -17907 0
c Encoding variable: aux1861 with domain: int(0..2) (representing constraint ((field_00008_00005=8) + (field_00009_00005=8)))
c Both direct and order encoding.
c Var 'aux1861' order represents '0' with '17909'
c Var 'aux1861' direct represents '0' with '17909'
c Var 'aux1861' order represents '1' with '17910'
-17909 17910 0
c Var 'aux1861' direct represents '1' with '17911'
17909 -17910 17911 0
-17911 17910 0
-17911 -17909 0
c Var 'aux1861' direct represents '2' with '-17910'
17909 17911 -17910 0
c Encoding variable: aux1862 with domain: int(0..2) (representing constraint ((field_00008_00004=8) + (field_00007_00004=8)))
c Both direct and order encoding.
c Var 'aux1862' order represents '0' with '17912'
c Var 'aux1862' direct represents '0' with '17912'
c Var 'aux1862' order represents '1' with '17913'
-17912 17913 0
c Var 'aux1862' direct represents '1' with '17914'
17912 -17913 17914 0
-17914 17913 0
-17914 -17912 0
c Var 'aux1862' direct represents '2' with '-17913'
17912 17914 -17913 0
c Encoding variable: aux1863 with domain: int(0..2) (representing constraint ((field_00007_00006=8) + (field_00007_00005=8)))
c Both direct and order encoding.
c Var 'aux1863' order represents '0' with '17915'
c Var 'aux1863' direct represents '0' with '17915'
c Var 'aux1863' order represents '1' with '17916'
-17915 17916 0
c Var 'aux1863' direct represents '1' with '17917'
17915 -17916 17917 0
-17917 17916 0
-17917 -17915 0
c Var 'aux1863' direct represents '2' with '-17916'
17915 17917 -17916 0
c Encoding variable: aux1864 with domain: int(0..3) (representing constraint ((field_00009_00006=8) + aux1863))
c Both direct and order encoding.
c Var 'aux1864' order represents '0' with '17918'
c Var 'aux1864' direct represents '0' with '17918'
c Var 'aux1864' order represents '1' with '17919'
-17918 17919 0
c Var 'aux1864' direct represents '1' with '17920'
17918 -17919 17920 0
-17920 17919 0
-17920 -17918 0
c Var 'aux1864' order represents '2' with '17921'
-17919 17921 0
c Var 'aux1864' direct represents '2' with '17922'
17919 -17921 17922 0
-17922 17921 0
-17922 -17919 0
c Var 'aux1864' direct represents '3' with '-17921'
17918 17920 17922 -17921 0
c Encoding variable: aux1865 with domain: int(0..4) (representing constraint (aux1860 + aux1862))
c Both direct and order encoding.
c Var 'aux1865' order represents '0' with '17923'
c Var 'aux1865' direct represents '0' with '17923'
c Var 'aux1865' order represents '1' with '17924'
-17923 17924 0
c Var 'aux1865' direct represents '1' with '17925'
17923 -17924 17925 0
-17925 17924 0
-17925 -17923 0
c Var 'aux1865' order represents '2' with '17926'
-17924 17926 0
c Var 'aux1865' direct represents '2' with '17927'
17924 -17926 17927 0
-17927 17926 0
-17927 -17924 0
c Var 'aux1865' order represents '3' with '17928'
-17926 17928 0
c Var 'aux1865' direct represents '3' with '17929'
17926 -17928 17929 0
-17929 17928 0
-17929 -17926 0
c Var 'aux1865' direct represents '4' with '-17928'
17923 17925 17927 17929 -17928 0
c Encoding variable: aux1866 with domain: int(0..2) (representing constraint ((field_00009_00004=9) + (field_00008_00006=9)))
c Both direct and order encoding.
c Var 'aux1866' order represents '0' with '17930'
c Var 'aux1866' direct represents '0' with '17930'
c Var 'aux1866' order represents '1' with '17931'
-17930 17931 0
c Var 'aux1866' direct represents '1' with '17932'
17930 -17931 17932 0
-17932 17931 0
-17932 -17930 0
c Var 'aux1866' direct represents '2' with '-17931'
17930 17932 -17931 0
c Encoding variable: aux1867 with domain: int(0..2) (representing constraint ((field_00008_00005=9) + (field_00009_00005=9)))
c Both direct and order encoding.
c Var 'aux1867' order represents '0' with '17933'
c Var 'aux1867' direct represents '0' with '17933'
c Var 'aux1867' order represents '1' with '17934'
-17933 17934 0
c Var 'aux1867' direct represents '1' with '17935'
17933 -17934 17935 0
-17935 17934 0
-17935 -17933 0
c Var 'aux1867' direct represents '2' with '-17934'
17933 17935 -17934 0
c Encoding variable: aux1868 with domain: int(0..2) (representing constraint ((field_00008_00004=9) + (field_00007_00004=9)))
c Both direct and order encoding.
c Var 'aux1868' order represents '0' with '17936'
c Var 'aux1868' direct represents '0' with '17936'
c Var 'aux1868' order represents '1' with '17937'
-17936 17937 0
c Var 'aux1868' direct represents '1' with '17938'
17936 -17937 17938 0
-17938 17937 0
-17938 -17936 0
c Var 'aux1868' direct represents '2' with '-17937'
17936 17938 -17937 0
c Encoding variable: aux1869 with domain: int(0..2) (representing constraint ((field_00007_00006=9) + (field_00007_00005=9)))
c Both direct and order encoding.
c Var 'aux1869' order represents '0' with '17939'
c Var 'aux1869' direct represents '0' with '17939'
c Var 'aux1869' order represents '1' with '17940'
-17939 17940 0
c Var 'aux1869' direct represents '1' with '17941'
17939 -17940 17941 0
-17941 17940 0
-17941 -17939 0
c Var 'aux1869' direct represents '2' with '-17940'
17939 17941 -17940 0
c Encoding variable: aux1870 with domain: int(0..3) (representing constraint ((field_00009_00006=9) + aux1869))
c Both direct and order encoding.
c Var 'aux1870' order represents '0' with '17942'
c Var 'aux1870' direct represents '0' with '17942'
c Var 'aux1870' order represents '1' with '17943'
-17942 17943 0
c Var 'aux1870' direct represents '1' with '17944'
17942 -17943 17944 0
-17944 17943 0
-17944 -17942 0
c Var 'aux1870' order represents '2' with '17945'
-17943 17945 0
c Var 'aux1870' direct represents '2' with '17946'
17943 -17945 17946 0
-17946 17945 0
-17946 -17943 0
c Var 'aux1870' direct represents '3' with '-17945'
17942 17944 17946 -17945 0
c Encoding variable: aux1871 with domain: int(0..4) (representing constraint (aux1866 + aux1868))
c Both direct and order encoding.
c Var 'aux1871' order represents '0' with '17947'
c Var 'aux1871' direct represents '0' with '17947'
c Var 'aux1871' order represents '1' with '17948'
-17947 17948 0
c Var 'aux1871' direct represents '1' with '17949'
17947 -17948 17949 0
-17949 17948 0
-17949 -17947 0
c Var 'aux1871' order represents '2' with '17950'
-17948 17950 0
c Var 'aux1871' direct represents '2' with '17951'
17948 -17950 17951 0
-17951 17950 0
-17951 -17948 0
c Var 'aux1871' order represents '3' with '17952'
-17950 17952 0
c Var 'aux1871' direct represents '3' with '17953'
17950 -17952 17953 0
-17953 17952 0
-17953 -17950 0
c Var 'aux1871' direct represents '4' with '-17952'
17947 17949 17951 17953 -17952 0
c Encoding variable: aux1872 with domain: int(0..2) (representing constraint ((field_00009_00007=1) + (field_00008_00009=1)))
c Both direct and order encoding.
c Var 'aux1872' order represents '0' with '17954'
c Var 'aux1872' direct represents '0' with '17954'
c Var 'aux1872' order represents '1' with '17955'
-17954 17955 0
c Var 'aux1872' direct represents '1' with '17956'
17954 -17955 17956 0
-17956 17955 0
-17956 -17954 0
c Var 'aux1872' direct represents '2' with '-17955'
17954 17956 -17955 0
c Encoding variable: aux1873 with domain: int(0..2) (representing constraint ((field_00008_00008=1) + (field_00009_00008=1)))
c Both direct and order encoding.
c Var 'aux1873' order represents '0' with '17957'
c Var 'aux1873' direct represents '0' with '17957'
c Var 'aux1873' order represents '1' with '17958'
-17957 17958 0
c Var 'aux1873' direct represents '1' with '17959'
17957 -17958 17959 0
-17959 17958 0
-17959 -17957 0
c Var 'aux1873' direct represents '2' with '-17958'
17957 17959 -17958 0
c Encoding variable: aux1874 with domain: int(0..2) (representing constraint ((field_00008_00007=1) + (field_00007_00007=1)))
c Both direct and order encoding.
c Var 'aux1874' order represents '0' with '17960'
c Var 'aux1874' direct represents '0' with '17960'
c Var 'aux1874' order represents '1' with '17961'
-17960 17961 0
c Var 'aux1874' direct represents '1' with '17962'
17960 -17961 17962 0
-17962 17961 0
-17962 -17960 0
c Var 'aux1874' direct represents '2' with '-17961'
17960 17962 -17961 0
c Encoding variable: aux1875 with domain: int(0..2) (representing constraint ((field_00007_00009=1) + (field_00007_00008=1)))
c Both direct and order encoding.
c Var 'aux1875' order represents '0' with '17963'
c Var 'aux1875' direct represents '0' with '17963'
c Var 'aux1875' order represents '1' with '17964'
-17963 17964 0
c Var 'aux1875' direct represents '1' with '17965'
17963 -17964 17965 0
-17965 17964 0
-17965 -17963 0
c Var 'aux1875' direct represents '2' with '-17964'
17963 17965 -17964 0
c Encoding variable: aux1876 with domain: int(0..3) (representing constraint ((field_00009_00009=1) + aux1875))
c Both direct and order encoding.
c Var 'aux1876' order represents '0' with '17966'
c Var 'aux1876' direct represents '0' with '17966'
c Var 'aux1876' order represents '1' with '17967'
-17966 17967 0
c Var 'aux1876' direct represents '1' with '17968'
17966 -17967 17968 0
-17968 17967 0
-17968 -17966 0
c Var 'aux1876' order represents '2' with '17969'
-17967 17969 0
c Var 'aux1876' direct represents '2' with '17970'
17967 -17969 17970 0
-17970 17969 0
-17970 -17967 0
c Var 'aux1876' direct represents '3' with '-17969'
17966 17968 17970 -17969 0
c Encoding variable: aux1877 with domain: int(0..4) (representing constraint (aux1872 + aux1874))
c Both direct and order encoding.
c Var 'aux1877' order represents '0' with '17971'
c Var 'aux1877' direct represents '0' with '17971'
c Var 'aux1877' order represents '1' with '17972'
-17971 17972 0
c Var 'aux1877' direct represents '1' with '17973'
17971 -17972 17973 0
-17973 17972 0
-17973 -17971 0
c Var 'aux1877' order represents '2' with '17974'
-17972 17974 0
c Var 'aux1877' direct represents '2' with '17975'
17972 -17974 17975 0
-17975 17974 0
-17975 -17972 0
c Var 'aux1877' order represents '3' with '17976'
-17974 17976 0
c Var 'aux1877' direct represents '3' with '17977'
17974 -17976 17977 0
-17977 17976 0
-17977 -17974 0
c Var 'aux1877' direct represents '4' with '-17976'
17971 17973 17975 17977 -17976 0
c Encoding variable: aux1878 with domain: int(0..2) (representing constraint ((field_00009_00007=2) + (field_00008_00009=2)))
c Both direct and order encoding.
c Var 'aux1878' order represents '0' with '17978'
c Var 'aux1878' direct represents '0' with '17978'
c Var 'aux1878' order represents '1' with '17979'
-17978 17979 0
c Var 'aux1878' direct represents '1' with '17980'
17978 -17979 17980 0
-17980 17979 0
-17980 -17978 0
c Var 'aux1878' direct represents '2' with '-17979'
17978 17980 -17979 0
c Encoding variable: aux1879 with domain: int(0..2) (representing constraint ((field_00008_00008=2) + (field_00009_00008=2)))
c Both direct and order encoding.
c Var 'aux1879' order represents '0' with '17981'
c Var 'aux1879' direct represents '0' with '17981'
c Var 'aux1879' order represents '1' with '17982'
-17981 17982 0
c Var 'aux1879' direct represents '1' with '17983'
17981 -17982 17983 0
-17983 17982 0
-17983 -17981 0
c Var 'aux1879' direct represents '2' with '-17982'
17981 17983 -17982 0
c Encoding variable: aux1880 with domain: int(0..2) (representing constraint ((field_00008_00007=2) + (field_00007_00007=2)))
c Both direct and order encoding.
c Var 'aux1880' order represents '0' with '17984'
c Var 'aux1880' direct represents '0' with '17984'
c Var 'aux1880' order represents '1' with '17985'
-17984 17985 0
c Var 'aux1880' direct represents '1' with '17986'
17984 -17985 17986 0
-17986 17985 0
-17986 -17984 0
c Var 'aux1880' direct represents '2' with '-17985'
17984 17986 -17985 0
c Encoding variable: aux1881 with domain: int(0..2) (representing constraint ((field_00007_00009=2) + (field_00007_00008=2)))
c Both direct and order encoding.
c Var 'aux1881' order represents '0' with '17987'
c Var 'aux1881' direct represents '0' with '17987'
c Var 'aux1881' order represents '1' with '17988'
-17987 17988 0
c Var 'aux1881' direct represents '1' with '17989'
17987 -17988 17989 0
-17989 17988 0
-17989 -17987 0
c Var 'aux1881' direct represents '2' with '-17988'
17987 17989 -17988 0
c Encoding variable: aux1882 with domain: int(0..3) (representing constraint ((field_00009_00009=2) + aux1881))
c Both direct and order encoding.
c Var 'aux1882' order represents '0' with '17990'
c Var 'aux1882' direct represents '0' with '17990'
c Var 'aux1882' order represents '1' with '17991'
-17990 17991 0
c Var 'aux1882' direct represents '1' with '17992'
17990 -17991 17992 0
-17992 17991 0
-17992 -17990 0
c Var 'aux1882' order represents '2' with '17993'
-17991 17993 0
c Var 'aux1882' direct represents '2' with '17994'
17991 -17993 17994 0
-17994 17993 0
-17994 -17991 0
c Var 'aux1882' direct represents '3' with '-17993'
17990 17992 17994 -17993 0
c Encoding variable: aux1883 with domain: int(0..4) (representing constraint (aux1878 + aux1880))
c Both direct and order encoding.
c Var 'aux1883' order represents '0' with '17995'
c Var 'aux1883' direct represents '0' with '17995'
c Var 'aux1883' order represents '1' with '17996'
-17995 17996 0
c Var 'aux1883' direct represents '1' with '17997'
17995 -17996 17997 0
-17997 17996 0
-17997 -17995 0
c Var 'aux1883' order represents '2' with '17998'
-17996 17998 0
c Var 'aux1883' direct represents '2' with '17999'
17996 -17998 17999 0
-17999 17998 0
-17999 -17996 0
c Var 'aux1883' order represents '3' with '18000'
-17998 18000 0
c Var 'aux1883' direct represents '3' with '18001'
17998 -18000 18001 0
-18001 18000 0
-18001 -17998 0
c Var 'aux1883' direct represents '4' with '-18000'
17995 17997 17999 18001 -18000 0
c Encoding variable: aux1884 with domain: int(0..2) (representing constraint ((field_00009_00007=3) + (field_00008_00009=3)))
c Both direct and order encoding.
c Var 'aux1884' order represents '0' with '18002'
c Var 'aux1884' direct represents '0' with '18002'
c Var 'aux1884' order represents '1' with '18003'
-18002 18003 0
c Var 'aux1884' direct represents '1' with '18004'
18002 -18003 18004 0
-18004 18003 0
-18004 -18002 0
c Var 'aux1884' direct represents '2' with '-18003'
18002 18004 -18003 0
c Encoding variable: aux1885 with domain: int(0..2) (representing constraint ((field_00008_00008=3) + (field_00009_00008=3)))
c Both direct and order encoding.
c Var 'aux1885' order represents '0' with '18005'
c Var 'aux1885' direct represents '0' with '18005'
c Var 'aux1885' order represents '1' with '18006'
-18005 18006 0
c Var 'aux1885' direct represents '1' with '18007'
18005 -18006 18007 0
-18007 18006 0
-18007 -18005 0
c Var 'aux1885' direct represents '2' with '-18006'
18005 18007 -18006 0
c Encoding variable: aux1886 with domain: int(0..2) (representing constraint ((field_00008_00007=3) + (field_00007_00007=3)))
c Both direct and order encoding.
c Var 'aux1886' order represents '0' with '18008'
c Var 'aux1886' direct represents '0' with '18008'
c Var 'aux1886' order represents '1' with '18009'
-18008 18009 0
c Var 'aux1886' direct represents '1' with '18010'
18008 -18009 18010 0
-18010 18009 0
-18010 -18008 0
c Var 'aux1886' direct represents '2' with '-18009'
18008 18010 -18009 0
c Encoding variable: aux1887 with domain: int(0..2) (representing constraint ((field_00007_00009=3) + (field_00007_00008=3)))
c Both direct and order encoding.
c Var 'aux1887' order represents '0' with '18011'
c Var 'aux1887' direct represents '0' with '18011'
c Var 'aux1887' order represents '1' with '18012'
-18011 18012 0
c Var 'aux1887' direct represents '1' with '18013'
18011 -18012 18013 0
-18013 18012 0
-18013 -18011 0
c Var 'aux1887' direct represents '2' with '-18012'
18011 18013 -18012 0
c Encoding variable: aux1888 with domain: int(0..3) (representing constraint ((field_00009_00009=3) + aux1887))
c Both direct and order encoding.
c Var 'aux1888' order represents '0' with '18014'
c Var 'aux1888' direct represents '0' with '18014'
c Var 'aux1888' order represents '1' with '18015'
-18014 18015 0
c Var 'aux1888' direct represents '1' with '18016'
18014 -18015 18016 0
-18016 18015 0
-18016 -18014 0
c Var 'aux1888' order represents '2' with '18017'
-18015 18017 0
c Var 'aux1888' direct represents '2' with '18018'
18015 -18017 18018 0
-18018 18017 0
-18018 -18015 0
c Var 'aux1888' direct represents '3' with '-18017'
18014 18016 18018 -18017 0
c Encoding variable: aux1889 with domain: int(0..4) (representing constraint (aux1884 + aux1886))
c Both direct and order encoding.
c Var 'aux1889' order represents '0' with '18019'
c Var 'aux1889' direct represents '0' with '18019'
c Var 'aux1889' order represents '1' with '18020'
-18019 18020 0
c Var 'aux1889' direct represents '1' with '18021'
18019 -18020 18021 0
-18021 18020 0
-18021 -18019 0
c Var 'aux1889' order represents '2' with '18022'
-18020 18022 0
c Var 'aux1889' direct represents '2' with '18023'
18020 -18022 18023 0
-18023 18022 0
-18023 -18020 0
c Var 'aux1889' order represents '3' with '18024'
-18022 18024 0
c Var 'aux1889' direct represents '3' with '18025'
18022 -18024 18025 0
-18025 18024 0
-18025 -18022 0
c Var 'aux1889' direct represents '4' with '-18024'
18019 18021 18023 18025 -18024 0
c Encoding variable: aux1890 with domain: int(0..2) (representing constraint ((field_00009_00007=4) + (field_00008_00009=4)))
c Both direct and order encoding.
c Var 'aux1890' order represents '0' with '18026'
c Var 'aux1890' direct represents '0' with '18026'
c Var 'aux1890' order represents '1' with '18027'
-18026 18027 0
c Var 'aux1890' direct represents '1' with '18028'
18026 -18027 18028 0
-18028 18027 0
-18028 -18026 0
c Var 'aux1890' direct represents '2' with '-18027'
18026 18028 -18027 0
c Encoding variable: aux1891 with domain: int(0..2) (representing constraint ((field_00008_00008=4) + (field_00009_00008=4)))
c Both direct and order encoding.
c Var 'aux1891' order represents '0' with '18029'
c Var 'aux1891' direct represents '0' with '18029'
c Var 'aux1891' order represents '1' with '18030'
-18029 18030 0
c Var 'aux1891' direct represents '1' with '18031'
18029 -18030 18031 0
-18031 18030 0
-18031 -18029 0
c Var 'aux1891' direct represents '2' with '-18030'
18029 18031 -18030 0
c Encoding variable: aux1892 with domain: int(0..2) (representing constraint ((field_00008_00007=4) + (field_00007_00007=4)))
c Both direct and order encoding.
c Var 'aux1892' order represents '0' with '18032'
c Var 'aux1892' direct represents '0' with '18032'
c Var 'aux1892' order represents '1' with '18033'
-18032 18033 0
c Var 'aux1892' direct represents '1' with '18034'
18032 -18033 18034 0
-18034 18033 0
-18034 -18032 0
c Var 'aux1892' direct represents '2' with '-18033'
18032 18034 -18033 0
c Encoding variable: aux1893 with domain: int(0..2) (representing constraint ((field_00007_00009=4) + (field_00007_00008=4)))
c Both direct and order encoding.
c Var 'aux1893' order represents '0' with '18035'
c Var 'aux1893' direct represents '0' with '18035'
c Var 'aux1893' order represents '1' with '18036'
-18035 18036 0
c Var 'aux1893' direct represents '1' with '18037'
18035 -18036 18037 0
-18037 18036 0
-18037 -18035 0
c Var 'aux1893' direct represents '2' with '-18036'
18035 18037 -18036 0
c Encoding variable: aux1894 with domain: int(0..3) (representing constraint ((field_00009_00009=4) + aux1893))
c Both direct and order encoding.
c Var 'aux1894' order represents '0' with '18038'
c Var 'aux1894' direct represents '0' with '18038'
c Var 'aux1894' order represents '1' with '18039'
-18038 18039 0
c Var 'aux1894' direct represents '1' with '18040'
18038 -18039 18040 0
-18040 18039 0
-18040 -18038 0
c Var 'aux1894' order represents '2' with '18041'
-18039 18041 0
c Var 'aux1894' direct represents '2' with '18042'
18039 -18041 18042 0
-18042 18041 0
-18042 -18039 0
c Var 'aux1894' direct represents '3' with '-18041'
18038 18040 18042 -18041 0
c Encoding variable: aux1895 with domain: int(0..4) (representing constraint (aux1890 + aux1892))
c Both direct and order encoding.
c Var 'aux1895' order represents '0' with '18043'
c Var 'aux1895' direct represents '0' with '18043'
c Var 'aux1895' order represents '1' with '18044'
-18043 18044 0
c Var 'aux1895' direct represents '1' with '18045'
18043 -18044 18045 0
-18045 18044 0
-18045 -18043 0
c Var 'aux1895' order represents '2' with '18046'
-18044 18046 0
c Var 'aux1895' direct represents '2' with '18047'
18044 -18046 18047 0
-18047 18046 0
-18047 -18044 0
c Var 'aux1895' order represents '3' with '18048'
-18046 18048 0
c Var 'aux1895' direct represents '3' with '18049'
18046 -18048 18049 0
-18049 18048 0
-18049 -18046 0
c Var 'aux1895' direct represents '4' with '-18048'
18043 18045 18047 18049 -18048 0
c Encoding variable: aux1896 with domain: int(0..2) (representing constraint ((field_00009_00007=5) + (field_00008_00009=5)))
c Both direct and order encoding.
c Var 'aux1896' order represents '0' with '18050'
c Var 'aux1896' direct represents '0' with '18050'
c Var 'aux1896' order represents '1' with '18051'
-18050 18051 0
c Var 'aux1896' direct represents '1' with '18052'
18050 -18051 18052 0
-18052 18051 0
-18052 -18050 0
c Var 'aux1896' direct represents '2' with '-18051'
18050 18052 -18051 0
c Encoding variable: aux1897 with domain: int(0..2) (representing constraint ((field_00008_00008=5) + (field_00009_00008=5)))
c Both direct and order encoding.
c Var 'aux1897' order represents '0' with '18053'
c Var 'aux1897' direct represents '0' with '18053'
c Var 'aux1897' order represents '1' with '18054'
-18053 18054 0
c Var 'aux1897' direct represents '1' with '18055'
18053 -18054 18055 0
-18055 18054 0
-18055 -18053 0
c Var 'aux1897' direct represents '2' with '-18054'
18053 18055 -18054 0
c Encoding variable: aux1898 with domain: int(0..2) (representing constraint ((field_00008_00007=5) + (field_00007_00007=5)))
c Both direct and order encoding.
c Var 'aux1898' order represents '0' with '18056'
c Var 'aux1898' direct represents '0' with '18056'
c Var 'aux1898' order represents '1' with '18057'
-18056 18057 0
c Var 'aux1898' direct represents '1' with '18058'
18056 -18057 18058 0
-18058 18057 0
-18058 -18056 0
c Var 'aux1898' direct represents '2' with '-18057'
18056 18058 -18057 0
c Encoding variable: aux1899 with domain: int(0..2) (representing constraint ((field_00007_00009=5) + (field_00007_00008=5)))
c Both direct and order encoding.
c Var 'aux1899' order represents '0' with '18059'
c Var 'aux1899' direct represents '0' with '18059'
c Var 'aux1899' order represents '1' with '18060'
-18059 18060 0
c Var 'aux1899' direct represents '1' with '18061'
18059 -18060 18061 0
-18061 18060 0
-18061 -18059 0
c Var 'aux1899' direct represents '2' with '-18060'
18059 18061 -18060 0
c Encoding variable: aux1900 with domain: int(0..3) (representing constraint ((field_00009_00009=5) + aux1899))
c Both direct and order encoding.
c Var 'aux1900' order represents '0' with '18062'
c Var 'aux1900' direct represents '0' with '18062'
c Var 'aux1900' order represents '1' with '18063'
-18062 18063 0
c Var 'aux1900' direct represents '1' with '18064'
18062 -18063 18064 0
-18064 18063 0
-18064 -18062 0
c Var 'aux1900' order represents '2' with '18065'
-18063 18065 0
c Var 'aux1900' direct represents '2' with '18066'
18063 -18065 18066 0
-18066 18065 0
-18066 -18063 0
c Var 'aux1900' direct represents '3' with '-18065'
18062 18064 18066 -18065 0
c Encoding variable: aux1901 with domain: int(0..4) (representing constraint (aux1896 + aux1898))
c Both direct and order encoding.
c Var 'aux1901' order represents '0' with '18067'
c Var 'aux1901' direct represents '0' with '18067'
c Var 'aux1901' order represents '1' with '18068'
-18067 18068 0
c Var 'aux1901' direct represents '1' with '18069'
18067 -18068 18069 0
-18069 18068 0
-18069 -18067 0
c Var 'aux1901' order represents '2' with '18070'
-18068 18070 0
c Var 'aux1901' direct represents '2' with '18071'
18068 -18070 18071 0
-18071 18070 0
-18071 -18068 0
c Var 'aux1901' order represents '3' with '18072'
-18070 18072 0
c Var 'aux1901' direct represents '3' with '18073'
18070 -18072 18073 0
-18073 18072 0
-18073 -18070 0
c Var 'aux1901' direct represents '4' with '-18072'
18067 18069 18071 18073 -18072 0
c Encoding variable: aux1902 with domain: int(0..2) (representing constraint ((field_00009_00007=6) + (field_00008_00009=6)))
c Both direct and order encoding.
c Var 'aux1902' order represents '0' with '18074'
c Var 'aux1902' direct represents '0' with '18074'
c Var 'aux1902' order represents '1' with '18075'
-18074 18075 0
c Var 'aux1902' direct represents '1' with '18076'
18074 -18075 18076 0
-18076 18075 0
-18076 -18074 0
c Var 'aux1902' direct represents '2' with '-18075'
18074 18076 -18075 0
c Encoding variable: aux1903 with domain: int(0..2) (representing constraint ((field_00008_00008=6) + (field_00009_00008=6)))
c Both direct and order encoding.
c Var 'aux1903' order represents '0' with '18077'
c Var 'aux1903' direct represents '0' with '18077'
c Var 'aux1903' order represents '1' with '18078'
-18077 18078 0
c Var 'aux1903' direct represents '1' with '18079'
18077 -18078 18079 0
-18079 18078 0
-18079 -18077 0
c Var 'aux1903' direct represents '2' with '-18078'
18077 18079 -18078 0
c Encoding variable: aux1904 with domain: int(0..2) (representing constraint ((field_00008_00007=6) + (field_00007_00007=6)))
c Both direct and order encoding.
c Var 'aux1904' order represents '0' with '18080'
c Var 'aux1904' direct represents '0' with '18080'
c Var 'aux1904' order represents '1' with '18081'
-18080 18081 0
c Var 'aux1904' direct represents '1' with '18082'
18080 -18081 18082 0
-18082 18081 0
-18082 -18080 0
c Var 'aux1904' direct represents '2' with '-18081'
18080 18082 -18081 0
c Encoding variable: aux1905 with domain: int(0..2) (representing constraint ((field_00007_00009=6) + (field_00007_00008=6)))
c Both direct and order encoding.
c Var 'aux1905' order represents '0' with '18083'
c Var 'aux1905' direct represents '0' with '18083'
c Var 'aux1905' order represents '1' with '18084'
-18083 18084 0
c Var 'aux1905' direct represents '1' with '18085'
18083 -18084 18085 0
-18085 18084 0
-18085 -18083 0
c Var 'aux1905' direct represents '2' with '-18084'
18083 18085 -18084 0
c Encoding variable: aux1906 with domain: int(0..3) (representing constraint ((field_00009_00009=6) + aux1905))
c Both direct and order encoding.
c Var 'aux1906' order represents '0' with '18086'
c Var 'aux1906' direct represents '0' with '18086'
c Var 'aux1906' order represents '1' with '18087'
-18086 18087 0
c Var 'aux1906' direct represents '1' with '18088'
18086 -18087 18088 0
-18088 18087 0
-18088 -18086 0
c Var 'aux1906' order represents '2' with '18089'
-18087 18089 0
c Var 'aux1906' direct represents '2' with '18090'
18087 -18089 18090 0
-18090 18089 0
-18090 -18087 0
c Var 'aux1906' direct represents '3' with '-18089'
18086 18088 18090 -18089 0
c Encoding variable: aux1907 with domain: int(0..4) (representing constraint (aux1902 + aux1904))
c Both direct and order encoding.
c Var 'aux1907' order represents '0' with '18091'
c Var 'aux1907' direct represents '0' with '18091'
c Var 'aux1907' order represents '1' with '18092'
-18091 18092 0
c Var 'aux1907' direct represents '1' with '18093'
18091 -18092 18093 0
-18093 18092 0
-18093 -18091 0
c Var 'aux1907' order represents '2' with '18094'
-18092 18094 0
c Var 'aux1907' direct represents '2' with '18095'
18092 -18094 18095 0
-18095 18094 0
-18095 -18092 0
c Var 'aux1907' order represents '3' with '18096'
-18094 18096 0
c Var 'aux1907' direct represents '3' with '18097'
18094 -18096 18097 0
-18097 18096 0
-18097 -18094 0
c Var 'aux1907' direct represents '4' with '-18096'
18091 18093 18095 18097 -18096 0
c Encoding variable: aux1908 with domain: int(0..2) (representing constraint ((field_00009_00007=7) + (field_00008_00009=7)))
c Both direct and order encoding.
c Var 'aux1908' order represents '0' with '18098'
c Var 'aux1908' direct represents '0' with '18098'
c Var 'aux1908' order represents '1' with '18099'
-18098 18099 0
c Var 'aux1908' direct represents '1' with '18100'
18098 -18099 18100 0
-18100 18099 0
-18100 -18098 0
c Var 'aux1908' direct represents '2' with '-18099'
18098 18100 -18099 0
c Encoding variable: aux1909 with domain: int(0..2) (representing constraint ((field_00008_00008=7) + (field_00009_00008=7)))
c Both direct and order encoding.
c Var 'aux1909' order represents '0' with '18101'
c Var 'aux1909' direct represents '0' with '18101'
c Var 'aux1909' order represents '1' with '18102'
-18101 18102 0
c Var 'aux1909' direct represents '1' with '18103'
18101 -18102 18103 0
-18103 18102 0
-18103 -18101 0
c Var 'aux1909' direct represents '2' with '-18102'
18101 18103 -18102 0
c Encoding variable: aux1910 with domain: int(0..2) (representing constraint ((field_00008_00007=7) + (field_00007_00007=7)))
c Both direct and order encoding.
c Var 'aux1910' order represents '0' with '18104'
c Var 'aux1910' direct represents '0' with '18104'
c Var 'aux1910' order represents '1' with '18105'
-18104 18105 0
c Var 'aux1910' direct represents '1' with '18106'
18104 -18105 18106 0
-18106 18105 0
-18106 -18104 0
c Var 'aux1910' direct represents '2' with '-18105'
18104 18106 -18105 0
c Encoding variable: aux1911 with domain: int(0..2) (representing constraint ((field_00007_00009=7) + (field_00007_00008=7)))
c Both direct and order encoding.
c Var 'aux1911' order represents '0' with '18107'
c Var 'aux1911' direct represents '0' with '18107'
c Var 'aux1911' order represents '1' with '18108'
-18107 18108 0
c Var 'aux1911' direct represents '1' with '18109'
18107 -18108 18109 0
-18109 18108 0
-18109 -18107 0
c Var 'aux1911' direct represents '2' with '-18108'
18107 18109 -18108 0
c Encoding variable: aux1912 with domain: int(0..3) (representing constraint ((field_00009_00009=7) + aux1911))
c Both direct and order encoding.
c Var 'aux1912' order represents '0' with '18110'
c Var 'aux1912' direct represents '0' with '18110'
c Var 'aux1912' order represents '1' with '18111'
-18110 18111 0
c Var 'aux1912' direct represents '1' with '18112'
18110 -18111 18112 0
-18112 18111 0
-18112 -18110 0
c Var 'aux1912' order represents '2' with '18113'
-18111 18113 0
c Var 'aux1912' direct represents '2' with '18114'
18111 -18113 18114 0
-18114 18113 0
-18114 -18111 0
c Var 'aux1912' direct represents '3' with '-18113'
18110 18112 18114 -18113 0
c Encoding variable: aux1913 with domain: int(0..4) (representing constraint (aux1908 + aux1910))
c Both direct and order encoding.
c Var 'aux1913' order represents '0' with '18115'
c Var 'aux1913' direct represents '0' with '18115'
c Var 'aux1913' order represents '1' with '18116'
-18115 18116 0
c Var 'aux1913' direct represents '1' with '18117'
18115 -18116 18117 0
-18117 18116 0
-18117 -18115 0
c Var 'aux1913' order represents '2' with '18118'
-18116 18118 0
c Var 'aux1913' direct represents '2' with '18119'
18116 -18118 18119 0
-18119 18118 0
-18119 -18116 0
c Var 'aux1913' order represents '3' with '18120'
-18118 18120 0
c Var 'aux1913' direct represents '3' with '18121'
18118 -18120 18121 0
-18121 18120 0
-18121 -18118 0
c Var 'aux1913' direct represents '4' with '-18120'
18115 18117 18119 18121 -18120 0
c Encoding variable: aux1914 with domain: int(0..2) (representing constraint ((field_00009_00007=8) + (field_00008_00009=8)))
c Both direct and order encoding.
c Var 'aux1914' order represents '0' with '18122'
c Var 'aux1914' direct represents '0' with '18122'
c Var 'aux1914' order represents '1' with '18123'
-18122 18123 0
c Var 'aux1914' direct represents '1' with '18124'
18122 -18123 18124 0
-18124 18123 0
-18124 -18122 0
c Var 'aux1914' direct represents '2' with '-18123'
18122 18124 -18123 0
c Encoding variable: aux1915 with domain: int(0..2) (representing constraint ((field_00008_00008=8) + (field_00009_00008=8)))
c Both direct and order encoding.
c Var 'aux1915' order represents '0' with '18125'
c Var 'aux1915' direct represents '0' with '18125'
c Var 'aux1915' order represents '1' with '18126'
-18125 18126 0
c Var 'aux1915' direct represents '1' with '18127'
18125 -18126 18127 0
-18127 18126 0
-18127 -18125 0
c Var 'aux1915' direct represents '2' with '-18126'
18125 18127 -18126 0
c Encoding variable: aux1916 with domain: int(0..2) (representing constraint ((field_00008_00007=8) + (field_00007_00007=8)))
c Both direct and order encoding.
c Var 'aux1916' order represents '0' with '18128'
c Var 'aux1916' direct represents '0' with '18128'
c Var 'aux1916' order represents '1' with '18129'
-18128 18129 0
c Var 'aux1916' direct represents '1' with '18130'
18128 -18129 18130 0
-18130 18129 0
-18130 -18128 0
c Var 'aux1916' direct represents '2' with '-18129'
18128 18130 -18129 0
c Encoding variable: aux1917 with domain: int(0..2) (representing constraint ((field_00007_00009=8) + (field_00007_00008=8)))
c Both direct and order encoding.
c Var 'aux1917' order represents '0' with '18131'
c Var 'aux1917' direct represents '0' with '18131'
c Var 'aux1917' order represents '1' with '18132'
-18131 18132 0
c Var 'aux1917' direct represents '1' with '18133'
18131 -18132 18133 0
-18133 18132 0
-18133 -18131 0
c Var 'aux1917' direct represents '2' with '-18132'
18131 18133 -18132 0
c Encoding variable: aux1918 with domain: int(0..3) (representing constraint ((field_00009_00009=8) + aux1917))
c Both direct and order encoding.
c Var 'aux1918' order represents '0' with '18134'
c Var 'aux1918' direct represents '0' with '18134'
c Var 'aux1918' order represents '1' with '18135'
-18134 18135 0
c Var 'aux1918' direct represents '1' with '18136'
18134 -18135 18136 0
-18136 18135 0
-18136 -18134 0
c Var 'aux1918' order represents '2' with '18137'
-18135 18137 0
c Var 'aux1918' direct represents '2' with '18138'
18135 -18137 18138 0
-18138 18137 0
-18138 -18135 0
c Var 'aux1918' direct represents '3' with '-18137'
18134 18136 18138 -18137 0
c Encoding variable: aux1919 with domain: int(0..4) (representing constraint (aux1914 + aux1916))
c Both direct and order encoding.
c Var 'aux1919' order represents '0' with '18139'
c Var 'aux1919' direct represents '0' with '18139'
c Var 'aux1919' order represents '1' with '18140'
-18139 18140 0
c Var 'aux1919' direct represents '1' with '18141'
18139 -18140 18141 0
-18141 18140 0
-18141 -18139 0
c Var 'aux1919' order represents '2' with '18142'
-18140 18142 0
c Var 'aux1919' direct represents '2' with '18143'
18140 -18142 18143 0
-18143 18142 0
-18143 -18140 0
c Var 'aux1919' order represents '3' with '18144'
-18142 18144 0
c Var 'aux1919' direct represents '3' with '18145'
18142 -18144 18145 0
-18145 18144 0
-18145 -18142 0
c Var 'aux1919' direct represents '4' with '-18144'
18139 18141 18143 18145 -18144 0
c Encoding variable: aux1920 with domain: int(0..2) (representing constraint ((field_00009_00007=9) + (field_00008_00009=9)))
c Both direct and order encoding.
c Var 'aux1920' order represents '0' with '18146'
c Var 'aux1920' direct represents '0' with '18146'
c Var 'aux1920' order represents '1' with '18147'
-18146 18147 0
c Var 'aux1920' direct represents '1' with '18148'
18146 -18147 18148 0
-18148 18147 0
-18148 -18146 0
c Var 'aux1920' direct represents '2' with '-18147'
18146 18148 -18147 0
c Encoding variable: aux1921 with domain: int(0..2) (representing constraint ((field_00008_00008=9) + (field_00009_00008=9)))
c Both direct and order encoding.
c Var 'aux1921' order represents '0' with '18149'
c Var 'aux1921' direct represents '0' with '18149'
c Var 'aux1921' order represents '1' with '18150'
-18149 18150 0
c Var 'aux1921' direct represents '1' with '18151'
18149 -18150 18151 0
-18151 18150 0
-18151 -18149 0
c Var 'aux1921' direct represents '2' with '-18150'
18149 18151 -18150 0
c Encoding variable: aux1922 with domain: int(0..2) (representing constraint ((field_00008_00007=9) + (field_00007_00007=9)))
c Both direct and order encoding.
c Var 'aux1922' order represents '0' with '18152'
c Var 'aux1922' direct represents '0' with '18152'
c Var 'aux1922' order represents '1' with '18153'
-18152 18153 0
c Var 'aux1922' direct represents '1' with '18154'
18152 -18153 18154 0
-18154 18153 0
-18154 -18152 0
c Var 'aux1922' direct represents '2' with '-18153'
18152 18154 -18153 0
c Encoding variable: aux1923 with domain: int(0..2) (representing constraint ((field_00007_00009=9) + (field_00007_00008=9)))
c Both direct and order encoding.
c Var 'aux1923' order represents '0' with '18155'
c Var 'aux1923' direct represents '0' with '18155'
c Var 'aux1923' order represents '1' with '18156'
-18155 18156 0
c Var 'aux1923' direct represents '1' with '18157'
18155 -18156 18157 0
-18157 18156 0
-18157 -18155 0
c Var 'aux1923' direct represents '2' with '-18156'
18155 18157 -18156 0
c Encoding variable: aux1924 with domain: int(0..3) (representing constraint ((field_00009_00009=9) + aux1923))
c Both direct and order encoding.
c Var 'aux1924' order represents '0' with '18158'
c Var 'aux1924' direct represents '0' with '18158'
c Var 'aux1924' order represents '1' with '18159'
-18158 18159 0
c Var 'aux1924' direct represents '1' with '18160'
18158 -18159 18160 0
-18160 18159 0
-18160 -18158 0
c Var 'aux1924' order represents '2' with '18161'
-18159 18161 0
c Var 'aux1924' direct represents '2' with '18162'
18159 -18161 18162 0
-18162 18161 0
-18162 -18159 0
c Var 'aux1924' direct represents '3' with '-18161'
18158 18160 18162 -18161 0
c Encoding variable: aux1925 with domain: int(0..4) (representing constraint (aux1920 + aux1922))
c Both direct and order encoding.
c Var 'aux1925' order represents '0' with '18163'
c Var 'aux1925' direct represents '0' with '18163'
c Var 'aux1925' order represents '1' with '18164'
-18163 18164 0
c Var 'aux1925' direct represents '1' with '18165'
18163 -18164 18165 0
-18165 18164 0
-18165 -18163 0
c Var 'aux1925' order represents '2' with '18166'
-18164 18166 0
c Var 'aux1925' direct represents '2' with '18167'
18164 -18166 18167 0
-18167 18166 0
-18167 -18164 0
c Var 'aux1925' order represents '3' with '18168'
-18166 18168 0
c Var 'aux1925' direct represents '3' with '18169'
18166 -18168 18169 0
-18169 18168 0
-18169 -18166 0
c Var 'aux1925' direct represents '4' with '-18168'
18163 18165 18167 18169 -18168 0
c Encoding variable: aux1926 with domain: bool (representing constraint ((aux379 + aux382 + aux383)<=7))
c Var 'aux1926' direct represents '0' with '-18170'
c Var 'aux1926' direct represents '1' with '18170'
c Var 'aux1926' order represents '1' with '1'
c Var 'aux1926' order represents '0' with '-18170'
c Encoding variable: aux1927 with domain: bool (representing constraint (7<=(aux379 + aux382 + aux383)))
c Var 'aux1927' direct represents '0' with '-18171'
c Var 'aux1927' direct represents '1' with '18171'
c Var 'aux1927' order represents '1' with '1'
c Var 'aux1927' order represents '0' with '-18171'
c Encoding variable: aux1928 with domain: bool (representing constraint ((aux385 + aux388 + aux389)<=16))
c Var 'aux1928' direct represents '0' with '-18172'
c Var 'aux1928' direct represents '1' with '18172'
c Var 'aux1928' order represents '1' with '1'
c Var 'aux1928' order represents '0' with '-18172'
c Encoding variable: aux1929 with domain: bool (representing constraint (16<=(aux385 + aux388 + aux389)))
c Var 'aux1929' direct represents '0' with '-18173'
c Var 'aux1929' direct represents '1' with '18173'
c Var 'aux1929' order represents '1' with '1'
c Var 'aux1929' order represents '0' with '-18173'
c Encoding variable: aux1930 with domain: bool (representing constraint ((aux391 + aux394 + aux395)<=29))
c Var 'aux1930' direct represents '0' with '-18174'
c Var 'aux1930' direct represents '1' with '18174'
c Var 'aux1930' order represents '1' with '1'
c Var 'aux1930' order represents '0' with '-18174'
c Encoding variable: aux1931 with domain: bool (representing constraint (29<=(aux391 + aux394 + aux395)))
c Var 'aux1931' direct represents '0' with '-18175'
c Var 'aux1931' direct represents '1' with '18175'
c Var 'aux1931' order represents '1' with '1'
c Var 'aux1931' order represents '0' with '-18175'
c Encoding variable: aux1932 with domain: bool (representing constraint ((aux397 + aux400 + aux401)<=27))
c Var 'aux1932' direct represents '0' with '-18176'
c Var 'aux1932' direct represents '1' with '18176'
c Var 'aux1932' order represents '1' with '1'
c Var 'aux1932' order represents '0' with '-18176'
c Encoding variable: aux1933 with domain: bool (representing constraint (27<=(aux397 + aux400 + aux401)))
c Var 'aux1933' direct represents '0' with '-18177'
c Var 'aux1933' direct represents '1' with '18177'
c Var 'aux1933' order represents '1' with '1'
c Var 'aux1933' order represents '0' with '-18177'
c Encoding variable: aux1934 with domain: bool (representing constraint ((aux403 + aux406 + aux407)<=26))
c Var 'aux1934' direct represents '0' with '-18178'
c Var 'aux1934' direct represents '1' with '18178'
c Var 'aux1934' order represents '1' with '1'
c Var 'aux1934' order represents '0' with '-18178'
c Encoding variable: aux1935 with domain: bool (representing constraint (26<=(aux403 + aux406 + aux407)))
c Var 'aux1935' direct represents '0' with '-18179'
c Var 'aux1935' direct represents '1' with '18179'
c Var 'aux1935' order represents '1' with '1'
c Var 'aux1935' order represents '0' with '-18179'
c Encoding variable: aux1936 with domain: bool (representing constraint ((aux409 + aux412 + aux413)<=10))
c Var 'aux1936' direct represents '0' with '-18180'
c Var 'aux1936' direct represents '1' with '18180'
c Var 'aux1936' order represents '1' with '1'
c Var 'aux1936' order represents '0' with '-18180'
c Encoding variable: aux1937 with domain: bool (representing constraint (10<=(aux409 + aux412 + aux413)))
c Var 'aux1937' direct represents '0' with '-18181'
c Var 'aux1937' direct represents '1' with '18181'
c Var 'aux1937' order represents '1' with '1'
c Var 'aux1937' order represents '0' with '-18181'
c Encoding variable: aux1938 with domain: bool (representing constraint ((aux415 + aux418 + aux419)<=20))
c Var 'aux1938' direct represents '0' with '-18182'
c Var 'aux1938' direct represents '1' with '18182'
c Var 'aux1938' order represents '1' with '1'
c Var 'aux1938' order represents '0' with '-18182'
c Encoding variable: aux1939 with domain: bool (representing constraint (20<=(aux415 + aux418 + aux419)))
c Var 'aux1939' direct represents '0' with '-18183'
c Var 'aux1939' direct represents '1' with '18183'
c Var 'aux1939' order represents '1' with '1'
c Var 'aux1939' order represents '0' with '-18183'
c Encoding variable: aux1940 with domain: bool (representing constraint ((aux421 + aux424 + aux425)<=15))
c Var 'aux1940' direct represents '0' with '-18184'
c Var 'aux1940' direct represents '1' with '18184'
c Var 'aux1940' order represents '1' with '1'
c Var 'aux1940' order represents '0' with '-18184'
c Encoding variable: aux1941 with domain: bool (representing constraint (15<=(aux421 + aux424 + aux425)))
c Var 'aux1941' direct represents '0' with '-18185'
c Var 'aux1941' direct represents '1' with '18185'
c Var 'aux1941' order represents '1' with '1'
c Var 'aux1941' order represents '0' with '-18185'
c Encoding variable: aux1942 with domain: bool (representing constraint ((aux427 + aux430 + aux431)<=7))
c Var 'aux1942' direct represents '0' with '-18186'
c Var 'aux1942' direct represents '1' with '18186'
c Var 'aux1942' order represents '1' with '1'
c Var 'aux1942' order represents '0' with '-18186'
c Encoding variable: aux1943 with domain: bool (representing constraint (7<=(aux427 + aux430 + aux431)))
c Var 'aux1943' direct represents '0' with '-18187'
c Var 'aux1943' direct represents '1' with '18187'
c Var 'aux1943' order represents '1' with '1'
c Var 'aux1943' order represents '0' with '-18187'
c Encoding variable: aux1944 with domain: bool (representing constraint ((aux433 + aux436 + aux437)<=16))
c Var 'aux1944' direct represents '0' with '-18188'
c Var 'aux1944' direct represents '1' with '18188'
c Var 'aux1944' order represents '1' with '1'
c Var 'aux1944' order represents '0' with '-18188'
c Encoding variable: aux1945 with domain: bool (representing constraint (16<=(aux433 + aux436 + aux437)))
c Var 'aux1945' direct represents '0' with '-18189'
c Var 'aux1945' direct represents '1' with '18189'
c Var 'aux1945' order represents '1' with '1'
c Var 'aux1945' order represents '0' with '-18189'
c Encoding variable: aux1946 with domain: bool (representing constraint ((aux439 + aux442 + aux443)<=29))
c Var 'aux1946' direct represents '0' with '-18190'
c Var 'aux1946' direct represents '1' with '18190'
c Var 'aux1946' order represents '1' with '1'
c Var 'aux1946' order represents '0' with '-18190'
c Encoding variable: aux1947 with domain: bool (representing constraint (29<=(aux439 + aux442 + aux443)))
c Var 'aux1947' direct represents '0' with '-18191'
c Var 'aux1947' direct represents '1' with '18191'
c Var 'aux1947' order represents '1' with '1'
c Var 'aux1947' order represents '0' with '-18191'
c Encoding variable: aux1948 with domain: bool (representing constraint ((aux445 + aux448 + aux449)<=27))
c Var 'aux1948' direct represents '0' with '-18192'
c Var 'aux1948' direct represents '1' with '18192'
c Var 'aux1948' order represents '1' with '1'
c Var 'aux1948' order represents '0' with '-18192'
c Encoding variable: aux1949 with domain: bool (representing constraint (27<=(aux445 + aux448 + aux449)))
c Var 'aux1949' direct represents '0' with '-18193'
c Var 'aux1949' direct represents '1' with '18193'
c Var 'aux1949' order represents '1' with '1'
c Var 'aux1949' order represents '0' with '-18193'
c Encoding variable: aux1950 with domain: bool (representing constraint ((aux451 + aux454 + aux455)<=26))
c Var 'aux1950' direct represents '0' with '-18194'
c Var 'aux1950' direct represents '1' with '18194'
c Var 'aux1950' order represents '1' with '1'
c Var 'aux1950' order represents '0' with '-18194'
c Encoding variable: aux1951 with domain: bool (representing constraint (26<=(aux451 + aux454 + aux455)))
c Var 'aux1951' direct represents '0' with '-18195'
c Var 'aux1951' direct represents '1' with '18195'
c Var 'aux1951' order represents '1' with '1'
c Var 'aux1951' order represents '0' with '-18195'
c Encoding variable: aux1952 with domain: bool (representing constraint ((aux457 + aux460 + aux461)<=10))
c Var 'aux1952' direct represents '0' with '-18196'
c Var 'aux1952' direct represents '1' with '18196'
c Var 'aux1952' order represents '1' with '1'
c Var 'aux1952' order represents '0' with '-18196'
c Encoding variable: aux1953 with domain: bool (representing constraint (10<=(aux457 + aux460 + aux461)))
c Var 'aux1953' direct represents '0' with '-18197'
c Var 'aux1953' direct represents '1' with '18197'
c Var 'aux1953' order represents '1' with '1'
c Var 'aux1953' order represents '0' with '-18197'
c Encoding variable: aux1954 with domain: bool (representing constraint ((aux463 + aux466 + aux467)<=15))
c Var 'aux1954' direct represents '0' with '-18198'
c Var 'aux1954' direct represents '1' with '18198'
c Var 'aux1954' order represents '1' with '1'
c Var 'aux1954' order represents '0' with '-18198'
c Encoding variable: aux1955 with domain: bool (representing constraint (15<=(aux463 + aux466 + aux467)))
c Var 'aux1955' direct represents '0' with '-18199'
c Var 'aux1955' direct represents '1' with '18199'
c Var 'aux1955' order represents '1' with '1'
c Var 'aux1955' order represents '0' with '-18199'
c Encoding variable: aux1956 with domain: bool (representing constraint ((aux469 + aux472 + aux473)<=1))
c Var 'aux1956' direct represents '0' with '-18200'
c Var 'aux1956' direct represents '1' with '18200'
c Var 'aux1956' order represents '1' with '1'
c Var 'aux1956' order represents '0' with '-18200'
c Encoding variable: aux1957 with domain: bool (representing constraint (1<=(aux469 + aux472 + aux473)))
c Var 'aux1957' direct represents '0' with '-18201'
c Var 'aux1957' direct represents '1' with '18201'
c Var 'aux1957' order represents '1' with '1'
c Var 'aux1957' order represents '0' with '-18201'
c Encoding variable: aux1958 with domain: bool (representing constraint ((aux475 + aux478 + aux479)<=1))
c Var 'aux1958' direct represents '0' with '-18202'
c Var 'aux1958' direct represents '1' with '18202'
c Var 'aux1958' order represents '1' with '1'
c Var 'aux1958' order represents '0' with '-18202'
c Encoding variable: aux1959 with domain: bool (representing constraint (1<=(aux475 + aux478 + aux479)))
c Var 'aux1959' direct represents '0' with '-18203'
c Var 'aux1959' direct represents '1' with '18203'
c Var 'aux1959' order represents '1' with '1'
c Var 'aux1959' order represents '0' with '-18203'
c Encoding variable: aux1960 with domain: bool (representing constraint ((aux481 + aux484 + aux485)<=1))
c Var 'aux1960' direct represents '0' with '-18204'
c Var 'aux1960' direct represents '1' with '18204'
c Var 'aux1960' order represents '1' with '1'
c Var 'aux1960' order represents '0' with '-18204'
c Encoding variable: aux1961 with domain: bool (representing constraint (1<=(aux481 + aux484 + aux485)))
c Var 'aux1961' direct represents '0' with '-18205'
c Var 'aux1961' direct represents '1' with '18205'
c Var 'aux1961' order represents '1' with '1'
c Var 'aux1961' order represents '0' with '-18205'
c Encoding variable: aux1962 with domain: bool (representing constraint ((aux487 + aux490 + aux491)<=1))
c Var 'aux1962' direct represents '0' with '-18206'
c Var 'aux1962' direct represents '1' with '18206'
c Var 'aux1962' order represents '1' with '1'
c Var 'aux1962' order represents '0' with '-18206'
c Encoding variable: aux1963 with domain: bool (representing constraint (1<=(aux487 + aux490 + aux491)))
c Var 'aux1963' direct represents '0' with '-18207'
c Var 'aux1963' direct represents '1' with '18207'
c Var 'aux1963' order represents '1' with '1'
c Var 'aux1963' order represents '0' with '-18207'
c Encoding variable: aux1964 with domain: bool (representing constraint ((aux493 + aux496 + aux497)<=1))
c Var 'aux1964' direct represents '0' with '-18208'
c Var 'aux1964' direct represents '1' with '18208'
c Var 'aux1964' order represents '1' with '1'
c Var 'aux1964' order represents '0' with '-18208'
c Encoding variable: aux1965 with domain: bool (representing constraint (1<=(aux493 + aux496 + aux497)))
c Var 'aux1965' direct represents '0' with '-18209'
c Var 'aux1965' direct represents '1' with '18209'
c Var 'aux1965' order represents '1' with '1'
c Var 'aux1965' order represents '0' with '-18209'
c Encoding variable: aux1966 with domain: bool (representing constraint ((aux499 + aux502 + aux503)<=1))
c Var 'aux1966' direct represents '0' with '-18210'
c Var 'aux1966' direct represents '1' with '18210'
c Var 'aux1966' order represents '1' with '1'
c Var 'aux1966' order represents '0' with '-18210'
c Encoding variable: aux1967 with domain: bool (representing constraint (1<=(aux499 + aux502 + aux503)))
c Var 'aux1967' direct represents '0' with '-18211'
c Var 'aux1967' direct represents '1' with '18211'
c Var 'aux1967' order represents '1' with '1'
c Var 'aux1967' order represents '0' with '-18211'
c Encoding variable: aux1968 with domain: bool (representing constraint ((aux505 + aux508 + aux509)<=1))
c Var 'aux1968' direct represents '0' with '-18212'
c Var 'aux1968' direct represents '1' with '18212'
c Var 'aux1968' order represents '1' with '1'
c Var 'aux1968' order represents '0' with '-18212'
c Encoding variable: aux1969 with domain: bool (representing constraint (1<=(aux505 + aux508 + aux509)))
c Var 'aux1969' direct represents '0' with '-18213'
c Var 'aux1969' direct represents '1' with '18213'
c Var 'aux1969' order represents '1' with '1'
c Var 'aux1969' order represents '0' with '-18213'
c Encoding variable: aux1970 with domain: bool (representing constraint ((aux511 + aux514 + aux515)<=1))
c Var 'aux1970' direct represents '0' with '-18214'
c Var 'aux1970' direct represents '1' with '18214'
c Var 'aux1970' order represents '1' with '1'
c Var 'aux1970' order represents '0' with '-18214'
c Encoding variable: aux1971 with domain: bool (representing constraint (1<=(aux511 + aux514 + aux515)))
c Var 'aux1971' direct represents '0' with '-18215'
c Var 'aux1971' direct represents '1' with '18215'
c Var 'aux1971' order represents '1' with '1'
c Var 'aux1971' order represents '0' with '-18215'
c Encoding variable: aux1972 with domain: bool (representing constraint ((aux517 + aux520 + aux521)<=1))
c Var 'aux1972' direct represents '0' with '-18216'
c Var 'aux1972' direct represents '1' with '18216'
c Var 'aux1972' order represents '1' with '1'
c Var 'aux1972' order represents '0' with '-18216'
c Encoding variable: aux1973 with domain: bool (representing constraint (1<=(aux517 + aux520 + aux521)))
c Var 'aux1973' direct represents '0' with '-18217'
c Var 'aux1973' direct represents '1' with '18217'
c Var 'aux1973' order represents '1' with '1'
c Var 'aux1973' order represents '0' with '-18217'
c Encoding variable: aux1974 with domain: bool (representing constraint ((aux523 + aux526 + aux527)<=1))
c Var 'aux1974' direct represents '0' with '-18218'
c Var 'aux1974' direct represents '1' with '18218'
c Var 'aux1974' order represents '1' with '1'
c Var 'aux1974' order represents '0' with '-18218'
c Encoding variable: aux1975 with domain: bool (representing constraint (1<=(aux523 + aux526 + aux527)))
c Var 'aux1975' direct represents '0' with '-18219'
c Var 'aux1975' direct represents '1' with '18219'
c Var 'aux1975' order represents '1' with '1'
c Var 'aux1975' order represents '0' with '-18219'
c Encoding variable: aux1976 with domain: bool (representing constraint ((aux529 + aux532 + aux533)<=1))
c Var 'aux1976' direct represents '0' with '-18220'
c Var 'aux1976' direct represents '1' with '18220'
c Var 'aux1976' order represents '1' with '1'
c Var 'aux1976' order represents '0' with '-18220'
c Encoding variable: aux1977 with domain: bool (representing constraint (1<=(aux529 + aux532 + aux533)))
c Var 'aux1977' direct represents '0' with '-18221'
c Var 'aux1977' direct represents '1' with '18221'
c Var 'aux1977' order represents '1' with '1'
c Var 'aux1977' order represents '0' with '-18221'
c Encoding variable: aux1978 with domain: bool (representing constraint ((aux535 + aux538 + aux539)<=1))
c Var 'aux1978' direct represents '0' with '-18222'
c Var 'aux1978' direct represents '1' with '18222'
c Var 'aux1978' order represents '1' with '1'
c Var 'aux1978' order represents '0' with '-18222'
c Encoding variable: aux1979 with domain: bool (representing constraint (1<=(aux535 + aux538 + aux539)))
c Var 'aux1979' direct represents '0' with '-18223'
c Var 'aux1979' direct represents '1' with '18223'
c Var 'aux1979' order represents '1' with '1'
c Var 'aux1979' order represents '0' with '-18223'
c Encoding variable: aux1980 with domain: bool (representing constraint ((aux541 + aux544 + aux545)<=1))
c Var 'aux1980' direct represents '0' with '-18224'
c Var 'aux1980' direct represents '1' with '18224'
c Var 'aux1980' order represents '1' with '1'
c Var 'aux1980' order represents '0' with '-18224'
c Encoding variable: aux1981 with domain: bool (representing constraint (1<=(aux541 + aux544 + aux545)))
c Var 'aux1981' direct represents '0' with '-18225'
c Var 'aux1981' direct represents '1' with '18225'
c Var 'aux1981' order represents '1' with '1'
c Var 'aux1981' order represents '0' with '-18225'
c Encoding variable: aux1982 with domain: bool (representing constraint ((aux547 + aux550 + aux551)<=1))
c Var 'aux1982' direct represents '0' with '-18226'
c Var 'aux1982' direct represents '1' with '18226'
c Var 'aux1982' order represents '1' with '1'
c Var 'aux1982' order represents '0' with '-18226'
c Encoding variable: aux1983 with domain: bool (representing constraint (1<=(aux547 + aux550 + aux551)))
c Var 'aux1983' direct represents '0' with '-18227'
c Var 'aux1983' direct represents '1' with '18227'
c Var 'aux1983' order represents '1' with '1'
c Var 'aux1983' order represents '0' with '-18227'
c Encoding variable: aux1984 with domain: bool (representing constraint ((aux553 + aux556 + aux557)<=1))
c Var 'aux1984' direct represents '0' with '-18228'
c Var 'aux1984' direct represents '1' with '18228'
c Var 'aux1984' order represents '1' with '1'
c Var 'aux1984' order represents '0' with '-18228'
c Encoding variable: aux1985 with domain: bool (representing constraint (1<=(aux553 + aux556 + aux557)))
c Var 'aux1985' direct represents '0' with '-18229'
c Var 'aux1985' direct represents '1' with '18229'
c Var 'aux1985' order represents '1' with '1'
c Var 'aux1985' order represents '0' with '-18229'
c Encoding variable: aux1986 with domain: bool (representing constraint ((aux559 + aux562 + aux563)<=1))
c Var 'aux1986' direct represents '0' with '-18230'
c Var 'aux1986' direct represents '1' with '18230'
c Var 'aux1986' order represents '1' with '1'
c Var 'aux1986' order represents '0' with '-18230'
c Encoding variable: aux1987 with domain: bool (representing constraint (1<=(aux559 + aux562 + aux563)))
c Var 'aux1987' direct represents '0' with '-18231'
c Var 'aux1987' direct represents '1' with '18231'
c Var 'aux1987' order represents '1' with '1'
c Var 'aux1987' order represents '0' with '-18231'
c Encoding variable: aux1988 with domain: bool (representing constraint ((aux565 + aux568 + aux569)<=1))
c Var 'aux1988' direct represents '0' with '-18232'
c Var 'aux1988' direct represents '1' with '18232'
c Var 'aux1988' order represents '1' with '1'
c Var 'aux1988' order represents '0' with '-18232'
c Encoding variable: aux1989 with domain: bool (representing constraint (1<=(aux565 + aux568 + aux569)))
c Var 'aux1989' direct represents '0' with '-18233'
c Var 'aux1989' direct represents '1' with '18233'
c Var 'aux1989' order represents '1' with '1'
c Var 'aux1989' order represents '0' with '-18233'
c Encoding variable: aux1990 with domain: bool (representing constraint ((aux571 + aux574 + aux575)<=1))
c Var 'aux1990' direct represents '0' with '-18234'
c Var 'aux1990' direct represents '1' with '18234'
c Var 'aux1990' order represents '1' with '1'
c Var 'aux1990' order represents '0' with '-18234'
c Encoding variable: aux1991 with domain: bool (representing constraint (1<=(aux571 + aux574 + aux575)))
c Var 'aux1991' direct represents '0' with '-18235'
c Var 'aux1991' direct represents '1' with '18235'
c Var 'aux1991' order represents '1' with '1'
c Var 'aux1991' order represents '0' with '-18235'
c Encoding variable: aux1992 with domain: bool (representing constraint ((aux577 + aux580 + aux581)<=1))
c Var 'aux1992' direct represents '0' with '-18236'
c Var 'aux1992' direct represents '1' with '18236'
c Var 'aux1992' order represents '1' with '1'
c Var 'aux1992' order represents '0' with '-18236'
c Encoding variable: aux1993 with domain: bool (representing constraint (1<=(aux577 + aux580 + aux581)))
c Var 'aux1993' direct represents '0' with '-18237'
c Var 'aux1993' direct represents '1' with '18237'
c Var 'aux1993' order represents '1' with '1'
c Var 'aux1993' order represents '0' with '-18237'
c Encoding variable: aux1994 with domain: bool (representing constraint ((aux583 + aux586 + aux587)<=1))
c Var 'aux1994' direct represents '0' with '-18238'
c Var 'aux1994' direct represents '1' with '18238'
c Var 'aux1994' order represents '1' with '1'
c Var 'aux1994' order represents '0' with '-18238'
c Encoding variable: aux1995 with domain: bool (representing constraint (1<=(aux583 + aux586 + aux587)))
c Var 'aux1995' direct represents '0' with '-18239'
c Var 'aux1995' direct represents '1' with '18239'
c Var 'aux1995' order represents '1' with '1'
c Var 'aux1995' order represents '0' with '-18239'
c Encoding variable: aux1996 with domain: bool (representing constraint ((aux589 + aux592 + aux593)<=1))
c Var 'aux1996' direct represents '0' with '-18240'
c Var 'aux1996' direct represents '1' with '18240'
c Var 'aux1996' order represents '1' with '1'
c Var 'aux1996' order represents '0' with '-18240'
c Encoding variable: aux1997 with domain: bool (representing constraint (1<=(aux589 + aux592 + aux593)))
c Var 'aux1997' direct represents '0' with '-18241'
c Var 'aux1997' direct represents '1' with '18241'
c Var 'aux1997' order represents '1' with '1'
c Var 'aux1997' order represents '0' with '-18241'
c Encoding variable: aux1998 with domain: bool (representing constraint ((aux595 + aux598 + aux599)<=1))
c Var 'aux1998' direct represents '0' with '-18242'
c Var 'aux1998' direct represents '1' with '18242'
c Var 'aux1998' order represents '1' with '1'
c Var 'aux1998' order represents '0' with '-18242'
c Encoding variable: aux1999 with domain: bool (representing constraint (1<=(aux595 + aux598 + aux599)))
c Var 'aux1999' direct represents '0' with '-18243'
c Var 'aux1999' direct represents '1' with '18243'
c Var 'aux1999' order represents '1' with '1'
c Var 'aux1999' order represents '0' with '-18243'
c Encoding variable: aux2000 with domain: bool (representing constraint ((aux601 + aux604 + aux605)<=1))
c Var 'aux2000' direct represents '0' with '-18244'
c Var 'aux2000' direct represents '1' with '18244'
c Var 'aux2000' order represents '1' with '1'
c Var 'aux2000' order represents '0' with '-18244'
c Encoding variable: aux2001 with domain: bool (representing constraint (1<=(aux601 + aux604 + aux605)))
c Var 'aux2001' direct represents '0' with '-18245'
c Var 'aux2001' direct represents '1' with '18245'
c Var 'aux2001' order represents '1' with '1'
c Var 'aux2001' order represents '0' with '-18245'
c Encoding variable: aux2002 with domain: bool (representing constraint ((aux607 + aux610 + aux611)<=1))
c Var 'aux2002' direct represents '0' with '-18246'
c Var 'aux2002' direct represents '1' with '18246'
c Var 'aux2002' order represents '1' with '1'
c Var 'aux2002' order represents '0' with '-18246'
c Encoding variable: aux2003 with domain: bool (representing constraint (1<=(aux607 + aux610 + aux611)))
c Var 'aux2003' direct represents '0' with '-18247'
c Var 'aux2003' direct represents '1' with '18247'
c Var 'aux2003' order represents '1' with '1'
c Var 'aux2003' order represents '0' with '-18247'
c Encoding variable: aux2004 with domain: bool (representing constraint ((aux613 + aux616 + aux617)<=1))
c Var 'aux2004' direct represents '0' with '-18248'
c Var 'aux2004' direct represents '1' with '18248'
c Var 'aux2004' order represents '1' with '1'
c Var 'aux2004' order represents '0' with '-18248'
c Encoding variable: aux2005 with domain: bool (representing constraint (1<=(aux613 + aux616 + aux617)))
c Var 'aux2005' direct represents '0' with '-18249'
c Var 'aux2005' direct represents '1' with '18249'
c Var 'aux2005' order represents '1' with '1'
c Var 'aux2005' order represents '0' with '-18249'
c Encoding variable: aux2006 with domain: bool (representing constraint ((aux619 + aux622 + aux623)<=1))
c Var 'aux2006' direct represents '0' with '-18250'
c Var 'aux2006' direct represents '1' with '18250'
c Var 'aux2006' order represents '1' with '1'
c Var 'aux2006' order represents '0' with '-18250'
c Encoding variable: aux2007 with domain: bool (representing constraint (1<=(aux619 + aux622 + aux623)))
c Var 'aux2007' direct represents '0' with '-18251'
c Var 'aux2007' direct represents '1' with '18251'
c Var 'aux2007' order represents '1' with '1'
c Var 'aux2007' order represents '0' with '-18251'
c Encoding variable: aux2008 with domain: bool (representing constraint ((aux625 + aux628 + aux629)<=1))
c Var 'aux2008' direct represents '0' with '-18252'
c Var 'aux2008' direct represents '1' with '18252'
c Var 'aux2008' order represents '1' with '1'
c Var 'aux2008' order represents '0' with '-18252'
c Encoding variable: aux2009 with domain: bool (representing constraint (1<=(aux625 + aux628 + aux629)))
c Var 'aux2009' direct represents '0' with '-18253'
c Var 'aux2009' direct represents '1' with '18253'
c Var 'aux2009' order represents '1' with '1'
c Var 'aux2009' order represents '0' with '-18253'
c Encoding variable: aux2010 with domain: bool (representing constraint ((aux631 + aux634 + aux635)<=1))
c Var 'aux2010' direct represents '0' with '-18254'
c Var 'aux2010' direct represents '1' with '18254'
c Var 'aux2010' order represents '1' with '1'
c Var 'aux2010' order represents '0' with '-18254'
c Encoding variable: aux2011 with domain: bool (representing constraint (1<=(aux631 + aux634 + aux635)))
c Var 'aux2011' direct represents '0' with '-18255'
c Var 'aux2011' direct represents '1' with '18255'
c Var 'aux2011' order represents '1' with '1'
c Var 'aux2011' order represents '0' with '-18255'
c Encoding variable: aux2012 with domain: bool (representing constraint ((aux637 + aux640 + aux641)<=1))
c Var 'aux2012' direct represents '0' with '-18256'
c Var 'aux2012' direct represents '1' with '18256'
c Var 'aux2012' order represents '1' with '1'
c Var 'aux2012' order represents '0' with '-18256'
c Encoding variable: aux2013 with domain: bool (representing constraint (1<=(aux637 + aux640 + aux641)))
c Var 'aux2013' direct represents '0' with '-18257'
c Var 'aux2013' direct represents '1' with '18257'
c Var 'aux2013' order represents '1' with '1'
c Var 'aux2013' order represents '0' with '-18257'
c Encoding variable: aux2014 with domain: bool (representing constraint ((aux643 + aux646 + aux647)<=1))
c Var 'aux2014' direct represents '0' with '-18258'
c Var 'aux2014' direct represents '1' with '18258'
c Var 'aux2014' order represents '1' with '1'
c Var 'aux2014' order represents '0' with '-18258'
c Encoding variable: aux2015 with domain: bool (representing constraint (1<=(aux643 + aux646 + aux647)))
c Var 'aux2015' direct represents '0' with '-18259'
c Var 'aux2015' direct represents '1' with '18259'
c Var 'aux2015' order represents '1' with '1'
c Var 'aux2015' order represents '0' with '-18259'
c Encoding variable: aux2016 with domain: bool (representing constraint ((aux649 + aux652 + aux653)<=1))
c Var 'aux2016' direct represents '0' with '-18260'
c Var 'aux2016' direct represents '1' with '18260'
c Var 'aux2016' order represents '1' with '1'
c Var 'aux2016' order represents '0' with '-18260'
c Encoding variable: aux2017 with domain: bool (representing constraint (1<=(aux649 + aux652 + aux653)))
c Var 'aux2017' direct represents '0' with '-18261'
c Var 'aux2017' direct represents '1' with '18261'
c Var 'aux2017' order represents '1' with '1'
c Var 'aux2017' order represents '0' with '-18261'
c Encoding variable: aux2018 with domain: bool (representing constraint ((aux655 + aux658 + aux659)<=1))
c Var 'aux2018' direct represents '0' with '-18262'
c Var 'aux2018' direct represents '1' with '18262'
c Var 'aux2018' order represents '1' with '1'
c Var 'aux2018' order represents '0' with '-18262'
c Encoding variable: aux2019 with domain: bool (representing constraint (1<=(aux655 + aux658 + aux659)))
c Var 'aux2019' direct represents '0' with '-18263'
c Var 'aux2019' direct represents '1' with '18263'
c Var 'aux2019' order represents '1' with '1'
c Var 'aux2019' order represents '0' with '-18263'
c Encoding variable: aux2020 with domain: bool (representing constraint ((aux661 + aux664 + aux665)<=1))
c Var 'aux2020' direct represents '0' with '-18264'
c Var 'aux2020' direct represents '1' with '18264'
c Var 'aux2020' order represents '1' with '1'
c Var 'aux2020' order represents '0' with '-18264'
c Encoding variable: aux2021 with domain: bool (representing constraint (1<=(aux661 + aux664 + aux665)))
c Var 'aux2021' direct represents '0' with '-18265'
c Var 'aux2021' direct represents '1' with '18265'
c Var 'aux2021' order represents '1' with '1'
c Var 'aux2021' order represents '0' with '-18265'
c Encoding variable: aux2022 with domain: bool (representing constraint ((aux667 + aux670 + aux671)<=1))
c Var 'aux2022' direct represents '0' with '-18266'
c Var 'aux2022' direct represents '1' with '18266'
c Var 'aux2022' order represents '1' with '1'
c Var 'aux2022' order represents '0' with '-18266'
c Encoding variable: aux2023 with domain: bool (representing constraint (1<=(aux667 + aux670 + aux671)))
c Var 'aux2023' direct represents '0' with '-18267'
c Var 'aux2023' direct represents '1' with '18267'
c Var 'aux2023' order represents '1' with '1'
c Var 'aux2023' order represents '0' with '-18267'
c Encoding variable: aux2024 with domain: bool (representing constraint ((aux673 + aux676 + aux677)<=1))
c Var 'aux2024' direct represents '0' with '-18268'
c Var 'aux2024' direct represents '1' with '18268'
c Var 'aux2024' order represents '1' with '1'
c Var 'aux2024' order represents '0' with '-18268'
c Encoding variable: aux2025 with domain: bool (representing constraint (1<=(aux673 + aux676 + aux677)))
c Var 'aux2025' direct represents '0' with '-18269'
c Var 'aux2025' direct represents '1' with '18269'
c Var 'aux2025' order represents '1' with '1'
c Var 'aux2025' order represents '0' with '-18269'
c Encoding variable: aux2026 with domain: bool (representing constraint ((aux679 + aux682 + aux683)<=1))
c Var 'aux2026' direct represents '0' with '-18270'
c Var 'aux2026' direct represents '1' with '18270'
c Var 'aux2026' order represents '1' with '1'
c Var 'aux2026' order represents '0' with '-18270'
c Encoding variable: aux2027 with domain: bool (representing constraint (1<=(aux679 + aux682 + aux683)))
c Var 'aux2027' direct represents '0' with '-18271'
c Var 'aux2027' direct represents '1' with '18271'
c Var 'aux2027' order represents '1' with '1'
c Var 'aux2027' order represents '0' with '-18271'
c Encoding variable: aux2028 with domain: bool (representing constraint ((aux685 + aux688 + aux689)<=1))
c Var 'aux2028' direct represents '0' with '-18272'
c Var 'aux2028' direct represents '1' with '18272'
c Var 'aux2028' order represents '1' with '1'
c Var 'aux2028' order represents '0' with '-18272'
c Encoding variable: aux2029 with domain: bool (representing constraint (1<=(aux685 + aux688 + aux689)))
c Var 'aux2029' direct represents '0' with '-18273'
c Var 'aux2029' direct represents '1' with '18273'
c Var 'aux2029' order represents '1' with '1'
c Var 'aux2029' order represents '0' with '-18273'
c Encoding variable: aux2030 with domain: bool (representing constraint ((aux691 + aux694 + aux695)<=1))
c Var 'aux2030' direct represents '0' with '-18274'
c Var 'aux2030' direct represents '1' with '18274'
c Var 'aux2030' order represents '1' with '1'
c Var 'aux2030' order represents '0' with '-18274'
c Encoding variable: aux2031 with domain: bool (representing constraint (1<=(aux691 + aux694 + aux695)))
c Var 'aux2031' direct represents '0' with '-18275'
c Var 'aux2031' direct represents '1' with '18275'
c Var 'aux2031' order represents '1' with '1'
c Var 'aux2031' order represents '0' with '-18275'
c Encoding variable: aux2032 with domain: bool (representing constraint ((aux697 + aux700 + aux701)<=1))
c Var 'aux2032' direct represents '0' with '-18276'
c Var 'aux2032' direct represents '1' with '18276'
c Var 'aux2032' order represents '1' with '1'
c Var 'aux2032' order represents '0' with '-18276'
c Encoding variable: aux2033 with domain: bool (representing constraint (1<=(aux697 + aux700 + aux701)))
c Var 'aux2033' direct represents '0' with '-18277'
c Var 'aux2033' direct represents '1' with '18277'
c Var 'aux2033' order represents '1' with '1'
c Var 'aux2033' order represents '0' with '-18277'
c Encoding variable: aux2034 with domain: bool (representing constraint ((aux703 + aux706 + aux707)<=1))
c Var 'aux2034' direct represents '0' with '-18278'
c Var 'aux2034' direct represents '1' with '18278'
c Var 'aux2034' order represents '1' with '1'
c Var 'aux2034' order represents '0' with '-18278'
c Encoding variable: aux2035 with domain: bool (representing constraint (1<=(aux703 + aux706 + aux707)))
c Var 'aux2035' direct represents '0' with '-18279'
c Var 'aux2035' direct represents '1' with '18279'
c Var 'aux2035' order represents '1' with '1'
c Var 'aux2035' order represents '0' with '-18279'
c Encoding variable: aux2036 with domain: bool (representing constraint ((aux709 + aux712 + aux713)<=1))
c Var 'aux2036' direct represents '0' with '-18280'
c Var 'aux2036' direct represents '1' with '18280'
c Var 'aux2036' order represents '1' with '1'
c Var 'aux2036' order represents '0' with '-18280'
c Encoding variable: aux2037 with domain: bool (representing constraint (1<=(aux709 + aux712 + aux713)))
c Var 'aux2037' direct represents '0' with '-18281'
c Var 'aux2037' direct represents '1' with '18281'
c Var 'aux2037' order represents '1' with '1'
c Var 'aux2037' order represents '0' with '-18281'
c Encoding variable: aux2038 with domain: bool (representing constraint ((aux715 + aux718 + aux719)<=1))
c Var 'aux2038' direct represents '0' with '-18282'
c Var 'aux2038' direct represents '1' with '18282'
c Var 'aux2038' order represents '1' with '1'
c Var 'aux2038' order represents '0' with '-18282'
c Encoding variable: aux2039 with domain: bool (representing constraint (1<=(aux715 + aux718 + aux719)))
c Var 'aux2039' direct represents '0' with '-18283'
c Var 'aux2039' direct represents '1' with '18283'
c Var 'aux2039' order represents '1' with '1'
c Var 'aux2039' order represents '0' with '-18283'
c Encoding variable: aux2040 with domain: bool (representing constraint ((aux721 + aux724 + aux725)<=1))
c Var 'aux2040' direct represents '0' with '-18284'
c Var 'aux2040' direct represents '1' with '18284'
c Var 'aux2040' order represents '1' with '1'
c Var 'aux2040' order represents '0' with '-18284'
c Encoding variable: aux2041 with domain: bool (representing constraint (1<=(aux721 + aux724 + aux725)))
c Var 'aux2041' direct represents '0' with '-18285'
c Var 'aux2041' direct represents '1' with '18285'
c Var 'aux2041' order represents '1' with '1'
c Var 'aux2041' order represents '0' with '-18285'
c Encoding variable: aux2042 with domain: bool (representing constraint ((aux727 + aux730 + aux731)<=1))
c Var 'aux2042' direct represents '0' with '-18286'
c Var 'aux2042' direct represents '1' with '18286'
c Var 'aux2042' order represents '1' with '1'
c Var 'aux2042' order represents '0' with '-18286'
c Encoding variable: aux2043 with domain: bool (representing constraint (1<=(aux727 + aux730 + aux731)))
c Var 'aux2043' direct represents '0' with '-18287'
c Var 'aux2043' direct represents '1' with '18287'
c Var 'aux2043' order represents '1' with '1'
c Var 'aux2043' order represents '0' with '-18287'
c Encoding variable: aux2044 with domain: bool (representing constraint ((aux733 + aux736 + aux737)<=1))
c Var 'aux2044' direct represents '0' with '-18288'
c Var 'aux2044' direct represents '1' with '18288'
c Var 'aux2044' order represents '1' with '1'
c Var 'aux2044' order represents '0' with '-18288'
c Encoding variable: aux2045 with domain: bool (representing constraint (1<=(aux733 + aux736 + aux737)))
c Var 'aux2045' direct represents '0' with '-18289'
c Var 'aux2045' direct represents '1' with '18289'
c Var 'aux2045' order represents '1' with '1'
c Var 'aux2045' order represents '0' with '-18289'
c Encoding variable: aux2046 with domain: bool (representing constraint ((aux739 + aux742 + aux743)<=1))
c Var 'aux2046' direct represents '0' with '-18290'
c Var 'aux2046' direct represents '1' with '18290'
c Var 'aux2046' order represents '1' with '1'
c Var 'aux2046' order represents '0' with '-18290'
c Encoding variable: aux2047 with domain: bool (representing constraint (1<=(aux739 + aux742 + aux743)))
c Var 'aux2047' direct represents '0' with '-18291'
c Var 'aux2047' direct represents '1' with '18291'
c Var 'aux2047' order represents '1' with '1'
c Var 'aux2047' order represents '0' with '-18291'
c Encoding variable: aux2048 with domain: bool (representing constraint ((aux745 + aux748 + aux749)<=1))
c Var 'aux2048' direct represents '0' with '-18292'
c Var 'aux2048' direct represents '1' with '18292'
c Var 'aux2048' order represents '1' with '1'
c Var 'aux2048' order represents '0' with '-18292'
c Encoding variable: aux2049 with domain: bool (representing constraint (1<=(aux745 + aux748 + aux749)))
c Var 'aux2049' direct represents '0' with '-18293'
c Var 'aux2049' direct represents '1' with '18293'
c Var 'aux2049' order represents '1' with '1'
c Var 'aux2049' order represents '0' with '-18293'
c Encoding variable: aux2050 with domain: bool (representing constraint ((aux751 + aux754 + aux755)<=1))
c Var 'aux2050' direct represents '0' with '-18294'
c Var 'aux2050' direct represents '1' with '18294'
c Var 'aux2050' order represents '1' with '1'
c Var 'aux2050' order represents '0' with '-18294'
c Encoding variable: aux2051 with domain: bool (representing constraint (1<=(aux751 + aux754 + aux755)))
c Var 'aux2051' direct represents '0' with '-18295'
c Var 'aux2051' direct represents '1' with '18295'
c Var 'aux2051' order represents '1' with '1'
c Var 'aux2051' order represents '0' with '-18295'
c Encoding variable: aux2052 with domain: bool (representing constraint ((aux757 + aux760 + aux761)<=1))
c Var 'aux2052' direct represents '0' with '-18296'
c Var 'aux2052' direct represents '1' with '18296'
c Var 'aux2052' order represents '1' with '1'
c Var 'aux2052' order represents '0' with '-18296'
c Encoding variable: aux2053 with domain: bool (representing constraint (1<=(aux757 + aux760 + aux761)))
c Var 'aux2053' direct represents '0' with '-18297'
c Var 'aux2053' direct represents '1' with '18297'
c Var 'aux2053' order represents '1' with '1'
c Var 'aux2053' order represents '0' with '-18297'
c Encoding variable: aux2054 with domain: bool (representing constraint ((aux763 + aux766 + aux767)<=1))
c Var 'aux2054' direct represents '0' with '-18298'
c Var 'aux2054' direct represents '1' with '18298'
c Var 'aux2054' order represents '1' with '1'
c Var 'aux2054' order represents '0' with '-18298'
c Encoding variable: aux2055 with domain: bool (representing constraint (1<=(aux763 + aux766 + aux767)))
c Var 'aux2055' direct represents '0' with '-18299'
c Var 'aux2055' direct represents '1' with '18299'
c Var 'aux2055' order represents '1' with '1'
c Var 'aux2055' order represents '0' with '-18299'
c Encoding variable: aux2056 with domain: bool (representing constraint ((aux769 + aux772 + aux773)<=1))
c Var 'aux2056' direct represents '0' with '-18300'
c Var 'aux2056' direct represents '1' with '18300'
c Var 'aux2056' order represents '1' with '1'
c Var 'aux2056' order represents '0' with '-18300'
c Encoding variable: aux2057 with domain: bool (representing constraint (1<=(aux769 + aux772 + aux773)))
c Var 'aux2057' direct represents '0' with '-18301'
c Var 'aux2057' direct represents '1' with '18301'
c Var 'aux2057' order represents '1' with '1'
c Var 'aux2057' order represents '0' with '-18301'
c Encoding variable: aux2058 with domain: bool (representing constraint ((aux775 + aux778 + aux779)<=1))
c Var 'aux2058' direct represents '0' with '-18302'
c Var 'aux2058' direct represents '1' with '18302'
c Var 'aux2058' order represents '1' with '1'
c Var 'aux2058' order represents '0' with '-18302'
c Encoding variable: aux2059 with domain: bool (representing constraint (1<=(aux775 + aux778 + aux779)))
c Var 'aux2059' direct represents '0' with '-18303'
c Var 'aux2059' direct represents '1' with '18303'
c Var 'aux2059' order represents '1' with '1'
c Var 'aux2059' order represents '0' with '-18303'
c Encoding variable: aux2060 with domain: bool (representing constraint ((aux781 + aux784 + aux785)<=1))
c Var 'aux2060' direct represents '0' with '-18304'
c Var 'aux2060' direct represents '1' with '18304'
c Var 'aux2060' order represents '1' with '1'
c Var 'aux2060' order represents '0' with '-18304'
c Encoding variable: aux2061 with domain: bool (representing constraint (1<=(aux781 + aux784 + aux785)))
c Var 'aux2061' direct represents '0' with '-18305'
c Var 'aux2061' direct represents '1' with '18305'
c Var 'aux2061' order represents '1' with '1'
c Var 'aux2061' order represents '0' with '-18305'
c Encoding variable: aux2062 with domain: bool (representing constraint ((aux787 + aux790 + aux791)<=1))
c Var 'aux2062' direct represents '0' with '-18306'
c Var 'aux2062' direct represents '1' with '18306'
c Var 'aux2062' order represents '1' with '1'
c Var 'aux2062' order represents '0' with '-18306'
c Encoding variable: aux2063 with domain: bool (representing constraint (1<=(aux787 + aux790 + aux791)))
c Var 'aux2063' direct represents '0' with '-18307'
c Var 'aux2063' direct represents '1' with '18307'
c Var 'aux2063' order represents '1' with '1'
c Var 'aux2063' order represents '0' with '-18307'
c Encoding variable: aux2064 with domain: bool (representing constraint ((aux793 + aux796 + aux797)<=1))
c Var 'aux2064' direct represents '0' with '-18308'
c Var 'aux2064' direct represents '1' with '18308'
c Var 'aux2064' order represents '1' with '1'
c Var 'aux2064' order represents '0' with '-18308'
c Encoding variable: aux2065 with domain: bool (representing constraint (1<=(aux793 + aux796 + aux797)))
c Var 'aux2065' direct represents '0' with '-18309'
c Var 'aux2065' direct represents '1' with '18309'
c Var 'aux2065' order represents '1' with '1'
c Var 'aux2065' order represents '0' with '-18309'
c Encoding variable: aux2066 with domain: bool (representing constraint ((aux799 + aux802 + aux803)<=1))
c Var 'aux2066' direct represents '0' with '-18310'
c Var 'aux2066' direct represents '1' with '18310'
c Var 'aux2066' order represents '1' with '1'
c Var 'aux2066' order represents '0' with '-18310'
c Encoding variable: aux2067 with domain: bool (representing constraint (1<=(aux799 + aux802 + aux803)))
c Var 'aux2067' direct represents '0' with '-18311'
c Var 'aux2067' direct represents '1' with '18311'
c Var 'aux2067' order represents '1' with '1'
c Var 'aux2067' order represents '0' with '-18311'
c Encoding variable: aux2068 with domain: bool (representing constraint ((aux805 + aux808 + aux809)<=1))
c Var 'aux2068' direct represents '0' with '-18312'
c Var 'aux2068' direct represents '1' with '18312'
c Var 'aux2068' order represents '1' with '1'
c Var 'aux2068' order represents '0' with '-18312'
c Encoding variable: aux2069 with domain: bool (representing constraint (1<=(aux805 + aux808 + aux809)))
c Var 'aux2069' direct represents '0' with '-18313'
c Var 'aux2069' direct represents '1' with '18313'
c Var 'aux2069' order represents '1' with '1'
c Var 'aux2069' order represents '0' with '-18313'
c Encoding variable: aux2070 with domain: bool (representing constraint ((aux811 + aux814 + aux815)<=1))
c Var 'aux2070' direct represents '0' with '-18314'
c Var 'aux2070' direct represents '1' with '18314'
c Var 'aux2070' order represents '1' with '1'
c Var 'aux2070' order represents '0' with '-18314'
c Encoding variable: aux2071 with domain: bool (representing constraint (1<=(aux811 + aux814 + aux815)))
c Var 'aux2071' direct represents '0' with '-18315'
c Var 'aux2071' direct represents '1' with '18315'
c Var 'aux2071' order represents '1' with '1'
c Var 'aux2071' order represents '0' with '-18315'
c Encoding variable: aux2072 with domain: bool (representing constraint ((aux817 + aux820 + aux821)<=1))
c Var 'aux2072' direct represents '0' with '-18316'
c Var 'aux2072' direct represents '1' with '18316'
c Var 'aux2072' order represents '1' with '1'
c Var 'aux2072' order represents '0' with '-18316'
c Encoding variable: aux2073 with domain: bool (representing constraint (1<=(aux817 + aux820 + aux821)))
c Var 'aux2073' direct represents '0' with '-18317'
c Var 'aux2073' direct represents '1' with '18317'
c Var 'aux2073' order represents '1' with '1'
c Var 'aux2073' order represents '0' with '-18317'
c Encoding variable: aux2074 with domain: bool (representing constraint ((aux823 + aux826 + aux827)<=1))
c Var 'aux2074' direct represents '0' with '-18318'
c Var 'aux2074' direct represents '1' with '18318'
c Var 'aux2074' order represents '1' with '1'
c Var 'aux2074' order represents '0' with '-18318'
c Encoding variable: aux2075 with domain: bool (representing constraint (1<=(aux823 + aux826 + aux827)))
c Var 'aux2075' direct represents '0' with '-18319'
c Var 'aux2075' direct represents '1' with '18319'
c Var 'aux2075' order represents '1' with '1'
c Var 'aux2075' order represents '0' with '-18319'
c Encoding variable: aux2076 with domain: bool (representing constraint ((aux829 + aux832 + aux833)<=1))
c Var 'aux2076' direct represents '0' with '-18320'
c Var 'aux2076' direct represents '1' with '18320'
c Var 'aux2076' order represents '1' with '1'
c Var 'aux2076' order represents '0' with '-18320'
c Encoding variable: aux2077 with domain: bool (representing constraint (1<=(aux829 + aux832 + aux833)))
c Var 'aux2077' direct represents '0' with '-18321'
c Var 'aux2077' direct represents '1' with '18321'
c Var 'aux2077' order represents '1' with '1'
c Var 'aux2077' order represents '0' with '-18321'
c Encoding variable: aux2078 with domain: bool (representing constraint ((aux835 + aux838 + aux839)<=1))
c Var 'aux2078' direct represents '0' with '-18322'
c Var 'aux2078' direct represents '1' with '18322'
c Var 'aux2078' order represents '1' with '1'
c Var 'aux2078' order represents '0' with '-18322'
c Encoding variable: aux2079 with domain: bool (representing constraint (1<=(aux835 + aux838 + aux839)))
c Var 'aux2079' direct represents '0' with '-18323'
c Var 'aux2079' direct represents '1' with '18323'
c Var 'aux2079' order represents '1' with '1'
c Var 'aux2079' order represents '0' with '-18323'
c Encoding variable: aux2080 with domain: bool (representing constraint ((aux841 + aux844 + aux845)<=1))
c Var 'aux2080' direct represents '0' with '-18324'
c Var 'aux2080' direct represents '1' with '18324'
c Var 'aux2080' order represents '1' with '1'
c Var 'aux2080' order represents '0' with '-18324'
c Encoding variable: aux2081 with domain: bool (representing constraint (1<=(aux841 + aux844 + aux845)))
c Var 'aux2081' direct represents '0' with '-18325'
c Var 'aux2081' direct represents '1' with '18325'
c Var 'aux2081' order represents '1' with '1'
c Var 'aux2081' order represents '0' with '-18325'
c Encoding variable: aux2082 with domain: bool (representing constraint ((aux847 + aux850 + aux851)<=1))
c Var 'aux2082' direct represents '0' with '-18326'
c Var 'aux2082' direct represents '1' with '18326'
c Var 'aux2082' order represents '1' with '1'
c Var 'aux2082' order represents '0' with '-18326'
c Encoding variable: aux2083 with domain: bool (representing constraint (1<=(aux847 + aux850 + aux851)))
c Var 'aux2083' direct represents '0' with '-18327'
c Var 'aux2083' direct represents '1' with '18327'
c Var 'aux2083' order represents '1' with '1'
c Var 'aux2083' order represents '0' with '-18327'
c Encoding variable: aux2084 with domain: bool (representing constraint ((aux853 + aux856 + aux857)<=1))
c Var 'aux2084' direct represents '0' with '-18328'
c Var 'aux2084' direct represents '1' with '18328'
c Var 'aux2084' order represents '1' with '1'
c Var 'aux2084' order represents '0' with '-18328'
c Encoding variable: aux2085 with domain: bool (representing constraint (1<=(aux853 + aux856 + aux857)))
c Var 'aux2085' direct represents '0' with '-18329'
c Var 'aux2085' direct represents '1' with '18329'
c Var 'aux2085' order represents '1' with '1'
c Var 'aux2085' order represents '0' with '-18329'
c Encoding variable: aux2086 with domain: bool (representing constraint ((aux859 + aux862 + aux863)<=1))
c Var 'aux2086' direct represents '0' with '-18330'
c Var 'aux2086' direct represents '1' with '18330'
c Var 'aux2086' order represents '1' with '1'
c Var 'aux2086' order represents '0' with '-18330'
c Encoding variable: aux2087 with domain: bool (representing constraint (1<=(aux859 + aux862 + aux863)))
c Var 'aux2087' direct represents '0' with '-18331'
c Var 'aux2087' direct represents '1' with '18331'
c Var 'aux2087' order represents '1' with '1'
c Var 'aux2087' order represents '0' with '-18331'
c Encoding variable: aux2088 with domain: bool (representing constraint ((aux865 + aux868 + aux869)<=1))
c Var 'aux2088' direct represents '0' with '-18332'
c Var 'aux2088' direct represents '1' with '18332'
c Var 'aux2088' order represents '1' with '1'
c Var 'aux2088' order represents '0' with '-18332'
c Encoding variable: aux2089 with domain: bool (representing constraint (1<=(aux865 + aux868 + aux869)))
c Var 'aux2089' direct represents '0' with '-18333'
c Var 'aux2089' direct represents '1' with '18333'
c Var 'aux2089' order represents '1' with '1'
c Var 'aux2089' order represents '0' with '-18333'
c Encoding variable: aux2090 with domain: bool (representing constraint ((aux871 + aux874 + aux875)<=1))
c Var 'aux2090' direct represents '0' with '-18334'
c Var 'aux2090' direct represents '1' with '18334'
c Var 'aux2090' order represents '1' with '1'
c Var 'aux2090' order represents '0' with '-18334'
c Encoding variable: aux2091 with domain: bool (representing constraint (1<=(aux871 + aux874 + aux875)))
c Var 'aux2091' direct represents '0' with '-18335'
c Var 'aux2091' direct represents '1' with '18335'
c Var 'aux2091' order represents '1' with '1'
c Var 'aux2091' order represents '0' with '-18335'
c Encoding variable: aux2092 with domain: bool (representing constraint ((aux877 + aux880 + aux881)<=1))
c Var 'aux2092' direct represents '0' with '-18336'
c Var 'aux2092' direct represents '1' with '18336'
c Var 'aux2092' order represents '1' with '1'
c Var 'aux2092' order represents '0' with '-18336'
c Encoding variable: aux2093 with domain: bool (representing constraint (1<=(aux877 + aux880 + aux881)))
c Var 'aux2093' direct represents '0' with '-18337'
c Var 'aux2093' direct represents '1' with '18337'
c Var 'aux2093' order represents '1' with '1'
c Var 'aux2093' order represents '0' with '-18337'
c Encoding variable: aux2094 with domain: bool (representing constraint ((aux883 + aux886 + aux887)<=1))
c Var 'aux2094' direct represents '0' with '-18338'
c Var 'aux2094' direct represents '1' with '18338'
c Var 'aux2094' order represents '1' with '1'
c Var 'aux2094' order represents '0' with '-18338'
c Encoding variable: aux2095 with domain: bool (representing constraint (1<=(aux883 + aux886 + aux887)))
c Var 'aux2095' direct represents '0' with '-18339'
c Var 'aux2095' direct represents '1' with '18339'
c Var 'aux2095' order represents '1' with '1'
c Var 'aux2095' order represents '0' with '-18339'
c Encoding variable: aux2096 with domain: bool (representing constraint ((aux889 + aux892 + aux893)<=1))
c Var 'aux2096' direct represents '0' with '-18340'
c Var 'aux2096' direct represents '1' with '18340'
c Var 'aux2096' order represents '1' with '1'
c Var 'aux2096' order represents '0' with '-18340'
c Encoding variable: aux2097 with domain: bool (representing constraint (1<=(aux889 + aux892 + aux893)))
c Var 'aux2097' direct represents '0' with '-18341'
c Var 'aux2097' direct represents '1' with '18341'
c Var 'aux2097' order represents '1' with '1'
c Var 'aux2097' order represents '0' with '-18341'
c Encoding variable: aux2098 with domain: bool (representing constraint ((aux895 + aux898 + aux899)<=1))
c Var 'aux2098' direct represents '0' with '-18342'
c Var 'aux2098' direct represents '1' with '18342'
c Var 'aux2098' order represents '1' with '1'
c Var 'aux2098' order represents '0' with '-18342'
c Encoding variable: aux2099 with domain: bool (representing constraint (1<=(aux895 + aux898 + aux899)))
c Var 'aux2099' direct represents '0' with '-18343'
c Var 'aux2099' direct represents '1' with '18343'
c Var 'aux2099' order represents '1' with '1'
c Var 'aux2099' order represents '0' with '-18343'
c Encoding variable: aux2100 with domain: bool (representing constraint ((aux901 + aux904 + aux905)<=1))
c Var 'aux2100' direct represents '0' with '-18344'
c Var 'aux2100' direct represents '1' with '18344'
c Var 'aux2100' order represents '1' with '1'
c Var 'aux2100' order represents '0' with '-18344'
c Encoding variable: aux2101 with domain: bool (representing constraint (1<=(aux901 + aux904 + aux905)))
c Var 'aux2101' direct represents '0' with '-18345'
c Var 'aux2101' direct represents '1' with '18345'
c Var 'aux2101' order represents '1' with '1'
c Var 'aux2101' order represents '0' with '-18345'
c Encoding variable: aux2102 with domain: bool (representing constraint ((aux907 + aux910 + aux911)<=1))
c Var 'aux2102' direct represents '0' with '-18346'
c Var 'aux2102' direct represents '1' with '18346'
c Var 'aux2102' order represents '1' with '1'
c Var 'aux2102' order represents '0' with '-18346'
c Encoding variable: aux2103 with domain: bool (representing constraint (1<=(aux907 + aux910 + aux911)))
c Var 'aux2103' direct represents '0' with '-18347'
c Var 'aux2103' direct represents '1' with '18347'
c Var 'aux2103' order represents '1' with '1'
c Var 'aux2103' order represents '0' with '-18347'
c Encoding variable: aux2104 with domain: bool (representing constraint ((aux913 + aux916 + aux917)<=1))
c Var 'aux2104' direct represents '0' with '-18348'
c Var 'aux2104' direct represents '1' with '18348'
c Var 'aux2104' order represents '1' with '1'
c Var 'aux2104' order represents '0' with '-18348'
c Encoding variable: aux2105 with domain: bool (representing constraint (1<=(aux913 + aux916 + aux917)))
c Var 'aux2105' direct represents '0' with '-18349'
c Var 'aux2105' direct represents '1' with '18349'
c Var 'aux2105' order represents '1' with '1'
c Var 'aux2105' order represents '0' with '-18349'
c Encoding variable: aux2106 with domain: bool (representing constraint ((aux919 + aux922 + aux923)<=1))
c Var 'aux2106' direct represents '0' with '-18350'
c Var 'aux2106' direct represents '1' with '18350'
c Var 'aux2106' order represents '1' with '1'
c Var 'aux2106' order represents '0' with '-18350'
c Encoding variable: aux2107 with domain: bool (representing constraint (1<=(aux919 + aux922 + aux923)))
c Var 'aux2107' direct represents '0' with '-18351'
c Var 'aux2107' direct represents '1' with '18351'
c Var 'aux2107' order represents '1' with '1'
c Var 'aux2107' order represents '0' with '-18351'
c Encoding variable: aux2108 with domain: bool (representing constraint ((aux925 + aux928 + aux929)<=1))
c Var 'aux2108' direct represents '0' with '-18352'
c Var 'aux2108' direct represents '1' with '18352'
c Var 'aux2108' order represents '1' with '1'
c Var 'aux2108' order represents '0' with '-18352'
c Encoding variable: aux2109 with domain: bool (representing constraint (1<=(aux925 + aux928 + aux929)))
c Var 'aux2109' direct represents '0' with '-18353'
c Var 'aux2109' direct represents '1' with '18353'
c Var 'aux2109' order represents '1' with '1'
c Var 'aux2109' order represents '0' with '-18353'
c Encoding variable: aux2110 with domain: bool (representing constraint ((aux931 + aux934 + aux935)<=1))
c Var 'aux2110' direct represents '0' with '-18354'
c Var 'aux2110' direct represents '1' with '18354'
c Var 'aux2110' order represents '1' with '1'
c Var 'aux2110' order represents '0' with '-18354'
c Encoding variable: aux2111 with domain: bool (representing constraint (1<=(aux931 + aux934 + aux935)))
c Var 'aux2111' direct represents '0' with '-18355'
c Var 'aux2111' direct represents '1' with '18355'
c Var 'aux2111' order represents '1' with '1'
c Var 'aux2111' order represents '0' with '-18355'
c Encoding variable: aux2112 with domain: bool (representing constraint ((aux937 + aux940 + aux941)<=1))
c Var 'aux2112' direct represents '0' with '-18356'
c Var 'aux2112' direct represents '1' with '18356'
c Var 'aux2112' order represents '1' with '1'
c Var 'aux2112' order represents '0' with '-18356'
c Encoding variable: aux2113 with domain: bool (representing constraint (1<=(aux937 + aux940 + aux941)))
c Var 'aux2113' direct represents '0' with '-18357'
c Var 'aux2113' direct represents '1' with '18357'
c Var 'aux2113' order represents '1' with '1'
c Var 'aux2113' order represents '0' with '-18357'
c Encoding variable: aux2114 with domain: bool (representing constraint ((aux943 + aux946 + aux947)<=1))
c Var 'aux2114' direct represents '0' with '-18358'
c Var 'aux2114' direct represents '1' with '18358'
c Var 'aux2114' order represents '1' with '1'
c Var 'aux2114' order represents '0' with '-18358'
c Encoding variable: aux2115 with domain: bool (representing constraint (1<=(aux943 + aux946 + aux947)))
c Var 'aux2115' direct represents '0' with '-18359'
c Var 'aux2115' direct represents '1' with '18359'
c Var 'aux2115' order represents '1' with '1'
c Var 'aux2115' order represents '0' with '-18359'
c Encoding variable: aux2116 with domain: bool (representing constraint ((aux949 + aux952 + aux953)<=1))
c Var 'aux2116' direct represents '0' with '-18360'
c Var 'aux2116' direct represents '1' with '18360'
c Var 'aux2116' order represents '1' with '1'
c Var 'aux2116' order represents '0' with '-18360'
c Encoding variable: aux2117 with domain: bool (representing constraint (1<=(aux949 + aux952 + aux953)))
c Var 'aux2117' direct represents '0' with '-18361'
c Var 'aux2117' direct represents '1' with '18361'
c Var 'aux2117' order represents '1' with '1'
c Var 'aux2117' order represents '0' with '-18361'
c Encoding variable: aux2118 with domain: bool (representing constraint ((aux955 + aux958 + aux959)<=1))
c Var 'aux2118' direct represents '0' with '-18362'
c Var 'aux2118' direct represents '1' with '18362'
c Var 'aux2118' order represents '1' with '1'
c Var 'aux2118' order represents '0' with '-18362'
c Encoding variable: aux2119 with domain: bool (representing constraint (1<=(aux955 + aux958 + aux959)))
c Var 'aux2119' direct represents '0' with '-18363'
c Var 'aux2119' direct represents '1' with '18363'
c Var 'aux2119' order represents '1' with '1'
c Var 'aux2119' order represents '0' with '-18363'
c Encoding variable: aux2120 with domain: bool (representing constraint ((aux961 + aux964 + aux965)<=1))
c Var 'aux2120' direct represents '0' with '-18364'
c Var 'aux2120' direct represents '1' with '18364'
c Var 'aux2120' order represents '1' with '1'
c Var 'aux2120' order represents '0' with '-18364'
c Encoding variable: aux2121 with domain: bool (representing constraint (1<=(aux961 + aux964 + aux965)))
c Var 'aux2121' direct represents '0' with '-18365'
c Var 'aux2121' direct represents '1' with '18365'
c Var 'aux2121' order represents '1' with '1'
c Var 'aux2121' order represents '0' with '-18365'
c Encoding variable: aux2122 with domain: bool (representing constraint ((aux967 + aux970 + aux971)<=1))
c Var 'aux2122' direct represents '0' with '-18366'
c Var 'aux2122' direct represents '1' with '18366'
c Var 'aux2122' order represents '1' with '1'
c Var 'aux2122' order represents '0' with '-18366'
c Encoding variable: aux2123 with domain: bool (representing constraint (1<=(aux967 + aux970 + aux971)))
c Var 'aux2123' direct represents '0' with '-18367'
c Var 'aux2123' direct represents '1' with '18367'
c Var 'aux2123' order represents '1' with '1'
c Var 'aux2123' order represents '0' with '-18367'
c Encoding variable: aux2124 with domain: bool (representing constraint ((aux973 + aux976 + aux977)<=1))
c Var 'aux2124' direct represents '0' with '-18368'
c Var 'aux2124' direct represents '1' with '18368'
c Var 'aux2124' order represents '1' with '1'
c Var 'aux2124' order represents '0' with '-18368'
c Encoding variable: aux2125 with domain: bool (representing constraint (1<=(aux973 + aux976 + aux977)))
c Var 'aux2125' direct represents '0' with '-18369'
c Var 'aux2125' direct represents '1' with '18369'
c Var 'aux2125' order represents '1' with '1'
c Var 'aux2125' order represents '0' with '-18369'
c Encoding variable: aux2126 with domain: bool (representing constraint ((aux979 + aux982 + aux983)<=1))
c Var 'aux2126' direct represents '0' with '-18370'
c Var 'aux2126' direct represents '1' with '18370'
c Var 'aux2126' order represents '1' with '1'
c Var 'aux2126' order represents '0' with '-18370'
c Encoding variable: aux2127 with domain: bool (representing constraint (1<=(aux979 + aux982 + aux983)))
c Var 'aux2127' direct represents '0' with '-18371'
c Var 'aux2127' direct represents '1' with '18371'
c Var 'aux2127' order represents '1' with '1'
c Var 'aux2127' order represents '0' with '-18371'
c Encoding variable: aux2128 with domain: bool (representing constraint ((aux985 + aux988 + aux989)<=1))
c Var 'aux2128' direct represents '0' with '-18372'
c Var 'aux2128' direct represents '1' with '18372'
c Var 'aux2128' order represents '1' with '1'
c Var 'aux2128' order represents '0' with '-18372'
c Encoding variable: aux2129 with domain: bool (representing constraint (1<=(aux985 + aux988 + aux989)))
c Var 'aux2129' direct represents '0' with '-18373'
c Var 'aux2129' direct represents '1' with '18373'
c Var 'aux2129' order represents '1' with '1'
c Var 'aux2129' order represents '0' with '-18373'
c Encoding variable: aux2130 with domain: bool (representing constraint ((aux991 + aux994 + aux995)<=1))
c Var 'aux2130' direct represents '0' with '-18374'
c Var 'aux2130' direct represents '1' with '18374'
c Var 'aux2130' order represents '1' with '1'
c Var 'aux2130' order represents '0' with '-18374'
c Encoding variable: aux2131 with domain: bool (representing constraint (1<=(aux991 + aux994 + aux995)))
c Var 'aux2131' direct represents '0' with '-18375'
c Var 'aux2131' direct represents '1' with '18375'
c Var 'aux2131' order represents '1' with '1'
c Var 'aux2131' order represents '0' with '-18375'
c Encoding variable: aux2132 with domain: bool (representing constraint ((aux997 + aux1000 + aux1001)<=1))
c Var 'aux2132' direct represents '0' with '-18376'
c Var 'aux2132' direct represents '1' with '18376'
c Var 'aux2132' order represents '1' with '1'
c Var 'aux2132' order represents '0' with '-18376'
c Encoding variable: aux2133 with domain: bool (representing constraint (1<=(aux997 + aux1000 + aux1001)))
c Var 'aux2133' direct represents '0' with '-18377'
c Var 'aux2133' direct represents '1' with '18377'
c Var 'aux2133' order represents '1' with '1'
c Var 'aux2133' order represents '0' with '-18377'
c Encoding variable: aux2134 with domain: bool (representing constraint ((aux1003 + aux1006 + aux1007)<=1))
c Var 'aux2134' direct represents '0' with '-18378'
c Var 'aux2134' direct represents '1' with '18378'
c Var 'aux2134' order represents '1' with '1'
c Var 'aux2134' order represents '0' with '-18378'
c Encoding variable: aux2135 with domain: bool (representing constraint (1<=(aux1003 + aux1006 + aux1007)))
c Var 'aux2135' direct represents '0' with '-18379'
c Var 'aux2135' direct represents '1' with '18379'
c Var 'aux2135' order represents '1' with '1'
c Var 'aux2135' order represents '0' with '-18379'
c Encoding variable: aux2136 with domain: bool (representing constraint ((aux1009 + aux1012 + aux1013)<=1))
c Var 'aux2136' direct represents '0' with '-18380'
c Var 'aux2136' direct represents '1' with '18380'
c Var 'aux2136' order represents '1' with '1'
c Var 'aux2136' order represents '0' with '-18380'
c Encoding variable: aux2137 with domain: bool (representing constraint (1<=(aux1009 + aux1012 + aux1013)))
c Var 'aux2137' direct represents '0' with '-18381'
c Var 'aux2137' direct represents '1' with '18381'
c Var 'aux2137' order represents '1' with '1'
c Var 'aux2137' order represents '0' with '-18381'
c Encoding variable: aux2138 with domain: bool (representing constraint ((aux1015 + aux1018 + aux1019)<=1))
c Var 'aux2138' direct represents '0' with '-18382'
c Var 'aux2138' direct represents '1' with '18382'
c Var 'aux2138' order represents '1' with '1'
c Var 'aux2138' order represents '0' with '-18382'
c Encoding variable: aux2139 with domain: bool (representing constraint (1<=(aux1015 + aux1018 + aux1019)))
c Var 'aux2139' direct represents '0' with '-18383'
c Var 'aux2139' direct represents '1' with '18383'
c Var 'aux2139' order represents '1' with '1'
c Var 'aux2139' order represents '0' with '-18383'
c Encoding variable: aux2140 with domain: bool (representing constraint ((aux1021 + aux1024 + aux1025)<=1))
c Var 'aux2140' direct represents '0' with '-18384'
c Var 'aux2140' direct represents '1' with '18384'
c Var 'aux2140' order represents '1' with '1'
c Var 'aux2140' order represents '0' with '-18384'
c Encoding variable: aux2141 with domain: bool (representing constraint (1<=(aux1021 + aux1024 + aux1025)))
c Var 'aux2141' direct represents '0' with '-18385'
c Var 'aux2141' direct represents '1' with '18385'
c Var 'aux2141' order represents '1' with '1'
c Var 'aux2141' order represents '0' with '-18385'
c Encoding variable: aux2142 with domain: bool (representing constraint ((aux1027 + aux1030 + aux1031)<=1))
c Var 'aux2142' direct represents '0' with '-18386'
c Var 'aux2142' direct represents '1' with '18386'
c Var 'aux2142' order represents '1' with '1'
c Var 'aux2142' order represents '0' with '-18386'
c Encoding variable: aux2143 with domain: bool (representing constraint (1<=(aux1027 + aux1030 + aux1031)))
c Var 'aux2143' direct represents '0' with '-18387'
c Var 'aux2143' direct represents '1' with '18387'
c Var 'aux2143' order represents '1' with '1'
c Var 'aux2143' order represents '0' with '-18387'
c Encoding variable: aux2144 with domain: bool (representing constraint ((aux1033 + aux1036 + aux1037)<=1))
c Var 'aux2144' direct represents '0' with '-18388'
c Var 'aux2144' direct represents '1' with '18388'
c Var 'aux2144' order represents '1' with '1'
c Var 'aux2144' order represents '0' with '-18388'
c Encoding variable: aux2145 with domain: bool (representing constraint (1<=(aux1033 + aux1036 + aux1037)))
c Var 'aux2145' direct represents '0' with '-18389'
c Var 'aux2145' direct represents '1' with '18389'
c Var 'aux2145' order represents '1' with '1'
c Var 'aux2145' order represents '0' with '-18389'
c Encoding variable: aux2146 with domain: bool (representing constraint ((aux1039 + aux1042 + aux1043)<=1))
c Var 'aux2146' direct represents '0' with '-18390'
c Var 'aux2146' direct represents '1' with '18390'
c Var 'aux2146' order represents '1' with '1'
c Var 'aux2146' order represents '0' with '-18390'
c Encoding variable: aux2147 with domain: bool (representing constraint (1<=(aux1039 + aux1042 + aux1043)))
c Var 'aux2147' direct represents '0' with '-18391'
c Var 'aux2147' direct represents '1' with '18391'
c Var 'aux2147' order represents '1' with '1'
c Var 'aux2147' order represents '0' with '-18391'
c Encoding variable: aux2148 with domain: bool (representing constraint ((aux1045 + aux1048 + aux1049)<=1))
c Var 'aux2148' direct represents '0' with '-18392'
c Var 'aux2148' direct represents '1' with '18392'
c Var 'aux2148' order represents '1' with '1'
c Var 'aux2148' order represents '0' with '-18392'
c Encoding variable: aux2149 with domain: bool (representing constraint (1<=(aux1045 + aux1048 + aux1049)))
c Var 'aux2149' direct represents '0' with '-18393'
c Var 'aux2149' direct represents '1' with '18393'
c Var 'aux2149' order represents '1' with '1'
c Var 'aux2149' order represents '0' with '-18393'
c Encoding variable: aux2150 with domain: bool (representing constraint ((aux1051 + aux1054 + aux1055)<=1))
c Var 'aux2150' direct represents '0' with '-18394'
c Var 'aux2150' direct represents '1' with '18394'
c Var 'aux2150' order represents '1' with '1'
c Var 'aux2150' order represents '0' with '-18394'
c Encoding variable: aux2151 with domain: bool (representing constraint (1<=(aux1051 + aux1054 + aux1055)))
c Var 'aux2151' direct represents '0' with '-18395'
c Var 'aux2151' direct represents '1' with '18395'
c Var 'aux2151' order represents '1' with '1'
c Var 'aux2151' order represents '0' with '-18395'
c Encoding variable: aux2152 with domain: bool (representing constraint ((aux1057 + aux1060 + aux1061)<=1))
c Var 'aux2152' direct represents '0' with '-18396'
c Var 'aux2152' direct represents '1' with '18396'
c Var 'aux2152' order represents '1' with '1'
c Var 'aux2152' order represents '0' with '-18396'
c Encoding variable: aux2153 with domain: bool (representing constraint (1<=(aux1057 + aux1060 + aux1061)))
c Var 'aux2153' direct represents '0' with '-18397'
c Var 'aux2153' direct represents '1' with '18397'
c Var 'aux2153' order represents '1' with '1'
c Var 'aux2153' order represents '0' with '-18397'
c Encoding variable: aux2154 with domain: bool (representing constraint ((aux1063 + aux1066 + aux1067)<=1))
c Var 'aux2154' direct represents '0' with '-18398'
c Var 'aux2154' direct represents '1' with '18398'
c Var 'aux2154' order represents '1' with '1'
c Var 'aux2154' order represents '0' with '-18398'
c Encoding variable: aux2155 with domain: bool (representing constraint (1<=(aux1063 + aux1066 + aux1067)))
c Var 'aux2155' direct represents '0' with '-18399'
c Var 'aux2155' direct represents '1' with '18399'
c Var 'aux2155' order represents '1' with '1'
c Var 'aux2155' order represents '0' with '-18399'
c Encoding variable: aux2156 with domain: bool (representing constraint ((aux1069 + aux1072 + aux1073)<=1))
c Var 'aux2156' direct represents '0' with '-18400'
c Var 'aux2156' direct represents '1' with '18400'
c Var 'aux2156' order represents '1' with '1'
c Var 'aux2156' order represents '0' with '-18400'
c Encoding variable: aux2157 with domain: bool (representing constraint (1<=(aux1069 + aux1072 + aux1073)))
c Var 'aux2157' direct represents '0' with '-18401'
c Var 'aux2157' direct represents '1' with '18401'
c Var 'aux2157' order represents '1' with '1'
c Var 'aux2157' order represents '0' with '-18401'
c Encoding variable: aux2158 with domain: bool (representing constraint ((aux1075 + aux1078 + aux1079)<=1))
c Var 'aux2158' direct represents '0' with '-18402'
c Var 'aux2158' direct represents '1' with '18402'
c Var 'aux2158' order represents '1' with '1'
c Var 'aux2158' order represents '0' with '-18402'
c Encoding variable: aux2159 with domain: bool (representing constraint (1<=(aux1075 + aux1078 + aux1079)))
c Var 'aux2159' direct represents '0' with '-18403'
c Var 'aux2159' direct represents '1' with '18403'
c Var 'aux2159' order represents '1' with '1'
c Var 'aux2159' order represents '0' with '-18403'
c Encoding variable: aux2160 with domain: bool (representing constraint ((aux1081 + aux1084 + aux1085)<=1))
c Var 'aux2160' direct represents '0' with '-18404'
c Var 'aux2160' direct represents '1' with '18404'
c Var 'aux2160' order represents '1' with '1'
c Var 'aux2160' order represents '0' with '-18404'
c Encoding variable: aux2161 with domain: bool (representing constraint (1<=(aux1081 + aux1084 + aux1085)))
c Var 'aux2161' direct represents '0' with '-18405'
c Var 'aux2161' direct represents '1' with '18405'
c Var 'aux2161' order represents '1' with '1'
c Var 'aux2161' order represents '0' with '-18405'
c Encoding variable: aux2162 with domain: bool (representing constraint ((aux1087 + aux1090 + aux1091)<=1))
c Var 'aux2162' direct represents '0' with '-18406'
c Var 'aux2162' direct represents '1' with '18406'
c Var 'aux2162' order represents '1' with '1'
c Var 'aux2162' order represents '0' with '-18406'
c Encoding variable: aux2163 with domain: bool (representing constraint (1<=(aux1087 + aux1090 + aux1091)))
c Var 'aux2163' direct represents '0' with '-18407'
c Var 'aux2163' direct represents '1' with '18407'
c Var 'aux2163' order represents '1' with '1'
c Var 'aux2163' order represents '0' with '-18407'
c Encoding variable: aux2164 with domain: bool (representing constraint ((aux1093 + aux1096 + aux1097)<=1))
c Var 'aux2164' direct represents '0' with '-18408'
c Var 'aux2164' direct represents '1' with '18408'
c Var 'aux2164' order represents '1' with '1'
c Var 'aux2164' order represents '0' with '-18408'
c Encoding variable: aux2165 with domain: bool (representing constraint (1<=(aux1093 + aux1096 + aux1097)))
c Var 'aux2165' direct represents '0' with '-18409'
c Var 'aux2165' direct represents '1' with '18409'
c Var 'aux2165' order represents '1' with '1'
c Var 'aux2165' order represents '0' with '-18409'
c Encoding variable: aux2166 with domain: bool (representing constraint ((aux1099 + aux1102 + aux1103)<=1))
c Var 'aux2166' direct represents '0' with '-18410'
c Var 'aux2166' direct represents '1' with '18410'
c Var 'aux2166' order represents '1' with '1'
c Var 'aux2166' order represents '0' with '-18410'
c Encoding variable: aux2167 with domain: bool (representing constraint (1<=(aux1099 + aux1102 + aux1103)))
c Var 'aux2167' direct represents '0' with '-18411'
c Var 'aux2167' direct represents '1' with '18411'
c Var 'aux2167' order represents '1' with '1'
c Var 'aux2167' order represents '0' with '-18411'
c Encoding variable: aux2168 with domain: bool (representing constraint ((aux1105 + aux1108 + aux1109)<=1))
c Var 'aux2168' direct represents '0' with '-18412'
c Var 'aux2168' direct represents '1' with '18412'
c Var 'aux2168' order represents '1' with '1'
c Var 'aux2168' order represents '0' with '-18412'
c Encoding variable: aux2169 with domain: bool (representing constraint (1<=(aux1105 + aux1108 + aux1109)))
c Var 'aux2169' direct represents '0' with '-18413'
c Var 'aux2169' direct represents '1' with '18413'
c Var 'aux2169' order represents '1' with '1'
c Var 'aux2169' order represents '0' with '-18413'
c Encoding variable: aux2170 with domain: bool (representing constraint ((aux1111 + aux1114 + aux1115)<=1))
c Var 'aux2170' direct represents '0' with '-18414'
c Var 'aux2170' direct represents '1' with '18414'
c Var 'aux2170' order represents '1' with '1'
c Var 'aux2170' order represents '0' with '-18414'
c Encoding variable: aux2171 with domain: bool (representing constraint (1<=(aux1111 + aux1114 + aux1115)))
c Var 'aux2171' direct represents '0' with '-18415'
c Var 'aux2171' direct represents '1' with '18415'
c Var 'aux2171' order represents '1' with '1'
c Var 'aux2171' order represents '0' with '-18415'
c Encoding variable: aux2172 with domain: bool (representing constraint ((aux1117 + aux1120 + aux1121)<=1))
c Var 'aux2172' direct represents '0' with '-18416'
c Var 'aux2172' direct represents '1' with '18416'
c Var 'aux2172' order represents '1' with '1'
c Var 'aux2172' order represents '0' with '-18416'
c Encoding variable: aux2173 with domain: bool (representing constraint (1<=(aux1117 + aux1120 + aux1121)))
c Var 'aux2173' direct represents '0' with '-18417'
c Var 'aux2173' direct represents '1' with '18417'
c Var 'aux2173' order represents '1' with '1'
c Var 'aux2173' order represents '0' with '-18417'
c Encoding variable: aux2174 with domain: bool (representing constraint ((aux1123 + aux1126 + aux1127)<=1))
c Var 'aux2174' direct represents '0' with '-18418'
c Var 'aux2174' direct represents '1' with '18418'
c Var 'aux2174' order represents '1' with '1'
c Var 'aux2174' order represents '0' with '-18418'
c Encoding variable: aux2175 with domain: bool (representing constraint (1<=(aux1123 + aux1126 + aux1127)))
c Var 'aux2175' direct represents '0' with '-18419'
c Var 'aux2175' direct represents '1' with '18419'
c Var 'aux2175' order represents '1' with '1'
c Var 'aux2175' order represents '0' with '-18419'
c Encoding variable: aux2176 with domain: bool (representing constraint ((aux1129 + aux1132 + aux1133)<=1))
c Var 'aux2176' direct represents '0' with '-18420'
c Var 'aux2176' direct represents '1' with '18420'
c Var 'aux2176' order represents '1' with '1'
c Var 'aux2176' order represents '0' with '-18420'
c Encoding variable: aux2177 with domain: bool (representing constraint (1<=(aux1129 + aux1132 + aux1133)))
c Var 'aux2177' direct represents '0' with '-18421'
c Var 'aux2177' direct represents '1' with '18421'
c Var 'aux2177' order represents '1' with '1'
c Var 'aux2177' order represents '0' with '-18421'
c Encoding variable: aux2178 with domain: bool (representing constraint ((aux1135 + aux1138 + aux1139)<=1))
c Var 'aux2178' direct represents '0' with '-18422'
c Var 'aux2178' direct represents '1' with '18422'
c Var 'aux2178' order represents '1' with '1'
c Var 'aux2178' order represents '0' with '-18422'
c Encoding variable: aux2179 with domain: bool (representing constraint (1<=(aux1135 + aux1138 + aux1139)))
c Var 'aux2179' direct represents '0' with '-18423'
c Var 'aux2179' direct represents '1' with '18423'
c Var 'aux2179' order represents '1' with '1'
c Var 'aux2179' order represents '0' with '-18423'
c Encoding variable: aux2180 with domain: bool (representing constraint ((aux1141 + aux1144 + aux1145)<=1))
c Var 'aux2180' direct represents '0' with '-18424'
c Var 'aux2180' direct represents '1' with '18424'
c Var 'aux2180' order represents '1' with '1'
c Var 'aux2180' order represents '0' with '-18424'
c Encoding variable: aux2181 with domain: bool (representing constraint (1<=(aux1141 + aux1144 + aux1145)))
c Var 'aux2181' direct represents '0' with '-18425'
c Var 'aux2181' direct represents '1' with '18425'
c Var 'aux2181' order represents '1' with '1'
c Var 'aux2181' order represents '0' with '-18425'
c Encoding variable: aux2182 with domain: bool (representing constraint ((aux1147 + aux1150 + aux1151)<=1))
c Var 'aux2182' direct represents '0' with '-18426'
c Var 'aux2182' direct represents '1' with '18426'
c Var 'aux2182' order represents '1' with '1'
c Var 'aux2182' order represents '0' with '-18426'
c Encoding variable: aux2183 with domain: bool (representing constraint (1<=(aux1147 + aux1150 + aux1151)))
c Var 'aux2183' direct represents '0' with '-18427'
c Var 'aux2183' direct represents '1' with '18427'
c Var 'aux2183' order represents '1' with '1'
c Var 'aux2183' order represents '0' with '-18427'
c Encoding variable: aux2184 with domain: bool (representing constraint ((aux1153 + aux1156 + aux1157)<=1))
c Var 'aux2184' direct represents '0' with '-18428'
c Var 'aux2184' direct represents '1' with '18428'
c Var 'aux2184' order represents '1' with '1'
c Var 'aux2184' order represents '0' with '-18428'
c Encoding variable: aux2185 with domain: bool (representing constraint (1<=(aux1153 + aux1156 + aux1157)))
c Var 'aux2185' direct represents '0' with '-18429'
c Var 'aux2185' direct represents '1' with '18429'
c Var 'aux2185' order represents '1' with '1'
c Var 'aux2185' order represents '0' with '-18429'
c Encoding variable: aux2186 with domain: bool (representing constraint ((aux1159 + aux1162 + aux1163)<=1))
c Var 'aux2186' direct represents '0' with '-18430'
c Var 'aux2186' direct represents '1' with '18430'
c Var 'aux2186' order represents '1' with '1'
c Var 'aux2186' order represents '0' with '-18430'
c Encoding variable: aux2187 with domain: bool (representing constraint (1<=(aux1159 + aux1162 + aux1163)))
c Var 'aux2187' direct represents '0' with '-18431'
c Var 'aux2187' direct represents '1' with '18431'
c Var 'aux2187' order represents '1' with '1'
c Var 'aux2187' order represents '0' with '-18431'
c Encoding variable: aux2188 with domain: bool (representing constraint ((aux1165 + aux1168 + aux1169)<=1))
c Var 'aux2188' direct represents '0' with '-18432'
c Var 'aux2188' direct represents '1' with '18432'
c Var 'aux2188' order represents '1' with '1'
c Var 'aux2188' order represents '0' with '-18432'
c Encoding variable: aux2189 with domain: bool (representing constraint (1<=(aux1165 + aux1168 + aux1169)))
c Var 'aux2189' direct represents '0' with '-18433'
c Var 'aux2189' direct represents '1' with '18433'
c Var 'aux2189' order represents '1' with '1'
c Var 'aux2189' order represents '0' with '-18433'
c Encoding variable: aux2190 with domain: bool (representing constraint ((aux1171 + aux1174 + aux1175)<=1))
c Var 'aux2190' direct represents '0' with '-18434'
c Var 'aux2190' direct represents '1' with '18434'
c Var 'aux2190' order represents '1' with '1'
c Var 'aux2190' order represents '0' with '-18434'
c Encoding variable: aux2191 with domain: bool (representing constraint (1<=(aux1171 + aux1174 + aux1175)))
c Var 'aux2191' direct represents '0' with '-18435'
c Var 'aux2191' direct represents '1' with '18435'
c Var 'aux2191' order represents '1' with '1'
c Var 'aux2191' order represents '0' with '-18435'
c Encoding variable: aux2192 with domain: bool (representing constraint ((aux1177 + aux1180 + aux1181)<=1))
c Var 'aux2192' direct represents '0' with '-18436'
c Var 'aux2192' direct represents '1' with '18436'
c Var 'aux2192' order represents '1' with '1'
c Var 'aux2192' order represents '0' with '-18436'
c Encoding variable: aux2193 with domain: bool (representing constraint (1<=(aux1177 + aux1180 + aux1181)))
c Var 'aux2193' direct represents '0' with '-18437'
c Var 'aux2193' direct represents '1' with '18437'
c Var 'aux2193' order represents '1' with '1'
c Var 'aux2193' order represents '0' with '-18437'
c Encoding variable: aux2194 with domain: bool (representing constraint ((aux1183 + aux1186 + aux1187)<=1))
c Var 'aux2194' direct represents '0' with '-18438'
c Var 'aux2194' direct represents '1' with '18438'
c Var 'aux2194' order represents '1' with '1'
c Var 'aux2194' order represents '0' with '-18438'
c Encoding variable: aux2195 with domain: bool (representing constraint (1<=(aux1183 + aux1186 + aux1187)))
c Var 'aux2195' direct represents '0' with '-18439'
c Var 'aux2195' direct represents '1' with '18439'
c Var 'aux2195' order represents '1' with '1'
c Var 'aux2195' order represents '0' with '-18439'
c Encoding variable: aux2196 with domain: bool (representing constraint ((aux1189 + aux1192 + aux1193)<=1))
c Var 'aux2196' direct represents '0' with '-18440'
c Var 'aux2196' direct represents '1' with '18440'
c Var 'aux2196' order represents '1' with '1'
c Var 'aux2196' order represents '0' with '-18440'
c Encoding variable: aux2197 with domain: bool (representing constraint (1<=(aux1189 + aux1192 + aux1193)))
c Var 'aux2197' direct represents '0' with '-18441'
c Var 'aux2197' direct represents '1' with '18441'
c Var 'aux2197' order represents '1' with '1'
c Var 'aux2197' order represents '0' with '-18441'
c Encoding variable: aux2198 with domain: bool (representing constraint ((aux1195 + aux1198 + aux1199)<=1))
c Var 'aux2198' direct represents '0' with '-18442'
c Var 'aux2198' direct represents '1' with '18442'
c Var 'aux2198' order represents '1' with '1'
c Var 'aux2198' order represents '0' with '-18442'
c Encoding variable: aux2199 with domain: bool (representing constraint (1<=(aux1195 + aux1198 + aux1199)))
c Var 'aux2199' direct represents '0' with '-18443'
c Var 'aux2199' direct represents '1' with '18443'
c Var 'aux2199' order represents '1' with '1'
c Var 'aux2199' order represents '0' with '-18443'
c Encoding variable: aux2200 with domain: bool (representing constraint ((aux1201 + aux1204 + aux1205)<=1))
c Var 'aux2200' direct represents '0' with '-18444'
c Var 'aux2200' direct represents '1' with '18444'
c Var 'aux2200' order represents '1' with '1'
c Var 'aux2200' order represents '0' with '-18444'
c Encoding variable: aux2201 with domain: bool (representing constraint (1<=(aux1201 + aux1204 + aux1205)))
c Var 'aux2201' direct represents '0' with '-18445'
c Var 'aux2201' direct represents '1' with '18445'
c Var 'aux2201' order represents '1' with '1'
c Var 'aux2201' order represents '0' with '-18445'
c Encoding variable: aux2202 with domain: bool (representing constraint ((aux1207 + aux1210 + aux1211)<=1))
c Var 'aux2202' direct represents '0' with '-18446'
c Var 'aux2202' direct represents '1' with '18446'
c Var 'aux2202' order represents '1' with '1'
c Var 'aux2202' order represents '0' with '-18446'
c Encoding variable: aux2203 with domain: bool (representing constraint (1<=(aux1207 + aux1210 + aux1211)))
c Var 'aux2203' direct represents '0' with '-18447'
c Var 'aux2203' direct represents '1' with '18447'
c Var 'aux2203' order represents '1' with '1'
c Var 'aux2203' order represents '0' with '-18447'
c Encoding variable: aux2204 with domain: bool (representing constraint ((aux1213 + aux1216 + aux1217)<=1))
c Var 'aux2204' direct represents '0' with '-18448'
c Var 'aux2204' direct represents '1' with '18448'
c Var 'aux2204' order represents '1' with '1'
c Var 'aux2204' order represents '0' with '-18448'
c Encoding variable: aux2205 with domain: bool (representing constraint (1<=(aux1213 + aux1216 + aux1217)))
c Var 'aux2205' direct represents '0' with '-18449'
c Var 'aux2205' direct represents '1' with '18449'
c Var 'aux2205' order represents '1' with '1'
c Var 'aux2205' order represents '0' with '-18449'
c Encoding variable: aux2206 with domain: bool (representing constraint ((aux1219 + aux1222 + aux1223)<=1))
c Var 'aux2206' direct represents '0' with '-18450'
c Var 'aux2206' direct represents '1' with '18450'
c Var 'aux2206' order represents '1' with '1'
c Var 'aux2206' order represents '0' with '-18450'
c Encoding variable: aux2207 with domain: bool (representing constraint (1<=(aux1219 + aux1222 + aux1223)))
c Var 'aux2207' direct represents '0' with '-18451'
c Var 'aux2207' direct represents '1' with '18451'
c Var 'aux2207' order represents '1' with '1'
c Var 'aux2207' order represents '0' with '-18451'
c Encoding variable: aux2208 with domain: bool (representing constraint ((aux1225 + aux1228 + aux1229)<=1))
c Var 'aux2208' direct represents '0' with '-18452'
c Var 'aux2208' direct represents '1' with '18452'
c Var 'aux2208' order represents '1' with '1'
c Var 'aux2208' order represents '0' with '-18452'
c Encoding variable: aux2209 with domain: bool (representing constraint (1<=(aux1225 + aux1228 + aux1229)))
c Var 'aux2209' direct represents '0' with '-18453'
c Var 'aux2209' direct represents '1' with '18453'
c Var 'aux2209' order represents '1' with '1'
c Var 'aux2209' order represents '0' with '-18453'
c Encoding variable: aux2210 with domain: bool (representing constraint ((aux1231 + aux1234 + aux1235)<=1))
c Var 'aux2210' direct represents '0' with '-18454'
c Var 'aux2210' direct represents '1' with '18454'
c Var 'aux2210' order represents '1' with '1'
c Var 'aux2210' order represents '0' with '-18454'
c Encoding variable: aux2211 with domain: bool (representing constraint (1<=(aux1231 + aux1234 + aux1235)))
c Var 'aux2211' direct represents '0' with '-18455'
c Var 'aux2211' direct represents '1' with '18455'
c Var 'aux2211' order represents '1' with '1'
c Var 'aux2211' order represents '0' with '-18455'
c Encoding variable: aux2212 with domain: bool (representing constraint ((aux1237 + aux1240 + aux1241)<=1))
c Var 'aux2212' direct represents '0' with '-18456'
c Var 'aux2212' direct represents '1' with '18456'
c Var 'aux2212' order represents '1' with '1'
c Var 'aux2212' order represents '0' with '-18456'
c Encoding variable: aux2213 with domain: bool (representing constraint (1<=(aux1237 + aux1240 + aux1241)))
c Var 'aux2213' direct represents '0' with '-18457'
c Var 'aux2213' direct represents '1' with '18457'
c Var 'aux2213' order represents '1' with '1'
c Var 'aux2213' order represents '0' with '-18457'
c Encoding variable: aux2214 with domain: bool (representing constraint ((aux1243 + aux1246 + aux1247)<=1))
c Var 'aux2214' direct represents '0' with '-18458'
c Var 'aux2214' direct represents '1' with '18458'
c Var 'aux2214' order represents '1' with '1'
c Var 'aux2214' order represents '0' with '-18458'
c Encoding variable: aux2215 with domain: bool (representing constraint (1<=(aux1243 + aux1246 + aux1247)))
c Var 'aux2215' direct represents '0' with '-18459'
c Var 'aux2215' direct represents '1' with '18459'
c Var 'aux2215' order represents '1' with '1'
c Var 'aux2215' order represents '0' with '-18459'
c Encoding variable: aux2216 with domain: bool (representing constraint ((aux1249 + aux1252 + aux1253)<=1))
c Var 'aux2216' direct represents '0' with '-18460'
c Var 'aux2216' direct represents '1' with '18460'
c Var 'aux2216' order represents '1' with '1'
c Var 'aux2216' order represents '0' with '-18460'
c Encoding variable: aux2217 with domain: bool (representing constraint (1<=(aux1249 + aux1252 + aux1253)))
c Var 'aux2217' direct represents '0' with '-18461'
c Var 'aux2217' direct represents '1' with '18461'
c Var 'aux2217' order represents '1' with '1'
c Var 'aux2217' order represents '0' with '-18461'
c Encoding variable: aux2218 with domain: bool (representing constraint ((aux1255 + aux1258 + aux1259)<=1))
c Var 'aux2218' direct represents '0' with '-18462'
c Var 'aux2218' direct represents '1' with '18462'
c Var 'aux2218' order represents '1' with '1'
c Var 'aux2218' order represents '0' with '-18462'
c Encoding variable: aux2219 with domain: bool (representing constraint (1<=(aux1255 + aux1258 + aux1259)))
c Var 'aux2219' direct represents '0' with '-18463'
c Var 'aux2219' direct represents '1' with '18463'
c Var 'aux2219' order represents '1' with '1'
c Var 'aux2219' order represents '0' with '-18463'
c Encoding variable: aux2220 with domain: bool (representing constraint ((aux1261 + aux1264 + aux1265)<=1))
c Var 'aux2220' direct represents '0' with '-18464'
c Var 'aux2220' direct represents '1' with '18464'
c Var 'aux2220' order represents '1' with '1'
c Var 'aux2220' order represents '0' with '-18464'
c Encoding variable: aux2221 with domain: bool (representing constraint (1<=(aux1261 + aux1264 + aux1265)))
c Var 'aux2221' direct represents '0' with '-18465'
c Var 'aux2221' direct represents '1' with '18465'
c Var 'aux2221' order represents '1' with '1'
c Var 'aux2221' order represents '0' with '-18465'
c Encoding variable: aux2222 with domain: bool (representing constraint ((aux1267 + aux1270 + aux1271)<=1))
c Var 'aux2222' direct represents '0' with '-18466'
c Var 'aux2222' direct represents '1' with '18466'
c Var 'aux2222' order represents '1' with '1'
c Var 'aux2222' order represents '0' with '-18466'
c Encoding variable: aux2223 with domain: bool (representing constraint (1<=(aux1267 + aux1270 + aux1271)))
c Var 'aux2223' direct represents '0' with '-18467'
c Var 'aux2223' direct represents '1' with '18467'
c Var 'aux2223' order represents '1' with '1'
c Var 'aux2223' order represents '0' with '-18467'
c Encoding variable: aux2224 with domain: bool (representing constraint ((aux1273 + aux1276 + aux1277)<=1))
c Var 'aux2224' direct represents '0' with '-18468'
c Var 'aux2224' direct represents '1' with '18468'
c Var 'aux2224' order represents '1' with '1'
c Var 'aux2224' order represents '0' with '-18468'
c Encoding variable: aux2225 with domain: bool (representing constraint (1<=(aux1273 + aux1276 + aux1277)))
c Var 'aux2225' direct represents '0' with '-18469'
c Var 'aux2225' direct represents '1' with '18469'
c Var 'aux2225' order represents '1' with '1'
c Var 'aux2225' order represents '0' with '-18469'
c Encoding variable: aux2226 with domain: bool (representing constraint ((aux1279 + aux1282 + aux1283)<=1))
c Var 'aux2226' direct represents '0' with '-18470'
c Var 'aux2226' direct represents '1' with '18470'
c Var 'aux2226' order represents '1' with '1'
c Var 'aux2226' order represents '0' with '-18470'
c Encoding variable: aux2227 with domain: bool (representing constraint (1<=(aux1279 + aux1282 + aux1283)))
c Var 'aux2227' direct represents '0' with '-18471'
c Var 'aux2227' direct represents '1' with '18471'
c Var 'aux2227' order represents '1' with '1'
c Var 'aux2227' order represents '0' with '-18471'
c Encoding variable: aux2228 with domain: bool (representing constraint ((aux1285 + aux1288 + aux1289)<=1))
c Var 'aux2228' direct represents '0' with '-18472'
c Var 'aux2228' direct represents '1' with '18472'
c Var 'aux2228' order represents '1' with '1'
c Var 'aux2228' order represents '0' with '-18472'
c Encoding variable: aux2229 with domain: bool (representing constraint (1<=(aux1285 + aux1288 + aux1289)))
c Var 'aux2229' direct represents '0' with '-18473'
c Var 'aux2229' direct represents '1' with '18473'
c Var 'aux2229' order represents '1' with '1'
c Var 'aux2229' order represents '0' with '-18473'
c Encoding variable: aux2230 with domain: bool (representing constraint ((aux1291 + aux1294 + aux1295)<=1))
c Var 'aux2230' direct represents '0' with '-18474'
c Var 'aux2230' direct represents '1' with '18474'
c Var 'aux2230' order represents '1' with '1'
c Var 'aux2230' order represents '0' with '-18474'
c Encoding variable: aux2231 with domain: bool (representing constraint (1<=(aux1291 + aux1294 + aux1295)))
c Var 'aux2231' direct represents '0' with '-18475'
c Var 'aux2231' direct represents '1' with '18475'
c Var 'aux2231' order represents '1' with '1'
c Var 'aux2231' order represents '0' with '-18475'
c Encoding variable: aux2232 with domain: bool (representing constraint ((aux1297 + aux1300 + aux1301)<=1))
c Var 'aux2232' direct represents '0' with '-18476'
c Var 'aux2232' direct represents '1' with '18476'
c Var 'aux2232' order represents '1' with '1'
c Var 'aux2232' order represents '0' with '-18476'
c Encoding variable: aux2233 with domain: bool (representing constraint (1<=(aux1297 + aux1300 + aux1301)))
c Var 'aux2233' direct represents '0' with '-18477'
c Var 'aux2233' direct represents '1' with '18477'
c Var 'aux2233' order represents '1' with '1'
c Var 'aux2233' order represents '0' with '-18477'
c Encoding variable: aux2234 with domain: bool (representing constraint ((aux1303 + aux1306 + aux1307)<=1))
c Var 'aux2234' direct represents '0' with '-18478'
c Var 'aux2234' direct represents '1' with '18478'
c Var 'aux2234' order represents '1' with '1'
c Var 'aux2234' order represents '0' with '-18478'
c Encoding variable: aux2235 with domain: bool (representing constraint (1<=(aux1303 + aux1306 + aux1307)))
c Var 'aux2235' direct represents '0' with '-18479'
c Var 'aux2235' direct represents '1' with '18479'
c Var 'aux2235' order represents '1' with '1'
c Var 'aux2235' order represents '0' with '-18479'
c Encoding variable: aux2236 with domain: bool (representing constraint ((aux1309 + aux1312 + aux1313)<=1))
c Var 'aux2236' direct represents '0' with '-18480'
c Var 'aux2236' direct represents '1' with '18480'
c Var 'aux2236' order represents '1' with '1'
c Var 'aux2236' order represents '0' with '-18480'
c Encoding variable: aux2237 with domain: bool (representing constraint (1<=(aux1309 + aux1312 + aux1313)))
c Var 'aux2237' direct represents '0' with '-18481'
c Var 'aux2237' direct represents '1' with '18481'
c Var 'aux2237' order represents '1' with '1'
c Var 'aux2237' order represents '0' with '-18481'
c Encoding variable: aux2238 with domain: bool (representing constraint ((aux1315 + aux1318 + aux1319)<=1))
c Var 'aux2238' direct represents '0' with '-18482'
c Var 'aux2238' direct represents '1' with '18482'
c Var 'aux2238' order represents '1' with '1'
c Var 'aux2238' order represents '0' with '-18482'
c Encoding variable: aux2239 with domain: bool (representing constraint (1<=(aux1315 + aux1318 + aux1319)))
c Var 'aux2239' direct represents '0' with '-18483'
c Var 'aux2239' direct represents '1' with '18483'
c Var 'aux2239' order represents '1' with '1'
c Var 'aux2239' order represents '0' with '-18483'
c Encoding variable: aux2240 with domain: bool (representing constraint ((aux1321 + aux1324 + aux1325)<=1))
c Var 'aux2240' direct represents '0' with '-18484'
c Var 'aux2240' direct represents '1' with '18484'
c Var 'aux2240' order represents '1' with '1'
c Var 'aux2240' order represents '0' with '-18484'
c Encoding variable: aux2241 with domain: bool (representing constraint (1<=(aux1321 + aux1324 + aux1325)))
c Var 'aux2241' direct represents '0' with '-18485'
c Var 'aux2241' direct represents '1' with '18485'
c Var 'aux2241' order represents '1' with '1'
c Var 'aux2241' order represents '0' with '-18485'
c Encoding variable: aux2242 with domain: bool (representing constraint ((aux1327 + aux1330 + aux1331)<=1))
c Var 'aux2242' direct represents '0' with '-18486'
c Var 'aux2242' direct represents '1' with '18486'
c Var 'aux2242' order represents '1' with '1'
c Var 'aux2242' order represents '0' with '-18486'
c Encoding variable: aux2243 with domain: bool (representing constraint (1<=(aux1327 + aux1330 + aux1331)))
c Var 'aux2243' direct represents '0' with '-18487'
c Var 'aux2243' direct represents '1' with '18487'
c Var 'aux2243' order represents '1' with '1'
c Var 'aux2243' order represents '0' with '-18487'
c Encoding variable: aux2244 with domain: bool (representing constraint ((aux1333 + aux1336 + aux1337)<=1))
c Var 'aux2244' direct represents '0' with '-18488'
c Var 'aux2244' direct represents '1' with '18488'
c Var 'aux2244' order represents '1' with '1'
c Var 'aux2244' order represents '0' with '-18488'
c Encoding variable: aux2245 with domain: bool (representing constraint (1<=(aux1333 + aux1336 + aux1337)))
c Var 'aux2245' direct represents '0' with '-18489'
c Var 'aux2245' direct represents '1' with '18489'
c Var 'aux2245' order represents '1' with '1'
c Var 'aux2245' order represents '0' with '-18489'
c Encoding variable: aux2246 with domain: bool (representing constraint ((aux1339 + aux1342 + aux1343)<=1))
c Var 'aux2246' direct represents '0' with '-18490'
c Var 'aux2246' direct represents '1' with '18490'
c Var 'aux2246' order represents '1' with '1'
c Var 'aux2246' order represents '0' with '-18490'
c Encoding variable: aux2247 with domain: bool (representing constraint (1<=(aux1339 + aux1342 + aux1343)))
c Var 'aux2247' direct represents '0' with '-18491'
c Var 'aux2247' direct represents '1' with '18491'
c Var 'aux2247' order represents '1' with '1'
c Var 'aux2247' order represents '0' with '-18491'
c Encoding variable: aux2248 with domain: bool (representing constraint ((aux1345 + aux1348 + aux1349)<=1))
c Var 'aux2248' direct represents '0' with '-18492'
c Var 'aux2248' direct represents '1' with '18492'
c Var 'aux2248' order represents '1' with '1'
c Var 'aux2248' order represents '0' with '-18492'
c Encoding variable: aux2249 with domain: bool (representing constraint (1<=(aux1345 + aux1348 + aux1349)))
c Var 'aux2249' direct represents '0' with '-18493'
c Var 'aux2249' direct represents '1' with '18493'
c Var 'aux2249' order represents '1' with '1'
c Var 'aux2249' order represents '0' with '-18493'
c Encoding variable: aux2250 with domain: bool (representing constraint ((aux1351 + aux1354 + aux1355)<=1))
c Var 'aux2250' direct represents '0' with '-18494'
c Var 'aux2250' direct represents '1' with '18494'
c Var 'aux2250' order represents '1' with '1'
c Var 'aux2250' order represents '0' with '-18494'
c Encoding variable: aux2251 with domain: bool (representing constraint (1<=(aux1351 + aux1354 + aux1355)))
c Var 'aux2251' direct represents '0' with '-18495'
c Var 'aux2251' direct represents '1' with '18495'
c Var 'aux2251' order represents '1' with '1'
c Var 'aux2251' order represents '0' with '-18495'
c Encoding variable: aux2252 with domain: bool (representing constraint ((aux1357 + aux1360 + aux1361)<=1))
c Var 'aux2252' direct represents '0' with '-18496'
c Var 'aux2252' direct represents '1' with '18496'
c Var 'aux2252' order represents '1' with '1'
c Var 'aux2252' order represents '0' with '-18496'
c Encoding variable: aux2253 with domain: bool (representing constraint (1<=(aux1357 + aux1360 + aux1361)))
c Var 'aux2253' direct represents '0' with '-18497'
c Var 'aux2253' direct represents '1' with '18497'
c Var 'aux2253' order represents '1' with '1'
c Var 'aux2253' order represents '0' with '-18497'
c Encoding variable: aux2254 with domain: bool (representing constraint ((aux1363 + aux1366 + aux1367)<=1))
c Var 'aux2254' direct represents '0' with '-18498'
c Var 'aux2254' direct represents '1' with '18498'
c Var 'aux2254' order represents '1' with '1'
c Var 'aux2254' order represents '0' with '-18498'
c Encoding variable: aux2255 with domain: bool (representing constraint (1<=(aux1363 + aux1366 + aux1367)))
c Var 'aux2255' direct represents '0' with '-18499'
c Var 'aux2255' direct represents '1' with '18499'
c Var 'aux2255' order represents '1' with '1'
c Var 'aux2255' order represents '0' with '-18499'
c Encoding variable: aux2256 with domain: bool (representing constraint ((aux1369 + aux1372 + aux1373)<=1))
c Var 'aux2256' direct represents '0' with '-18500'
c Var 'aux2256' direct represents '1' with '18500'
c Var 'aux2256' order represents '1' with '1'
c Var 'aux2256' order represents '0' with '-18500'
c Encoding variable: aux2257 with domain: bool (representing constraint (1<=(aux1369 + aux1372 + aux1373)))
c Var 'aux2257' direct represents '0' with '-18501'
c Var 'aux2257' direct represents '1' with '18501'
c Var 'aux2257' order represents '1' with '1'
c Var 'aux2257' order represents '0' with '-18501'
c Encoding variable: aux2258 with domain: bool (representing constraint ((aux1375 + aux1378 + aux1379)<=1))
c Var 'aux2258' direct represents '0' with '-18502'
c Var 'aux2258' direct represents '1' with '18502'
c Var 'aux2258' order represents '1' with '1'
c Var 'aux2258' order represents '0' with '-18502'
c Encoding variable: aux2259 with domain: bool (representing constraint (1<=(aux1375 + aux1378 + aux1379)))
c Var 'aux2259' direct represents '0' with '-18503'
c Var 'aux2259' direct represents '1' with '18503'
c Var 'aux2259' order represents '1' with '1'
c Var 'aux2259' order represents '0' with '-18503'
c Encoding variable: aux2260 with domain: bool (representing constraint ((aux1381 + aux1384 + aux1385)<=1))
c Var 'aux2260' direct represents '0' with '-18504'
c Var 'aux2260' direct represents '1' with '18504'
c Var 'aux2260' order represents '1' with '1'
c Var 'aux2260' order represents '0' with '-18504'
c Encoding variable: aux2261 with domain: bool (representing constraint (1<=(aux1381 + aux1384 + aux1385)))
c Var 'aux2261' direct represents '0' with '-18505'
c Var 'aux2261' direct represents '1' with '18505'
c Var 'aux2261' order represents '1' with '1'
c Var 'aux2261' order represents '0' with '-18505'
c Encoding variable: aux2262 with domain: bool (representing constraint ((aux1387 + aux1390 + aux1391)<=1))
c Var 'aux2262' direct represents '0' with '-18506'
c Var 'aux2262' direct represents '1' with '18506'
c Var 'aux2262' order represents '1' with '1'
c Var 'aux2262' order represents '0' with '-18506'
c Encoding variable: aux2263 with domain: bool (representing constraint (1<=(aux1387 + aux1390 + aux1391)))
c Var 'aux2263' direct represents '0' with '-18507'
c Var 'aux2263' direct represents '1' with '18507'
c Var 'aux2263' order represents '1' with '1'
c Var 'aux2263' order represents '0' with '-18507'
c Encoding variable: aux2264 with domain: bool (representing constraint ((aux1393 + aux1396 + aux1397)<=1))
c Var 'aux2264' direct represents '0' with '-18508'
c Var 'aux2264' direct represents '1' with '18508'
c Var 'aux2264' order represents '1' with '1'
c Var 'aux2264' order represents '0' with '-18508'
c Encoding variable: aux2265 with domain: bool (representing constraint (1<=(aux1393 + aux1396 + aux1397)))
c Var 'aux2265' direct represents '0' with '-18509'
c Var 'aux2265' direct represents '1' with '18509'
c Var 'aux2265' order represents '1' with '1'
c Var 'aux2265' order represents '0' with '-18509'
c Encoding variable: aux2266 with domain: bool (representing constraint ((aux1399 + aux1402 + aux1403)<=1))
c Var 'aux2266' direct represents '0' with '-18510'
c Var 'aux2266' direct represents '1' with '18510'
c Var 'aux2266' order represents '1' with '1'
c Var 'aux2266' order represents '0' with '-18510'
c Encoding variable: aux2267 with domain: bool (representing constraint (1<=(aux1399 + aux1402 + aux1403)))
c Var 'aux2267' direct represents '0' with '-18511'
c Var 'aux2267' direct represents '1' with '18511'
c Var 'aux2267' order represents '1' with '1'
c Var 'aux2267' order represents '0' with '-18511'
c Encoding variable: aux2268 with domain: bool (representing constraint ((aux1405 + aux1408 + aux1409)<=1))
c Var 'aux2268' direct represents '0' with '-18512'
c Var 'aux2268' direct represents '1' with '18512'
c Var 'aux2268' order represents '1' with '1'
c Var 'aux2268' order represents '0' with '-18512'
c Encoding variable: aux2269 with domain: bool (representing constraint (1<=(aux1405 + aux1408 + aux1409)))
c Var 'aux2269' direct represents '0' with '-18513'
c Var 'aux2269' direct represents '1' with '18513'
c Var 'aux2269' order represents '1' with '1'
c Var 'aux2269' order represents '0' with '-18513'
c Encoding variable: aux2270 with domain: bool (representing constraint ((aux1411 + aux1414 + aux1415)<=1))
c Var 'aux2270' direct represents '0' with '-18514'
c Var 'aux2270' direct represents '1' with '18514'
c Var 'aux2270' order represents '1' with '1'
c Var 'aux2270' order represents '0' with '-18514'
c Encoding variable: aux2271 with domain: bool (representing constraint (1<=(aux1411 + aux1414 + aux1415)))
c Var 'aux2271' direct represents '0' with '-18515'
c Var 'aux2271' direct represents '1' with '18515'
c Var 'aux2271' order represents '1' with '1'
c Var 'aux2271' order represents '0' with '-18515'
c Encoding variable: aux2272 with domain: bool (representing constraint ((aux1417 + aux1420 + aux1421)<=1))
c Var 'aux2272' direct represents '0' with '-18516'
c Var 'aux2272' direct represents '1' with '18516'
c Var 'aux2272' order represents '1' with '1'
c Var 'aux2272' order represents '0' with '-18516'
c Encoding variable: aux2273 with domain: bool (representing constraint (1<=(aux1417 + aux1420 + aux1421)))
c Var 'aux2273' direct represents '0' with '-18517'
c Var 'aux2273' direct represents '1' with '18517'
c Var 'aux2273' order represents '1' with '1'
c Var 'aux2273' order represents '0' with '-18517'
c Encoding variable: aux2274 with domain: bool (representing constraint ((aux1423 + aux1426 + aux1427)<=1))
c Var 'aux2274' direct represents '0' with '-18518'
c Var 'aux2274' direct represents '1' with '18518'
c Var 'aux2274' order represents '1' with '1'
c Var 'aux2274' order represents '0' with '-18518'
c Encoding variable: aux2275 with domain: bool (representing constraint (1<=(aux1423 + aux1426 + aux1427)))
c Var 'aux2275' direct represents '0' with '-18519'
c Var 'aux2275' direct represents '1' with '18519'
c Var 'aux2275' order represents '1' with '1'
c Var 'aux2275' order represents '0' with '-18519'
c Encoding variable: aux2276 with domain: bool (representing constraint ((aux1429 + aux1432 + aux1433)<=1))
c Var 'aux2276' direct represents '0' with '-18520'
c Var 'aux2276' direct represents '1' with '18520'
c Var 'aux2276' order represents '1' with '1'
c Var 'aux2276' order represents '0' with '-18520'
c Encoding variable: aux2277 with domain: bool (representing constraint (1<=(aux1429 + aux1432 + aux1433)))
c Var 'aux2277' direct represents '0' with '-18521'
c Var 'aux2277' direct represents '1' with '18521'
c Var 'aux2277' order represents '1' with '1'
c Var 'aux2277' order represents '0' with '-18521'
c Encoding variable: aux2278 with domain: bool (representing constraint ((aux1435 + aux1438 + aux1439)<=1))
c Var 'aux2278' direct represents '0' with '-18522'
c Var 'aux2278' direct represents '1' with '18522'
c Var 'aux2278' order represents '1' with '1'
c Var 'aux2278' order represents '0' with '-18522'
c Encoding variable: aux2279 with domain: bool (representing constraint (1<=(aux1435 + aux1438 + aux1439)))
c Var 'aux2279' direct represents '0' with '-18523'
c Var 'aux2279' direct represents '1' with '18523'
c Var 'aux2279' order represents '1' with '1'
c Var 'aux2279' order represents '0' with '-18523'
c Encoding variable: aux2280 with domain: bool (representing constraint ((aux1441 + aux1444 + aux1445)<=1))
c Var 'aux2280' direct represents '0' with '-18524'
c Var 'aux2280' direct represents '1' with '18524'
c Var 'aux2280' order represents '1' with '1'
c Var 'aux2280' order represents '0' with '-18524'
c Encoding variable: aux2281 with domain: bool (representing constraint (1<=(aux1441 + aux1444 + aux1445)))
c Var 'aux2281' direct represents '0' with '-18525'
c Var 'aux2281' direct represents '1' with '18525'
c Var 'aux2281' order represents '1' with '1'
c Var 'aux2281' order represents '0' with '-18525'
c Encoding variable: aux2282 with domain: bool (representing constraint ((aux1447 + aux1450 + aux1451)<=1))
c Var 'aux2282' direct represents '0' with '-18526'
c Var 'aux2282' direct represents '1' with '18526'
c Var 'aux2282' order represents '1' with '1'
c Var 'aux2282' order represents '0' with '-18526'
c Encoding variable: aux2283 with domain: bool (representing constraint (1<=(aux1447 + aux1450 + aux1451)))
c Var 'aux2283' direct represents '0' with '-18527'
c Var 'aux2283' direct represents '1' with '18527'
c Var 'aux2283' order represents '1' with '1'
c Var 'aux2283' order represents '0' with '-18527'
c Encoding variable: aux2284 with domain: bool (representing constraint ((aux1453 + aux1456 + aux1457)<=1))
c Var 'aux2284' direct represents '0' with '-18528'
c Var 'aux2284' direct represents '1' with '18528'
c Var 'aux2284' order represents '1' with '1'
c Var 'aux2284' order represents '0' with '-18528'
c Encoding variable: aux2285 with domain: bool (representing constraint (1<=(aux1453 + aux1456 + aux1457)))
c Var 'aux2285' direct represents '0' with '-18529'
c Var 'aux2285' direct represents '1' with '18529'
c Var 'aux2285' order represents '1' with '1'
c Var 'aux2285' order represents '0' with '-18529'
c Encoding variable: aux2286 with domain: bool (representing constraint ((aux1459 + aux1462 + aux1463)<=1))
c Var 'aux2286' direct represents '0' with '-18530'
c Var 'aux2286' direct represents '1' with '18530'
c Var 'aux2286' order represents '1' with '1'
c Var 'aux2286' order represents '0' with '-18530'
c Encoding variable: aux2287 with domain: bool (representing constraint (1<=(aux1459 + aux1462 + aux1463)))
c Var 'aux2287' direct represents '0' with '-18531'
c Var 'aux2287' direct represents '1' with '18531'
c Var 'aux2287' order represents '1' with '1'
c Var 'aux2287' order represents '0' with '-18531'
c Encoding variable: aux2288 with domain: bool (representing constraint ((aux1465 + aux1468 + aux1469)<=1))
c Var 'aux2288' direct represents '0' with '-18532'
c Var 'aux2288' direct represents '1' with '18532'
c Var 'aux2288' order represents '1' with '1'
c Var 'aux2288' order represents '0' with '-18532'
c Encoding variable: aux2289 with domain: bool (representing constraint (1<=(aux1465 + aux1468 + aux1469)))
c Var 'aux2289' direct represents '0' with '-18533'
c Var 'aux2289' direct represents '1' with '18533'
c Var 'aux2289' order represents '1' with '1'
c Var 'aux2289' order represents '0' with '-18533'
c Encoding variable: aux2290 with domain: bool (representing constraint ((aux1471 + aux1474 + aux1475)<=1))
c Var 'aux2290' direct represents '0' with '-18534'
c Var 'aux2290' direct represents '1' with '18534'
c Var 'aux2290' order represents '1' with '1'
c Var 'aux2290' order represents '0' with '-18534'
c Encoding variable: aux2291 with domain: bool (representing constraint (1<=(aux1471 + aux1474 + aux1475)))
c Var 'aux2291' direct represents '0' with '-18535'
c Var 'aux2291' direct represents '1' with '18535'
c Var 'aux2291' order represents '1' with '1'
c Var 'aux2291' order represents '0' with '-18535'
c Encoding variable: aux2292 with domain: bool (representing constraint ((aux1477 + aux1480 + aux1481)<=1))
c Var 'aux2292' direct represents '0' with '-18536'
c Var 'aux2292' direct represents '1' with '18536'
c Var 'aux2292' order represents '1' with '1'
c Var 'aux2292' order represents '0' with '-18536'
c Encoding variable: aux2293 with domain: bool (representing constraint (1<=(aux1477 + aux1480 + aux1481)))
c Var 'aux2293' direct represents '0' with '-18537'
c Var 'aux2293' direct represents '1' with '18537'
c Var 'aux2293' order represents '1' with '1'
c Var 'aux2293' order represents '0' with '-18537'
c Encoding variable: aux2294 with domain: bool (representing constraint ((aux1483 + aux1486 + aux1487)<=1))
c Var 'aux2294' direct represents '0' with '-18538'
c Var 'aux2294' direct represents '1' with '18538'
c Var 'aux2294' order represents '1' with '1'
c Var 'aux2294' order represents '0' with '-18538'
c Encoding variable: aux2295 with domain: bool (representing constraint (1<=(aux1483 + aux1486 + aux1487)))
c Var 'aux2295' direct represents '0' with '-18539'
c Var 'aux2295' direct represents '1' with '18539'
c Var 'aux2295' order represents '1' with '1'
c Var 'aux2295' order represents '0' with '-18539'
c Encoding variable: aux2296 with domain: bool (representing constraint ((aux1489 + aux1492 + aux1493)<=1))
c Var 'aux2296' direct represents '0' with '-18540'
c Var 'aux2296' direct represents '1' with '18540'
c Var 'aux2296' order represents '1' with '1'
c Var 'aux2296' order represents '0' with '-18540'
c Encoding variable: aux2297 with domain: bool (representing constraint (1<=(aux1489 + aux1492 + aux1493)))
c Var 'aux2297' direct represents '0' with '-18541'
c Var 'aux2297' direct represents '1' with '18541'
c Var 'aux2297' order represents '1' with '1'
c Var 'aux2297' order represents '0' with '-18541'
c Encoding variable: aux2298 with domain: bool (representing constraint ((aux1495 + aux1498 + aux1499)<=1))
c Var 'aux2298' direct represents '0' with '-18542'
c Var 'aux2298' direct represents '1' with '18542'
c Var 'aux2298' order represents '1' with '1'
c Var 'aux2298' order represents '0' with '-18542'
c Encoding variable: aux2299 with domain: bool (representing constraint (1<=(aux1495 + aux1498 + aux1499)))
c Var 'aux2299' direct represents '0' with '-18543'
c Var 'aux2299' direct represents '1' with '18543'
c Var 'aux2299' order represents '1' with '1'
c Var 'aux2299' order represents '0' with '-18543'
c Encoding variable: aux2300 with domain: bool (representing constraint ((aux1501 + aux1504 + aux1505)<=1))
c Var 'aux2300' direct represents '0' with '-18544'
c Var 'aux2300' direct represents '1' with '18544'
c Var 'aux2300' order represents '1' with '1'
c Var 'aux2300' order represents '0' with '-18544'
c Encoding variable: aux2301 with domain: bool (representing constraint (1<=(aux1501 + aux1504 + aux1505)))
c Var 'aux2301' direct represents '0' with '-18545'
c Var 'aux2301' direct represents '1' with '18545'
c Var 'aux2301' order represents '1' with '1'
c Var 'aux2301' order represents '0' with '-18545'
c Encoding variable: aux2302 with domain: bool (representing constraint ((aux1507 + aux1510 + aux1511)<=1))
c Var 'aux2302' direct represents '0' with '-18546'
c Var 'aux2302' direct represents '1' with '18546'
c Var 'aux2302' order represents '1' with '1'
c Var 'aux2302' order represents '0' with '-18546'
c Encoding variable: aux2303 with domain: bool (representing constraint (1<=(aux1507 + aux1510 + aux1511)))
c Var 'aux2303' direct represents '0' with '-18547'
c Var 'aux2303' direct represents '1' with '18547'
c Var 'aux2303' order represents '1' with '1'
c Var 'aux2303' order represents '0' with '-18547'
c Encoding variable: aux2304 with domain: bool (representing constraint ((aux1513 + aux1516 + aux1517)<=1))
c Var 'aux2304' direct represents '0' with '-18548'
c Var 'aux2304' direct represents '1' with '18548'
c Var 'aux2304' order represents '1' with '1'
c Var 'aux2304' order represents '0' with '-18548'
c Encoding variable: aux2305 with domain: bool (representing constraint (1<=(aux1513 + aux1516 + aux1517)))
c Var 'aux2305' direct represents '0' with '-18549'
c Var 'aux2305' direct represents '1' with '18549'
c Var 'aux2305' order represents '1' with '1'
c Var 'aux2305' order represents '0' with '-18549'
c Encoding variable: aux2306 with domain: bool (representing constraint ((aux1519 + aux1522 + aux1523)<=1))
c Var 'aux2306' direct represents '0' with '-18550'
c Var 'aux2306' direct represents '1' with '18550'
c Var 'aux2306' order represents '1' with '1'
c Var 'aux2306' order represents '0' with '-18550'
c Encoding variable: aux2307 with domain: bool (representing constraint (1<=(aux1519 + aux1522 + aux1523)))
c Var 'aux2307' direct represents '0' with '-18551'
c Var 'aux2307' direct represents '1' with '18551'
c Var 'aux2307' order represents '1' with '1'
c Var 'aux2307' order represents '0' with '-18551'
c Encoding variable: aux2308 with domain: bool (representing constraint ((aux1525 + aux1528 + aux1529)<=1))
c Var 'aux2308' direct represents '0' with '-18552'
c Var 'aux2308' direct represents '1' with '18552'
c Var 'aux2308' order represents '1' with '1'
c Var 'aux2308' order represents '0' with '-18552'
c Encoding variable: aux2309 with domain: bool (representing constraint (1<=(aux1525 + aux1528 + aux1529)))
c Var 'aux2309' direct represents '0' with '-18553'
c Var 'aux2309' direct represents '1' with '18553'
c Var 'aux2309' order represents '1' with '1'
c Var 'aux2309' order represents '0' with '-18553'
c Encoding variable: aux2310 with domain: bool (representing constraint ((aux1531 + aux1534 + aux1535)<=1))
c Var 'aux2310' direct represents '0' with '-18554'
c Var 'aux2310' direct represents '1' with '18554'
c Var 'aux2310' order represents '1' with '1'
c Var 'aux2310' order represents '0' with '-18554'
c Encoding variable: aux2311 with domain: bool (representing constraint (1<=(aux1531 + aux1534 + aux1535)))
c Var 'aux2311' direct represents '0' with '-18555'
c Var 'aux2311' direct represents '1' with '18555'
c Var 'aux2311' order represents '1' with '1'
c Var 'aux2311' order represents '0' with '-18555'
c Encoding variable: aux2312 with domain: bool (representing constraint ((aux1537 + aux1540 + aux1541)<=1))
c Var 'aux2312' direct represents '0' with '-18556'
c Var 'aux2312' direct represents '1' with '18556'
c Var 'aux2312' order represents '1' with '1'
c Var 'aux2312' order represents '0' with '-18556'
c Encoding variable: aux2313 with domain: bool (representing constraint (1<=(aux1537 + aux1540 + aux1541)))
c Var 'aux2313' direct represents '0' with '-18557'
c Var 'aux2313' direct represents '1' with '18557'
c Var 'aux2313' order represents '1' with '1'
c Var 'aux2313' order represents '0' with '-18557'
c Encoding variable: aux2314 with domain: bool (representing constraint ((aux1543 + aux1546 + aux1547)<=1))
c Var 'aux2314' direct represents '0' with '-18558'
c Var 'aux2314' direct represents '1' with '18558'
c Var 'aux2314' order represents '1' with '1'
c Var 'aux2314' order represents '0' with '-18558'
c Encoding variable: aux2315 with domain: bool (representing constraint (1<=(aux1543 + aux1546 + aux1547)))
c Var 'aux2315' direct represents '0' with '-18559'
c Var 'aux2315' direct represents '1' with '18559'
c Var 'aux2315' order represents '1' with '1'
c Var 'aux2315' order represents '0' with '-18559'
c Encoding variable: aux2316 with domain: bool (representing constraint ((aux1549 + aux1552 + aux1553)<=1))
c Var 'aux2316' direct represents '0' with '-18560'
c Var 'aux2316' direct represents '1' with '18560'
c Var 'aux2316' order represents '1' with '1'
c Var 'aux2316' order represents '0' with '-18560'
c Encoding variable: aux2317 with domain: bool (representing constraint (1<=(aux1549 + aux1552 + aux1553)))
c Var 'aux2317' direct represents '0' with '-18561'
c Var 'aux2317' direct represents '1' with '18561'
c Var 'aux2317' order represents '1' with '1'
c Var 'aux2317' order represents '0' with '-18561'
c Encoding variable: aux2318 with domain: bool (representing constraint ((aux1555 + aux1558 + aux1559)<=1))
c Var 'aux2318' direct represents '0' with '-18562'
c Var 'aux2318' direct represents '1' with '18562'
c Var 'aux2318' order represents '1' with '1'
c Var 'aux2318' order represents '0' with '-18562'
c Encoding variable: aux2319 with domain: bool (representing constraint (1<=(aux1555 + aux1558 + aux1559)))
c Var 'aux2319' direct represents '0' with '-18563'
c Var 'aux2319' direct represents '1' with '18563'
c Var 'aux2319' order represents '1' with '1'
c Var 'aux2319' order represents '0' with '-18563'
c Encoding variable: aux2320 with domain: bool (representing constraint ((aux1561 + aux1564 + aux1565)<=1))
c Var 'aux2320' direct represents '0' with '-18564'
c Var 'aux2320' direct represents '1' with '18564'
c Var 'aux2320' order represents '1' with '1'
c Var 'aux2320' order represents '0' with '-18564'
c Encoding variable: aux2321 with domain: bool (representing constraint (1<=(aux1561 + aux1564 + aux1565)))
c Var 'aux2321' direct represents '0' with '-18565'
c Var 'aux2321' direct represents '1' with '18565'
c Var 'aux2321' order represents '1' with '1'
c Var 'aux2321' order represents '0' with '-18565'
c Encoding variable: aux2322 with domain: bool (representing constraint ((aux1567 + aux1570 + aux1571)<=1))
c Var 'aux2322' direct represents '0' with '-18566'
c Var 'aux2322' direct represents '1' with '18566'
c Var 'aux2322' order represents '1' with '1'
c Var 'aux2322' order represents '0' with '-18566'
c Encoding variable: aux2323 with domain: bool (representing constraint (1<=(aux1567 + aux1570 + aux1571)))
c Var 'aux2323' direct represents '0' with '-18567'
c Var 'aux2323' direct represents '1' with '18567'
c Var 'aux2323' order represents '1' with '1'
c Var 'aux2323' order represents '0' with '-18567'
c Encoding variable: aux2324 with domain: bool (representing constraint ((aux1573 + aux1576 + aux1577)<=1))
c Var 'aux2324' direct represents '0' with '-18568'
c Var 'aux2324' direct represents '1' with '18568'
c Var 'aux2324' order represents '1' with '1'
c Var 'aux2324' order represents '0' with '-18568'
c Encoding variable: aux2325 with domain: bool (representing constraint (1<=(aux1573 + aux1576 + aux1577)))
c Var 'aux2325' direct represents '0' with '-18569'
c Var 'aux2325' direct represents '1' with '18569'
c Var 'aux2325' order represents '1' with '1'
c Var 'aux2325' order represents '0' with '-18569'
c Encoding variable: aux2326 with domain: bool (representing constraint ((aux1579 + aux1582 + aux1583)<=1))
c Var 'aux2326' direct represents '0' with '-18570'
c Var 'aux2326' direct represents '1' with '18570'
c Var 'aux2326' order represents '1' with '1'
c Var 'aux2326' order represents '0' with '-18570'
c Encoding variable: aux2327 with domain: bool (representing constraint (1<=(aux1579 + aux1582 + aux1583)))
c Var 'aux2327' direct represents '0' with '-18571'
c Var 'aux2327' direct represents '1' with '18571'
c Var 'aux2327' order represents '1' with '1'
c Var 'aux2327' order represents '0' with '-18571'
c Encoding variable: aux2328 with domain: bool (representing constraint ((aux1585 + aux1588 + aux1589)<=1))
c Var 'aux2328' direct represents '0' with '-18572'
c Var 'aux2328' direct represents '1' with '18572'
c Var 'aux2328' order represents '1' with '1'
c Var 'aux2328' order represents '0' with '-18572'
c Encoding variable: aux2329 with domain: bool (representing constraint (1<=(aux1585 + aux1588 + aux1589)))
c Var 'aux2329' direct represents '0' with '-18573'
c Var 'aux2329' direct represents '1' with '18573'
c Var 'aux2329' order represents '1' with '1'
c Var 'aux2329' order represents '0' with '-18573'
c Encoding variable: aux2330 with domain: bool (representing constraint ((aux1591 + aux1594 + aux1595)<=1))
c Var 'aux2330' direct represents '0' with '-18574'
c Var 'aux2330' direct represents '1' with '18574'
c Var 'aux2330' order represents '1' with '1'
c Var 'aux2330' order represents '0' with '-18574'
c Encoding variable: aux2331 with domain: bool (representing constraint (1<=(aux1591 + aux1594 + aux1595)))
c Var 'aux2331' direct represents '0' with '-18575'
c Var 'aux2331' direct represents '1' with '18575'
c Var 'aux2331' order represents '1' with '1'
c Var 'aux2331' order represents '0' with '-18575'
c Encoding variable: aux2332 with domain: bool (representing constraint ((aux1597 + aux1600 + aux1601)<=1))
c Var 'aux2332' direct represents '0' with '-18576'
c Var 'aux2332' direct represents '1' with '18576'
c Var 'aux2332' order represents '1' with '1'
c Var 'aux2332' order represents '0' with '-18576'
c Encoding variable: aux2333 with domain: bool (representing constraint (1<=(aux1597 + aux1600 + aux1601)))
c Var 'aux2333' direct represents '0' with '-18577'
c Var 'aux2333' direct represents '1' with '18577'
c Var 'aux2333' order represents '1' with '1'
c Var 'aux2333' order represents '0' with '-18577'
c Encoding variable: aux2334 with domain: bool (representing constraint ((aux1603 + aux1606 + aux1607)<=1))
c Var 'aux2334' direct represents '0' with '-18578'
c Var 'aux2334' direct represents '1' with '18578'
c Var 'aux2334' order represents '1' with '1'
c Var 'aux2334' order represents '0' with '-18578'
c Encoding variable: aux2335 with domain: bool (representing constraint (1<=(aux1603 + aux1606 + aux1607)))
c Var 'aux2335' direct represents '0' with '-18579'
c Var 'aux2335' direct represents '1' with '18579'
c Var 'aux2335' order represents '1' with '1'
c Var 'aux2335' order represents '0' with '-18579'
c Encoding variable: aux2336 with domain: bool (representing constraint ((aux1609 + aux1612 + aux1613)<=1))
c Var 'aux2336' direct represents '0' with '-18580'
c Var 'aux2336' direct represents '1' with '18580'
c Var 'aux2336' order represents '1' with '1'
c Var 'aux2336' order represents '0' with '-18580'
c Encoding variable: aux2337 with domain: bool (representing constraint (1<=(aux1609 + aux1612 + aux1613)))
c Var 'aux2337' direct represents '0' with '-18581'
c Var 'aux2337' direct represents '1' with '18581'
c Var 'aux2337' order represents '1' with '1'
c Var 'aux2337' order represents '0' with '-18581'
c Encoding variable: aux2338 with domain: bool (representing constraint ((aux1615 + aux1618 + aux1619)<=1))
c Var 'aux2338' direct represents '0' with '-18582'
c Var 'aux2338' direct represents '1' with '18582'
c Var 'aux2338' order represents '1' with '1'
c Var 'aux2338' order represents '0' with '-18582'
c Encoding variable: aux2339 with domain: bool (representing constraint (1<=(aux1615 + aux1618 + aux1619)))
c Var 'aux2339' direct represents '0' with '-18583'
c Var 'aux2339' direct represents '1' with '18583'
c Var 'aux2339' order represents '1' with '1'
c Var 'aux2339' order represents '0' with '-18583'
c Encoding variable: aux2340 with domain: bool (representing constraint ((aux1621 + aux1624 + aux1625)<=1))
c Var 'aux2340' direct represents '0' with '-18584'
c Var 'aux2340' direct represents '1' with '18584'
c Var 'aux2340' order represents '1' with '1'
c Var 'aux2340' order represents '0' with '-18584'
c Encoding variable: aux2341 with domain: bool (representing constraint (1<=(aux1621 + aux1624 + aux1625)))
c Var 'aux2341' direct represents '0' with '-18585'
c Var 'aux2341' direct represents '1' with '18585'
c Var 'aux2341' order represents '1' with '1'
c Var 'aux2341' order represents '0' with '-18585'
c Encoding variable: aux2342 with domain: bool (representing constraint ((aux1627 + aux1630 + aux1631)<=1))
c Var 'aux2342' direct represents '0' with '-18586'
c Var 'aux2342' direct represents '1' with '18586'
c Var 'aux2342' order represents '1' with '1'
c Var 'aux2342' order represents '0' with '-18586'
c Encoding variable: aux2343 with domain: bool (representing constraint (1<=(aux1627 + aux1630 + aux1631)))
c Var 'aux2343' direct represents '0' with '-18587'
c Var 'aux2343' direct represents '1' with '18587'
c Var 'aux2343' order represents '1' with '1'
c Var 'aux2343' order represents '0' with '-18587'
c Encoding variable: aux2344 with domain: bool (representing constraint ((aux1633 + aux1636 + aux1637)<=1))
c Var 'aux2344' direct represents '0' with '-18588'
c Var 'aux2344' direct represents '1' with '18588'
c Var 'aux2344' order represents '1' with '1'
c Var 'aux2344' order represents '0' with '-18588'
c Encoding variable: aux2345 with domain: bool (representing constraint (1<=(aux1633 + aux1636 + aux1637)))
c Var 'aux2345' direct represents '0' with '-18589'
c Var 'aux2345' direct represents '1' with '18589'
c Var 'aux2345' order represents '1' with '1'
c Var 'aux2345' order represents '0' with '-18589'
c Encoding variable: aux2346 with domain: bool (representing constraint ((aux1639 + aux1642 + aux1643)<=1))
c Var 'aux2346' direct represents '0' with '-18590'
c Var 'aux2346' direct represents '1' with '18590'
c Var 'aux2346' order represents '1' with '1'
c Var 'aux2346' order represents '0' with '-18590'
c Encoding variable: aux2347 with domain: bool (representing constraint (1<=(aux1639 + aux1642 + aux1643)))
c Var 'aux2347' direct represents '0' with '-18591'
c Var 'aux2347' direct represents '1' with '18591'
c Var 'aux2347' order represents '1' with '1'
c Var 'aux2347' order represents '0' with '-18591'
c Encoding variable: aux2348 with domain: bool (representing constraint ((aux1645 + aux1648 + aux1649)<=1))
c Var 'aux2348' direct represents '0' with '-18592'
c Var 'aux2348' direct represents '1' with '18592'
c Var 'aux2348' order represents '1' with '1'
c Var 'aux2348' order represents '0' with '-18592'
c Encoding variable: aux2349 with domain: bool (representing constraint (1<=(aux1645 + aux1648 + aux1649)))
c Var 'aux2349' direct represents '0' with '-18593'
c Var 'aux2349' direct represents '1' with '18593'
c Var 'aux2349' order represents '1' with '1'
c Var 'aux2349' order represents '0' with '-18593'
c Encoding variable: aux2350 with domain: bool (representing constraint ((aux1651 + aux1654 + aux1655)<=1))
c Var 'aux2350' direct represents '0' with '-18594'
c Var 'aux2350' direct represents '1' with '18594'
c Var 'aux2350' order represents '1' with '1'
c Var 'aux2350' order represents '0' with '-18594'
c Encoding variable: aux2351 with domain: bool (representing constraint (1<=(aux1651 + aux1654 + aux1655)))
c Var 'aux2351' direct represents '0' with '-18595'
c Var 'aux2351' direct represents '1' with '18595'
c Var 'aux2351' order represents '1' with '1'
c Var 'aux2351' order represents '0' with '-18595'
c Encoding variable: aux2352 with domain: bool (representing constraint ((aux1657 + aux1660 + aux1661)<=1))
c Var 'aux2352' direct represents '0' with '-18596'
c Var 'aux2352' direct represents '1' with '18596'
c Var 'aux2352' order represents '1' with '1'
c Var 'aux2352' order represents '0' with '-18596'
c Encoding variable: aux2353 with domain: bool (representing constraint (1<=(aux1657 + aux1660 + aux1661)))
c Var 'aux2353' direct represents '0' with '-18597'
c Var 'aux2353' direct represents '1' with '18597'
c Var 'aux2353' order represents '1' with '1'
c Var 'aux2353' order represents '0' with '-18597'
c Encoding variable: aux2354 with domain: bool (representing constraint ((aux1663 + aux1666 + aux1667)<=1))
c Var 'aux2354' direct represents '0' with '-18598'
c Var 'aux2354' direct represents '1' with '18598'
c Var 'aux2354' order represents '1' with '1'
c Var 'aux2354' order represents '0' with '-18598'
c Encoding variable: aux2355 with domain: bool (representing constraint (1<=(aux1663 + aux1666 + aux1667)))
c Var 'aux2355' direct represents '0' with '-18599'
c Var 'aux2355' direct represents '1' with '18599'
c Var 'aux2355' order represents '1' with '1'
c Var 'aux2355' order represents '0' with '-18599'
c Encoding variable: aux2356 with domain: bool (representing constraint ((aux1669 + aux1672 + aux1673)<=1))
c Var 'aux2356' direct represents '0' with '-18600'
c Var 'aux2356' direct represents '1' with '18600'
c Var 'aux2356' order represents '1' with '1'
c Var 'aux2356' order represents '0' with '-18600'
c Encoding variable: aux2357 with domain: bool (representing constraint (1<=(aux1669 + aux1672 + aux1673)))
c Var 'aux2357' direct represents '0' with '-18601'
c Var 'aux2357' direct represents '1' with '18601'
c Var 'aux2357' order represents '1' with '1'
c Var 'aux2357' order represents '0' with '-18601'
c Encoding variable: aux2358 with domain: bool (representing constraint ((aux1675 + aux1678 + aux1679)<=1))
c Var 'aux2358' direct represents '0' with '-18602'
c Var 'aux2358' direct represents '1' with '18602'
c Var 'aux2358' order represents '1' with '1'
c Var 'aux2358' order represents '0' with '-18602'
c Encoding variable: aux2359 with domain: bool (representing constraint (1<=(aux1675 + aux1678 + aux1679)))
c Var 'aux2359' direct represents '0' with '-18603'
c Var 'aux2359' direct represents '1' with '18603'
c Var 'aux2359' order represents '1' with '1'
c Var 'aux2359' order represents '0' with '-18603'
c Encoding variable: aux2360 with domain: bool (representing constraint ((aux1681 + aux1684 + aux1685)<=1))
c Var 'aux2360' direct represents '0' with '-18604'
c Var 'aux2360' direct represents '1' with '18604'
c Var 'aux2360' order represents '1' with '1'
c Var 'aux2360' order represents '0' with '-18604'
c Encoding variable: aux2361 with domain: bool (representing constraint (1<=(aux1681 + aux1684 + aux1685)))
c Var 'aux2361' direct represents '0' with '-18605'
c Var 'aux2361' direct represents '1' with '18605'
c Var 'aux2361' order represents '1' with '1'
c Var 'aux2361' order represents '0' with '-18605'
c Encoding variable: aux2362 with domain: bool (representing constraint ((aux1687 + aux1690 + aux1691)<=1))
c Var 'aux2362' direct represents '0' with '-18606'
c Var 'aux2362' direct represents '1' with '18606'
c Var 'aux2362' order represents '1' with '1'
c Var 'aux2362' order represents '0' with '-18606'
c Encoding variable: aux2363 with domain: bool (representing constraint (1<=(aux1687 + aux1690 + aux1691)))
c Var 'aux2363' direct represents '0' with '-18607'
c Var 'aux2363' direct represents '1' with '18607'
c Var 'aux2363' order represents '1' with '1'
c Var 'aux2363' order represents '0' with '-18607'
c Encoding variable: aux2364 with domain: bool (representing constraint ((aux1693 + aux1696 + aux1697)<=1))
c Var 'aux2364' direct represents '0' with '-18608'
c Var 'aux2364' direct represents '1' with '18608'
c Var 'aux2364' order represents '1' with '1'
c Var 'aux2364' order represents '0' with '-18608'
c Encoding variable: aux2365 with domain: bool (representing constraint (1<=(aux1693 + aux1696 + aux1697)))
c Var 'aux2365' direct represents '0' with '-18609'
c Var 'aux2365' direct represents '1' with '18609'
c Var 'aux2365' order represents '1' with '1'
c Var 'aux2365' order represents '0' with '-18609'
c Encoding variable: aux2366 with domain: bool (representing constraint ((aux1699 + aux1702 + aux1703)<=1))
c Var 'aux2366' direct represents '0' with '-18610'
c Var 'aux2366' direct represents '1' with '18610'
c Var 'aux2366' order represents '1' with '1'
c Var 'aux2366' order represents '0' with '-18610'
c Encoding variable: aux2367 with domain: bool (representing constraint (1<=(aux1699 + aux1702 + aux1703)))
c Var 'aux2367' direct represents '0' with '-18611'
c Var 'aux2367' direct represents '1' with '18611'
c Var 'aux2367' order represents '1' with '1'
c Var 'aux2367' order represents '0' with '-18611'
c Encoding variable: aux2368 with domain: bool (representing constraint ((aux1705 + aux1708 + aux1709)<=1))
c Var 'aux2368' direct represents '0' with '-18612'
c Var 'aux2368' direct represents '1' with '18612'
c Var 'aux2368' order represents '1' with '1'
c Var 'aux2368' order represents '0' with '-18612'
c Encoding variable: aux2369 with domain: bool (representing constraint (1<=(aux1705 + aux1708 + aux1709)))
c Var 'aux2369' direct represents '0' with '-18613'
c Var 'aux2369' direct represents '1' with '18613'
c Var 'aux2369' order represents '1' with '1'
c Var 'aux2369' order represents '0' with '-18613'
c Encoding variable: aux2370 with domain: bool (representing constraint ((aux1711 + aux1714 + aux1715)<=1))
c Var 'aux2370' direct represents '0' with '-18614'
c Var 'aux2370' direct represents '1' with '18614'
c Var 'aux2370' order represents '1' with '1'
c Var 'aux2370' order represents '0' with '-18614'
c Encoding variable: aux2371 with domain: bool (representing constraint (1<=(aux1711 + aux1714 + aux1715)))
c Var 'aux2371' direct represents '0' with '-18615'
c Var 'aux2371' direct represents '1' with '18615'
c Var 'aux2371' order represents '1' with '1'
c Var 'aux2371' order represents '0' with '-18615'
c Encoding variable: aux2372 with domain: bool (representing constraint ((aux1717 + aux1720 + aux1721)<=1))
c Var 'aux2372' direct represents '0' with '-18616'
c Var 'aux2372' direct represents '1' with '18616'
c Var 'aux2372' order represents '1' with '1'
c Var 'aux2372' order represents '0' with '-18616'
c Encoding variable: aux2373 with domain: bool (representing constraint (1<=(aux1717 + aux1720 + aux1721)))
c Var 'aux2373' direct represents '0' with '-18617'
c Var 'aux2373' direct represents '1' with '18617'
c Var 'aux2373' order represents '1' with '1'
c Var 'aux2373' order represents '0' with '-18617'
c Encoding variable: aux2374 with domain: bool (representing constraint ((aux1723 + aux1726 + aux1727)<=1))
c Var 'aux2374' direct represents '0' with '-18618'
c Var 'aux2374' direct represents '1' with '18618'
c Var 'aux2374' order represents '1' with '1'
c Var 'aux2374' order represents '0' with '-18618'
c Encoding variable: aux2375 with domain: bool (representing constraint (1<=(aux1723 + aux1726 + aux1727)))
c Var 'aux2375' direct represents '0' with '-18619'
c Var 'aux2375' direct represents '1' with '18619'
c Var 'aux2375' order represents '1' with '1'
c Var 'aux2375' order represents '0' with '-18619'
c Encoding variable: aux2376 with domain: bool (representing constraint ((aux1729 + aux1732 + aux1733)<=1))
c Var 'aux2376' direct represents '0' with '-18620'
c Var 'aux2376' direct represents '1' with '18620'
c Var 'aux2376' order represents '1' with '1'
c Var 'aux2376' order represents '0' with '-18620'
c Encoding variable: aux2377 with domain: bool (representing constraint (1<=(aux1729 + aux1732 + aux1733)))
c Var 'aux2377' direct represents '0' with '-18621'
c Var 'aux2377' direct represents '1' with '18621'
c Var 'aux2377' order represents '1' with '1'
c Var 'aux2377' order represents '0' with '-18621'
c Encoding variable: aux2378 with domain: bool (representing constraint ((aux1735 + aux1738 + aux1739)<=1))
c Var 'aux2378' direct represents '0' with '-18622'
c Var 'aux2378' direct represents '1' with '18622'
c Var 'aux2378' order represents '1' with '1'
c Var 'aux2378' order represents '0' with '-18622'
c Encoding variable: aux2379 with domain: bool (representing constraint (1<=(aux1735 + aux1738 + aux1739)))
c Var 'aux2379' direct represents '0' with '-18623'
c Var 'aux2379' direct represents '1' with '18623'
c Var 'aux2379' order represents '1' with '1'
c Var 'aux2379' order represents '0' with '-18623'
c Encoding variable: aux2380 with domain: bool (representing constraint ((aux1741 + aux1744 + aux1745)<=1))
c Var 'aux2380' direct represents '0' with '-18624'
c Var 'aux2380' direct represents '1' with '18624'
c Var 'aux2380' order represents '1' with '1'
c Var 'aux2380' order represents '0' with '-18624'
c Encoding variable: aux2381 with domain: bool (representing constraint (1<=(aux1741 + aux1744 + aux1745)))
c Var 'aux2381' direct represents '0' with '-18625'
c Var 'aux2381' direct represents '1' with '18625'
c Var 'aux2381' order represents '1' with '1'
c Var 'aux2381' order represents '0' with '-18625'
c Encoding variable: aux2382 with domain: bool (representing constraint ((aux1747 + aux1750 + aux1751)<=1))
c Var 'aux2382' direct represents '0' with '-18626'
c Var 'aux2382' direct represents '1' with '18626'
c Var 'aux2382' order represents '1' with '1'
c Var 'aux2382' order represents '0' with '-18626'
c Encoding variable: aux2383 with domain: bool (representing constraint (1<=(aux1747 + aux1750 + aux1751)))
c Var 'aux2383' direct represents '0' with '-18627'
c Var 'aux2383' direct represents '1' with '18627'
c Var 'aux2383' order represents '1' with '1'
c Var 'aux2383' order represents '0' with '-18627'
c Encoding variable: aux2384 with domain: bool (representing constraint ((aux1753 + aux1756 + aux1757)<=1))
c Var 'aux2384' direct represents '0' with '-18628'
c Var 'aux2384' direct represents '1' with '18628'
c Var 'aux2384' order represents '1' with '1'
c Var 'aux2384' order represents '0' with '-18628'
c Encoding variable: aux2385 with domain: bool (representing constraint (1<=(aux1753 + aux1756 + aux1757)))
c Var 'aux2385' direct represents '0' with '-18629'
c Var 'aux2385' direct represents '1' with '18629'
c Var 'aux2385' order represents '1' with '1'
c Var 'aux2385' order represents '0' with '-18629'
c Encoding variable: aux2386 with domain: bool (representing constraint ((aux1759 + aux1762 + aux1763)<=1))
c Var 'aux2386' direct represents '0' with '-18630'
c Var 'aux2386' direct represents '1' with '18630'
c Var 'aux2386' order represents '1' with '1'
c Var 'aux2386' order represents '0' with '-18630'
c Encoding variable: aux2387 with domain: bool (representing constraint (1<=(aux1759 + aux1762 + aux1763)))
c Var 'aux2387' direct represents '0' with '-18631'
c Var 'aux2387' direct represents '1' with '18631'
c Var 'aux2387' order represents '1' with '1'
c Var 'aux2387' order represents '0' with '-18631'
c Encoding variable: aux2388 with domain: bool (representing constraint ((aux1765 + aux1768 + aux1769)<=1))
c Var 'aux2388' direct represents '0' with '-18632'
c Var 'aux2388' direct represents '1' with '18632'
c Var 'aux2388' order represents '1' with '1'
c Var 'aux2388' order represents '0' with '-18632'
c Encoding variable: aux2389 with domain: bool (representing constraint (1<=(aux1765 + aux1768 + aux1769)))
c Var 'aux2389' direct represents '0' with '-18633'
c Var 'aux2389' direct represents '1' with '18633'
c Var 'aux2389' order represents '1' with '1'
c Var 'aux2389' order represents '0' with '-18633'
c Encoding variable: aux2390 with domain: bool (representing constraint ((aux1771 + aux1774 + aux1775)<=1))
c Var 'aux2390' direct represents '0' with '-18634'
c Var 'aux2390' direct represents '1' with '18634'
c Var 'aux2390' order represents '1' with '1'
c Var 'aux2390' order represents '0' with '-18634'
c Encoding variable: aux2391 with domain: bool (representing constraint (1<=(aux1771 + aux1774 + aux1775)))
c Var 'aux2391' direct represents '0' with '-18635'
c Var 'aux2391' direct represents '1' with '18635'
c Var 'aux2391' order represents '1' with '1'
c Var 'aux2391' order represents '0' with '-18635'
c Encoding variable: aux2392 with domain: bool (representing constraint ((aux1777 + aux1780 + aux1781)<=1))
c Var 'aux2392' direct represents '0' with '-18636'
c Var 'aux2392' direct represents '1' with '18636'
c Var 'aux2392' order represents '1' with '1'
c Var 'aux2392' order represents '0' with '-18636'
c Encoding variable: aux2393 with domain: bool (representing constraint (1<=(aux1777 + aux1780 + aux1781)))
c Var 'aux2393' direct represents '0' with '-18637'
c Var 'aux2393' direct represents '1' with '18637'
c Var 'aux2393' order represents '1' with '1'
c Var 'aux2393' order represents '0' with '-18637'
c Encoding variable: aux2394 with domain: bool (representing constraint ((aux1783 + aux1786 + aux1787)<=1))
c Var 'aux2394' direct represents '0' with '-18638'
c Var 'aux2394' direct represents '1' with '18638'
c Var 'aux2394' order represents '1' with '1'
c Var 'aux2394' order represents '0' with '-18638'
c Encoding variable: aux2395 with domain: bool (representing constraint (1<=(aux1783 + aux1786 + aux1787)))
c Var 'aux2395' direct represents '0' with '-18639'
c Var 'aux2395' direct represents '1' with '18639'
c Var 'aux2395' order represents '1' with '1'
c Var 'aux2395' order represents '0' with '-18639'
c Encoding variable: aux2396 with domain: bool (representing constraint ((aux1789 + aux1792 + aux1793)<=1))
c Var 'aux2396' direct represents '0' with '-18640'
c Var 'aux2396' direct represents '1' with '18640'
c Var 'aux2396' order represents '1' with '1'
c Var 'aux2396' order represents '0' with '-18640'
c Encoding variable: aux2397 with domain: bool (representing constraint (1<=(aux1789 + aux1792 + aux1793)))
c Var 'aux2397' direct represents '0' with '-18641'
c Var 'aux2397' direct represents '1' with '18641'
c Var 'aux2397' order represents '1' with '1'
c Var 'aux2397' order represents '0' with '-18641'
c Encoding variable: aux2398 with domain: bool (representing constraint ((aux1795 + aux1798 + aux1799)<=1))
c Var 'aux2398' direct represents '0' with '-18642'
c Var 'aux2398' direct represents '1' with '18642'
c Var 'aux2398' order represents '1' with '1'
c Var 'aux2398' order represents '0' with '-18642'
c Encoding variable: aux2399 with domain: bool (representing constraint (1<=(aux1795 + aux1798 + aux1799)))
c Var 'aux2399' direct represents '0' with '-18643'
c Var 'aux2399' direct represents '1' with '18643'
c Var 'aux2399' order represents '1' with '1'
c Var 'aux2399' order represents '0' with '-18643'
c Encoding variable: aux2400 with domain: bool (representing constraint ((aux1801 + aux1804 + aux1805)<=1))
c Var 'aux2400' direct represents '0' with '-18644'
c Var 'aux2400' direct represents '1' with '18644'
c Var 'aux2400' order represents '1' with '1'
c Var 'aux2400' order represents '0' with '-18644'
c Encoding variable: aux2401 with domain: bool (representing constraint (1<=(aux1801 + aux1804 + aux1805)))
c Var 'aux2401' direct represents '0' with '-18645'
c Var 'aux2401' direct represents '1' with '18645'
c Var 'aux2401' order represents '1' with '1'
c Var 'aux2401' order represents '0' with '-18645'
c Encoding variable: aux2402 with domain: bool (representing constraint ((aux1807 + aux1810 + aux1811)<=1))
c Var 'aux2402' direct represents '0' with '-18646'
c Var 'aux2402' direct represents '1' with '18646'
c Var 'aux2402' order represents '1' with '1'
c Var 'aux2402' order represents '0' with '-18646'
c Encoding variable: aux2403 with domain: bool (representing constraint (1<=(aux1807 + aux1810 + aux1811)))
c Var 'aux2403' direct represents '0' with '-18647'
c Var 'aux2403' direct represents '1' with '18647'
c Var 'aux2403' order represents '1' with '1'
c Var 'aux2403' order represents '0' with '-18647'
c Encoding variable: aux2404 with domain: bool (representing constraint ((aux1813 + aux1816 + aux1817)<=1))
c Var 'aux2404' direct represents '0' with '-18648'
c Var 'aux2404' direct represents '1' with '18648'
c Var 'aux2404' order represents '1' with '1'
c Var 'aux2404' order represents '0' with '-18648'
c Encoding variable: aux2405 with domain: bool (representing constraint (1<=(aux1813 + aux1816 + aux1817)))
c Var 'aux2405' direct represents '0' with '-18649'
c Var 'aux2405' direct represents '1' with '18649'
c Var 'aux2405' order represents '1' with '1'
c Var 'aux2405' order represents '0' with '-18649'
c Encoding variable: aux2406 with domain: bool (representing constraint ((aux1819 + aux1822 + aux1823)<=1))
c Var 'aux2406' direct represents '0' with '-18650'
c Var 'aux2406' direct represents '1' with '18650'
c Var 'aux2406' order represents '1' with '1'
c Var 'aux2406' order represents '0' with '-18650'
c Encoding variable: aux2407 with domain: bool (representing constraint (1<=(aux1819 + aux1822 + aux1823)))
c Var 'aux2407' direct represents '0' with '-18651'
c Var 'aux2407' direct represents '1' with '18651'
c Var 'aux2407' order represents '1' with '1'
c Var 'aux2407' order represents '0' with '-18651'
c Encoding variable: aux2408 with domain: bool (representing constraint ((aux1825 + aux1828 + aux1829)<=1))
c Var 'aux2408' direct represents '0' with '-18652'
c Var 'aux2408' direct represents '1' with '18652'
c Var 'aux2408' order represents '1' with '1'
c Var 'aux2408' order represents '0' with '-18652'
c Encoding variable: aux2409 with domain: bool (representing constraint (1<=(aux1825 + aux1828 + aux1829)))
c Var 'aux2409' direct represents '0' with '-18653'
c Var 'aux2409' direct represents '1' with '18653'
c Var 'aux2409' order represents '1' with '1'
c Var 'aux2409' order represents '0' with '-18653'
c Encoding variable: aux2410 with domain: bool (representing constraint ((aux1831 + aux1834 + aux1835)<=1))
c Var 'aux2410' direct represents '0' with '-18654'
c Var 'aux2410' direct represents '1' with '18654'
c Var 'aux2410' order represents '1' with '1'
c Var 'aux2410' order represents '0' with '-18654'
c Encoding variable: aux2411 with domain: bool (representing constraint (1<=(aux1831 + aux1834 + aux1835)))
c Var 'aux2411' direct represents '0' with '-18655'
c Var 'aux2411' direct represents '1' with '18655'
c Var 'aux2411' order represents '1' with '1'
c Var 'aux2411' order represents '0' with '-18655'
c Encoding variable: aux2412 with domain: bool (representing constraint ((aux1837 + aux1840 + aux1841)<=1))
c Var 'aux2412' direct represents '0' with '-18656'
c Var 'aux2412' direct represents '1' with '18656'
c Var 'aux2412' order represents '1' with '1'
c Var 'aux2412' order represents '0' with '-18656'
c Encoding variable: aux2413 with domain: bool (representing constraint (1<=(aux1837 + aux1840 + aux1841)))
c Var 'aux2413' direct represents '0' with '-18657'
c Var 'aux2413' direct represents '1' with '18657'
c Var 'aux2413' order represents '1' with '1'
c Var 'aux2413' order represents '0' with '-18657'
c Encoding variable: aux2414 with domain: bool (representing constraint ((aux1843 + aux1846 + aux1847)<=1))
c Var 'aux2414' direct represents '0' with '-18658'
c Var 'aux2414' direct represents '1' with '18658'
c Var 'aux2414' order represents '1' with '1'
c Var 'aux2414' order represents '0' with '-18658'
c Encoding variable: aux2415 with domain: bool (representing constraint (1<=(aux1843 + aux1846 + aux1847)))
c Var 'aux2415' direct represents '0' with '-18659'
c Var 'aux2415' direct represents '1' with '18659'
c Var 'aux2415' order represents '1' with '1'
c Var 'aux2415' order represents '0' with '-18659'
c Encoding variable: aux2416 with domain: bool (representing constraint ((aux1849 + aux1852 + aux1853)<=1))
c Var 'aux2416' direct represents '0' with '-18660'
c Var 'aux2416' direct represents '1' with '18660'
c Var 'aux2416' order represents '1' with '1'
c Var 'aux2416' order represents '0' with '-18660'
c Encoding variable: aux2417 with domain: bool (representing constraint (1<=(aux1849 + aux1852 + aux1853)))
c Var 'aux2417' direct represents '0' with '-18661'
c Var 'aux2417' direct represents '1' with '18661'
c Var 'aux2417' order represents '1' with '1'
c Var 'aux2417' order represents '0' with '-18661'
c Encoding variable: aux2418 with domain: bool (representing constraint ((aux1855 + aux1858 + aux1859)<=1))
c Var 'aux2418' direct represents '0' with '-18662'
c Var 'aux2418' direct represents '1' with '18662'
c Var 'aux2418' order represents '1' with '1'
c Var 'aux2418' order represents '0' with '-18662'
c Encoding variable: aux2419 with domain: bool (representing constraint (1<=(aux1855 + aux1858 + aux1859)))
c Var 'aux2419' direct represents '0' with '-18663'
c Var 'aux2419' direct represents '1' with '18663'
c Var 'aux2419' order represents '1' with '1'
c Var 'aux2419' order represents '0' with '-18663'
c Encoding variable: aux2420 with domain: bool (representing constraint ((aux1861 + aux1864 + aux1865)<=1))
c Var 'aux2420' direct represents '0' with '-18664'
c Var 'aux2420' direct represents '1' with '18664'
c Var 'aux2420' order represents '1' with '1'
c Var 'aux2420' order represents '0' with '-18664'
c Encoding variable: aux2421 with domain: bool (representing constraint (1<=(aux1861 + aux1864 + aux1865)))
c Var 'aux2421' direct represents '0' with '-18665'
c Var 'aux2421' direct represents '1' with '18665'
c Var 'aux2421' order represents '1' with '1'
c Var 'aux2421' order represents '0' with '-18665'
c Encoding variable: aux2422 with domain: bool (representing constraint ((aux1867 + aux1870 + aux1871)<=1))
c Var 'aux2422' direct represents '0' with '-18666'
c Var 'aux2422' direct represents '1' with '18666'
c Var 'aux2422' order represents '1' with '1'
c Var 'aux2422' order represents '0' with '-18666'
c Encoding variable: aux2423 with domain: bool (representing constraint (1<=(aux1867 + aux1870 + aux1871)))
c Var 'aux2423' direct represents '0' with '-18667'
c Var 'aux2423' direct represents '1' with '18667'
c Var 'aux2423' order represents '1' with '1'
c Var 'aux2423' order represents '0' with '-18667'
c Encoding variable: aux2424 with domain: bool (representing constraint ((aux1873 + aux1876 + aux1877)<=1))
c Var 'aux2424' direct represents '0' with '-18668'
c Var 'aux2424' direct represents '1' with '18668'
c Var 'aux2424' order represents '1' with '1'
c Var 'aux2424' order represents '0' with '-18668'
c Encoding variable: aux2425 with domain: bool (representing constraint (1<=(aux1873 + aux1876 + aux1877)))
c Var 'aux2425' direct represents '0' with '-18669'
c Var 'aux2425' direct represents '1' with '18669'
c Var 'aux2425' order represents '1' with '1'
c Var 'aux2425' order represents '0' with '-18669'
c Encoding variable: aux2426 with domain: bool (representing constraint ((aux1879 + aux1882 + aux1883)<=1))
c Var 'aux2426' direct represents '0' with '-18670'
c Var 'aux2426' direct represents '1' with '18670'
c Var 'aux2426' order represents '1' with '1'
c Var 'aux2426' order represents '0' with '-18670'
c Encoding variable: aux2427 with domain: bool (representing constraint (1<=(aux1879 + aux1882 + aux1883)))
c Var 'aux2427' direct represents '0' with '-18671'
c Var 'aux2427' direct represents '1' with '18671'
c Var 'aux2427' order represents '1' with '1'
c Var 'aux2427' order represents '0' with '-18671'
c Encoding variable: aux2428 with domain: bool (representing constraint ((aux1885 + aux1888 + aux1889)<=1))
c Var 'aux2428' direct represents '0' with '-18672'
c Var 'aux2428' direct represents '1' with '18672'
c Var 'aux2428' order represents '1' with '1'
c Var 'aux2428' order represents '0' with '-18672'
c Encoding variable: aux2429 with domain: bool (representing constraint (1<=(aux1885 + aux1888 + aux1889)))
c Var 'aux2429' direct represents '0' with '-18673'
c Var 'aux2429' direct represents '1' with '18673'
c Var 'aux2429' order represents '1' with '1'
c Var 'aux2429' order represents '0' with '-18673'
c Encoding variable: aux2430 with domain: bool (representing constraint ((aux1891 + aux1894 + aux1895)<=1))
c Var 'aux2430' direct represents '0' with '-18674'
c Var 'aux2430' direct represents '1' with '18674'
c Var 'aux2430' order represents '1' with '1'
c Var 'aux2430' order represents '0' with '-18674'
c Encoding variable: aux2431 with domain: bool (representing constraint (1<=(aux1891 + aux1894 + aux1895)))
c Var 'aux2431' direct represents '0' with '-18675'
c Var 'aux2431' direct represents '1' with '18675'
c Var 'aux2431' order represents '1' with '1'
c Var 'aux2431' order represents '0' with '-18675'
c Encoding variable: aux2432 with domain: bool (representing constraint ((aux1897 + aux1900 + aux1901)<=1))
c Var 'aux2432' direct represents '0' with '-18676'
c Var 'aux2432' direct represents '1' with '18676'
c Var 'aux2432' order represents '1' with '1'
c Var 'aux2432' order represents '0' with '-18676'
c Encoding variable: aux2433 with domain: bool (representing constraint (1<=(aux1897 + aux1900 + aux1901)))
c Var 'aux2433' direct represents '0' with '-18677'
c Var 'aux2433' direct represents '1' with '18677'
c Var 'aux2433' order represents '1' with '1'
c Var 'aux2433' order represents '0' with '-18677'
c Encoding variable: aux2434 with domain: bool (representing constraint ((aux1903 + aux1906 + aux1907)<=1))
c Var 'aux2434' direct represents '0' with '-18678'
c Var 'aux2434' direct represents '1' with '18678'
c Var 'aux2434' order represents '1' with '1'
c Var 'aux2434' order represents '0' with '-18678'
c Encoding variable: aux2435 with domain: bool (representing constraint (1<=(aux1903 + aux1906 + aux1907)))
c Var 'aux2435' direct represents '0' with '-18679'
c Var 'aux2435' direct represents '1' with '18679'
c Var 'aux2435' order represents '1' with '1'
c Var 'aux2435' order represents '0' with '-18679'
c Encoding variable: aux2436 with domain: bool (representing constraint ((aux1909 + aux1912 + aux1913)<=1))
c Var 'aux2436' direct represents '0' with '-18680'
c Var 'aux2436' direct represents '1' with '18680'
c Var 'aux2436' order represents '1' with '1'
c Var 'aux2436' order represents '0' with '-18680'
c Encoding variable: aux2437 with domain: bool (representing constraint (1<=(aux1909 + aux1912 + aux1913)))
c Var 'aux2437' direct represents '0' with '-18681'
c Var 'aux2437' direct represents '1' with '18681'
c Var 'aux2437' order represents '1' with '1'
c Var 'aux2437' order represents '0' with '-18681'
c Encoding variable: aux2438 with domain: bool (representing constraint ((aux1915 + aux1918 + aux1919)<=1))
c Var 'aux2438' direct represents '0' with '-18682'
c Var 'aux2438' direct represents '1' with '18682'
c Var 'aux2438' order represents '1' with '1'
c Var 'aux2438' order represents '0' with '-18682'
c Encoding variable: aux2439 with domain: bool (representing constraint (1<=(aux1915 + aux1918 + aux1919)))
c Var 'aux2439' direct represents '0' with '-18683'
c Var 'aux2439' direct represents '1' with '18683'
c Var 'aux2439' order represents '1' with '1'
c Var 'aux2439' order represents '0' with '-18683'
c Encoding variable: aux2440 with domain: bool (representing constraint ((aux1921 + aux1924 + aux1925)<=1))
c Var 'aux2440' direct represents '0' with '-18684'
c Var 'aux2440' direct represents '1' with '18684'
c Var 'aux2440' order represents '1' with '1'
c Var 'aux2440' order represents '0' with '-18684'
c Encoding variable: aux2441 with domain: bool (representing constraint (1<=(aux1921 + aux1924 + aux1925)))
c Var 'aux2441' direct represents '0' with '-18685'
c Var 'aux2441' direct represents '1' with '18685'
c Var 'aux2441' order represents '1' with '1'
c Var 'aux2441' order represents '0' with '-18685'
c (((aux379 + aux382 + aux383)<=7)=tv=SATLiteral(18170))
-18170 8640 0
-18170 8576 8638 0
-18170 8577 8636 0
-18170 8579 8634 0
-18170 8581 8632 0
-18170 8583 8630 0
-18170 8585 8628 0
-18170 8587 8627 0
-18170 8589 0
-18170 8591 0
-18170 8593 0
-18170 8595 0
-18170 8597 0
-18170 8599 0
-18170 8601 0
-18170 8603 0
-18170 8605 0
-18170 8607 0
-18170 8609 0
-18170 8611 0
-18170 8613 0
-18170 8615 0
-18170 8617 0
-18170 8619 0
-18170 8621 0
-18170 8623 0
-18170 8625 0
-18170 8471 8638 0
-18170 8471 8576 8636 0
-18170 8471 8577 8634 0
-18170 8471 8579 8632 0
-18170 8471 8581 8630 0
-18170 8471 8583 8628 0
-18170 8471 8585 8627 0
-18170 8471 8587 0
-18170 8471 8589 0
-18170 8471 8591 0
-18170 8471 8593 0
-18170 8471 8595 0
-18170 8471 8597 0
-18170 8471 8599 0
-18170 8471 8601 0
-18170 8471 8603 0
-18170 8471 8605 0
-18170 8471 8607 0
-18170 8471 8609 0
-18170 8471 8611 0
-18170 8471 8613 0
-18170 8471 8615 0
-18170 8471 8617 0
-18170 8471 8619 0
-18170 8471 8621 0
-18170 8471 8623 0
-18170 8471 8625 0
-18170 8472 8636 0
-18170 8472 8576 8634 0
-18170 8472 8577 8632 0
-18170 8472 8579 8630 0
-18170 8472 8581 8628 0
-18170 8472 8583 8627 0
-18170 8472 8585 0
-18170 8472 8587 0
-18170 8472 8589 0
-18170 8472 8591 0
-18170 8472 8593 0
-18170 8472 8595 0
-18170 8472 8597 0
-18170 8472 8599 0
-18170 8472 8601 0
-18170 8472 8603 0
-18170 8472 8605 0
-18170 8472 8607 0
-18170 8472 8609 0
-18170 8472 8611 0
-18170 8472 8613 0
-18170 8472 8615 0
-18170 8472 8617 0
-18170 8472 8619 0
-18170 8472 8621 0
-18170 8472 8623 0
-18170 8472 8625 0
-18170 8474 8634 0
-18170 8474 8576 8632 0
-18170 8474 8577 8630 0
-18170 8474 8579 8628 0
-18170 8474 8581 8627 0
-18170 8474 8583 0
-18170 8474 8585 0
-18170 8474 8587 0
-18170 8474 8589 0
-18170 8474 8591 0
-18170 8474 8593 0
-18170 8474 8595 0
-18170 8474 8597 0
-18170 8474 8599 0
-18170 8474 8601 0
-18170 8474 8603 0
-18170 8474 8605 0
-18170 8474 8607 0
-18170 8474 8609 0
-18170 8474 8611 0
-18170 8474 8613 0
-18170 8474 8615 0
-18170 8474 8617 0
-18170 8474 8619 0
-18170 8474 8621 0
-18170 8474 8623 0
-18170 8474 8625 0
-18170 8476 8632 0
-18170 8476 8576 8630 0
-18170 8476 8577 8628 0
-18170 8476 8579 8627 0
-18170 8476 8581 0
-18170 8476 8583 0
-18170 8476 8585 0
-18170 8476 8587 0
-18170 8476 8589 0
-18170 8476 8591 0
-18170 8476 8593 0
-18170 8476 8595 0
-18170 8476 8597 0
-18170 8476 8599 0
-18170 8476 8601 0
-18170 8476 8603 0
-18170 8476 8605 0
-18170 8476 8607 0
-18170 8476 8609 0
-18170 8476 8611 0
-18170 8476 8613 0
-18170 8476 8615 0
-18170 8476 8617 0
-18170 8476 8619 0
-18170 8476 8621 0
-18170 8476 8623 0
-18170 8476 8625 0
-18170 8478 8630 0
-18170 8478 8576 8628 0
-18170 8478 8577 8627 0
-18170 8478 8579 0
-18170 8478 8581 0
-18170 8478 8583 0
-18170 8478 8585 0
-18170 8478 8587 0
-18170 8478 8589 0
-18170 8478 8591 0
-18170 8478 8593 0
-18170 8478 8595 0
-18170 8478 8597 0
-18170 8478 8599 0
-18170 8478 8601 0
-18170 8478 8603 0
-18170 8478 8605 0
-18170 8478 8607 0
-18170 8478 8609 0
-18170 8478 8611 0
-18170 8478 8613 0
-18170 8478 8615 0
-18170 8478 8617 0
-18170 8478 8619 0
-18170 8478 8621 0
-18170 8478 8623 0
-18170 8478 8625 0
-18170 8480 8628 0
-18170 8480 8576 8627 0
-18170 8480 8577 0
-18170 8480 8579 0
-18170 8480 8581 0
-18170 8480 8583 0
-18170 8480 8585 0
-18170 8480 8587 0
-18170 8480 8589 0
-18170 8480 8591 0
-18170 8480 8593 0
-18170 8480 8595 0
-18170 8480 8597 0
-18170 8480 8599 0
-18170 8480 8601 0
-18170 8480 8603 0
-18170 8480 8605 0
-18170 8480 8607 0
-18170 8480 8609 0
-18170 8480 8611 0
-18170 8480 8613 0
-18170 8480 8615 0
-18170 8480 8617 0
-18170 8480 8619 0
-18170 8480 8621 0
-18170 8480 8623 0
-18170 8480 8625 0
-18170 8482 8627 0
-18170 8482 8576 0
-18170 8482 8577 0
-18170 8482 8579 0
-18170 8482 8581 0
-18170 8482 8583 0
-18170 8482 8585 0
-18170 8482 8587 0
-18170 8482 8589 0
-18170 8482 8591 0
-18170 8482 8593 0
-18170 8482 8595 0
-18170 8482 8597 0
-18170 8482 8599 0
-18170 8482 8601 0
-18170 8482 8603 0
-18170 8482 8605 0
-18170 8482 8607 0
-18170 8482 8609 0
-18170 8482 8611 0
-18170 8482 8613 0
-18170 8482 8615 0
-18170 8482 8617 0
-18170 8482 8619 0
-18170 8482 8621 0
-18170 8482 8623 0
-18170 8482 8625 0
-18170 8484 0
-18170 8484 8576 0
-18170 8484 8577 0
-18170 8484 8579 0
-18170 8484 8581 0
-18170 8484 8583 0
-18170 8484 8585 0
-18170 8484 8587 0
-18170 8484 8589 0
-18170 8484 8591 0
-18170 8484 8593 0
-18170 8484 8595 0
-18170 8484 8597 0
-18170 8484 8599 0
-18170 8484 8601 0
-18170 8484 8603 0
-18170 8484 8605 0
-18170 8484 8607 0
-18170 8484 8609 0
-18170 8484 8611 0
-18170 8484 8613 0
-18170 8484 8615 0
-18170 8484 8617 0
-18170 8484 8619 0
-18170 8484 8621 0
-18170 8484 8623 0
-18170 8484 8625 0
-18170 8486 0
-18170 8486 8576 0
-18170 8486 8577 0
-18170 8486 8579 0
-18170 8486 8581 0
-18170 8486 8583 0
-18170 8486 8585 0
-18170 8486 8587 0
-18170 8486 8589 0
-18170 8486 8591 0
-18170 8486 8593 0
-18170 8486 8595 0
-18170 8486 8597 0
-18170 8486 8599 0
-18170 8486 8601 0
-18170 8486 8603 0
-18170 8486 8605 0
-18170 8486 8607 0
-18170 8486 8609 0
-18170 8486 8611 0
-18170 8486 8613 0
-18170 8486 8615 0
-18170 8486 8617 0
-18170 8486 8619 0
-18170 8486 8621 0
-18170 8486 8623 0
-18170 8486 8625 0
-18170 8488 0
-18170 8488 8576 0
-18170 8488 8577 0
-18170 8488 8579 0
-18170 8488 8581 0
-18170 8488 8583 0
-18170 8488 8585 0
-18170 8488 8587 0
-18170 8488 8589 0
-18170 8488 8591 0
-18170 8488 8593 0
-18170 8488 8595 0
-18170 8488 8597 0
-18170 8488 8599 0
-18170 8488 8601 0
-18170 8488 8603 0
-18170 8488 8605 0
-18170 8488 8607 0
-18170 8488 8609 0
-18170 8488 8611 0
-18170 8488 8613 0
-18170 8488 8615 0
-18170 8488 8617 0
-18170 8488 8619 0
-18170 8488 8621 0
-18170 8488 8623 0
-18170 8488 8625 0
-18170 8490 0
-18170 8490 8576 0
-18170 8490 8577 0
-18170 8490 8579 0
-18170 8490 8581 0
-18170 8490 8583 0
-18170 8490 8585 0
-18170 8490 8587 0
-18170 8490 8589 0
-18170 8490 8591 0
-18170 8490 8593 0
-18170 8490 8595 0
-18170 8490 8597 0
-18170 8490 8599 0
-18170 8490 8601 0
-18170 8490 8603 0
-18170 8490 8605 0
-18170 8490 8607 0
-18170 8490 8609 0
-18170 8490 8611 0
-18170 8490 8613 0
-18170 8490 8615 0
-18170 8490 8617 0
-18170 8490 8619 0
-18170 8490 8621 0
-18170 8490 8623 0
-18170 8490 8625 0
-18170 8492 0
-18170 8492 8576 0
-18170 8492 8577 0
-18170 8492 8579 0
-18170 8492 8581 0
-18170 8492 8583 0
-18170 8492 8585 0
-18170 8492 8587 0
-18170 8492 8589 0
-18170 8492 8591 0
-18170 8492 8593 0
-18170 8492 8595 0
-18170 8492 8597 0
-18170 8492 8599 0
-18170 8492 8601 0
-18170 8492 8603 0
-18170 8492 8605 0
-18170 8492 8607 0
-18170 8492 8609 0
-18170 8492 8611 0
-18170 8492 8613 0
-18170 8492 8615 0
-18170 8492 8617 0
-18170 8492 8619 0
-18170 8492 8621 0
-18170 8492 8623 0
-18170 8492 8625 0
-18170 8494 0
-18170 8494 8576 0
-18170 8494 8577 0
-18170 8494 8579 0
-18170 8494 8581 0
-18170 8494 8583 0
-18170 8494 8585 0
-18170 8494 8587 0
-18170 8494 8589 0
-18170 8494 8591 0
-18170 8494 8593 0
-18170 8494 8595 0
-18170 8494 8597 0
-18170 8494 8599 0
-18170 8494 8601 0
-18170 8494 8603 0
-18170 8494 8605 0
-18170 8494 8607 0
-18170 8494 8609 0
-18170 8494 8611 0
-18170 8494 8613 0
-18170 8494 8615 0
-18170 8494 8617 0
-18170 8494 8619 0
-18170 8494 8621 0
-18170 8494 8623 0
-18170 8494 8625 0
-18170 8496 0
-18170 8496 8576 0
-18170 8496 8577 0
-18170 8496 8579 0
-18170 8496 8581 0
-18170 8496 8583 0
-18170 8496 8585 0
-18170 8496 8587 0
-18170 8496 8589 0
-18170 8496 8591 0
-18170 8496 8593 0
-18170 8496 8595 0
-18170 8496 8597 0
-18170 8496 8599 0
-18170 8496 8601 0
-18170 8496 8603 0
-18170 8496 8605 0
-18170 8496 8607 0
-18170 8496 8609 0
-18170 8496 8611 0
-18170 8496 8613 0
-18170 8496 8615 0
-18170 8496 8617 0
-18170 8496 8619 0
-18170 8496 8621 0
-18170 8496 8623 0
-18170 8496 8625 0
-18170 8498 0
-18170 8498 8576 0
-18170 8498 8577 0
-18170 8498 8579 0
-18170 8498 8581 0
-18170 8498 8583 0
-18170 8498 8585 0
-18170 8498 8587 0
-18170 8498 8589 0
-18170 8498 8591 0
-18170 8498 8593 0
-18170 8498 8595 0
-18170 8498 8597 0
-18170 8498 8599 0
-18170 8498 8601 0
-18170 8498 8603 0
-18170 8498 8605 0
-18170 8498 8607 0
-18170 8498 8609 0
-18170 8498 8611 0
-18170 8498 8613 0
-18170 8498 8615 0
-18170 8498 8617 0
-18170 8498 8619 0
-18170 8498 8621 0
-18170 8498 8623 0
-18170 8498 8625 0
-18170 8500 0
-18170 8500 8576 0
-18170 8500 8577 0
-18170 8500 8579 0
-18170 8500 8581 0
-18170 8500 8583 0
-18170 8500 8585 0
-18170 8500 8587 0
-18170 8500 8589 0
-18170 8500 8591 0
-18170 8500 8593 0
-18170 8500 8595 0
-18170 8500 8597 0
-18170 8500 8599 0
-18170 8500 8601 0
-18170 8500 8603 0
-18170 8500 8605 0
-18170 8500 8607 0
-18170 8500 8609 0
-18170 8500 8611 0
-18170 8500 8613 0
-18170 8500 8615 0
-18170 8500 8617 0
-18170 8500 8619 0
-18170 8500 8621 0
-18170 8500 8623 0
-18170 8500 8625 0
-18170 8502 0
-18170 8502 8576 0
-18170 8502 8577 0
-18170 8502 8579 0
-18170 8502 8581 0
-18170 8502 8583 0
-18170 8502 8585 0
-18170 8502 8587 0
-18170 8502 8589 0
-18170 8502 8591 0
-18170 8502 8593 0
-18170 8502 8595 0
-18170 8502 8597 0
-18170 8502 8599 0
-18170 8502 8601 0
-18170 8502 8603 0
-18170 8502 8605 0
-18170 8502 8607 0
-18170 8502 8609 0
-18170 8502 8611 0
-18170 8502 8613 0
-18170 8502 8615 0
-18170 8502 8617 0
-18170 8502 8619 0
-18170 8502 8621 0
-18170 8502 8623 0
-18170 8502 8625 0
-18170 8504 0
-18170 8504 8576 0
-18170 8504 8577 0
-18170 8504 8579 0
-18170 8504 8581 0
-18170 8504 8583 0
-18170 8504 8585 0
-18170 8504 8587 0
-18170 8504 8589 0
-18170 8504 8591 0
-18170 8504 8593 0
-18170 8504 8595 0
-18170 8504 8597 0
-18170 8504 8599 0
-18170 8504 8601 0
-18170 8504 8603 0
-18170 8504 8605 0
-18170 8504 8607 0
-18170 8504 8609 0
-18170 8504 8611 0
-18170 8504 8613 0
-18170 8504 8615 0
-18170 8504 8617 0
-18170 8504 8619 0
-18170 8504 8621 0
-18170 8504 8623 0
-18170 8504 8625 0
18170 -8484 -8576 -8627 0
18170 -8482 -8577 -8627 0
18170 -8482 -8576 -8628 0
18170 -8480 -8579 -8627 0
18170 -8480 -8577 -8628 0
18170 -8480 -8576 -8630 0
18170 -8478 -8581 -8627 0
18170 -8478 -8579 -8628 0
18170 -8478 -8577 -8630 0
18170 -8478 -8576 -8632 0
18170 -8476 -8583 -8627 0
18170 -8476 -8581 -8628 0
18170 -8476 -8579 -8630 0
18170 -8476 -8577 -8632 0
18170 -8476 -8576 -8634 0
18170 -8474 -8585 -8627 0
18170 -8474 -8583 -8628 0
18170 -8474 -8581 -8630 0
18170 -8474 -8579 -8632 0
18170 -8474 -8577 -8634 0
18170 -8474 -8576 -8636 0
18170 -8472 -8587 -8627 0
18170 -8472 -8585 -8628 0
18170 -8472 -8583 -8630 0
18170 -8472 -8581 -8632 0
18170 -8472 -8579 -8634 0
18170 -8472 -8577 -8636 0
18170 -8472 -8576 -8638 0
18170 -8471 -8589 -8627 0
18170 -8471 -8587 -8628 0
18170 -8471 -8585 -8630 0
18170 -8471 -8583 -8632 0
18170 -8471 -8581 -8634 0
18170 -8471 -8579 -8636 0
18170 -8471 -8577 -8638 0
18170 -8471 -8576 -8640 0
c ((7<=(aux379 + aux382 + aux383))=tv=SATLiteral(18171))
-18171 -8482 -8576 -8627 0
-18171 -8480 -8577 -8627 0
-18171 -8480 -8576 -8628 0
-18171 -8478 -8579 -8627 0
-18171 -8478 -8577 -8628 0
-18171 -8478 -8576 -8630 0
-18171 -8476 -8581 -8627 0
-18171 -8476 -8579 -8628 0
-18171 -8476 -8577 -8630 0
-18171 -8476 -8576 -8632 0
-18171 -8474 -8583 -8627 0
-18171 -8474 -8581 -8628 0
-18171 -8474 -8579 -8630 0
-18171 -8474 -8577 -8632 0
-18171 -8474 -8576 -8634 0
-18171 -8472 -8585 -8627 0
-18171 -8472 -8583 -8628 0
-18171 -8472 -8581 -8630 0
-18171 -8472 -8579 -8632 0
-18171 -8472 -8577 -8634 0
-18171 -8472 -8576 -8636 0
-18171 -8471 -8587 -8627 0
-18171 -8471 -8585 -8628 0
-18171 -8471 -8583 -8630 0
-18171 -8471 -8581 -8632 0
-18171 -8471 -8579 -8634 0
-18171 -8471 -8577 -8636 0
-18171 -8471 -8576 -8638 0
18171 8638 0
18171 8576 8636 0
18171 8577 8634 0
18171 8579 8632 0
18171 8581 8630 0
18171 8583 8628 0
18171 8585 8627 0
18171 8587 0
18171 8589 0
18171 8591 0
18171 8593 0
18171 8595 0
18171 8597 0
18171 8599 0
18171 8601 0
18171 8603 0
18171 8605 0
18171 8607 0
18171 8609 0
18171 8611 0
18171 8613 0
18171 8615 0
18171 8617 0
18171 8619 0
18171 8621 0
18171 8623 0
18171 8625 0
18171 8471 8636 0
18171 8471 8576 8634 0
18171 8471 8577 8632 0
18171 8471 8579 8630 0
18171 8471 8581 8628 0
18171 8471 8583 8627 0
18171 8471 8585 0
18171 8471 8587 0
18171 8471 8589 0
18171 8471 8591 0
18171 8471 8593 0
18171 8471 8595 0
18171 8471 8597 0
18171 8471 8599 0
18171 8471 8601 0
18171 8471 8603 0
18171 8471 8605 0
18171 8471 8607 0
18171 8471 8609 0
18171 8471 8611 0
18171 8471 8613 0
18171 8471 8615 0
18171 8471 8617 0
18171 8471 8619 0
18171 8471 8621 0
18171 8471 8623 0
18171 8471 8625 0
18171 8472 8634 0
18171 8472 8576 8632 0
18171 8472 8577 8630 0
18171 8472 8579 8628 0
18171 8472 8581 8627 0
18171 8472 8583 0
18171 8472 8585 0
18171 8472 8587 0
18171 8472 8589 0
18171 8472 8591 0
18171 8472 8593 0
18171 8472 8595 0
18171 8472 8597 0
18171 8472 8599 0
18171 8472 8601 0
18171 8472 8603 0
18171 8472 8605 0
18171 8472 8607 0
18171 8472 8609 0
18171 8472 8611 0
18171 8472 8613 0
18171 8472 8615 0
18171 8472 8617 0
18171 8472 8619 0
18171 8472 8621 0
18171 8472 8623 0
18171 8472 8625 0
18171 8474 8632 0
18171 8474 8576 8630 0
18171 8474 8577 8628 0
18171 8474 8579 8627 0
18171 8474 8581 0
18171 8474 8583 0
18171 8474 8585 0
18171 8474 8587 0
18171 8474 8589 0
18171 8474 8591 0
18171 8474 8593 0
18171 8474 8595 0
18171 8474 8597 0
18171 8474 8599 0
18171 8474 8601 0
18171 8474 8603 0
18171 8474 8605 0
18171 8474 8607 0
18171 8474 8609 0
18171 8474 8611 0
18171 8474 8613 0
18171 8474 8615 0
18171 8474 8617 0
18171 8474 8619 0
18171 8474 8621 0
18171 8474 8623 0
18171 8474 8625 0
18171 8476 8630 0
18171 8476 8576 8628 0
18171 8476 8577 8627 0
18171 8476 8579 0
18171 8476 8581 0
18171 8476 8583 0
18171 8476 8585 0
18171 8476 8587 0
18171 8476 8589 0
18171 8476 8591 0
18171 8476 8593 0
18171 8476 8595 0
18171 8476 8597 0
18171 8476 8599 0
18171 8476 8601 0
18171 8476 8603 0
18171 8476 8605 0
18171 8476 8607 0
18171 8476 8609 0
18171 8476 8611 0
18171 8476 8613 0
18171 8476 8615 0
18171 8476 8617 0
18171 8476 8619 0
18171 8476 8621 0
18171 8476 8623 0
18171 8476 8625 0
18171 8478 8628 0
18171 8478 8576 8627 0
18171 8478 8577 0
18171 8478 8579 0
18171 8478 8581 0
18171 8478 8583 0
18171 8478 8585 0
18171 8478 8587 0
18171 8478 8589 0
18171 8478 8591 0
18171 8478 8593 0
18171 8478 8595 0
18171 8478 8597 0
18171 8478 8599 0
18171 8478 8601 0
18171 8478 8603 0
18171 8478 8605 0
18171 8478 8607 0
18171 8478 8609 0
18171 8478 8611 0
18171 8478 8613 0
18171 8478 8615 0
18171 8478 8617 0
18171 8478 8619 0
18171 8478 8621 0
18171 8478 8623 0
18171 8478 8625 0
18171 8480 8627 0
18171 8480 8576 0
18171 8480 8577 0
18171 8480 8579 0
18171 8480 8581 0
18171 8480 8583 0
18171 8480 8585 0
18171 8480 8587 0
18171 8480 8589 0
18171 8480 8591 0
18171 8480 8593 0
18171 8480 8595 0
18171 8480 8597 0
18171 8480 8599 0
18171 8480 8601 0
18171 8480 8603 0
18171 8480 8605 0
18171 8480 8607 0
18171 8480 8609 0
18171 8480 8611 0
18171 8480 8613 0
18171 8480 8615 0
18171 8480 8617 0
18171 8480 8619 0
18171 8480 8621 0
18171 8480 8623 0
18171 8480 8625 0
18171 8482 0
18171 8482 8576 0
18171 8482 8577 0
18171 8482 8579 0
18171 8482 8581 0
18171 8482 8583 0
18171 8482 8585 0
18171 8482 8587 0
18171 8482 8589 0
18171 8482 8591 0
18171 8482 8593 0
18171 8482 8595 0
18171 8482 8597 0
18171 8482 8599 0
18171 8482 8601 0
18171 8482 8603 0
18171 8482 8605 0
18171 8482 8607 0
18171 8482 8609 0
18171 8482 8611 0
18171 8482 8613 0
18171 8482 8615 0
18171 8482 8617 0
18171 8482 8619 0
18171 8482 8621 0
18171 8482 8623 0
18171 8482 8625 0
18171 8484 0
18171 8484 8576 0
18171 8484 8577 0
18171 8484 8579 0
18171 8484 8581 0
18171 8484 8583 0
18171 8484 8585 0
18171 8484 8587 0
18171 8484 8589 0
18171 8484 8591 0
18171 8484 8593 0
18171 8484 8595 0
18171 8484 8597 0
18171 8484 8599 0
18171 8484 8601 0
18171 8484 8603 0
18171 8484 8605 0
18171 8484 8607 0
18171 8484 8609 0
18171 8484 8611 0
18171 8484 8613 0
18171 8484 8615 0
18171 8484 8617 0
18171 8484 8619 0
18171 8484 8621 0
18171 8484 8623 0
18171 8484 8625 0
18171 8486 0
18171 8486 8576 0
18171 8486 8577 0
18171 8486 8579 0
18171 8486 8581 0
18171 8486 8583 0
18171 8486 8585 0
18171 8486 8587 0
18171 8486 8589 0
18171 8486 8591 0
18171 8486 8593 0
18171 8486 8595 0
18171 8486 8597 0
18171 8486 8599 0
18171 8486 8601 0
18171 8486 8603 0
18171 8486 8605 0
18171 8486 8607 0
18171 8486 8609 0
18171 8486 8611 0
18171 8486 8613 0
18171 8486 8615 0
18171 8486 8617 0
18171 8486 8619 0
18171 8486 8621 0
18171 8486 8623 0
18171 8486 8625 0
18171 8488 0
18171 8488 8576 0
18171 8488 8577 0
18171 8488 8579 0
18171 8488 8581 0
18171 8488 8583 0
18171 8488 8585 0
18171 8488 8587 0
18171 8488 8589 0
18171 8488 8591 0
18171 8488 8593 0
18171 8488 8595 0
18171 8488 8597 0
18171 8488 8599 0
18171 8488 8601 0
18171 8488 8603 0
18171 8488 8605 0
18171 8488 8607 0
18171 8488 8609 0
18171 8488 8611 0
18171 8488 8613 0
18171 8488 8615 0
18171 8488 8617 0
18171 8488 8619 0
18171 8488 8621 0
18171 8488 8623 0
18171 8488 8625 0
18171 8490 0
18171 8490 8576 0
18171 8490 8577 0
18171 8490 8579 0
18171 8490 8581 0
18171 8490 8583 0
18171 8490 8585 0
18171 8490 8587 0
18171 8490 8589 0
18171 8490 8591 0
18171 8490 8593 0
18171 8490 8595 0
18171 8490 8597 0
18171 8490 8599 0
18171 8490 8601 0
18171 8490 8603 0
18171 8490 8605 0
18171 8490 8607 0
18171 8490 8609 0
18171 8490 8611 0
18171 8490 8613 0
18171 8490 8615 0
18171 8490 8617 0
18171 8490 8619 0
18171 8490 8621 0
18171 8490 8623 0
18171 8490 8625 0
18171 8492 0
18171 8492 8576 0
18171 8492 8577 0
18171 8492 8579 0
18171 8492 8581 0
18171 8492 8583 0
18171 8492 8585 0
18171 8492 8587 0
18171 8492 8589 0
18171 8492 8591 0
18171 8492 8593 0
18171 8492 8595 0
18171 8492 8597 0
18171 8492 8599 0
18171 8492 8601 0
18171 8492 8603 0
18171 8492 8605 0
18171 8492 8607 0
18171 8492 8609 0
18171 8492 8611 0
18171 8492 8613 0
18171 8492 8615 0
18171 8492 8617 0
18171 8492 8619 0
18171 8492 8621 0
18171 8492 8623 0
18171 8492 8625 0
18171 8494 0
18171 8494 8576 0
18171 8494 8577 0
18171 8494 8579 0
18171 8494 8581 0
18171 8494 8583 0
18171 8494 8585 0
18171 8494 8587 0
18171 8494 8589 0
18171 8494 8591 0
18171 8494 8593 0
18171 8494 8595 0
18171 8494 8597 0
18171 8494 8599 0
18171 8494 8601 0
18171 8494 8603 0
18171 8494 8605 0
18171 8494 8607 0
18171 8494 8609 0
18171 8494 8611 0
18171 8494 8613 0
18171 8494 8615 0
18171 8494 8617 0
18171 8494 8619 0
18171 8494 8621 0
18171 8494 8623 0
18171 8494 8625 0
18171 8496 0
18171 8496 8576 0
18171 8496 8577 0
18171 8496 8579 0
18171 8496 8581 0
18171 8496 8583 0
18171 8496 8585 0
18171 8496 8587 0
18171 8496 8589 0
18171 8496 8591 0
18171 8496 8593 0
18171 8496 8595 0
18171 8496 8597 0
18171 8496 8599 0
18171 8496 8601 0
18171 8496 8603 0
18171 8496 8605 0
18171 8496 8607 0
18171 8496 8609 0
18171 8496 8611 0
18171 8496 8613 0
18171 8496 8615 0
18171 8496 8617 0
18171 8496 8619 0
18171 8496 8621 0
18171 8496 8623 0
18171 8496 8625 0
18171 8498 0
18171 8498 8576 0
18171 8498 8577 0
18171 8498 8579 0
18171 8498 8581 0
18171 8498 8583 0
18171 8498 8585 0
18171 8498 8587 0
18171 8498 8589 0
18171 8498 8591 0
18171 8498 8593 0
18171 8498 8595 0
18171 8498 8597 0
18171 8498 8599 0
18171 8498 8601 0
18171 8498 8603 0
18171 8498 8605 0
18171 8498 8607 0
18171 8498 8609 0
18171 8498 8611 0
18171 8498 8613 0
18171 8498 8615 0
18171 8498 8617 0
18171 8498 8619 0
18171 8498 8621 0
18171 8498 8623 0
18171 8498 8625 0
18171 8500 0
18171 8500 8576 0
18171 8500 8577 0
18171 8500 8579 0
18171 8500 8581 0
18171 8500 8583 0
18171 8500 8585 0
18171 8500 8587 0
18171 8500 8589 0
18171 8500 8591 0
18171 8500 8593 0
18171 8500 8595 0
18171 8500 8597 0
18171 8500 8599 0
18171 8500 8601 0
18171 8500 8603 0
18171 8500 8605 0
18171 8500 8607 0
18171 8500 8609 0
18171 8500 8611 0
18171 8500 8613 0
18171 8500 8615 0
18171 8500 8617 0
18171 8500 8619 0
18171 8500 8621 0
18171 8500 8623 0
18171 8500 8625 0
18171 8502 0
18171 8502 8576 0
18171 8502 8577 0
18171 8502 8579 0
18171 8502 8581 0
18171 8502 8583 0
18171 8502 8585 0
18171 8502 8587 0
18171 8502 8589 0
18171 8502 8591 0
18171 8502 8593 0
18171 8502 8595 0
18171 8502 8597 0
18171 8502 8599 0
18171 8502 8601 0
18171 8502 8603 0
18171 8502 8605 0
18171 8502 8607 0
18171 8502 8609 0
18171 8502 8611 0
18171 8502 8613 0
18171 8502 8615 0
18171 8502 8617 0
18171 8502 8619 0
18171 8502 8621 0
18171 8502 8623 0
18171 8502 8625 0
18171 8504 0
18171 8504 8576 0
18171 8504 8577 0
18171 8504 8579 0
18171 8504 8581 0
18171 8504 8583 0
18171 8504 8585 0
18171 8504 8587 0
18171 8504 8589 0
18171 8504 8591 0
18171 8504 8593 0
18171 8504 8595 0
18171 8504 8597 0
18171 8504 8599 0
18171 8504 8601 0
18171 8504 8603 0
18171 8504 8605 0
18171 8504 8607 0
18171 8504 8609 0
18171 8504 8611 0
18171 8504 8613 0
18171 8504 8615 0
18171 8504 8617 0
18171 8504 8619 0
18171 8504 8621 0
18171 8504 8623 0
18171 8504 8625 0
c (((aux385 + aux388 + aux389)<=16)=tv=SATLiteral(18172))
-18172 8918 0
-18172 8836 8916 0
-18172 8837 8914 0
-18172 8839 8912 0
-18172 8841 8910 0
-18172 8843 8908 0
-18172 8845 8906 0
-18172 8847 8904 0
-18172 8849 8902 0
-18172 8851 8900 0
-18172 8853 8898 0
-18172 8855 8896 0
-18172 8857 8894 0
-18172 8859 8892 0
-18172 8861 8890 0
-18172 8863 8888 0
-18172 8865 8887 0
-18172 8867 0
-18172 8869 0
-18172 8871 0
-18172 8873 0
-18172 8875 0
-18172 8877 0
-18172 8879 0
-18172 8881 0
-18172 8883 0
-18172 8885 0
-18172 8731 8916 0
-18172 8731 8836 8914 0
-18172 8731 8837 8912 0
-18172 8731 8839 8910 0
-18172 8731 8841 8908 0
-18172 8731 8843 8906 0
-18172 8731 8845 8904 0
-18172 8731 8847 8902 0
-18172 8731 8849 8900 0
-18172 8731 8851 8898 0
-18172 8731 8853 8896 0
-18172 8731 8855 8894 0
-18172 8731 8857 8892 0
-18172 8731 8859 8890 0
-18172 8731 8861 8888 0
-18172 8731 8863 8887 0
-18172 8731 8865 0
-18172 8731 8867 0
-18172 8731 8869 0
-18172 8731 8871 0
-18172 8731 8873 0
-18172 8731 8875 0
-18172 8731 8877 0
-18172 8731 8879 0
-18172 8731 8881 0
-18172 8731 8883 0
-18172 8731 8885 0
-18172 8732 8914 0
-18172 8732 8836 8912 0
-18172 8732 8837 8910 0
-18172 8732 8839 8908 0
-18172 8732 8841 8906 0
-18172 8732 8843 8904 0
-18172 8732 8845 8902 0
-18172 8732 8847 8900 0
-18172 8732 8849 8898 0
-18172 8732 8851 8896 0
-18172 8732 8853 8894 0
-18172 8732 8855 8892 0
-18172 8732 8857 8890 0
-18172 8732 8859 8888 0
-18172 8732 8861 8887 0
-18172 8732 8863 0
-18172 8732 8865 0
-18172 8732 8867 0
-18172 8732 8869 0
-18172 8732 8871 0
-18172 8732 8873 0
-18172 8732 8875 0
-18172 8732 8877 0
-18172 8732 8879 0
-18172 8732 8881 0
-18172 8732 8883 0
-18172 8732 8885 0
-18172 8734 8912 0
-18172 8734 8836 8910 0
-18172 8734 8837 8908 0
-18172 8734 8839 8906 0
-18172 8734 8841 8904 0
-18172 8734 8843 8902 0
-18172 8734 8845 8900 0
-18172 8734 8847 8898 0
-18172 8734 8849 8896 0
-18172 8734 8851 8894 0
-18172 8734 8853 8892 0
-18172 8734 8855 8890 0
-18172 8734 8857 8888 0
-18172 8734 8859 8887 0
-18172 8734 8861 0
-18172 8734 8863 0
-18172 8734 8865 0
-18172 8734 8867 0
-18172 8734 8869 0
-18172 8734 8871 0
-18172 8734 8873 0
-18172 8734 8875 0
-18172 8734 8877 0
-18172 8734 8879 0
-18172 8734 8881 0
-18172 8734 8883 0
-18172 8734 8885 0
-18172 8736 8910 0
-18172 8736 8836 8908 0
-18172 8736 8837 8906 0
-18172 8736 8839 8904 0
-18172 8736 8841 8902 0
-18172 8736 8843 8900 0
-18172 8736 8845 8898 0
-18172 8736 8847 8896 0
-18172 8736 8849 8894 0
-18172 8736 8851 8892 0
-18172 8736 8853 8890 0
-18172 8736 8855 8888 0
-18172 8736 8857 8887 0
-18172 8736 8859 0
-18172 8736 8861 0
-18172 8736 8863 0
-18172 8736 8865 0
-18172 8736 8867 0
-18172 8736 8869 0
-18172 8736 8871 0
-18172 8736 8873 0
-18172 8736 8875 0
-18172 8736 8877 0
-18172 8736 8879 0
-18172 8736 8881 0
-18172 8736 8883 0
-18172 8736 8885 0
-18172 8738 8908 0
-18172 8738 8836 8906 0
-18172 8738 8837 8904 0
-18172 8738 8839 8902 0
-18172 8738 8841 8900 0
-18172 8738 8843 8898 0
-18172 8738 8845 8896 0
-18172 8738 8847 8894 0
-18172 8738 8849 8892 0
-18172 8738 8851 8890 0
-18172 8738 8853 8888 0
-18172 8738 8855 8887 0
-18172 8738 8857 0
-18172 8738 8859 0
-18172 8738 8861 0
-18172 8738 8863 0
-18172 8738 8865 0
-18172 8738 8867 0
-18172 8738 8869 0
-18172 8738 8871 0
-18172 8738 8873 0
-18172 8738 8875 0
-18172 8738 8877 0
-18172 8738 8879 0
-18172 8738 8881 0
-18172 8738 8883 0
-18172 8738 8885 0
-18172 8740 8906 0
-18172 8740 8836 8904 0
-18172 8740 8837 8902 0
-18172 8740 8839 8900 0
-18172 8740 8841 8898 0
-18172 8740 8843 8896 0
-18172 8740 8845 8894 0
-18172 8740 8847 8892 0
-18172 8740 8849 8890 0
-18172 8740 8851 8888 0
-18172 8740 8853 8887 0
-18172 8740 8855 0
-18172 8740 8857 0
-18172 8740 8859 0
-18172 8740 8861 0
-18172 8740 8863 0
-18172 8740 8865 0
-18172 8740 8867 0
-18172 8740 8869 0
-18172 8740 8871 0
-18172 8740 8873 0
-18172 8740 8875 0
-18172 8740 8877 0
-18172 8740 8879 0
-18172 8740 8881 0
-18172 8740 8883 0
-18172 8740 8885 0
-18172 8742 8904 0
-18172 8742 8836 8902 0
-18172 8742 8837 8900 0
-18172 8742 8839 8898 0
-18172 8742 8841 8896 0
-18172 8742 8843 8894 0
-18172 8742 8845 8892 0
-18172 8742 8847 8890 0
-18172 8742 8849 8888 0
-18172 8742 8851 8887 0
-18172 8742 8853 0
-18172 8742 8855 0
-18172 8742 8857 0
-18172 8742 8859 0
-18172 8742 8861 0
-18172 8742 8863 0
-18172 8742 8865 0
-18172 8742 8867 0
-18172 8742 8869 0
-18172 8742 8871 0
-18172 8742 8873 0
-18172 8742 8875 0
-18172 8742 8877 0
-18172 8742 8879 0
-18172 8742 8881 0
-18172 8742 8883 0
-18172 8742 8885 0
-18172 8744 8902 0
-18172 8744 8836 8900 0
-18172 8744 8837 8898 0
-18172 8744 8839 8896 0
-18172 8744 8841 8894 0
-18172 8744 8843 8892 0
-18172 8744 8845 8890 0
-18172 8744 8847 8888 0
-18172 8744 8849 8887 0
-18172 8744 8851 0
-18172 8744 8853 0
-18172 8744 8855 0
-18172 8744 8857 0
-18172 8744 8859 0
-18172 8744 8861 0
-18172 8744 8863 0
-18172 8744 8865 0
-18172 8744 8867 0
-18172 8744 8869 0
-18172 8744 8871 0
-18172 8744 8873 0
-18172 8744 8875 0
-18172 8744 8877 0
-18172 8744 8879 0
-18172 8744 8881 0
-18172 8744 8883 0
-18172 8744 8885 0
-18172 8746 8900 0
-18172 8746 8836 8898 0
-18172 8746 8837 8896 0
-18172 8746 8839 8894 0
-18172 8746 8841 8892 0
-18172 8746 8843 8890 0
-18172 8746 8845 8888 0
-18172 8746 8847 8887 0
-18172 8746 8849 0
-18172 8746 8851 0
-18172 8746 8853 0
-18172 8746 8855 0
-18172 8746 8857 0
-18172 8746 8859 0
-18172 8746 8861 0
-18172 8746 8863 0
-18172 8746 8865 0
-18172 8746 8867 0
-18172 8746 8869 0
-18172 8746 8871 0
-18172 8746 8873 0
-18172 8746 8875 0
-18172 8746 8877 0
-18172 8746 8879 0
-18172 8746 8881 0
-18172 8746 8883 0
-18172 8746 8885 0
-18172 8748 8898 0
-18172 8748 8836 8896 0
-18172 8748 8837 8894 0
-18172 8748 8839 8892 0
-18172 8748 8841 8890 0
-18172 8748 8843 8888 0
-18172 8748 8845 8887 0
-18172 8748 8847 0
-18172 8748 8849 0
-18172 8748 8851 0
-18172 8748 8853 0
-18172 8748 8855 0
-18172 8748 8857 0
-18172 8748 8859 0
-18172 8748 8861 0
-18172 8748 8863 0
-18172 8748 8865 0
-18172 8748 8867 0
-18172 8748 8869 0
-18172 8748 8871 0
-18172 8748 8873 0
-18172 8748 8875 0
-18172 8748 8877 0
-18172 8748 8879 0
-18172 8748 8881 0
-18172 8748 8883 0
-18172 8748 8885 0
-18172 8750 8896 0
-18172 8750 8836 8894 0
-18172 8750 8837 8892 0
-18172 8750 8839 8890 0
-18172 8750 8841 8888 0
-18172 8750 8843 8887 0
-18172 8750 8845 0
-18172 8750 8847 0
-18172 8750 8849 0
-18172 8750 8851 0
-18172 8750 8853 0
-18172 8750 8855 0
-18172 8750 8857 0
-18172 8750 8859 0
-18172 8750 8861 0
-18172 8750 8863 0
-18172 8750 8865 0
-18172 8750 8867 0
-18172 8750 8869 0
-18172 8750 8871 0
-18172 8750 8873 0
-18172 8750 8875 0
-18172 8750 8877 0
-18172 8750 8879 0
-18172 8750 8881 0
-18172 8750 8883 0
-18172 8750 8885 0
-18172 8752 8894 0
-18172 8752 8836 8892 0
-18172 8752 8837 8890 0
-18172 8752 8839 8888 0
-18172 8752 8841 8887 0
-18172 8752 8843 0
-18172 8752 8845 0
-18172 8752 8847 0
-18172 8752 8849 0
-18172 8752 8851 0
-18172 8752 8853 0
-18172 8752 8855 0
-18172 8752 8857 0
-18172 8752 8859 0
-18172 8752 8861 0
-18172 8752 8863 0
-18172 8752 8865 0
-18172 8752 8867 0
-18172 8752 8869 0
-18172 8752 8871 0
-18172 8752 8873 0
-18172 8752 8875 0
-18172 8752 8877 0
-18172 8752 8879 0
-18172 8752 8881 0
-18172 8752 8883 0
-18172 8752 8885 0
-18172 8754 8892 0
-18172 8754 8836 8890 0
-18172 8754 8837 8888 0
-18172 8754 8839 8887 0
-18172 8754 8841 0
-18172 8754 8843 0
-18172 8754 8845 0
-18172 8754 8847 0
-18172 8754 8849 0
-18172 8754 8851 0
-18172 8754 8853 0
-18172 8754 8855 0
-18172 8754 8857 0
-18172 8754 8859 0
-18172 8754 8861 0
-18172 8754 8863 0
-18172 8754 8865 0
-18172 8754 8867 0
-18172 8754 8869 0
-18172 8754 8871 0
-18172 8754 8873 0
-18172 8754 8875 0
-18172 8754 8877 0
-18172 8754 8879 0
-18172 8754 8881 0
-18172 8754 8883 0
-18172 8754 8885 0
-18172 8756 8890 0
-18172 8756 8836 8888 0
-18172 8756 8837 8887 0
-18172 8756 8839 0
-18172 8756 8841 0
-18172 8756 8843 0
-18172 8756 8845 0
-18172 8756 8847 0
-18172 8756 8849 0
-18172 8756 8851 0
-18172 8756 8853 0
-18172 8756 8855 0
-18172 8756 8857 0
-18172 8756 8859 0
-18172 8756 8861 0
-18172 8756 8863 0
-18172 8756 8865 0
-18172 8756 8867 0
-18172 8756 8869 0
-18172 8756 8871 0
-18172 8756 8873 0
-18172 8756 8875 0
-18172 8756 8877 0
-18172 8756 8879 0
-18172 8756 8881 0
-18172 8756 8883 0
-18172 8756 8885 0
-18172 8758 8888 0
-18172 8758 8836 8887 0
-18172 8758 8837 0
-18172 8758 8839 0
-18172 8758 8841 0
-18172 8758 8843 0
-18172 8758 8845 0
-18172 8758 8847 0
-18172 8758 8849 0
-18172 8758 8851 0
-18172 8758 8853 0
-18172 8758 8855 0
-18172 8758 8857 0
-18172 8758 8859 0
-18172 8758 8861 0
-18172 8758 8863 0
-18172 8758 8865 0
-18172 8758 8867 0
-18172 8758 8869 0
-18172 8758 8871 0
-18172 8758 8873 0
-18172 8758 8875 0
-18172 8758 8877 0
-18172 8758 8879 0
-18172 8758 8881 0
-18172 8758 8883 0
-18172 8758 8885 0
-18172 8760 8887 0
-18172 8760 8836 0
-18172 8760 8837 0
-18172 8760 8839 0
-18172 8760 8841 0
-18172 8760 8843 0
-18172 8760 8845 0
-18172 8760 8847 0
-18172 8760 8849 0
-18172 8760 8851 0
-18172 8760 8853 0
-18172 8760 8855 0
-18172 8760 8857 0
-18172 8760 8859 0
-18172 8760 8861 0
-18172 8760 8863 0
-18172 8760 8865 0
-18172 8760 8867 0
-18172 8760 8869 0
-18172 8760 8871 0
-18172 8760 8873 0
-18172 8760 8875 0
-18172 8760 8877 0
-18172 8760 8879 0
-18172 8760 8881 0
-18172 8760 8883 0
-18172 8760 8885 0
-18172 8762 0
-18172 8762 8836 0
-18172 8762 8837 0
-18172 8762 8839 0
-18172 8762 8841 0
-18172 8762 8843 0
-18172 8762 8845 0
-18172 8762 8847 0
-18172 8762 8849 0
-18172 8762 8851 0
-18172 8762 8853 0
-18172 8762 8855 0
-18172 8762 8857 0
-18172 8762 8859 0
-18172 8762 8861 0
-18172 8762 8863 0
-18172 8762 8865 0
-18172 8762 8867 0
-18172 8762 8869 0
-18172 8762 8871 0
-18172 8762 8873 0
-18172 8762 8875 0
-18172 8762 8877 0
-18172 8762 8879 0
-18172 8762 8881 0
-18172 8762 8883 0
-18172 8762 8885 0
-18172 8764 0
-18172 8764 8836 0
-18172 8764 8837 0
-18172 8764 8839 0
-18172 8764 8841 0
-18172 8764 8843 0
-18172 8764 8845 0
-18172 8764 8847 0
-18172 8764 8849 0
-18172 8764 8851 0
-18172 8764 8853 0
-18172 8764 8855 0
-18172 8764 8857 0
-18172 8764 8859 0
-18172 8764 8861 0
-18172 8764 8863 0
-18172 8764 8865 0
-18172 8764 8867 0
-18172 8764 8869 0
-18172 8764 8871 0
-18172 8764 8873 0
-18172 8764 8875 0
-18172 8764 8877 0
-18172 8764 8879 0
-18172 8764 8881 0
-18172 8764 8883 0
-18172 8764 8885 0
18172 -8762 -8836 -8887 0
18172 -8760 -8837 -8887 0
18172 -8760 -8836 -8888 0
18172 -8758 -8839 -8887 0
18172 -8758 -8837 -8888 0
18172 -8758 -8836 -8890 0
18172 -8756 -8841 -8887 0
18172 -8756 -8839 -8888 0
18172 -8756 -8837 -8890 0
18172 -8756 -8836 -8892 0
18172 -8754 -8843 -8887 0
18172 -8754 -8841 -8888 0
18172 -8754 -8839 -8890 0
18172 -8754 -8837 -8892 0
18172 -8754 -8836 -8894 0
18172 -8752 -8845 -8887 0
18172 -8752 -8843 -8888 0
18172 -8752 -8841 -8890 0
18172 -8752 -8839 -8892 0
18172 -8752 -8837 -8894 0
18172 -8752 -8836 -8896 0
18172 -8750 -8847 -8887 0
18172 -8750 -8845 -8888 0
18172 -8750 -8843 -8890 0
18172 -8750 -8841 -8892 0
18172 -8750 -8839 -8894 0
18172 -8750 -8837 -8896 0
18172 -8750 -8836 -8898 0
18172 -8748 -8849 -8887 0
18172 -8748 -8847 -8888 0
18172 -8748 -8845 -8890 0
18172 -8748 -8843 -8892 0
18172 -8748 -8841 -8894 0
18172 -8748 -8839 -8896 0
18172 -8748 -8837 -8898 0
18172 -8748 -8836 -8900 0
18172 -8746 -8851 -8887 0
18172 -8746 -8849 -8888 0
18172 -8746 -8847 -8890 0
18172 -8746 -8845 -8892 0
18172 -8746 -8843 -8894 0
18172 -8746 -8841 -8896 0
18172 -8746 -8839 -8898 0
18172 -8746 -8837 -8900 0
18172 -8746 -8836 -8902 0
18172 -8744 -8853 -8887 0
18172 -8744 -8851 -8888 0
18172 -8744 -8849 -8890 0
18172 -8744 -8847 -8892 0
18172 -8744 -8845 -8894 0
18172 -8744 -8843 -8896 0
18172 -8744 -8841 -8898 0
18172 -8744 -8839 -8900 0
18172 -8744 -8837 -8902 0
18172 -8744 -8836 -8904 0
18172 -8742 -8855 -8887 0
18172 -8742 -8853 -8888 0
18172 -8742 -8851 -8890 0
18172 -8742 -8849 -8892 0
18172 -8742 -8847 -8894 0
18172 -8742 -8845 -8896 0
18172 -8742 -8843 -8898 0
18172 -8742 -8841 -8900 0
18172 -8742 -8839 -8902 0
18172 -8742 -8837 -8904 0
18172 -8742 -8836 -8906 0
18172 -8740 -8857 -8887 0
18172 -8740 -8855 -8888 0
18172 -8740 -8853 -8890 0
18172 -8740 -8851 -8892 0
18172 -8740 -8849 -8894 0
18172 -8740 -8847 -8896 0
18172 -8740 -8845 -8898 0
18172 -8740 -8843 -8900 0
18172 -8740 -8841 -8902 0
18172 -8740 -8839 -8904 0
18172 -8740 -8837 -8906 0
18172 -8740 -8836 -8908 0
18172 -8738 -8859 -8887 0
18172 -8738 -8857 -8888 0
18172 -8738 -8855 -8890 0
18172 -8738 -8853 -8892 0
18172 -8738 -8851 -8894 0
18172 -8738 -8849 -8896 0
18172 -8738 -8847 -8898 0
18172 -8738 -8845 -8900 0
18172 -8738 -8843 -8902 0
18172 -8738 -8841 -8904 0
18172 -8738 -8839 -8906 0
18172 -8738 -8837 -8908 0
18172 -8738 -8836 -8910 0
18172 -8736 -8861 -8887 0
18172 -8736 -8859 -8888 0
18172 -8736 -8857 -8890 0
18172 -8736 -8855 -8892 0
18172 -8736 -8853 -8894 0
18172 -8736 -8851 -8896 0
18172 -8736 -8849 -8898 0
18172 -8736 -8847 -8900 0
18172 -8736 -8845 -8902 0
18172 -8736 -8843 -8904 0
18172 -8736 -8841 -8906 0
18172 -8736 -8839 -8908 0
18172 -8736 -8837 -8910 0
18172 -8736 -8836 -8912 0
18172 -8734 -8863 -8887 0
18172 -8734 -8861 -8888 0
18172 -8734 -8859 -8890 0
18172 -8734 -8857 -8892 0
18172 -8734 -8855 -8894 0
18172 -8734 -8853 -8896 0
18172 -8734 -8851 -8898 0
18172 -8734 -8849 -8900 0
18172 -8734 -8847 -8902 0
18172 -8734 -8845 -8904 0
18172 -8734 -8843 -8906 0
18172 -8734 -8841 -8908 0
18172 -8734 -8839 -8910 0
18172 -8734 -8837 -8912 0
18172 -8734 -8836 -8914 0
18172 -8732 -8865 -8887 0
18172 -8732 -8863 -8888 0
18172 -8732 -8861 -8890 0
18172 -8732 -8859 -8892 0
18172 -8732 -8857 -8894 0
18172 -8732 -8855 -8896 0
18172 -8732 -8853 -8898 0
18172 -8732 -8851 -8900 0
18172 -8732 -8849 -8902 0
18172 -8732 -8847 -8904 0
18172 -8732 -8845 -8906 0
18172 -8732 -8843 -8908 0
18172 -8732 -8841 -8910 0
18172 -8732 -8839 -8912 0
18172 -8732 -8837 -8914 0
18172 -8732 -8836 -8916 0
18172 -8731 -8867 -8887 0
18172 -8731 -8865 -8888 0
18172 -8731 -8863 -8890 0
18172 -8731 -8861 -8892 0
18172 -8731 -8859 -8894 0
18172 -8731 -8857 -8896 0
18172 -8731 -8855 -8898 0
18172 -8731 -8853 -8900 0
18172 -8731 -8851 -8902 0
18172 -8731 -8849 -8904 0
18172 -8731 -8847 -8906 0
18172 -8731 -8845 -8908 0
18172 -8731 -8843 -8910 0
18172 -8731 -8841 -8912 0
18172 -8731 -8839 -8914 0
18172 -8731 -8837 -8916 0
18172 -8731 -8836 -8918 0
c ((16<=(aux385 + aux388 + aux389))=tv=SATLiteral(18173))
-18173 -8760 -8836 -8887 0
-18173 -8758 -8837 -8887 0
-18173 -8758 -8836 -8888 0
-18173 -8756 -8839 -8887 0
-18173 -8756 -8837 -8888 0
-18173 -8756 -8836 -8890 0
-18173 -8754 -8841 -8887 0
-18173 -8754 -8839 -8888 0
-18173 -8754 -8837 -8890 0
-18173 -8754 -8836 -8892 0
-18173 -8752 -8843 -8887 0
-18173 -8752 -8841 -8888 0
-18173 -8752 -8839 -8890 0
-18173 -8752 -8837 -8892 0
-18173 -8752 -8836 -8894 0
-18173 -8750 -8845 -8887 0
-18173 -8750 -8843 -8888 0
-18173 -8750 -8841 -8890 0
-18173 -8750 -8839 -8892 0
-18173 -8750 -8837 -8894 0
-18173 -8750 -8836 -8896 0
-18173 -8748 -8847 -8887 0
-18173 -8748 -8845 -8888 0
-18173 -8748 -8843 -8890 0
-18173 -8748 -8841 -8892 0
-18173 -8748 -8839 -8894 0
-18173 -8748 -8837 -8896 0
-18173 -8748 -8836 -8898 0
-18173 -8746 -8849 -8887 0
-18173 -8746 -8847 -8888 0
-18173 -8746 -8845 -8890 0
-18173 -8746 -8843 -8892 0
-18173 -8746 -8841 -8894 0
-18173 -8746 -8839 -8896 0
-18173 -8746 -8837 -8898 0
-18173 -8746 -8836 -8900 0
-18173 -8744 -8851 -8887 0
-18173 -8744 -8849 -8888 0
-18173 -8744 -8847 -8890 0
-18173 -8744 -8845 -8892 0
-18173 -8744 -8843 -8894 0
-18173 -8744 -8841 -8896 0
-18173 -8744 -8839 -8898 0
-18173 -8744 -8837 -8900 0
-18173 -8744 -8836 -8902 0
-18173 -8742 -8853 -8887 0
-18173 -8742 -8851 -8888 0
-18173 -8742 -8849 -8890 0
-18173 -8742 -8847 -8892 0
-18173 -8742 -8845 -8894 0
-18173 -8742 -8843 -8896 0
-18173 -8742 -8841 -8898 0
-18173 -8742 -8839 -8900 0
-18173 -8742 -8837 -8902 0
-18173 -8742 -8836 -8904 0
-18173 -8740 -8855 -8887 0
-18173 -8740 -8853 -8888 0
-18173 -8740 -8851 -8890 0
-18173 -8740 -8849 -8892 0
-18173 -8740 -8847 -8894 0
-18173 -8740 -8845 -8896 0
-18173 -8740 -8843 -8898 0
-18173 -8740 -8841 -8900 0
-18173 -8740 -8839 -8902 0
-18173 -8740 -8837 -8904 0
-18173 -8740 -8836 -8906 0
-18173 -8738 -8857 -8887 0
-18173 -8738 -8855 -8888 0
-18173 -8738 -8853 -8890 0
-18173 -8738 -8851 -8892 0
-18173 -8738 -8849 -8894 0
-18173 -8738 -8847 -8896 0
-18173 -8738 -8845 -8898 0
-18173 -8738 -8843 -8900 0
-18173 -8738 -8841 -8902 0
-18173 -8738 -8839 -8904 0
-18173 -8738 -8837 -8906 0
-18173 -8738 -8836 -8908 0
-18173 -8736 -8859 -8887 0
-18173 -8736 -8857 -8888 0
-18173 -8736 -8855 -8890 0
-18173 -8736 -8853 -8892 0
-18173 -8736 -8851 -8894 0
-18173 -8736 -8849 -8896 0
-18173 -8736 -8847 -8898 0
-18173 -8736 -8845 -8900 0
-18173 -8736 -8843 -8902 0
-18173 -8736 -8841 -8904 0
-18173 -8736 -8839 -8906 0
-18173 -8736 -8837 -8908 0
-18173 -8736 -8836 -8910 0
-18173 -8734 -8861 -8887 0
-18173 -8734 -8859 -8888 0
-18173 -8734 -8857 -8890 0
-18173 -8734 -8855 -8892 0
-18173 -8734 -8853 -8894 0
-18173 -8734 -8851 -8896 0
-18173 -8734 -8849 -8898 0
-18173 -8734 -8847 -8900 0
-18173 -8734 -8845 -8902 0
-18173 -8734 -8843 -8904 0
-18173 -8734 -8841 -8906 0
-18173 -8734 -8839 -8908 0
-18173 -8734 -8837 -8910 0
-18173 -8734 -8836 -8912 0
-18173 -8732 -8863 -8887 0
-18173 -8732 -8861 -8888 0
-18173 -8732 -8859 -8890 0
-18173 -8732 -8857 -8892 0
-18173 -8732 -8855 -8894 0
-18173 -8732 -8853 -8896 0
-18173 -8732 -8851 -8898 0
-18173 -8732 -8849 -8900 0
-18173 -8732 -8847 -8902 0
-18173 -8732 -8845 -8904 0
-18173 -8732 -8843 -8906 0
-18173 -8732 -8841 -8908 0
-18173 -8732 -8839 -8910 0
-18173 -8732 -8837 -8912 0
-18173 -8732 -8836 -8914 0
-18173 -8731 -8865 -8887 0
-18173 -8731 -8863 -8888 0
-18173 -8731 -8861 -8890 0
-18173 -8731 -8859 -8892 0
-18173 -8731 -8857 -8894 0
-18173 -8731 -8855 -8896 0
-18173 -8731 -8853 -8898 0
-18173 -8731 -8851 -8900 0
-18173 -8731 -8849 -8902 0
-18173 -8731 -8847 -8904 0
-18173 -8731 -8845 -8906 0
-18173 -8731 -8843 -8908 0
-18173 -8731 -8841 -8910 0
-18173 -8731 -8839 -8912 0
-18173 -8731 -8837 -8914 0
-18173 -8731 -8836 -8916 0
18173 8916 0
18173 8836 8914 0
18173 8837 8912 0
18173 8839 8910 0
18173 8841 8908 0
18173 8843 8906 0
18173 8845 8904 0
18173 8847 8902 0
18173 8849 8900 0
18173 8851 8898 0
18173 8853 8896 0
18173 8855 8894 0
18173 8857 8892 0
18173 8859 8890 0
18173 8861 8888 0
18173 8863 8887 0
18173 8865 0
18173 8867 0
18173 8869 0
18173 8871 0
18173 8873 0
18173 8875 0
18173 8877 0
18173 8879 0
18173 8881 0
18173 8883 0
18173 8885 0
18173 8731 8914 0
18173 8731 8836 8912 0
18173 8731 8837 8910 0
18173 8731 8839 8908 0
18173 8731 8841 8906 0
18173 8731 8843 8904 0
18173 8731 8845 8902 0
18173 8731 8847 8900 0
18173 8731 8849 8898 0
18173 8731 8851 8896 0
18173 8731 8853 8894 0
18173 8731 8855 8892 0
18173 8731 8857 8890 0
18173 8731 8859 8888 0
18173 8731 8861 8887 0
18173 8731 8863 0
18173 8731 8865 0
18173 8731 8867 0
18173 8731 8869 0
18173 8731 8871 0
18173 8731 8873 0
18173 8731 8875 0
18173 8731 8877 0
18173 8731 8879 0
18173 8731 8881 0
18173 8731 8883 0
18173 8731 8885 0
18173 8732 8912 0
18173 8732 8836 8910 0
18173 8732 8837 8908 0
18173 8732 8839 8906 0
18173 8732 8841 8904 0
18173 8732 8843 8902 0
18173 8732 8845 8900 0
18173 8732 8847 8898 0
18173 8732 8849 8896 0
18173 8732 8851 8894 0
18173 8732 8853 8892 0
18173 8732 8855 8890 0
18173 8732 8857 8888 0
18173 8732 8859 8887 0
18173 8732 8861 0
18173 8732 8863 0
18173 8732 8865 0
18173 8732 8867 0
18173 8732 8869 0
18173 8732 8871 0
18173 8732 8873 0
18173 8732 8875 0
18173 8732 8877 0
18173 8732 8879 0
18173 8732 8881 0
18173 8732 8883 0
18173 8732 8885 0
18173 8734 8910 0
18173 8734 8836 8908 0
18173 8734 8837 8906 0
18173 8734 8839 8904 0
18173 8734 8841 8902 0
18173 8734 8843 8900 0
18173 8734 8845 8898 0
18173 8734 8847 8896 0
18173 8734 8849 8894 0
18173 8734 8851 8892 0
18173 8734 8853 8890 0
18173 8734 8855 8888 0
18173 8734 8857 8887 0
18173 8734 8859 0
18173 8734 8861 0
18173 8734 8863 0
18173 8734 8865 0
18173 8734 8867 0
18173 8734 8869 0
18173 8734 8871 0
18173 8734 8873 0
18173 8734 8875 0
18173 8734 8877 0
18173 8734 8879 0
18173 8734 8881 0
18173 8734 8883 0
18173 8734 8885 0
18173 8736 8908 0
18173 8736 8836 8906 0
18173 8736 8837 8904 0
18173 8736 8839 8902 0
18173 8736 8841 8900 0
18173 8736 8843 8898 0
18173 8736 8845 8896 0
18173 8736 8847 8894 0
18173 8736 8849 8892 0
18173 8736 8851 8890 0
18173 8736 8853 8888 0
18173 8736 8855 8887 0
18173 8736 8857 0
18173 8736 8859 0
18173 8736 8861 0
18173 8736 8863 0
18173 8736 8865 0
18173 8736 8867 0
18173 8736 8869 0
18173 8736 8871 0
18173 8736 8873 0
18173 8736 8875 0
18173 8736 8877 0
18173 8736 8879 0
18173 8736 8881 0
18173 8736 8883 0
18173 8736 8885 0
18173 8738 8906 0
18173 8738 8836 8904 0
18173 8738 8837 8902 0
18173 8738 8839 8900 0
18173 8738 8841 8898 0
18173 8738 8843 8896 0
18173 8738 8845 8894 0
18173 8738 8847 8892 0
18173 8738 8849 8890 0
18173 8738 8851 8888 0
18173 8738 8853 8887 0
18173 8738 8855 0
18173 8738 8857 0
18173 8738 8859 0
18173 8738 8861 0
18173 8738 8863 0
18173 8738 8865 0
18173 8738 8867 0
18173 8738 8869 0
18173 8738 8871 0
18173 8738 8873 0
18173 8738 8875 0
18173 8738 8877 0
18173 8738 8879 0
18173 8738 8881 0
18173 8738 8883 0
18173 8738 8885 0
18173 8740 8904 0
18173 8740 8836 8902 0
18173 8740 8837 8900 0
18173 8740 8839 8898 0
18173 8740 8841 8896 0
18173 8740 8843 8894 0
18173 8740 8845 8892 0
18173 8740 8847 8890 0
18173 8740 8849 8888 0
18173 8740 8851 8887 0
18173 8740 8853 0
18173 8740 8855 0
18173 8740 8857 0
18173 8740 8859 0
18173 8740 8861 0
18173 8740 8863 0
18173 8740 8865 0
18173 8740 8867 0
18173 8740 8869 0
18173 8740 8871 0
18173 8740 8873 0
18173 8740 8875 0
18173 8740 8877 0
18173 8740 8879 0
18173 8740 8881 0
18173 8740 8883 0
18173 8740 8885 0
18173 8742 8902 0
18173 8742 8836 8900 0
18173 8742 8837 8898 0
18173 8742 8839 8896 0
18173 8742 8841 8894 0
18173 8742 8843 8892 0
18173 8742 8845 8890 0
18173 8742 8847 8888 0
18173 8742 8849 8887 0
18173 8742 8851 0
18173 8742 8853 0
18173 8742 8855 0
18173 8742 8857 0
18173 8742 8859 0
18173 8742 8861 0
18173 8742 8863 0
18173 8742 8865 0
18173 8742 8867 0
18173 8742 8869 0
18173 8742 8871 0
18173 8742 8873 0
18173 8742 8875 0
18173 8742 8877 0
18173 8742 8879 0
18173 8742 8881 0
18173 8742 8883 0
18173 8742 8885 0
18173 8744 8900 0
18173 8744 8836 8898 0
18173 8744 8837 8896 0
18173 8744 8839 8894 0
18173 8744 8841 8892 0
18173 8744 8843 8890 0
18173 8744 8845 8888 0
18173 8744 8847 8887 0
18173 8744 8849 0
18173 8744 8851 0
18173 8744 8853 0
18173 8744 8855 0
18173 8744 8857 0
18173 8744 8859 0
18173 8744 8861 0
18173 8744 8863 0
18173 8744 8865 0
18173 8744 8867 0
18173 8744 8869 0
18173 8744 8871 0
18173 8744 8873 0
18173 8744 8875 0
18173 8744 8877 0
18173 8744 8879 0
18173 8744 8881 0
18173 8744 8883 0
18173 8744 8885 0
18173 8746 8898 0
18173 8746 8836 8896 0
18173 8746 8837 8894 0
18173 8746 8839 8892 0
18173 8746 8841 8890 0
18173 8746 8843 8888 0
18173 8746 8845 8887 0
18173 8746 8847 0
18173 8746 8849 0
18173 8746 8851 0
18173 8746 8853 0
18173 8746 8855 0
18173 8746 8857 0
18173 8746 8859 0
18173 8746 8861 0
18173 8746 8863 0
18173 8746 8865 0
18173 8746 8867 0
18173 8746 8869 0
18173 8746 8871 0
18173 8746 8873 0
18173 8746 8875 0
18173 8746 8877 0
18173 8746 8879 0
18173 8746 8881 0
18173 8746 8883 0
18173 8746 8885 0
18173 8748 8896 0
18173 8748 8836 8894 0
18173 8748 8837 8892 0
18173 8748 8839 8890 0
18173 8748 8841 8888 0
18173 8748 8843 8887 0
18173 8748 8845 0
18173 8748 8847 0
18173 8748 8849 0
18173 8748 8851 0
18173 8748 8853 0
18173 8748 8855 0
18173 8748 8857 0
18173 8748 8859 0
18173 8748 8861 0
18173 8748 8863 0
18173 8748 8865 0
18173 8748 8867 0
18173 8748 8869 0
18173 8748 8871 0
18173 8748 8873 0
18173 8748 8875 0
18173 8748 8877 0
18173 8748 8879 0
18173 8748 8881 0
18173 8748 8883 0
18173 8748 8885 0
18173 8750 8894 0
18173 8750 8836 8892 0
18173 8750 8837 8890 0
18173 8750 8839 8888 0
18173 8750 8841 8887 0
18173 8750 8843 0
18173 8750 8845 0
18173 8750 8847 0
18173 8750 8849 0
18173 8750 8851 0
18173 8750 8853 0
18173 8750 8855 0
18173 8750 8857 0
18173 8750 8859 0
18173 8750 8861 0
18173 8750 8863 0
18173 8750 8865 0
18173 8750 8867 0
18173 8750 8869 0
18173 8750 8871 0
18173 8750 8873 0
18173 8750 8875 0
18173 8750 8877 0
18173 8750 8879 0
18173 8750 8881 0
18173 8750 8883 0
18173 8750 8885 0
18173 8752 8892 0
18173 8752 8836 8890 0
18173 8752 8837 8888 0
18173 8752 8839 8887 0
18173 8752 8841 0
18173 8752 8843 0
18173 8752 8845 0
18173 8752 8847 0
18173 8752 8849 0
18173 8752 8851 0
18173 8752 8853 0
18173 8752 8855 0
18173 8752 8857 0
18173 8752 8859 0
18173 8752 8861 0
18173 8752 8863 0
18173 8752 8865 0
18173 8752 8867 0
18173 8752 8869 0
18173 8752 8871 0
18173 8752 8873 0
18173 8752 8875 0
18173 8752 8877 0
18173 8752 8879 0
18173 8752 8881 0
18173 8752 8883 0
18173 8752 8885 0
18173 8754 8890 0
18173 8754 8836 8888 0
18173 8754 8837 8887 0
18173 8754 8839 0
18173 8754 8841 0
18173 8754 8843 0
18173 8754 8845 0
18173 8754 8847 0
18173 8754 8849 0
18173 8754 8851 0
18173 8754 8853 0
18173 8754 8855 0
18173 8754 8857 0
18173 8754 8859 0
18173 8754 8861 0
18173 8754 8863 0
18173 8754 8865 0
18173 8754 8867 0
18173 8754 8869 0
18173 8754 8871 0
18173 8754 8873 0
18173 8754 8875 0
18173 8754 8877 0
18173 8754 8879 0
18173 8754 8881 0
18173 8754 8883 0
18173 8754 8885 0
18173 8756 8888 0
18173 8756 8836 8887 0
18173 8756 8837 0
18173 8756 8839 0
18173 8756 8841 0
18173 8756 8843 0
18173 8756 8845 0
18173 8756 8847 0
18173 8756 8849 0
18173 8756 8851 0
18173 8756 8853 0
18173 8756 8855 0
18173 8756 8857 0
18173 8756 8859 0
18173 8756 8861 0
18173 8756 8863 0
18173 8756 8865 0
18173 8756 8867 0
18173 8756 8869 0
18173 8756 8871 0
18173 8756 8873 0
18173 8756 8875 0
18173 8756 8877 0
18173 8756 8879 0
18173 8756 8881 0
18173 8756 8883 0
18173 8756 8885 0
18173 8758 8887 0
18173 8758 8836 0
18173 8758 8837 0
18173 8758 8839 0
18173 8758 8841 0
18173 8758 8843 0
18173 8758 8845 0
18173 8758 8847 0
18173 8758 8849 0
18173 8758 8851 0
18173 8758 8853 0
18173 8758 8855 0
18173 8758 8857 0
18173 8758 8859 0
18173 8758 8861 0
18173 8758 8863 0
18173 8758 8865 0
18173 8758 8867 0
18173 8758 8869 0
18173 8758 8871 0
18173 8758 8873 0
18173 8758 8875 0
18173 8758 8877 0
18173 8758 8879 0
18173 8758 8881 0
18173 8758 8883 0
18173 8758 8885 0
18173 8760 0
18173 8760 8836 0
18173 8760 8837 0
18173 8760 8839 0
18173 8760 8841 0
18173 8760 8843 0
18173 8760 8845 0
18173 8760 8847 0
18173 8760 8849 0
18173 8760 8851 0
18173 8760 8853 0
18173 8760 8855 0
18173 8760 8857 0
18173 8760 8859 0
18173 8760 8861 0
18173 8760 8863 0
18173 8760 8865 0
18173 8760 8867 0
18173 8760 8869 0
18173 8760 8871 0
18173 8760 8873 0
18173 8760 8875 0
18173 8760 8877 0
18173 8760 8879 0
18173 8760 8881 0
18173 8760 8883 0
18173 8760 8885 0
18173 8762 0
18173 8762 8836 0
18173 8762 8837 0
18173 8762 8839 0
18173 8762 8841 0
18173 8762 8843 0
18173 8762 8845 0
18173 8762 8847 0
18173 8762 8849 0
18173 8762 8851 0
18173 8762 8853 0
18173 8762 8855 0
18173 8762 8857 0
18173 8762 8859 0
18173 8762 8861 0
18173 8762 8863 0
18173 8762 8865 0
18173 8762 8867 0
18173 8762 8869 0
18173 8762 8871 0
18173 8762 8873 0
18173 8762 8875 0
18173 8762 8877 0
18173 8762 8879 0
18173 8762 8881 0
18173 8762 8883 0
18173 8762 8885 0
18173 8764 0
18173 8764 8836 0
18173 8764 8837 0
18173 8764 8839 0
18173 8764 8841 0
18173 8764 8843 0
18173 8764 8845 0
18173 8764 8847 0
18173 8764 8849 0
18173 8764 8851 0
18173 8764 8853 0
18173 8764 8855 0
18173 8764 8857 0
18173 8764 8859 0
18173 8764 8861 0
18173 8764 8863 0
18173 8764 8865 0
18173 8764 8867 0
18173 8764 8869 0
18173 8764 8871 0
18173 8764 8873 0
18173 8764 8875 0
18173 8764 8877 0
18173 8764 8879 0
18173 8764 8881 0
18173 8764 8883 0
18173 8764 8885 0
c (((aux391 + aux394 + aux395)<=29)=tv=SATLiteral(18174))
-18174 9204 0
-18174 9096 9202 0
-18174 9097 9200 0
-18174 9099 9198 0
-18174 9101 9196 0
-18174 9103 9194 0
-18174 9105 9192 0
-18174 9107 9190 0
-18174 9109 9188 0
-18174 9111 9186 0
-18174 9113 9184 0
-18174 9115 9182 0
-18174 9117 9180 0
-18174 9119 9178 0
-18174 9121 9176 0
-18174 9123 9174 0
-18174 9125 9172 0
-18174 9127 9170 0
-18174 9129 9168 0
-18174 9131 9166 0
-18174 9133 9164 0
-18174 9135 9162 0
-18174 9137 9160 0
-18174 9139 9158 0
-18174 9141 9156 0
-18174 9143 9154 0
-18174 9145 9152 0
-18174 8991 9202 0
-18174 8991 9096 9200 0
-18174 8991 9097 9198 0
-18174 8991 9099 9196 0
-18174 8991 9101 9194 0
-18174 8991 9103 9192 0
-18174 8991 9105 9190 0
-18174 8991 9107 9188 0
-18174 8991 9109 9186 0
-18174 8991 9111 9184 0
-18174 8991 9113 9182 0
-18174 8991 9115 9180 0
-18174 8991 9117 9178 0
-18174 8991 9119 9176 0
-18174 8991 9121 9174 0
-18174 8991 9123 9172 0
-18174 8991 9125 9170 0
-18174 8991 9127 9168 0
-18174 8991 9129 9166 0
-18174 8991 9131 9164 0
-18174 8991 9133 9162 0
-18174 8991 9135 9160 0
-18174 8991 9137 9158 0
-18174 8991 9139 9156 0
-18174 8991 9141 9154 0
-18174 8991 9143 9152 0
-18174 8991 9145 9150 0
-18174 8992 9200 0
-18174 8992 9096 9198 0
-18174 8992 9097 9196 0
-18174 8992 9099 9194 0
-18174 8992 9101 9192 0
-18174 8992 9103 9190 0
-18174 8992 9105 9188 0
-18174 8992 9107 9186 0
-18174 8992 9109 9184 0
-18174 8992 9111 9182 0
-18174 8992 9113 9180 0
-18174 8992 9115 9178 0
-18174 8992 9117 9176 0
-18174 8992 9119 9174 0
-18174 8992 9121 9172 0
-18174 8992 9123 9170 0
-18174 8992 9125 9168 0
-18174 8992 9127 9166 0
-18174 8992 9129 9164 0
-18174 8992 9131 9162 0
-18174 8992 9133 9160 0
-18174 8992 9135 9158 0
-18174 8992 9137 9156 0
-18174 8992 9139 9154 0
-18174 8992 9141 9152 0
-18174 8992 9143 9150 0
-18174 8992 9145 9148 0
-18174 8994 9198 0
-18174 8994 9096 9196 0
-18174 8994 9097 9194 0
-18174 8994 9099 9192 0
-18174 8994 9101 9190 0
-18174 8994 9103 9188 0
-18174 8994 9105 9186 0
-18174 8994 9107 9184 0
-18174 8994 9109 9182 0
-18174 8994 9111 9180 0
-18174 8994 9113 9178 0
-18174 8994 9115 9176 0
-18174 8994 9117 9174 0
-18174 8994 9119 9172 0
-18174 8994 9121 9170 0
-18174 8994 9123 9168 0
-18174 8994 9125 9166 0
-18174 8994 9127 9164 0
-18174 8994 9129 9162 0
-18174 8994 9131 9160 0
-18174 8994 9133 9158 0
-18174 8994 9135 9156 0
-18174 8994 9137 9154 0
-18174 8994 9139 9152 0
-18174 8994 9141 9150 0
-18174 8994 9143 9148 0
-18174 8994 9145 9147 0
-18174 8996 9196 0
-18174 8996 9096 9194 0
-18174 8996 9097 9192 0
-18174 8996 9099 9190 0
-18174 8996 9101 9188 0
-18174 8996 9103 9186 0
-18174 8996 9105 9184 0
-18174 8996 9107 9182 0
-18174 8996 9109 9180 0
-18174 8996 9111 9178 0
-18174 8996 9113 9176 0
-18174 8996 9115 9174 0
-18174 8996 9117 9172 0
-18174 8996 9119 9170 0
-18174 8996 9121 9168 0
-18174 8996 9123 9166 0
-18174 8996 9125 9164 0
-18174 8996 9127 9162 0
-18174 8996 9129 9160 0
-18174 8996 9131 9158 0
-18174 8996 9133 9156 0
-18174 8996 9135 9154 0
-18174 8996 9137 9152 0
-18174 8996 9139 9150 0
-18174 8996 9141 9148 0
-18174 8996 9143 9147 0
-18174 8996 9145 0
-18174 8998 9194 0
-18174 8998 9096 9192 0
-18174 8998 9097 9190 0
-18174 8998 9099 9188 0
-18174 8998 9101 9186 0
-18174 8998 9103 9184 0
-18174 8998 9105 9182 0
-18174 8998 9107 9180 0
-18174 8998 9109 9178 0
-18174 8998 9111 9176 0
-18174 8998 9113 9174 0
-18174 8998 9115 9172 0
-18174 8998 9117 9170 0
-18174 8998 9119 9168 0
-18174 8998 9121 9166 0
-18174 8998 9123 9164 0
-18174 8998 9125 9162 0
-18174 8998 9127 9160 0
-18174 8998 9129 9158 0
-18174 8998 9131 9156 0
-18174 8998 9133 9154 0
-18174 8998 9135 9152 0
-18174 8998 9137 9150 0
-18174 8998 9139 9148 0
-18174 8998 9141 9147 0
-18174 8998 9143 0
-18174 8998 9145 0
-18174 9000 9192 0
-18174 9000 9096 9190 0
-18174 9000 9097 9188 0
-18174 9000 9099 9186 0
-18174 9000 9101 9184 0
-18174 9000 9103 9182 0
-18174 9000 9105 9180 0
-18174 9000 9107 9178 0
-18174 9000 9109 9176 0
-18174 9000 9111 9174 0
-18174 9000 9113 9172 0
-18174 9000 9115 9170 0
-18174 9000 9117 9168 0
-18174 9000 9119 9166 0
-18174 9000 9121 9164 0
-18174 9000 9123 9162 0
-18174 9000 9125 9160 0
-18174 9000 9127 9158 0
-18174 9000 9129 9156 0
-18174 9000 9131 9154 0
-18174 9000 9133 9152 0
-18174 9000 9135 9150 0
-18174 9000 9137 9148 0
-18174 9000 9139 9147 0
-18174 9000 9141 0
-18174 9000 9143 0
-18174 9000 9145 0
-18174 9002 9190 0
-18174 9002 9096 9188 0
-18174 9002 9097 9186 0
-18174 9002 9099 9184 0
-18174 9002 9101 9182 0
-18174 9002 9103 9180 0
-18174 9002 9105 9178 0
-18174 9002 9107 9176 0
-18174 9002 9109 9174 0
-18174 9002 9111 9172 0
-18174 9002 9113 9170 0
-18174 9002 9115 9168 0
-18174 9002 9117 9166 0
-18174 9002 9119 9164 0
-18174 9002 9121 9162 0
-18174 9002 9123 9160 0
-18174 9002 9125 9158 0
-18174 9002 9127 9156 0
-18174 9002 9129 9154 0
-18174 9002 9131 9152 0
-18174 9002 9133 9150 0
-18174 9002 9135 9148 0
-18174 9002 9137 9147 0
-18174 9002 9139 0
-18174 9002 9141 0
-18174 9002 9143 0
-18174 9002 9145 0
-18174 9004 9188 0
-18174 9004 9096 9186 0
-18174 9004 9097 9184 0
-18174 9004 9099 9182 0
-18174 9004 9101 9180 0
-18174 9004 9103 9178 0
-18174 9004 9105 9176 0
-18174 9004 9107 9174 0
-18174 9004 9109 9172 0
-18174 9004 9111 9170 0
-18174 9004 9113 9168 0
-18174 9004 9115 9166 0
-18174 9004 9117 9164 0
-18174 9004 9119 9162 0
-18174 9004 9121 9160 0
-18174 9004 9123 9158 0
-18174 9004 9125 9156 0
-18174 9004 9127 9154 0
-18174 9004 9129 9152 0
-18174 9004 9131 9150 0
-18174 9004 9133 9148 0
-18174 9004 9135 9147 0
-18174 9004 9137 0
-18174 9004 9139 0
-18174 9004 9141 0
-18174 9004 9143 0
-18174 9004 9145 0
-18174 9006 9186 0
-18174 9006 9096 9184 0
-18174 9006 9097 9182 0
-18174 9006 9099 9180 0
-18174 9006 9101 9178 0
-18174 9006 9103 9176 0
-18174 9006 9105 9174 0
-18174 9006 9107 9172 0
-18174 9006 9109 9170 0
-18174 9006 9111 9168 0
-18174 9006 9113 9166 0
-18174 9006 9115 9164 0
-18174 9006 9117 9162 0
-18174 9006 9119 9160 0
-18174 9006 9121 9158 0
-18174 9006 9123 9156 0
-18174 9006 9125 9154 0
-18174 9006 9127 9152 0
-18174 9006 9129 9150 0
-18174 9006 9131 9148 0
-18174 9006 9133 9147 0
-18174 9006 9135 0
-18174 9006 9137 0
-18174 9006 9139 0
-18174 9006 9141 0
-18174 9006 9143 0
-18174 9006 9145 0
-18174 9008 9184 0
-18174 9008 9096 9182 0
-18174 9008 9097 9180 0
-18174 9008 9099 9178 0
-18174 9008 9101 9176 0
-18174 9008 9103 9174 0
-18174 9008 9105 9172 0
-18174 9008 9107 9170 0
-18174 9008 9109 9168 0
-18174 9008 9111 9166 0
-18174 9008 9113 9164 0
-18174 9008 9115 9162 0
-18174 9008 9117 9160 0
-18174 9008 9119 9158 0
-18174 9008 9121 9156 0
-18174 9008 9123 9154 0
-18174 9008 9125 9152 0
-18174 9008 9127 9150 0
-18174 9008 9129 9148 0
-18174 9008 9131 9147 0
-18174 9008 9133 0
-18174 9008 9135 0
-18174 9008 9137 0
-18174 9008 9139 0
-18174 9008 9141 0
-18174 9008 9143 0
-18174 9008 9145 0
-18174 9010 9182 0
-18174 9010 9096 9180 0
-18174 9010 9097 9178 0
-18174 9010 9099 9176 0
-18174 9010 9101 9174 0
-18174 9010 9103 9172 0
-18174 9010 9105 9170 0
-18174 9010 9107 9168 0
-18174 9010 9109 9166 0
-18174 9010 9111 9164 0
-18174 9010 9113 9162 0
-18174 9010 9115 9160 0
-18174 9010 9117 9158 0
-18174 9010 9119 9156 0
-18174 9010 9121 9154 0
-18174 9010 9123 9152 0
-18174 9010 9125 9150 0
-18174 9010 9127 9148 0
-18174 9010 9129 9147 0
-18174 9010 9131 0
-18174 9010 9133 0
-18174 9010 9135 0
-18174 9010 9137 0
-18174 9010 9139 0
-18174 9010 9141 0
-18174 9010 9143 0
-18174 9010 9145 0
-18174 9012 9180 0
-18174 9012 9096 9178 0
-18174 9012 9097 9176 0
-18174 9012 9099 9174 0
-18174 9012 9101 9172 0
-18174 9012 9103 9170 0
-18174 9012 9105 9168 0
-18174 9012 9107 9166 0
-18174 9012 9109 9164 0
-18174 9012 9111 9162 0
-18174 9012 9113 9160 0
-18174 9012 9115 9158 0
-18174 9012 9117 9156 0
-18174 9012 9119 9154 0
-18174 9012 9121 9152 0
-18174 9012 9123 9150 0
-18174 9012 9125 9148 0
-18174 9012 9127 9147 0
-18174 9012 9129 0
-18174 9012 9131 0
-18174 9012 9133 0
-18174 9012 9135 0
-18174 9012 9137 0
-18174 9012 9139 0
-18174 9012 9141 0
-18174 9012 9143 0
-18174 9012 9145 0
-18174 9014 9178 0
-18174 9014 9096 9176 0
-18174 9014 9097 9174 0
-18174 9014 9099 9172 0
-18174 9014 9101 9170 0
-18174 9014 9103 9168 0
-18174 9014 9105 9166 0
-18174 9014 9107 9164 0
-18174 9014 9109 9162 0
-18174 9014 9111 9160 0
-18174 9014 9113 9158 0
-18174 9014 9115 9156 0
-18174 9014 9117 9154 0
-18174 9014 9119 9152 0
-18174 9014 9121 9150 0
-18174 9014 9123 9148 0
-18174 9014 9125 9147 0
-18174 9014 9127 0
-18174 9014 9129 0
-18174 9014 9131 0
-18174 9014 9133 0
-18174 9014 9135 0
-18174 9014 9137 0
-18174 9014 9139 0
-18174 9014 9141 0
-18174 9014 9143 0
-18174 9014 9145 0
-18174 9016 9176 0
-18174 9016 9096 9174 0
-18174 9016 9097 9172 0
-18174 9016 9099 9170 0
-18174 9016 9101 9168 0
-18174 9016 9103 9166 0
-18174 9016 9105 9164 0
-18174 9016 9107 9162 0
-18174 9016 9109 9160 0
-18174 9016 9111 9158 0
-18174 9016 9113 9156 0
-18174 9016 9115 9154 0
-18174 9016 9117 9152 0
-18174 9016 9119 9150 0
-18174 9016 9121 9148 0
-18174 9016 9123 9147 0
-18174 9016 9125 0
-18174 9016 9127 0
-18174 9016 9129 0
-18174 9016 9131 0
-18174 9016 9133 0
-18174 9016 9135 0
-18174 9016 9137 0
-18174 9016 9139 0
-18174 9016 9141 0
-18174 9016 9143 0
-18174 9016 9145 0
-18174 9018 9174 0
-18174 9018 9096 9172 0
-18174 9018 9097 9170 0
-18174 9018 9099 9168 0
-18174 9018 9101 9166 0
-18174 9018 9103 9164 0
-18174 9018 9105 9162 0
-18174 9018 9107 9160 0
-18174 9018 9109 9158 0
-18174 9018 9111 9156 0
-18174 9018 9113 9154 0
-18174 9018 9115 9152 0
-18174 9018 9117 9150 0
-18174 9018 9119 9148 0
-18174 9018 9121 9147 0
-18174 9018 9123 0
-18174 9018 9125 0
-18174 9018 9127 0
-18174 9018 9129 0
-18174 9018 9131 0
-18174 9018 9133 0
-18174 9018 9135 0
-18174 9018 9137 0
-18174 9018 9139 0
-18174 9018 9141 0
-18174 9018 9143 0
-18174 9018 9145 0
-18174 9020 9172 0
-18174 9020 9096 9170 0
-18174 9020 9097 9168 0
-18174 9020 9099 9166 0
-18174 9020 9101 9164 0
-18174 9020 9103 9162 0
-18174 9020 9105 9160 0
-18174 9020 9107 9158 0
-18174 9020 9109 9156 0
-18174 9020 9111 9154 0
-18174 9020 9113 9152 0
-18174 9020 9115 9150 0
-18174 9020 9117 9148 0
-18174 9020 9119 9147 0
-18174 9020 9121 0
-18174 9020 9123 0
-18174 9020 9125 0
-18174 9020 9127 0
-18174 9020 9129 0
-18174 9020 9131 0
-18174 9020 9133 0
-18174 9020 9135 0
-18174 9020 9137 0
-18174 9020 9139 0
-18174 9020 9141 0
-18174 9020 9143 0
-18174 9020 9145 0
-18174 9022 9170 0
-18174 9022 9096 9168 0
-18174 9022 9097 9166 0
-18174 9022 9099 9164 0
-18174 9022 9101 9162 0
-18174 9022 9103 9160 0
-18174 9022 9105 9158 0
-18174 9022 9107 9156 0
-18174 9022 9109 9154 0
-18174 9022 9111 9152 0
-18174 9022 9113 9150 0
-18174 9022 9115 9148 0
-18174 9022 9117 9147 0
-18174 9022 9119 0
-18174 9022 9121 0
-18174 9022 9123 0
-18174 9022 9125 0
-18174 9022 9127 0
-18174 9022 9129 0
-18174 9022 9131 0
-18174 9022 9133 0
-18174 9022 9135 0
-18174 9022 9137 0
-18174 9022 9139 0
-18174 9022 9141 0
-18174 9022 9143 0
-18174 9022 9145 0
-18174 9024 9168 0
-18174 9024 9096 9166 0
-18174 9024 9097 9164 0
-18174 9024 9099 9162 0
-18174 9024 9101 9160 0
-18174 9024 9103 9158 0
-18174 9024 9105 9156 0
-18174 9024 9107 9154 0
-18174 9024 9109 9152 0
-18174 9024 9111 9150 0
-18174 9024 9113 9148 0
-18174 9024 9115 9147 0
-18174 9024 9117 0
-18174 9024 9119 0
-18174 9024 9121 0
-18174 9024 9123 0
-18174 9024 9125 0
-18174 9024 9127 0
-18174 9024 9129 0
-18174 9024 9131 0
-18174 9024 9133 0
-18174 9024 9135 0
-18174 9024 9137 0
-18174 9024 9139 0
-18174 9024 9141 0
-18174 9024 9143 0
-18174 9024 9145 0
18174 -9117 -9147 0
18174 -9115 -9148 0
18174 -9113 -9150 0
18174 -9111 -9152 0
18174 -9109 -9154 0
18174 -9107 -9156 0
18174 -9105 -9158 0
18174 -9103 -9160 0
18174 -9101 -9162 0
18174 -9099 -9164 0
18174 -9097 -9166 0
18174 -9096 -9168 0
18174 -9024 -9119 -9147 0
18174 -9024 -9117 -9148 0
18174 -9024 -9115 -9150 0
18174 -9024 -9113 -9152 0
18174 -9024 -9111 -9154 0
18174 -9024 -9109 -9156 0
18174 -9024 -9107 -9158 0
18174 -9024 -9105 -9160 0
18174 -9024 -9103 -9162 0
18174 -9024 -9101 -9164 0
18174 -9024 -9099 -9166 0
18174 -9024 -9097 -9168 0
18174 -9024 -9096 -9170 0
18174 -9022 -9121 -9147 0
18174 -9022 -9119 -9148 0
18174 -9022 -9117 -9150 0
18174 -9022 -9115 -9152 0
18174 -9022 -9113 -9154 0
18174 -9022 -9111 -9156 0
18174 -9022 -9109 -9158 0
18174 -9022 -9107 -9160 0
18174 -9022 -9105 -9162 0
18174 -9022 -9103 -9164 0
18174 -9022 -9101 -9166 0
18174 -9022 -9099 -9168 0
18174 -9022 -9097 -9170 0
18174 -9022 -9096 -9172 0
18174 -9020 -9123 -9147 0
18174 -9020 -9121 -9148 0
18174 -9020 -9119 -9150 0
18174 -9020 -9117 -9152 0
18174 -9020 -9115 -9154 0
18174 -9020 -9113 -9156 0
18174 -9020 -9111 -9158 0
18174 -9020 -9109 -9160 0
18174 -9020 -9107 -9162 0
18174 -9020 -9105 -9164 0
18174 -9020 -9103 -9166 0
18174 -9020 -9101 -9168 0
18174 -9020 -9099 -9170 0
18174 -9020 -9097 -9172 0
18174 -9020 -9096 -9174 0
18174 -9018 -9125 -9147 0
18174 -9018 -9123 -9148 0
18174 -9018 -9121 -9150 0
18174 -9018 -9119 -9152 0
18174 -9018 -9117 -9154 0
18174 -9018 -9115 -9156 0
18174 -9018 -9113 -9158 0
18174 -9018 -9111 -9160 0
18174 -9018 -9109 -9162 0
18174 -9018 -9107 -9164 0
18174 -9018 -9105 -9166 0
18174 -9018 -9103 -9168 0
18174 -9018 -9101 -9170 0
18174 -9018 -9099 -9172 0
18174 -9018 -9097 -9174 0
18174 -9018 -9096 -9176 0
18174 -9016 -9127 -9147 0
18174 -9016 -9125 -9148 0
18174 -9016 -9123 -9150 0
18174 -9016 -9121 -9152 0
18174 -9016 -9119 -9154 0
18174 -9016 -9117 -9156 0
18174 -9016 -9115 -9158 0
18174 -9016 -9113 -9160 0
18174 -9016 -9111 -9162 0
18174 -9016 -9109 -9164 0
18174 -9016 -9107 -9166 0
18174 -9016 -9105 -9168 0
18174 -9016 -9103 -9170 0
18174 -9016 -9101 -9172 0
18174 -9016 -9099 -9174 0
18174 -9016 -9097 -9176 0
18174 -9016 -9096 -9178 0
18174 -9014 -9129 -9147 0
18174 -9014 -9127 -9148 0
18174 -9014 -9125 -9150 0
18174 -9014 -9123 -9152 0
18174 -9014 -9121 -9154 0
18174 -9014 -9119 -9156 0
18174 -9014 -9117 -9158 0
18174 -9014 -9115 -9160 0
18174 -9014 -9113 -9162 0
18174 -9014 -9111 -9164 0
18174 -9014 -9109 -9166 0
18174 -9014 -9107 -9168 0
18174 -9014 -9105 -9170 0
18174 -9014 -9103 -9172 0
18174 -9014 -9101 -9174 0
18174 -9014 -9099 -9176 0
18174 -9014 -9097 -9178 0
18174 -9014 -9096 -9180 0
18174 -9012 -9131 -9147 0
18174 -9012 -9129 -9148 0
18174 -9012 -9127 -9150 0
18174 -9012 -9125 -9152 0
18174 -9012 -9123 -9154 0
18174 -9012 -9121 -9156 0
18174 -9012 -9119 -9158 0
18174 -9012 -9117 -9160 0
18174 -9012 -9115 -9162 0
18174 -9012 -9113 -9164 0
18174 -9012 -9111 -9166 0
18174 -9012 -9109 -9168 0
18174 -9012 -9107 -9170 0
18174 -9012 -9105 -9172 0
18174 -9012 -9103 -9174 0
18174 -9012 -9101 -9176 0
18174 -9012 -9099 -9178 0
18174 -9012 -9097 -9180 0
18174 -9012 -9096 -9182 0
18174 -9010 -9133 -9147 0
18174 -9010 -9131 -9148 0
18174 -9010 -9129 -9150 0
18174 -9010 -9127 -9152 0
18174 -9010 -9125 -9154 0
18174 -9010 -9123 -9156 0
18174 -9010 -9121 -9158 0
18174 -9010 -9119 -9160 0
18174 -9010 -9117 -9162 0
18174 -9010 -9115 -9164 0
18174 -9010 -9113 -9166 0
18174 -9010 -9111 -9168 0
18174 -9010 -9109 -9170 0
18174 -9010 -9107 -9172 0
18174 -9010 -9105 -9174 0
18174 -9010 -9103 -9176 0
18174 -9010 -9101 -9178 0
18174 -9010 -9099 -9180 0
18174 -9010 -9097 -9182 0
18174 -9010 -9096 -9184 0
18174 -9008 -9135 -9147 0
18174 -9008 -9133 -9148 0
18174 -9008 -9131 -9150 0
18174 -9008 -9129 -9152 0
18174 -9008 -9127 -9154 0
18174 -9008 -9125 -9156 0
18174 -9008 -9123 -9158 0
18174 -9008 -9121 -9160 0
18174 -9008 -9119 -9162 0
18174 -9008 -9117 -9164 0
18174 -9008 -9115 -9166 0
18174 -9008 -9113 -9168 0
18174 -9008 -9111 -9170 0
18174 -9008 -9109 -9172 0
18174 -9008 -9107 -9174 0
18174 -9008 -9105 -9176 0
18174 -9008 -9103 -9178 0
18174 -9008 -9101 -9180 0
18174 -9008 -9099 -9182 0
18174 -9008 -9097 -9184 0
18174 -9008 -9096 -9186 0
18174 -9006 -9137 -9147 0
18174 -9006 -9135 -9148 0
18174 -9006 -9133 -9150 0
18174 -9006 -9131 -9152 0
18174 -9006 -9129 -9154 0
18174 -9006 -9127 -9156 0
18174 -9006 -9125 -9158 0
18174 -9006 -9123 -9160 0
18174 -9006 -9121 -9162 0
18174 -9006 -9119 -9164 0
18174 -9006 -9117 -9166 0
18174 -9006 -9115 -9168 0
18174 -9006 -9113 -9170 0
18174 -9006 -9111 -9172 0
18174 -9006 -9109 -9174 0
18174 -9006 -9107 -9176 0
18174 -9006 -9105 -9178 0
18174 -9006 -9103 -9180 0
18174 -9006 -9101 -9182 0
18174 -9006 -9099 -9184 0
18174 -9006 -9097 -9186 0
18174 -9006 -9096 -9188 0
18174 -9004 -9139 -9147 0
18174 -9004 -9137 -9148 0
18174 -9004 -9135 -9150 0
18174 -9004 -9133 -9152 0
18174 -9004 -9131 -9154 0
18174 -9004 -9129 -9156 0
18174 -9004 -9127 -9158 0
18174 -9004 -9125 -9160 0
18174 -9004 -9123 -9162 0
18174 -9004 -9121 -9164 0
18174 -9004 -9119 -9166 0
18174 -9004 -9117 -9168 0
18174 -9004 -9115 -9170 0
18174 -9004 -9113 -9172 0
18174 -9004 -9111 -9174 0
18174 -9004 -9109 -9176 0
18174 -9004 -9107 -9178 0
18174 -9004 -9105 -9180 0
18174 -9004 -9103 -9182 0
18174 -9004 -9101 -9184 0
18174 -9004 -9099 -9186 0
18174 -9004 -9097 -9188 0
18174 -9004 -9096 -9190 0
18174 -9002 -9141 -9147 0
18174 -9002 -9139 -9148 0
18174 -9002 -9137 -9150 0
18174 -9002 -9135 -9152 0
18174 -9002 -9133 -9154 0
18174 -9002 -9131 -9156 0
18174 -9002 -9129 -9158 0
18174 -9002 -9127 -9160 0
18174 -9002 -9125 -9162 0
18174 -9002 -9123 -9164 0
18174 -9002 -9121 -9166 0
18174 -9002 -9119 -9168 0
18174 -9002 -9117 -9170 0
18174 -9002 -9115 -9172 0
18174 -9002 -9113 -9174 0
18174 -9002 -9111 -9176 0
18174 -9002 -9109 -9178 0
18174 -9002 -9107 -9180 0
18174 -9002 -9105 -9182 0
18174 -9002 -9103 -9184 0
18174 -9002 -9101 -9186 0
18174 -9002 -9099 -9188 0
18174 -9002 -9097 -9190 0
18174 -9002 -9096 -9192 0
18174 -9000 -9143 -9147 0
18174 -9000 -9141 -9148 0
18174 -9000 -9139 -9150 0
18174 -9000 -9137 -9152 0
18174 -9000 -9135 -9154 0
18174 -9000 -9133 -9156 0
18174 -9000 -9131 -9158 0
18174 -9000 -9129 -9160 0
18174 -9000 -9127 -9162 0
18174 -9000 -9125 -9164 0
18174 -9000 -9123 -9166 0
18174 -9000 -9121 -9168 0
18174 -9000 -9119 -9170 0
18174 -9000 -9117 -9172 0
18174 -9000 -9115 -9174 0
18174 -9000 -9113 -9176 0
18174 -9000 -9111 -9178 0
18174 -9000 -9109 -9180 0
18174 -9000 -9107 -9182 0
18174 -9000 -9105 -9184 0
18174 -9000 -9103 -9186 0
18174 -9000 -9101 -9188 0
18174 -9000 -9099 -9190 0
18174 -9000 -9097 -9192 0
18174 -9000 -9096 -9194 0
18174 -8998 -9145 -9147 0
18174 -8998 -9143 -9148 0
18174 -8998 -9141 -9150 0
18174 -8998 -9139 -9152 0
18174 -8998 -9137 -9154 0
18174 -8998 -9135 -9156 0
18174 -8998 -9133 -9158 0
18174 -8998 -9131 -9160 0
18174 -8998 -9129 -9162 0
18174 -8998 -9127 -9164 0
18174 -8998 -9125 -9166 0
18174 -8998 -9123 -9168 0
18174 -8998 -9121 -9170 0
18174 -8998 -9119 -9172 0
18174 -8998 -9117 -9174 0
18174 -8998 -9115 -9176 0
18174 -8998 -9113 -9178 0
18174 -8998 -9111 -9180 0
18174 -8998 -9109 -9182 0
18174 -8998 -9107 -9184 0
18174 -8998 -9105 -9186 0
18174 -8998 -9103 -9188 0
18174 -8998 -9101 -9190 0
18174 -8998 -9099 -9192 0
18174 -8998 -9097 -9194 0
18174 -8998 -9096 -9196 0
18174 -8996 -9147 0
18174 -8996 -9145 -9148 0
18174 -8996 -9143 -9150 0
18174 -8996 -9141 -9152 0
18174 -8996 -9139 -9154 0
18174 -8996 -9137 -9156 0
18174 -8996 -9135 -9158 0
18174 -8996 -9133 -9160 0
18174 -8996 -9131 -9162 0
18174 -8996 -9129 -9164 0
18174 -8996 -9127 -9166 0
18174 -8996 -9125 -9168 0
18174 -8996 -9123 -9170 0
18174 -8996 -9121 -9172 0
18174 -8996 -9119 -9174 0
18174 -8996 -9117 -9176 0
18174 -8996 -9115 -9178 0
18174 -8996 -9113 -9180 0
18174 -8996 -9111 -9182 0
18174 -8996 -9109 -9184 0
18174 -8996 -9107 -9186 0
18174 -8996 -9105 -9188 0
18174 -8996 -9103 -9190 0
18174 -8996 -9101 -9192 0
18174 -8996 -9099 -9194 0
18174 -8996 -9097 -9196 0
18174 -8996 -9096 -9198 0
18174 -8994 -9148 0
18174 -8994 -9145 -9150 0
18174 -8994 -9143 -9152 0
18174 -8994 -9141 -9154 0
18174 -8994 -9139 -9156 0
18174 -8994 -9137 -9158 0
18174 -8994 -9135 -9160 0
18174 -8994 -9133 -9162 0
18174 -8994 -9131 -9164 0
18174 -8994 -9129 -9166 0
18174 -8994 -9127 -9168 0
18174 -8994 -9125 -9170 0
18174 -8994 -9123 -9172 0
18174 -8994 -9121 -9174 0
18174 -8994 -9119 -9176 0
18174 -8994 -9117 -9178 0
18174 -8994 -9115 -9180 0
18174 -8994 -9113 -9182 0
18174 -8994 -9111 -9184 0
18174 -8994 -9109 -9186 0
18174 -8994 -9107 -9188 0
18174 -8994 -9105 -9190 0
18174 -8994 -9103 -9192 0
18174 -8994 -9101 -9194 0
18174 -8994 -9099 -9196 0
18174 -8994 -9097 -9198 0
18174 -8994 -9096 -9200 0
18174 -8992 -9150 0
18174 -8992 -9145 -9152 0
18174 -8992 -9143 -9154 0
18174 -8992 -9141 -9156 0
18174 -8992 -9139 -9158 0
18174 -8992 -9137 -9160 0
18174 -8992 -9135 -9162 0
18174 -8992 -9133 -9164 0
18174 -8992 -9131 -9166 0
18174 -8992 -9129 -9168 0
18174 -8992 -9127 -9170 0
18174 -8992 -9125 -9172 0
18174 -8992 -9123 -9174 0
18174 -8992 -9121 -9176 0
18174 -8992 -9119 -9178 0
18174 -8992 -9117 -9180 0
18174 -8992 -9115 -9182 0
18174 -8992 -9113 -9184 0
18174 -8992 -9111 -9186 0
18174 -8992 -9109 -9188 0
18174 -8992 -9107 -9190 0
18174 -8992 -9105 -9192 0
18174 -8992 -9103 -9194 0
18174 -8992 -9101 -9196 0
18174 -8992 -9099 -9198 0
18174 -8992 -9097 -9200 0
18174 -8992 -9096 -9202 0
18174 -8991 -9152 0
18174 -8991 -9145 -9154 0
18174 -8991 -9143 -9156 0
18174 -8991 -9141 -9158 0
18174 -8991 -9139 -9160 0
18174 -8991 -9137 -9162 0
18174 -8991 -9135 -9164 0
18174 -8991 -9133 -9166 0
18174 -8991 -9131 -9168 0
18174 -8991 -9129 -9170 0
18174 -8991 -9127 -9172 0
18174 -8991 -9125 -9174 0
18174 -8991 -9123 -9176 0
18174 -8991 -9121 -9178 0
18174 -8991 -9119 -9180 0
18174 -8991 -9117 -9182 0
18174 -8991 -9115 -9184 0
18174 -8991 -9113 -9186 0
18174 -8991 -9111 -9188 0
18174 -8991 -9109 -9190 0
18174 -8991 -9107 -9192 0
18174 -8991 -9105 -9194 0
18174 -8991 -9103 -9196 0
18174 -8991 -9101 -9198 0
18174 -8991 -9099 -9200 0
18174 -8991 -9097 -9202 0
18174 -8991 -9096 -9204 0
c ((29<=(aux391 + aux394 + aux395))=tv=SATLiteral(18175))
-18175 -9115 -9147 0
-18175 -9113 -9148 0
-18175 -9111 -9150 0
-18175 -9109 -9152 0
-18175 -9107 -9154 0
-18175 -9105 -9156 0
-18175 -9103 -9158 0
-18175 -9101 -9160 0
-18175 -9099 -9162 0
-18175 -9097 -9164 0
-18175 -9096 -9166 0
-18175 -9024 -9117 -9147 0
-18175 -9024 -9115 -9148 0
-18175 -9024 -9113 -9150 0
-18175 -9024 -9111 -9152 0
-18175 -9024 -9109 -9154 0
-18175 -9024 -9107 -9156 0
-18175 -9024 -9105 -9158 0
-18175 -9024 -9103 -9160 0
-18175 -9024 -9101 -9162 0
-18175 -9024 -9099 -9164 0
-18175 -9024 -9097 -9166 0
-18175 -9024 -9096 -9168 0
-18175 -9022 -9119 -9147 0
-18175 -9022 -9117 -9148 0
-18175 -9022 -9115 -9150 0
-18175 -9022 -9113 -9152 0
-18175 -9022 -9111 -9154 0
-18175 -9022 -9109 -9156 0
-18175 -9022 -9107 -9158 0
-18175 -9022 -9105 -9160 0
-18175 -9022 -9103 -9162 0
-18175 -9022 -9101 -9164 0
-18175 -9022 -9099 -9166 0
-18175 -9022 -9097 -9168 0
-18175 -9022 -9096 -9170 0
-18175 -9020 -9121 -9147 0
-18175 -9020 -9119 -9148 0
-18175 -9020 -9117 -9150 0
-18175 -9020 -9115 -9152 0
-18175 -9020 -9113 -9154 0
-18175 -9020 -9111 -9156 0
-18175 -9020 -9109 -9158 0
-18175 -9020 -9107 -9160 0
-18175 -9020 -9105 -9162 0
-18175 -9020 -9103 -9164 0
-18175 -9020 -9101 -9166 0
-18175 -9020 -9099 -9168 0
-18175 -9020 -9097 -9170 0
-18175 -9020 -9096 -9172 0
-18175 -9018 -9123 -9147 0
-18175 -9018 -9121 -9148 0
-18175 -9018 -9119 -9150 0
-18175 -9018 -9117 -9152 0
-18175 -9018 -9115 -9154 0
-18175 -9018 -9113 -9156 0
-18175 -9018 -9111 -9158 0
-18175 -9018 -9109 -9160 0
-18175 -9018 -9107 -9162 0
-18175 -9018 -9105 -9164 0
-18175 -9018 -9103 -9166 0
-18175 -9018 -9101 -9168 0
-18175 -9018 -9099 -9170 0
-18175 -9018 -9097 -9172 0
-18175 -9018 -9096 -9174 0
-18175 -9016 -9125 -9147 0
-18175 -9016 -9123 -9148 0
-18175 -9016 -9121 -9150 0
-18175 -9016 -9119 -9152 0
-18175 -9016 -9117 -9154 0
-18175 -9016 -9115 -9156 0
-18175 -9016 -9113 -9158 0
-18175 -9016 -9111 -9160 0
-18175 -9016 -9109 -9162 0
-18175 -9016 -9107 -9164 0
-18175 -9016 -9105 -9166 0
-18175 -9016 -9103 -9168 0
-18175 -9016 -9101 -9170 0
-18175 -9016 -9099 -9172 0
-18175 -9016 -9097 -9174 0
-18175 -9016 -9096 -9176 0
-18175 -9014 -9127 -9147 0
-18175 -9014 -9125 -9148 0
-18175 -9014 -9123 -9150 0
-18175 -9014 -9121 -9152 0
-18175 -9014 -9119 -9154 0
-18175 -9014 -9117 -9156 0
-18175 -9014 -9115 -9158 0
-18175 -9014 -9113 -9160 0
-18175 -9014 -9111 -9162 0
-18175 -9014 -9109 -9164 0
-18175 -9014 -9107 -9166 0
-18175 -9014 -9105 -9168 0
-18175 -9014 -9103 -9170 0
-18175 -9014 -9101 -9172 0
-18175 -9014 -9099 -9174 0
-18175 -9014 -9097 -9176 0
-18175 -9014 -9096 -9178 0
-18175 -9012 -9129 -9147 0
-18175 -9012 -9127 -9148 0
-18175 -9012 -9125 -9150 0
-18175 -9012 -9123 -9152 0
-18175 -9012 -9121 -9154 0
-18175 -9012 -9119 -9156 0
-18175 -9012 -9117 -9158 0
-18175 -9012 -9115 -9160 0
-18175 -9012 -9113 -9162 0
-18175 -9012 -9111 -9164 0
-18175 -9012 -9109 -9166 0
-18175 -9012 -9107 -9168 0
-18175 -9012 -9105 -9170 0
-18175 -9012 -9103 -9172 0
-18175 -9012 -9101 -9174 0
-18175 -9012 -9099 -9176 0
-18175 -9012 -9097 -9178 0
-18175 -9012 -9096 -9180 0
-18175 -9010 -9131 -9147 0
-18175 -9010 -9129 -9148 0
-18175 -9010 -9127 -9150 0
-18175 -9010 -9125 -9152 0
-18175 -9010 -9123 -9154 0
-18175 -9010 -9121 -9156 0
-18175 -9010 -9119 -9158 0
-18175 -9010 -9117 -9160 0
-18175 -9010 -9115 -9162 0
-18175 -9010 -9113 -9164 0
-18175 -9010 -9111 -9166 0
-18175 -9010 -9109 -9168 0
-18175 -9010 -9107 -9170 0
-18175 -9010 -9105 -9172 0
-18175 -9010 -9103 -9174 0
-18175 -9010 -9101 -9176 0
-18175 -9010 -9099 -9178 0
-18175 -9010 -9097 -9180 0
-18175 -9010 -9096 -9182 0
-18175 -9008 -9133 -9147 0
-18175 -9008 -9131 -9148 0
-18175 -9008 -9129 -9150 0
-18175 -9008 -9127 -9152 0
-18175 -9008 -9125 -9154 0
-18175 -9008 -9123 -9156 0
-18175 -9008 -9121 -9158 0
-18175 -9008 -9119 -9160 0
-18175 -9008 -9117 -9162 0
-18175 -9008 -9115 -9164 0
-18175 -9008 -9113 -9166 0
-18175 -9008 -9111 -9168 0
-18175 -9008 -9109 -9170 0
-18175 -9008 -9107 -9172 0
-18175 -9008 -9105 -9174 0
-18175 -9008 -9103 -9176 0
-18175 -9008 -9101 -9178 0
-18175 -9008 -9099 -9180 0
-18175 -9008 -9097 -9182 0
-18175 -9008 -9096 -9184 0
-18175 -9006 -9135 -9147 0
-18175 -9006 -9133 -9148 0
-18175 -9006 -9131 -9150 0
-18175 -9006 -9129 -9152 0
-18175 -9006 -9127 -9154 0
-18175 -9006 -9125 -9156 0
-18175 -9006 -9123 -9158 0
-18175 -9006 -9121 -9160 0
-18175 -9006 -9119 -9162 0
-18175 -9006 -9117 -9164 0
-18175 -9006 -9115 -9166 0
-18175 -9006 -9113 -9168 0
-18175 -9006 -9111 -9170 0
-18175 -9006 -9109 -9172 0
-18175 -9006 -9107 -9174 0
-18175 -9006 -9105 -9176 0
-18175 -9006 -9103 -9178 0
-18175 -9006 -9101 -9180 0
-18175 -9006 -9099 -9182 0
-18175 -9006 -9097 -9184 0
-18175 -9006 -9096 -9186 0
-18175 -9004 -9137 -9147 0
-18175 -9004 -9135 -9148 0
-18175 -9004 -9133 -9150 0
-18175 -9004 -9131 -9152 0
-18175 -9004 -9129 -9154 0
-18175 -9004 -9127 -9156 0
-18175 -9004 -9125 -9158 0
-18175 -9004 -9123 -9160 0
-18175 -9004 -9121 -9162 0
-18175 -9004 -9119 -9164 0
-18175 -9004 -9117 -9166 0
-18175 -9004 -9115 -9168 0
-18175 -9004 -9113 -9170 0
-18175 -9004 -9111 -9172 0
-18175 -9004 -9109 -9174 0
-18175 -9004 -9107 -9176 0
-18175 -9004 -9105 -9178 0
-18175 -9004 -9103 -9180 0
-18175 -9004 -9101 -9182 0
-18175 -9004 -9099 -9184 0
-18175 -9004 -9097 -9186 0
-18175 -9004 -9096 -9188 0
-18175 -9002 -9139 -9147 0
-18175 -9002 -9137 -9148 0
-18175 -9002 -9135 -9150 0
-18175 -9002 -9133 -9152 0
-18175 -9002 -9131 -9154 0
-18175 -9002 -9129 -9156 0
-18175 -9002 -9127 -9158 0
-18175 -9002 -9125 -9160 0
-18175 -9002 -9123 -9162 0
-18175 -9002 -9121 -9164 0
-18175 -9002 -9119 -9166 0
-18175 -9002 -9117 -9168 0
-18175 -9002 -9115 -9170 0
-18175 -9002 -9113 -9172 0
-18175 -9002 -9111 -9174 0
-18175 -9002 -9109 -9176 0
-18175 -9002 -9107 -9178 0
-18175 -9002 -9105 -9180 0
-18175 -9002 -9103 -9182 0
-18175 -9002 -9101 -9184 0
-18175 -9002 -9099 -9186 0
-18175 -9002 -9097 -9188 0
-18175 -9002 -9096 -9190 0
-18175 -9000 -9141 -9147 0
-18175 -9000 -9139 -9148 0
-18175 -9000 -9137 -9150 0
-18175 -9000 -9135 -9152 0
-18175 -9000 -9133 -9154 0
-18175 -9000 -9131 -9156 0
-18175 -9000 -9129 -9158 0
-18175 -9000 -9127 -9160 0
-18175 -9000 -9125 -9162 0
-18175 -9000 -9123 -9164 0
-18175 -9000 -9121 -9166 0
-18175 -9000 -9119 -9168 0
-18175 -9000 -9117 -9170 0
-18175 -9000 -9115 -9172 0
-18175 -9000 -9113 -9174 0
-18175 -9000 -9111 -9176 0
-18175 -9000 -9109 -9178 0
-18175 -9000 -9107 -9180 0
-18175 -9000 -9105 -9182 0
-18175 -9000 -9103 -9184 0
-18175 -9000 -9101 -9186 0
-18175 -9000 -9099 -9188 0
-18175 -9000 -9097 -9190 0
-18175 -9000 -9096 -9192 0
-18175 -8998 -9143 -9147 0
-18175 -8998 -9141 -9148 0
-18175 -8998 -9139 -9150 0
-18175 -8998 -9137 -9152 0
-18175 -8998 -9135 -9154 0
-18175 -8998 -9133 -9156 0
-18175 -8998 -9131 -9158 0
-18175 -8998 -9129 -9160 0
-18175 -8998 -9127 -9162 0
-18175 -8998 -9125 -9164 0
-18175 -8998 -9123 -9166 0
-18175 -8998 -9121 -9168 0
-18175 -8998 -9119 -9170 0
-18175 -8998 -9117 -9172 0
-18175 -8998 -9115 -9174 0
-18175 -8998 -9113 -9176 0
-18175 -8998 -9111 -9178 0
-18175 -8998 -9109 -9180 0
-18175 -8998 -9107 -9182 0
-18175 -8998 -9105 -9184 0
-18175 -8998 -9103 -9186 0
-18175 -8998 -9101 -9188 0
-18175 -8998 -9099 -9190 0
-18175 -8998 -9097 -9192 0
-18175 -8998 -9096 -9194 0
-18175 -8996 -9145 -9147 0
-18175 -8996 -9143 -9148 0
-18175 -8996 -9141 -9150 0
-18175 -8996 -9139 -9152 0
-18175 -8996 -9137 -9154 0
-18175 -8996 -9135 -9156 0
-18175 -8996 -9133 -9158 0
-18175 -8996 -9131 -9160 0
-18175 -8996 -9129 -9162 0
-18175 -8996 -9127 -9164 0
-18175 -8996 -9125 -9166 0
-18175 -8996 -9123 -9168 0
-18175 -8996 -9121 -9170 0
-18175 -8996 -9119 -9172 0
-18175 -8996 -9117 -9174 0
-18175 -8996 -9115 -9176 0
-18175 -8996 -9113 -9178 0
-18175 -8996 -9111 -9180 0
-18175 -8996 -9109 -9182 0
-18175 -8996 -9107 -9184 0
-18175 -8996 -9105 -9186 0
-18175 -8996 -9103 -9188 0
-18175 -8996 -9101 -9190 0
-18175 -8996 -9099 -9192 0
-18175 -8996 -9097 -9194 0
-18175 -8996 -9096 -9196 0
-18175 -8994 -9147 0
-18175 -8994 -9145 -9148 0
-18175 -8994 -9143 -9150 0
-18175 -8994 -9141 -9152 0
-18175 -8994 -9139 -9154 0
-18175 -8994 -9137 -9156 0
-18175 -8994 -9135 -9158 0
-18175 -8994 -9133 -9160 0
-18175 -8994 -9131 -9162 0
-18175 -8994 -9129 -9164 0
-18175 -8994 -9127 -9166 0
-18175 -8994 -9125 -9168 0
-18175 -8994 -9123 -9170 0
-18175 -8994 -9121 -9172 0
-18175 -8994 -9119 -9174 0
-18175 -8994 -9117 -9176 0
-18175 -8994 -9115 -9178 0
-18175 -8994 -9113 -9180 0
-18175 -8994 -9111 -9182 0
-18175 -8994 -9109 -9184 0
-18175 -8994 -9107 -9186 0
-18175 -8994 -9105 -9188 0
-18175 -8994 -9103 -9190 0
-18175 -8994 -9101 -9192 0
-18175 -8994 -9099 -9194 0
-18175 -8994 -9097 -9196 0
-18175 -8994 -9096 -9198 0
-18175 -8992 -9148 0
-18175 -8992 -9145 -9150 0
-18175 -8992 -9143 -9152 0
-18175 -8992 -9141 -9154 0
-18175 -8992 -9139 -9156 0
-18175 -8992 -9137 -9158 0
-18175 -8992 -9135 -9160 0
-18175 -8992 -9133 -9162 0
-18175 -8992 -9131 -9164 0
-18175 -8992 -9129 -9166 0
-18175 -8992 -9127 -9168 0
-18175 -8992 -9125 -9170 0
-18175 -8992 -9123 -9172 0
-18175 -8992 -9121 -9174 0
-18175 -8992 -9119 -9176 0
-18175 -8992 -9117 -9178 0
-18175 -8992 -9115 -9180 0
-18175 -8992 -9113 -9182 0
-18175 -8992 -9111 -9184 0
-18175 -8992 -9109 -9186 0
-18175 -8992 -9107 -9188 0
-18175 -8992 -9105 -9190 0
-18175 -8992 -9103 -9192 0
-18175 -8992 -9101 -9194 0
-18175 -8992 -9099 -9196 0
-18175 -8992 -9097 -9198 0
-18175 -8992 -9096 -9200 0
-18175 -8991 -9150 0
-18175 -8991 -9145 -9152 0
-18175 -8991 -9143 -9154 0
-18175 -8991 -9141 -9156 0
-18175 -8991 -9139 -9158 0
-18175 -8991 -9137 -9160 0
-18175 -8991 -9135 -9162 0
-18175 -8991 -9133 -9164 0
-18175 -8991 -9131 -9166 0
-18175 -8991 -9129 -9168 0
-18175 -8991 -9127 -9170 0
-18175 -8991 -9125 -9172 0
-18175 -8991 -9123 -9174 0
-18175 -8991 -9121 -9176 0
-18175 -8991 -9119 -9178 0
-18175 -8991 -9117 -9180 0
-18175 -8991 -9115 -9182 0
-18175 -8991 -9113 -9184 0
-18175 -8991 -9111 -9186 0
-18175 -8991 -9109 -9188 0
-18175 -8991 -9107 -9190 0
-18175 -8991 -9105 -9192 0
-18175 -8991 -9103 -9194 0
-18175 -8991 -9101 -9196 0
-18175 -8991 -9099 -9198 0
-18175 -8991 -9097 -9200 0
-18175 -8991 -9096 -9202 0
18175 9202 0
18175 9096 9200 0
18175 9097 9198 0
18175 9099 9196 0
18175 9101 9194 0
18175 9103 9192 0
18175 9105 9190 0
18175 9107 9188 0
18175 9109 9186 0
18175 9111 9184 0
18175 9113 9182 0
18175 9115 9180 0
18175 9117 9178 0
18175 9119 9176 0
18175 9121 9174 0
18175 9123 9172 0
18175 9125 9170 0
18175 9127 9168 0
18175 9129 9166 0
18175 9131 9164 0
18175 9133 9162 0
18175 9135 9160 0
18175 9137 9158 0
18175 9139 9156 0
18175 9141 9154 0
18175 9143 9152 0
18175 9145 9150 0
18175 8991 9200 0
18175 8991 9096 9198 0
18175 8991 9097 9196 0
18175 8991 9099 9194 0
18175 8991 9101 9192 0
18175 8991 9103 9190 0
18175 8991 9105 9188 0
18175 8991 9107 9186 0
18175 8991 9109 9184 0
18175 8991 9111 9182 0
18175 8991 9113 9180 0
18175 8991 9115 9178 0
18175 8991 9117 9176 0
18175 8991 9119 9174 0
18175 8991 9121 9172 0
18175 8991 9123 9170 0
18175 8991 9125 9168 0
18175 8991 9127 9166 0
18175 8991 9129 9164 0
18175 8991 9131 9162 0
18175 8991 9133 9160 0
18175 8991 9135 9158 0
18175 8991 9137 9156 0
18175 8991 9139 9154 0
18175 8991 9141 9152 0
18175 8991 9143 9150 0
18175 8991 9145 9148 0
18175 8992 9198 0
18175 8992 9096 9196 0
18175 8992 9097 9194 0
18175 8992 9099 9192 0
18175 8992 9101 9190 0
18175 8992 9103 9188 0
18175 8992 9105 9186 0
18175 8992 9107 9184 0
18175 8992 9109 9182 0
18175 8992 9111 9180 0
18175 8992 9113 9178 0
18175 8992 9115 9176 0
18175 8992 9117 9174 0
18175 8992 9119 9172 0
18175 8992 9121 9170 0
18175 8992 9123 9168 0
18175 8992 9125 9166 0
18175 8992 9127 9164 0
18175 8992 9129 9162 0
18175 8992 9131 9160 0
18175 8992 9133 9158 0
18175 8992 9135 9156 0
18175 8992 9137 9154 0
18175 8992 9139 9152 0
18175 8992 9141 9150 0
18175 8992 9143 9148 0
18175 8992 9145 9147 0
18175 8994 9196 0
18175 8994 9096 9194 0
18175 8994 9097 9192 0
18175 8994 9099 9190 0
18175 8994 9101 9188 0
18175 8994 9103 9186 0
18175 8994 9105 9184 0
18175 8994 9107 9182 0
18175 8994 9109 9180 0
18175 8994 9111 9178 0
18175 8994 9113 9176 0
18175 8994 9115 9174 0
18175 8994 9117 9172 0
18175 8994 9119 9170 0
18175 8994 9121 9168 0
18175 8994 9123 9166 0
18175 8994 9125 9164 0
18175 8994 9127 9162 0
18175 8994 9129 9160 0
18175 8994 9131 9158 0
18175 8994 9133 9156 0
18175 8994 9135 9154 0
18175 8994 9137 9152 0
18175 8994 9139 9150 0
18175 8994 9141 9148 0
18175 8994 9143 9147 0
18175 8994 9145 0
18175 8996 9194 0
18175 8996 9096 9192 0
18175 8996 9097 9190 0
18175 8996 9099 9188 0
18175 8996 9101 9186 0
18175 8996 9103 9184 0
18175 8996 9105 9182 0
18175 8996 9107 9180 0
18175 8996 9109 9178 0
18175 8996 9111 9176 0
18175 8996 9113 9174 0
18175 8996 9115 9172 0
18175 8996 9117 9170 0
18175 8996 9119 9168 0
18175 8996 9121 9166 0
18175 8996 9123 9164 0
18175 8996 9125 9162 0
18175 8996 9127 9160 0
18175 8996 9129 9158 0
18175 8996 9131 9156 0
18175 8996 9133 9154 0
18175 8996 9135 9152 0
18175 8996 9137 9150 0
18175 8996 9139 9148 0
18175 8996 9141 9147 0
18175 8996 9143 0
18175 8996 9145 0
18175 8998 9192 0
18175 8998 9096 9190 0
18175 8998 9097 9188 0
18175 8998 9099 9186 0
18175 8998 9101 9184 0
18175 8998 9103 9182 0
18175 8998 9105 9180 0
18175 8998 9107 9178 0
18175 8998 9109 9176 0
18175 8998 9111 9174 0
18175 8998 9113 9172 0
18175 8998 9115 9170 0
18175 8998 9117 9168 0
18175 8998 9119 9166 0
18175 8998 9121 9164 0
18175 8998 9123 9162 0
18175 8998 9125 9160 0
18175 8998 9127 9158 0
18175 8998 9129 9156 0
18175 8998 9131 9154 0
18175 8998 9133 9152 0
18175 8998 9135 9150 0
18175 8998 9137 9148 0
18175 8998 9139 9147 0
18175 8998 9141 0
18175 8998 9143 0
18175 8998 9145 0
18175 9000 9190 0
18175 9000 9096 9188 0
18175 9000 9097 9186 0
18175 9000 9099 9184 0
18175 9000 9101 9182 0
18175 9000 9103 9180 0
18175 9000 9105 9178 0
18175 9000 9107 9176 0
18175 9000 9109 9174 0
18175 9000 9111 9172 0
18175 9000 9113 9170 0
18175 9000 9115 9168 0
18175 9000 9117 9166 0
18175 9000 9119 9164 0
18175 9000 9121 9162 0
18175 9000 9123 9160 0
18175 9000 9125 9158 0
18175 9000 9127 9156 0
18175 9000 9129 9154 0
18175 9000 9131 9152 0
18175 9000 9133 9150 0
18175 9000 9135 9148 0
18175 9000 9137 9147 0
18175 9000 9139 0
18175 9000 9141 0
18175 9000 9143 0
18175 9000 9145 0
18175 9002 9188 0
18175 9002 9096 9186 0
18175 9002 9097 9184 0
18175 9002 9099 9182 0
18175 9002 9101 9180 0
18175 9002 9103 9178 0
18175 9002 9105 9176 0
18175 9002 9107 9174 0
18175 9002 9109 9172 0
18175 9002 9111 9170 0
18175 9002 9113 9168 0
18175 9002 9115 9166 0
18175 9002 9117 9164 0
18175 9002 9119 9162 0
18175 9002 9121 9160 0
18175 9002 9123 9158 0
18175 9002 9125 9156 0
18175 9002 9127 9154 0
18175 9002 9129 9152 0
18175 9002 9131 9150 0
18175 9002 9133 9148 0
18175 9002 9135 9147 0
18175 9002 9137 0
18175 9002 9139 0
18175 9002 9141 0
18175 9002 9143 0
18175 9002 9145 0
18175 9004 9186 0
18175 9004 9096 9184 0
18175 9004 9097 9182 0
18175 9004 9099 9180 0
18175 9004 9101 9178 0
18175 9004 9103 9176 0
18175 9004 9105 9174 0
18175 9004 9107 9172 0
18175 9004 9109 9170 0
18175 9004 9111 9168 0
18175 9004 9113 9166 0
18175 9004 9115 9164 0
18175 9004 9117 9162 0
18175 9004 9119 9160 0
18175 9004 9121 9158 0
18175 9004 9123 9156 0
18175 9004 9125 9154 0
18175 9004 9127 9152 0
18175 9004 9129 9150 0
18175 9004 9131 9148 0
18175 9004 9133 9147 0
18175 9004 9135 0
18175 9004 9137 0
18175 9004 9139 0
18175 9004 9141 0
18175 9004 9143 0
18175 9004 9145 0
18175 9006 9184 0
18175 9006 9096 9182 0
18175 9006 9097 9180 0
18175 9006 9099 9178 0
18175 9006 9101 9176 0
18175 9006 9103 9174 0
18175 9006 9105 9172 0
18175 9006 9107 9170 0
18175 9006 9109 9168 0
18175 9006 9111 9166 0
18175 9006 9113 9164 0
18175 9006 9115 9162 0
18175 9006 9117 9160 0
18175 9006 9119 9158 0
18175 9006 9121 9156 0
18175 9006 9123 9154 0
18175 9006 9125 9152 0
18175 9006 9127 9150 0
18175 9006 9129 9148 0
18175 9006 9131 9147 0
18175 9006 9133 0
18175 9006 9135 0
18175 9006 9137 0
18175 9006 9139 0
18175 9006 9141 0
18175 9006 9143 0
18175 9006 9145 0
18175 9008 9182 0
18175 9008 9096 9180 0
18175 9008 9097 9178 0
18175 9008 9099 9176 0
18175 9008 9101 9174 0
18175 9008 9103 9172 0
18175 9008 9105 9170 0
18175 9008 9107 9168 0
18175 9008 9109 9166 0
18175 9008 9111 9164 0
18175 9008 9113 9162 0
18175 9008 9115 9160 0
18175 9008 9117 9158 0
18175 9008 9119 9156 0
18175 9008 9121 9154 0
18175 9008 9123 9152 0
18175 9008 9125 9150 0
18175 9008 9127 9148 0
18175 9008 9129 9147 0
18175 9008 9131 0
18175 9008 9133 0
18175 9008 9135 0
18175 9008 9137 0
18175 9008 9139 0
18175 9008 9141 0
18175 9008 9143 0
18175 9008 9145 0
18175 9010 9180 0
18175 9010 9096 9178 0
18175 9010 9097 9176 0
18175 9010 9099 9174 0
18175 9010 9101 9172 0
18175 9010 9103 9170 0
18175 9010 9105 9168 0
18175 9010 9107 9166 0
18175 9010 9109 9164 0
18175 9010 9111 9162 0
18175 9010 9113 9160 0
18175 9010 9115 9158 0
18175 9010 9117 9156 0
18175 9010 9119 9154 0
18175 9010 9121 9152 0
18175 9010 9123 9150 0
18175 9010 9125 9148 0
18175 9010 9127 9147 0
18175 9010 9129 0
18175 9010 9131 0
18175 9010 9133 0
18175 9010 9135 0
18175 9010 9137 0
18175 9010 9139 0
18175 9010 9141 0
18175 9010 9143 0
18175 9010 9145 0
18175 9012 9178 0
18175 9012 9096 9176 0
18175 9012 9097 9174 0
18175 9012 9099 9172 0
18175 9012 9101 9170 0
18175 9012 9103 9168 0
18175 9012 9105 9166 0
18175 9012 9107 9164 0
18175 9012 9109 9162 0
18175 9012 9111 9160 0
18175 9012 9113 9158 0
18175 9012 9115 9156 0
18175 9012 9117 9154 0
18175 9012 9119 9152 0
18175 9012 9121 9150 0
18175 9012 9123 9148 0
18175 9012 9125 9147 0
18175 9012 9127 0
18175 9012 9129 0
18175 9012 9131 0
18175 9012 9133 0
18175 9012 9135 0
18175 9012 9137 0
18175 9012 9139 0
18175 9012 9141 0
18175 9012 9143 0
18175 9012 9145 0
18175 9014 9176 0
18175 9014 9096 9174 0
18175 9014 9097 9172 0
18175 9014 9099 9170 0
18175 9014 9101 9168 0
18175 9014 9103 9166 0
18175 9014 9105 9164 0
18175 9014 9107 9162 0
18175 9014 9109 9160 0
18175 9014 9111 9158 0
18175 9014 9113 9156 0
18175 9014 9115 9154 0
18175 9014 9117 9152 0
18175 9014 9119 9150 0
18175 9014 9121 9148 0
18175 9014 9123 9147 0
18175 9014 9125 0
18175 9014 9127 0
18175 9014 9129 0
18175 9014 9131 0
18175 9014 9133 0
18175 9014 9135 0
18175 9014 9137 0
18175 9014 9139 0
18175 9014 9141 0
18175 9014 9143 0
18175 9014 9145 0
18175 9016 9174 0
18175 9016 9096 9172 0
18175 9016 9097 9170 0
18175 9016 9099 9168 0
18175 9016 9101 9166 0
18175 9016 9103 9164 0
18175 9016 9105 9162 0
18175 9016 9107 9160 0
18175 9016 9109 9158 0
18175 9016 9111 9156 0
18175 9016 9113 9154 0
18175 9016 9115 9152 0
18175 9016 9117 9150 0
18175 9016 9119 9148 0
18175 9016 9121 9147 0
18175 9016 9123 0
18175 9016 9125 0
18175 9016 9127 0
18175 9016 9129 0
18175 9016 9131 0
18175 9016 9133 0
18175 9016 9135 0
18175 9016 9137 0
18175 9016 9139 0
18175 9016 9141 0
18175 9016 9143 0
18175 9016 9145 0
18175 9018 9172 0
18175 9018 9096 9170 0
18175 9018 9097 9168 0
18175 9018 9099 9166 0
18175 9018 9101 9164 0
18175 9018 9103 9162 0
18175 9018 9105 9160 0
18175 9018 9107 9158 0
18175 9018 9109 9156 0
18175 9018 9111 9154 0
18175 9018 9113 9152 0
18175 9018 9115 9150 0
18175 9018 9117 9148 0
18175 9018 9119 9147 0
18175 9018 9121 0
18175 9018 9123 0
18175 9018 9125 0
18175 9018 9127 0
18175 9018 9129 0
18175 9018 9131 0
18175 9018 9133 0
18175 9018 9135 0
18175 9018 9137 0
18175 9018 9139 0
18175 9018 9141 0
18175 9018 9143 0
18175 9018 9145 0
18175 9020 9170 0
18175 9020 9096 9168 0
18175 9020 9097 9166 0
18175 9020 9099 9164 0
18175 9020 9101 9162 0
18175 9020 9103 9160 0
18175 9020 9105 9158 0
18175 9020 9107 9156 0
18175 9020 9109 9154 0
18175 9020 9111 9152 0
18175 9020 9113 9150 0
18175 9020 9115 9148 0
18175 9020 9117 9147 0
18175 9020 9119 0
18175 9020 9121 0
18175 9020 9123 0
18175 9020 9125 0
18175 9020 9127 0
18175 9020 9129 0
18175 9020 9131 0
18175 9020 9133 0
18175 9020 9135 0
18175 9020 9137 0
18175 9020 9139 0
18175 9020 9141 0
18175 9020 9143 0
18175 9020 9145 0
18175 9022 9168 0
18175 9022 9096 9166 0
18175 9022 9097 9164 0
18175 9022 9099 9162 0
18175 9022 9101 9160 0
18175 9022 9103 9158 0
18175 9022 9105 9156 0
18175 9022 9107 9154 0
18175 9022 9109 9152 0
18175 9022 9111 9150 0
18175 9022 9113 9148 0
18175 9022 9115 9147 0
18175 9022 9117 0
18175 9022 9119 0
18175 9022 9121 0
18175 9022 9123 0
18175 9022 9125 0
18175 9022 9127 0
18175 9022 9129 0
18175 9022 9131 0
18175 9022 9133 0
18175 9022 9135 0
18175 9022 9137 0
18175 9022 9139 0
18175 9022 9141 0
18175 9022 9143 0
18175 9022 9145 0
18175 9024 9166 0
18175 9024 9096 9164 0
18175 9024 9097 9162 0
18175 9024 9099 9160 0
18175 9024 9101 9158 0
18175 9024 9103 9156 0
18175 9024 9105 9154 0
18175 9024 9107 9152 0
18175 9024 9109 9150 0
18175 9024 9111 9148 0
18175 9024 9113 9147 0
18175 9024 9115 0
18175 9024 9117 0
18175 9024 9119 0
18175 9024 9121 0
18175 9024 9123 0
18175 9024 9125 0
18175 9024 9127 0
18175 9024 9129 0
18175 9024 9131 0
18175 9024 9133 0
18175 9024 9135 0
18175 9024 9137 0
18175 9024 9139 0
18175 9024 9141 0
18175 9024 9143 0
18175 9024 9145 0
c (((aux397 + aux400 + aux401)<=27)=tv=SATLiteral(18176))
-18176 9460 0
-18176 9356 9458 0
-18176 9357 9456 0
-18176 9359 9454 0
-18176 9361 9452 0
-18176 9363 9450 0
-18176 9365 9448 0
-18176 9367 9446 0
-18176 9369 9444 0
-18176 9371 9442 0
-18176 9373 9440 0
-18176 9375 9438 0
-18176 9377 9436 0
-18176 9379 9434 0
-18176 9381 9432 0
-18176 9383 9430 0
-18176 9385 9428 0
-18176 9387 9426 0
-18176 9389 9424 0
-18176 9391 9422 0
-18176 9393 9420 0
-18176 9395 9418 0
-18176 9397 9416 0
-18176 9399 9414 0
-18176 9401 9412 0
-18176 9403 9410 0
-18176 9405 9408 0
-18176 9251 9458 0
-18176 9251 9356 9456 0
-18176 9251 9357 9454 0
-18176 9251 9359 9452 0
-18176 9251 9361 9450 0
-18176 9251 9363 9448 0
-18176 9251 9365 9446 0
-18176 9251 9367 9444 0
-18176 9251 9369 9442 0
-18176 9251 9371 9440 0
-18176 9251 9373 9438 0
-18176 9251 9375 9436 0
-18176 9251 9377 9434 0
-18176 9251 9379 9432 0
-18176 9251 9381 9430 0
-18176 9251 9383 9428 0
-18176 9251 9385 9426 0
-18176 9251 9387 9424 0
-18176 9251 9389 9422 0
-18176 9251 9391 9420 0
-18176 9251 9393 9418 0
-18176 9251 9395 9416 0
-18176 9251 9397 9414 0
-18176 9251 9399 9412 0
-18176 9251 9401 9410 0
-18176 9251 9403 9408 0
-18176 9251 9405 9407 0
-18176 9252 9456 0
-18176 9252 9356 9454 0
-18176 9252 9357 9452 0
-18176 9252 9359 9450 0
-18176 9252 9361 9448 0
-18176 9252 9363 9446 0
-18176 9252 9365 9444 0
-18176 9252 9367 9442 0
-18176 9252 9369 9440 0
-18176 9252 9371 9438 0
-18176 9252 9373 9436 0
-18176 9252 9375 9434 0
-18176 9252 9377 9432 0
-18176 9252 9379 9430 0
-18176 9252 9381 9428 0
-18176 9252 9383 9426 0
-18176 9252 9385 9424 0
-18176 9252 9387 9422 0
-18176 9252 9389 9420 0
-18176 9252 9391 9418 0
-18176 9252 9393 9416 0
-18176 9252 9395 9414 0
-18176 9252 9397 9412 0
-18176 9252 9399 9410 0
-18176 9252 9401 9408 0
-18176 9252 9403 9407 0
-18176 9252 9405 0
-18176 9254 9454 0
-18176 9254 9356 9452 0
-18176 9254 9357 9450 0
-18176 9254 9359 9448 0
-18176 9254 9361 9446 0
-18176 9254 9363 9444 0
-18176 9254 9365 9442 0
-18176 9254 9367 9440 0
-18176 9254 9369 9438 0
-18176 9254 9371 9436 0
-18176 9254 9373 9434 0
-18176 9254 9375 9432 0
-18176 9254 9377 9430 0
-18176 9254 9379 9428 0
-18176 9254 9381 9426 0
-18176 9254 9383 9424 0
-18176 9254 9385 9422 0
-18176 9254 9387 9420 0
-18176 9254 9389 9418 0
-18176 9254 9391 9416 0
-18176 9254 9393 9414 0
-18176 9254 9395 9412 0
-18176 9254 9397 9410 0
-18176 9254 9399 9408 0
-18176 9254 9401 9407 0
-18176 9254 9403 0
-18176 9254 9405 0
-18176 9256 9452 0
-18176 9256 9356 9450 0
-18176 9256 9357 9448 0
-18176 9256 9359 9446 0
-18176 9256 9361 9444 0
-18176 9256 9363 9442 0
-18176 9256 9365 9440 0
-18176 9256 9367 9438 0
-18176 9256 9369 9436 0
-18176 9256 9371 9434 0
-18176 9256 9373 9432 0
-18176 9256 9375 9430 0
-18176 9256 9377 9428 0
-18176 9256 9379 9426 0
-18176 9256 9381 9424 0
-18176 9256 9383 9422 0
-18176 9256 9385 9420 0
-18176 9256 9387 9418 0
-18176 9256 9389 9416 0
-18176 9256 9391 9414 0
-18176 9256 9393 9412 0
-18176 9256 9395 9410 0
-18176 9256 9397 9408 0
-18176 9256 9399 9407 0
-18176 9256 9401 0
-18176 9256 9403 0
-18176 9256 9405 0
-18176 9258 9450 0
-18176 9258 9356 9448 0
-18176 9258 9357 9446 0
-18176 9258 9359 9444 0
-18176 9258 9361 9442 0
-18176 9258 9363 9440 0
-18176 9258 9365 9438 0
-18176 9258 9367 9436 0
-18176 9258 9369 9434 0
-18176 9258 9371 9432 0
-18176 9258 9373 9430 0
-18176 9258 9375 9428 0
-18176 9258 9377 9426 0
-18176 9258 9379 9424 0
-18176 9258 9381 9422 0
-18176 9258 9383 9420 0
-18176 9258 9385 9418 0
-18176 9258 9387 9416 0
-18176 9258 9389 9414 0
-18176 9258 9391 9412 0
-18176 9258 9393 9410 0
-18176 9258 9395 9408 0
-18176 9258 9397 9407 0
-18176 9258 9399 0
-18176 9258 9401 0
-18176 9258 9403 0
-18176 9258 9405 0
-18176 9260 9448 0
-18176 9260 9356 9446 0
-18176 9260 9357 9444 0
-18176 9260 9359 9442 0
-18176 9260 9361 9440 0
-18176 9260 9363 9438 0
-18176 9260 9365 9436 0
-18176 9260 9367 9434 0
-18176 9260 9369 9432 0
-18176 9260 9371 9430 0
-18176 9260 9373 9428 0
-18176 9260 9375 9426 0
-18176 9260 9377 9424 0
-18176 9260 9379 9422 0
-18176 9260 9381 9420 0
-18176 9260 9383 9418 0
-18176 9260 9385 9416 0
-18176 9260 9387 9414 0
-18176 9260 9389 9412 0
-18176 9260 9391 9410 0
-18176 9260 9393 9408 0
-18176 9260 9395 9407 0
-18176 9260 9397 0
-18176 9260 9399 0
-18176 9260 9401 0
-18176 9260 9403 0
-18176 9260 9405 0
-18176 9262 9446 0
-18176 9262 9356 9444 0
-18176 9262 9357 9442 0
-18176 9262 9359 9440 0
-18176 9262 9361 9438 0
-18176 9262 9363 9436 0
-18176 9262 9365 9434 0
-18176 9262 9367 9432 0
-18176 9262 9369 9430 0
-18176 9262 9371 9428 0
-18176 9262 9373 9426 0
-18176 9262 9375 9424 0
-18176 9262 9377 9422 0
-18176 9262 9379 9420 0
-18176 9262 9381 9418 0
-18176 9262 9383 9416 0
-18176 9262 9385 9414 0
-18176 9262 9387 9412 0
-18176 9262 9389 9410 0
-18176 9262 9391 9408 0
-18176 9262 9393 9407 0
-18176 9262 9395 0
-18176 9262 9397 0
-18176 9262 9399 0
-18176 9262 9401 0
-18176 9262 9403 0
-18176 9262 9405 0
-18176 9264 9444 0
-18176 9264 9356 9442 0
-18176 9264 9357 9440 0
-18176 9264 9359 9438 0
-18176 9264 9361 9436 0
-18176 9264 9363 9434 0
-18176 9264 9365 9432 0
-18176 9264 9367 9430 0
-18176 9264 9369 9428 0
-18176 9264 9371 9426 0
-18176 9264 9373 9424 0
-18176 9264 9375 9422 0
-18176 9264 9377 9420 0
-18176 9264 9379 9418 0
-18176 9264 9381 9416 0
-18176 9264 9383 9414 0
-18176 9264 9385 9412 0
-18176 9264 9387 9410 0
-18176 9264 9389 9408 0
-18176 9264 9391 9407 0
-18176 9264 9393 0
-18176 9264 9395 0
-18176 9264 9397 0
-18176 9264 9399 0
-18176 9264 9401 0
-18176 9264 9403 0
-18176 9264 9405 0
-18176 9266 9442 0
-18176 9266 9356 9440 0
-18176 9266 9357 9438 0
-18176 9266 9359 9436 0
-18176 9266 9361 9434 0
-18176 9266 9363 9432 0
-18176 9266 9365 9430 0
-18176 9266 9367 9428 0
-18176 9266 9369 9426 0
-18176 9266 9371 9424 0
-18176 9266 9373 9422 0
-18176 9266 9375 9420 0
-18176 9266 9377 9418 0
-18176 9266 9379 9416 0
-18176 9266 9381 9414 0
-18176 9266 9383 9412 0
-18176 9266 9385 9410 0
-18176 9266 9387 9408 0
-18176 9266 9389 9407 0
-18176 9266 9391 0
-18176 9266 9393 0
-18176 9266 9395 0
-18176 9266 9397 0
-18176 9266 9399 0
-18176 9266 9401 0
-18176 9266 9403 0
-18176 9266 9405 0
-18176 9268 9440 0
-18176 9268 9356 9438 0
-18176 9268 9357 9436 0
-18176 9268 9359 9434 0
-18176 9268 9361 9432 0
-18176 9268 9363 9430 0
-18176 9268 9365 9428 0
-18176 9268 9367 9426 0
-18176 9268 9369 9424 0
-18176 9268 9371 9422 0
-18176 9268 9373 9420 0
-18176 9268 9375 9418 0
-18176 9268 9377 9416 0
-18176 9268 9379 9414 0
-18176 9268 9381 9412 0
-18176 9268 9383 9410 0
-18176 9268 9385 9408 0
-18176 9268 9387 9407 0
-18176 9268 9389 0
-18176 9268 9391 0
-18176 9268 9393 0
-18176 9268 9395 0
-18176 9268 9397 0
-18176 9268 9399 0
-18176 9268 9401 0
-18176 9268 9403 0
-18176 9268 9405 0
-18176 9270 9438 0
-18176 9270 9356 9436 0
-18176 9270 9357 9434 0
-18176 9270 9359 9432 0
-18176 9270 9361 9430 0
-18176 9270 9363 9428 0
-18176 9270 9365 9426 0
-18176 9270 9367 9424 0
-18176 9270 9369 9422 0
-18176 9270 9371 9420 0
-18176 9270 9373 9418 0
-18176 9270 9375 9416 0
-18176 9270 9377 9414 0
-18176 9270 9379 9412 0
-18176 9270 9381 9410 0
-18176 9270 9383 9408 0
-18176 9270 9385 9407 0
-18176 9270 9387 0
-18176 9270 9389 0
-18176 9270 9391 0
-18176 9270 9393 0
-18176 9270 9395 0
-18176 9270 9397 0
-18176 9270 9399 0
-18176 9270 9401 0
-18176 9270 9403 0
-18176 9270 9405 0
-18176 9272 9436 0
-18176 9272 9356 9434 0
-18176 9272 9357 9432 0
-18176 9272 9359 9430 0
-18176 9272 9361 9428 0
-18176 9272 9363 9426 0
-18176 9272 9365 9424 0
-18176 9272 9367 9422 0
-18176 9272 9369 9420 0
-18176 9272 9371 9418 0
-18176 9272 9373 9416 0
-18176 9272 9375 9414 0
-18176 9272 9377 9412 0
-18176 9272 9379 9410 0
-18176 9272 9381 9408 0
-18176 9272 9383 9407 0
-18176 9272 9385 0
-18176 9272 9387 0
-18176 9272 9389 0
-18176 9272 9391 0
-18176 9272 9393 0
-18176 9272 9395 0
-18176 9272 9397 0
-18176 9272 9399 0
-18176 9272 9401 0
-18176 9272 9403 0
-18176 9272 9405 0
-18176 9274 9434 0
-18176 9274 9356 9432 0
-18176 9274 9357 9430 0
-18176 9274 9359 9428 0
-18176 9274 9361 9426 0
-18176 9274 9363 9424 0
-18176 9274 9365 9422 0
-18176 9274 9367 9420 0
-18176 9274 9369 9418 0
-18176 9274 9371 9416 0
-18176 9274 9373 9414 0
-18176 9274 9375 9412 0
-18176 9274 9377 9410 0
-18176 9274 9379 9408 0
-18176 9274 9381 9407 0
-18176 9274 9383 0
-18176 9274 9385 0
-18176 9274 9387 0
-18176 9274 9389 0
-18176 9274 9391 0
-18176 9274 9393 0
-18176 9274 9395 0
-18176 9274 9397 0
-18176 9274 9399 0
-18176 9274 9401 0
-18176 9274 9403 0
-18176 9274 9405 0
-18176 9276 9432 0
-18176 9276 9356 9430 0
-18176 9276 9357 9428 0
-18176 9276 9359 9426 0
-18176 9276 9361 9424 0
-18176 9276 9363 9422 0
-18176 9276 9365 9420 0
-18176 9276 9367 9418 0
-18176 9276 9369 9416 0
-18176 9276 9371 9414 0
-18176 9276 9373 9412 0
-18176 9276 9375 9410 0
-18176 9276 9377 9408 0
-18176 9276 9379 9407 0
-18176 9276 9381 0
-18176 9276 9383 0
-18176 9276 9385 0
-18176 9276 9387 0
-18176 9276 9389 0
-18176 9276 9391 0
-18176 9276 9393 0
-18176 9276 9395 0
-18176 9276 9397 0
-18176 9276 9399 0
-18176 9276 9401 0
-18176 9276 9403 0
-18176 9276 9405 0
-18176 9278 9430 0
-18176 9278 9356 9428 0
-18176 9278 9357 9426 0
-18176 9278 9359 9424 0
-18176 9278 9361 9422 0
-18176 9278 9363 9420 0
-18176 9278 9365 9418 0
-18176 9278 9367 9416 0
-18176 9278 9369 9414 0
-18176 9278 9371 9412 0
-18176 9278 9373 9410 0
-18176 9278 9375 9408 0
-18176 9278 9377 9407 0
-18176 9278 9379 0
-18176 9278 9381 0
-18176 9278 9383 0
-18176 9278 9385 0
-18176 9278 9387 0
-18176 9278 9389 0
-18176 9278 9391 0
-18176 9278 9393 0
-18176 9278 9395 0
-18176 9278 9397 0
-18176 9278 9399 0
-18176 9278 9401 0
-18176 9278 9403 0
-18176 9278 9405 0
-18176 9280 9428 0
-18176 9280 9356 9426 0
-18176 9280 9357 9424 0
-18176 9280 9359 9422 0
-18176 9280 9361 9420 0
-18176 9280 9363 9418 0
-18176 9280 9365 9416 0
-18176 9280 9367 9414 0
-18176 9280 9369 9412 0
-18176 9280 9371 9410 0
-18176 9280 9373 9408 0
-18176 9280 9375 9407 0
-18176 9280 9377 0
-18176 9280 9379 0
-18176 9280 9381 0
-18176 9280 9383 0
-18176 9280 9385 0
-18176 9280 9387 0
-18176 9280 9389 0
-18176 9280 9391 0
-18176 9280 9393 0
-18176 9280 9395 0
-18176 9280 9397 0
-18176 9280 9399 0
-18176 9280 9401 0
-18176 9280 9403 0
-18176 9280 9405 0
-18176 9282 9426 0
-18176 9282 9356 9424 0
-18176 9282 9357 9422 0
-18176 9282 9359 9420 0
-18176 9282 9361 9418 0
-18176 9282 9363 9416 0
-18176 9282 9365 9414 0
-18176 9282 9367 9412 0
-18176 9282 9369 9410 0
-18176 9282 9371 9408 0
-18176 9282 9373 9407 0
-18176 9282 9375 0
-18176 9282 9377 0
-18176 9282 9379 0
-18176 9282 9381 0
-18176 9282 9383 0
-18176 9282 9385 0
-18176 9282 9387 0
-18176 9282 9389 0
-18176 9282 9391 0
-18176 9282 9393 0
-18176 9282 9395 0
-18176 9282 9397 0
-18176 9282 9399 0
-18176 9282 9401 0
-18176 9282 9403 0
-18176 9282 9405 0
-18176 9284 9424 0
-18176 9284 9356 9422 0
-18176 9284 9357 9420 0
-18176 9284 9359 9418 0
-18176 9284 9361 9416 0
-18176 9284 9363 9414 0
-18176 9284 9365 9412 0
-18176 9284 9367 9410 0
-18176 9284 9369 9408 0
-18176 9284 9371 9407 0
-18176 9284 9373 0
-18176 9284 9375 0
-18176 9284 9377 0
-18176 9284 9379 0
-18176 9284 9381 0
-18176 9284 9383 0
-18176 9284 9385 0
-18176 9284 9387 0
-18176 9284 9389 0
-18176 9284 9391 0
-18176 9284 9393 0
-18176 9284 9395 0
-18176 9284 9397 0
-18176 9284 9399 0
-18176 9284 9401 0
-18176 9284 9403 0
-18176 9284 9405 0
18176 -9373 -9407 0
18176 -9371 -9408 0
18176 -9369 -9410 0
18176 -9367 -9412 0
18176 -9365 -9414 0
18176 -9363 -9416 0
18176 -9361 -9418 0
18176 -9359 -9420 0
18176 -9357 -9422 0
18176 -9356 -9424 0
18176 -9284 -9375 -9407 0
18176 -9284 -9373 -9408 0
18176 -9284 -9371 -9410 0
18176 -9284 -9369 -9412 0
18176 -9284 -9367 -9414 0
18176 -9284 -9365 -9416 0
18176 -9284 -9363 -9418 0
18176 -9284 -9361 -9420 0
18176 -9284 -9359 -9422 0
18176 -9284 -9357 -9424 0
18176 -9284 -9356 -9426 0
18176 -9282 -9377 -9407 0
18176 -9282 -9375 -9408 0
18176 -9282 -9373 -9410 0
18176 -9282 -9371 -9412 0
18176 -9282 -9369 -9414 0
18176 -9282 -9367 -9416 0
18176 -9282 -9365 -9418 0
18176 -9282 -9363 -9420 0
18176 -9282 -9361 -9422 0
18176 -9282 -9359 -9424 0
18176 -9282 -9357 -9426 0
18176 -9282 -9356 -9428 0
18176 -9280 -9379 -9407 0
18176 -9280 -9377 -9408 0
18176 -9280 -9375 -9410 0
18176 -9280 -9373 -9412 0
18176 -9280 -9371 -9414 0
18176 -9280 -9369 -9416 0
18176 -9280 -9367 -9418 0
18176 -9280 -9365 -9420 0
18176 -9280 -9363 -9422 0
18176 -9280 -9361 -9424 0
18176 -9280 -9359 -9426 0
18176 -9280 -9357 -9428 0
18176 -9280 -9356 -9430 0
18176 -9278 -9381 -9407 0
18176 -9278 -9379 -9408 0
18176 -9278 -9377 -9410 0
18176 -9278 -9375 -9412 0
18176 -9278 -9373 -9414 0
18176 -9278 -9371 -9416 0
18176 -9278 -9369 -9418 0
18176 -9278 -9367 -9420 0
18176 -9278 -9365 -9422 0
18176 -9278 -9363 -9424 0
18176 -9278 -9361 -9426 0
18176 -9278 -9359 -9428 0
18176 -9278 -9357 -9430 0
18176 -9278 -9356 -9432 0
18176 -9276 -9383 -9407 0
18176 -9276 -9381 -9408 0
18176 -9276 -9379 -9410 0
18176 -9276 -9377 -9412 0
18176 -9276 -9375 -9414 0
18176 -9276 -9373 -9416 0
18176 -9276 -9371 -9418 0
18176 -9276 -9369 -9420 0
18176 -9276 -9367 -9422 0
18176 -9276 -9365 -9424 0
18176 -9276 -9363 -9426 0
18176 -9276 -9361 -9428 0
18176 -9276 -9359 -9430 0
18176 -9276 -9357 -9432 0
18176 -9276 -9356 -9434 0
18176 -9274 -9385 -9407 0
18176 -9274 -9383 -9408 0
18176 -9274 -9381 -9410 0
18176 -9274 -9379 -9412 0
18176 -9274 -9377 -9414 0
18176 -9274 -9375 -9416 0
18176 -9274 -9373 -9418 0
18176 -9274 -9371 -9420 0
18176 -9274 -9369 -9422 0
18176 -9274 -9367 -9424 0
18176 -9274 -9365 -9426 0
18176 -9274 -9363 -9428 0
18176 -9274 -9361 -9430 0
18176 -9274 -9359 -9432 0
18176 -9274 -9357 -9434 0
18176 -9274 -9356 -9436 0
18176 -9272 -9387 -9407 0
18176 -9272 -9385 -9408 0
18176 -9272 -9383 -9410 0
18176 -9272 -9381 -9412 0
18176 -9272 -9379 -9414 0
18176 -9272 -9377 -9416 0
18176 -9272 -9375 -9418 0
18176 -9272 -9373 -9420 0
18176 -9272 -9371 -9422 0
18176 -9272 -9369 -9424 0
18176 -9272 -9367 -9426 0
18176 -9272 -9365 -9428 0
18176 -9272 -9363 -9430 0
18176 -9272 -9361 -9432 0
18176 -9272 -9359 -9434 0
18176 -9272 -9357 -9436 0
18176 -9272 -9356 -9438 0
18176 -9270 -9389 -9407 0
18176 -9270 -9387 -9408 0
18176 -9270 -9385 -9410 0
18176 -9270 -9383 -9412 0
18176 -9270 -9381 -9414 0
18176 -9270 -9379 -9416 0
18176 -9270 -9377 -9418 0
18176 -9270 -9375 -9420 0
18176 -9270 -9373 -9422 0
18176 -9270 -9371 -9424 0
18176 -9270 -9369 -9426 0
18176 -9270 -9367 -9428 0
18176 -9270 -9365 -9430 0
18176 -9270 -9363 -9432 0
18176 -9270 -9361 -9434 0
18176 -9270 -9359 -9436 0
18176 -9270 -9357 -9438 0
18176 -9270 -9356 -9440 0
18176 -9268 -9391 -9407 0
18176 -9268 -9389 -9408 0
18176 -9268 -9387 -9410 0
18176 -9268 -9385 -9412 0
18176 -9268 -9383 -9414 0
18176 -9268 -9381 -9416 0
18176 -9268 -9379 -9418 0
18176 -9268 -9377 -9420 0
18176 -9268 -9375 -9422 0
18176 -9268 -9373 -9424 0
18176 -9268 -9371 -9426 0
18176 -9268 -9369 -9428 0
18176 -9268 -9367 -9430 0
18176 -9268 -9365 -9432 0
18176 -9268 -9363 -9434 0
18176 -9268 -9361 -9436 0
18176 -9268 -9359 -9438 0
18176 -9268 -9357 -9440 0
18176 -9268 -9356 -9442 0
18176 -9266 -9393 -9407 0
18176 -9266 -9391 -9408 0
18176 -9266 -9389 -9410 0
18176 -9266 -9387 -9412 0
18176 -9266 -9385 -9414 0
18176 -9266 -9383 -9416 0
18176 -9266 -9381 -9418 0
18176 -9266 -9379 -9420 0
18176 -9266 -9377 -9422 0
18176 -9266 -9375 -9424 0
18176 -9266 -9373 -9426 0
18176 -9266 -9371 -9428 0
18176 -9266 -9369 -9430 0
18176 -9266 -9367 -9432 0
18176 -9266 -9365 -9434 0
18176 -9266 -9363 -9436 0
18176 -9266 -9361 -9438 0
18176 -9266 -9359 -9440 0
18176 -9266 -9357 -9442 0
18176 -9266 -9356 -9444 0
18176 -9264 -9395 -9407 0
18176 -9264 -9393 -9408 0
18176 -9264 -9391 -9410 0
18176 -9264 -9389 -9412 0
18176 -9264 -9387 -9414 0
18176 -9264 -9385 -9416 0
18176 -9264 -9383 -9418 0
18176 -9264 -9381 -9420 0
18176 -9264 -9379 -9422 0
18176 -9264 -9377 -9424 0
18176 -9264 -9375 -9426 0
18176 -9264 -9373 -9428 0
18176 -9264 -9371 -9430 0
18176 -9264 -9369 -9432 0
18176 -9264 -9367 -9434 0
18176 -9264 -9365 -9436 0
18176 -9264 -9363 -9438 0
18176 -9264 -9361 -9440 0
18176 -9264 -9359 -9442 0
18176 -9264 -9357 -9444 0
18176 -9264 -9356 -9446 0
18176 -9262 -9397 -9407 0
18176 -9262 -9395 -9408 0
18176 -9262 -9393 -9410 0
18176 -9262 -9391 -9412 0
18176 -9262 -9389 -9414 0
18176 -9262 -9387 -9416 0
18176 -9262 -9385 -9418 0
18176 -9262 -9383 -9420 0
18176 -9262 -9381 -9422 0
18176 -9262 -9379 -9424 0
18176 -9262 -9377 -9426 0
18176 -9262 -9375 -9428 0
18176 -9262 -9373 -9430 0
18176 -9262 -9371 -9432 0
18176 -9262 -9369 -9434 0
18176 -9262 -9367 -9436 0
18176 -9262 -9365 -9438 0
18176 -9262 -9363 -9440 0
18176 -9262 -9361 -9442 0
18176 -9262 -9359 -9444 0
18176 -9262 -9357 -9446 0
18176 -9262 -9356 -9448 0
18176 -9260 -9399 -9407 0
18176 -9260 -9397 -9408 0
18176 -9260 -9395 -9410 0
18176 -9260 -9393 -9412 0
18176 -9260 -9391 -9414 0
18176 -9260 -9389 -9416 0
18176 -9260 -9387 -9418 0
18176 -9260 -9385 -9420 0
18176 -9260 -9383 -9422 0
18176 -9260 -9381 -9424 0
18176 -9260 -9379 -9426 0
18176 -9260 -9377 -9428 0
18176 -9260 -9375 -9430 0
18176 -9260 -9373 -9432 0
18176 -9260 -9371 -9434 0
18176 -9260 -9369 -9436 0
18176 -9260 -9367 -9438 0
18176 -9260 -9365 -9440 0
18176 -9260 -9363 -9442 0
18176 -9260 -9361 -9444 0
18176 -9260 -9359 -9446 0
18176 -9260 -9357 -9448 0
18176 -9260 -9356 -9450 0
18176 -9258 -9401 -9407 0
18176 -9258 -9399 -9408 0
18176 -9258 -9397 -9410 0
18176 -9258 -9395 -9412 0
18176 -9258 -9393 -9414 0
18176 -9258 -9391 -9416 0
18176 -9258 -9389 -9418 0
18176 -9258 -9387 -9420 0
18176 -9258 -9385 -9422 0
18176 -9258 -9383 -9424 0
18176 -9258 -9381 -9426 0
18176 -9258 -9379 -9428 0
18176 -9258 -9377 -9430 0
18176 -9258 -9375 -9432 0
18176 -9258 -9373 -9434 0
18176 -9258 -9371 -9436 0
18176 -9258 -9369 -9438 0
18176 -9258 -9367 -9440 0
18176 -9258 -9365 -9442 0
18176 -9258 -9363 -9444 0
18176 -9258 -9361 -9446 0
18176 -9258 -9359 -9448 0
18176 -9258 -9357 -9450 0
18176 -9258 -9356 -9452 0
18176 -9256 -9403 -9407 0
18176 -9256 -9401 -9408 0
18176 -9256 -9399 -9410 0
18176 -9256 -9397 -9412 0
18176 -9256 -9395 -9414 0
18176 -9256 -9393 -9416 0
18176 -9256 -9391 -9418 0
18176 -9256 -9389 -9420 0
18176 -9256 -9387 -9422 0
18176 -9256 -9385 -9424 0
18176 -9256 -9383 -9426 0
18176 -9256 -9381 -9428 0
18176 -9256 -9379 -9430 0
18176 -9256 -9377 -9432 0
18176 -9256 -9375 -9434 0
18176 -9256 -9373 -9436 0
18176 -9256 -9371 -9438 0
18176 -9256 -9369 -9440 0
18176 -9256 -9367 -9442 0
18176 -9256 -9365 -9444 0
18176 -9256 -9363 -9446 0
18176 -9256 -9361 -9448 0
18176 -9256 -9359 -9450 0
18176 -9256 -9357 -9452 0
18176 -9256 -9356 -9454 0
18176 -9254 -9405 -9407 0
18176 -9254 -9403 -9408 0
18176 -9254 -9401 -9410 0
18176 -9254 -9399 -9412 0
18176 -9254 -9397 -9414 0
18176 -9254 -9395 -9416 0
18176 -9254 -9393 -9418 0
18176 -9254 -9391 -9420 0
18176 -9254 -9389 -9422 0
18176 -9254 -9387 -9424 0
18176 -9254 -9385 -9426 0
18176 -9254 -9383 -9428 0
18176 -9254 -9381 -9430 0
18176 -9254 -9379 -9432 0
18176 -9254 -9377 -9434 0
18176 -9254 -9375 -9436 0
18176 -9254 -9373 -9438 0
18176 -9254 -9371 -9440 0
18176 -9254 -9369 -9442 0
18176 -9254 -9367 -9444 0
18176 -9254 -9365 -9446 0
18176 -9254 -9363 -9448 0
18176 -9254 -9361 -9450 0
18176 -9254 -9359 -9452 0
18176 -9254 -9357 -9454 0
18176 -9254 -9356 -9456 0
18176 -9252 -9407 0
18176 -9252 -9405 -9408 0
18176 -9252 -9403 -9410 0
18176 -9252 -9401 -9412 0
18176 -9252 -9399 -9414 0
18176 -9252 -9397 -9416 0
18176 -9252 -9395 -9418 0
18176 -9252 -9393 -9420 0
18176 -9252 -9391 -9422 0
18176 -9252 -9389 -9424 0
18176 -9252 -9387 -9426 0
18176 -9252 -9385 -9428 0
18176 -9252 -9383 -9430 0
18176 -9252 -9381 -9432 0
18176 -9252 -9379 -9434 0
18176 -9252 -9377 -9436 0
18176 -9252 -9375 -9438 0
18176 -9252 -9373 -9440 0
18176 -9252 -9371 -9442 0
18176 -9252 -9369 -9444 0
18176 -9252 -9367 -9446 0
18176 -9252 -9365 -9448 0
18176 -9252 -9363 -9450 0
18176 -9252 -9361 -9452 0
18176 -9252 -9359 -9454 0
18176 -9252 -9357 -9456 0
18176 -9252 -9356 -9458 0
18176 -9251 -9408 0
18176 -9251 -9405 -9410 0
18176 -9251 -9403 -9412 0
18176 -9251 -9401 -9414 0
18176 -9251 -9399 -9416 0
18176 -9251 -9397 -9418 0
18176 -9251 -9395 -9420 0
18176 -9251 -9393 -9422 0
18176 -9251 -9391 -9424 0
18176 -9251 -9389 -9426 0
18176 -9251 -9387 -9428 0
18176 -9251 -9385 -9430 0
18176 -9251 -9383 -9432 0
18176 -9251 -9381 -9434 0
18176 -9251 -9379 -9436 0
18176 -9251 -9377 -9438 0
18176 -9251 -9375 -9440 0
18176 -9251 -9373 -9442 0
18176 -9251 -9371 -9444 0
18176 -9251 -9369 -9446 0
18176 -9251 -9367 -9448 0
18176 -9251 -9365 -9450 0
18176 -9251 -9363 -9452 0
18176 -9251 -9361 -9454 0
18176 -9251 -9359 -9456 0
18176 -9251 -9357 -9458 0
18176 -9251 -9356 -9460 0
c ((27<=(aux397 + aux400 + aux401))=tv=SATLiteral(18177))
-18177 -9371 -9407 0
-18177 -9369 -9408 0
-18177 -9367 -9410 0
-18177 -9365 -9412 0
-18177 -9363 -9414 0
-18177 -9361 -9416 0
-18177 -9359 -9418 0
-18177 -9357 -9420 0
-18177 -9356 -9422 0
-18177 -9284 -9373 -9407 0
-18177 -9284 -9371 -9408 0
-18177 -9284 -9369 -9410 0
-18177 -9284 -9367 -9412 0
-18177 -9284 -9365 -9414 0
-18177 -9284 -9363 -9416 0
-18177 -9284 -9361 -9418 0
-18177 -9284 -9359 -9420 0
-18177 -9284 -9357 -9422 0
-18177 -9284 -9356 -9424 0
-18177 -9282 -9375 -9407 0
-18177 -9282 -9373 -9408 0
-18177 -9282 -9371 -9410 0
-18177 -9282 -9369 -9412 0
-18177 -9282 -9367 -9414 0
-18177 -9282 -9365 -9416 0
-18177 -9282 -9363 -9418 0
-18177 -9282 -9361 -9420 0
-18177 -9282 -9359 -9422 0
-18177 -9282 -9357 -9424 0
-18177 -9282 -9356 -9426 0
-18177 -9280 -9377 -9407 0
-18177 -9280 -9375 -9408 0
-18177 -9280 -9373 -9410 0
-18177 -9280 -9371 -9412 0
-18177 -9280 -9369 -9414 0
-18177 -9280 -9367 -9416 0
-18177 -9280 -9365 -9418 0
-18177 -9280 -9363 -9420 0
-18177 -9280 -9361 -9422 0
-18177 -9280 -9359 -9424 0
-18177 -9280 -9357 -9426 0
-18177 -9280 -9356 -9428 0
-18177 -9278 -9379 -9407 0
-18177 -9278 -9377 -9408 0
-18177 -9278 -9375 -9410 0
-18177 -9278 -9373 -9412 0
-18177 -9278 -9371 -9414 0
-18177 -9278 -9369 -9416 0
-18177 -9278 -9367 -9418 0
-18177 -9278 -9365 -9420 0
-18177 -9278 -9363 -9422 0
-18177 -9278 -9361 -9424 0
-18177 -9278 -9359 -9426 0
-18177 -9278 -9357 -9428 0
-18177 -9278 -9356 -9430 0
-18177 -9276 -9381 -9407 0
-18177 -9276 -9379 -9408 0
-18177 -9276 -9377 -9410 0
-18177 -9276 -9375 -9412 0
-18177 -9276 -9373 -9414 0
-18177 -9276 -9371 -9416 0
-18177 -9276 -9369 -9418 0
-18177 -9276 -9367 -9420 0
-18177 -9276 -9365 -9422 0
-18177 -9276 -9363 -9424 0
-18177 -9276 -9361 -9426 0
-18177 -9276 -9359 -9428 0
-18177 -9276 -9357 -9430 0
-18177 -9276 -9356 -9432 0
-18177 -9274 -9383 -9407 0
-18177 -9274 -9381 -9408 0
-18177 -9274 -9379 -9410 0
-18177 -9274 -9377 -9412 0
-18177 -9274 -9375 -9414 0
-18177 -9274 -9373 -9416 0
-18177 -9274 -9371 -9418 0
-18177 -9274 -9369 -9420 0
-18177 -9274 -9367 -9422 0
-18177 -9274 -9365 -9424 0
-18177 -9274 -9363 -9426 0
-18177 -9274 -9361 -9428 0
-18177 -9274 -9359 -9430 0
-18177 -9274 -9357 -9432 0
-18177 -9274 -9356 -9434 0
-18177 -9272 -9385 -9407 0
-18177 -9272 -9383 -9408 0
-18177 -9272 -9381 -9410 0
-18177 -9272 -9379 -9412 0
-18177 -9272 -9377 -9414 0
-18177 -9272 -9375 -9416 0
-18177 -9272 -9373 -9418 0
-18177 -9272 -9371 -9420 0
-18177 -9272 -9369 -9422 0
-18177 -9272 -9367 -9424 0
-18177 -9272 -9365 -9426 0
-18177 -9272 -9363 -9428 0
-18177 -9272 -9361 -9430 0
-18177 -9272 -9359 -9432 0
-18177 -9272 -9357 -9434 0
-18177 -9272 -9356 -9436 0
-18177 -9270 -9387 -9407 0
-18177 -9270 -9385 -9408 0
-18177 -9270 -9383 -9410 0
-18177 -9270 -9381 -9412 0
-18177 -9270 -9379 -9414 0
-18177 -9270 -9377 -9416 0
-18177 -9270 -9375 -9418 0
-18177 -9270 -9373 -9420 0
-18177 -9270 -9371 -9422 0
-18177 -9270 -9369 -9424 0
-18177 -9270 -9367 -9426 0
-18177 -9270 -9365 -9428 0
-18177 -9270 -9363 -9430 0
-18177 -9270 -9361 -9432 0
-18177 -9270 -9359 -9434 0
-18177 -9270 -9357 -9436 0
-18177 -9270 -9356 -9438 0
-18177 -9268 -9389 -9407 0
-18177 -9268 -9387 -9408 0
-18177 -9268 -9385 -9410 0
-18177 -9268 -9383 -9412 0
-18177 -9268 -9381 -9414 0
-18177 -9268 -9379 -9416 0
-18177 -9268 -9377 -9418 0
-18177 -9268 -9375 -9420 0
-18177 -9268 -9373 -9422 0
-18177 -9268 -9371 -9424 0
-18177 -9268 -9369 -9426 0
-18177 -9268 -9367 -9428 0
-18177 -9268 -9365 -9430 0
-18177 -9268 -9363 -9432 0
-18177 -9268 -9361 -9434 0
-18177 -9268 -9359 -9436 0
-18177 -9268 -9357 -9438 0
-18177 -9268 -9356 -9440 0
-18177 -9266 -9391 -9407 0
-18177 -9266 -9389 -9408 0
-18177 -9266 -9387 -9410 0
-18177 -9266 -9385 -9412 0
-18177 -9266 -9383 -9414 0
-18177 -9266 -9381 -9416 0
-18177 -9266 -9379 -9418 0
-18177 -9266 -9377 -9420 0
-18177 -9266 -9375 -9422 0
-18177 -9266 -9373 -9424 0
-18177 -9266 -9371 -9426 0
-18177 -9266 -9369 -9428 0
-18177 -9266 -9367 -9430 0
-18177 -9266 -9365 -9432 0
-18177 -9266 -9363 -9434 0
-18177 -9266 -9361 -9436 0
-18177 -9266 -9359 -9438 0
-18177 -9266 -9357 -9440 0
-18177 -9266 -9356 -9442 0
-18177 -9264 -9393 -9407 0
-18177 -9264 -9391 -9408 0
-18177 -9264 -9389 -9410 0
-18177 -9264 -9387 -9412 0
-18177 -9264 -9385 -9414 0
-18177 -9264 -9383 -9416 0
-18177 -9264 -9381 -9418 0
-18177 -9264 -9379 -9420 0
-18177 -9264 -9377 -9422 0
-18177 -9264 -9375 -9424 0
-18177 -9264 -9373 -9426 0
-18177 -9264 -9371 -9428 0
-18177 -9264 -9369 -9430 0
-18177 -9264 -9367 -9432 0
-18177 -9264 -9365 -9434 0
-18177 -9264 -9363 -9436 0
-18177 -9264 -9361 -9438 0
-18177 -9264 -9359 -9440 0
-18177 -9264 -9357 -9442 0
-18177 -9264 -9356 -9444 0
-18177 -9262 -9395 -9407 0
-18177 -9262 -9393 -9408 0
-18177 -9262 -9391 -9410 0
-18177 -9262 -9389 -9412 0
-18177 -9262 -9387 -9414 0
-18177 -9262 -9385 -9416 0
-18177 -9262 -9383 -9418 0
-18177 -9262 -9381 -9420 0
-18177 -9262 -9379 -9422 0
-18177 -9262 -9377 -9424 0
-18177 -9262 -9375 -9426 0
-18177 -9262 -9373 -9428 0
-18177 -9262 -9371 -9430 0
-18177 -9262 -9369 -9432 0
-18177 -9262 -9367 -9434 0
-18177 -9262 -9365 -9436 0
-18177 -9262 -9363 -9438 0
-18177 -9262 -9361 -9440 0
-18177 -9262 -9359 -9442 0
-18177 -9262 -9357 -9444 0
-18177 -9262 -9356 -9446 0
-18177 -9260 -9397 -9407 0
-18177 -9260 -9395 -9408 0
-18177 -9260 -9393 -9410 0
-18177 -9260 -9391 -9412 0
-18177 -9260 -9389 -9414 0
-18177 -9260 -9387 -9416 0
-18177 -9260 -9385 -9418 0
-18177 -9260 -9383 -9420 0
-18177 -9260 -9381 -9422 0
-18177 -9260 -9379 -9424 0
-18177 -9260 -9377 -9426 0
-18177 -9260 -9375 -9428 0
-18177 -9260 -9373 -9430 0
-18177 -9260 -9371 -9432 0
-18177 -9260 -9369 -9434 0
-18177 -9260 -9367 -9436 0
-18177 -9260 -9365 -9438 0
-18177 -9260 -9363 -9440 0
-18177 -9260 -9361 -9442 0
-18177 -9260 -9359 -9444 0
-18177 -9260 -9357 -9446 0
-18177 -9260 -9356 -9448 0
-18177 -9258 -9399 -9407 0
-18177 -9258 -9397 -9408 0
-18177 -9258 -9395 -9410 0
-18177 -9258 -9393 -9412 0
-18177 -9258 -9391 -9414 0
-18177 -9258 -9389 -9416 0
-18177 -9258 -9387 -9418 0
-18177 -9258 -9385 -9420 0
-18177 -9258 -9383 -9422 0
-18177 -9258 -9381 -9424 0
-18177 -9258 -9379 -9426 0
-18177 -9258 -9377 -9428 0
-18177 -9258 -9375 -9430 0
-18177 -9258 -9373 -9432 0
-18177 -9258 -9371 -9434 0
-18177 -9258 -9369 -9436 0
-18177 -9258 -9367 -9438 0
-18177 -9258 -9365 -9440 0
-18177 -9258 -9363 -9442 0
-18177 -9258 -9361 -9444 0
-18177 -9258 -9359 -9446 0
-18177 -9258 -9357 -9448 0
-18177 -9258 -9356 -9450 0
-18177 -9256 -9401 -9407 0
-18177 -9256 -9399 -9408 0
-18177 -9256 -9397 -9410 0
-18177 -9256 -9395 -9412 0
-18177 -9256 -9393 -9414 0
-18177 -9256 -9391 -9416 0
-18177 -9256 -9389 -9418 0
-18177 -9256 -9387 -9420 0
-18177 -9256 -9385 -9422 0
-18177 -9256 -9383 -9424 0
-18177 -9256 -9381 -9426 0
-18177 -9256 -9379 -9428 0
-18177 -9256 -9377 -9430 0
-18177 -9256 -9375 -9432 0
-18177 -9256 -9373 -9434 0
-18177 -9256 -9371 -9436 0
-18177 -9256 -9369 -9438 0
-18177 -9256 -9367 -9440 0
-18177 -9256 -9365 -9442 0
-18177 -9256 -9363 -9444 0
-18177 -9256 -9361 -9446 0
-18177 -9256 -9359 -9448 0
-18177 -9256 -9357 -9450 0
-18177 -9256 -9356 -9452 0
-18177 -9254 -9403 -9407 0
-18177 -9254 -9401 -9408 0
-18177 -9254 -9399 -9410 0
-18177 -9254 -9397 -9412 0
-18177 -9254 -9395 -9414 0
-18177 -9254 -9393 -9416 0
-18177 -9254 -9391 -9418 0
-18177 -9254 -9389 -9420 0
-18177 -9254 -9387 -9422 0
-18177 -9254 -9385 -9424 0
-18177 -9254 -9383 -9426 0
-18177 -9254 -9381 -9428 0
-18177 -9254 -9379 -9430 0
-18177 -9254 -9377 -9432 0
-18177 -9254 -9375 -9434 0
-18177 -9254 -9373 -9436 0
-18177 -9254 -9371 -9438 0
-18177 -9254 -9369 -9440 0
-18177 -9254 -9367 -9442 0
-18177 -9254 -9365 -9444 0
-18177 -9254 -9363 -9446 0
-18177 -9254 -9361 -9448 0
-18177 -9254 -9359 -9450 0
-18177 -9254 -9357 -9452 0
-18177 -9254 -9356 -9454 0
-18177 -9252 -9405 -9407 0
-18177 -9252 -9403 -9408 0
-18177 -9252 -9401 -9410 0
-18177 -9252 -9399 -9412 0
-18177 -9252 -9397 -9414 0
-18177 -9252 -9395 -9416 0
-18177 -9252 -9393 -9418 0
-18177 -9252 -9391 -9420 0
-18177 -9252 -9389 -9422 0
-18177 -9252 -9387 -9424 0
-18177 -9252 -9385 -9426 0
-18177 -9252 -9383 -9428 0
-18177 -9252 -9381 -9430 0
-18177 -9252 -9379 -9432 0
-18177 -9252 -9377 -9434 0
-18177 -9252 -9375 -9436 0
-18177 -9252 -9373 -9438 0
-18177 -9252 -9371 -9440 0
-18177 -9252 -9369 -9442 0
-18177 -9252 -9367 -9444 0
-18177 -9252 -9365 -9446 0
-18177 -9252 -9363 -9448 0
-18177 -9252 -9361 -9450 0
-18177 -9252 -9359 -9452 0
-18177 -9252 -9357 -9454 0
-18177 -9252 -9356 -9456 0
-18177 -9251 -9407 0
-18177 -9251 -9405 -9408 0
-18177 -9251 -9403 -9410 0
-18177 -9251 -9401 -9412 0
-18177 -9251 -9399 -9414 0
-18177 -9251 -9397 -9416 0
-18177 -9251 -9395 -9418 0
-18177 -9251 -9393 -9420 0
-18177 -9251 -9391 -9422 0
-18177 -9251 -9389 -9424 0
-18177 -9251 -9387 -9426 0
-18177 -9251 -9385 -9428 0
-18177 -9251 -9383 -9430 0
-18177 -9251 -9381 -9432 0
-18177 -9251 -9379 -9434 0
-18177 -9251 -9377 -9436 0
-18177 -9251 -9375 -9438 0
-18177 -9251 -9373 -9440 0
-18177 -9251 -9371 -9442 0
-18177 -9251 -9369 -9444 0
-18177 -9251 -9367 -9446 0
-18177 -9251 -9365 -9448 0
-18177 -9251 -9363 -9450 0
-18177 -9251 -9361 -9452 0
-18177 -9251 -9359 -9454 0
-18177 -9251 -9357 -9456 0
-18177 -9251 -9356 -9458 0
18177 9458 0
18177 9356 9456 0
18177 9357 9454 0
18177 9359 9452 0
18177 9361 9450 0
18177 9363 9448 0
18177 9365 9446 0
18177 9367 9444 0
18177 9369 9442 0
18177 9371 9440 0
18177 9373 9438 0
18177 9375 9436 0
18177 9377 9434 0
18177 9379 9432 0
18177 9381 9430 0
18177 9383 9428 0
18177 9385 9426 0
18177 9387 9424 0
18177 9389 9422 0
18177 9391 9420 0
18177 9393 9418 0
18177 9395 9416 0
18177 9397 9414 0
18177 9399 9412 0
18177 9401 9410 0
18177 9403 9408 0
18177 9405 9407 0
18177 9251 9456 0
18177 9251 9356 9454 0
18177 9251 9357 9452 0
18177 9251 9359 9450 0
18177 9251 9361 9448 0
18177 9251 9363 9446 0
18177 9251 9365 9444 0
18177 9251 9367 9442 0
18177 9251 9369 9440 0
18177 9251 9371 9438 0
18177 9251 9373 9436 0
18177 9251 9375 9434 0
18177 9251 9377 9432 0
18177 9251 9379 9430 0
18177 9251 9381 9428 0
18177 9251 9383 9426 0
18177 9251 9385 9424 0
18177 9251 9387 9422 0
18177 9251 9389 9420 0
18177 9251 9391 9418 0
18177 9251 9393 9416 0
18177 9251 9395 9414 0
18177 9251 9397 9412 0
18177 9251 9399 9410 0
18177 9251 9401 9408 0
18177 9251 9403 9407 0
18177 9251 9405 0
18177 9252 9454 0
18177 9252 9356 9452 0
18177 9252 9357 9450 0
18177 9252 9359 9448 0
18177 9252 9361 9446 0
18177 9252 9363 9444 0
18177 9252 9365 9442 0
18177 9252 9367 9440 0
18177 9252 9369 9438 0
18177 9252 9371 9436 0
18177 9252 9373 9434 0
18177 9252 9375 9432 0
18177 9252 9377 9430 0
18177 9252 9379 9428 0
18177 9252 9381 9426 0
18177 9252 9383 9424 0
18177 9252 9385 9422 0
18177 9252 9387 9420 0
18177 9252 9389 9418 0
18177 9252 9391 9416 0
18177 9252 9393 9414 0
18177 9252 9395 9412 0
18177 9252 9397 9410 0
18177 9252 9399 9408 0
18177 9252 9401 9407 0
18177 9252 9403 0
18177 9252 9405 0
18177 9254 9452 0
18177 9254 9356 9450 0
18177 9254 9357 9448 0
18177 9254 9359 9446 0
18177 9254 9361 9444 0
18177 9254 9363 9442 0
18177 9254 9365 9440 0
18177 9254 9367 9438 0
18177 9254 9369 9436 0
18177 9254 9371 9434 0
18177 9254 9373 9432 0
18177 9254 9375 9430 0
18177 9254 9377 9428 0
18177 9254 9379 9426 0
18177 9254 9381 9424 0
18177 9254 9383 9422 0
18177 9254 9385 9420 0
18177 9254 9387 9418 0
18177 9254 9389 9416 0
18177 9254 9391 9414 0
18177 9254 9393 9412 0
18177 9254 9395 9410 0
18177 9254 9397 9408 0
18177 9254 9399 9407 0
18177 9254 9401 0
18177 9254 9403 0
18177 9254 9405 0
18177 9256 9450 0
18177 9256 9356 9448 0
18177 9256 9357 9446 0
18177 9256 9359 9444 0
18177 9256 9361 9442 0
18177 9256 9363 9440 0
18177 9256 9365 9438 0
18177 9256 9367 9436 0
18177 9256 9369 9434 0
18177 9256 9371 9432 0
18177 9256 9373 9430 0
18177 9256 9375 9428 0
18177 9256 9377 9426 0
18177 9256 9379 9424 0
18177 9256 9381 9422 0
18177 9256 9383 9420 0
18177 9256 9385 9418 0
18177 9256 9387 9416 0
18177 9256 9389 9414 0
18177 9256 9391 9412 0
18177 9256 9393 9410 0
18177 9256 9395 9408 0
18177 9256 9397 9407 0
18177 9256 9399 0
18177 9256 9401 0
18177 9256 9403 0
18177 9256 9405 0
18177 9258 9448 0
18177 9258 9356 9446 0
18177 9258 9357 9444 0
18177 9258 9359 9442 0
18177 9258 9361 9440 0
18177 9258 9363 9438 0
18177 9258 9365 9436 0
18177 9258 9367 9434 0
18177 9258 9369 9432 0
18177 9258 9371 9430 0
18177 9258 9373 9428 0
18177 9258 9375 9426 0
18177 9258 9377 9424 0
18177 9258 9379 9422 0
18177 9258 9381 9420 0
18177 9258 9383 9418 0
18177 9258 9385 9416 0
18177 9258 9387 9414 0
18177 9258 9389 9412 0
18177 9258 9391 9410 0
18177 9258 9393 9408 0
18177 9258 9395 9407 0
18177 9258 9397 0
18177 9258 9399 0
18177 9258 9401 0
18177 9258 9403 0
18177 9258 9405 0
18177 9260 9446 0
18177 9260 9356 9444 0
18177 9260 9357 9442 0
18177 9260 9359 9440 0
18177 9260 9361 9438 0
18177 9260 9363 9436 0
18177 9260 9365 9434 0
18177 9260 9367 9432 0
18177 9260 9369 9430 0
18177 9260 9371 9428 0
18177 9260 9373 9426 0
18177 9260 9375 9424 0
18177 9260 9377 9422 0
18177 9260 9379 9420 0
18177 9260 9381 9418 0
18177 9260 9383 9416 0
18177 9260 9385 9414 0
18177 9260 9387 9412 0
18177 9260 9389 9410 0
18177 9260 9391 9408 0
18177 9260 9393 9407 0
18177 9260 9395 0
18177 9260 9397 0
18177 9260 9399 0
18177 9260 9401 0
18177 9260 9403 0
18177 9260 9405 0
18177 9262 9444 0
18177 9262 9356 9442 0
18177 9262 9357 9440 0
18177 9262 9359 9438 0
18177 9262 9361 9436 0
18177 9262 9363 9434 0
18177 9262 9365 9432 0
18177 9262 9367 9430 0
18177 9262 9369 9428 0
18177 9262 9371 9426 0
18177 9262 9373 9424 0
18177 9262 9375 9422 0
18177 9262 9377 9420 0
18177 9262 9379 9418 0
18177 9262 9381 9416 0
18177 9262 9383 9414 0
18177 9262 9385 9412 0
18177 9262 9387 9410 0
18177 9262 9389 9408 0
18177 9262 9391 9407 0
18177 9262 9393 0
18177 9262 9395 0
18177 9262 9397 0
18177 9262 9399 0
18177 9262 9401 0
18177 9262 9403 0
18177 9262 9405 0
18177 9264 9442 0
18177 9264 9356 9440 0
18177 9264 9357 9438 0
18177 9264 9359 9436 0
18177 9264 9361 9434 0
18177 9264 9363 9432 0
18177 9264 9365 9430 0
18177 9264 9367 9428 0
18177 9264 9369 9426 0
18177 9264 9371 9424 0
18177 9264 9373 9422 0
18177 9264 9375 9420 0
18177 9264 9377 9418 0
18177 9264 9379 9416 0
18177 9264 9381 9414 0
18177 9264 9383 9412 0
18177 9264 9385 9410 0
18177 9264 9387 9408 0
18177 9264 9389 9407 0
18177 9264 9391 0
18177 9264 9393 0
18177 9264 9395 0
18177 9264 9397 0
18177 9264 9399 0
18177 9264 9401 0
18177 9264 9403 0
18177 9264 9405 0
18177 9266 9440 0
18177 9266 9356 9438 0
18177 9266 9357 9436 0
18177 9266 9359 9434 0
18177 9266 9361 9432 0
18177 9266 9363 9430 0
18177 9266 9365 9428 0
18177 9266 9367 9426 0
18177 9266 9369 9424 0
18177 9266 9371 9422 0
18177 9266 9373 9420 0
18177 9266 9375 9418 0
18177 9266 9377 9416 0
18177 9266 9379 9414 0
18177 9266 9381 9412 0
18177 9266 9383 9410 0
18177 9266 9385 9408 0
18177 9266 9387 9407 0
18177 9266 9389 0
18177 9266 9391 0
18177 9266 9393 0
18177 9266 9395 0
18177 9266 9397 0
18177 9266 9399 0
18177 9266 9401 0
18177 9266 9403 0
18177 9266 9405 0
18177 9268 9438 0
18177 9268 9356 9436 0
18177 9268 9357 9434 0
18177 9268 9359 9432 0
18177 9268 9361 9430 0
18177 9268 9363 9428 0
18177 9268 9365 9426 0
18177 9268 9367 9424 0
18177 9268 9369 9422 0
18177 9268 9371 9420 0
18177 9268 9373 9418 0
18177 9268 9375 9416 0
18177 9268 9377 9414 0
18177 9268 9379 9412 0
18177 9268 9381 9410 0
18177 9268 9383 9408 0
18177 9268 9385 9407 0
18177 9268 9387 0
18177 9268 9389 0
18177 9268 9391 0
18177 9268 9393 0
18177 9268 9395 0
18177 9268 9397 0
18177 9268 9399 0
18177 9268 9401 0
18177 9268 9403 0
18177 9268 9405 0
18177 9270 9436 0
18177 9270 9356 9434 0
18177 9270 9357 9432 0
18177 9270 9359 9430 0
18177 9270 9361 9428 0
18177 9270 9363 9426 0
18177 9270 9365 9424 0
18177 9270 9367 9422 0
18177 9270 9369 9420 0
18177 9270 9371 9418 0
18177 9270 9373 9416 0
18177 9270 9375 9414 0
18177 9270 9377 9412 0
18177 9270 9379 9410 0
18177 9270 9381 9408 0
18177 9270 9383 9407 0
18177 9270 9385 0
18177 9270 9387 0
18177 9270 9389 0
18177 9270 9391 0
18177 9270 9393 0
18177 9270 9395 0
18177 9270 9397 0
18177 9270 9399 0
18177 9270 9401 0
18177 9270 9403 0
18177 9270 9405 0
18177 9272 9434 0
18177 9272 9356 9432 0
18177 9272 9357 9430 0
18177 9272 9359 9428 0
18177 9272 9361 9426 0
18177 9272 9363 9424 0
18177 9272 9365 9422 0
18177 9272 9367 9420 0
18177 9272 9369 9418 0
18177 9272 9371 9416 0
18177 9272 9373 9414 0
18177 9272 9375 9412 0
18177 9272 9377 9410 0
18177 9272 9379 9408 0
18177 9272 9381 9407 0
18177 9272 9383 0
18177 9272 9385 0
18177 9272 9387 0
18177 9272 9389 0
18177 9272 9391 0
18177 9272 9393 0
18177 9272 9395 0
18177 9272 9397 0
18177 9272 9399 0
18177 9272 9401 0
18177 9272 9403 0
18177 9272 9405 0
18177 9274 9432 0
18177 9274 9356 9430 0
18177 9274 9357 9428 0
18177 9274 9359 9426 0
18177 9274 9361 9424 0
18177 9274 9363 9422 0
18177 9274 9365 9420 0
18177 9274 9367 9418 0
18177 9274 9369 9416 0
18177 9274 9371 9414 0
18177 9274 9373 9412 0
18177 9274 9375 9410 0
18177 9274 9377 9408 0
18177 9274 9379 9407 0
18177 9274 9381 0
18177 9274 9383 0
18177 9274 9385 0
18177 9274 9387 0
18177 9274 9389 0
18177 9274 9391 0
18177 9274 9393 0
18177 9274 9395 0
18177 9274 9397 0
18177 9274 9399 0
18177 9274 9401 0
18177 9274 9403 0
18177 9274 9405 0
18177 9276 9430 0
18177 9276 9356 9428 0
18177 9276 9357 9426 0
18177 9276 9359 9424 0
18177 9276 9361 9422 0
18177 9276 9363 9420 0
18177 9276 9365 9418 0
18177 9276 9367 9416 0
18177 9276 9369 9414 0
18177 9276 9371 9412 0
18177 9276 9373 9410 0
18177 9276 9375 9408 0
18177 9276 9377 9407 0
18177 9276 9379 0
18177 9276 9381 0
18177 9276 9383 0
18177 9276 9385 0
18177 9276 9387 0
18177 9276 9389 0
18177 9276 9391 0
18177 9276 9393 0
18177 9276 9395 0
18177 9276 9397 0
18177 9276 9399 0
18177 9276 9401 0
18177 9276 9403 0
18177 9276 9405 0
18177 9278 9428 0
18177 9278 9356 9426 0
18177 9278 9357 9424 0
18177 9278 9359 9422 0
18177 9278 9361 9420 0
18177 9278 9363 9418 0
18177 9278 9365 9416 0
18177 9278 9367 9414 0
18177 9278 9369 9412 0
18177 9278 9371 9410 0
18177 9278 9373 9408 0
18177 9278 9375 9407 0
18177 9278 9377 0
18177 9278 9379 0
18177 9278 9381 0
18177 9278 9383 0
18177 9278 9385 0
18177 9278 9387 0
18177 9278 9389 0
18177 9278 9391 0
18177 9278 9393 0
18177 9278 9395 0
18177 9278 9397 0
18177 9278 9399 0
18177 9278 9401 0
18177 9278 9403 0
18177 9278 9405 0
18177 9280 9426 0
18177 9280 9356 9424 0
18177 9280 9357 9422 0
18177 9280 9359 9420 0
18177 9280 9361 9418 0
18177 9280 9363 9416 0
18177 9280 9365 9414 0
18177 9280 9367 9412 0
18177 9280 9369 9410 0
18177 9280 9371 9408 0
18177 9280 9373 9407 0
18177 9280 9375 0
18177 9280 9377 0
18177 9280 9379 0
18177 9280 9381 0
18177 9280 9383 0
18177 9280 9385 0
18177 9280 9387 0
18177 9280 9389 0
18177 9280 9391 0
18177 9280 9393 0
18177 9280 9395 0
18177 9280 9397 0
18177 9280 9399 0
18177 9280 9401 0
18177 9280 9403 0
18177 9280 9405 0
18177 9282 9424 0
18177 9282 9356 9422 0
18177 9282 9357 9420 0
18177 9282 9359 9418 0
18177 9282 9361 9416 0
18177 9282 9363 9414 0
18177 9282 9365 9412 0
18177 9282 9367 9410 0
18177 9282 9369 9408 0
18177 9282 9371 9407 0
18177 9282 9373 0
18177 9282 9375 0
18177 9282 9377 0
18177 9282 9379 0
18177 9282 9381 0
18177 9282 9383 0
18177 9282 9385 0
18177 9282 9387 0
18177 9282 9389 0
18177 9282 9391 0
18177 9282 9393 0
18177 9282 9395 0
18177 9282 9397 0
18177 9282 9399 0
18177 9282 9401 0
18177 9282 9403 0
18177 9282 9405 0
18177 9284 9422 0
18177 9284 9356 9420 0
18177 9284 9357 9418 0
18177 9284 9359 9416 0
18177 9284 9361 9414 0
18177 9284 9363 9412 0
18177 9284 9365 9410 0
18177 9284 9367 9408 0
18177 9284 9369 9407 0
18177 9284 9371 0
18177 9284 9373 0
18177 9284 9375 0
18177 9284 9377 0
18177 9284 9379 0
18177 9284 9381 0
18177 9284 9383 0
18177 9284 9385 0
18177 9284 9387 0
18177 9284 9389 0
18177 9284 9391 0
18177 9284 9393 0
18177 9284 9395 0
18177 9284 9397 0
18177 9284 9399 0
18177 9284 9401 0
18177 9284 9403 0
18177 9284 9405 0
c (((aux403 + aux406 + aux407)<=26)=tv=SATLiteral(18178))
-18178 9718 0
-18178 9616 9716 0
-18178 9617 9714 0
-18178 9619 9712 0
-18178 9621 9710 0
-18178 9623 9708 0
-18178 9625 9706 0
-18178 9627 9704 0
-18178 9629 9702 0
-18178 9631 9700 0
-18178 9633 9698 0
-18178 9635 9696 0
-18178 9637 9694 0
-18178 9639 9692 0
-18178 9641 9690 0
-18178 9643 9688 0
-18178 9645 9686 0
-18178 9647 9684 0
-18178 9649 9682 0
-18178 9651 9680 0
-18178 9653 9678 0
-18178 9655 9676 0
-18178 9657 9674 0
-18178 9659 9672 0
-18178 9661 9670 0
-18178 9663 9668 0
-18178 9665 9667 0
-18178 9511 9716 0
-18178 9511 9616 9714 0
-18178 9511 9617 9712 0
-18178 9511 9619 9710 0
-18178 9511 9621 9708 0
-18178 9511 9623 9706 0
-18178 9511 9625 9704 0
-18178 9511 9627 9702 0
-18178 9511 9629 9700 0
-18178 9511 9631 9698 0
-18178 9511 9633 9696 0
-18178 9511 9635 9694 0
-18178 9511 9637 9692 0
-18178 9511 9639 9690 0
-18178 9511 9641 9688 0
-18178 9511 9643 9686 0
-18178 9511 9645 9684 0
-18178 9511 9647 9682 0
-18178 9511 9649 9680 0
-18178 9511 9651 9678 0
-18178 9511 9653 9676 0
-18178 9511 9655 9674 0
-18178 9511 9657 9672 0
-18178 9511 9659 9670 0
-18178 9511 9661 9668 0
-18178 9511 9663 9667 0
-18178 9511 9665 0
-18178 9512 9714 0
-18178 9512 9616 9712 0
-18178 9512 9617 9710 0
-18178 9512 9619 9708 0
-18178 9512 9621 9706 0
-18178 9512 9623 9704 0
-18178 9512 9625 9702 0
-18178 9512 9627 9700 0
-18178 9512 9629 9698 0
-18178 9512 9631 9696 0
-18178 9512 9633 9694 0
-18178 9512 9635 9692 0
-18178 9512 9637 9690 0
-18178 9512 9639 9688 0
-18178 9512 9641 9686 0
-18178 9512 9643 9684 0
-18178 9512 9645 9682 0
-18178 9512 9647 9680 0
-18178 9512 9649 9678 0
-18178 9512 9651 9676 0
-18178 9512 9653 9674 0
-18178 9512 9655 9672 0
-18178 9512 9657 9670 0
-18178 9512 9659 9668 0
-18178 9512 9661 9667 0
-18178 9512 9663 0
-18178 9512 9665 0
-18178 9514 9712 0
-18178 9514 9616 9710 0
-18178 9514 9617 9708 0
-18178 9514 9619 9706 0
-18178 9514 9621 9704 0
-18178 9514 9623 9702 0
-18178 9514 9625 9700 0
-18178 9514 9627 9698 0
-18178 9514 9629 9696 0
-18178 9514 9631 9694 0
-18178 9514 9633 9692 0
-18178 9514 9635 9690 0
-18178 9514 9637 9688 0
-18178 9514 9639 9686 0
-18178 9514 9641 9684 0
-18178 9514 9643 9682 0
-18178 9514 9645 9680 0
-18178 9514 9647 9678 0
-18178 9514 9649 9676 0
-18178 9514 9651 9674 0
-18178 9514 9653 9672 0
-18178 9514 9655 9670 0
-18178 9514 9657 9668 0
-18178 9514 9659 9667 0
-18178 9514 9661 0
-18178 9514 9663 0
-18178 9514 9665 0
-18178 9516 9710 0
-18178 9516 9616 9708 0
-18178 9516 9617 9706 0
-18178 9516 9619 9704 0
-18178 9516 9621 9702 0
-18178 9516 9623 9700 0
-18178 9516 9625 9698 0
-18178 9516 9627 9696 0
-18178 9516 9629 9694 0
-18178 9516 9631 9692 0
-18178 9516 9633 9690 0
-18178 9516 9635 9688 0
-18178 9516 9637 9686 0
-18178 9516 9639 9684 0
-18178 9516 9641 9682 0
-18178 9516 9643 9680 0
-18178 9516 9645 9678 0
-18178 9516 9647 9676 0
-18178 9516 9649 9674 0
-18178 9516 9651 9672 0
-18178 9516 9653 9670 0
-18178 9516 9655 9668 0
-18178 9516 9657 9667 0
-18178 9516 9659 0
-18178 9516 9661 0
-18178 9516 9663 0
-18178 9516 9665 0
-18178 9518 9708 0
-18178 9518 9616 9706 0
-18178 9518 9617 9704 0
-18178 9518 9619 9702 0
-18178 9518 9621 9700 0
-18178 9518 9623 9698 0
-18178 9518 9625 9696 0
-18178 9518 9627 9694 0
-18178 9518 9629 9692 0
-18178 9518 9631 9690 0
-18178 9518 9633 9688 0
-18178 9518 9635 9686 0
-18178 9518 9637 9684 0
-18178 9518 9639 9682 0
-18178 9518 9641 9680 0
-18178 9518 9643 9678 0
-18178 9518 9645 9676 0
-18178 9518 9647 9674 0
-18178 9518 9649 9672 0
-18178 9518 9651 9670 0
-18178 9518 9653 9668 0
-18178 9518 9655 9667 0
-18178 9518 9657 0
-18178 9518 9659 0
-18178 9518 9661 0
-18178 9518 9663 0
-18178 9518 9665 0
-18178 9520 9706 0
-18178 9520 9616 9704 0
-18178 9520 9617 9702 0
-18178 9520 9619 9700 0
-18178 9520 9621 9698 0
-18178 9520 9623 9696 0
-18178 9520 9625 9694 0
-18178 9520 9627 9692 0
-18178 9520 9629 9690 0
-18178 9520 9631 9688 0
-18178 9520 9633 9686 0
-18178 9520 9635 9684 0
-18178 9520 9637 9682 0
-18178 9520 9639 9680 0
-18178 9520 9641 9678 0
-18178 9520 9643 9676 0
-18178 9520 9645 9674 0
-18178 9520 9647 9672 0
-18178 9520 9649 9670 0
-18178 9520 9651 9668 0
-18178 9520 9653 9667 0
-18178 9520 9655 0
-18178 9520 9657 0
-18178 9520 9659 0
-18178 9520 9661 0
-18178 9520 9663 0
-18178 9520 9665 0
-18178 9522 9704 0
-18178 9522 9616 9702 0
-18178 9522 9617 9700 0
-18178 9522 9619 9698 0
-18178 9522 9621 9696 0
-18178 9522 9623 9694 0
-18178 9522 9625 9692 0
-18178 9522 9627 9690 0
-18178 9522 9629 9688 0
-18178 9522 9631 9686 0
-18178 9522 9633 9684 0
-18178 9522 9635 9682 0
-18178 9522 9637 9680 0
-18178 9522 9639 9678 0
-18178 9522 9641 9676 0
-18178 9522 9643 9674 0
-18178 9522 9645 9672 0
-18178 9522 9647 9670 0
-18178 9522 9649 9668 0
-18178 9522 9651 9667 0
-18178 9522 9653 0
-18178 9522 9655 0
-18178 9522 9657 0
-18178 9522 9659 0
-18178 9522 9661 0
-18178 9522 9663 0
-18178 9522 9665 0
-18178 9524 9702 0
-18178 9524 9616 9700 0
-18178 9524 9617 9698 0
-18178 9524 9619 9696 0
-18178 9524 9621 9694 0
-18178 9524 9623 9692 0
-18178 9524 9625 9690 0
-18178 9524 9627 9688 0
-18178 9524 9629 9686 0
-18178 9524 9631 9684 0
-18178 9524 9633 9682 0
-18178 9524 9635 9680 0
-18178 9524 9637 9678 0
-18178 9524 9639 9676 0
-18178 9524 9641 9674 0
-18178 9524 9643 9672 0
-18178 9524 9645 9670 0
-18178 9524 9647 9668 0
-18178 9524 9649 9667 0
-18178 9524 9651 0
-18178 9524 9653 0
-18178 9524 9655 0
-18178 9524 9657 0
-18178 9524 9659 0
-18178 9524 9661 0
-18178 9524 9663 0
-18178 9524 9665 0
-18178 9526 9700 0
-18178 9526 9616 9698 0
-18178 9526 9617 9696 0
-18178 9526 9619 9694 0
-18178 9526 9621 9692 0
-18178 9526 9623 9690 0
-18178 9526 9625 9688 0
-18178 9526 9627 9686 0
-18178 9526 9629 9684 0
-18178 9526 9631 9682 0
-18178 9526 9633 9680 0
-18178 9526 9635 9678 0
-18178 9526 9637 9676 0
-18178 9526 9639 9674 0
-18178 9526 9641 9672 0
-18178 9526 9643 9670 0
-18178 9526 9645 9668 0
-18178 9526 9647 9667 0
-18178 9526 9649 0
-18178 9526 9651 0
-18178 9526 9653 0
-18178 9526 9655 0
-18178 9526 9657 0
-18178 9526 9659 0
-18178 9526 9661 0
-18178 9526 9663 0
-18178 9526 9665 0
-18178 9528 9698 0
-18178 9528 9616 9696 0
-18178 9528 9617 9694 0
-18178 9528 9619 9692 0
-18178 9528 9621 9690 0
-18178 9528 9623 9688 0
-18178 9528 9625 9686 0
-18178 9528 9627 9684 0
-18178 9528 9629 9682 0
-18178 9528 9631 9680 0
-18178 9528 9633 9678 0
-18178 9528 9635 9676 0
-18178 9528 9637 9674 0
-18178 9528 9639 9672 0
-18178 9528 9641 9670 0
-18178 9528 9643 9668 0
-18178 9528 9645 9667 0
-18178 9528 9647 0
-18178 9528 9649 0
-18178 9528 9651 0
-18178 9528 9653 0
-18178 9528 9655 0
-18178 9528 9657 0
-18178 9528 9659 0
-18178 9528 9661 0
-18178 9528 9663 0
-18178 9528 9665 0
-18178 9530 9696 0
-18178 9530 9616 9694 0
-18178 9530 9617 9692 0
-18178 9530 9619 9690 0
-18178 9530 9621 9688 0
-18178 9530 9623 9686 0
-18178 9530 9625 9684 0
-18178 9530 9627 9682 0
-18178 9530 9629 9680 0
-18178 9530 9631 9678 0
-18178 9530 9633 9676 0
-18178 9530 9635 9674 0
-18178 9530 9637 9672 0
-18178 9530 9639 9670 0
-18178 9530 9641 9668 0
-18178 9530 9643 9667 0
-18178 9530 9645 0
-18178 9530 9647 0
-18178 9530 9649 0
-18178 9530 9651 0
-18178 9530 9653 0
-18178 9530 9655 0
-18178 9530 9657 0
-18178 9530 9659 0
-18178 9530 9661 0
-18178 9530 9663 0
-18178 9530 9665 0
-18178 9532 9694 0
-18178 9532 9616 9692 0
-18178 9532 9617 9690 0
-18178 9532 9619 9688 0
-18178 9532 9621 9686 0
-18178 9532 9623 9684 0
-18178 9532 9625 9682 0
-18178 9532 9627 9680 0
-18178 9532 9629 9678 0
-18178 9532 9631 9676 0
-18178 9532 9633 9674 0
-18178 9532 9635 9672 0
-18178 9532 9637 9670 0
-18178 9532 9639 9668 0
-18178 9532 9641 9667 0
-18178 9532 9643 0
-18178 9532 9645 0
-18178 9532 9647 0
-18178 9532 9649 0
-18178 9532 9651 0
-18178 9532 9653 0
-18178 9532 9655 0
-18178 9532 9657 0
-18178 9532 9659 0
-18178 9532 9661 0
-18178 9532 9663 0
-18178 9532 9665 0
-18178 9534 9692 0
-18178 9534 9616 9690 0
-18178 9534 9617 9688 0
-18178 9534 9619 9686 0
-18178 9534 9621 9684 0
-18178 9534 9623 9682 0
-18178 9534 9625 9680 0
-18178 9534 9627 9678 0
-18178 9534 9629 9676 0
-18178 9534 9631 9674 0
-18178 9534 9633 9672 0
-18178 9534 9635 9670 0
-18178 9534 9637 9668 0
-18178 9534 9639 9667 0
-18178 9534 9641 0
-18178 9534 9643 0
-18178 9534 9645 0
-18178 9534 9647 0
-18178 9534 9649 0
-18178 9534 9651 0
-18178 9534 9653 0
-18178 9534 9655 0
-18178 9534 9657 0
-18178 9534 9659 0
-18178 9534 9661 0
-18178 9534 9663 0
-18178 9534 9665 0
-18178 9536 9690 0
-18178 9536 9616 9688 0
-18178 9536 9617 9686 0
-18178 9536 9619 9684 0
-18178 9536 9621 9682 0
-18178 9536 9623 9680 0
-18178 9536 9625 9678 0
-18178 9536 9627 9676 0
-18178 9536 9629 9674 0
-18178 9536 9631 9672 0
-18178 9536 9633 9670 0
-18178 9536 9635 9668 0
-18178 9536 9637 9667 0
-18178 9536 9639 0
-18178 9536 9641 0
-18178 9536 9643 0
-18178 9536 9645 0
-18178 9536 9647 0
-18178 9536 9649 0
-18178 9536 9651 0
-18178 9536 9653 0
-18178 9536 9655 0
-18178 9536 9657 0
-18178 9536 9659 0
-18178 9536 9661 0
-18178 9536 9663 0
-18178 9536 9665 0
-18178 9538 9688 0
-18178 9538 9616 9686 0
-18178 9538 9617 9684 0
-18178 9538 9619 9682 0
-18178 9538 9621 9680 0
-18178 9538 9623 9678 0
-18178 9538 9625 9676 0
-18178 9538 9627 9674 0
-18178 9538 9629 9672 0
-18178 9538 9631 9670 0
-18178 9538 9633 9668 0
-18178 9538 9635 9667 0
-18178 9538 9637 0
-18178 9538 9639 0
-18178 9538 9641 0
-18178 9538 9643 0
-18178 9538 9645 0
-18178 9538 9647 0
-18178 9538 9649 0
-18178 9538 9651 0
-18178 9538 9653 0
-18178 9538 9655 0
-18178 9538 9657 0
-18178 9538 9659 0
-18178 9538 9661 0
-18178 9538 9663 0
-18178 9538 9665 0
-18178 9540 9686 0
-18178 9540 9616 9684 0
-18178 9540 9617 9682 0
-18178 9540 9619 9680 0
-18178 9540 9621 9678 0
-18178 9540 9623 9676 0
-18178 9540 9625 9674 0
-18178 9540 9627 9672 0
-18178 9540 9629 9670 0
-18178 9540 9631 9668 0
-18178 9540 9633 9667 0
-18178 9540 9635 0
-18178 9540 9637 0
-18178 9540 9639 0
-18178 9540 9641 0
-18178 9540 9643 0
-18178 9540 9645 0
-18178 9540 9647 0
-18178 9540 9649 0
-18178 9540 9651 0
-18178 9540 9653 0
-18178 9540 9655 0
-18178 9540 9657 0
-18178 9540 9659 0
-18178 9540 9661 0
-18178 9540 9663 0
-18178 9540 9665 0
-18178 9542 9684 0
-18178 9542 9616 9682 0
-18178 9542 9617 9680 0
-18178 9542 9619 9678 0
-18178 9542 9621 9676 0
-18178 9542 9623 9674 0
-18178 9542 9625 9672 0
-18178 9542 9627 9670 0
-18178 9542 9629 9668 0
-18178 9542 9631 9667 0
-18178 9542 9633 0
-18178 9542 9635 0
-18178 9542 9637 0
-18178 9542 9639 0
-18178 9542 9641 0
-18178 9542 9643 0
-18178 9542 9645 0
-18178 9542 9647 0
-18178 9542 9649 0
-18178 9542 9651 0
-18178 9542 9653 0
-18178 9542 9655 0
-18178 9542 9657 0
-18178 9542 9659 0
-18178 9542 9661 0
-18178 9542 9663 0
-18178 9542 9665 0
-18178 9544 9682 0
-18178 9544 9616 9680 0
-18178 9544 9617 9678 0
-18178 9544 9619 9676 0
-18178 9544 9621 9674 0
-18178 9544 9623 9672 0
-18178 9544 9625 9670 0
-18178 9544 9627 9668 0
-18178 9544 9629 9667 0
-18178 9544 9631 0
-18178 9544 9633 0
-18178 9544 9635 0
-18178 9544 9637 0
-18178 9544 9639 0
-18178 9544 9641 0
-18178 9544 9643 0
-18178 9544 9645 0
-18178 9544 9647 0
-18178 9544 9649 0
-18178 9544 9651 0
-18178 9544 9653 0
-18178 9544 9655 0
-18178 9544 9657 0
-18178 9544 9659 0
-18178 9544 9661 0
-18178 9544 9663 0
-18178 9544 9665 0
18178 -9631 -9667 0
18178 -9629 -9668 0
18178 -9627 -9670 0
18178 -9625 -9672 0
18178 -9623 -9674 0
18178 -9621 -9676 0
18178 -9619 -9678 0
18178 -9617 -9680 0
18178 -9616 -9682 0
18178 -9544 -9633 -9667 0
18178 -9544 -9631 -9668 0
18178 -9544 -9629 -9670 0
18178 -9544 -9627 -9672 0
18178 -9544 -9625 -9674 0
18178 -9544 -9623 -9676 0
18178 -9544 -9621 -9678 0
18178 -9544 -9619 -9680 0
18178 -9544 -9617 -9682 0
18178 -9544 -9616 -9684 0
18178 -9542 -9635 -9667 0
18178 -9542 -9633 -9668 0
18178 -9542 -9631 -9670 0
18178 -9542 -9629 -9672 0
18178 -9542 -9627 -9674 0
18178 -9542 -9625 -9676 0
18178 -9542 -9623 -9678 0
18178 -9542 -9621 -9680 0
18178 -9542 -9619 -9682 0
18178 -9542 -9617 -9684 0
18178 -9542 -9616 -9686 0
18178 -9540 -9637 -9667 0
18178 -9540 -9635 -9668 0
18178 -9540 -9633 -9670 0
18178 -9540 -9631 -9672 0
18178 -9540 -9629 -9674 0
18178 -9540 -9627 -9676 0
18178 -9540 -9625 -9678 0
18178 -9540 -9623 -9680 0
18178 -9540 -9621 -9682 0
18178 -9540 -9619 -9684 0
18178 -9540 -9617 -9686 0
18178 -9540 -9616 -9688 0
18178 -9538 -9639 -9667 0
18178 -9538 -9637 -9668 0
18178 -9538 -9635 -9670 0
18178 -9538 -9633 -9672 0
18178 -9538 -9631 -9674 0
18178 -9538 -9629 -9676 0
18178 -9538 -9627 -9678 0
18178 -9538 -9625 -9680 0
18178 -9538 -9623 -9682 0
18178 -9538 -9621 -9684 0
18178 -9538 -9619 -9686 0
18178 -9538 -9617 -9688 0
18178 -9538 -9616 -9690 0
18178 -9536 -9641 -9667 0
18178 -9536 -9639 -9668 0
18178 -9536 -9637 -9670 0
18178 -9536 -9635 -9672 0
18178 -9536 -9633 -9674 0
18178 -9536 -9631 -9676 0
18178 -9536 -9629 -9678 0
18178 -9536 -9627 -9680 0
18178 -9536 -9625 -9682 0
18178 -9536 -9623 -9684 0
18178 -9536 -9621 -9686 0
18178 -9536 -9619 -9688 0
18178 -9536 -9617 -9690 0
18178 -9536 -9616 -9692 0
18178 -9534 -9643 -9667 0
18178 -9534 -9641 -9668 0
18178 -9534 -9639 -9670 0
18178 -9534 -9637 -9672 0
18178 -9534 -9635 -9674 0
18178 -9534 -9633 -9676 0
18178 -9534 -9631 -9678 0
18178 -9534 -9629 -9680 0
18178 -9534 -9627 -9682 0
18178 -9534 -9625 -9684 0
18178 -9534 -9623 -9686 0
18178 -9534 -9621 -9688 0
18178 -9534 -9619 -9690 0
18178 -9534 -9617 -9692 0
18178 -9534 -9616 -9694 0
18178 -9532 -9645 -9667 0
18178 -9532 -9643 -9668 0
18178 -9532 -9641 -9670 0
18178 -9532 -9639 -9672 0
18178 -9532 -9637 -9674 0
18178 -9532 -9635 -9676 0
18178 -9532 -9633 -9678 0
18178 -9532 -9631 -9680 0
18178 -9532 -9629 -9682 0
18178 -9532 -9627 -9684 0
18178 -9532 -9625 -9686 0
18178 -9532 -9623 -9688 0
18178 -9532 -9621 -9690 0
18178 -9532 -9619 -9692 0
18178 -9532 -9617 -9694 0
18178 -9532 -9616 -9696 0
18178 -9530 -9647 -9667 0
18178 -9530 -9645 -9668 0
18178 -9530 -9643 -9670 0
18178 -9530 -9641 -9672 0
18178 -9530 -9639 -9674 0
18178 -9530 -9637 -9676 0
18178 -9530 -9635 -9678 0
18178 -9530 -9633 -9680 0
18178 -9530 -9631 -9682 0
18178 -9530 -9629 -9684 0
18178 -9530 -9627 -9686 0
18178 -9530 -9625 -9688 0
18178 -9530 -9623 -9690 0
18178 -9530 -9621 -9692 0
18178 -9530 -9619 -9694 0
18178 -9530 -9617 -9696 0
18178 -9530 -9616 -9698 0
18178 -9528 -9649 -9667 0
18178 -9528 -9647 -9668 0
18178 -9528 -9645 -9670 0
18178 -9528 -9643 -9672 0
18178 -9528 -9641 -9674 0
18178 -9528 -9639 -9676 0
18178 -9528 -9637 -9678 0
18178 -9528 -9635 -9680 0
18178 -9528 -9633 -9682 0
18178 -9528 -9631 -9684 0
18178 -9528 -9629 -9686 0
18178 -9528 -9627 -9688 0
18178 -9528 -9625 -9690 0
18178 -9528 -9623 -9692 0
18178 -9528 -9621 -9694 0
18178 -9528 -9619 -9696 0
18178 -9528 -9617 -9698 0
18178 -9528 -9616 -9700 0
18178 -9526 -9651 -9667 0
18178 -9526 -9649 -9668 0
18178 -9526 -9647 -9670 0
18178 -9526 -9645 -9672 0
18178 -9526 -9643 -9674 0
18178 -9526 -9641 -9676 0
18178 -9526 -9639 -9678 0
18178 -9526 -9637 -9680 0
18178 -9526 -9635 -9682 0
18178 -9526 -9633 -9684 0
18178 -9526 -9631 -9686 0
18178 -9526 -9629 -9688 0
18178 -9526 -9627 -9690 0
18178 -9526 -9625 -9692 0
18178 -9526 -9623 -9694 0
18178 -9526 -9621 -9696 0
18178 -9526 -9619 -9698 0
18178 -9526 -9617 -9700 0
18178 -9526 -9616 -9702 0
18178 -9524 -9653 -9667 0
18178 -9524 -9651 -9668 0
18178 -9524 -9649 -9670 0
18178 -9524 -9647 -9672 0
18178 -9524 -9645 -9674 0
18178 -9524 -9643 -9676 0
18178 -9524 -9641 -9678 0
18178 -9524 -9639 -9680 0
18178 -9524 -9637 -9682 0
18178 -9524 -9635 -9684 0
18178 -9524 -9633 -9686 0
18178 -9524 -9631 -9688 0
18178 -9524 -9629 -9690 0
18178 -9524 -9627 -9692 0
18178 -9524 -9625 -9694 0
18178 -9524 -9623 -9696 0
18178 -9524 -9621 -9698 0
18178 -9524 -9619 -9700 0
18178 -9524 -9617 -9702 0
18178 -9524 -9616 -9704 0
18178 -9522 -9655 -9667 0
18178 -9522 -9653 -9668 0
18178 -9522 -9651 -9670 0
18178 -9522 -9649 -9672 0
18178 -9522 -9647 -9674 0
18178 -9522 -9645 -9676 0
18178 -9522 -9643 -9678 0
18178 -9522 -9641 -9680 0
18178 -9522 -9639 -9682 0
18178 -9522 -9637 -9684 0
18178 -9522 -9635 -9686 0
18178 -9522 -9633 -9688 0
18178 -9522 -9631 -9690 0
18178 -9522 -9629 -9692 0
18178 -9522 -9627 -9694 0
18178 -9522 -9625 -9696 0
18178 -9522 -9623 -9698 0
18178 -9522 -9621 -9700 0
18178 -9522 -9619 -9702 0
18178 -9522 -9617 -9704 0
18178 -9522 -9616 -9706 0
18178 -9520 -9657 -9667 0
18178 -9520 -9655 -9668 0
18178 -9520 -9653 -9670 0
18178 -9520 -9651 -9672 0
18178 -9520 -9649 -9674 0
18178 -9520 -9647 -9676 0
18178 -9520 -9645 -9678 0
18178 -9520 -9643 -9680 0
18178 -9520 -9641 -9682 0
18178 -9520 -9639 -9684 0
18178 -9520 -9637 -9686 0
18178 -9520 -9635 -9688 0
18178 -9520 -9633 -9690 0
18178 -9520 -9631 -9692 0
18178 -9520 -9629 -9694 0
18178 -9520 -9627 -9696 0
18178 -9520 -9625 -9698 0
18178 -9520 -9623 -9700 0
18178 -9520 -9621 -9702 0
18178 -9520 -9619 -9704 0
18178 -9520 -9617 -9706 0
18178 -9520 -9616 -9708 0
18178 -9518 -9659 -9667 0
18178 -9518 -9657 -9668 0
18178 -9518 -9655 -9670 0
18178 -9518 -9653 -9672 0
18178 -9518 -9651 -9674 0
18178 -9518 -9649 -9676 0
18178 -9518 -9647 -9678 0
18178 -9518 -9645 -9680 0
18178 -9518 -9643 -9682 0
18178 -9518 -9641 -9684 0
18178 -9518 -9639 -9686 0
18178 -9518 -9637 -9688 0
18178 -9518 -9635 -9690 0
18178 -9518 -9633 -9692 0
18178 -9518 -9631 -9694 0
18178 -9518 -9629 -9696 0
18178 -9518 -9627 -9698 0
18178 -9518 -9625 -9700 0
18178 -9518 -9623 -9702 0
18178 -9518 -9621 -9704 0
18178 -9518 -9619 -9706 0
18178 -9518 -9617 -9708 0
18178 -9518 -9616 -9710 0
18178 -9516 -9661 -9667 0
18178 -9516 -9659 -9668 0
18178 -9516 -9657 -9670 0
18178 -9516 -9655 -9672 0
18178 -9516 -9653 -9674 0
18178 -9516 -9651 -9676 0
18178 -9516 -9649 -9678 0
18178 -9516 -9647 -9680 0
18178 -9516 -9645 -9682 0
18178 -9516 -9643 -9684 0
18178 -9516 -9641 -9686 0
18178 -9516 -9639 -9688 0
18178 -9516 -9637 -9690 0
18178 -9516 -9635 -9692 0
18178 -9516 -9633 -9694 0
18178 -9516 -9631 -9696 0
18178 -9516 -9629 -9698 0
18178 -9516 -9627 -9700 0
18178 -9516 -9625 -9702 0
18178 -9516 -9623 -9704 0
18178 -9516 -9621 -9706 0
18178 -9516 -9619 -9708 0
18178 -9516 -9617 -9710 0
18178 -9516 -9616 -9712 0
18178 -9514 -9663 -9667 0
18178 -9514 -9661 -9668 0
18178 -9514 -9659 -9670 0
18178 -9514 -9657 -9672 0
18178 -9514 -9655 -9674 0
18178 -9514 -9653 -9676 0
18178 -9514 -9651 -9678 0
18178 -9514 -9649 -9680 0
18178 -9514 -9647 -9682 0
18178 -9514 -9645 -9684 0
18178 -9514 -9643 -9686 0
18178 -9514 -9641 -9688 0
18178 -9514 -9639 -9690 0
18178 -9514 -9637 -9692 0
18178 -9514 -9635 -9694 0
18178 -9514 -9633 -9696 0
18178 -9514 -9631 -9698 0
18178 -9514 -9629 -9700 0
18178 -9514 -9627 -9702 0
18178 -9514 -9625 -9704 0
18178 -9514 -9623 -9706 0
18178 -9514 -9621 -9708 0
18178 -9514 -9619 -9710 0
18178 -9514 -9617 -9712 0
18178 -9514 -9616 -9714 0
18178 -9512 -9665 -9667 0
18178 -9512 -9663 -9668 0
18178 -9512 -9661 -9670 0
18178 -9512 -9659 -9672 0
18178 -9512 -9657 -9674 0
18178 -9512 -9655 -9676 0
18178 -9512 -9653 -9678 0
18178 -9512 -9651 -9680 0
18178 -9512 -9649 -9682 0
18178 -9512 -9647 -9684 0
18178 -9512 -9645 -9686 0
18178 -9512 -9643 -9688 0
18178 -9512 -9641 -9690 0
18178 -9512 -9639 -9692 0
18178 -9512 -9637 -9694 0
18178 -9512 -9635 -9696 0
18178 -9512 -9633 -9698 0
18178 -9512 -9631 -9700 0
18178 -9512 -9629 -9702 0
18178 -9512 -9627 -9704 0
18178 -9512 -9625 -9706 0
18178 -9512 -9623 -9708 0
18178 -9512 -9621 -9710 0
18178 -9512 -9619 -9712 0
18178 -9512 -9617 -9714 0
18178 -9512 -9616 -9716 0
18178 -9511 -9667 0
18178 -9511 -9665 -9668 0
18178 -9511 -9663 -9670 0
18178 -9511 -9661 -9672 0
18178 -9511 -9659 -9674 0
18178 -9511 -9657 -9676 0
18178 -9511 -9655 -9678 0
18178 -9511 -9653 -9680 0
18178 -9511 -9651 -9682 0
18178 -9511 -9649 -9684 0
18178 -9511 -9647 -9686 0
18178 -9511 -9645 -9688 0
18178 -9511 -9643 -9690 0
18178 -9511 -9641 -9692 0
18178 -9511 -9639 -9694 0
18178 -9511 -9637 -9696 0
18178 -9511 -9635 -9698 0
18178 -9511 -9633 -9700 0
18178 -9511 -9631 -9702 0
18178 -9511 -9629 -9704 0
18178 -9511 -9627 -9706 0
18178 -9511 -9625 -9708 0
18178 -9511 -9623 -9710 0
18178 -9511 -9621 -9712 0
18178 -9511 -9619 -9714 0
18178 -9511 -9617 -9716 0
18178 -9511 -9616 -9718 0
c ((26<=(aux403 + aux406 + aux407))=tv=SATLiteral(18179))
-18179 -9629 -9667 0
-18179 -9627 -9668 0
-18179 -9625 -9670 0
-18179 -9623 -9672 0
-18179 -9621 -9674 0
-18179 -9619 -9676 0
-18179 -9617 -9678 0
-18179 -9616 -9680 0
-18179 -9544 -9631 -9667 0
-18179 -9544 -9629 -9668 0
-18179 -9544 -9627 -9670 0
-18179 -9544 -9625 -9672 0
-18179 -9544 -9623 -9674 0
-18179 -9544 -9621 -9676 0
-18179 -9544 -9619 -9678 0
-18179 -9544 -9617 -9680 0
-18179 -9544 -9616 -9682 0
-18179 -9542 -9633 -9667 0
-18179 -9542 -9631 -9668 0
-18179 -9542 -9629 -9670 0
-18179 -9542 -9627 -9672 0
-18179 -9542 -9625 -9674 0
-18179 -9542 -9623 -9676 0
-18179 -9542 -9621 -9678 0
-18179 -9542 -9619 -9680 0
-18179 -9542 -9617 -9682 0
-18179 -9542 -9616 -9684 0
-18179 -9540 -9635 -9667 0
-18179 -9540 -9633 -9668 0
-18179 -9540 -9631 -9670 0
-18179 -9540 -9629 -9672 0
-18179 -9540 -9627 -9674 0
-18179 -9540 -9625 -9676 0
-18179 -9540 -9623 -9678 0
-18179 -9540 -9621 -9680 0
-18179 -9540 -9619 -9682 0
-18179 -9540 -9617 -9684 0
-18179 -9540 -9616 -9686 0
-18179 -9538 -9637 -9667 0
-18179 -9538 -9635 -9668 0
-18179 -9538 -9633 -9670 0
-18179 -9538 -9631 -9672 0
-18179 -9538 -9629 -9674 0
-18179 -9538 -9627 -9676 0
-18179 -9538 -9625 -9678 0
-18179 -9538 -9623 -9680 0
-18179 -9538 -9621 -9682 0
-18179 -9538 -9619 -9684 0
-18179 -9538 -9617 -9686 0
-18179 -9538 -9616 -9688 0
-18179 -9536 -9639 -9667 0
-18179 -9536 -9637 -9668 0
-18179 -9536 -9635 -9670 0
-18179 -9536 -9633 -9672 0
-18179 -9536 -9631 -9674 0
-18179 -9536 -9629 -9676 0
-18179 -9536 -9627 -9678 0
-18179 -9536 -9625 -9680 0
-18179 -9536 -9623 -9682 0
-18179 -9536 -9621 -9684 0
-18179 -9536 -9619 -9686 0
-18179 -9536 -9617 -9688 0
-18179 -9536 -9616 -9690 0
-18179 -9534 -9641 -9667 0
-18179 -9534 -9639 -9668 0
-18179 -9534 -9637 -9670 0
-18179 -9534 -9635 -9672 0
-18179 -9534 -9633 -9674 0
-18179 -9534 -9631 -9676 0
-18179 -9534 -9629 -9678 0
-18179 -9534 -9627 -9680 0
-18179 -9534 -9625 -9682 0
-18179 -9534 -9623 -9684 0
-18179 -9534 -9621 -9686 0
-18179 -9534 -9619 -9688 0
-18179 -9534 -9617 -9690 0
-18179 -9534 -9616 -9692 0
-18179 -9532 -9643 -9667 0
-18179 -9532 -9641 -9668 0
-18179 -9532 -9639 -9670 0
-18179 -9532 -9637 -9672 0
-18179 -9532 -9635 -9674 0
-18179 -9532 -9633 -9676 0
-18179 -9532 -9631 -9678 0
-18179 -9532 -9629 -9680 0
-18179 -9532 -9627 -9682 0
-18179 -9532 -9625 -9684 0
-18179 -9532 -9623 -9686 0
-18179 -9532 -9621 -9688 0
-18179 -9532 -9619 -9690 0
-18179 -9532 -9617 -9692 0
-18179 -9532 -9616 -9694 0
-18179 -9530 -9645 -9667 0
-18179 -9530 -9643 -9668 0
-18179 -9530 -9641 -9670 0
-18179 -9530 -9639 -9672 0
-18179 -9530 -9637 -9674 0
-18179 -9530 -9635 -9676 0
-18179 -9530 -9633 -9678 0
-18179 -9530 -9631 -9680 0
-18179 -9530 -9629 -9682 0
-18179 -9530 -9627 -9684 0
-18179 -9530 -9625 -9686 0
-18179 -9530 -9623 -9688 0
-18179 -9530 -9621 -9690 0
-18179 -9530 -9619 -9692 0
-18179 -9530 -9617 -9694 0
-18179 -9530 -9616 -9696 0
-18179 -9528 -9647 -9667 0
-18179 -9528 -9645 -9668 0
-18179 -9528 -9643 -9670 0
-18179 -9528 -9641 -9672 0
-18179 -9528 -9639 -9674 0
-18179 -9528 -9637 -9676 0
-18179 -9528 -9635 -9678 0
-18179 -9528 -9633 -9680 0
-18179 -9528 -9631 -9682 0
-18179 -9528 -9629 -9684 0
-18179 -9528 -9627 -9686 0
-18179 -9528 -9625 -9688 0
-18179 -9528 -9623 -9690 0
-18179 -9528 -9621 -9692 0
-18179 -9528 -9619 -9694 0
-18179 -9528 -9617 -9696 0
-18179 -9528 -9616 -9698 0
-18179 -9526 -9649 -9667 0
-18179 -9526 -9647 -9668 0
-18179 -9526 -9645 -9670 0
-18179 -9526 -9643 -9672 0
-18179 -9526 -9641 -9674 0
-18179 -9526 -9639 -9676 0
-18179 -9526 -9637 -9678 0
-18179 -9526 -9635 -9680 0
-18179 -9526 -9633 -9682 0
-18179 -9526 -9631 -9684 0
-18179 -9526 -9629 -9686 0
-18179 -9526 -9627 -9688 0
-18179 -9526 -9625 -9690 0
-18179 -9526 -9623 -9692 0
-18179 -9526 -9621 -9694 0
-18179 -9526 -9619 -9696 0
-18179 -9526 -9617 -9698 0
-18179 -9526 -9616 -9700 0
-18179 -9524 -9651 -9667 0
-18179 -9524 -9649 -9668 0
-18179 -9524 -9647 -9670 0
-18179 -9524 -9645 -9672 0
-18179 -9524 -9643 -9674 0
-18179 -9524 -9641 -9676 0
-18179 -9524 -9639 -9678 0
-18179 -9524 -9637 -9680 0
-18179 -9524 -9635 -9682 0
-18179 -9524 -9633 -9684 0
-18179 -9524 -9631 -9686 0
-18179 -9524 -9629 -9688 0
-18179 -9524 -9627 -9690 0
-18179 -9524 -9625 -9692 0
-18179 -9524 -9623 -9694 0
-18179 -9524 -9621 -9696 0
-18179 -9524 -9619 -9698 0
-18179 -9524 -9617 -9700 0
-18179 -9524 -9616 -9702 0
-18179 -9522 -9653 -9667 0
-18179 -9522 -9651 -9668 0
-18179 -9522 -9649 -9670 0
-18179 -9522 -9647 -9672 0
-18179 -9522 -9645 -9674 0
-18179 -9522 -9643 -9676 0
-18179 -9522 -9641 -9678 0
-18179 -9522 -9639 -9680 0
-18179 -9522 -9637 -9682 0
-18179 -9522 -9635 -9684 0
-18179 -9522 -9633 -9686 0
-18179 -9522 -9631 -9688 0
-18179 -9522 -9629 -9690 0
-18179 -9522 -9627 -9692 0
-18179 -9522 -9625 -9694 0
-18179 -9522 -9623 -9696 0
-18179 -9522 -9621 -9698 0
-18179 -9522 -9619 -9700 0
-18179 -9522 -9617 -9702 0
-18179 -9522 -9616 -9704 0
-18179 -9520 -9655 -9667 0
-18179 -9520 -9653 -9668 0
-18179 -9520 -9651 -9670 0
-18179 -9520 -9649 -9672 0
-18179 -9520 -9647 -9674 0
-18179 -9520 -9645 -9676 0
-18179 -9520 -9643 -9678 0
-18179 -9520 -9641 -9680 0
-18179 -9520 -9639 -9682 0
-18179 -9520 -9637 -9684 0
-18179 -9520 -9635 -9686 0
-18179 -9520 -9633 -9688 0
-18179 -9520 -9631 -9690 0
-18179 -9520 -9629 -9692 0
-18179 -9520 -9627 -9694 0
-18179 -9520 -9625 -9696 0
-18179 -9520 -9623 -9698 0
-18179 -9520 -9621 -9700 0
-18179 -9520 -9619 -9702 0
-18179 -9520 -9617 -9704 0
-18179 -9520 -9616 -9706 0
-18179 -9518 -9657 -9667 0
-18179 -9518 -9655 -9668 0
-18179 -9518 -9653 -9670 0
-18179 -9518 -9651 -9672 0
-18179 -9518 -9649 -9674 0
-18179 -9518 -9647 -9676 0
-18179 -9518 -9645 -9678 0
-18179 -9518 -9643 -9680 0
-18179 -9518 -9641 -9682 0
-18179 -9518 -9639 -9684 0
-18179 -9518 -9637 -9686 0
-18179 -9518 -9635 -9688 0
-18179 -9518 -9633 -9690 0
-18179 -9518 -9631 -9692 0
-18179 -9518 -9629 -9694 0
-18179 -9518 -9627 -9696 0
-18179 -9518 -9625 -9698 0
-18179 -9518 -9623 -9700 0
-18179 -9518 -9621 -9702 0
-18179 -9518 -9619 -9704 0
-18179 -9518 -9617 -9706 0
-18179 -9518 -9616 -9708 0
-18179 -9516 -9659 -9667 0
-18179 -9516 -9657 -9668 0
-18179 -9516 -9655 -9670 0
-18179 -9516 -9653 -9672 0
-18179 -9516 -9651 -9674 0
-18179 -9516 -9649 -9676 0
-18179 -9516 -9647 -9678 0
-18179 -9516 -9645 -9680 0
-18179 -9516 -9643 -9682 0
-18179 -9516 -9641 -9684 0
-18179 -9516 -9639 -9686 0
-18179 -9516 -9637 -9688 0
-18179 -9516 -9635 -9690 0
-18179 -9516 -9633 -9692 0
-18179 -9516 -9631 -9694 0
-18179 -9516 -9629 -9696 0
-18179 -9516 -9627 -9698 0
-18179 -9516 -9625 -9700 0
-18179 -9516 -9623 -9702 0
-18179 -9516 -9621 -9704 0
-18179 -9516 -9619 -9706 0
-18179 -9516 -9617 -9708 0
-18179 -9516 -9616 -9710 0
-18179 -9514 -9661 -9667 0
-18179 -9514 -9659 -9668 0
-18179 -9514 -9657 -9670 0
-18179 -9514 -9655 -9672 0
-18179 -9514 -9653 -9674 0
-18179 -9514 -9651 -9676 0
-18179 -9514 -9649 -9678 0
-18179 -9514 -9647 -9680 0
-18179 -9514 -9645 -9682 0
-18179 -9514 -9643 -9684 0
-18179 -9514 -9641 -9686 0
-18179 -9514 -9639 -9688 0
-18179 -9514 -9637 -9690 0
-18179 -9514 -9635 -9692 0
-18179 -9514 -9633 -9694 0
-18179 -9514 -9631 -9696 0
-18179 -9514 -9629 -9698 0
-18179 -9514 -9627 -9700 0
-18179 -9514 -9625 -9702 0
-18179 -9514 -9623 -9704 0
-18179 -9514 -9621 -9706 0
-18179 -9514 -9619 -9708 0
-18179 -9514 -9617 -9710 0
-18179 -9514 -9616 -9712 0
-18179 -9512 -9663 -9667 0
-18179 -9512 -9661 -9668 0
-18179 -9512 -9659 -9670 0
-18179 -9512 -9657 -9672 0
-18179 -9512 -9655 -9674 0
-18179 -9512 -9653 -9676 0
-18179 -9512 -9651 -9678 0
-18179 -9512 -9649 -9680 0
-18179 -9512 -9647 -9682 0
-18179 -9512 -9645 -9684 0
-18179 -9512 -9643 -9686 0
-18179 -9512 -9641 -9688 0
-18179 -9512 -9639 -9690 0
-18179 -9512 -9637 -9692 0
-18179 -9512 -9635 -9694 0
-18179 -9512 -9633 -9696 0
-18179 -9512 -9631 -9698 0
-18179 -9512 -9629 -9700 0
-18179 -9512 -9627 -9702 0
-18179 -9512 -9625 -9704 0
-18179 -9512 -9623 -9706 0
-18179 -9512 -9621 -9708 0
-18179 -9512 -9619 -9710 0
-18179 -9512 -9617 -9712 0
-18179 -9512 -9616 -9714 0
-18179 -9511 -9665 -9667 0
-18179 -9511 -9663 -9668 0
-18179 -9511 -9661 -9670 0
-18179 -9511 -9659 -9672 0
-18179 -9511 -9657 -9674 0
-18179 -9511 -9655 -9676 0
-18179 -9511 -9653 -9678 0
-18179 -9511 -9651 -9680 0
-18179 -9511 -9649 -9682 0
-18179 -9511 -9647 -9684 0
-18179 -9511 -9645 -9686 0
-18179 -9511 -9643 -9688 0
-18179 -9511 -9641 -9690 0
-18179 -9511 -9639 -9692 0
-18179 -9511 -9637 -9694 0
-18179 -9511 -9635 -9696 0
-18179 -9511 -9633 -9698 0
-18179 -9511 -9631 -9700 0
-18179 -9511 -9629 -9702 0
-18179 -9511 -9627 -9704 0
-18179 -9511 -9625 -9706 0
-18179 -9511 -9623 -9708 0
-18179 -9511 -9621 -9710 0
-18179 -9511 -9619 -9712 0
-18179 -9511 -9617 -9714 0
-18179 -9511 -9616 -9716 0
18179 9716 0
18179 9616 9714 0
18179 9617 9712 0
18179 9619 9710 0
18179 9621 9708 0
18179 9623 9706 0
18179 9625 9704 0
18179 9627 9702 0
18179 9629 9700 0
18179 9631 9698 0
18179 9633 9696 0
18179 9635 9694 0
18179 9637 9692 0
18179 9639 9690 0
18179 9641 9688 0
18179 9643 9686 0
18179 9645 9684 0
18179 9647 9682 0
18179 9649 9680 0
18179 9651 9678 0
18179 9653 9676 0
18179 9655 9674 0
18179 9657 9672 0
18179 9659 9670 0
18179 9661 9668 0
18179 9663 9667 0
18179 9665 0
18179 9511 9714 0
18179 9511 9616 9712 0
18179 9511 9617 9710 0
18179 9511 9619 9708 0
18179 9511 9621 9706 0
18179 9511 9623 9704 0
18179 9511 9625 9702 0
18179 9511 9627 9700 0
18179 9511 9629 9698 0
18179 9511 9631 9696 0
18179 9511 9633 9694 0
18179 9511 9635 9692 0
18179 9511 9637 9690 0
18179 9511 9639 9688 0
18179 9511 9641 9686 0
18179 9511 9643 9684 0
18179 9511 9645 9682 0
18179 9511 9647 9680 0
18179 9511 9649 9678 0
18179 9511 9651 9676 0
18179 9511 9653 9674 0
18179 9511 9655 9672 0
18179 9511 9657 9670 0
18179 9511 9659 9668 0
18179 9511 9661 9667 0
18179 9511 9663 0
18179 9511 9665 0
18179 9512 9712 0
18179 9512 9616 9710 0
18179 9512 9617 9708 0
18179 9512 9619 9706 0
18179 9512 9621 9704 0
18179 9512 9623 9702 0
18179 9512 9625 9700 0
18179 9512 9627 9698 0
18179 9512 9629 9696 0
18179 9512 9631 9694 0
18179 9512 9633 9692 0
18179 9512 9635 9690 0
18179 9512 9637 9688 0
18179 9512 9639 9686 0
18179 9512 9641 9684 0
18179 9512 9643 9682 0
18179 9512 9645 9680 0
18179 9512 9647 9678 0
18179 9512 9649 9676 0
18179 9512 9651 9674 0
18179 9512 9653 9672 0
18179 9512 9655 9670 0
18179 9512 9657 9668 0
18179 9512 9659 9667 0
18179 9512 9661 0
18179 9512 9663 0
18179 9512 9665 0
18179 9514 9710 0
18179 9514 9616 9708 0
18179 9514 9617 9706 0
18179 9514 9619 9704 0
18179 9514 9621 9702 0
18179 9514 9623 9700 0
18179 9514 9625 9698 0
18179 9514 9627 9696 0
18179 9514 9629 9694 0
18179 9514 9631 9692 0
18179 9514 9633 9690 0
18179 9514 9635 9688 0
18179 9514 9637 9686 0
18179 9514 9639 9684 0
18179 9514 9641 9682 0
18179 9514 9643 9680 0
18179 9514 9645 9678 0
18179 9514 9647 9676 0
18179 9514 9649 9674 0
18179 9514 9651 9672 0
18179 9514 9653 9670 0
18179 9514 9655 9668 0
18179 9514 9657 9667 0
18179 9514 9659 0
18179 9514 9661 0
18179 9514 9663 0
18179 9514 9665 0
18179 9516 9708 0
18179 9516 9616 9706 0
18179 9516 9617 9704 0
18179 9516 9619 9702 0
18179 9516 9621 9700 0
18179 9516 9623 9698 0
18179 9516 9625 9696 0
18179 9516 9627 9694 0
18179 9516 9629 9692 0
18179 9516 9631 9690 0
18179 9516 9633 9688 0
18179 9516 9635 9686 0
18179 9516 9637 9684 0
18179 9516 9639 9682 0
18179 9516 9641 9680 0
18179 9516 9643 9678 0
18179 9516 9645 9676 0
18179 9516 9647 9674 0
18179 9516 9649 9672 0
18179 9516 9651 9670 0
18179 9516 9653 9668 0
18179 9516 9655 9667 0
18179 9516 9657 0
18179 9516 9659 0
18179 9516 9661 0
18179 9516 9663 0
18179 9516 9665 0
18179 9518 9706 0
18179 9518 9616 9704 0
18179 9518 9617 9702 0
18179 9518 9619 9700 0
18179 9518 9621 9698 0
18179 9518 9623 9696 0
18179 9518 9625 9694 0
18179 9518 9627 9692 0
18179 9518 9629 9690 0
18179 9518 9631 9688 0
18179 9518 9633 9686 0
18179 9518 9635 9684 0
18179 9518 9637 9682 0
18179 9518 9639 9680 0
18179 9518 9641 9678 0
18179 9518 9643 9676 0
18179 9518 9645 9674 0
18179 9518 9647 9672 0
18179 9518 9649 9670 0
18179 9518 9651 9668 0
18179 9518 9653 9667 0
18179 9518 9655 0
18179 9518 9657 0
18179 9518 9659 0
18179 9518 9661 0
18179 9518 9663 0
18179 9518 9665 0
18179 9520 9704 0
18179 9520 9616 9702 0
18179 9520 9617 9700 0
18179 9520 9619 9698 0
18179 9520 9621 9696 0
18179 9520 9623 9694 0
18179 9520 9625 9692 0
18179 9520 9627 9690 0
18179 9520 9629 9688 0
18179 9520 9631 9686 0
18179 9520 9633 9684 0
18179 9520 9635 9682 0
18179 9520 9637 9680 0
18179 9520 9639 9678 0
18179 9520 9641 9676 0
18179 9520 9643 9674 0
18179 9520 9645 9672 0
18179 9520 9647 9670 0
18179 9520 9649 9668 0
18179 9520 9651 9667 0
18179 9520 9653 0
18179 9520 9655 0
18179 9520 9657 0
18179 9520 9659 0
18179 9520 9661 0
18179 9520 9663 0
18179 9520 9665 0
18179 9522 9702 0
18179 9522 9616 9700 0
18179 9522 9617 9698 0
18179 9522 9619 9696 0
18179 9522 9621 9694 0
18179 9522 9623 9692 0
18179 9522 9625 9690 0
18179 9522 9627 9688 0
18179 9522 9629 9686 0
18179 9522 9631 9684 0
18179 9522 9633 9682 0
18179 9522 9635 9680 0
18179 9522 9637 9678 0
18179 9522 9639 9676 0
18179 9522 9641 9674 0
18179 9522 9643 9672 0
18179 9522 9645 9670 0
18179 9522 9647 9668 0
18179 9522 9649 9667 0
18179 9522 9651 0
18179 9522 9653 0
18179 9522 9655 0
18179 9522 9657 0
18179 9522 9659 0
18179 9522 9661 0
18179 9522 9663 0
18179 9522 9665 0
18179 9524 9700 0
18179 9524 9616 9698 0
18179 9524 9617 9696 0
18179 9524 9619 9694 0
18179 9524 9621 9692 0
18179 9524 9623 9690 0
18179 9524 9625 9688 0
18179 9524 9627 9686 0
18179 9524 9629 9684 0
18179 9524 9631 9682 0
18179 9524 9633 9680 0
18179 9524 9635 9678 0
18179 9524 9637 9676 0
18179 9524 9639 9674 0
18179 9524 9641 9672 0
18179 9524 9643 9670 0
18179 9524 9645 9668 0
18179 9524 9647 9667 0
18179 9524 9649 0
18179 9524 9651 0
18179 9524 9653 0
18179 9524 9655 0
18179 9524 9657 0
18179 9524 9659 0
18179 9524 9661 0
18179 9524 9663 0
18179 9524 9665 0
18179 9526 9698 0
18179 9526 9616 9696 0
18179 9526 9617 9694 0
18179 9526 9619 9692 0
18179 9526 9621 9690 0
18179 9526 9623 9688 0
18179 9526 9625 9686 0
18179 9526 9627 9684 0
18179 9526 9629 9682 0
18179 9526 9631 9680 0
18179 9526 9633 9678 0
18179 9526 9635 9676 0
18179 9526 9637 9674 0
18179 9526 9639 9672 0
18179 9526 9641 9670 0
18179 9526 9643 9668 0
18179 9526 9645 9667 0
18179 9526 9647 0
18179 9526 9649 0
18179 9526 9651 0
18179 9526 9653 0
18179 9526 9655 0
18179 9526 9657 0
18179 9526 9659 0
18179 9526 9661 0
18179 9526 9663 0
18179 9526 9665 0
18179 9528 9696 0
18179 9528 9616 9694 0
18179 9528 9617 9692 0
18179 9528 9619 9690 0
18179 9528 9621 9688 0
18179 9528 9623 9686 0
18179 9528 9625 9684 0
18179 9528 9627 9682 0
18179 9528 9629 9680 0
18179 9528 9631 9678 0
18179 9528 9633 9676 0
18179 9528 9635 9674 0
18179 9528 9637 9672 0
18179 9528 9639 9670 0
18179 9528 9641 9668 0
18179 9528 9643 9667 0
18179 9528 9645 0
18179 9528 9647 0
18179 9528 9649 0
18179 9528 9651 0
18179 9528 9653 0
18179 9528 9655 0
18179 9528 9657 0
18179 9528 9659 0
18179 9528 9661 0
18179 9528 9663 0
18179 9528 9665 0
18179 9530 9694 0
18179 9530 9616 9692 0
18179 9530 9617 9690 0
18179 9530 9619 9688 0
18179 9530 9621 9686 0
18179 9530 9623 9684 0
18179 9530 9625 9682 0
18179 9530 9627 9680 0
18179 9530 9629 9678 0
18179 9530 9631 9676 0
18179 9530 9633 9674 0
18179 9530 9635 9672 0
18179 9530 9637 9670 0
18179 9530 9639 9668 0
18179 9530 9641 9667 0
18179 9530 9643 0
18179 9530 9645 0
18179 9530 9647 0
18179 9530 9649 0
18179 9530 9651 0
18179 9530 9653 0
18179 9530 9655 0
18179 9530 9657 0
18179 9530 9659 0
18179 9530 9661 0
18179 9530 9663 0
18179 9530 9665 0
18179 9532 9692 0
18179 9532 9616 9690 0
18179 9532 9617 9688 0
18179 9532 9619 9686 0
18179 9532 9621 9684 0
18179 9532 9623 9682 0
18179 9532 9625 9680 0
18179 9532 9627 9678 0
18179 9532 9629 9676 0
18179 9532 9631 9674 0
18179 9532 9633 9672 0
18179 9532 9635 9670 0
18179 9532 9637 9668 0
18179 9532 9639 9667 0
18179 9532 9641 0
18179 9532 9643 0
18179 9532 9645 0
18179 9532 9647 0
18179 9532 9649 0
18179 9532 9651 0
18179 9532 9653 0
18179 9532 9655 0
18179 9532 9657 0
18179 9532 9659 0
18179 9532 9661 0
18179 9532 9663 0
18179 9532 9665 0
18179 9534 9690 0
18179 9534 9616 9688 0
18179 9534 9617 9686 0
18179 9534 9619 9684 0
18179 9534 9621 9682 0
18179 9534 9623 9680 0
18179 9534 9625 9678 0
18179 9534 9627 9676 0
18179 9534 9629 9674 0
18179 9534 9631 9672 0
18179 9534 9633 9670 0
18179 9534 9635 9668 0
18179 9534 9637 9667 0
18179 9534 9639 0
18179 9534 9641 0
18179 9534 9643 0
18179 9534 9645 0
18179 9534 9647 0
18179 9534 9649 0
18179 9534 9651 0
18179 9534 9653 0
18179 9534 9655 0
18179 9534 9657 0
18179 9534 9659 0
18179 9534 9661 0
18179 9534 9663 0
18179 9534 9665 0
18179 9536 9688 0
18179 9536 9616 9686 0
18179 9536 9617 9684 0
18179 9536 9619 9682 0
18179 9536 9621 9680 0
18179 9536 9623 9678 0
18179 9536 9625 9676 0
18179 9536 9627 9674 0
18179 9536 9629 9672 0
18179 9536 9631 9670 0
18179 9536 9633 9668 0
18179 9536 9635 9667 0
18179 9536 9637 0
18179 9536 9639 0
18179 9536 9641 0
18179 9536 9643 0
18179 9536 9645 0
18179 9536 9647 0
18179 9536 9649 0
18179 9536 9651 0
18179 9536 9653 0
18179 9536 9655 0
18179 9536 9657 0
18179 9536 9659 0
18179 9536 9661 0
18179 9536 9663 0
18179 9536 9665 0
18179 9538 9686 0
18179 9538 9616 9684 0
18179 9538 9617 9682 0
18179 9538 9619 9680 0
18179 9538 9621 9678 0
18179 9538 9623 9676 0
18179 9538 9625 9674 0
18179 9538 9627 9672 0
18179 9538 9629 9670 0
18179 9538 9631 9668 0
18179 9538 9633 9667 0
18179 9538 9635 0
18179 9538 9637 0
18179 9538 9639 0
18179 9538 9641 0
18179 9538 9643 0
18179 9538 9645 0
18179 9538 9647 0
18179 9538 9649 0
18179 9538 9651 0
18179 9538 9653 0
18179 9538 9655 0
18179 9538 9657 0
18179 9538 9659 0
18179 9538 9661 0
18179 9538 9663 0
18179 9538 9665 0
18179 9540 9684 0
18179 9540 9616 9682 0
18179 9540 9617 9680 0
18179 9540 9619 9678 0
18179 9540 9621 9676 0
18179 9540 9623 9674 0
18179 9540 9625 9672 0
18179 9540 9627 9670 0
18179 9540 9629 9668 0
18179 9540 9631 9667 0
18179 9540 9633 0
18179 9540 9635 0
18179 9540 9637 0
18179 9540 9639 0
18179 9540 9641 0
18179 9540 9643 0
18179 9540 9645 0
18179 9540 9647 0
18179 9540 9649 0
18179 9540 9651 0
18179 9540 9653 0
18179 9540 9655 0
18179 9540 9657 0
18179 9540 9659 0
18179 9540 9661 0
18179 9540 9663 0
18179 9540 9665 0
18179 9542 9682 0
18179 9542 9616 9680 0
18179 9542 9617 9678 0
18179 9542 9619 9676 0
18179 9542 9621 9674 0
18179 9542 9623 9672 0
18179 9542 9625 9670 0
18179 9542 9627 9668 0
18179 9542 9629 9667 0
18179 9542 9631 0
18179 9542 9633 0
18179 9542 9635 0
18179 9542 9637 0
18179 9542 9639 0
18179 9542 9641 0
18179 9542 9643 0
18179 9542 9645 0
18179 9542 9647 0
18179 9542 9649 0
18179 9542 9651 0
18179 9542 9653 0
18179 9542 9655 0
18179 9542 9657 0
18179 9542 9659 0
18179 9542 9661 0
18179 9542 9663 0
18179 9542 9665 0
18179 9544 9680 0
18179 9544 9616 9678 0
18179 9544 9617 9676 0
18179 9544 9619 9674 0
18179 9544 9621 9672 0
18179 9544 9623 9670 0
18179 9544 9625 9668 0
18179 9544 9627 9667 0
18179 9544 9629 0
18179 9544 9631 0
18179 9544 9633 0
18179 9544 9635 0
18179 9544 9637 0
18179 9544 9639 0
18179 9544 9641 0
18179 9544 9643 0
18179 9544 9645 0
18179 9544 9647 0
18179 9544 9649 0
18179 9544 9651 0
18179 9544 9653 0
18179 9544 9655 0
18179 9544 9657 0
18179 9544 9659 0
18179 9544 9661 0
18179 9544 9663 0
18179 9544 9665 0
c (((aux409 + aux412 + aux413)<=10)=tv=SATLiteral(18180))
-18180 9946 0
-18180 9876 9944 0
-18180 9877 9942 0
-18180 9879 9940 0
-18180 9881 9938 0
-18180 9883 9936 0
-18180 9885 9934 0
-18180 9887 9932 0
-18180 9889 9930 0
-18180 9891 9928 0
-18180 9893 9927 0
-18180 9895 0
-18180 9897 0
-18180 9899 0
-18180 9901 0
-18180 9903 0
-18180 9905 0
-18180 9907 0
-18180 9909 0
-18180 9911 0
-18180 9913 0
-18180 9915 0
-18180 9917 0
-18180 9919 0
-18180 9921 0
-18180 9923 0
-18180 9925 0
-18180 9771 9944 0
-18180 9771 9876 9942 0
-18180 9771 9877 9940 0
-18180 9771 9879 9938 0
-18180 9771 9881 9936 0
-18180 9771 9883 9934 0
-18180 9771 9885 9932 0
-18180 9771 9887 9930 0
-18180 9771 9889 9928 0
-18180 9771 9891 9927 0
-18180 9771 9893 0
-18180 9771 9895 0
-18180 9771 9897 0
-18180 9771 9899 0
-18180 9771 9901 0
-18180 9771 9903 0
-18180 9771 9905 0
-18180 9771 9907 0
-18180 9771 9909 0
-18180 9771 9911 0
-18180 9771 9913 0
-18180 9771 9915 0
-18180 9771 9917 0
-18180 9771 9919 0
-18180 9771 9921 0
-18180 9771 9923 0
-18180 9771 9925 0
-18180 9772 9942 0
-18180 9772 9876 9940 0
-18180 9772 9877 9938 0
-18180 9772 9879 9936 0
-18180 9772 9881 9934 0
-18180 9772 9883 9932 0
-18180 9772 9885 9930 0
-18180 9772 9887 9928 0
-18180 9772 9889 9927 0
-18180 9772 9891 0
-18180 9772 9893 0
-18180 9772 9895 0
-18180 9772 9897 0
-18180 9772 9899 0
-18180 9772 9901 0
-18180 9772 9903 0
-18180 9772 9905 0
-18180 9772 9907 0
-18180 9772 9909 0
-18180 9772 9911 0
-18180 9772 9913 0
-18180 9772 9915 0
-18180 9772 9917 0
-18180 9772 9919 0
-18180 9772 9921 0
-18180 9772 9923 0
-18180 9772 9925 0
-18180 9774 9940 0
-18180 9774 9876 9938 0
-18180 9774 9877 9936 0
-18180 9774 9879 9934 0
-18180 9774 9881 9932 0
-18180 9774 9883 9930 0
-18180 9774 9885 9928 0
-18180 9774 9887 9927 0
-18180 9774 9889 0
-18180 9774 9891 0
-18180 9774 9893 0
-18180 9774 9895 0
-18180 9774 9897 0
-18180 9774 9899 0
-18180 9774 9901 0
-18180 9774 9903 0
-18180 9774 9905 0
-18180 9774 9907 0
-18180 9774 9909 0
-18180 9774 9911 0
-18180 9774 9913 0
-18180 9774 9915 0
-18180 9774 9917 0
-18180 9774 9919 0
-18180 9774 9921 0
-18180 9774 9923 0
-18180 9774 9925 0
-18180 9776 9938 0
-18180 9776 9876 9936 0
-18180 9776 9877 9934 0
-18180 9776 9879 9932 0
-18180 9776 9881 9930 0
-18180 9776 9883 9928 0
-18180 9776 9885 9927 0
-18180 9776 9887 0
-18180 9776 9889 0
-18180 9776 9891 0
-18180 9776 9893 0
-18180 9776 9895 0
-18180 9776 9897 0
-18180 9776 9899 0
-18180 9776 9901 0
-18180 9776 9903 0
-18180 9776 9905 0
-18180 9776 9907 0
-18180 9776 9909 0
-18180 9776 9911 0
-18180 9776 9913 0
-18180 9776 9915 0
-18180 9776 9917 0
-18180 9776 9919 0
-18180 9776 9921 0
-18180 9776 9923 0
-18180 9776 9925 0
-18180 9778 9936 0
-18180 9778 9876 9934 0
-18180 9778 9877 9932 0
-18180 9778 9879 9930 0
-18180 9778 9881 9928 0
-18180 9778 9883 9927 0
-18180 9778 9885 0
-18180 9778 9887 0
-18180 9778 9889 0
-18180 9778 9891 0
-18180 9778 9893 0
-18180 9778 9895 0
-18180 9778 9897 0
-18180 9778 9899 0
-18180 9778 9901 0
-18180 9778 9903 0
-18180 9778 9905 0
-18180 9778 9907 0
-18180 9778 9909 0
-18180 9778 9911 0
-18180 9778 9913 0
-18180 9778 9915 0
-18180 9778 9917 0
-18180 9778 9919 0
-18180 9778 9921 0
-18180 9778 9923 0
-18180 9778 9925 0
-18180 9780 9934 0
-18180 9780 9876 9932 0
-18180 9780 9877 9930 0
-18180 9780 9879 9928 0
-18180 9780 9881 9927 0
-18180 9780 9883 0
-18180 9780 9885 0
-18180 9780 9887 0
-18180 9780 9889 0
-18180 9780 9891 0
-18180 9780 9893 0
-18180 9780 9895 0
-18180 9780 9897 0
-18180 9780 9899 0
-18180 9780 9901 0
-18180 9780 9903 0
-18180 9780 9905 0
-18180 9780 9907 0
-18180 9780 9909 0
-18180 9780 9911 0
-18180 9780 9913 0
-18180 9780 9915 0
-18180 9780 9917 0
-18180 9780 9919 0
-18180 9780 9921 0
-18180 9780 9923 0
-18180 9780 9925 0
-18180 9782 9932 0
-18180 9782 9876 9930 0
-18180 9782 9877 9928 0
-18180 9782 9879 9927 0
-18180 9782 9881 0
-18180 9782 9883 0
-18180 9782 9885 0
-18180 9782 9887 0
-18180 9782 9889 0
-18180 9782 9891 0
-18180 9782 9893 0
-18180 9782 9895 0
-18180 9782 9897 0
-18180 9782 9899 0
-18180 9782 9901 0
-18180 9782 9903 0
-18180 9782 9905 0
-18180 9782 9907 0
-18180 9782 9909 0
-18180 9782 9911 0
-18180 9782 9913 0
-18180 9782 9915 0
-18180 9782 9917 0
-18180 9782 9919 0
-18180 9782 9921 0
-18180 9782 9923 0
-18180 9782 9925 0
-18180 9784 9930 0
-18180 9784 9876 9928 0
-18180 9784 9877 9927 0
-18180 9784 9879 0
-18180 9784 9881 0
-18180 9784 9883 0
-18180 9784 9885 0
-18180 9784 9887 0
-18180 9784 9889 0
-18180 9784 9891 0
-18180 9784 9893 0
-18180 9784 9895 0
-18180 9784 9897 0
-18180 9784 9899 0
-18180 9784 9901 0
-18180 9784 9903 0
-18180 9784 9905 0
-18180 9784 9907 0
-18180 9784 9909 0
-18180 9784 9911 0
-18180 9784 9913 0
-18180 9784 9915 0
-18180 9784 9917 0
-18180 9784 9919 0
-18180 9784 9921 0
-18180 9784 9923 0
-18180 9784 9925 0
-18180 9786 9928 0
-18180 9786 9876 9927 0
-18180 9786 9877 0
-18180 9786 9879 0
-18180 9786 9881 0
-18180 9786 9883 0
-18180 9786 9885 0
-18180 9786 9887 0
-18180 9786 9889 0
-18180 9786 9891 0
-18180 9786 9893 0
-18180 9786 9895 0
-18180 9786 9897 0
-18180 9786 9899 0
-18180 9786 9901 0
-18180 9786 9903 0
-18180 9786 9905 0
-18180 9786 9907 0
-18180 9786 9909 0
-18180 9786 9911 0
-18180 9786 9913 0
-18180 9786 9915 0
-18180 9786 9917 0
-18180 9786 9919 0
-18180 9786 9921 0
-18180 9786 9923 0
-18180 9786 9925 0
-18180 9788 9927 0
-18180 9788 9876 0
-18180 9788 9877 0
-18180 9788 9879 0
-18180 9788 9881 0
-18180 9788 9883 0
-18180 9788 9885 0
-18180 9788 9887 0
-18180 9788 9889 0
-18180 9788 9891 0
-18180 9788 9893 0
-18180 9788 9895 0
-18180 9788 9897 0
-18180 9788 9899 0
-18180 9788 9901 0
-18180 9788 9903 0
-18180 9788 9905 0
-18180 9788 9907 0
-18180 9788 9909 0
-18180 9788 9911 0
-18180 9788 9913 0
-18180 9788 9915 0
-18180 9788 9917 0
-18180 9788 9919 0
-18180 9788 9921 0
-18180 9788 9923 0
-18180 9788 9925 0
-18180 9790 0
-18180 9790 9876 0
-18180 9790 9877 0
-18180 9790 9879 0
-18180 9790 9881 0
-18180 9790 9883 0
-18180 9790 9885 0
-18180 9790 9887 0
-18180 9790 9889 0
-18180 9790 9891 0
-18180 9790 9893 0
-18180 9790 9895 0
-18180 9790 9897 0
-18180 9790 9899 0
-18180 9790 9901 0
-18180 9790 9903 0
-18180 9790 9905 0
-18180 9790 9907 0
-18180 9790 9909 0
-18180 9790 9911 0
-18180 9790 9913 0
-18180 9790 9915 0
-18180 9790 9917 0
-18180 9790 9919 0
-18180 9790 9921 0
-18180 9790 9923 0
-18180 9790 9925 0
-18180 9792 0
-18180 9792 9876 0
-18180 9792 9877 0
-18180 9792 9879 0
-18180 9792 9881 0
-18180 9792 9883 0
-18180 9792 9885 0
-18180 9792 9887 0
-18180 9792 9889 0
-18180 9792 9891 0
-18180 9792 9893 0
-18180 9792 9895 0
-18180 9792 9897 0
-18180 9792 9899 0
-18180 9792 9901 0
-18180 9792 9903 0
-18180 9792 9905 0
-18180 9792 9907 0
-18180 9792 9909 0
-18180 9792 9911 0
-18180 9792 9913 0
-18180 9792 9915 0
-18180 9792 9917 0
-18180 9792 9919 0
-18180 9792 9921 0
-18180 9792 9923 0
-18180 9792 9925 0
-18180 9794 0
-18180 9794 9876 0
-18180 9794 9877 0
-18180 9794 9879 0
-18180 9794 9881 0
-18180 9794 9883 0
-18180 9794 9885 0
-18180 9794 9887 0
-18180 9794 9889 0
-18180 9794 9891 0
-18180 9794 9893 0
-18180 9794 9895 0
-18180 9794 9897 0
-18180 9794 9899 0
-18180 9794 9901 0
-18180 9794 9903 0
-18180 9794 9905 0
-18180 9794 9907 0
-18180 9794 9909 0
-18180 9794 9911 0
-18180 9794 9913 0
-18180 9794 9915 0
-18180 9794 9917 0
-18180 9794 9919 0
-18180 9794 9921 0
-18180 9794 9923 0
-18180 9794 9925 0
-18180 9796 0
-18180 9796 9876 0
-18180 9796 9877 0
-18180 9796 9879 0
-18180 9796 9881 0
-18180 9796 9883 0
-18180 9796 9885 0
-18180 9796 9887 0
-18180 9796 9889 0
-18180 9796 9891 0
-18180 9796 9893 0
-18180 9796 9895 0
-18180 9796 9897 0
-18180 9796 9899 0
-18180 9796 9901 0
-18180 9796 9903 0
-18180 9796 9905 0
-18180 9796 9907 0
-18180 9796 9909 0
-18180 9796 9911 0
-18180 9796 9913 0
-18180 9796 9915 0
-18180 9796 9917 0
-18180 9796 9919 0
-18180 9796 9921 0
-18180 9796 9923 0
-18180 9796 9925 0
-18180 9798 0
-18180 9798 9876 0
-18180 9798 9877 0
-18180 9798 9879 0
-18180 9798 9881 0
-18180 9798 9883 0
-18180 9798 9885 0
-18180 9798 9887 0
-18180 9798 9889 0
-18180 9798 9891 0
-18180 9798 9893 0
-18180 9798 9895 0
-18180 9798 9897 0
-18180 9798 9899 0
-18180 9798 9901 0
-18180 9798 9903 0
-18180 9798 9905 0
-18180 9798 9907 0
-18180 9798 9909 0
-18180 9798 9911 0
-18180 9798 9913 0
-18180 9798 9915 0
-18180 9798 9917 0
-18180 9798 9919 0
-18180 9798 9921 0
-18180 9798 9923 0
-18180 9798 9925 0
-18180 9800 0
-18180 9800 9876 0
-18180 9800 9877 0
-18180 9800 9879 0
-18180 9800 9881 0
-18180 9800 9883 0
-18180 9800 9885 0
-18180 9800 9887 0
-18180 9800 9889 0
-18180 9800 9891 0
-18180 9800 9893 0
-18180 9800 9895 0
-18180 9800 9897 0
-18180 9800 9899 0
-18180 9800 9901 0
-18180 9800 9903 0
-18180 9800 9905 0
-18180 9800 9907 0
-18180 9800 9909 0
-18180 9800 9911 0
-18180 9800 9913 0
-18180 9800 9915 0
-18180 9800 9917 0
-18180 9800 9919 0
-18180 9800 9921 0
-18180 9800 9923 0
-18180 9800 9925 0
-18180 9802 0
-18180 9802 9876 0
-18180 9802 9877 0
-18180 9802 9879 0
-18180 9802 9881 0
-18180 9802 9883 0
-18180 9802 9885 0
-18180 9802 9887 0
-18180 9802 9889 0
-18180 9802 9891 0
-18180 9802 9893 0
-18180 9802 9895 0
-18180 9802 9897 0
-18180 9802 9899 0
-18180 9802 9901 0
-18180 9802 9903 0
-18180 9802 9905 0
-18180 9802 9907 0
-18180 9802 9909 0
-18180 9802 9911 0
-18180 9802 9913 0
-18180 9802 9915 0
-18180 9802 9917 0
-18180 9802 9919 0
-18180 9802 9921 0
-18180 9802 9923 0
-18180 9802 9925 0
-18180 9804 0
-18180 9804 9876 0
-18180 9804 9877 0
-18180 9804 9879 0
-18180 9804 9881 0
-18180 9804 9883 0
-18180 9804 9885 0
-18180 9804 9887 0
-18180 9804 9889 0
-18180 9804 9891 0
-18180 9804 9893 0
-18180 9804 9895 0
-18180 9804 9897 0
-18180 9804 9899 0
-18180 9804 9901 0
-18180 9804 9903 0
-18180 9804 9905 0
-18180 9804 9907 0
-18180 9804 9909 0
-18180 9804 9911 0
-18180 9804 9913 0
-18180 9804 9915 0
-18180 9804 9917 0
-18180 9804 9919 0
-18180 9804 9921 0
-18180 9804 9923 0
-18180 9804 9925 0
18180 -9790 -9876 -9927 0
18180 -9788 -9877 -9927 0
18180 -9788 -9876 -9928 0
18180 -9786 -9879 -9927 0
18180 -9786 -9877 -9928 0
18180 -9786 -9876 -9930 0
18180 -9784 -9881 -9927 0
18180 -9784 -9879 -9928 0
18180 -9784 -9877 -9930 0
18180 -9784 -9876 -9932 0
18180 -9782 -9883 -9927 0
18180 -9782 -9881 -9928 0
18180 -9782 -9879 -9930 0
18180 -9782 -9877 -9932 0
18180 -9782 -9876 -9934 0
18180 -9780 -9885 -9927 0
18180 -9780 -9883 -9928 0
18180 -9780 -9881 -9930 0
18180 -9780 -9879 -9932 0
18180 -9780 -9877 -9934 0
18180 -9780 -9876 -9936 0
18180 -9778 -9887 -9927 0
18180 -9778 -9885 -9928 0
18180 -9778 -9883 -9930 0
18180 -9778 -9881 -9932 0
18180 -9778 -9879 -9934 0
18180 -9778 -9877 -9936 0
18180 -9778 -9876 -9938 0
18180 -9776 -9889 -9927 0
18180 -9776 -9887 -9928 0
18180 -9776 -9885 -9930 0
18180 -9776 -9883 -9932 0
18180 -9776 -9881 -9934 0
18180 -9776 -9879 -9936 0
18180 -9776 -9877 -9938 0
18180 -9776 -9876 -9940 0
18180 -9774 -9891 -9927 0
18180 -9774 -9889 -9928 0
18180 -9774 -9887 -9930 0
18180 -9774 -9885 -9932 0
18180 -9774 -9883 -9934 0
18180 -9774 -9881 -9936 0
18180 -9774 -9879 -9938 0
18180 -9774 -9877 -9940 0
18180 -9774 -9876 -9942 0
18180 -9772 -9893 -9927 0
18180 -9772 -9891 -9928 0
18180 -9772 -9889 -9930 0
18180 -9772 -9887 -9932 0
18180 -9772 -9885 -9934 0
18180 -9772 -9883 -9936 0
18180 -9772 -9881 -9938 0
18180 -9772 -9879 -9940 0
18180 -9772 -9877 -9942 0
18180 -9772 -9876 -9944 0
18180 -9771 -9895 -9927 0
18180 -9771 -9893 -9928 0
18180 -9771 -9891 -9930 0
18180 -9771 -9889 -9932 0
18180 -9771 -9887 -9934 0
18180 -9771 -9885 -9936 0
18180 -9771 -9883 -9938 0
18180 -9771 -9881 -9940 0
18180 -9771 -9879 -9942 0
18180 -9771 -9877 -9944 0
18180 -9771 -9876 -9946 0
c ((10<=(aux409 + aux412 + aux413))=tv=SATLiteral(18181))
-18181 -9788 -9876 -9927 0
-18181 -9786 -9877 -9927 0
-18181 -9786 -9876 -9928 0
-18181 -9784 -9879 -9927 0
-18181 -9784 -9877 -9928 0
-18181 -9784 -9876 -9930 0
-18181 -9782 -9881 -9927 0
-18181 -9782 -9879 -9928 0
-18181 -9782 -9877 -9930 0
-18181 -9782 -9876 -9932 0
-18181 -9780 -9883 -9927 0
-18181 -9780 -9881 -9928 0
-18181 -9780 -9879 -9930 0
-18181 -9780 -9877 -9932 0
-18181 -9780 -9876 -9934 0
-18181 -9778 -9885 -9927 0
-18181 -9778 -9883 -9928 0
-18181 -9778 -9881 -9930 0
-18181 -9778 -9879 -9932 0
-18181 -9778 -9877 -9934 0
-18181 -9778 -9876 -9936 0
-18181 -9776 -9887 -9927 0
-18181 -9776 -9885 -9928 0
-18181 -9776 -9883 -9930 0
-18181 -9776 -9881 -9932 0
-18181 -9776 -9879 -9934 0
-18181 -9776 -9877 -9936 0
-18181 -9776 -9876 -9938 0
-18181 -9774 -9889 -9927 0
-18181 -9774 -9887 -9928 0
-18181 -9774 -9885 -9930 0
-18181 -9774 -9883 -9932 0
-18181 -9774 -9881 -9934 0
-18181 -9774 -9879 -9936 0
-18181 -9774 -9877 -9938 0
-18181 -9774 -9876 -9940 0
-18181 -9772 -9891 -9927 0
-18181 -9772 -9889 -9928 0
-18181 -9772 -9887 -9930 0
-18181 -9772 -9885 -9932 0
-18181 -9772 -9883 -9934 0
-18181 -9772 -9881 -9936 0
-18181 -9772 -9879 -9938 0
-18181 -9772 -9877 -9940 0
-18181 -9772 -9876 -9942 0
-18181 -9771 -9893 -9927 0
-18181 -9771 -9891 -9928 0
-18181 -9771 -9889 -9930 0
-18181 -9771 -9887 -9932 0
-18181 -9771 -9885 -9934 0
-18181 -9771 -9883 -9936 0
-18181 -9771 -9881 -9938 0
-18181 -9771 -9879 -9940 0
-18181 -9771 -9877 -9942 0
-18181 -9771 -9876 -9944 0
18181 9944 0
18181 9876 9942 0
18181 9877 9940 0
18181 9879 9938 0
18181 9881 9936 0
18181 9883 9934 0
18181 9885 9932 0
18181 9887 9930 0
18181 9889 9928 0
18181 9891 9927 0
18181 9893 0
18181 9895 0
18181 9897 0
18181 9899 0
18181 9901 0
18181 9903 0
18181 9905 0
18181 9907 0
18181 9909 0
18181 9911 0
18181 9913 0
18181 9915 0
18181 9917 0
18181 9919 0
18181 9921 0
18181 9923 0
18181 9925 0
18181 9771 9942 0
18181 9771 9876 9940 0
18181 9771 9877 9938 0
18181 9771 9879 9936 0
18181 9771 9881 9934 0
18181 9771 9883 9932 0
18181 9771 9885 9930 0
18181 9771 9887 9928 0
18181 9771 9889 9927 0
18181 9771 9891 0
18181 9771 9893 0
18181 9771 9895 0
18181 9771 9897 0
18181 9771 9899 0
18181 9771 9901 0
18181 9771 9903 0
18181 9771 9905 0
18181 9771 9907 0
18181 9771 9909 0
18181 9771 9911 0
18181 9771 9913 0
18181 9771 9915 0
18181 9771 9917 0
18181 9771 9919 0
18181 9771 9921 0
18181 9771 9923 0
18181 9771 9925 0
18181 9772 9940 0
18181 9772 9876 9938 0
18181 9772 9877 9936 0
18181 9772 9879 9934 0
18181 9772 9881 9932 0
18181 9772 9883 9930 0
18181 9772 9885 9928 0
18181 9772 9887 9927 0
18181 9772 9889 0
18181 9772 9891 0
18181 9772 9893 0
18181 9772 9895 0
18181 9772 9897 0
18181 9772 9899 0
18181 9772 9901 0
18181 9772 9903 0
18181 9772 9905 0
18181 9772 9907 0
18181 9772 9909 0
18181 9772 9911 0
18181 9772 9913 0
18181 9772 9915 0
18181 9772 9917 0
18181 9772 9919 0
18181 9772 9921 0
18181 9772 9923 0
18181 9772 9925 0
18181 9774 9938 0
18181 9774 9876 9936 0
18181 9774 9877 9934 0
18181 9774 9879 9932 0
18181 9774 9881 9930 0
18181 9774 9883 9928 0
18181 9774 9885 9927 0
18181 9774 9887 0
18181 9774 9889 0
18181 9774 9891 0
18181 9774 9893 0
18181 9774 9895 0
18181 9774 9897 0
18181 9774 9899 0
18181 9774 9901 0
18181 9774 9903 0
18181 9774 9905 0
18181 9774 9907 0
18181 9774 9909 0
18181 9774 9911 0
18181 9774 9913 0
18181 9774 9915 0
18181 9774 9917 0
18181 9774 9919 0
18181 9774 9921 0
18181 9774 9923 0
18181 9774 9925 0
18181 9776 9936 0
18181 9776 9876 9934 0
18181 9776 9877 9932 0
18181 9776 9879 9930 0
18181 9776 9881 9928 0
18181 9776 9883 9927 0
18181 9776 9885 0
18181 9776 9887 0
18181 9776 9889 0
18181 9776 9891 0
18181 9776 9893 0
18181 9776 9895 0
18181 9776 9897 0
18181 9776 9899 0
18181 9776 9901 0
18181 9776 9903 0
18181 9776 9905 0
18181 9776 9907 0
18181 9776 9909 0
18181 9776 9911 0
18181 9776 9913 0
18181 9776 9915 0
18181 9776 9917 0
18181 9776 9919 0
18181 9776 9921 0
18181 9776 9923 0
18181 9776 9925 0
18181 9778 9934 0
18181 9778 9876 9932 0
18181 9778 9877 9930 0
18181 9778 9879 9928 0
18181 9778 9881 9927 0
18181 9778 9883 0
18181 9778 9885 0
18181 9778 9887 0
18181 9778 9889 0
18181 9778 9891 0
18181 9778 9893 0
18181 9778 9895 0
18181 9778 9897 0
18181 9778 9899 0
18181 9778 9901 0
18181 9778 9903 0
18181 9778 9905 0
18181 9778 9907 0
18181 9778 9909 0
18181 9778 9911 0
18181 9778 9913 0
18181 9778 9915 0
18181 9778 9917 0
18181 9778 9919 0
18181 9778 9921 0
18181 9778 9923 0
18181 9778 9925 0
18181 9780 9932 0
18181 9780 9876 9930 0
18181 9780 9877 9928 0
18181 9780 9879 9927 0
18181 9780 9881 0
18181 9780 9883 0
18181 9780 9885 0
18181 9780 9887 0
18181 9780 9889 0
18181 9780 9891 0
18181 9780 9893 0
18181 9780 9895 0
18181 9780 9897 0
18181 9780 9899 0
18181 9780 9901 0
18181 9780 9903 0
18181 9780 9905 0
18181 9780 9907 0
18181 9780 9909 0
18181 9780 9911 0
18181 9780 9913 0
18181 9780 9915 0
18181 9780 9917 0
18181 9780 9919 0
18181 9780 9921 0
18181 9780 9923 0
18181 9780 9925 0
18181 9782 9930 0
18181 9782 9876 9928 0
18181 9782 9877 9927 0
18181 9782 9879 0
18181 9782 9881 0
18181 9782 9883 0
18181 9782 9885 0
18181 9782 9887 0
18181 9782 9889 0
18181 9782 9891 0
18181 9782 9893 0
18181 9782 9895 0
18181 9782 9897 0
18181 9782 9899 0
18181 9782 9901 0
18181 9782 9903 0
18181 9782 9905 0
18181 9782 9907 0
18181 9782 9909 0
18181 9782 9911 0
18181 9782 9913 0
18181 9782 9915 0
18181 9782 9917 0
18181 9782 9919 0
18181 9782 9921 0
18181 9782 9923 0
18181 9782 9925 0
18181 9784 9928 0
18181 9784 9876 9927 0
18181 9784 9877 0
18181 9784 9879 0
18181 9784 9881 0
18181 9784 9883 0
18181 9784 9885 0
18181 9784 9887 0
18181 9784 9889 0
18181 9784 9891 0
18181 9784 9893 0
18181 9784 9895 0
18181 9784 9897 0
18181 9784 9899 0
18181 9784 9901 0
18181 9784 9903 0
18181 9784 9905 0
18181 9784 9907 0
18181 9784 9909 0
18181 9784 9911 0
18181 9784 9913 0
18181 9784 9915 0
18181 9784 9917 0
18181 9784 9919 0
18181 9784 9921 0
18181 9784 9923 0
18181 9784 9925 0
18181 9786 9927 0
18181 9786 9876 0
18181 9786 9877 0
18181 9786 9879 0
18181 9786 9881 0
18181 9786 9883 0
18181 9786 9885 0
18181 9786 9887 0
18181 9786 9889 0
18181 9786 9891 0
18181 9786 9893 0
18181 9786 9895 0
18181 9786 9897 0
18181 9786 9899 0
18181 9786 9901 0
18181 9786 9903 0
18181 9786 9905 0
18181 9786 9907 0
18181 9786 9909 0
18181 9786 9911 0
18181 9786 9913 0
18181 9786 9915 0
18181 9786 9917 0
18181 9786 9919 0
18181 9786 9921 0
18181 9786 9923 0
18181 9786 9925 0
18181 9788 0
18181 9788 9876 0
18181 9788 9877 0
18181 9788 9879 0
18181 9788 9881 0
18181 9788 9883 0
18181 9788 9885 0
18181 9788 9887 0
18181 9788 9889 0
18181 9788 9891 0
18181 9788 9893 0
18181 9788 9895 0
18181 9788 9897 0
18181 9788 9899 0
18181 9788 9901 0
18181 9788 9903 0
18181 9788 9905 0
18181 9788 9907 0
18181 9788 9909 0
18181 9788 9911 0
18181 9788 9913 0
18181 9788 9915 0
18181 9788 9917 0
18181 9788 9919 0
18181 9788 9921 0
18181 9788 9923 0
18181 9788 9925 0
18181 9790 0
18181 9790 9876 0
18181 9790 9877 0
18181 9790 9879 0
18181 9790 9881 0
18181 9790 9883 0
18181 9790 9885 0
18181 9790 9887 0
18181 9790 9889 0
18181 9790 9891 0
18181 9790 9893 0
18181 9790 9895 0
18181 9790 9897 0
18181 9790 9899 0
18181 9790 9901 0
18181 9790 9903 0
18181 9790 9905 0
18181 9790 9907 0
18181 9790 9909 0
18181 9790 9911 0
18181 9790 9913 0
18181 9790 9915 0
18181 9790 9917 0
18181 9790 9919 0
18181 9790 9921 0
18181 9790 9923 0
18181 9790 9925 0
18181 9792 0
18181 9792 9876 0
18181 9792 9877 0
18181 9792 9879 0
18181 9792 9881 0
18181 9792 9883 0
18181 9792 9885 0
18181 9792 9887 0
18181 9792 9889 0
18181 9792 9891 0
18181 9792 9893 0
18181 9792 9895 0
18181 9792 9897 0
18181 9792 9899 0
18181 9792 9901 0
18181 9792 9903 0
18181 9792 9905 0
18181 9792 9907 0
18181 9792 9909 0
18181 9792 9911 0
18181 9792 9913 0
18181 9792 9915 0
18181 9792 9917 0
18181 9792 9919 0
18181 9792 9921 0
18181 9792 9923 0
18181 9792 9925 0
18181 9794 0
18181 9794 9876 0
18181 9794 9877 0
18181 9794 9879 0
18181 9794 9881 0
18181 9794 9883 0
18181 9794 9885 0
18181 9794 9887 0
18181 9794 9889 0
18181 9794 9891 0
18181 9794 9893 0
18181 9794 9895 0
18181 9794 9897 0
18181 9794 9899 0
18181 9794 9901 0
18181 9794 9903 0
18181 9794 9905 0
18181 9794 9907 0
18181 9794 9909 0
18181 9794 9911 0
18181 9794 9913 0
18181 9794 9915 0
18181 9794 9917 0
18181 9794 9919 0
18181 9794 9921 0
18181 9794 9923 0
18181 9794 9925 0
18181 9796 0
18181 9796 9876 0
18181 9796 9877 0
18181 9796 9879 0
18181 9796 9881 0
18181 9796 9883 0
18181 9796 9885 0
18181 9796 9887 0
18181 9796 9889 0
18181 9796 9891 0
18181 9796 9893 0
18181 9796 9895 0
18181 9796 9897 0
18181 9796 9899 0
18181 9796 9901 0
18181 9796 9903 0
18181 9796 9905 0
18181 9796 9907 0
18181 9796 9909 0
18181 9796 9911 0
18181 9796 9913 0
18181 9796 9915 0
18181 9796 9917 0
18181 9796 9919 0
18181 9796 9921 0
18181 9796 9923 0
18181 9796 9925 0
18181 9798 0
18181 9798 9876 0
18181 9798 9877 0
18181 9798 9879 0
18181 9798 9881 0
18181 9798 9883 0
18181 9798 9885 0
18181 9798 9887 0
18181 9798 9889 0
18181 9798 9891 0
18181 9798 9893 0
18181 9798 9895 0
18181 9798 9897 0
18181 9798 9899 0
18181 9798 9901 0
18181 9798 9903 0
18181 9798 9905 0
18181 9798 9907 0
18181 9798 9909 0
18181 9798 9911 0
18181 9798 9913 0
18181 9798 9915 0
18181 9798 9917 0
18181 9798 9919 0
18181 9798 9921 0
18181 9798 9923 0
18181 9798 9925 0
18181 9800 0
18181 9800 9876 0
18181 9800 9877 0
18181 9800 9879 0
18181 9800 9881 0
18181 9800 9883 0
18181 9800 9885 0
18181 9800 9887 0
18181 9800 9889 0
18181 9800 9891 0
18181 9800 9893 0
18181 9800 9895 0
18181 9800 9897 0
18181 9800 9899 0
18181 9800 9901 0
18181 9800 9903 0
18181 9800 9905 0
18181 9800 9907 0
18181 9800 9909 0
18181 9800 9911 0
18181 9800 9913 0
18181 9800 9915 0
18181 9800 9917 0
18181 9800 9919 0
18181 9800 9921 0
18181 9800 9923 0
18181 9800 9925 0
18181 9802 0
18181 9802 9876 0
18181 9802 9877 0
18181 9802 9879 0
18181 9802 9881 0
18181 9802 9883 0
18181 9802 9885 0
18181 9802 9887 0
18181 9802 9889 0
18181 9802 9891 0
18181 9802 9893 0
18181 9802 9895 0
18181 9802 9897 0
18181 9802 9899 0
18181 9802 9901 0
18181 9802 9903 0
18181 9802 9905 0
18181 9802 9907 0
18181 9802 9909 0
18181 9802 9911 0
18181 9802 9913 0
18181 9802 9915 0
18181 9802 9917 0
18181 9802 9919 0
18181 9802 9921 0
18181 9802 9923 0
18181 9802 9925 0
18181 9804 0
18181 9804 9876 0
18181 9804 9877 0
18181 9804 9879 0
18181 9804 9881 0
18181 9804 9883 0
18181 9804 9885 0
18181 9804 9887 0
18181 9804 9889 0
18181 9804 9891 0
18181 9804 9893 0
18181 9804 9895 0
18181 9804 9897 0
18181 9804 9899 0
18181 9804 9901 0
18181 9804 9903 0
18181 9804 9905 0
18181 9804 9907 0
18181 9804 9909 0
18181 9804 9911 0
18181 9804 9913 0
18181 9804 9915 0
18181 9804 9917 0
18181 9804 9919 0
18181 9804 9921 0
18181 9804 9923 0
18181 9804 9925 0
c (((aux415 + aux418 + aux419)<=20)=tv=SATLiteral(18182))
-18182 10226 0
-18182 10136 10224 0
-18182 10137 10222 0
-18182 10139 10220 0
-18182 10141 10218 0
-18182 10143 10216 0
-18182 10145 10214 0
-18182 10147 10212 0
-18182 10149 10210 0
-18182 10151 10208 0
-18182 10153 10206 0
-18182 10155 10204 0
-18182 10157 10202 0
-18182 10159 10200 0
-18182 10161 10198 0
-18182 10163 10196 0
-18182 10165 10194 0
-18182 10167 10192 0
-18182 10169 10190 0
-18182 10171 10188 0
-18182 10173 10187 0
-18182 10175 0
-18182 10177 0
-18182 10179 0
-18182 10181 0
-18182 10183 0
-18182 10185 0
-18182 10031 10224 0
-18182 10031 10136 10222 0
-18182 10031 10137 10220 0
-18182 10031 10139 10218 0
-18182 10031 10141 10216 0
-18182 10031 10143 10214 0
-18182 10031 10145 10212 0
-18182 10031 10147 10210 0
-18182 10031 10149 10208 0
-18182 10031 10151 10206 0
-18182 10031 10153 10204 0
-18182 10031 10155 10202 0
-18182 10031 10157 10200 0
-18182 10031 10159 10198 0
-18182 10031 10161 10196 0
-18182 10031 10163 10194 0
-18182 10031 10165 10192 0
-18182 10031 10167 10190 0
-18182 10031 10169 10188 0
-18182 10031 10171 10187 0
-18182 10031 10173 0
-18182 10031 10175 0
-18182 10031 10177 0
-18182 10031 10179 0
-18182 10031 10181 0
-18182 10031 10183 0
-18182 10031 10185 0
-18182 10032 10222 0
-18182 10032 10136 10220 0
-18182 10032 10137 10218 0
-18182 10032 10139 10216 0
-18182 10032 10141 10214 0
-18182 10032 10143 10212 0
-18182 10032 10145 10210 0
-18182 10032 10147 10208 0
-18182 10032 10149 10206 0
-18182 10032 10151 10204 0
-18182 10032 10153 10202 0
-18182 10032 10155 10200 0
-18182 10032 10157 10198 0
-18182 10032 10159 10196 0
-18182 10032 10161 10194 0
-18182 10032 10163 10192 0
-18182 10032 10165 10190 0
-18182 10032 10167 10188 0
-18182 10032 10169 10187 0
-18182 10032 10171 0
-18182 10032 10173 0
-18182 10032 10175 0
-18182 10032 10177 0
-18182 10032 10179 0
-18182 10032 10181 0
-18182 10032 10183 0
-18182 10032 10185 0
-18182 10034 10220 0
-18182 10034 10136 10218 0
-18182 10034 10137 10216 0
-18182 10034 10139 10214 0
-18182 10034 10141 10212 0
-18182 10034 10143 10210 0
-18182 10034 10145 10208 0
-18182 10034 10147 10206 0
-18182 10034 10149 10204 0
-18182 10034 10151 10202 0
-18182 10034 10153 10200 0
-18182 10034 10155 10198 0
-18182 10034 10157 10196 0
-18182 10034 10159 10194 0
-18182 10034 10161 10192 0
-18182 10034 10163 10190 0
-18182 10034 10165 10188 0
-18182 10034 10167 10187 0
-18182 10034 10169 0
-18182 10034 10171 0
-18182 10034 10173 0
-18182 10034 10175 0
-18182 10034 10177 0
-18182 10034 10179 0
-18182 10034 10181 0
-18182 10034 10183 0
-18182 10034 10185 0
-18182 10036 10218 0
-18182 10036 10136 10216 0
-18182 10036 10137 10214 0
-18182 10036 10139 10212 0
-18182 10036 10141 10210 0
-18182 10036 10143 10208 0
-18182 10036 10145 10206 0
-18182 10036 10147 10204 0
-18182 10036 10149 10202 0
-18182 10036 10151 10200 0
-18182 10036 10153 10198 0
-18182 10036 10155 10196 0
-18182 10036 10157 10194 0
-18182 10036 10159 10192 0
-18182 10036 10161 10190 0
-18182 10036 10163 10188 0
-18182 10036 10165 10187 0
-18182 10036 10167 0
-18182 10036 10169 0
-18182 10036 10171 0
-18182 10036 10173 0
-18182 10036 10175 0
-18182 10036 10177 0
-18182 10036 10179 0
-18182 10036 10181 0
-18182 10036 10183 0
-18182 10036 10185 0
-18182 10038 10216 0
-18182 10038 10136 10214 0
-18182 10038 10137 10212 0
-18182 10038 10139 10210 0
-18182 10038 10141 10208 0
-18182 10038 10143 10206 0
-18182 10038 10145 10204 0
-18182 10038 10147 10202 0
-18182 10038 10149 10200 0
-18182 10038 10151 10198 0
-18182 10038 10153 10196 0
-18182 10038 10155 10194 0
-18182 10038 10157 10192 0
-18182 10038 10159 10190 0
-18182 10038 10161 10188 0
-18182 10038 10163 10187 0
-18182 10038 10165 0
-18182 10038 10167 0
-18182 10038 10169 0
-18182 10038 10171 0
-18182 10038 10173 0
-18182 10038 10175 0
-18182 10038 10177 0
-18182 10038 10179 0
-18182 10038 10181 0
-18182 10038 10183 0
-18182 10038 10185 0
-18182 10040 10214 0
-18182 10040 10136 10212 0
-18182 10040 10137 10210 0
-18182 10040 10139 10208 0
-18182 10040 10141 10206 0
-18182 10040 10143 10204 0
-18182 10040 10145 10202 0
-18182 10040 10147 10200 0
-18182 10040 10149 10198 0
-18182 10040 10151 10196 0
-18182 10040 10153 10194 0
-18182 10040 10155 10192 0
-18182 10040 10157 10190 0
-18182 10040 10159 10188 0
-18182 10040 10161 10187 0
-18182 10040 10163 0
-18182 10040 10165 0
-18182 10040 10167 0
-18182 10040 10169 0
-18182 10040 10171 0
-18182 10040 10173 0
-18182 10040 10175 0
-18182 10040 10177 0
-18182 10040 10179 0
-18182 10040 10181 0
-18182 10040 10183 0
-18182 10040 10185 0
-18182 10042 10212 0
-18182 10042 10136 10210 0
-18182 10042 10137 10208 0
-18182 10042 10139 10206 0
-18182 10042 10141 10204 0
-18182 10042 10143 10202 0
-18182 10042 10145 10200 0
-18182 10042 10147 10198 0
-18182 10042 10149 10196 0
-18182 10042 10151 10194 0
-18182 10042 10153 10192 0
-18182 10042 10155 10190 0
-18182 10042 10157 10188 0
-18182 10042 10159 10187 0
-18182 10042 10161 0
-18182 10042 10163 0
-18182 10042 10165 0
-18182 10042 10167 0
-18182 10042 10169 0
-18182 10042 10171 0
-18182 10042 10173 0
-18182 10042 10175 0
-18182 10042 10177 0
-18182 10042 10179 0
-18182 10042 10181 0
-18182 10042 10183 0
-18182 10042 10185 0
-18182 10044 10210 0
-18182 10044 10136 10208 0
-18182 10044 10137 10206 0
-18182 10044 10139 10204 0
-18182 10044 10141 10202 0
-18182 10044 10143 10200 0
-18182 10044 10145 10198 0
-18182 10044 10147 10196 0
-18182 10044 10149 10194 0
-18182 10044 10151 10192 0
-18182 10044 10153 10190 0
-18182 10044 10155 10188 0
-18182 10044 10157 10187 0
-18182 10044 10159 0
-18182 10044 10161 0
-18182 10044 10163 0
-18182 10044 10165 0
-18182 10044 10167 0
-18182 10044 10169 0
-18182 10044 10171 0
-18182 10044 10173 0
-18182 10044 10175 0
-18182 10044 10177 0
-18182 10044 10179 0
-18182 10044 10181 0
-18182 10044 10183 0
-18182 10044 10185 0
-18182 10046 10208 0
-18182 10046 10136 10206 0
-18182 10046 10137 10204 0
-18182 10046 10139 10202 0
-18182 10046 10141 10200 0
-18182 10046 10143 10198 0
-18182 10046 10145 10196 0
-18182 10046 10147 10194 0
-18182 10046 10149 10192 0
-18182 10046 10151 10190 0
-18182 10046 10153 10188 0
-18182 10046 10155 10187 0
-18182 10046 10157 0
-18182 10046 10159 0
-18182 10046 10161 0
-18182 10046 10163 0
-18182 10046 10165 0
-18182 10046 10167 0
-18182 10046 10169 0
-18182 10046 10171 0
-18182 10046 10173 0
-18182 10046 10175 0
-18182 10046 10177 0
-18182 10046 10179 0
-18182 10046 10181 0
-18182 10046 10183 0
-18182 10046 10185 0
-18182 10048 10206 0
-18182 10048 10136 10204 0
-18182 10048 10137 10202 0
-18182 10048 10139 10200 0
-18182 10048 10141 10198 0
-18182 10048 10143 10196 0
-18182 10048 10145 10194 0
-18182 10048 10147 10192 0
-18182 10048 10149 10190 0
-18182 10048 10151 10188 0
-18182 10048 10153 10187 0
-18182 10048 10155 0
-18182 10048 10157 0
-18182 10048 10159 0
-18182 10048 10161 0
-18182 10048 10163 0
-18182 10048 10165 0
-18182 10048 10167 0
-18182 10048 10169 0
-18182 10048 10171 0
-18182 10048 10173 0
-18182 10048 10175 0
-18182 10048 10177 0
-18182 10048 10179 0
-18182 10048 10181 0
-18182 10048 10183 0
-18182 10048 10185 0
-18182 10050 10204 0
-18182 10050 10136 10202 0
-18182 10050 10137 10200 0
-18182 10050 10139 10198 0
-18182 10050 10141 10196 0
-18182 10050 10143 10194 0
-18182 10050 10145 10192 0
-18182 10050 10147 10190 0
-18182 10050 10149 10188 0
-18182 10050 10151 10187 0
-18182 10050 10153 0
-18182 10050 10155 0
-18182 10050 10157 0
-18182 10050 10159 0
-18182 10050 10161 0
-18182 10050 10163 0
-18182 10050 10165 0
-18182 10050 10167 0
-18182 10050 10169 0
-18182 10050 10171 0
-18182 10050 10173 0
-18182 10050 10175 0
-18182 10050 10177 0
-18182 10050 10179 0
-18182 10050 10181 0
-18182 10050 10183 0
-18182 10050 10185 0
-18182 10052 10202 0
-18182 10052 10136 10200 0
-18182 10052 10137 10198 0
-18182 10052 10139 10196 0
-18182 10052 10141 10194 0
-18182 10052 10143 10192 0
-18182 10052 10145 10190 0
-18182 10052 10147 10188 0
-18182 10052 10149 10187 0
-18182 10052 10151 0
-18182 10052 10153 0
-18182 10052 10155 0
-18182 10052 10157 0
-18182 10052 10159 0
-18182 10052 10161 0
-18182 10052 10163 0
-18182 10052 10165 0
-18182 10052 10167 0
-18182 10052 10169 0
-18182 10052 10171 0
-18182 10052 10173 0
-18182 10052 10175 0
-18182 10052 10177 0
-18182 10052 10179 0
-18182 10052 10181 0
-18182 10052 10183 0
-18182 10052 10185 0
-18182 10054 10200 0
-18182 10054 10136 10198 0
-18182 10054 10137 10196 0
-18182 10054 10139 10194 0
-18182 10054 10141 10192 0
-18182 10054 10143 10190 0
-18182 10054 10145 10188 0
-18182 10054 10147 10187 0
-18182 10054 10149 0
-18182 10054 10151 0
-18182 10054 10153 0
-18182 10054 10155 0
-18182 10054 10157 0
-18182 10054 10159 0
-18182 10054 10161 0
-18182 10054 10163 0
-18182 10054 10165 0
-18182 10054 10167 0
-18182 10054 10169 0
-18182 10054 10171 0
-18182 10054 10173 0
-18182 10054 10175 0
-18182 10054 10177 0
-18182 10054 10179 0
-18182 10054 10181 0
-18182 10054 10183 0
-18182 10054 10185 0
-18182 10056 10198 0
-18182 10056 10136 10196 0
-18182 10056 10137 10194 0
-18182 10056 10139 10192 0
-18182 10056 10141 10190 0
-18182 10056 10143 10188 0
-18182 10056 10145 10187 0
-18182 10056 10147 0
-18182 10056 10149 0
-18182 10056 10151 0
-18182 10056 10153 0
-18182 10056 10155 0
-18182 10056 10157 0
-18182 10056 10159 0
-18182 10056 10161 0
-18182 10056 10163 0
-18182 10056 10165 0
-18182 10056 10167 0
-18182 10056 10169 0
-18182 10056 10171 0
-18182 10056 10173 0
-18182 10056 10175 0
-18182 10056 10177 0
-18182 10056 10179 0
-18182 10056 10181 0
-18182 10056 10183 0
-18182 10056 10185 0
-18182 10058 10196 0
-18182 10058 10136 10194 0
-18182 10058 10137 10192 0
-18182 10058 10139 10190 0
-18182 10058 10141 10188 0
-18182 10058 10143 10187 0
-18182 10058 10145 0
-18182 10058 10147 0
-18182 10058 10149 0
-18182 10058 10151 0
-18182 10058 10153 0
-18182 10058 10155 0
-18182 10058 10157 0
-18182 10058 10159 0
-18182 10058 10161 0
-18182 10058 10163 0
-18182 10058 10165 0
-18182 10058 10167 0
-18182 10058 10169 0
-18182 10058 10171 0
-18182 10058 10173 0
-18182 10058 10175 0
-18182 10058 10177 0
-18182 10058 10179 0
-18182 10058 10181 0
-18182 10058 10183 0
-18182 10058 10185 0
-18182 10060 10194 0
-18182 10060 10136 10192 0
-18182 10060 10137 10190 0
-18182 10060 10139 10188 0
-18182 10060 10141 10187 0
-18182 10060 10143 0
-18182 10060 10145 0
-18182 10060 10147 0
-18182 10060 10149 0
-18182 10060 10151 0
-18182 10060 10153 0
-18182 10060 10155 0
-18182 10060 10157 0
-18182 10060 10159 0
-18182 10060 10161 0
-18182 10060 10163 0
-18182 10060 10165 0
-18182 10060 10167 0
-18182 10060 10169 0
-18182 10060 10171 0
-18182 10060 10173 0
-18182 10060 10175 0
-18182 10060 10177 0
-18182 10060 10179 0
-18182 10060 10181 0
-18182 10060 10183 0
-18182 10060 10185 0
-18182 10062 10192 0
-18182 10062 10136 10190 0
-18182 10062 10137 10188 0
-18182 10062 10139 10187 0
-18182 10062 10141 0
-18182 10062 10143 0
-18182 10062 10145 0
-18182 10062 10147 0
-18182 10062 10149 0
-18182 10062 10151 0
-18182 10062 10153 0
-18182 10062 10155 0
-18182 10062 10157 0
-18182 10062 10159 0
-18182 10062 10161 0
-18182 10062 10163 0
-18182 10062 10165 0
-18182 10062 10167 0
-18182 10062 10169 0
-18182 10062 10171 0
-18182 10062 10173 0
-18182 10062 10175 0
-18182 10062 10177 0
-18182 10062 10179 0
-18182 10062 10181 0
-18182 10062 10183 0
-18182 10062 10185 0
-18182 10064 10190 0
-18182 10064 10136 10188 0
-18182 10064 10137 10187 0
-18182 10064 10139 0
-18182 10064 10141 0
-18182 10064 10143 0
-18182 10064 10145 0
-18182 10064 10147 0
-18182 10064 10149 0
-18182 10064 10151 0
-18182 10064 10153 0
-18182 10064 10155 0
-18182 10064 10157 0
-18182 10064 10159 0
-18182 10064 10161 0
-18182 10064 10163 0
-18182 10064 10165 0
-18182 10064 10167 0
-18182 10064 10169 0
-18182 10064 10171 0
-18182 10064 10173 0
-18182 10064 10175 0
-18182 10064 10177 0
-18182 10064 10179 0
-18182 10064 10181 0
-18182 10064 10183 0
-18182 10064 10185 0
18182 -10139 -10187 0
18182 -10137 -10188 0
18182 -10136 -10190 0
18182 -10064 -10141 -10187 0
18182 -10064 -10139 -10188 0
18182 -10064 -10137 -10190 0
18182 -10064 -10136 -10192 0
18182 -10062 -10143 -10187 0
18182 -10062 -10141 -10188 0
18182 -10062 -10139 -10190 0
18182 -10062 -10137 -10192 0
18182 -10062 -10136 -10194 0
18182 -10060 -10145 -10187 0
18182 -10060 -10143 -10188 0
18182 -10060 -10141 -10190 0
18182 -10060 -10139 -10192 0
18182 -10060 -10137 -10194 0
18182 -10060 -10136 -10196 0
18182 -10058 -10147 -10187 0
18182 -10058 -10145 -10188 0
18182 -10058 -10143 -10190 0
18182 -10058 -10141 -10192 0
18182 -10058 -10139 -10194 0
18182 -10058 -10137 -10196 0
18182 -10058 -10136 -10198 0
18182 -10056 -10149 -10187 0
18182 -10056 -10147 -10188 0
18182 -10056 -10145 -10190 0
18182 -10056 -10143 -10192 0
18182 -10056 -10141 -10194 0
18182 -10056 -10139 -10196 0
18182 -10056 -10137 -10198 0
18182 -10056 -10136 -10200 0
18182 -10054 -10151 -10187 0
18182 -10054 -10149 -10188 0
18182 -10054 -10147 -10190 0
18182 -10054 -10145 -10192 0
18182 -10054 -10143 -10194 0
18182 -10054 -10141 -10196 0
18182 -10054 -10139 -10198 0
18182 -10054 -10137 -10200 0
18182 -10054 -10136 -10202 0
18182 -10052 -10153 -10187 0
18182 -10052 -10151 -10188 0
18182 -10052 -10149 -10190 0
18182 -10052 -10147 -10192 0
18182 -10052 -10145 -10194 0
18182 -10052 -10143 -10196 0
18182 -10052 -10141 -10198 0
18182 -10052 -10139 -10200 0
18182 -10052 -10137 -10202 0
18182 -10052 -10136 -10204 0
18182 -10050 -10155 -10187 0
18182 -10050 -10153 -10188 0
18182 -10050 -10151 -10190 0
18182 -10050 -10149 -10192 0
18182 -10050 -10147 -10194 0
18182 -10050 -10145 -10196 0
18182 -10050 -10143 -10198 0
18182 -10050 -10141 -10200 0
18182 -10050 -10139 -10202 0
18182 -10050 -10137 -10204 0
18182 -10050 -10136 -10206 0
18182 -10048 -10157 -10187 0
18182 -10048 -10155 -10188 0
18182 -10048 -10153 -10190 0
18182 -10048 -10151 -10192 0
18182 -10048 -10149 -10194 0
18182 -10048 -10147 -10196 0
18182 -10048 -10145 -10198 0
18182 -10048 -10143 -10200 0
18182 -10048 -10141 -10202 0
18182 -10048 -10139 -10204 0
18182 -10048 -10137 -10206 0
18182 -10048 -10136 -10208 0
18182 -10046 -10159 -10187 0
18182 -10046 -10157 -10188 0
18182 -10046 -10155 -10190 0
18182 -10046 -10153 -10192 0
18182 -10046 -10151 -10194 0
18182 -10046 -10149 -10196 0
18182 -10046 -10147 -10198 0
18182 -10046 -10145 -10200 0
18182 -10046 -10143 -10202 0
18182 -10046 -10141 -10204 0
18182 -10046 -10139 -10206 0
18182 -10046 -10137 -10208 0
18182 -10046 -10136 -10210 0
18182 -10044 -10161 -10187 0
18182 -10044 -10159 -10188 0
18182 -10044 -10157 -10190 0
18182 -10044 -10155 -10192 0
18182 -10044 -10153 -10194 0
18182 -10044 -10151 -10196 0
18182 -10044 -10149 -10198 0
18182 -10044 -10147 -10200 0
18182 -10044 -10145 -10202 0
18182 -10044 -10143 -10204 0
18182 -10044 -10141 -10206 0
18182 -10044 -10139 -10208 0
18182 -10044 -10137 -10210 0
18182 -10044 -10136 -10212 0
18182 -10042 -10163 -10187 0
18182 -10042 -10161 -10188 0
18182 -10042 -10159 -10190 0
18182 -10042 -10157 -10192 0
18182 -10042 -10155 -10194 0
18182 -10042 -10153 -10196 0
18182 -10042 -10151 -10198 0
18182 -10042 -10149 -10200 0
18182 -10042 -10147 -10202 0
18182 -10042 -10145 -10204 0
18182 -10042 -10143 -10206 0
18182 -10042 -10141 -10208 0
18182 -10042 -10139 -10210 0
18182 -10042 -10137 -10212 0
18182 -10042 -10136 -10214 0
18182 -10040 -10165 -10187 0
18182 -10040 -10163 -10188 0
18182 -10040 -10161 -10190 0
18182 -10040 -10159 -10192 0
18182 -10040 -10157 -10194 0
18182 -10040 -10155 -10196 0
18182 -10040 -10153 -10198 0
18182 -10040 -10151 -10200 0
18182 -10040 -10149 -10202 0
18182 -10040 -10147 -10204 0
18182 -10040 -10145 -10206 0
18182 -10040 -10143 -10208 0
18182 -10040 -10141 -10210 0
18182 -10040 -10139 -10212 0
18182 -10040 -10137 -10214 0
18182 -10040 -10136 -10216 0
18182 -10038 -10167 -10187 0
18182 -10038 -10165 -10188 0
18182 -10038 -10163 -10190 0
18182 -10038 -10161 -10192 0
18182 -10038 -10159 -10194 0
18182 -10038 -10157 -10196 0
18182 -10038 -10155 -10198 0
18182 -10038 -10153 -10200 0
18182 -10038 -10151 -10202 0
18182 -10038 -10149 -10204 0
18182 -10038 -10147 -10206 0
18182 -10038 -10145 -10208 0
18182 -10038 -10143 -10210 0
18182 -10038 -10141 -10212 0
18182 -10038 -10139 -10214 0
18182 -10038 -10137 -10216 0
18182 -10038 -10136 -10218 0
18182 -10036 -10169 -10187 0
18182 -10036 -10167 -10188 0
18182 -10036 -10165 -10190 0
18182 -10036 -10163 -10192 0
18182 -10036 -10161 -10194 0
18182 -10036 -10159 -10196 0
18182 -10036 -10157 -10198 0
18182 -10036 -10155 -10200 0
18182 -10036 -10153 -10202 0
18182 -10036 -10151 -10204 0
18182 -10036 -10149 -10206 0
18182 -10036 -10147 -10208 0
18182 -10036 -10145 -10210 0
18182 -10036 -10143 -10212 0
18182 -10036 -10141 -10214 0
18182 -10036 -10139 -10216 0
18182 -10036 -10137 -10218 0
18182 -10036 -10136 -10220 0
18182 -10034 -10171 -10187 0
18182 -10034 -10169 -10188 0
18182 -10034 -10167 -10190 0
18182 -10034 -10165 -10192 0
18182 -10034 -10163 -10194 0
18182 -10034 -10161 -10196 0
18182 -10034 -10159 -10198 0
18182 -10034 -10157 -10200 0
18182 -10034 -10155 -10202 0
18182 -10034 -10153 -10204 0
18182 -10034 -10151 -10206 0
18182 -10034 -10149 -10208 0
18182 -10034 -10147 -10210 0
18182 -10034 -10145 -10212 0
18182 -10034 -10143 -10214 0
18182 -10034 -10141 -10216 0
18182 -10034 -10139 -10218 0
18182 -10034 -10137 -10220 0
18182 -10034 -10136 -10222 0
18182 -10032 -10173 -10187 0
18182 -10032 -10171 -10188 0
18182 -10032 -10169 -10190 0
18182 -10032 -10167 -10192 0
18182 -10032 -10165 -10194 0
18182 -10032 -10163 -10196 0
18182 -10032 -10161 -10198 0
18182 -10032 -10159 -10200 0
18182 -10032 -10157 -10202 0
18182 -10032 -10155 -10204 0
18182 -10032 -10153 -10206 0
18182 -10032 -10151 -10208 0
18182 -10032 -10149 -10210 0
18182 -10032 -10147 -10212 0
18182 -10032 -10145 -10214 0
18182 -10032 -10143 -10216 0
18182 -10032 -10141 -10218 0
18182 -10032 -10139 -10220 0
18182 -10032 -10137 -10222 0
18182 -10032 -10136 -10224 0
18182 -10031 -10175 -10187 0
18182 -10031 -10173 -10188 0
18182 -10031 -10171 -10190 0
18182 -10031 -10169 -10192 0
18182 -10031 -10167 -10194 0
18182 -10031 -10165 -10196 0
18182 -10031 -10163 -10198 0
18182 -10031 -10161 -10200 0
18182 -10031 -10159 -10202 0
18182 -10031 -10157 -10204 0
18182 -10031 -10155 -10206 0
18182 -10031 -10153 -10208 0
18182 -10031 -10151 -10210 0
18182 -10031 -10149 -10212 0
18182 -10031 -10147 -10214 0
18182 -10031 -10145 -10216 0
18182 -10031 -10143 -10218 0
18182 -10031 -10141 -10220 0
18182 -10031 -10139 -10222 0
18182 -10031 -10137 -10224 0
18182 -10031 -10136 -10226 0
c ((20<=(aux415 + aux418 + aux419))=tv=SATLiteral(18183))
-18183 -10137 -10187 0
-18183 -10136 -10188 0
-18183 -10064 -10139 -10187 0
-18183 -10064 -10137 -10188 0
-18183 -10064 -10136 -10190 0
-18183 -10062 -10141 -10187 0
-18183 -10062 -10139 -10188 0
-18183 -10062 -10137 -10190 0
-18183 -10062 -10136 -10192 0
-18183 -10060 -10143 -10187 0
-18183 -10060 -10141 -10188 0
-18183 -10060 -10139 -10190 0
-18183 -10060 -10137 -10192 0
-18183 -10060 -10136 -10194 0
-18183 -10058 -10145 -10187 0
-18183 -10058 -10143 -10188 0
-18183 -10058 -10141 -10190 0
-18183 -10058 -10139 -10192 0
-18183 -10058 -10137 -10194 0
-18183 -10058 -10136 -10196 0
-18183 -10056 -10147 -10187 0
-18183 -10056 -10145 -10188 0
-18183 -10056 -10143 -10190 0
-18183 -10056 -10141 -10192 0
-18183 -10056 -10139 -10194 0
-18183 -10056 -10137 -10196 0
-18183 -10056 -10136 -10198 0
-18183 -10054 -10149 -10187 0
-18183 -10054 -10147 -10188 0
-18183 -10054 -10145 -10190 0
-18183 -10054 -10143 -10192 0
-18183 -10054 -10141 -10194 0
-18183 -10054 -10139 -10196 0
-18183 -10054 -10137 -10198 0
-18183 -10054 -10136 -10200 0
-18183 -10052 -10151 -10187 0
-18183 -10052 -10149 -10188 0
-18183 -10052 -10147 -10190 0
-18183 -10052 -10145 -10192 0
-18183 -10052 -10143 -10194 0
-18183 -10052 -10141 -10196 0
-18183 -10052 -10139 -10198 0
-18183 -10052 -10137 -10200 0
-18183 -10052 -10136 -10202 0
-18183 -10050 -10153 -10187 0
-18183 -10050 -10151 -10188 0
-18183 -10050 -10149 -10190 0
-18183 -10050 -10147 -10192 0
-18183 -10050 -10145 -10194 0
-18183 -10050 -10143 -10196 0
-18183 -10050 -10141 -10198 0
-18183 -10050 -10139 -10200 0
-18183 -10050 -10137 -10202 0
-18183 -10050 -10136 -10204 0
-18183 -10048 -10155 -10187 0
-18183 -10048 -10153 -10188 0
-18183 -10048 -10151 -10190 0
-18183 -10048 -10149 -10192 0
-18183 -10048 -10147 -10194 0
-18183 -10048 -10145 -10196 0
-18183 -10048 -10143 -10198 0
-18183 -10048 -10141 -10200 0
-18183 -10048 -10139 -10202 0
-18183 -10048 -10137 -10204 0
-18183 -10048 -10136 -10206 0
-18183 -10046 -10157 -10187 0
-18183 -10046 -10155 -10188 0
-18183 -10046 -10153 -10190 0
-18183 -10046 -10151 -10192 0
-18183 -10046 -10149 -10194 0
-18183 -10046 -10147 -10196 0
-18183 -10046 -10145 -10198 0
-18183 -10046 -10143 -10200 0
-18183 -10046 -10141 -10202 0
-18183 -10046 -10139 -10204 0
-18183 -10046 -10137 -10206 0
-18183 -10046 -10136 -10208 0
-18183 -10044 -10159 -10187 0
-18183 -10044 -10157 -10188 0
-18183 -10044 -10155 -10190 0
-18183 -10044 -10153 -10192 0
-18183 -10044 -10151 -10194 0
-18183 -10044 -10149 -10196 0
-18183 -10044 -10147 -10198 0
-18183 -10044 -10145 -10200 0
-18183 -10044 -10143 -10202 0
-18183 -10044 -10141 -10204 0
-18183 -10044 -10139 -10206 0
-18183 -10044 -10137 -10208 0
-18183 -10044 -10136 -10210 0
-18183 -10042 -10161 -10187 0
-18183 -10042 -10159 -10188 0
-18183 -10042 -10157 -10190 0
-18183 -10042 -10155 -10192 0
-18183 -10042 -10153 -10194 0
-18183 -10042 -10151 -10196 0
-18183 -10042 -10149 -10198 0
-18183 -10042 -10147 -10200 0
-18183 -10042 -10145 -10202 0
-18183 -10042 -10143 -10204 0
-18183 -10042 -10141 -10206 0
-18183 -10042 -10139 -10208 0
-18183 -10042 -10137 -10210 0
-18183 -10042 -10136 -10212 0
-18183 -10040 -10163 -10187 0
-18183 -10040 -10161 -10188 0
-18183 -10040 -10159 -10190 0
-18183 -10040 -10157 -10192 0
-18183 -10040 -10155 -10194 0
-18183 -10040 -10153 -10196 0
-18183 -10040 -10151 -10198 0
-18183 -10040 -10149 -10200 0
-18183 -10040 -10147 -10202 0
-18183 -10040 -10145 -10204 0
-18183 -10040 -10143 -10206 0
-18183 -10040 -10141 -10208 0
-18183 -10040 -10139 -10210 0
-18183 -10040 -10137 -10212 0
-18183 -10040 -10136 -10214 0
-18183 -10038 -10165 -10187 0
-18183 -10038 -10163 -10188 0
-18183 -10038 -10161 -10190 0
-18183 -10038 -10159 -10192 0
-18183 -10038 -10157 -10194 0
-18183 -10038 -10155 -10196 0
-18183 -10038 -10153 -10198 0
-18183 -10038 -10151 -10200 0
-18183 -10038 -10149 -10202 0
-18183 -10038 -10147 -10204 0
-18183 -10038 -10145 -10206 0
-18183 -10038 -10143 -10208 0
-18183 -10038 -10141 -10210 0
-18183 -10038 -10139 -10212 0
-18183 -10038 -10137 -10214 0
-18183 -10038 -10136 -10216 0
-18183 -10036 -10167 -10187 0
-18183 -10036 -10165 -10188 0
-18183 -10036 -10163 -10190 0
-18183 -10036 -10161 -10192 0
-18183 -10036 -10159 -10194 0
-18183 -10036 -10157 -10196 0
-18183 -10036 -10155 -10198 0
-18183 -10036 -10153 -10200 0
-18183 -10036 -10151 -10202 0
-18183 -10036 -10149 -10204 0
-18183 -10036 -10147 -10206 0
-18183 -10036 -10145 -10208 0
-18183 -10036 -10143 -10210 0
-18183 -10036 -10141 -10212 0
-18183 -10036 -10139 -10214 0
-18183 -10036 -10137 -10216 0
-18183 -10036 -10136 -10218 0
-18183 -10034 -10169 -10187 0
-18183 -10034 -10167 -10188 0
-18183 -10034 -10165 -10190 0
-18183 -10034 -10163 -10192 0
-18183 -10034 -10161 -10194 0
-18183 -10034 -10159 -10196 0
-18183 -10034 -10157 -10198 0
-18183 -10034 -10155 -10200 0
-18183 -10034 -10153 -10202 0
-18183 -10034 -10151 -10204 0
-18183 -10034 -10149 -10206 0
-18183 -10034 -10147 -10208 0
-18183 -10034 -10145 -10210 0
-18183 -10034 -10143 -10212 0
-18183 -10034 -10141 -10214 0
-18183 -10034 -10139 -10216 0
-18183 -10034 -10137 -10218 0
-18183 -10034 -10136 -10220 0
-18183 -10032 -10171 -10187 0
-18183 -10032 -10169 -10188 0
-18183 -10032 -10167 -10190 0
-18183 -10032 -10165 -10192 0
-18183 -10032 -10163 -10194 0
-18183 -10032 -10161 -10196 0
-18183 -10032 -10159 -10198 0
-18183 -10032 -10157 -10200 0
-18183 -10032 -10155 -10202 0
-18183 -10032 -10153 -10204 0
-18183 -10032 -10151 -10206 0
-18183 -10032 -10149 -10208 0
-18183 -10032 -10147 -10210 0
-18183 -10032 -10145 -10212 0
-18183 -10032 -10143 -10214 0
-18183 -10032 -10141 -10216 0
-18183 -10032 -10139 -10218 0
-18183 -10032 -10137 -10220 0
-18183 -10032 -10136 -10222 0
-18183 -10031 -10173 -10187 0
-18183 -10031 -10171 -10188 0
-18183 -10031 -10169 -10190 0
-18183 -10031 -10167 -10192 0
-18183 -10031 -10165 -10194 0
-18183 -10031 -10163 -10196 0
-18183 -10031 -10161 -10198 0
-18183 -10031 -10159 -10200 0
-18183 -10031 -10157 -10202 0
-18183 -10031 -10155 -10204 0
-18183 -10031 -10153 -10206 0
-18183 -10031 -10151 -10208 0
-18183 -10031 -10149 -10210 0
-18183 -10031 -10147 -10212 0
-18183 -10031 -10145 -10214 0
-18183 -10031 -10143 -10216 0
-18183 -10031 -10141 -10218 0
-18183 -10031 -10139 -10220 0
-18183 -10031 -10137 -10222 0
-18183 -10031 -10136 -10224 0
18183 10224 0
18183 10136 10222 0
18183 10137 10220 0
18183 10139 10218 0
18183 10141 10216 0
18183 10143 10214 0
18183 10145 10212 0
18183 10147 10210 0
18183 10149 10208 0
18183 10151 10206 0
18183 10153 10204 0
18183 10155 10202 0
18183 10157 10200 0
18183 10159 10198 0
18183 10161 10196 0
18183 10163 10194 0
18183 10165 10192 0
18183 10167 10190 0
18183 10169 10188 0
18183 10171 10187 0
18183 10173 0
18183 10175 0
18183 10177 0
18183 10179 0
18183 10181 0
18183 10183 0
18183 10185 0
18183 10031 10222 0
18183 10031 10136 10220 0
18183 10031 10137 10218 0
18183 10031 10139 10216 0
18183 10031 10141 10214 0
18183 10031 10143 10212 0
18183 10031 10145 10210 0
18183 10031 10147 10208 0
18183 10031 10149 10206 0
18183 10031 10151 10204 0
18183 10031 10153 10202 0
18183 10031 10155 10200 0
18183 10031 10157 10198 0
18183 10031 10159 10196 0
18183 10031 10161 10194 0
18183 10031 10163 10192 0
18183 10031 10165 10190 0
18183 10031 10167 10188 0
18183 10031 10169 10187 0
18183 10031 10171 0
18183 10031 10173 0
18183 10031 10175 0
18183 10031 10177 0
18183 10031 10179 0
18183 10031 10181 0
18183 10031 10183 0
18183 10031 10185 0
18183 10032 10220 0
18183 10032 10136 10218 0
18183 10032 10137 10216 0
18183 10032 10139 10214 0
18183 10032 10141 10212 0
18183 10032 10143 10210 0
18183 10032 10145 10208 0
18183 10032 10147 10206 0
18183 10032 10149 10204 0
18183 10032 10151 10202 0
18183 10032 10153 10200 0
18183 10032 10155 10198 0
18183 10032 10157 10196 0
18183 10032 10159 10194 0
18183 10032 10161 10192 0
18183 10032 10163 10190 0
18183 10032 10165 10188 0
18183 10032 10167 10187 0
18183 10032 10169 0
18183 10032 10171 0
18183 10032 10173 0
18183 10032 10175 0
18183 10032 10177 0
18183 10032 10179 0
18183 10032 10181 0
18183 10032 10183 0
18183 10032 10185 0
18183 10034 10218 0
18183 10034 10136 10216 0
18183 10034 10137 10214 0
18183 10034 10139 10212 0
18183 10034 10141 10210 0
18183 10034 10143 10208 0
18183 10034 10145 10206 0
18183 10034 10147 10204 0
18183 10034 10149 10202 0
18183 10034 10151 10200 0
18183 10034 10153 10198 0
18183 10034 10155 10196 0
18183 10034 10157 10194 0
18183 10034 10159 10192 0
18183 10034 10161 10190 0
18183 10034 10163 10188 0
18183 10034 10165 10187 0
18183 10034 10167 0
18183 10034 10169 0
18183 10034 10171 0
18183 10034 10173 0
18183 10034 10175 0
18183 10034 10177 0
18183 10034 10179 0
18183 10034 10181 0
18183 10034 10183 0
18183 10034 10185 0
18183 10036 10216 0
18183 10036 10136 10214 0
18183 10036 10137 10212 0
18183 10036 10139 10210 0
18183 10036 10141 10208 0
18183 10036 10143 10206 0
18183 10036 10145 10204 0
18183 10036 10147 10202 0
18183 10036 10149 10200 0
18183 10036 10151 10198 0
18183 10036 10153 10196 0
18183 10036 10155 10194 0
18183 10036 10157 10192 0
18183 10036 10159 10190 0
18183 10036 10161 10188 0
18183 10036 10163 10187 0
18183 10036 10165 0
18183 10036 10167 0
18183 10036 10169 0
18183 10036 10171 0
18183 10036 10173 0
18183 10036 10175 0
18183 10036 10177 0
18183 10036 10179 0
18183 10036 10181 0
18183 10036 10183 0
18183 10036 10185 0
18183 10038 10214 0
18183 10038 10136 10212 0
18183 10038 10137 10210 0
18183 10038 10139 10208 0
18183 10038 10141 10206 0
18183 10038 10143 10204 0
18183 10038 10145 10202 0
18183 10038 10147 10200 0
18183 10038 10149 10198 0
18183 10038 10151 10196 0
18183 10038 10153 10194 0
18183 10038 10155 10192 0
18183 10038 10157 10190 0
18183 10038 10159 10188 0
18183 10038 10161 10187 0
18183 10038 10163 0
18183 10038 10165 0
18183 10038 10167 0
18183 10038 10169 0
18183 10038 10171 0
18183 10038 10173 0
18183 10038 10175 0
18183 10038 10177 0
18183 10038 10179 0
18183 10038 10181 0
18183 10038 10183 0
18183 10038 10185 0
18183 10040 10212 0
18183 10040 10136 10210 0
18183 10040 10137 10208 0
18183 10040 10139 10206 0
18183 10040 10141 10204 0
18183 10040 10143 10202 0
18183 10040 10145 10200 0
18183 10040 10147 10198 0
18183 10040 10149 10196 0
18183 10040 10151 10194 0
18183 10040 10153 10192 0
18183 10040 10155 10190 0
18183 10040 10157 10188 0
18183 10040 10159 10187 0
18183 10040 10161 0
18183 10040 10163 0
18183 10040 10165 0
18183 10040 10167 0
18183 10040 10169 0
18183 10040 10171 0
18183 10040 10173 0
18183 10040 10175 0
18183 10040 10177 0
18183 10040 10179 0
18183 10040 10181 0
18183 10040 10183 0
18183 10040 10185 0
18183 10042 10210 0
18183 10042 10136 10208 0
18183 10042 10137 10206 0
18183 10042 10139 10204 0
18183 10042 10141 10202 0
18183 10042 10143 10200 0
18183 10042 10145 10198 0
18183 10042 10147 10196 0
18183 10042 10149 10194 0
18183 10042 10151 10192 0
18183 10042 10153 10190 0
18183 10042 10155 10188 0
18183 10042 10157 10187 0
18183 10042 10159 0
18183 10042 10161 0
18183 10042 10163 0
18183 10042 10165 0
18183 10042 10167 0
18183 10042 10169 0
18183 10042 10171 0
18183 10042 10173 0
18183 10042 10175 0
18183 10042 10177 0
18183 10042 10179 0
18183 10042 10181 0
18183 10042 10183 0
18183 10042 10185 0
18183 10044 10208 0
18183 10044 10136 10206 0
18183 10044 10137 10204 0
18183 10044 10139 10202 0
18183 10044 10141 10200 0
18183 10044 10143 10198 0
18183 10044 10145 10196 0
18183 10044 10147 10194 0
18183 10044 10149 10192 0
18183 10044 10151 10190 0
18183 10044 10153 10188 0
18183 10044 10155 10187 0
18183 10044 10157 0
18183 10044 10159 0
18183 10044 10161 0
18183 10044 10163 0
18183 10044 10165 0
18183 10044 10167 0
18183 10044 10169 0
18183 10044 10171 0
18183 10044 10173 0
18183 10044 10175 0
18183 10044 10177 0
18183 10044 10179 0
18183 10044 10181 0
18183 10044 10183 0
18183 10044 10185 0
18183 10046 10206 0
18183 10046 10136 10204 0
18183 10046 10137 10202 0
18183 10046 10139 10200 0
18183 10046 10141 10198 0
18183 10046 10143 10196 0
18183 10046 10145 10194 0
18183 10046 10147 10192 0
18183 10046 10149 10190 0
18183 10046 10151 10188 0
18183 10046 10153 10187 0
18183 10046 10155 0
18183 10046 10157 0
18183 10046 10159 0
18183 10046 10161 0
18183 10046 10163 0
18183 10046 10165 0
18183 10046 10167 0
18183 10046 10169 0
18183 10046 10171 0
18183 10046 10173 0
18183 10046 10175 0
18183 10046 10177 0
18183 10046 10179 0
18183 10046 10181 0
18183 10046 10183 0
18183 10046 10185 0
18183 10048 10204 0
18183 10048 10136 10202 0
18183 10048 10137 10200 0
18183 10048 10139 10198 0
18183 10048 10141 10196 0
18183 10048 10143 10194 0
18183 10048 10145 10192 0
18183 10048 10147 10190 0
18183 10048 10149 10188 0
18183 10048 10151 10187 0
18183 10048 10153 0
18183 10048 10155 0
18183 10048 10157 0
18183 10048 10159 0
18183 10048 10161 0
18183 10048 10163 0
18183 10048 10165 0
18183 10048 10167 0
18183 10048 10169 0
18183 10048 10171 0
18183 10048 10173 0
18183 10048 10175 0
18183 10048 10177 0
18183 10048 10179 0
18183 10048 10181 0
18183 10048 10183 0
18183 10048 10185 0
18183 10050 10202 0
18183 10050 10136 10200 0
18183 10050 10137 10198 0
18183 10050 10139 10196 0
18183 10050 10141 10194 0
18183 10050 10143 10192 0
18183 10050 10145 10190 0
18183 10050 10147 10188 0
18183 10050 10149 10187 0
18183 10050 10151 0
18183 10050 10153 0
18183 10050 10155 0
18183 10050 10157 0
18183 10050 10159 0
18183 10050 10161 0
18183 10050 10163 0
18183 10050 10165 0
18183 10050 10167 0
18183 10050 10169 0
18183 10050 10171 0
18183 10050 10173 0
18183 10050 10175 0
18183 10050 10177 0
18183 10050 10179 0
18183 10050 10181 0
18183 10050 10183 0
18183 10050 10185 0
18183 10052 10200 0
18183 10052 10136 10198 0
18183 10052 10137 10196 0
18183 10052 10139 10194 0
18183 10052 10141 10192 0
18183 10052 10143 10190 0
18183 10052 10145 10188 0
18183 10052 10147 10187 0
18183 10052 10149 0
18183 10052 10151 0
18183 10052 10153 0
18183 10052 10155 0
18183 10052 10157 0
18183 10052 10159 0
18183 10052 10161 0
18183 10052 10163 0
18183 10052 10165 0
18183 10052 10167 0
18183 10052 10169 0
18183 10052 10171 0
18183 10052 10173 0
18183 10052 10175 0
18183 10052 10177 0
18183 10052 10179 0
18183 10052 10181 0
18183 10052 10183 0
18183 10052 10185 0
18183 10054 10198 0
18183 10054 10136 10196 0
18183 10054 10137 10194 0
18183 10054 10139 10192 0
18183 10054 10141 10190 0
18183 10054 10143 10188 0
18183 10054 10145 10187 0
18183 10054 10147 0
18183 10054 10149 0
18183 10054 10151 0
18183 10054 10153 0
18183 10054 10155 0
18183 10054 10157 0
18183 10054 10159 0
18183 10054 10161 0
18183 10054 10163 0
18183 10054 10165 0
18183 10054 10167 0
18183 10054 10169 0
18183 10054 10171 0
18183 10054 10173 0
18183 10054 10175 0
18183 10054 10177 0
18183 10054 10179 0
18183 10054 10181 0
18183 10054 10183 0
18183 10054 10185 0
18183 10056 10196 0
18183 10056 10136 10194 0
18183 10056 10137 10192 0
18183 10056 10139 10190 0
18183 10056 10141 10188 0
18183 10056 10143 10187 0
18183 10056 10145 0
18183 10056 10147 0
18183 10056 10149 0
18183 10056 10151 0
18183 10056 10153 0
18183 10056 10155 0
18183 10056 10157 0
18183 10056 10159 0
18183 10056 10161 0
18183 10056 10163 0
18183 10056 10165 0
18183 10056 10167 0
18183 10056 10169 0
18183 10056 10171 0
18183 10056 10173 0
18183 10056 10175 0
18183 10056 10177 0
18183 10056 10179 0
18183 10056 10181 0
18183 10056 10183 0
18183 10056 10185 0
18183 10058 10194 0
18183 10058 10136 10192 0
18183 10058 10137 10190 0
18183 10058 10139 10188 0
18183 10058 10141 10187 0
18183 10058 10143 0
18183 10058 10145 0
18183 10058 10147 0
18183 10058 10149 0
18183 10058 10151 0
18183 10058 10153 0
18183 10058 10155 0
18183 10058 10157 0
18183 10058 10159 0
18183 10058 10161 0
18183 10058 10163 0
18183 10058 10165 0
18183 10058 10167 0
18183 10058 10169 0
18183 10058 10171 0
18183 10058 10173 0
18183 10058 10175 0
18183 10058 10177 0
18183 10058 10179 0
18183 10058 10181 0
18183 10058 10183 0
18183 10058 10185 0
18183 10060 10192 0
18183 10060 10136 10190 0
18183 10060 10137 10188 0
18183 10060 10139 10187 0
18183 10060 10141 0
18183 10060 10143 0
18183 10060 10145 0
18183 10060 10147 0
18183 10060 10149 0
18183 10060 10151 0
18183 10060 10153 0
18183 10060 10155 0
18183 10060 10157 0
18183 10060 10159 0
18183 10060 10161 0
18183 10060 10163 0
18183 10060 10165 0
18183 10060 10167 0
18183 10060 10169 0
18183 10060 10171 0
18183 10060 10173 0
18183 10060 10175 0
18183 10060 10177 0
18183 10060 10179 0
18183 10060 10181 0
18183 10060 10183 0
18183 10060 10185 0
18183 10062 10190 0
18183 10062 10136 10188 0
18183 10062 10137 10187 0
18183 10062 10139 0
18183 10062 10141 0
18183 10062 10143 0
18183 10062 10145 0
18183 10062 10147 0
18183 10062 10149 0
18183 10062 10151 0
18183 10062 10153 0
18183 10062 10155 0
18183 10062 10157 0
18183 10062 10159 0
18183 10062 10161 0
18183 10062 10163 0
18183 10062 10165 0
18183 10062 10167 0
18183 10062 10169 0
18183 10062 10171 0
18183 10062 10173 0
18183 10062 10175 0
18183 10062 10177 0
18183 10062 10179 0
18183 10062 10181 0
18183 10062 10183 0
18183 10062 10185 0
18183 10064 10188 0
18183 10064 10136 10187 0
18183 10064 10137 0
18183 10064 10139 0
18183 10064 10141 0
18183 10064 10143 0
18183 10064 10145 0
18183 10064 10147 0
18183 10064 10149 0
18183 10064 10151 0
18183 10064 10153 0
18183 10064 10155 0
18183 10064 10157 0
18183 10064 10159 0
18183 10064 10161 0
18183 10064 10163 0
18183 10064 10165 0
18183 10064 10167 0
18183 10064 10169 0
18183 10064 10171 0
18183 10064 10173 0
18183 10064 10175 0
18183 10064 10177 0
18183 10064 10179 0
18183 10064 10181 0
18183 10064 10183 0
18183 10064 10185 0
c (((aux421 + aux424 + aux425)<=15)=tv=SATLiteral(18184))
-18184 10476 0
-18184 10396 10474 0
-18184 10397 10472 0
-18184 10399 10470 0
-18184 10401 10468 0
-18184 10403 10466 0
-18184 10405 10464 0
-18184 10407 10462 0
-18184 10409 10460 0
-18184 10411 10458 0
-18184 10413 10456 0
-18184 10415 10454 0
-18184 10417 10452 0
-18184 10419 10450 0
-18184 10421 10448 0
-18184 10423 10447 0
-18184 10425 0
-18184 10427 0
-18184 10429 0
-18184 10431 0
-18184 10433 0
-18184 10435 0
-18184 10437 0
-18184 10439 0
-18184 10441 0
-18184 10443 0
-18184 10445 0
-18184 10291 10474 0
-18184 10291 10396 10472 0
-18184 10291 10397 10470 0
-18184 10291 10399 10468 0
-18184 10291 10401 10466 0
-18184 10291 10403 10464 0
-18184 10291 10405 10462 0
-18184 10291 10407 10460 0
-18184 10291 10409 10458 0
-18184 10291 10411 10456 0
-18184 10291 10413 10454 0
-18184 10291 10415 10452 0
-18184 10291 10417 10450 0
-18184 10291 10419 10448 0
-18184 10291 10421 10447 0
-18184 10291 10423 0
-18184 10291 10425 0
-18184 10291 10427 0
-18184 10291 10429 0
-18184 10291 10431 0
-18184 10291 10433 0
-18184 10291 10435 0
-18184 10291 10437 0
-18184 10291 10439 0
-18184 10291 10441 0
-18184 10291 10443 0
-18184 10291 10445 0
-18184 10292 10472 0
-18184 10292 10396 10470 0
-18184 10292 10397 10468 0
-18184 10292 10399 10466 0
-18184 10292 10401 10464 0
-18184 10292 10403 10462 0
-18184 10292 10405 10460 0
-18184 10292 10407 10458 0
-18184 10292 10409 10456 0
-18184 10292 10411 10454 0
-18184 10292 10413 10452 0
-18184 10292 10415 10450 0
-18184 10292 10417 10448 0
-18184 10292 10419 10447 0
-18184 10292 10421 0
-18184 10292 10423 0
-18184 10292 10425 0
-18184 10292 10427 0
-18184 10292 10429 0
-18184 10292 10431 0
-18184 10292 10433 0
-18184 10292 10435 0
-18184 10292 10437 0
-18184 10292 10439 0
-18184 10292 10441 0
-18184 10292 10443 0
-18184 10292 10445 0
-18184 10294 10470 0
-18184 10294 10396 10468 0
-18184 10294 10397 10466 0
-18184 10294 10399 10464 0
-18184 10294 10401 10462 0
-18184 10294 10403 10460 0
-18184 10294 10405 10458 0
-18184 10294 10407 10456 0
-18184 10294 10409 10454 0
-18184 10294 10411 10452 0
-18184 10294 10413 10450 0
-18184 10294 10415 10448 0
-18184 10294 10417 10447 0
-18184 10294 10419 0
-18184 10294 10421 0
-18184 10294 10423 0
-18184 10294 10425 0
-18184 10294 10427 0
-18184 10294 10429 0
-18184 10294 10431 0
-18184 10294 10433 0
-18184 10294 10435 0
-18184 10294 10437 0
-18184 10294 10439 0
-18184 10294 10441 0
-18184 10294 10443 0
-18184 10294 10445 0
-18184 10296 10468 0
-18184 10296 10396 10466 0
-18184 10296 10397 10464 0
-18184 10296 10399 10462 0
-18184 10296 10401 10460 0
-18184 10296 10403 10458 0
-18184 10296 10405 10456 0
-18184 10296 10407 10454 0
-18184 10296 10409 10452 0
-18184 10296 10411 10450 0
-18184 10296 10413 10448 0
-18184 10296 10415 10447 0
-18184 10296 10417 0
-18184 10296 10419 0
-18184 10296 10421 0
-18184 10296 10423 0
-18184 10296 10425 0
-18184 10296 10427 0
-18184 10296 10429 0
-18184 10296 10431 0
-18184 10296 10433 0
-18184 10296 10435 0
-18184 10296 10437 0
-18184 10296 10439 0
-18184 10296 10441 0
-18184 10296 10443 0
-18184 10296 10445 0
-18184 10298 10466 0
-18184 10298 10396 10464 0
-18184 10298 10397 10462 0
-18184 10298 10399 10460 0
-18184 10298 10401 10458 0
-18184 10298 10403 10456 0
-18184 10298 10405 10454 0
-18184 10298 10407 10452 0
-18184 10298 10409 10450 0
-18184 10298 10411 10448 0
-18184 10298 10413 10447 0
-18184 10298 10415 0
-18184 10298 10417 0
-18184 10298 10419 0
-18184 10298 10421 0
-18184 10298 10423 0
-18184 10298 10425 0
-18184 10298 10427 0
-18184 10298 10429 0
-18184 10298 10431 0
-18184 10298 10433 0
-18184 10298 10435 0
-18184 10298 10437 0
-18184 10298 10439 0
-18184 10298 10441 0
-18184 10298 10443 0
-18184 10298 10445 0
-18184 10300 10464 0
-18184 10300 10396 10462 0
-18184 10300 10397 10460 0
-18184 10300 10399 10458 0
-18184 10300 10401 10456 0
-18184 10300 10403 10454 0
-18184 10300 10405 10452 0
-18184 10300 10407 10450 0
-18184 10300 10409 10448 0
-18184 10300 10411 10447 0
-18184 10300 10413 0
-18184 10300 10415 0
-18184 10300 10417 0
-18184 10300 10419 0
-18184 10300 10421 0
-18184 10300 10423 0
-18184 10300 10425 0
-18184 10300 10427 0
-18184 10300 10429 0
-18184 10300 10431 0
-18184 10300 10433 0
-18184 10300 10435 0
-18184 10300 10437 0
-18184 10300 10439 0
-18184 10300 10441 0
-18184 10300 10443 0
-18184 10300 10445 0
-18184 10302 10462 0
-18184 10302 10396 10460 0
-18184 10302 10397 10458 0
-18184 10302 10399 10456 0
-18184 10302 10401 10454 0
-18184 10302 10403 10452 0
-18184 10302 10405 10450 0
-18184 10302 10407 10448 0
-18184 10302 10409 10447 0
-18184 10302 10411 0
-18184 10302 10413 0
-18184 10302 10415 0
-18184 10302 10417 0
-18184 10302 10419 0
-18184 10302 10421 0
-18184 10302 10423 0
-18184 10302 10425 0
-18184 10302 10427 0
-18184 10302 10429 0
-18184 10302 10431 0
-18184 10302 10433 0
-18184 10302 10435 0
-18184 10302 10437 0
-18184 10302 10439 0
-18184 10302 10441 0
-18184 10302 10443 0
-18184 10302 10445 0
-18184 10304 10460 0
-18184 10304 10396 10458 0
-18184 10304 10397 10456 0
-18184 10304 10399 10454 0
-18184 10304 10401 10452 0
-18184 10304 10403 10450 0
-18184 10304 10405 10448 0
-18184 10304 10407 10447 0
-18184 10304 10409 0
-18184 10304 10411 0
-18184 10304 10413 0
-18184 10304 10415 0
-18184 10304 10417 0
-18184 10304 10419 0
-18184 10304 10421 0
-18184 10304 10423 0
-18184 10304 10425 0
-18184 10304 10427 0
-18184 10304 10429 0
-18184 10304 10431 0
-18184 10304 10433 0
-18184 10304 10435 0
-18184 10304 10437 0
-18184 10304 10439 0
-18184 10304 10441 0
-18184 10304 10443 0
-18184 10304 10445 0
-18184 10306 10458 0
-18184 10306 10396 10456 0
-18184 10306 10397 10454 0
-18184 10306 10399 10452 0
-18184 10306 10401 10450 0
-18184 10306 10403 10448 0
-18184 10306 10405 10447 0
-18184 10306 10407 0
-18184 10306 10409 0
-18184 10306 10411 0
-18184 10306 10413 0
-18184 10306 10415 0
-18184 10306 10417 0
-18184 10306 10419 0
-18184 10306 10421 0
-18184 10306 10423 0
-18184 10306 10425 0
-18184 10306 10427 0
-18184 10306 10429 0
-18184 10306 10431 0
-18184 10306 10433 0
-18184 10306 10435 0
-18184 10306 10437 0
-18184 10306 10439 0
-18184 10306 10441 0
-18184 10306 10443 0
-18184 10306 10445 0
-18184 10308 10456 0
-18184 10308 10396 10454 0
-18184 10308 10397 10452 0
-18184 10308 10399 10450 0
-18184 10308 10401 10448 0
-18184 10308 10403 10447 0
-18184 10308 10405 0
-18184 10308 10407 0
-18184 10308 10409 0
-18184 10308 10411 0
-18184 10308 10413 0
-18184 10308 10415 0
-18184 10308 10417 0
-18184 10308 10419 0
-18184 10308 10421 0
-18184 10308 10423 0
-18184 10308 10425 0
-18184 10308 10427 0
-18184 10308 10429 0
-18184 10308 10431 0
-18184 10308 10433 0
-18184 10308 10435 0
-18184 10308 10437 0
-18184 10308 10439 0
-18184 10308 10441 0
-18184 10308 10443 0
-18184 10308 10445 0
-18184 10310 10454 0
-18184 10310 10396 10452 0
-18184 10310 10397 10450 0
-18184 10310 10399 10448 0
-18184 10310 10401 10447 0
-18184 10310 10403 0
-18184 10310 10405 0
-18184 10310 10407 0
-18184 10310 10409 0
-18184 10310 10411 0
-18184 10310 10413 0
-18184 10310 10415 0
-18184 10310 10417 0
-18184 10310 10419 0
-18184 10310 10421 0
-18184 10310 10423 0
-18184 10310 10425 0
-18184 10310 10427 0
-18184 10310 10429 0
-18184 10310 10431 0
-18184 10310 10433 0
-18184 10310 10435 0
-18184 10310 10437 0
-18184 10310 10439 0
-18184 10310 10441 0
-18184 10310 10443 0
-18184 10310 10445 0
-18184 10312 10452 0
-18184 10312 10396 10450 0
-18184 10312 10397 10448 0
-18184 10312 10399 10447 0
-18184 10312 10401 0
-18184 10312 10403 0
-18184 10312 10405 0
-18184 10312 10407 0
-18184 10312 10409 0
-18184 10312 10411 0
-18184 10312 10413 0
-18184 10312 10415 0
-18184 10312 10417 0
-18184 10312 10419 0
-18184 10312 10421 0
-18184 10312 10423 0
-18184 10312 10425 0
-18184 10312 10427 0
-18184 10312 10429 0
-18184 10312 10431 0
-18184 10312 10433 0
-18184 10312 10435 0
-18184 10312 10437 0
-18184 10312 10439 0
-18184 10312 10441 0
-18184 10312 10443 0
-18184 10312 10445 0
-18184 10314 10450 0
-18184 10314 10396 10448 0
-18184 10314 10397 10447 0
-18184 10314 10399 0
-18184 10314 10401 0
-18184 10314 10403 0
-18184 10314 10405 0
-18184 10314 10407 0
-18184 10314 10409 0
-18184 10314 10411 0
-18184 10314 10413 0
-18184 10314 10415 0
-18184 10314 10417 0
-18184 10314 10419 0
-18184 10314 10421 0
-18184 10314 10423 0
-18184 10314 10425 0
-18184 10314 10427 0
-18184 10314 10429 0
-18184 10314 10431 0
-18184 10314 10433 0
-18184 10314 10435 0
-18184 10314 10437 0
-18184 10314 10439 0
-18184 10314 10441 0
-18184 10314 10443 0
-18184 10314 10445 0
-18184 10316 10448 0
-18184 10316 10396 10447 0
-18184 10316 10397 0
-18184 10316 10399 0
-18184 10316 10401 0
-18184 10316 10403 0
-18184 10316 10405 0
-18184 10316 10407 0
-18184 10316 10409 0
-18184 10316 10411 0
-18184 10316 10413 0
-18184 10316 10415 0
-18184 10316 10417 0
-18184 10316 10419 0
-18184 10316 10421 0
-18184 10316 10423 0
-18184 10316 10425 0
-18184 10316 10427 0
-18184 10316 10429 0
-18184 10316 10431 0
-18184 10316 10433 0
-18184 10316 10435 0
-18184 10316 10437 0
-18184 10316 10439 0
-18184 10316 10441 0
-18184 10316 10443 0
-18184 10316 10445 0
-18184 10318 10447 0
-18184 10318 10396 0
-18184 10318 10397 0
-18184 10318 10399 0
-18184 10318 10401 0
-18184 10318 10403 0
-18184 10318 10405 0
-18184 10318 10407 0
-18184 10318 10409 0
-18184 10318 10411 0
-18184 10318 10413 0
-18184 10318 10415 0
-18184 10318 10417 0
-18184 10318 10419 0
-18184 10318 10421 0
-18184 10318 10423 0
-18184 10318 10425 0
-18184 10318 10427 0
-18184 10318 10429 0
-18184 10318 10431 0
-18184 10318 10433 0
-18184 10318 10435 0
-18184 10318 10437 0
-18184 10318 10439 0
-18184 10318 10441 0
-18184 10318 10443 0
-18184 10318 10445 0
-18184 10320 0
-18184 10320 10396 0
-18184 10320 10397 0
-18184 10320 10399 0
-18184 10320 10401 0
-18184 10320 10403 0
-18184 10320 10405 0
-18184 10320 10407 0
-18184 10320 10409 0
-18184 10320 10411 0
-18184 10320 10413 0
-18184 10320 10415 0
-18184 10320 10417 0
-18184 10320 10419 0
-18184 10320 10421 0
-18184 10320 10423 0
-18184 10320 10425 0
-18184 10320 10427 0
-18184 10320 10429 0
-18184 10320 10431 0
-18184 10320 10433 0
-18184 10320 10435 0
-18184 10320 10437 0
-18184 10320 10439 0
-18184 10320 10441 0
-18184 10320 10443 0
-18184 10320 10445 0
-18184 10322 0
-18184 10322 10396 0
-18184 10322 10397 0
-18184 10322 10399 0
-18184 10322 10401 0
-18184 10322 10403 0
-18184 10322 10405 0
-18184 10322 10407 0
-18184 10322 10409 0
-18184 10322 10411 0
-18184 10322 10413 0
-18184 10322 10415 0
-18184 10322 10417 0
-18184 10322 10419 0
-18184 10322 10421 0
-18184 10322 10423 0
-18184 10322 10425 0
-18184 10322 10427 0
-18184 10322 10429 0
-18184 10322 10431 0
-18184 10322 10433 0
-18184 10322 10435 0
-18184 10322 10437 0
-18184 10322 10439 0
-18184 10322 10441 0
-18184 10322 10443 0
-18184 10322 10445 0
-18184 10324 0
-18184 10324 10396 0
-18184 10324 10397 0
-18184 10324 10399 0
-18184 10324 10401 0
-18184 10324 10403 0
-18184 10324 10405 0
-18184 10324 10407 0
-18184 10324 10409 0
-18184 10324 10411 0
-18184 10324 10413 0
-18184 10324 10415 0
-18184 10324 10417 0
-18184 10324 10419 0
-18184 10324 10421 0
-18184 10324 10423 0
-18184 10324 10425 0
-18184 10324 10427 0
-18184 10324 10429 0
-18184 10324 10431 0
-18184 10324 10433 0
-18184 10324 10435 0
-18184 10324 10437 0
-18184 10324 10439 0
-18184 10324 10441 0
-18184 10324 10443 0
-18184 10324 10445 0
18184 -10320 -10396 -10447 0
18184 -10318 -10397 -10447 0
18184 -10318 -10396 -10448 0
18184 -10316 -10399 -10447 0
18184 -10316 -10397 -10448 0
18184 -10316 -10396 -10450 0
18184 -10314 -10401 -10447 0
18184 -10314 -10399 -10448 0
18184 -10314 -10397 -10450 0
18184 -10314 -10396 -10452 0
18184 -10312 -10403 -10447 0
18184 -10312 -10401 -10448 0
18184 -10312 -10399 -10450 0
18184 -10312 -10397 -10452 0
18184 -10312 -10396 -10454 0
18184 -10310 -10405 -10447 0
18184 -10310 -10403 -10448 0
18184 -10310 -10401 -10450 0
18184 -10310 -10399 -10452 0
18184 -10310 -10397 -10454 0
18184 -10310 -10396 -10456 0
18184 -10308 -10407 -10447 0
18184 -10308 -10405 -10448 0
18184 -10308 -10403 -10450 0
18184 -10308 -10401 -10452 0
18184 -10308 -10399 -10454 0
18184 -10308 -10397 -10456 0
18184 -10308 -10396 -10458 0
18184 -10306 -10409 -10447 0
18184 -10306 -10407 -10448 0
18184 -10306 -10405 -10450 0
18184 -10306 -10403 -10452 0
18184 -10306 -10401 -10454 0
18184 -10306 -10399 -10456 0
18184 -10306 -10397 -10458 0
18184 -10306 -10396 -10460 0
18184 -10304 -10411 -10447 0
18184 -10304 -10409 -10448 0
18184 -10304 -10407 -10450 0
18184 -10304 -10405 -10452 0
18184 -10304 -10403 -10454 0
18184 -10304 -10401 -10456 0
18184 -10304 -10399 -10458 0
18184 -10304 -10397 -10460 0
18184 -10304 -10396 -10462 0
18184 -10302 -10413 -10447 0
18184 -10302 -10411 -10448 0
18184 -10302 -10409 -10450 0
18184 -10302 -10407 -10452 0
18184 -10302 -10405 -10454 0
18184 -10302 -10403 -10456 0
18184 -10302 -10401 -10458 0
18184 -10302 -10399 -10460 0
18184 -10302 -10397 -10462 0
18184 -10302 -10396 -10464 0
18184 -10300 -10415 -10447 0
18184 -10300 -10413 -10448 0
18184 -10300 -10411 -10450 0
18184 -10300 -10409 -10452 0
18184 -10300 -10407 -10454 0
18184 -10300 -10405 -10456 0
18184 -10300 -10403 -10458 0
18184 -10300 -10401 -10460 0
18184 -10300 -10399 -10462 0
18184 -10300 -10397 -10464 0
18184 -10300 -10396 -10466 0
18184 -10298 -10417 -10447 0
18184 -10298 -10415 -10448 0
18184 -10298 -10413 -10450 0
18184 -10298 -10411 -10452 0
18184 -10298 -10409 -10454 0
18184 -10298 -10407 -10456 0
18184 -10298 -10405 -10458 0
18184 -10298 -10403 -10460 0
18184 -10298 -10401 -10462 0
18184 -10298 -10399 -10464 0
18184 -10298 -10397 -10466 0
18184 -10298 -10396 -10468 0
18184 -10296 -10419 -10447 0
18184 -10296 -10417 -10448 0
18184 -10296 -10415 -10450 0
18184 -10296 -10413 -10452 0
18184 -10296 -10411 -10454 0
18184 -10296 -10409 -10456 0
18184 -10296 -10407 -10458 0
18184 -10296 -10405 -10460 0
18184 -10296 -10403 -10462 0
18184 -10296 -10401 -10464 0
18184 -10296 -10399 -10466 0
18184 -10296 -10397 -10468 0
18184 -10296 -10396 -10470 0
18184 -10294 -10421 -10447 0
18184 -10294 -10419 -10448 0
18184 -10294 -10417 -10450 0
18184 -10294 -10415 -10452 0
18184 -10294 -10413 -10454 0
18184 -10294 -10411 -10456 0
18184 -10294 -10409 -10458 0
18184 -10294 -10407 -10460 0
18184 -10294 -10405 -10462 0
18184 -10294 -10403 -10464 0
18184 -10294 -10401 -10466 0
18184 -10294 -10399 -10468 0
18184 -10294 -10397 -10470 0
18184 -10294 -10396 -10472 0
18184 -10292 -10423 -10447 0
18184 -10292 -10421 -10448 0
18184 -10292 -10419 -10450 0
18184 -10292 -10417 -10452 0
18184 -10292 -10415 -10454 0
18184 -10292 -10413 -10456 0
18184 -10292 -10411 -10458 0
18184 -10292 -10409 -10460 0
18184 -10292 -10407 -10462 0
18184 -10292 -10405 -10464 0
18184 -10292 -10403 -10466 0
18184 -10292 -10401 -10468 0
18184 -10292 -10399 -10470 0
18184 -10292 -10397 -10472 0
18184 -10292 -10396 -10474 0
18184 -10291 -10425 -10447 0
18184 -10291 -10423 -10448 0
18184 -10291 -10421 -10450 0
18184 -10291 -10419 -10452 0
18184 -10291 -10417 -10454 0
18184 -10291 -10415 -10456 0
18184 -10291 -10413 -10458 0
18184 -10291 -10411 -10460 0
18184 -10291 -10409 -10462 0
18184 -10291 -10407 -10464 0
18184 -10291 -10405 -10466 0
18184 -10291 -10403 -10468 0
18184 -10291 -10401 -10470 0
18184 -10291 -10399 -10472 0
18184 -10291 -10397 -10474 0
18184 -10291 -10396 -10476 0
c ((15<=(aux421 + aux424 + aux425))=tv=SATLiteral(18185))
-18185 -10318 -10396 -10447 0
-18185 -10316 -10397 -10447 0
-18185 -10316 -10396 -10448 0
-18185 -10314 -10399 -10447 0
-18185 -10314 -10397 -10448 0
-18185 -10314 -10396 -10450 0
-18185 -10312 -10401 -10447 0
-18185 -10312 -10399 -10448 0
-18185 -10312 -10397 -10450 0
-18185 -10312 -10396 -10452 0
-18185 -10310 -10403 -10447 0
-18185 -10310 -10401 -10448 0
-18185 -10310 -10399 -10450 0
-18185 -10310 -10397 -10452 0
-18185 -10310 -10396 -10454 0
-18185 -10308 -10405 -10447 0
-18185 -10308 -10403 -10448 0
-18185 -10308 -10401 -10450 0
-18185 -10308 -10399 -10452 0
-18185 -10308 -10397 -10454 0
-18185 -10308 -10396 -10456 0
-18185 -10306 -10407 -10447 0
-18185 -10306 -10405 -10448 0
-18185 -10306 -10403 -10450 0
-18185 -10306 -10401 -10452 0
-18185 -10306 -10399 -10454 0
-18185 -10306 -10397 -10456 0
-18185 -10306 -10396 -10458 0
-18185 -10304 -10409 -10447 0
-18185 -10304 -10407 -10448 0
-18185 -10304 -10405 -10450 0
-18185 -10304 -10403 -10452 0
-18185 -10304 -10401 -10454 0
-18185 -10304 -10399 -10456 0
-18185 -10304 -10397 -10458 0
-18185 -10304 -10396 -10460 0
-18185 -10302 -10411 -10447 0
-18185 -10302 -10409 -10448 0
-18185 -10302 -10407 -10450 0
-18185 -10302 -10405 -10452 0
-18185 -10302 -10403 -10454 0
-18185 -10302 -10401 -10456 0
-18185 -10302 -10399 -10458 0
-18185 -10302 -10397 -10460 0
-18185 -10302 -10396 -10462 0
-18185 -10300 -10413 -10447 0
-18185 -10300 -10411 -10448 0
-18185 -10300 -10409 -10450 0
-18185 -10300 -10407 -10452 0
-18185 -10300 -10405 -10454 0
-18185 -10300 -10403 -10456 0
-18185 -10300 -10401 -10458 0
-18185 -10300 -10399 -10460 0
-18185 -10300 -10397 -10462 0
-18185 -10300 -10396 -10464 0
-18185 -10298 -10415 -10447 0
-18185 -10298 -10413 -10448 0
-18185 -10298 -10411 -10450 0
-18185 -10298 -10409 -10452 0
-18185 -10298 -10407 -10454 0
-18185 -10298 -10405 -10456 0
-18185 -10298 -10403 -10458 0
-18185 -10298 -10401 -10460 0
-18185 -10298 -10399 -10462 0
-18185 -10298 -10397 -10464 0
-18185 -10298 -10396 -10466 0
-18185 -10296 -10417 -10447 0
-18185 -10296 -10415 -10448 0
-18185 -10296 -10413 -10450 0
-18185 -10296 -10411 -10452 0
-18185 -10296 -10409 -10454 0
-18185 -10296 -10407 -10456 0
-18185 -10296 -10405 -10458 0
-18185 -10296 -10403 -10460 0
-18185 -10296 -10401 -10462 0
-18185 -10296 -10399 -10464 0
-18185 -10296 -10397 -10466 0
-18185 -10296 -10396 -10468 0
-18185 -10294 -10419 -10447 0
-18185 -10294 -10417 -10448 0
-18185 -10294 -10415 -10450 0
-18185 -10294 -10413 -10452 0
-18185 -10294 -10411 -10454 0
-18185 -10294 -10409 -10456 0
-18185 -10294 -10407 -10458 0
-18185 -10294 -10405 -10460 0
-18185 -10294 -10403 -10462 0
-18185 -10294 -10401 -10464 0
-18185 -10294 -10399 -10466 0
-18185 -10294 -10397 -10468 0
-18185 -10294 -10396 -10470 0
-18185 -10292 -10421 -10447 0
-18185 -10292 -10419 -10448 0
-18185 -10292 -10417 -10450 0
-18185 -10292 -10415 -10452 0
-18185 -10292 -10413 -10454 0
-18185 -10292 -10411 -10456 0
-18185 -10292 -10409 -10458 0
-18185 -10292 -10407 -10460 0
-18185 -10292 -10405 -10462 0
-18185 -10292 -10403 -10464 0
-18185 -10292 -10401 -10466 0
-18185 -10292 -10399 -10468 0
-18185 -10292 -10397 -10470 0
-18185 -10292 -10396 -10472 0
-18185 -10291 -10423 -10447 0
-18185 -10291 -10421 -10448 0
-18185 -10291 -10419 -10450 0
-18185 -10291 -10417 -10452 0
-18185 -10291 -10415 -10454 0
-18185 -10291 -10413 -10456 0
-18185 -10291 -10411 -10458 0
-18185 -10291 -10409 -10460 0
-18185 -10291 -10407 -10462 0
-18185 -10291 -10405 -10464 0
-18185 -10291 -10403 -10466 0
-18185 -10291 -10401 -10468 0
-18185 -10291 -10399 -10470 0
-18185 -10291 -10397 -10472 0
-18185 -10291 -10396 -10474 0
18185 10474 0
18185 10396 10472 0
18185 10397 10470 0
18185 10399 10468 0
18185 10401 10466 0
18185 10403 10464 0
18185 10405 10462 0
18185 10407 10460 0
18185 10409 10458 0
18185 10411 10456 0
18185 10413 10454 0
18185 10415 10452 0
18185 10417 10450 0
18185 10419 10448 0
18185 10421 10447 0
18185 10423 0
18185 10425 0
18185 10427 0
18185 10429 0
18185 10431 0
18185 10433 0
18185 10435 0
18185 10437 0
18185 10439 0
18185 10441 0
18185 10443 0
18185 10445 0
18185 10291 10472 0
18185 10291 10396 10470 0
18185 10291 10397 10468 0
18185 10291 10399 10466 0
18185 10291 10401 10464 0
18185 10291 10403 10462 0
18185 10291 10405 10460 0
18185 10291 10407 10458 0
18185 10291 10409 10456 0
18185 10291 10411 10454 0
18185 10291 10413 10452 0
18185 10291 10415 10450 0
18185 10291 10417 10448 0
18185 10291 10419 10447 0
18185 10291 10421 0
18185 10291 10423 0
18185 10291 10425 0
18185 10291 10427 0
18185 10291 10429 0
18185 10291 10431 0
18185 10291 10433 0
18185 10291 10435 0
18185 10291 10437 0
18185 10291 10439 0
18185 10291 10441 0
18185 10291 10443 0
18185 10291 10445 0
18185 10292 10470 0
18185 10292 10396 10468 0
18185 10292 10397 10466 0
18185 10292 10399 10464 0
18185 10292 10401 10462 0
18185 10292 10403 10460 0
18185 10292 10405 10458 0
18185 10292 10407 10456 0
18185 10292 10409 10454 0
18185 10292 10411 10452 0
18185 10292 10413 10450 0
18185 10292 10415 10448 0
18185 10292 10417 10447 0
18185 10292 10419 0
18185 10292 10421 0
18185 10292 10423 0
18185 10292 10425 0
18185 10292 10427 0
18185 10292 10429 0
18185 10292 10431 0
18185 10292 10433 0
18185 10292 10435 0
18185 10292 10437 0
18185 10292 10439 0
18185 10292 10441 0
18185 10292 10443 0
18185 10292 10445 0
18185 10294 10468 0
18185 10294 10396 10466 0
18185 10294 10397 10464 0
18185 10294 10399 10462 0
18185 10294 10401 10460 0
18185 10294 10403 10458 0
18185 10294 10405 10456 0
18185 10294 10407 10454 0
18185 10294 10409 10452 0
18185 10294 10411 10450 0
18185 10294 10413 10448 0
18185 10294 10415 10447 0
18185 10294 10417 0
18185 10294 10419 0
18185 10294 10421 0
18185 10294 10423 0
18185 10294 10425 0
18185 10294 10427 0
18185 10294 10429 0
18185 10294 10431 0
18185 10294 10433 0
18185 10294 10435 0
18185 10294 10437 0
18185 10294 10439 0
18185 10294 10441 0
18185 10294 10443 0
18185 10294 10445 0
18185 10296 10466 0
18185 10296 10396 10464 0
18185 10296 10397 10462 0
18185 10296 10399 10460 0
18185 10296 10401 10458 0
18185 10296 10403 10456 0
18185 10296 10405 10454 0
18185 10296 10407 10452 0
18185 10296 10409 10450 0
18185 10296 10411 10448 0
18185 10296 10413 10447 0
18185 10296 10415 0
18185 10296 10417 0
18185 10296 10419 0
18185 10296 10421 0
18185 10296 10423 0
18185 10296 10425 0
18185 10296 10427 0
18185 10296 10429 0
18185 10296 10431 0
18185 10296 10433 0
18185 10296 10435 0
18185 10296 10437 0
18185 10296 10439 0
18185 10296 10441 0
18185 10296 10443 0
18185 10296 10445 0
18185 10298 10464 0
18185 10298 10396 10462 0
18185 10298 10397 10460 0
18185 10298 10399 10458 0
18185 10298 10401 10456 0
18185 10298 10403 10454 0
18185 10298 10405 10452 0
18185 10298 10407 10450 0
18185 10298 10409 10448 0
18185 10298 10411 10447 0
18185 10298 10413 0
18185 10298 10415 0
18185 10298 10417 0
18185 10298 10419 0
18185 10298 10421 0
18185 10298 10423 0
18185 10298 10425 0
18185 10298 10427 0
18185 10298 10429 0
18185 10298 10431 0
18185 10298 10433 0
18185 10298 10435 0
18185 10298 10437 0
18185 10298 10439 0
18185 10298 10441 0
18185 10298 10443 0
18185 10298 10445 0
18185 10300 10462 0
18185 10300 10396 10460 0
18185 10300 10397 10458 0
18185 10300 10399 10456 0
18185 10300 10401 10454 0
18185 10300 10403 10452 0
18185 10300 10405 10450 0
18185 10300 10407 10448 0
18185 10300 10409 10447 0
18185 10300 10411 0
18185 10300 10413 0
18185 10300 10415 0
18185 10300 10417 0
18185 10300 10419 0
18185 10300 10421 0
18185 10300 10423 0
18185 10300 10425 0
18185 10300 10427 0
18185 10300 10429 0
18185 10300 10431 0
18185 10300 10433 0
18185 10300 10435 0
18185 10300 10437 0
18185 10300 10439 0
18185 10300 10441 0
18185 10300 10443 0
18185 10300 10445 0
18185 10302 10460 0
18185 10302 10396 10458 0
18185 10302 10397 10456 0
18185 10302 10399 10454 0
18185 10302 10401 10452 0
18185 10302 10403 10450 0
18185 10302 10405 10448 0
18185 10302 10407 10447 0
18185 10302 10409 0
18185 10302 10411 0
18185 10302 10413 0
18185 10302 10415 0
18185 10302 10417 0
18185 10302 10419 0
18185 10302 10421 0
18185 10302 10423 0
18185 10302 10425 0
18185 10302 10427 0
18185 10302 10429 0
18185 10302 10431 0
18185 10302 10433 0
18185 10302 10435 0
18185 10302 10437 0
18185 10302 10439 0
18185 10302 10441 0
18185 10302 10443 0
18185 10302 10445 0
18185 10304 10458 0
18185 10304 10396 10456 0
18185 10304 10397 10454 0
18185 10304 10399 10452 0
18185 10304 10401 10450 0
18185 10304 10403 10448 0
18185 10304 10405 10447 0
18185 10304 10407 0
18185 10304 10409 0
18185 10304 10411 0
18185 10304 10413 0
18185 10304 10415 0
18185 10304 10417 0
18185 10304 10419 0
18185 10304 10421 0
18185 10304 10423 0
18185 10304 10425 0
18185 10304 10427 0
18185 10304 10429 0
18185 10304 10431 0
18185 10304 10433 0
18185 10304 10435 0
18185 10304 10437 0
18185 10304 10439 0
18185 10304 10441 0
18185 10304 10443 0
18185 10304 10445 0
18185 10306 10456 0
18185 10306 10396 10454 0
18185 10306 10397 10452 0
18185 10306 10399 10450 0
18185 10306 10401 10448 0
18185 10306 10403 10447 0
18185 10306 10405 0
18185 10306 10407 0
18185 10306 10409 0
18185 10306 10411 0
18185 10306 10413 0
18185 10306 10415 0
18185 10306 10417 0
18185 10306 10419 0
18185 10306 10421 0
18185 10306 10423 0
18185 10306 10425 0
18185 10306 10427 0
18185 10306 10429 0
18185 10306 10431 0
18185 10306 10433 0
18185 10306 10435 0
18185 10306 10437 0
18185 10306 10439 0
18185 10306 10441 0
18185 10306 10443 0
18185 10306 10445 0
18185 10308 10454 0
18185 10308 10396 10452 0
18185 10308 10397 10450 0
18185 10308 10399 10448 0
18185 10308 10401 10447 0
18185 10308 10403 0
18185 10308 10405 0
18185 10308 10407 0
18185 10308 10409 0
18185 10308 10411 0
18185 10308 10413 0
18185 10308 10415 0
18185 10308 10417 0
18185 10308 10419 0
18185 10308 10421 0
18185 10308 10423 0
18185 10308 10425 0
18185 10308 10427 0
18185 10308 10429 0
18185 10308 10431 0
18185 10308 10433 0
18185 10308 10435 0
18185 10308 10437 0
18185 10308 10439 0
18185 10308 10441 0
18185 10308 10443 0
18185 10308 10445 0
18185 10310 10452 0
18185 10310 10396 10450 0
18185 10310 10397 10448 0
18185 10310 10399 10447 0
18185 10310 10401 0
18185 10310 10403 0
18185 10310 10405 0
18185 10310 10407 0
18185 10310 10409 0
18185 10310 10411 0
18185 10310 10413 0
18185 10310 10415 0
18185 10310 10417 0
18185 10310 10419 0
18185 10310 10421 0
18185 10310 10423 0
18185 10310 10425 0
18185 10310 10427 0
18185 10310 10429 0
18185 10310 10431 0
18185 10310 10433 0
18185 10310 10435 0
18185 10310 10437 0
18185 10310 10439 0
18185 10310 10441 0
18185 10310 10443 0
18185 10310 10445 0
18185 10312 10450 0
18185 10312 10396 10448 0
18185 10312 10397 10447 0
18185 10312 10399 0
18185 10312 10401 0
18185 10312 10403 0
18185 10312 10405 0
18185 10312 10407 0
18185 10312 10409 0
18185 10312 10411 0
18185 10312 10413 0
18185 10312 10415 0
18185 10312 10417 0
18185 10312 10419 0
18185 10312 10421 0
18185 10312 10423 0
18185 10312 10425 0
18185 10312 10427 0
18185 10312 10429 0
18185 10312 10431 0
18185 10312 10433 0
18185 10312 10435 0
18185 10312 10437 0
18185 10312 10439 0
18185 10312 10441 0
18185 10312 10443 0
18185 10312 10445 0
18185 10314 10448 0
18185 10314 10396 10447 0
18185 10314 10397 0
18185 10314 10399 0
18185 10314 10401 0
18185 10314 10403 0
18185 10314 10405 0
18185 10314 10407 0
18185 10314 10409 0
18185 10314 10411 0
18185 10314 10413 0
18185 10314 10415 0
18185 10314 10417 0
18185 10314 10419 0
18185 10314 10421 0
18185 10314 10423 0
18185 10314 10425 0
18185 10314 10427 0
18185 10314 10429 0
18185 10314 10431 0
18185 10314 10433 0
18185 10314 10435 0
18185 10314 10437 0
18185 10314 10439 0
18185 10314 10441 0
18185 10314 10443 0
18185 10314 10445 0
18185 10316 10447 0
18185 10316 10396 0
18185 10316 10397 0
18185 10316 10399 0
18185 10316 10401 0
18185 10316 10403 0
18185 10316 10405 0
18185 10316 10407 0
18185 10316 10409 0
18185 10316 10411 0
18185 10316 10413 0
18185 10316 10415 0
18185 10316 10417 0
18185 10316 10419 0
18185 10316 10421 0
18185 10316 10423 0
18185 10316 10425 0
18185 10316 10427 0
18185 10316 10429 0
18185 10316 10431 0
18185 10316 10433 0
18185 10316 10435 0
18185 10316 10437 0
18185 10316 10439 0
18185 10316 10441 0
18185 10316 10443 0
18185 10316 10445 0
18185 10318 0
18185 10318 10396 0
18185 10318 10397 0
18185 10318 10399 0
18185 10318 10401 0
18185 10318 10403 0
18185 10318 10405 0
18185 10318 10407 0
18185 10318 10409 0
18185 10318 10411 0
18185 10318 10413 0
18185 10318 10415 0
18185 10318 10417 0
18185 10318 10419 0
18185 10318 10421 0
18185 10318 10423 0
18185 10318 10425 0
18185 10318 10427 0
18185 10318 10429 0
18185 10318 10431 0
18185 10318 10433 0
18185 10318 10435 0
18185 10318 10437 0
18185 10318 10439 0
18185 10318 10441 0
18185 10318 10443 0
18185 10318 10445 0
18185 10320 0
18185 10320 10396 0
18185 10320 10397 0
18185 10320 10399 0
18185 10320 10401 0
18185 10320 10403 0
18185 10320 10405 0
18185 10320 10407 0
18185 10320 10409 0
18185 10320 10411 0
18185 10320 10413 0
18185 10320 10415 0
18185 10320 10417 0
18185 10320 10419 0
18185 10320 10421 0
18185 10320 10423 0
18185 10320 10425 0
18185 10320 10427 0
18185 10320 10429 0
18185 10320 10431 0
18185 10320 10433 0
18185 10320 10435 0
18185 10320 10437 0
18185 10320 10439 0
18185 10320 10441 0
18185 10320 10443 0
18185 10320 10445 0
18185 10322 0
18185 10322 10396 0
18185 10322 10397 0
18185 10322 10399 0
18185 10322 10401 0
18185 10322 10403 0
18185 10322 10405 0
18185 10322 10407 0
18185 10322 10409 0
18185 10322 10411 0
18185 10322 10413 0
18185 10322 10415 0
18185 10322 10417 0
18185 10322 10419 0
18185 10322 10421 0
18185 10322 10423 0
18185 10322 10425 0
18185 10322 10427 0
18185 10322 10429 0
18185 10322 10431 0
18185 10322 10433 0
18185 10322 10435 0
18185 10322 10437 0
18185 10322 10439 0
18185 10322 10441 0
18185 10322 10443 0
18185 10322 10445 0
18185 10324 0
18185 10324 10396 0
18185 10324 10397 0
18185 10324 10399 0
18185 10324 10401 0
18185 10324 10403 0
18185 10324 10405 0
18185 10324 10407 0
18185 10324 10409 0
18185 10324 10411 0
18185 10324 10413 0
18185 10324 10415 0
18185 10324 10417 0
18185 10324 10419 0
18185 10324 10421 0
18185 10324 10423 0
18185 10324 10425 0
18185 10324 10427 0
18185 10324 10429 0
18185 10324 10431 0
18185 10324 10433 0
18185 10324 10435 0
18185 10324 10437 0
18185 10324 10439 0
18185 10324 10441 0
18185 10324 10443 0
18185 10324 10445 0
c (((aux427 + aux430 + aux431)<=7)=tv=SATLiteral(18186))
-18186 10720 0
-18186 10656 10718 0
-18186 10657 10716 0
-18186 10659 10714 0
-18186 10661 10712 0
-18186 10663 10710 0
-18186 10665 10708 0
-18186 10667 10707 0
-18186 10669 0
-18186 10671 0
-18186 10673 0
-18186 10675 0
-18186 10677 0
-18186 10679 0
-18186 10681 0
-18186 10683 0
-18186 10685 0
-18186 10687 0
-18186 10689 0
-18186 10691 0
-18186 10693 0
-18186 10695 0
-18186 10697 0
-18186 10699 0
-18186 10701 0
-18186 10703 0
-18186 10705 0
-18186 10551 10718 0
-18186 10551 10656 10716 0
-18186 10551 10657 10714 0
-18186 10551 10659 10712 0
-18186 10551 10661 10710 0
-18186 10551 10663 10708 0
-18186 10551 10665 10707 0
-18186 10551 10667 0
-18186 10551 10669 0
-18186 10551 10671 0
-18186 10551 10673 0
-18186 10551 10675 0
-18186 10551 10677 0
-18186 10551 10679 0
-18186 10551 10681 0
-18186 10551 10683 0
-18186 10551 10685 0
-18186 10551 10687 0
-18186 10551 10689 0
-18186 10551 10691 0
-18186 10551 10693 0
-18186 10551 10695 0
-18186 10551 10697 0
-18186 10551 10699 0
-18186 10551 10701 0
-18186 10551 10703 0
-18186 10551 10705 0
-18186 10552 10716 0
-18186 10552 10656 10714 0
-18186 10552 10657 10712 0
-18186 10552 10659 10710 0
-18186 10552 10661 10708 0
-18186 10552 10663 10707 0
-18186 10552 10665 0
-18186 10552 10667 0
-18186 10552 10669 0
-18186 10552 10671 0
-18186 10552 10673 0
-18186 10552 10675 0
-18186 10552 10677 0
-18186 10552 10679 0
-18186 10552 10681 0
-18186 10552 10683 0
-18186 10552 10685 0
-18186 10552 10687 0
-18186 10552 10689 0
-18186 10552 10691 0
-18186 10552 10693 0
-18186 10552 10695 0
-18186 10552 10697 0
-18186 10552 10699 0
-18186 10552 10701 0
-18186 10552 10703 0
-18186 10552 10705 0
-18186 10554 10714 0
-18186 10554 10656 10712 0
-18186 10554 10657 10710 0
-18186 10554 10659 10708 0
-18186 10554 10661 10707 0
-18186 10554 10663 0
-18186 10554 10665 0
-18186 10554 10667 0
-18186 10554 10669 0
-18186 10554 10671 0
-18186 10554 10673 0
-18186 10554 10675 0
-18186 10554 10677 0
-18186 10554 10679 0
-18186 10554 10681 0
-18186 10554 10683 0
-18186 10554 10685 0
-18186 10554 10687 0
-18186 10554 10689 0
-18186 10554 10691 0
-18186 10554 10693 0
-18186 10554 10695 0
-18186 10554 10697 0
-18186 10554 10699 0
-18186 10554 10701 0
-18186 10554 10703 0
-18186 10554 10705 0
-18186 10556 10712 0
-18186 10556 10656 10710 0
-18186 10556 10657 10708 0
-18186 10556 10659 10707 0
-18186 10556 10661 0
-18186 10556 10663 0
-18186 10556 10665 0
-18186 10556 10667 0
-18186 10556 10669 0
-18186 10556 10671 0
-18186 10556 10673 0
-18186 10556 10675 0
-18186 10556 10677 0
-18186 10556 10679 0
-18186 10556 10681 0
-18186 10556 10683 0
-18186 10556 10685 0
-18186 10556 10687 0
-18186 10556 10689 0
-18186 10556 10691 0
-18186 10556 10693 0
-18186 10556 10695 0
-18186 10556 10697 0
-18186 10556 10699 0
-18186 10556 10701 0
-18186 10556 10703 0
-18186 10556 10705 0
-18186 10558 10710 0
-18186 10558 10656 10708 0
-18186 10558 10657 10707 0
-18186 10558 10659 0
-18186 10558 10661 0
-18186 10558 10663 0
-18186 10558 10665 0
-18186 10558 10667 0
-18186 10558 10669 0
-18186 10558 10671 0
-18186 10558 10673 0
-18186 10558 10675 0
-18186 10558 10677 0
-18186 10558 10679 0
-18186 10558 10681 0
-18186 10558 10683 0
-18186 10558 10685 0
-18186 10558 10687 0
-18186 10558 10689 0
-18186 10558 10691 0
-18186 10558 10693 0
-18186 10558 10695 0
-18186 10558 10697 0
-18186 10558 10699 0
-18186 10558 10701 0
-18186 10558 10703 0
-18186 10558 10705 0
-18186 10560 10708 0
-18186 10560 10656 10707 0
-18186 10560 10657 0
-18186 10560 10659 0
-18186 10560 10661 0
-18186 10560 10663 0
-18186 10560 10665 0
-18186 10560 10667 0
-18186 10560 10669 0
-18186 10560 10671 0
-18186 10560 10673 0
-18186 10560 10675 0
-18186 10560 10677 0
-18186 10560 10679 0
-18186 10560 10681 0
-18186 10560 10683 0
-18186 10560 10685 0
-18186 10560 10687 0
-18186 10560 10689 0
-18186 10560 10691 0
-18186 10560 10693 0
-18186 10560 10695 0
-18186 10560 10697 0
-18186 10560 10699 0
-18186 10560 10701 0
-18186 10560 10703 0
-18186 10560 10705 0
-18186 10562 10707 0
-18186 10562 10656 0
-18186 10562 10657 0
-18186 10562 10659 0
-18186 10562 10661 0
-18186 10562 10663 0
-18186 10562 10665 0
-18186 10562 10667 0
-18186 10562 10669 0
-18186 10562 10671 0
-18186 10562 10673 0
-18186 10562 10675 0
-18186 10562 10677 0
-18186 10562 10679 0
-18186 10562 10681 0
-18186 10562 10683 0
-18186 10562 10685 0
-18186 10562 10687 0
-18186 10562 10689 0
-18186 10562 10691 0
-18186 10562 10693 0
-18186 10562 10695 0
-18186 10562 10697 0
-18186 10562 10699 0
-18186 10562 10701 0
-18186 10562 10703 0
-18186 10562 10705 0
-18186 10564 0
-18186 10564 10656 0
-18186 10564 10657 0
-18186 10564 10659 0
-18186 10564 10661 0
-18186 10564 10663 0
-18186 10564 10665 0
-18186 10564 10667 0
-18186 10564 10669 0
-18186 10564 10671 0
-18186 10564 10673 0
-18186 10564 10675 0
-18186 10564 10677 0
-18186 10564 10679 0
-18186 10564 10681 0
-18186 10564 10683 0
-18186 10564 10685 0
-18186 10564 10687 0
-18186 10564 10689 0
-18186 10564 10691 0
-18186 10564 10693 0
-18186 10564 10695 0
-18186 10564 10697 0
-18186 10564 10699 0
-18186 10564 10701 0
-18186 10564 10703 0
-18186 10564 10705 0
-18186 10566 0
-18186 10566 10656 0
-18186 10566 10657 0
-18186 10566 10659 0
-18186 10566 10661 0
-18186 10566 10663 0
-18186 10566 10665 0
-18186 10566 10667 0
-18186 10566 10669 0
-18186 10566 10671 0
-18186 10566 10673 0
-18186 10566 10675 0
-18186 10566 10677 0
-18186 10566 10679 0
-18186 10566 10681 0
-18186 10566 10683 0
-18186 10566 10685 0
-18186 10566 10687 0
-18186 10566 10689 0
-18186 10566 10691 0
-18186 10566 10693 0
-18186 10566 10695 0
-18186 10566 10697 0
-18186 10566 10699 0
-18186 10566 10701 0
-18186 10566 10703 0
-18186 10566 10705 0
-18186 10568 0
-18186 10568 10656 0
-18186 10568 10657 0
-18186 10568 10659 0
-18186 10568 10661 0
-18186 10568 10663 0
-18186 10568 10665 0
-18186 10568 10667 0
-18186 10568 10669 0
-18186 10568 10671 0
-18186 10568 10673 0
-18186 10568 10675 0
-18186 10568 10677 0
-18186 10568 10679 0
-18186 10568 10681 0
-18186 10568 10683 0
-18186 10568 10685 0
-18186 10568 10687 0
-18186 10568 10689 0
-18186 10568 10691 0
-18186 10568 10693 0
-18186 10568 10695 0
-18186 10568 10697 0
-18186 10568 10699 0
-18186 10568 10701 0
-18186 10568 10703 0
-18186 10568 10705 0
-18186 10570 0
-18186 10570 10656 0
-18186 10570 10657 0
-18186 10570 10659 0
-18186 10570 10661 0
-18186 10570 10663 0
-18186 10570 10665 0
-18186 10570 10667 0
-18186 10570 10669 0
-18186 10570 10671 0
-18186 10570 10673 0
-18186 10570 10675 0
-18186 10570 10677 0
-18186 10570 10679 0
-18186 10570 10681 0
-18186 10570 10683 0
-18186 10570 10685 0
-18186 10570 10687 0
-18186 10570 10689 0
-18186 10570 10691 0
-18186 10570 10693 0
-18186 10570 10695 0
-18186 10570 10697 0
-18186 10570 10699 0
-18186 10570 10701 0
-18186 10570 10703 0
-18186 10570 10705 0
-18186 10572 0
-18186 10572 10656 0
-18186 10572 10657 0
-18186 10572 10659 0
-18186 10572 10661 0
-18186 10572 10663 0
-18186 10572 10665 0
-18186 10572 10667 0
-18186 10572 10669 0
-18186 10572 10671 0
-18186 10572 10673 0
-18186 10572 10675 0
-18186 10572 10677 0
-18186 10572 10679 0
-18186 10572 10681 0
-18186 10572 10683 0
-18186 10572 10685 0
-18186 10572 10687 0
-18186 10572 10689 0
-18186 10572 10691 0
-18186 10572 10693 0
-18186 10572 10695 0
-18186 10572 10697 0
-18186 10572 10699 0
-18186 10572 10701 0
-18186 10572 10703 0
-18186 10572 10705 0
-18186 10574 0
-18186 10574 10656 0
-18186 10574 10657 0
-18186 10574 10659 0
-18186 10574 10661 0
-18186 10574 10663 0
-18186 10574 10665 0
-18186 10574 10667 0
-18186 10574 10669 0
-18186 10574 10671 0
-18186 10574 10673 0
-18186 10574 10675 0
-18186 10574 10677 0
-18186 10574 10679 0
-18186 10574 10681 0
-18186 10574 10683 0
-18186 10574 10685 0
-18186 10574 10687 0
-18186 10574 10689 0
-18186 10574 10691 0
-18186 10574 10693 0
-18186 10574 10695 0
-18186 10574 10697 0
-18186 10574 10699 0
-18186 10574 10701 0
-18186 10574 10703 0
-18186 10574 10705 0
-18186 10576 0
-18186 10576 10656 0
-18186 10576 10657 0
-18186 10576 10659 0
-18186 10576 10661 0
-18186 10576 10663 0
-18186 10576 10665 0
-18186 10576 10667 0
-18186 10576 10669 0
-18186 10576 10671 0
-18186 10576 10673 0
-18186 10576 10675 0
-18186 10576 10677 0
-18186 10576 10679 0
-18186 10576 10681 0
-18186 10576 10683 0
-18186 10576 10685 0
-18186 10576 10687 0
-18186 10576 10689 0
-18186 10576 10691 0
-18186 10576 10693 0
-18186 10576 10695 0
-18186 10576 10697 0
-18186 10576 10699 0
-18186 10576 10701 0
-18186 10576 10703 0
-18186 10576 10705 0
-18186 10578 0
-18186 10578 10656 0
-18186 10578 10657 0
-18186 10578 10659 0
-18186 10578 10661 0
-18186 10578 10663 0
-18186 10578 10665 0
-18186 10578 10667 0
-18186 10578 10669 0
-18186 10578 10671 0
-18186 10578 10673 0
-18186 10578 10675 0
-18186 10578 10677 0
-18186 10578 10679 0
-18186 10578 10681 0
-18186 10578 10683 0
-18186 10578 10685 0
-18186 10578 10687 0
-18186 10578 10689 0
-18186 10578 10691 0
-18186 10578 10693 0
-18186 10578 10695 0
-18186 10578 10697 0
-18186 10578 10699 0
-18186 10578 10701 0
-18186 10578 10703 0
-18186 10578 10705 0
-18186 10580 0
-18186 10580 10656 0
-18186 10580 10657 0
-18186 10580 10659 0
-18186 10580 10661 0
-18186 10580 10663 0
-18186 10580 10665 0
-18186 10580 10667 0
-18186 10580 10669 0
-18186 10580 10671 0
-18186 10580 10673 0
-18186 10580 10675 0
-18186 10580 10677 0
-18186 10580 10679 0
-18186 10580 10681 0
-18186 10580 10683 0
-18186 10580 10685 0
-18186 10580 10687 0
-18186 10580 10689 0
-18186 10580 10691 0
-18186 10580 10693 0
-18186 10580 10695 0
-18186 10580 10697 0
-18186 10580 10699 0
-18186 10580 10701 0
-18186 10580 10703 0
-18186 10580 10705 0
-18186 10582 0
-18186 10582 10656 0
-18186 10582 10657 0
-18186 10582 10659 0
-18186 10582 10661 0
-18186 10582 10663 0
-18186 10582 10665 0
-18186 10582 10667 0
-18186 10582 10669 0
-18186 10582 10671 0
-18186 10582 10673 0
-18186 10582 10675 0
-18186 10582 10677 0
-18186 10582 10679 0
-18186 10582 10681 0
-18186 10582 10683 0
-18186 10582 10685 0
-18186 10582 10687 0
-18186 10582 10689 0
-18186 10582 10691 0
-18186 10582 10693 0
-18186 10582 10695 0
-18186 10582 10697 0
-18186 10582 10699 0
-18186 10582 10701 0
-18186 10582 10703 0
-18186 10582 10705 0
-18186 10584 0
-18186 10584 10656 0
-18186 10584 10657 0
-18186 10584 10659 0
-18186 10584 10661 0
-18186 10584 10663 0
-18186 10584 10665 0
-18186 10584 10667 0
-18186 10584 10669 0
-18186 10584 10671 0
-18186 10584 10673 0
-18186 10584 10675 0
-18186 10584 10677 0
-18186 10584 10679 0
-18186 10584 10681 0
-18186 10584 10683 0
-18186 10584 10685 0
-18186 10584 10687 0
-18186 10584 10689 0
-18186 10584 10691 0
-18186 10584 10693 0
-18186 10584 10695 0
-18186 10584 10697 0
-18186 10584 10699 0
-18186 10584 10701 0
-18186 10584 10703 0
-18186 10584 10705 0
18186 -10564 -10656 -10707 0
18186 -10562 -10657 -10707 0
18186 -10562 -10656 -10708 0
18186 -10560 -10659 -10707 0
18186 -10560 -10657 -10708 0
18186 -10560 -10656 -10710 0
18186 -10558 -10661 -10707 0
18186 -10558 -10659 -10708 0
18186 -10558 -10657 -10710 0
18186 -10558 -10656 -10712 0
18186 -10556 -10663 -10707 0
18186 -10556 -10661 -10708 0
18186 -10556 -10659 -10710 0
18186 -10556 -10657 -10712 0
18186 -10556 -10656 -10714 0
18186 -10554 -10665 -10707 0
18186 -10554 -10663 -10708 0
18186 -10554 -10661 -10710 0
18186 -10554 -10659 -10712 0
18186 -10554 -10657 -10714 0
18186 -10554 -10656 -10716 0
18186 -10552 -10667 -10707 0
18186 -10552 -10665 -10708 0
18186 -10552 -10663 -10710 0
18186 -10552 -10661 -10712 0
18186 -10552 -10659 -10714 0
18186 -10552 -10657 -10716 0
18186 -10552 -10656 -10718 0
18186 -10551 -10669 -10707 0
18186 -10551 -10667 -10708 0
18186 -10551 -10665 -10710 0
18186 -10551 -10663 -10712 0
18186 -10551 -10661 -10714 0
18186 -10551 -10659 -10716 0
18186 -10551 -10657 -10718 0
18186 -10551 -10656 -10720 0
c ((7<=(aux427 + aux430 + aux431))=tv=SATLiteral(18187))
-18187 -10562 -10656 -10707 0
-18187 -10560 -10657 -10707 0
-18187 -10560 -10656 -10708 0
-18187 -10558 -10659 -10707 0
-18187 -10558 -10657 -10708 0
-18187 -10558 -10656 -10710 0
-18187 -10556 -10661 -10707 0
-18187 -10556 -10659 -10708 0
-18187 -10556 -10657 -10710 0
-18187 -10556 -10656 -10712 0
-18187 -10554 -10663 -10707 0
-18187 -10554 -10661 -10708 0
-18187 -10554 -10659 -10710 0
-18187 -10554 -10657 -10712 0
-18187 -10554 -10656 -10714 0
-18187 -10552 -10665 -10707 0
-18187 -10552 -10663 -10708 0
-18187 -10552 -10661 -10710 0
-18187 -10552 -10659 -10712 0
-18187 -10552 -10657 -10714 0
-18187 -10552 -10656 -10716 0
-18187 -10551 -10667 -10707 0
-18187 -10551 -10665 -10708 0
-18187 -10551 -10663 -10710 0
-18187 -10551 -10661 -10712 0
-18187 -10551 -10659 -10714 0
-18187 -10551 -10657 -10716 0
-18187 -10551 -10656 -10718 0
18187 10718 0
18187 10656 10716 0
18187 10657 10714 0
18187 10659 10712 0
18187 10661 10710 0
18187 10663 10708 0
18187 10665 10707 0
18187 10667 0
18187 10669 0
18187 10671 0
18187 10673 0
18187 10675 0
18187 10677 0
18187 10679 0
18187 10681 0
18187 10683 0
18187 10685 0
18187 10687 0
18187 10689 0
18187 10691 0
18187 10693 0
18187 10695 0
18187 10697 0
18187 10699 0
18187 10701 0
18187 10703 0
18187 10705 0
18187 10551 10716 0
18187 10551 10656 10714 0
18187 10551 10657 10712 0
18187 10551 10659 10710 0
18187 10551 10661 10708 0
18187 10551 10663 10707 0
18187 10551 10665 0
18187 10551 10667 0
18187 10551 10669 0
18187 10551 10671 0
18187 10551 10673 0
18187 10551 10675 0
18187 10551 10677 0
18187 10551 10679 0
18187 10551 10681 0
18187 10551 10683 0
18187 10551 10685 0
18187 10551 10687 0
18187 10551 10689 0
18187 10551 10691 0
18187 10551 10693 0
18187 10551 10695 0
18187 10551 10697 0
18187 10551 10699 0
18187 10551 10701 0
18187 10551 10703 0
18187 10551 10705 0
18187 10552 10714 0
18187 10552 10656 10712 0
18187 10552 10657 10710 0
18187 10552 10659 10708 0
18187 10552 10661 10707 0
18187 10552 10663 0
18187 10552 10665 0
18187 10552 10667 0
18187 10552 10669 0
18187 10552 10671 0
18187 10552 10673 0
18187 10552 10675 0
18187 10552 10677 0
18187 10552 10679 0
18187 10552 10681 0
18187 10552 10683 0
18187 10552 10685 0
18187 10552 10687 0
18187 10552 10689 0
18187 10552 10691 0
18187 10552 10693 0
18187 10552 10695 0
18187 10552 10697 0
18187 10552 10699 0
18187 10552 10701 0
18187 10552 10703 0
18187 10552 10705 0
18187 10554 10712 0
18187 10554 10656 10710 0
18187 10554 10657 10708 0
18187 10554 10659 10707 0
18187 10554 10661 0
18187 10554 10663 0
18187 10554 10665 0
18187 10554 10667 0
18187 10554 10669 0
18187 10554 10671 0
18187 10554 10673 0
18187 10554 10675 0
18187 10554 10677 0
18187 10554 10679 0
18187 10554 10681 0
18187 10554 10683 0
18187 10554 10685 0
18187 10554 10687 0
18187 10554 10689 0
18187 10554 10691 0
18187 10554 10693 0
18187 10554 10695 0
18187 10554 10697 0
18187 10554 10699 0
18187 10554 10701 0
18187 10554 10703 0
18187 10554 10705 0
18187 10556 10710 0
18187 10556 10656 10708 0
18187 10556 10657 10707 0
18187 10556 10659 0
18187 10556 10661 0
18187 10556 10663 0
18187 10556 10665 0
18187 10556 10667 0
18187 10556 10669 0
18187 10556 10671 0
18187 10556 10673 0
18187 10556 10675 0
18187 10556 10677 0
18187 10556 10679 0
18187 10556 10681 0
18187 10556 10683 0
18187 10556 10685 0
18187 10556 10687 0
18187 10556 10689 0
18187 10556 10691 0
18187 10556 10693 0
18187 10556 10695 0
18187 10556 10697 0
18187 10556 10699 0
18187 10556 10701 0
18187 10556 10703 0
18187 10556 10705 0
18187 10558 10708 0
18187 10558 10656 10707 0
18187 10558 10657 0
18187 10558 10659 0
18187 10558 10661 0
18187 10558 10663 0
18187 10558 10665 0
18187 10558 10667 0
18187 10558 10669 0
18187 10558 10671 0
18187 10558 10673 0
18187 10558 10675 0
18187 10558 10677 0
18187 10558 10679 0
18187 10558 10681 0
18187 10558 10683 0
18187 10558 10685 0
18187 10558 10687 0
18187 10558 10689 0
18187 10558 10691 0
18187 10558 10693 0
18187 10558 10695 0
18187 10558 10697 0
18187 10558 10699 0
18187 10558 10701 0
18187 10558 10703 0
18187 10558 10705 0
18187 10560 10707 0
18187 10560 10656 0
18187 10560 10657 0
18187 10560 10659 0
18187 10560 10661 0
18187 10560 10663 0
18187 10560 10665 0
18187 10560 10667 0
18187 10560 10669 0
18187 10560 10671 0
18187 10560 10673 0
18187 10560 10675 0
18187 10560 10677 0
18187 10560 10679 0
18187 10560 10681 0
18187 10560 10683 0
18187 10560 10685 0
18187 10560 10687 0
18187 10560 10689 0
18187 10560 10691 0
18187 10560 10693 0
18187 10560 10695 0
18187 10560 10697 0
18187 10560 10699 0
18187 10560 10701 0
18187 10560 10703 0
18187 10560 10705 0
18187 10562 0
18187 10562 10656 0
18187 10562 10657 0
18187 10562 10659 0
18187 10562 10661 0
18187 10562 10663 0
18187 10562 10665 0
18187 10562 10667 0
18187 10562 10669 0
18187 10562 10671 0
18187 10562 10673 0
18187 10562 10675 0
18187 10562 10677 0
18187 10562 10679 0
18187 10562 10681 0
18187 10562 10683 0
18187 10562 10685 0
18187 10562 10687 0
18187 10562 10689 0
18187 10562 10691 0
18187 10562 10693 0
18187 10562 10695 0
18187 10562 10697 0
18187 10562 10699 0
18187 10562 10701 0
18187 10562 10703 0
18187 10562 10705 0
18187 10564 0
18187 10564 10656 0
18187 10564 10657 0
18187 10564 10659 0
18187 10564 10661 0
18187 10564 10663 0
18187 10564 10665 0
18187 10564 10667 0
18187 10564 10669 0
18187 10564 10671 0
18187 10564 10673 0
18187 10564 10675 0
18187 10564 10677 0
18187 10564 10679 0
18187 10564 10681 0
18187 10564 10683 0
18187 10564 10685 0
18187 10564 10687 0
18187 10564 10689 0
18187 10564 10691 0
18187 10564 10693 0
18187 10564 10695 0
18187 10564 10697 0
18187 10564 10699 0
18187 10564 10701 0
18187 10564 10703 0
18187 10564 10705 0
18187 10566 0
18187 10566 10656 0
18187 10566 10657 0
18187 10566 10659 0
18187 10566 10661 0
18187 10566 10663 0
18187 10566 10665 0
18187 10566 10667 0
18187 10566 10669 0
18187 10566 10671 0
18187 10566 10673 0
18187 10566 10675 0
18187 10566 10677 0
18187 10566 10679 0
18187 10566 10681 0
18187 10566 10683 0
18187 10566 10685 0
18187 10566 10687 0
18187 10566 10689 0
18187 10566 10691 0
18187 10566 10693 0
18187 10566 10695 0
18187 10566 10697 0
18187 10566 10699 0
18187 10566 10701 0
18187 10566 10703 0
18187 10566 10705 0
18187 10568 0
18187 10568 10656 0
18187 10568 10657 0
18187 10568 10659 0
18187 10568 10661 0
18187 10568 10663 0
18187 10568 10665 0
18187 10568 10667 0
18187 10568 10669 0
18187 10568 10671 0
18187 10568 10673 0
18187 10568 10675 0
18187 10568 10677 0
18187 10568 10679 0
18187 10568 10681 0
18187 10568 10683 0
18187 10568 10685 0
18187 10568 10687 0
18187 10568 10689 0
18187 10568 10691 0
18187 10568 10693 0
18187 10568 10695 0
18187 10568 10697 0
18187 10568 10699 0
18187 10568 10701 0
18187 10568 10703 0
18187 10568 10705 0
18187 10570 0
18187 10570 10656 0
18187 10570 10657 0
18187 10570 10659 0
18187 10570 10661 0
18187 10570 10663 0
18187 10570 10665 0
18187 10570 10667 0
18187 10570 10669 0
18187 10570 10671 0
18187 10570 10673 0
18187 10570 10675 0
18187 10570 10677 0
18187 10570 10679 0
18187 10570 10681 0
18187 10570 10683 0
18187 10570 10685 0
18187 10570 10687 0
18187 10570 10689 0
18187 10570 10691 0
18187 10570 10693 0
18187 10570 10695 0
18187 10570 10697 0
18187 10570 10699 0
18187 10570 10701 0
18187 10570 10703 0
18187 10570 10705 0
18187 10572 0
18187 10572 10656 0
18187 10572 10657 0
18187 10572 10659 0
18187 10572 10661 0
18187 10572 10663 0
18187 10572 10665 0
18187 10572 10667 0
18187 10572 10669 0
18187 10572 10671 0
18187 10572 10673 0
18187 10572 10675 0
18187 10572 10677 0
18187 10572 10679 0
18187 10572 10681 0
18187 10572 10683 0
18187 10572 10685 0
18187 10572 10687 0
18187 10572 10689 0
18187 10572 10691 0
18187 10572 10693 0
18187 10572 10695 0
18187 10572 10697 0
18187 10572 10699 0
18187 10572 10701 0
18187 10572 10703 0
18187 10572 10705 0
18187 10574 0
18187 10574 10656 0
18187 10574 10657 0
18187 10574 10659 0
18187 10574 10661 0
18187 10574 10663 0
18187 10574 10665 0
18187 10574 10667 0
18187 10574 10669 0
18187 10574 10671 0
18187 10574 10673 0
18187 10574 10675 0
18187 10574 10677 0
18187 10574 10679 0
18187 10574 10681 0
18187 10574 10683 0
18187 10574 10685 0
18187 10574 10687 0
18187 10574 10689 0
18187 10574 10691 0
18187 10574 10693 0
18187 10574 10695 0
18187 10574 10697 0
18187 10574 10699 0
18187 10574 10701 0
18187 10574 10703 0
18187 10574 10705 0
18187 10576 0
18187 10576 10656 0
18187 10576 10657 0
18187 10576 10659 0
18187 10576 10661 0
18187 10576 10663 0
18187 10576 10665 0
18187 10576 10667 0
18187 10576 10669 0
18187 10576 10671 0
18187 10576 10673 0
18187 10576 10675 0
18187 10576 10677 0
18187 10576 10679 0
18187 10576 10681 0
18187 10576 10683 0
18187 10576 10685 0
18187 10576 10687 0
18187 10576 10689 0
18187 10576 10691 0
18187 10576 10693 0
18187 10576 10695 0
18187 10576 10697 0
18187 10576 10699 0
18187 10576 10701 0
18187 10576 10703 0
18187 10576 10705 0
18187 10578 0
18187 10578 10656 0
18187 10578 10657 0
18187 10578 10659 0
18187 10578 10661 0
18187 10578 10663 0
18187 10578 10665 0
18187 10578 10667 0
18187 10578 10669 0
18187 10578 10671 0
18187 10578 10673 0
18187 10578 10675 0
18187 10578 10677 0
18187 10578 10679 0
18187 10578 10681 0
18187 10578 10683 0
18187 10578 10685 0
18187 10578 10687 0
18187 10578 10689 0
18187 10578 10691 0
18187 10578 10693 0
18187 10578 10695 0
18187 10578 10697 0
18187 10578 10699 0
18187 10578 10701 0
18187 10578 10703 0
18187 10578 10705 0
18187 10580 0
18187 10580 10656 0
18187 10580 10657 0
18187 10580 10659 0
18187 10580 10661 0
18187 10580 10663 0
18187 10580 10665 0
18187 10580 10667 0
18187 10580 10669 0
18187 10580 10671 0
18187 10580 10673 0
18187 10580 10675 0
18187 10580 10677 0
18187 10580 10679 0
18187 10580 10681 0
18187 10580 10683 0
18187 10580 10685 0
18187 10580 10687 0
18187 10580 10689 0
18187 10580 10691 0
18187 10580 10693 0
18187 10580 10695 0
18187 10580 10697 0
18187 10580 10699 0
18187 10580 10701 0
18187 10580 10703 0
18187 10580 10705 0
18187 10582 0
18187 10582 10656 0
18187 10582 10657 0
18187 10582 10659 0
18187 10582 10661 0
18187 10582 10663 0
18187 10582 10665 0
18187 10582 10667 0
18187 10582 10669 0
18187 10582 10671 0
18187 10582 10673 0
18187 10582 10675 0
18187 10582 10677 0
18187 10582 10679 0
18187 10582 10681 0
18187 10582 10683 0
18187 10582 10685 0
18187 10582 10687 0
18187 10582 10689 0
18187 10582 10691 0
18187 10582 10693 0
18187 10582 10695 0
18187 10582 10697 0
18187 10582 10699 0
18187 10582 10701 0
18187 10582 10703 0
18187 10582 10705 0
18187 10584 0
18187 10584 10656 0
18187 10584 10657 0
18187 10584 10659 0
18187 10584 10661 0
18187 10584 10663 0
18187 10584 10665 0
18187 10584 10667 0
18187 10584 10669 0
18187 10584 10671 0
18187 10584 10673 0
18187 10584 10675 0
18187 10584 10677 0
18187 10584 10679 0
18187 10584 10681 0
18187 10584 10683 0
18187 10584 10685 0
18187 10584 10687 0
18187 10584 10689 0
18187 10584 10691 0
18187 10584 10693 0
18187 10584 10695 0
18187 10584 10697 0
18187 10584 10699 0
18187 10584 10701 0
18187 10584 10703 0
18187 10584 10705 0
c (((aux433 + aux436 + aux437)<=16)=tv=SATLiteral(18188))
-18188 10998 0
-18188 10916 10996 0
-18188 10917 10994 0
-18188 10919 10992 0
-18188 10921 10990 0
-18188 10923 10988 0
-18188 10925 10986 0
-18188 10927 10984 0
-18188 10929 10982 0
-18188 10931 10980 0
-18188 10933 10978 0
-18188 10935 10976 0
-18188 10937 10974 0
-18188 10939 10972 0
-18188 10941 10970 0
-18188 10943 10968 0
-18188 10945 10967 0
-18188 10947 0
-18188 10949 0
-18188 10951 0
-18188 10953 0
-18188 10955 0
-18188 10957 0
-18188 10959 0
-18188 10961 0
-18188 10963 0
-18188 10965 0
-18188 10811 10996 0
-18188 10811 10916 10994 0
-18188 10811 10917 10992 0
-18188 10811 10919 10990 0
-18188 10811 10921 10988 0
-18188 10811 10923 10986 0
-18188 10811 10925 10984 0
-18188 10811 10927 10982 0
-18188 10811 10929 10980 0
-18188 10811 10931 10978 0
-18188 10811 10933 10976 0
-18188 10811 10935 10974 0
-18188 10811 10937 10972 0
-18188 10811 10939 10970 0
-18188 10811 10941 10968 0
-18188 10811 10943 10967 0
-18188 10811 10945 0
-18188 10811 10947 0
-18188 10811 10949 0
-18188 10811 10951 0
-18188 10811 10953 0
-18188 10811 10955 0
-18188 10811 10957 0
-18188 10811 10959 0
-18188 10811 10961 0
-18188 10811 10963 0
-18188 10811 10965 0
-18188 10812 10994 0
-18188 10812 10916 10992 0
-18188 10812 10917 10990 0
-18188 10812 10919 10988 0
-18188 10812 10921 10986 0
-18188 10812 10923 10984 0
-18188 10812 10925 10982 0
-18188 10812 10927 10980 0
-18188 10812 10929 10978 0
-18188 10812 10931 10976 0
-18188 10812 10933 10974 0
-18188 10812 10935 10972 0
-18188 10812 10937 10970 0
-18188 10812 10939 10968 0
-18188 10812 10941 10967 0
-18188 10812 10943 0
-18188 10812 10945 0
-18188 10812 10947 0
-18188 10812 10949 0
-18188 10812 10951 0
-18188 10812 10953 0
-18188 10812 10955 0
-18188 10812 10957 0
-18188 10812 10959 0
-18188 10812 10961 0
-18188 10812 10963 0
-18188 10812 10965 0
-18188 10814 10992 0
-18188 10814 10916 10990 0
-18188 10814 10917 10988 0
-18188 10814 10919 10986 0
-18188 10814 10921 10984 0
-18188 10814 10923 10982 0
-18188 10814 10925 10980 0
-18188 10814 10927 10978 0
-18188 10814 10929 10976 0
-18188 10814 10931 10974 0
-18188 10814 10933 10972 0
-18188 10814 10935 10970 0
-18188 10814 10937 10968 0
-18188 10814 10939 10967 0
-18188 10814 10941 0
-18188 10814 10943 0
-18188 10814 10945 0
-18188 10814 10947 0
-18188 10814 10949 0
-18188 10814 10951 0
-18188 10814 10953 0
-18188 10814 10955 0
-18188 10814 10957 0
-18188 10814 10959 0
-18188 10814 10961 0
-18188 10814 10963 0
-18188 10814 10965 0
-18188 10816 10990 0
-18188 10816 10916 10988 0
-18188 10816 10917 10986 0
-18188 10816 10919 10984 0
-18188 10816 10921 10982 0
-18188 10816 10923 10980 0
-18188 10816 10925 10978 0
-18188 10816 10927 10976 0
-18188 10816 10929 10974 0
-18188 10816 10931 10972 0
-18188 10816 10933 10970 0
-18188 10816 10935 10968 0
-18188 10816 10937 10967 0
-18188 10816 10939 0
-18188 10816 10941 0
-18188 10816 10943 0
-18188 10816 10945 0
-18188 10816 10947 0
-18188 10816 10949 0
-18188 10816 10951 0
-18188 10816 10953 0
-18188 10816 10955 0
-18188 10816 10957 0
-18188 10816 10959 0
-18188 10816 10961 0
-18188 10816 10963 0
-18188 10816 10965 0
-18188 10818 10988 0
-18188 10818 10916 10986 0
-18188 10818 10917 10984 0
-18188 10818 10919 10982 0
-18188 10818 10921 10980 0
-18188 10818 10923 10978 0
-18188 10818 10925 10976 0
-18188 10818 10927 10974 0
-18188 10818 10929 10972 0
-18188 10818 10931 10970 0
-18188 10818 10933 10968 0
-18188 10818 10935 10967 0
-18188 10818 10937 0
-18188 10818 10939 0
-18188 10818 10941 0
-18188 10818 10943 0
-18188 10818 10945 0
-18188 10818 10947 0
-18188 10818 10949 0
-18188 10818 10951 0
-18188 10818 10953 0
-18188 10818 10955 0
-18188 10818 10957 0
-18188 10818 10959 0
-18188 10818 10961 0
-18188 10818 10963 0
-18188 10818 10965 0
-18188 10820 10986 0
-18188 10820 10916 10984 0
-18188 10820 10917 10982 0
-18188 10820 10919 10980 0
-18188 10820 10921 10978 0
-18188 10820 10923 10976 0
-18188 10820 10925 10974 0
-18188 10820 10927 10972 0
-18188 10820 10929 10970 0
-18188 10820 10931 10968 0
-18188 10820 10933 10967 0
-18188 10820 10935 0
-18188 10820 10937 0
-18188 10820 10939 0
-18188 10820 10941 0
-18188 10820 10943 0
-18188 10820 10945 0
-18188 10820 10947 0
-18188 10820 10949 0
-18188 10820 10951 0
-18188 10820 10953 0
-18188 10820 10955 0
-18188 10820 10957 0
-18188 10820 10959 0
-18188 10820 10961 0
-18188 10820 10963 0
-18188 10820 10965 0
-18188 10822 10984 0
-18188 10822 10916 10982 0
-18188 10822 10917 10980 0
-18188 10822 10919 10978 0
-18188 10822 10921 10976 0
-18188 10822 10923 10974 0
-18188 10822 10925 10972 0
-18188 10822 10927 10970 0
-18188 10822 10929 10968 0
-18188 10822 10931 10967 0
-18188 10822 10933 0
-18188 10822 10935 0
-18188 10822 10937 0
-18188 10822 10939 0
-18188 10822 10941 0
-18188 10822 10943 0
-18188 10822 10945 0
-18188 10822 10947 0
-18188 10822 10949 0
-18188 10822 10951 0
-18188 10822 10953 0
-18188 10822 10955 0
-18188 10822 10957 0
-18188 10822 10959 0
-18188 10822 10961 0
-18188 10822 10963 0
-18188 10822 10965 0
-18188 10824 10982 0
-18188 10824 10916 10980 0
-18188 10824 10917 10978 0
-18188 10824 10919 10976 0
-18188 10824 10921 10974 0
-18188 10824 10923 10972 0
-18188 10824 10925 10970 0
-18188 10824 10927 10968 0
-18188 10824 10929 10967 0
-18188 10824 10931 0
-18188 10824 10933 0
-18188 10824 10935 0
-18188 10824 10937 0
-18188 10824 10939 0
-18188 10824 10941 0
-18188 10824 10943 0
-18188 10824 10945 0
-18188 10824 10947 0
-18188 10824 10949 0
-18188 10824 10951 0
-18188 10824 10953 0
-18188 10824 10955 0
-18188 10824 10957 0
-18188 10824 10959 0
-18188 10824 10961 0
-18188 10824 10963 0
-18188 10824 10965 0
-18188 10826 10980 0
-18188 10826 10916 10978 0
-18188 10826 10917 10976 0
-18188 10826 10919 10974 0
-18188 10826 10921 10972 0
-18188 10826 10923 10970 0
-18188 10826 10925 10968 0
-18188 10826 10927 10967 0
-18188 10826 10929 0
-18188 10826 10931 0
-18188 10826 10933 0
-18188 10826 10935 0
-18188 10826 10937 0
-18188 10826 10939 0
-18188 10826 10941 0
-18188 10826 10943 0
-18188 10826 10945 0
-18188 10826 10947 0
-18188 10826 10949 0
-18188 10826 10951 0
-18188 10826 10953 0
-18188 10826 10955 0
-18188 10826 10957 0
-18188 10826 10959 0
-18188 10826 10961 0
-18188 10826 10963 0
-18188 10826 10965 0
-18188 10828 10978 0
-18188 10828 10916 10976 0
-18188 10828 10917 10974 0
-18188 10828 10919 10972 0
-18188 10828 10921 10970 0
-18188 10828 10923 10968 0
-18188 10828 10925 10967 0
-18188 10828 10927 0
-18188 10828 10929 0
-18188 10828 10931 0
-18188 10828 10933 0
-18188 10828 10935 0
-18188 10828 10937 0
-18188 10828 10939 0
-18188 10828 10941 0
-18188 10828 10943 0
-18188 10828 10945 0
-18188 10828 10947 0
-18188 10828 10949 0
-18188 10828 10951 0
-18188 10828 10953 0
-18188 10828 10955 0
-18188 10828 10957 0
-18188 10828 10959 0
-18188 10828 10961 0
-18188 10828 10963 0
-18188 10828 10965 0
-18188 10830 10976 0
-18188 10830 10916 10974 0
-18188 10830 10917 10972 0
-18188 10830 10919 10970 0
-18188 10830 10921 10968 0
-18188 10830 10923 10967 0
-18188 10830 10925 0
-18188 10830 10927 0
-18188 10830 10929 0
-18188 10830 10931 0
-18188 10830 10933 0
-18188 10830 10935 0
-18188 10830 10937 0
-18188 10830 10939 0
-18188 10830 10941 0
-18188 10830 10943 0
-18188 10830 10945 0
-18188 10830 10947 0
-18188 10830 10949 0
-18188 10830 10951 0
-18188 10830 10953 0
-18188 10830 10955 0
-18188 10830 10957 0
-18188 10830 10959 0
-18188 10830 10961 0
-18188 10830 10963 0
-18188 10830 10965 0
-18188 10832 10974 0
-18188 10832 10916 10972 0
-18188 10832 10917 10970 0
-18188 10832 10919 10968 0
-18188 10832 10921 10967 0
-18188 10832 10923 0
-18188 10832 10925 0
-18188 10832 10927 0
-18188 10832 10929 0
-18188 10832 10931 0
-18188 10832 10933 0
-18188 10832 10935 0
-18188 10832 10937 0
-18188 10832 10939 0
-18188 10832 10941 0
-18188 10832 10943 0
-18188 10832 10945 0
-18188 10832 10947 0
-18188 10832 10949 0
-18188 10832 10951 0
-18188 10832 10953 0
-18188 10832 10955 0
-18188 10832 10957 0
-18188 10832 10959 0
-18188 10832 10961 0
-18188 10832 10963 0
-18188 10832 10965 0
-18188 10834 10972 0
-18188 10834 10916 10970 0
-18188 10834 10917 10968 0
-18188 10834 10919 10967 0
-18188 10834 10921 0
-18188 10834 10923 0
-18188 10834 10925 0
-18188 10834 10927 0
-18188 10834 10929 0
-18188 10834 10931 0
-18188 10834 10933 0
-18188 10834 10935 0
-18188 10834 10937 0
-18188 10834 10939 0
-18188 10834 10941 0
-18188 10834 10943 0
-18188 10834 10945 0
-18188 10834 10947 0
-18188 10834 10949 0
-18188 10834 10951 0
-18188 10834 10953 0
-18188 10834 10955 0
-18188 10834 10957 0
-18188 10834 10959 0
-18188 10834 10961 0
-18188 10834 10963 0
-18188 10834 10965 0
-18188 10836 10970 0
-18188 10836 10916 10968 0
-18188 10836 10917 10967 0
-18188 10836 10919 0
-18188 10836 10921 0
-18188 10836 10923 0
-18188 10836 10925 0
-18188 10836 10927 0
-18188 10836 10929 0
-18188 10836 10931 0
-18188 10836 10933 0
-18188 10836 10935 0
-18188 10836 10937 0
-18188 10836 10939 0
-18188 10836 10941 0
-18188 10836 10943 0
-18188 10836 10945 0
-18188 10836 10947 0
-18188 10836 10949 0
-18188 10836 10951 0
-18188 10836 10953 0
-18188 10836 10955 0
-18188 10836 10957 0
-18188 10836 10959 0
-18188 10836 10961 0
-18188 10836 10963 0
-18188 10836 10965 0
-18188 10838 10968 0
-18188 10838 10916 10967 0
-18188 10838 10917 0
-18188 10838 10919 0
-18188 10838 10921 0
-18188 10838 10923 0
-18188 10838 10925 0
-18188 10838 10927 0
-18188 10838 10929 0
-18188 10838 10931 0
-18188 10838 10933 0
-18188 10838 10935 0
-18188 10838 10937 0
-18188 10838 10939 0
-18188 10838 10941 0
-18188 10838 10943 0
-18188 10838 10945 0
-18188 10838 10947 0
-18188 10838 10949 0
-18188 10838 10951 0
-18188 10838 10953 0
-18188 10838 10955 0
-18188 10838 10957 0
-18188 10838 10959 0
-18188 10838 10961 0
-18188 10838 10963 0
-18188 10838 10965 0
-18188 10840 10967 0
-18188 10840 10916 0
-18188 10840 10917 0
-18188 10840 10919 0
-18188 10840 10921 0
-18188 10840 10923 0
-18188 10840 10925 0
-18188 10840 10927 0
-18188 10840 10929 0
-18188 10840 10931 0
-18188 10840 10933 0
-18188 10840 10935 0
-18188 10840 10937 0
-18188 10840 10939 0
-18188 10840 10941 0
-18188 10840 10943 0
-18188 10840 10945 0
-18188 10840 10947 0
-18188 10840 10949 0
-18188 10840 10951 0
-18188 10840 10953 0
-18188 10840 10955 0
-18188 10840 10957 0
-18188 10840 10959 0
-18188 10840 10961 0
-18188 10840 10963 0
-18188 10840 10965 0
-18188 10842 0
-18188 10842 10916 0
-18188 10842 10917 0
-18188 10842 10919 0
-18188 10842 10921 0
-18188 10842 10923 0
-18188 10842 10925 0
-18188 10842 10927 0
-18188 10842 10929 0
-18188 10842 10931 0
-18188 10842 10933 0
-18188 10842 10935 0
-18188 10842 10937 0
-18188 10842 10939 0
-18188 10842 10941 0
-18188 10842 10943 0
-18188 10842 10945 0
-18188 10842 10947 0
-18188 10842 10949 0
-18188 10842 10951 0
-18188 10842 10953 0
-18188 10842 10955 0
-18188 10842 10957 0
-18188 10842 10959 0
-18188 10842 10961 0
-18188 10842 10963 0
-18188 10842 10965 0
-18188 10844 0
-18188 10844 10916 0
-18188 10844 10917 0
-18188 10844 10919 0
-18188 10844 10921 0
-18188 10844 10923 0
-18188 10844 10925 0
-18188 10844 10927 0
-18188 10844 10929 0
-18188 10844 10931 0
-18188 10844 10933 0
-18188 10844 10935 0
-18188 10844 10937 0
-18188 10844 10939 0
-18188 10844 10941 0
-18188 10844 10943 0
-18188 10844 10945 0
-18188 10844 10947 0
-18188 10844 10949 0
-18188 10844 10951 0
-18188 10844 10953 0
-18188 10844 10955 0
-18188 10844 10957 0
-18188 10844 10959 0
-18188 10844 10961 0
-18188 10844 10963 0
-18188 10844 10965 0
18188 -10842 -10916 -10967 0
18188 -10840 -10917 -10967 0
18188 -10840 -10916 -10968 0
18188 -10838 -10919 -10967 0
18188 -10838 -10917 -10968 0
18188 -10838 -10916 -10970 0
18188 -10836 -10921 -10967 0
18188 -10836 -10919 -10968 0
18188 -10836 -10917 -10970 0
18188 -10836 -10916 -10972 0
18188 -10834 -10923 -10967 0
18188 -10834 -10921 -10968 0
18188 -10834 -10919 -10970 0
18188 -10834 -10917 -10972 0
18188 -10834 -10916 -10974 0
18188 -10832 -10925 -10967 0
18188 -10832 -10923 -10968 0
18188 -10832 -10921 -10970 0
18188 -10832 -10919 -10972 0
18188 -10832 -10917 -10974 0
18188 -10832 -10916 -10976 0
18188 -10830 -10927 -10967 0
18188 -10830 -10925 -10968 0
18188 -10830 -10923 -10970 0
18188 -10830 -10921 -10972 0
18188 -10830 -10919 -10974 0
18188 -10830 -10917 -10976 0
18188 -10830 -10916 -10978 0
18188 -10828 -10929 -10967 0
18188 -10828 -10927 -10968 0
18188 -10828 -10925 -10970 0
18188 -10828 -10923 -10972 0
18188 -10828 -10921 -10974 0
18188 -10828 -10919 -10976 0
18188 -10828 -10917 -10978 0
18188 -10828 -10916 -10980 0
18188 -10826 -10931 -10967 0
18188 -10826 -10929 -10968 0
18188 -10826 -10927 -10970 0
18188 -10826 -10925 -10972 0
18188 -10826 -10923 -10974 0
18188 -10826 -10921 -10976 0
18188 -10826 -10919 -10978 0
18188 -10826 -10917 -10980 0
18188 -10826 -10916 -10982 0
18188 -10824 -10933 -10967 0
18188 -10824 -10931 -10968 0
18188 -10824 -10929 -10970 0
18188 -10824 -10927 -10972 0
18188 -10824 -10925 -10974 0
18188 -10824 -10923 -10976 0
18188 -10824 -10921 -10978 0
18188 -10824 -10919 -10980 0
18188 -10824 -10917 -10982 0
18188 -10824 -10916 -10984 0
18188 -10822 -10935 -10967 0
18188 -10822 -10933 -10968 0
18188 -10822 -10931 -10970 0
18188 -10822 -10929 -10972 0
18188 -10822 -10927 -10974 0
18188 -10822 -10925 -10976 0
18188 -10822 -10923 -10978 0
18188 -10822 -10921 -10980 0
18188 -10822 -10919 -10982 0
18188 -10822 -10917 -10984 0
18188 -10822 -10916 -10986 0
18188 -10820 -10937 -10967 0
18188 -10820 -10935 -10968 0
18188 -10820 -10933 -10970 0
18188 -10820 -10931 -10972 0
18188 -10820 -10929 -10974 0
18188 -10820 -10927 -10976 0
18188 -10820 -10925 -10978 0
18188 -10820 -10923 -10980 0
18188 -10820 -10921 -10982 0
18188 -10820 -10919 -10984 0
18188 -10820 -10917 -10986 0
18188 -10820 -10916 -10988 0
18188 -10818 -10939 -10967 0
18188 -10818 -10937 -10968 0
18188 -10818 -10935 -10970 0
18188 -10818 -10933 -10972 0
18188 -10818 -10931 -10974 0
18188 -10818 -10929 -10976 0
18188 -10818 -10927 -10978 0
18188 -10818 -10925 -10980 0
18188 -10818 -10923 -10982 0
18188 -10818 -10921 -10984 0
18188 -10818 -10919 -10986 0
18188 -10818 -10917 -10988 0
18188 -10818 -10916 -10990 0
18188 -10816 -10941 -10967 0
18188 -10816 -10939 -10968 0
18188 -10816 -10937 -10970 0
18188 -10816 -10935 -10972 0
18188 -10816 -10933 -10974 0
18188 -10816 -10931 -10976 0
18188 -10816 -10929 -10978 0
18188 -10816 -10927 -10980 0
18188 -10816 -10925 -10982 0
18188 -10816 -10923 -10984 0
18188 -10816 -10921 -10986 0
18188 -10816 -10919 -10988 0
18188 -10816 -10917 -10990 0
18188 -10816 -10916 -10992 0
18188 -10814 -10943 -10967 0
18188 -10814 -10941 -10968 0
18188 -10814 -10939 -10970 0
18188 -10814 -10937 -10972 0
18188 -10814 -10935 -10974 0
18188 -10814 -10933 -10976 0
18188 -10814 -10931 -10978 0
18188 -10814 -10929 -10980 0
18188 -10814 -10927 -10982 0
18188 -10814 -10925 -10984 0
18188 -10814 -10923 -10986 0
18188 -10814 -10921 -10988 0
18188 -10814 -10919 -10990 0
18188 -10814 -10917 -10992 0
18188 -10814 -10916 -10994 0
18188 -10812 -10945 -10967 0
18188 -10812 -10943 -10968 0
18188 -10812 -10941 -10970 0
18188 -10812 -10939 -10972 0
18188 -10812 -10937 -10974 0
18188 -10812 -10935 -10976 0
18188 -10812 -10933 -10978 0
18188 -10812 -10931 -10980 0
18188 -10812 -10929 -10982 0
18188 -10812 -10927 -10984 0
18188 -10812 -10925 -10986 0
18188 -10812 -10923 -10988 0
18188 -10812 -10921 -10990 0
18188 -10812 -10919 -10992 0
18188 -10812 -10917 -10994 0
18188 -10812 -10916 -10996 0
18188 -10811 -10947 -10967 0
18188 -10811 -10945 -10968 0
18188 -10811 -10943 -10970 0
18188 -10811 -10941 -10972 0
18188 -10811 -10939 -10974 0
18188 -10811 -10937 -10976 0
18188 -10811 -10935 -10978 0
18188 -10811 -10933 -10980 0
18188 -10811 -10931 -10982 0
18188 -10811 -10929 -10984 0
18188 -10811 -10927 -10986 0
18188 -10811 -10925 -10988 0
18188 -10811 -10923 -10990 0
18188 -10811 -10921 -10992 0
18188 -10811 -10919 -10994 0
18188 -10811 -10917 -10996 0
18188 -10811 -10916 -10998 0
c ((16<=(aux433 + aux436 + aux437))=tv=SATLiteral(18189))
-18189 -10840 -10916 -10967 0
-18189 -10838 -10917 -10967 0
-18189 -10838 -10916 -10968 0
-18189 -10836 -10919 -10967 0
-18189 -10836 -10917 -10968 0
-18189 -10836 -10916 -10970 0
-18189 -10834 -10921 -10967 0
-18189 -10834 -10919 -10968 0
-18189 -10834 -10917 -10970 0
-18189 -10834 -10916 -10972 0
-18189 -10832 -10923 -10967 0
-18189 -10832 -10921 -10968 0
-18189 -10832 -10919 -10970 0
-18189 -10832 -10917 -10972 0
-18189 -10832 -10916 -10974 0
-18189 -10830 -10925 -10967 0
-18189 -10830 -10923 -10968 0
-18189 -10830 -10921 -10970 0
-18189 -10830 -10919 -10972 0
-18189 -10830 -10917 -10974 0
-18189 -10830 -10916 -10976 0
-18189 -10828 -10927 -10967 0
-18189 -10828 -10925 -10968 0
-18189 -10828 -10923 -10970 0
-18189 -10828 -10921 -10972 0
-18189 -10828 -10919 -10974 0
-18189 -10828 -10917 -10976 0
-18189 -10828 -10916 -10978 0
-18189 -10826 -10929 -10967 0
-18189 -10826 -10927 -10968 0
-18189 -10826 -10925 -10970 0
-18189 -10826 -10923 -10972 0
-18189 -10826 -10921 -10974 0
-18189 -10826 -10919 -10976 0
-18189 -10826 -10917 -10978 0
-18189 -10826 -10916 -10980 0
-18189 -10824 -10931 -10967 0
-18189 -10824 -10929 -10968 0
-18189 -10824 -10927 -10970 0
-18189 -10824 -10925 -10972 0
-18189 -10824 -10923 -10974 0
-18189 -10824 -10921 -10976 0
-18189 -10824 -10919 -10978 0
-18189 -10824 -10917 -10980 0
-18189 -10824 -10916 -10982 0
-18189 -10822 -10933 -10967 0
-18189 -10822 -10931 -10968 0
-18189 -10822 -10929 -10970 0
-18189 -10822 -10927 -10972 0
-18189 -10822 -10925 -10974 0
-18189 -10822 -10923 -10976 0
-18189 -10822 -10921 -10978 0
-18189 -10822 -10919 -10980 0
-18189 -10822 -10917 -10982 0
-18189 -10822 -10916 -10984 0
-18189 -10820 -10935 -10967 0
-18189 -10820 -10933 -10968 0
-18189 -10820 -10931 -10970 0
-18189 -10820 -10929 -10972 0
-18189 -10820 -10927 -10974 0
-18189 -10820 -10925 -10976 0
-18189 -10820 -10923 -10978 0
-18189 -10820 -10921 -10980 0
-18189 -10820 -10919 -10982 0
-18189 -10820 -10917 -10984 0
-18189 -10820 -10916 -10986 0
-18189 -10818 -10937 -10967 0
-18189 -10818 -10935 -10968 0
-18189 -10818 -10933 -10970 0
-18189 -10818 -10931 -10972 0
-18189 -10818 -10929 -10974 0
-18189 -10818 -10927 -10976 0
-18189 -10818 -10925 -10978 0
-18189 -10818 -10923 -10980 0
-18189 -10818 -10921 -10982 0
-18189 -10818 -10919 -10984 0
-18189 -10818 -10917 -10986 0
-18189 -10818 -10916 -10988 0
-18189 -10816 -10939 -10967 0
-18189 -10816 -10937 -10968 0
-18189 -10816 -10935 -10970 0
-18189 -10816 -10933 -10972 0
-18189 -10816 -10931 -10974 0
-18189 -10816 -10929 -10976 0
-18189 -10816 -10927 -10978 0
-18189 -10816 -10925 -10980 0
-18189 -10816 -10923 -10982 0
-18189 -10816 -10921 -10984 0
-18189 -10816 -10919 -10986 0
-18189 -10816 -10917 -10988 0
-18189 -10816 -10916 -10990 0
-18189 -10814 -10941 -10967 0
-18189 -10814 -10939 -10968 0
-18189 -10814 -10937 -10970 0
-18189 -10814 -10935 -10972 0
-18189 -10814 -10933 -10974 0
-18189 -10814 -10931 -10976 0
-18189 -10814 -10929 -10978 0
-18189 -10814 -10927 -10980 0
-18189 -10814 -10925 -10982 0
-18189 -10814 -10923 -10984 0
-18189 -10814 -10921 -10986 0
-18189 -10814 -10919 -10988 0
-18189 -10814 -10917 -10990 0
-18189 -10814 -10916 -10992 0
-18189 -10812 -10943 -10967 0
-18189 -10812 -10941 -10968 0
-18189 -10812 -10939 -10970 0
-18189 -10812 -10937 -10972 0
-18189 -10812 -10935 -10974 0
-18189 -10812 -10933 -10976 0
-18189 -10812 -10931 -10978 0
-18189 -10812 -10929 -10980 0
-18189 -10812 -10927 -10982 0
-18189 -10812 -10925 -10984 0
-18189 -10812 -10923 -10986 0
-18189 -10812 -10921 -10988 0
-18189 -10812 -10919 -10990 0
-18189 -10812 -10917 -10992 0
-18189 -10812 -10916 -10994 0
-18189 -10811 -10945 -10967 0
-18189 -10811 -10943 -10968 0
-18189 -10811 -10941 -10970 0
-18189 -10811 -10939 -10972 0
-18189 -10811 -10937 -10974 0
-18189 -10811 -10935 -10976 0
-18189 -10811 -10933 -10978 0
-18189 -10811 -10931 -10980 0
-18189 -10811 -10929 -10982 0
-18189 -10811 -10927 -10984 0
-18189 -10811 -10925 -10986 0
-18189 -10811 -10923 -10988 0
-18189 -10811 -10921 -10990 0
-18189 -10811 -10919 -10992 0
-18189 -10811 -10917 -10994 0
-18189 -10811 -10916 -10996 0
18189 10996 0
18189 10916 10994 0
18189 10917 10992 0
18189 10919 10990 0
18189 10921 10988 0
18189 10923 10986 0
18189 10925 10984 0
18189 10927 10982 0
18189 10929 10980 0
18189 10931 10978 0
18189 10933 10976 0
18189 10935 10974 0
18189 10937 10972 0
18189 10939 10970 0
18189 10941 10968 0
18189 10943 10967 0
18189 10945 0
18189 10947 0
18189 10949 0
18189 10951 0
18189 10953 0
18189 10955 0
18189 10957 0
18189 10959 0
18189 10961 0
18189 10963 0
18189 10965 0
18189 10811 10994 0
18189 10811 10916 10992 0
18189 10811 10917 10990 0
18189 10811 10919 10988 0
18189 10811 10921 10986 0
18189 10811 10923 10984 0
18189 10811 10925 10982 0
18189 10811 10927 10980 0
18189 10811 10929 10978 0
18189 10811 10931 10976 0
18189 10811 10933 10974 0
18189 10811 10935 10972 0
18189 10811 10937 10970 0
18189 10811 10939 10968 0
18189 10811 10941 10967 0
18189 10811 10943 0
18189 10811 10945 0
18189 10811 10947 0
18189 10811 10949 0
18189 10811 10951 0
18189 10811 10953 0
18189 10811 10955 0
18189 10811 10957 0
18189 10811 10959 0
18189 10811 10961 0
18189 10811 10963 0
18189 10811 10965 0
18189 10812 10992 0
18189 10812 10916 10990 0
18189 10812 10917 10988 0
18189 10812 10919 10986 0
18189 10812 10921 10984 0
18189 10812 10923 10982 0
18189 10812 10925 10980 0
18189 10812 10927 10978 0
18189 10812 10929 10976 0
18189 10812 10931 10974 0
18189 10812 10933 10972 0
18189 10812 10935 10970 0
18189 10812 10937 10968 0
18189 10812 10939 10967 0
18189 10812 10941 0
18189 10812 10943 0
18189 10812 10945 0
18189 10812 10947 0
18189 10812 10949 0
18189 10812 10951 0
18189 10812 10953 0
18189 10812 10955 0
18189 10812 10957 0
18189 10812 10959 0
18189 10812 10961 0
18189 10812 10963 0
18189 10812 10965 0
18189 10814 10990 0
18189 10814 10916 10988 0
18189 10814 10917 10986 0
18189 10814 10919 10984 0
18189 10814 10921 10982 0
18189 10814 10923 10980 0
18189 10814 10925 10978 0
18189 10814 10927 10976 0
18189 10814 10929 10974 0
18189 10814 10931 10972 0
18189 10814 10933 10970 0
18189 10814 10935 10968 0
18189 10814 10937 10967 0
18189 10814 10939 0
18189 10814 10941 0
18189 10814 10943 0
18189 10814 10945 0
18189 10814 10947 0
18189 10814 10949 0
18189 10814 10951 0
18189 10814 10953 0
18189 10814 10955 0
18189 10814 10957 0
18189 10814 10959 0
18189 10814 10961 0
18189 10814 10963 0
18189 10814 10965 0
18189 10816 10988 0
18189 10816 10916 10986 0
18189 10816 10917 10984 0
18189 10816 10919 10982 0
18189 10816 10921 10980 0
18189 10816 10923 10978 0
18189 10816 10925 10976 0
18189 10816 10927 10974 0
18189 10816 10929 10972 0
18189 10816 10931 10970 0
18189 10816 10933 10968 0
18189 10816 10935 10967 0
18189 10816 10937 0
18189 10816 10939 0
18189 10816 10941 0
18189 10816 10943 0
18189 10816 10945 0
18189 10816 10947 0
18189 10816 10949 0
18189 10816 10951 0
18189 10816 10953 0
18189 10816 10955 0
18189 10816 10957 0
18189 10816 10959 0
18189 10816 10961 0
18189 10816 10963 0
18189 10816 10965 0
18189 10818 10986 0
18189 10818 10916 10984 0
18189 10818 10917 10982 0
18189 10818 10919 10980 0
18189 10818 10921 10978 0
18189 10818 10923 10976 0
18189 10818 10925 10974 0
18189 10818 10927 10972 0
18189 10818 10929 10970 0
18189 10818 10931 10968 0
18189 10818 10933 10967 0
18189 10818 10935 0
18189 10818 10937 0
18189 10818 10939 0
18189 10818 10941 0
18189 10818 10943 0
18189 10818 10945 0
18189 10818 10947 0
18189 10818 10949 0
18189 10818 10951 0
18189 10818 10953 0
18189 10818 10955 0
18189 10818 10957 0
18189 10818 10959 0
18189 10818 10961 0
18189 10818 10963 0
18189 10818 10965 0
18189 10820 10984 0
18189 10820 10916 10982 0
18189 10820 10917 10980 0
18189 10820 10919 10978 0
18189 10820 10921 10976 0
18189 10820 10923 10974 0
18189 10820 10925 10972 0
18189 10820 10927 10970 0
18189 10820 10929 10968 0
18189 10820 10931 10967 0
18189 10820 10933 0
18189 10820 10935 0
18189 10820 10937 0
18189 10820 10939 0
18189 10820 10941 0
18189 10820 10943 0
18189 10820 10945 0
18189 10820 10947 0
18189 10820 10949 0
18189 10820 10951 0
18189 10820 10953 0
18189 10820 10955 0
18189 10820 10957 0
18189 10820 10959 0
18189 10820 10961 0
18189 10820 10963 0
18189 10820 10965 0
18189 10822 10982 0
18189 10822 10916 10980 0
18189 10822 10917 10978 0
18189 10822 10919 10976 0
18189 10822 10921 10974 0
18189 10822 10923 10972 0
18189 10822 10925 10970 0
18189 10822 10927 10968 0
18189 10822 10929 10967 0
18189 10822 10931 0
18189 10822 10933 0
18189 10822 10935 0
18189 10822 10937 0
18189 10822 10939 0
18189 10822 10941 0
18189 10822 10943 0
18189 10822 10945 0
18189 10822 10947 0
18189 10822 10949 0
18189 10822 10951 0
18189 10822 10953 0
18189 10822 10955 0
18189 10822 10957 0
18189 10822 10959 0
18189 10822 10961 0
18189 10822 10963 0
18189 10822 10965 0
18189 10824 10980 0
18189 10824 10916 10978 0
18189 10824 10917 10976 0
18189 10824 10919 10974 0
18189 10824 10921 10972 0
18189 10824 10923 10970 0
18189 10824 10925 10968 0
18189 10824 10927 10967 0
18189 10824 10929 0
18189 10824 10931 0
18189 10824 10933 0
18189 10824 10935 0
18189 10824 10937 0
18189 10824 10939 0
18189 10824 10941 0
18189 10824 10943 0
18189 10824 10945 0
18189 10824 10947 0
18189 10824 10949 0
18189 10824 10951 0
18189 10824 10953 0
18189 10824 10955 0
18189 10824 10957 0
18189 10824 10959 0
18189 10824 10961 0
18189 10824 10963 0
18189 10824 10965 0
18189 10826 10978 0
18189 10826 10916 10976 0
18189 10826 10917 10974 0
18189 10826 10919 10972 0
18189 10826 10921 10970 0
18189 10826 10923 10968 0
18189 10826 10925 10967 0
18189 10826 10927 0
18189 10826 10929 0
18189 10826 10931 0
18189 10826 10933 0
18189 10826 10935 0
18189 10826 10937 0
18189 10826 10939 0
18189 10826 10941 0
18189 10826 10943 0
18189 10826 10945 0
18189 10826 10947 0
18189 10826 10949 0
18189 10826 10951 0
18189 10826 10953 0
18189 10826 10955 0
18189 10826 10957 0
18189 10826 10959 0
18189 10826 10961 0
18189 10826 10963 0
18189 10826 10965 0
18189 10828 10976 0
18189 10828 10916 10974 0
18189 10828 10917 10972 0
18189 10828 10919 10970 0
18189 10828 10921 10968 0
18189 10828 10923 10967 0
18189 10828 10925 0
18189 10828 10927 0
18189 10828 10929 0
18189 10828 10931 0
18189 10828 10933 0
18189 10828 10935 0
18189 10828 10937 0
18189 10828 10939 0
18189 10828 10941 0
18189 10828 10943 0
18189 10828 10945 0
18189 10828 10947 0
18189 10828 10949 0
18189 10828 10951 0
18189 10828 10953 0
18189 10828 10955 0
18189 10828 10957 0
18189 10828 10959 0
18189 10828 10961 0
18189 10828 10963 0
18189 10828 10965 0
18189 10830 10974 0
18189 10830 10916 10972 0
18189 10830 10917 10970 0
18189 10830 10919 10968 0
18189 10830 10921 10967 0
18189 10830 10923 0
18189 10830 10925 0
18189 10830 10927 0
18189 10830 10929 0
18189 10830 10931 0
18189 10830 10933 0
18189 10830 10935 0
18189 10830 10937 0
18189 10830 10939 0
18189 10830 10941 0
18189 10830 10943 0
18189 10830 10945 0
18189 10830 10947 0
18189 10830 10949 0
18189 10830 10951 0
18189 10830 10953 0
18189 10830 10955 0
18189 10830 10957 0
18189 10830 10959 0
18189 10830 10961 0
18189 10830 10963 0
18189 10830 10965 0
18189 10832 10972 0
18189 10832 10916 10970 0
18189 10832 10917 10968 0
18189 10832 10919 10967 0
18189 10832 10921 0
18189 10832 10923 0
18189 10832 10925 0
18189 10832 10927 0
18189 10832 10929 0
18189 10832 10931 0
18189 10832 10933 0
18189 10832 10935 0
18189 10832 10937 0
18189 10832 10939 0
18189 10832 10941 0
18189 10832 10943 0
18189 10832 10945 0
18189 10832 10947 0
18189 10832 10949 0
18189 10832 10951 0
18189 10832 10953 0
18189 10832 10955 0
18189 10832 10957 0
18189 10832 10959 0
18189 10832 10961 0
18189 10832 10963 0
18189 10832 10965 0
18189 10834 10970 0
18189 10834 10916 10968 0
18189 10834 10917 10967 0
18189 10834 10919 0
18189 10834 10921 0
18189 10834 10923 0
18189 10834 10925 0
18189 10834 10927 0
18189 10834 10929 0
18189 10834 10931 0
18189 10834 10933 0
18189 10834 10935 0
18189 10834 10937 0
18189 10834 10939 0
18189 10834 10941 0
18189 10834 10943 0
18189 10834 10945 0
18189 10834 10947 0
18189 10834 10949 0
18189 10834 10951 0
18189 10834 10953 0
18189 10834 10955 0
18189 10834 10957 0
18189 10834 10959 0
18189 10834 10961 0
18189 10834 10963 0
18189 10834 10965 0
18189 10836 10968 0
18189 10836 10916 10967 0
18189 10836 10917 0
18189 10836 10919 0
18189 10836 10921 0
18189 10836 10923 0
18189 10836 10925 0
18189 10836 10927 0
18189 10836 10929 0
18189 10836 10931 0
18189 10836 10933 0
18189 10836 10935 0
18189 10836 10937 0
18189 10836 10939 0
18189 10836 10941 0
18189 10836 10943 0
18189 10836 10945 0
18189 10836 10947 0
18189 10836 10949 0
18189 10836 10951 0
18189 10836 10953 0
18189 10836 10955 0
18189 10836 10957 0
18189 10836 10959 0
18189 10836 10961 0
18189 10836 10963 0
18189 10836 10965 0
18189 10838 10967 0
18189 10838 10916 0
18189 10838 10917 0
18189 10838 10919 0
18189 10838 10921 0
18189 10838 10923 0
18189 10838 10925 0
18189 10838 10927 0
18189 10838 10929 0
18189 10838 10931 0
18189 10838 10933 0
18189 10838 10935 0
18189 10838 10937 0
18189 10838 10939 0
18189 10838 10941 0
18189 10838 10943 0
18189 10838 10945 0
18189 10838 10947 0
18189 10838 10949 0
18189 10838 10951 0
18189 10838 10953 0
18189 10838 10955 0
18189 10838 10957 0
18189 10838 10959 0
18189 10838 10961 0
18189 10838 10963 0
18189 10838 10965 0
18189 10840 0
18189 10840 10916 0
18189 10840 10917 0
18189 10840 10919 0
18189 10840 10921 0
18189 10840 10923 0
18189 10840 10925 0
18189 10840 10927 0
18189 10840 10929 0
18189 10840 10931 0
18189 10840 10933 0
18189 10840 10935 0
18189 10840 10937 0
18189 10840 10939 0
18189 10840 10941 0
18189 10840 10943 0
18189 10840 10945 0
18189 10840 10947 0
18189 10840 10949 0
18189 10840 10951 0
18189 10840 10953 0
18189 10840 10955 0
18189 10840 10957 0
18189 10840 10959 0
18189 10840 10961 0
18189 10840 10963 0
18189 10840 10965 0
18189 10842 0
18189 10842 10916 0
18189 10842 10917 0
18189 10842 10919 0
18189 10842 10921 0
18189 10842 10923 0
18189 10842 10925 0
18189 10842 10927 0
18189 10842 10929 0
18189 10842 10931 0
18189 10842 10933 0
18189 10842 10935 0
18189 10842 10937 0
18189 10842 10939 0
18189 10842 10941 0
18189 10842 10943 0
18189 10842 10945 0
18189 10842 10947 0
18189 10842 10949 0
18189 10842 10951 0
18189 10842 10953 0
18189 10842 10955 0
18189 10842 10957 0
18189 10842 10959 0
18189 10842 10961 0
18189 10842 10963 0
18189 10842 10965 0
18189 10844 0
18189 10844 10916 0
18189 10844 10917 0
18189 10844 10919 0
18189 10844 10921 0
18189 10844 10923 0
18189 10844 10925 0
18189 10844 10927 0
18189 10844 10929 0
18189 10844 10931 0
18189 10844 10933 0
18189 10844 10935 0
18189 10844 10937 0
18189 10844 10939 0
18189 10844 10941 0
18189 10844 10943 0
18189 10844 10945 0
18189 10844 10947 0
18189 10844 10949 0
18189 10844 10951 0
18189 10844 10953 0
18189 10844 10955 0
18189 10844 10957 0
18189 10844 10959 0
18189 10844 10961 0
18189 10844 10963 0
18189 10844 10965 0
c (((aux439 + aux442 + aux443)<=29)=tv=SATLiteral(18190))
-18190 11284 0
-18190 11176 11282 0
-18190 11177 11280 0
-18190 11179 11278 0
-18190 11181 11276 0
-18190 11183 11274 0
-18190 11185 11272 0
-18190 11187 11270 0
-18190 11189 11268 0
-18190 11191 11266 0
-18190 11193 11264 0
-18190 11195 11262 0
-18190 11197 11260 0
-18190 11199 11258 0
-18190 11201 11256 0
-18190 11203 11254 0
-18190 11205 11252 0
-18190 11207 11250 0
-18190 11209 11248 0
-18190 11211 11246 0
-18190 11213 11244 0
-18190 11215 11242 0
-18190 11217 11240 0
-18190 11219 11238 0
-18190 11221 11236 0
-18190 11223 11234 0
-18190 11225 11232 0
-18190 11071 11282 0
-18190 11071 11176 11280 0
-18190 11071 11177 11278 0
-18190 11071 11179 11276 0
-18190 11071 11181 11274 0
-18190 11071 11183 11272 0
-18190 11071 11185 11270 0
-18190 11071 11187 11268 0
-18190 11071 11189 11266 0
-18190 11071 11191 11264 0
-18190 11071 11193 11262 0
-18190 11071 11195 11260 0
-18190 11071 11197 11258 0
-18190 11071 11199 11256 0
-18190 11071 11201 11254 0
-18190 11071 11203 11252 0
-18190 11071 11205 11250 0
-18190 11071 11207 11248 0
-18190 11071 11209 11246 0
-18190 11071 11211 11244 0
-18190 11071 11213 11242 0
-18190 11071 11215 11240 0
-18190 11071 11217 11238 0
-18190 11071 11219 11236 0
-18190 11071 11221 11234 0
-18190 11071 11223 11232 0
-18190 11071 11225 11230 0
-18190 11072 11280 0
-18190 11072 11176 11278 0
-18190 11072 11177 11276 0
-18190 11072 11179 11274 0
-18190 11072 11181 11272 0
-18190 11072 11183 11270 0
-18190 11072 11185 11268 0
-18190 11072 11187 11266 0
-18190 11072 11189 11264 0
-18190 11072 11191 11262 0
-18190 11072 11193 11260 0
-18190 11072 11195 11258 0
-18190 11072 11197 11256 0
-18190 11072 11199 11254 0
-18190 11072 11201 11252 0
-18190 11072 11203 11250 0
-18190 11072 11205 11248 0
-18190 11072 11207 11246 0
-18190 11072 11209 11244 0
-18190 11072 11211 11242 0
-18190 11072 11213 11240 0
-18190 11072 11215 11238 0
-18190 11072 11217 11236 0
-18190 11072 11219 11234 0
-18190 11072 11221 11232 0
-18190 11072 11223 11230 0
-18190 11072 11225 11228 0
-18190 11074 11278 0
-18190 11074 11176 11276 0
-18190 11074 11177 11274 0
-18190 11074 11179 11272 0
-18190 11074 11181 11270 0
-18190 11074 11183 11268 0
-18190 11074 11185 11266 0
-18190 11074 11187 11264 0
-18190 11074 11189 11262 0
-18190 11074 11191 11260 0
-18190 11074 11193 11258 0
-18190 11074 11195 11256 0
-18190 11074 11197 11254 0
-18190 11074 11199 11252 0
-18190 11074 11201 11250 0
-18190 11074 11203 11248 0
-18190 11074 11205 11246 0
-18190 11074 11207 11244 0
-18190 11074 11209 11242 0
-18190 11074 11211 11240 0
-18190 11074 11213 11238 0
-18190 11074 11215 11236 0
-18190 11074 11217 11234 0
-18190 11074 11219 11232 0
-18190 11074 11221 11230 0
-18190 11074 11223 11228 0
-18190 11074 11225 11227 0
-18190 11076 11276 0
-18190 11076 11176 11274 0
-18190 11076 11177 11272 0
-18190 11076 11179 11270 0
-18190 11076 11181 11268 0
-18190 11076 11183 11266 0
-18190 11076 11185 11264 0
-18190 11076 11187 11262 0
-18190 11076 11189 11260 0
-18190 11076 11191 11258 0
-18190 11076 11193 11256 0
-18190 11076 11195 11254 0
-18190 11076 11197 11252 0
-18190 11076 11199 11250 0
-18190 11076 11201 11248 0
-18190 11076 11203 11246 0
-18190 11076 11205 11244 0
-18190 11076 11207 11242 0
-18190 11076 11209 11240 0
-18190 11076 11211 11238 0
-18190 11076 11213 11236 0
-18190 11076 11215 11234 0
-18190 11076 11217 11232 0
-18190 11076 11219 11230 0
-18190 11076 11221 11228 0
-18190 11076 11223 11227 0
-18190 11076 11225 0
-18190 11078 11274 0
-18190 11078 11176 11272 0
-18190 11078 11177 11270 0
-18190 11078 11179 11268 0
-18190 11078 11181 11266 0
-18190 11078 11183 11264 0
-18190 11078 11185 11262 0
-18190 11078 11187 11260 0
-18190 11078 11189 11258 0
-18190 11078 11191 11256 0
-18190 11078 11193 11254 0
-18190 11078 11195 11252 0
-18190 11078 11197 11250 0
-18190 11078 11199 11248 0
-18190 11078 11201 11246 0
-18190 11078 11203 11244 0
-18190 11078 11205 11242 0
-18190 11078 11207 11240 0
-18190 11078 11209 11238 0
-18190 11078 11211 11236 0
-18190 11078 11213 11234 0
-18190 11078 11215 11232 0
-18190 11078 11217 11230 0
-18190 11078 11219 11228 0
-18190 11078 11221 11227 0
-18190 11078 11223 0
-18190 11078 11225 0
-18190 11080 11272 0
-18190 11080 11176 11270 0
-18190 11080 11177 11268 0
-18190 11080 11179 11266 0
-18190 11080 11181 11264 0
-18190 11080 11183 11262 0
-18190 11080 11185 11260 0
-18190 11080 11187 11258 0
-18190 11080 11189 11256 0
-18190 11080 11191 11254 0
-18190 11080 11193 11252 0
-18190 11080 11195 11250 0
-18190 11080 11197 11248 0
-18190 11080 11199 11246 0
-18190 11080 11201 11244 0
-18190 11080 11203 11242 0
-18190 11080 11205 11240 0
-18190 11080 11207 11238 0
-18190 11080 11209 11236 0
-18190 11080 11211 11234 0
-18190 11080 11213 11232 0
-18190 11080 11215 11230 0
-18190 11080 11217 11228 0
-18190 11080 11219 11227 0
-18190 11080 11221 0
-18190 11080 11223 0
-18190 11080 11225 0
-18190 11082 11270 0
-18190 11082 11176 11268 0
-18190 11082 11177 11266 0
-18190 11082 11179 11264 0
-18190 11082 11181 11262 0
-18190 11082 11183 11260 0
-18190 11082 11185 11258 0
-18190 11082 11187 11256 0
-18190 11082 11189 11254 0
-18190 11082 11191 11252 0
-18190 11082 11193 11250 0
-18190 11082 11195 11248 0
-18190 11082 11197 11246 0
-18190 11082 11199 11244 0
-18190 11082 11201 11242 0
-18190 11082 11203 11240 0
-18190 11082 11205 11238 0
-18190 11082 11207 11236 0
-18190 11082 11209 11234 0
-18190 11082 11211 11232 0
-18190 11082 11213 11230 0
-18190 11082 11215 11228 0
-18190 11082 11217 11227 0
-18190 11082 11219 0
-18190 11082 11221 0
-18190 11082 11223 0
-18190 11082 11225 0
-18190 11084 11268 0
-18190 11084 11176 11266 0
-18190 11084 11177 11264 0
-18190 11084 11179 11262 0
-18190 11084 11181 11260 0
-18190 11084 11183 11258 0
-18190 11084 11185 11256 0
-18190 11084 11187 11254 0
-18190 11084 11189 11252 0
-18190 11084 11191 11250 0
-18190 11084 11193 11248 0
-18190 11084 11195 11246 0
-18190 11084 11197 11244 0
-18190 11084 11199 11242 0
-18190 11084 11201 11240 0
-18190 11084 11203 11238 0
-18190 11084 11205 11236 0
-18190 11084 11207 11234 0
-18190 11084 11209 11232 0
-18190 11084 11211 11230 0
-18190 11084 11213 11228 0
-18190 11084 11215 11227 0
-18190 11084 11217 0
-18190 11084 11219 0
-18190 11084 11221 0
-18190 11084 11223 0
-18190 11084 11225 0
-18190 11086 11266 0
-18190 11086 11176 11264 0
-18190 11086 11177 11262 0
-18190 11086 11179 11260 0
-18190 11086 11181 11258 0
-18190 11086 11183 11256 0
-18190 11086 11185 11254 0
-18190 11086 11187 11252 0
-18190 11086 11189 11250 0
-18190 11086 11191 11248 0
-18190 11086 11193 11246 0
-18190 11086 11195 11244 0
-18190 11086 11197 11242 0
-18190 11086 11199 11240 0
-18190 11086 11201 11238 0
-18190 11086 11203 11236 0
-18190 11086 11205 11234 0
-18190 11086 11207 11232 0
-18190 11086 11209 11230 0
-18190 11086 11211 11228 0
-18190 11086 11213 11227 0
-18190 11086 11215 0
-18190 11086 11217 0
-18190 11086 11219 0
-18190 11086 11221 0
-18190 11086 11223 0
-18190 11086 11225 0
-18190 11088 11264 0
-18190 11088 11176 11262 0
-18190 11088 11177 11260 0
-18190 11088 11179 11258 0
-18190 11088 11181 11256 0
-18190 11088 11183 11254 0
-18190 11088 11185 11252 0
-18190 11088 11187 11250 0
-18190 11088 11189 11248 0
-18190 11088 11191 11246 0
-18190 11088 11193 11244 0
-18190 11088 11195 11242 0
-18190 11088 11197 11240 0
-18190 11088 11199 11238 0
-18190 11088 11201 11236 0
-18190 11088 11203 11234 0
-18190 11088 11205 11232 0
-18190 11088 11207 11230 0
-18190 11088 11209 11228 0
-18190 11088 11211 11227 0
-18190 11088 11213 0
-18190 11088 11215 0
-18190 11088 11217 0
-18190 11088 11219 0
-18190 11088 11221 0
-18190 11088 11223 0
-18190 11088 11225 0
-18190 11090 11262 0
-18190 11090 11176 11260 0
-18190 11090 11177 11258 0
-18190 11090 11179 11256 0
-18190 11090 11181 11254 0
-18190 11090 11183 11252 0
-18190 11090 11185 11250 0
-18190 11090 11187 11248 0
-18190 11090 11189 11246 0
-18190 11090 11191 11244 0
-18190 11090 11193 11242 0
-18190 11090 11195 11240 0
-18190 11090 11197 11238 0
-18190 11090 11199 11236 0
-18190 11090 11201 11234 0
-18190 11090 11203 11232 0
-18190 11090 11205 11230 0
-18190 11090 11207 11228 0
-18190 11090 11209 11227 0
-18190 11090 11211 0
-18190 11090 11213 0
-18190 11090 11215 0
-18190 11090 11217 0
-18190 11090 11219 0
-18190 11090 11221 0
-18190 11090 11223 0
-18190 11090 11225 0
-18190 11092 11260 0
-18190 11092 11176 11258 0
-18190 11092 11177 11256 0
-18190 11092 11179 11254 0
-18190 11092 11181 11252 0
-18190 11092 11183 11250 0
-18190 11092 11185 11248 0
-18190 11092 11187 11246 0
-18190 11092 11189 11244 0
-18190 11092 11191 11242 0
-18190 11092 11193 11240 0
-18190 11092 11195 11238 0
-18190 11092 11197 11236 0
-18190 11092 11199 11234 0
-18190 11092 11201 11232 0
-18190 11092 11203 11230 0
-18190 11092 11205 11228 0
-18190 11092 11207 11227 0
-18190 11092 11209 0
-18190 11092 11211 0
-18190 11092 11213 0
-18190 11092 11215 0
-18190 11092 11217 0
-18190 11092 11219 0
-18190 11092 11221 0
-18190 11092 11223 0
-18190 11092 11225 0
-18190 11094 11258 0
-18190 11094 11176 11256 0
-18190 11094 11177 11254 0
-18190 11094 11179 11252 0
-18190 11094 11181 11250 0
-18190 11094 11183 11248 0
-18190 11094 11185 11246 0
-18190 11094 11187 11244 0
-18190 11094 11189 11242 0
-18190 11094 11191 11240 0
-18190 11094 11193 11238 0
-18190 11094 11195 11236 0
-18190 11094 11197 11234 0
-18190 11094 11199 11232 0
-18190 11094 11201 11230 0
-18190 11094 11203 11228 0
-18190 11094 11205 11227 0
-18190 11094 11207 0
-18190 11094 11209 0
-18190 11094 11211 0
-18190 11094 11213 0
-18190 11094 11215 0
-18190 11094 11217 0
-18190 11094 11219 0
-18190 11094 11221 0
-18190 11094 11223 0
-18190 11094 11225 0
-18190 11096 11256 0
-18190 11096 11176 11254 0
-18190 11096 11177 11252 0
-18190 11096 11179 11250 0
-18190 11096 11181 11248 0
-18190 11096 11183 11246 0
-18190 11096 11185 11244 0
-18190 11096 11187 11242 0
-18190 11096 11189 11240 0
-18190 11096 11191 11238 0
-18190 11096 11193 11236 0
-18190 11096 11195 11234 0
-18190 11096 11197 11232 0
-18190 11096 11199 11230 0
-18190 11096 11201 11228 0
-18190 11096 11203 11227 0
-18190 11096 11205 0
-18190 11096 11207 0
-18190 11096 11209 0
-18190 11096 11211 0
-18190 11096 11213 0
-18190 11096 11215 0
-18190 11096 11217 0
-18190 11096 11219 0
-18190 11096 11221 0
-18190 11096 11223 0
-18190 11096 11225 0
-18190 11098 11254 0
-18190 11098 11176 11252 0
-18190 11098 11177 11250 0
-18190 11098 11179 11248 0
-18190 11098 11181 11246 0
-18190 11098 11183 11244 0
-18190 11098 11185 11242 0
-18190 11098 11187 11240 0
-18190 11098 11189 11238 0
-18190 11098 11191 11236 0
-18190 11098 11193 11234 0
-18190 11098 11195 11232 0
-18190 11098 11197 11230 0
-18190 11098 11199 11228 0
-18190 11098 11201 11227 0
-18190 11098 11203 0
-18190 11098 11205 0
-18190 11098 11207 0
-18190 11098 11209 0
-18190 11098 11211 0
-18190 11098 11213 0
-18190 11098 11215 0
-18190 11098 11217 0
-18190 11098 11219 0
-18190 11098 11221 0
-18190 11098 11223 0
-18190 11098 11225 0
-18190 11100 11252 0
-18190 11100 11176 11250 0
-18190 11100 11177 11248 0
-18190 11100 11179 11246 0
-18190 11100 11181 11244 0
-18190 11100 11183 11242 0
-18190 11100 11185 11240 0
-18190 11100 11187 11238 0
-18190 11100 11189 11236 0
-18190 11100 11191 11234 0
-18190 11100 11193 11232 0
-18190 11100 11195 11230 0
-18190 11100 11197 11228 0
-18190 11100 11199 11227 0
-18190 11100 11201 0
-18190 11100 11203 0
-18190 11100 11205 0
-18190 11100 11207 0
-18190 11100 11209 0
-18190 11100 11211 0
-18190 11100 11213 0
-18190 11100 11215 0
-18190 11100 11217 0
-18190 11100 11219 0
-18190 11100 11221 0
-18190 11100 11223 0
-18190 11100 11225 0
-18190 11102 11250 0
-18190 11102 11176 11248 0
-18190 11102 11177 11246 0
-18190 11102 11179 11244 0
-18190 11102 11181 11242 0
-18190 11102 11183 11240 0
-18190 11102 11185 11238 0
-18190 11102 11187 11236 0
-18190 11102 11189 11234 0
-18190 11102 11191 11232 0
-18190 11102 11193 11230 0
-18190 11102 11195 11228 0
-18190 11102 11197 11227 0
-18190 11102 11199 0
-18190 11102 11201 0
-18190 11102 11203 0
-18190 11102 11205 0
-18190 11102 11207 0
-18190 11102 11209 0
-18190 11102 11211 0
-18190 11102 11213 0
-18190 11102 11215 0
-18190 11102 11217 0
-18190 11102 11219 0
-18190 11102 11221 0
-18190 11102 11223 0
-18190 11102 11225 0
-18190 11104 11248 0
-18190 11104 11176 11246 0
-18190 11104 11177 11244 0
-18190 11104 11179 11242 0
-18190 11104 11181 11240 0
-18190 11104 11183 11238 0
-18190 11104 11185 11236 0
-18190 11104 11187 11234 0
-18190 11104 11189 11232 0
-18190 11104 11191 11230 0
-18190 11104 11193 11228 0
-18190 11104 11195 11227 0
-18190 11104 11197 0
-18190 11104 11199 0
-18190 11104 11201 0
-18190 11104 11203 0
-18190 11104 11205 0
-18190 11104 11207 0
-18190 11104 11209 0
-18190 11104 11211 0
-18190 11104 11213 0
-18190 11104 11215 0
-18190 11104 11217 0
-18190 11104 11219 0
-18190 11104 11221 0
-18190 11104 11223 0
-18190 11104 11225 0
18190 -11197 -11227 0
18190 -11195 -11228 0
18190 -11193 -11230 0
18190 -11191 -11232 0
18190 -11189 -11234 0
18190 -11187 -11236 0
18190 -11185 -11238 0
18190 -11183 -11240 0
18190 -11181 -11242 0
18190 -11179 -11244 0
18190 -11177 -11246 0
18190 -11176 -11248 0
18190 -11104 -11199 -11227 0
18190 -11104 -11197 -11228 0
18190 -11104 -11195 -11230 0
18190 -11104 -11193 -11232 0
18190 -11104 -11191 -11234 0
18190 -11104 -11189 -11236 0
18190 -11104 -11187 -11238 0
18190 -11104 -11185 -11240 0
18190 -11104 -11183 -11242 0
18190 -11104 -11181 -11244 0
18190 -11104 -11179 -11246 0
18190 -11104 -11177 -11248 0
18190 -11104 -11176 -11250 0
18190 -11102 -11201 -11227 0
18190 -11102 -11199 -11228 0
18190 -11102 -11197 -11230 0
18190 -11102 -11195 -11232 0
18190 -11102 -11193 -11234 0
18190 -11102 -11191 -11236 0
18190 -11102 -11189 -11238 0
18190 -11102 -11187 -11240 0
18190 -11102 -11185 -11242 0
18190 -11102 -11183 -11244 0
18190 -11102 -11181 -11246 0
18190 -11102 -11179 -11248 0
18190 -11102 -11177 -11250 0
18190 -11102 -11176 -11252 0
18190 -11100 -11203 -11227 0
18190 -11100 -11201 -11228 0
18190 -11100 -11199 -11230 0
18190 -11100 -11197 -11232 0
18190 -11100 -11195 -11234 0
18190 -11100 -11193 -11236 0
18190 -11100 -11191 -11238 0
18190 -11100 -11189 -11240 0
18190 -11100 -11187 -11242 0
18190 -11100 -11185 -11244 0
18190 -11100 -11183 -11246 0
18190 -11100 -11181 -11248 0
18190 -11100 -11179 -11250 0
18190 -11100 -11177 -11252 0
18190 -11100 -11176 -11254 0
18190 -11098 -11205 -11227 0
18190 -11098 -11203 -11228 0
18190 -11098 -11201 -11230 0
18190 -11098 -11199 -11232 0
18190 -11098 -11197 -11234 0
18190 -11098 -11195 -11236 0
18190 -11098 -11193 -11238 0
18190 -11098 -11191 -11240 0
18190 -11098 -11189 -11242 0
18190 -11098 -11187 -11244 0
18190 -11098 -11185 -11246 0
18190 -11098 -11183 -11248 0
18190 -11098 -11181 -11250 0
18190 -11098 -11179 -11252 0
18190 -11098 -11177 -11254 0
18190 -11098 -11176 -11256 0
18190 -11096 -11207 -11227 0
18190 -11096 -11205 -11228 0
18190 -11096 -11203 -11230 0
18190 -11096 -11201 -11232 0
18190 -11096 -11199 -11234 0
18190 -11096 -11197 -11236 0
18190 -11096 -11195 -11238 0
18190 -11096 -11193 -11240 0
18190 -11096 -11191 -11242 0
18190 -11096 -11189 -11244 0
18190 -11096 -11187 -11246 0
18190 -11096 -11185 -11248 0
18190 -11096 -11183 -11250 0
18190 -11096 -11181 -11252 0
18190 -11096 -11179 -11254 0
18190 -11096 -11177 -11256 0
18190 -11096 -11176 -11258 0
18190 -11094 -11209 -11227 0
18190 -11094 -11207 -11228 0
18190 -11094 -11205 -11230 0
18190 -11094 -11203 -11232 0
18190 -11094 -11201 -11234 0
18190 -11094 -11199 -11236 0
18190 -11094 -11197 -11238 0
18190 -11094 -11195 -11240 0
18190 -11094 -11193 -11242 0
18190 -11094 -11191 -11244 0
18190 -11094 -11189 -11246 0
18190 -11094 -11187 -11248 0
18190 -11094 -11185 -11250 0
18190 -11094 -11183 -11252 0
18190 -11094 -11181 -11254 0
18190 -11094 -11179 -11256 0
18190 -11094 -11177 -11258 0
18190 -11094 -11176 -11260 0
18190 -11092 -11211 -11227 0
18190 -11092 -11209 -11228 0
18190 -11092 -11207 -11230 0
18190 -11092 -11205 -11232 0
18190 -11092 -11203 -11234 0
18190 -11092 -11201 -11236 0
18190 -11092 -11199 -11238 0
18190 -11092 -11197 -11240 0
18190 -11092 -11195 -11242 0
18190 -11092 -11193 -11244 0
18190 -11092 -11191 -11246 0
18190 -11092 -11189 -11248 0
18190 -11092 -11187 -11250 0
18190 -11092 -11185 -11252 0
18190 -11092 -11183 -11254 0
18190 -11092 -11181 -11256 0
18190 -11092 -11179 -11258 0
18190 -11092 -11177 -11260 0
18190 -11092 -11176 -11262 0
18190 -11090 -11213 -11227 0
18190 -11090 -11211 -11228 0
18190 -11090 -11209 -11230 0
18190 -11090 -11207 -11232 0
18190 -11090 -11205 -11234 0
18190 -11090 -11203 -11236 0
18190 -11090 -11201 -11238 0
18190 -11090 -11199 -11240 0
18190 -11090 -11197 -11242 0
18190 -11090 -11195 -11244 0
18190 -11090 -11193 -11246 0
18190 -11090 -11191 -11248 0
18190 -11090 -11189 -11250 0
18190 -11090 -11187 -11252 0
18190 -11090 -11185 -11254 0
18190 -11090 -11183 -11256 0
18190 -11090 -11181 -11258 0
18190 -11090 -11179 -11260 0
18190 -11090 -11177 -11262 0
18190 -11090 -11176 -11264 0
18190 -11088 -11215 -11227 0
18190 -11088 -11213 -11228 0
18190 -11088 -11211 -11230 0
18190 -11088 -11209 -11232 0
18190 -11088 -11207 -11234 0
18190 -11088 -11205 -11236 0
18190 -11088 -11203 -11238 0
18190 -11088 -11201 -11240 0
18190 -11088 -11199 -11242 0
18190 -11088 -11197 -11244 0
18190 -11088 -11195 -11246 0
18190 -11088 -11193 -11248 0
18190 -11088 -11191 -11250 0
18190 -11088 -11189 -11252 0
18190 -11088 -11187 -11254 0
18190 -11088 -11185 -11256 0
18190 -11088 -11183 -11258 0
18190 -11088 -11181 -11260 0
18190 -11088 -11179 -11262 0
18190 -11088 -11177 -11264 0
18190 -11088 -11176 -11266 0
18190 -11086 -11217 -11227 0
18190 -11086 -11215 -11228 0
18190 -11086 -11213 -11230 0
18190 -11086 -11211 -11232 0
18190 -11086 -11209 -11234 0
18190 -11086 -11207 -11236 0
18190 -11086 -11205 -11238 0
18190 -11086 -11203 -11240 0
18190 -11086 -11201 -11242 0
18190 -11086 -11199 -11244 0
18190 -11086 -11197 -11246 0
18190 -11086 -11195 -11248 0
18190 -11086 -11193 -11250 0
18190 -11086 -11191 -11252 0
18190 -11086 -11189 -11254 0
18190 -11086 -11187 -11256 0
18190 -11086 -11185 -11258 0
18190 -11086 -11183 -11260 0
18190 -11086 -11181 -11262 0
18190 -11086 -11179 -11264 0
18190 -11086 -11177 -11266 0
18190 -11086 -11176 -11268 0
18190 -11084 -11219 -11227 0
18190 -11084 -11217 -11228 0
18190 -11084 -11215 -11230 0
18190 -11084 -11213 -11232 0
18190 -11084 -11211 -11234 0
18190 -11084 -11209 -11236 0
18190 -11084 -11207 -11238 0
18190 -11084 -11205 -11240 0
18190 -11084 -11203 -11242 0
18190 -11084 -11201 -11244 0
18190 -11084 -11199 -11246 0
18190 -11084 -11197 -11248 0
18190 -11084 -11195 -11250 0
18190 -11084 -11193 -11252 0
18190 -11084 -11191 -11254 0
18190 -11084 -11189 -11256 0
18190 -11084 -11187 -11258 0
18190 -11084 -11185 -11260 0
18190 -11084 -11183 -11262 0
18190 -11084 -11181 -11264 0
18190 -11084 -11179 -11266 0
18190 -11084 -11177 -11268 0
18190 -11084 -11176 -11270 0
18190 -11082 -11221 -11227 0
18190 -11082 -11219 -11228 0
18190 -11082 -11217 -11230 0
18190 -11082 -11215 -11232 0
18190 -11082 -11213 -11234 0
18190 -11082 -11211 -11236 0
18190 -11082 -11209 -11238 0
18190 -11082 -11207 -11240 0
18190 -11082 -11205 -11242 0
18190 -11082 -11203 -11244 0
18190 -11082 -11201 -11246 0
18190 -11082 -11199 -11248 0
18190 -11082 -11197 -11250 0
18190 -11082 -11195 -11252 0
18190 -11082 -11193 -11254 0
18190 -11082 -11191 -11256 0
18190 -11082 -11189 -11258 0
18190 -11082 -11187 -11260 0
18190 -11082 -11185 -11262 0
18190 -11082 -11183 -11264 0
18190 -11082 -11181 -11266 0
18190 -11082 -11179 -11268 0
18190 -11082 -11177 -11270 0
18190 -11082 -11176 -11272 0
18190 -11080 -11223 -11227 0
18190 -11080 -11221 -11228 0
18190 -11080 -11219 -11230 0
18190 -11080 -11217 -11232 0
18190 -11080 -11215 -11234 0
18190 -11080 -11213 -11236 0
18190 -11080 -11211 -11238 0
18190 -11080 -11209 -11240 0
18190 -11080 -11207 -11242 0
18190 -11080 -11205 -11244 0
18190 -11080 -11203 -11246 0
18190 -11080 -11201 -11248 0
18190 -11080 -11199 -11250 0
18190 -11080 -11197 -11252 0
18190 -11080 -11195 -11254 0
18190 -11080 -11193 -11256 0
18190 -11080 -11191 -11258 0
18190 -11080 -11189 -11260 0
18190 -11080 -11187 -11262 0
18190 -11080 -11185 -11264 0
18190 -11080 -11183 -11266 0
18190 -11080 -11181 -11268 0
18190 -11080 -11179 -11270 0
18190 -11080 -11177 -11272 0
18190 -11080 -11176 -11274 0
18190 -11078 -11225 -11227 0
18190 -11078 -11223 -11228 0
18190 -11078 -11221 -11230 0
18190 -11078 -11219 -11232 0
18190 -11078 -11217 -11234 0
18190 -11078 -11215 -11236 0
18190 -11078 -11213 -11238 0
18190 -11078 -11211 -11240 0
18190 -11078 -11209 -11242 0
18190 -11078 -11207 -11244 0
18190 -11078 -11205 -11246 0
18190 -11078 -11203 -11248 0
18190 -11078 -11201 -11250 0
18190 -11078 -11199 -11252 0
18190 -11078 -11197 -11254 0
18190 -11078 -11195 -11256 0
18190 -11078 -11193 -11258 0
18190 -11078 -11191 -11260 0
18190 -11078 -11189 -11262 0
18190 -11078 -11187 -11264 0
18190 -11078 -11185 -11266 0
18190 -11078 -11183 -11268 0
18190 -11078 -11181 -11270 0
18190 -11078 -11179 -11272 0
18190 -11078 -11177 -11274 0
18190 -11078 -11176 -11276 0
18190 -11076 -11227 0
18190 -11076 -11225 -11228 0
18190 -11076 -11223 -11230 0
18190 -11076 -11221 -11232 0
18190 -11076 -11219 -11234 0
18190 -11076 -11217 -11236 0
18190 -11076 -11215 -11238 0
18190 -11076 -11213 -11240 0
18190 -11076 -11211 -11242 0
18190 -11076 -11209 -11244 0
18190 -11076 -11207 -11246 0
18190 -11076 -11205 -11248 0
18190 -11076 -11203 -11250 0
18190 -11076 -11201 -11252 0
18190 -11076 -11199 -11254 0
18190 -11076 -11197 -11256 0
18190 -11076 -11195 -11258 0
18190 -11076 -11193 -11260 0
18190 -11076 -11191 -11262 0
18190 -11076 -11189 -11264 0
18190 -11076 -11187 -11266 0
18190 -11076 -11185 -11268 0
18190 -11076 -11183 -11270 0
18190 -11076 -11181 -11272 0
18190 -11076 -11179 -11274 0
18190 -11076 -11177 -11276 0
18190 -11076 -11176 -11278 0
18190 -11074 -11228 0
18190 -11074 -11225 -11230 0
18190 -11074 -11223 -11232 0
18190 -11074 -11221 -11234 0
18190 -11074 -11219 -11236 0
18190 -11074 -11217 -11238 0
18190 -11074 -11215 -11240 0
18190 -11074 -11213 -11242 0
18190 -11074 -11211 -11244 0
18190 -11074 -11209 -11246 0
18190 -11074 -11207 -11248 0
18190 -11074 -11205 -11250 0
18190 -11074 -11203 -11252 0
18190 -11074 -11201 -11254 0
18190 -11074 -11199 -11256 0
18190 -11074 -11197 -11258 0
18190 -11074 -11195 -11260 0
18190 -11074 -11193 -11262 0
18190 -11074 -11191 -11264 0
18190 -11074 -11189 -11266 0
18190 -11074 -11187 -11268 0
18190 -11074 -11185 -11270 0
18190 -11074 -11183 -11272 0
18190 -11074 -11181 -11274 0
18190 -11074 -11179 -11276 0
18190 -11074 -11177 -11278 0
18190 -11074 -11176 -11280 0
18190 -11072 -11230 0
18190 -11072 -11225 -11232 0
18190 -11072 -11223 -11234 0
18190 -11072 -11221 -11236 0
18190 -11072 -11219 -11238 0
18190 -11072 -11217 -11240 0
18190 -11072 -11215 -11242 0
18190 -11072 -11213 -11244 0
18190 -11072 -11211 -11246 0
18190 -11072 -11209 -11248 0
18190 -11072 -11207 -11250 0
18190 -11072 -11205 -11252 0
18190 -11072 -11203 -11254 0
18190 -11072 -11201 -11256 0
18190 -11072 -11199 -11258 0
18190 -11072 -11197 -11260 0
18190 -11072 -11195 -11262 0
18190 -11072 -11193 -11264 0
18190 -11072 -11191 -11266 0
18190 -11072 -11189 -11268 0
18190 -11072 -11187 -11270 0
18190 -11072 -11185 -11272 0
18190 -11072 -11183 -11274 0
18190 -11072 -11181 -11276 0
18190 -11072 -11179 -11278 0
18190 -11072 -11177 -11280 0
18190 -11072 -11176 -11282 0
18190 -11071 -11232 0
18190 -11071 -11225 -11234 0
18190 -11071 -11223 -11236 0
18190 -11071 -11221 -11238 0
18190 -11071 -11219 -11240 0
18190 -11071 -11217 -11242 0
18190 -11071 -11215 -11244 0
18190 -11071 -11213 -11246 0
18190 -11071 -11211 -11248 0
18190 -11071 -11209 -11250 0
18190 -11071 -11207 -11252 0
18190 -11071 -11205 -11254 0
18190 -11071 -11203 -11256 0
18190 -11071 -11201 -11258 0
18190 -11071 -11199 -11260 0
18190 -11071 -11197 -11262 0
18190 -11071 -11195 -11264 0
18190 -11071 -11193 -11266 0
18190 -11071 -11191 -11268 0
18190 -11071 -11189 -11270 0
18190 -11071 -11187 -11272 0
18190 -11071 -11185 -11274 0
18190 -11071 -11183 -11276 0
18190 -11071 -11181 -11278 0
18190 -11071 -11179 -11280 0
18190 -11071 -11177 -11282 0
18190 -11071 -11176 -11284 0
c ((29<=(aux439 + aux442 + aux443))=tv=SATLiteral(18191))
-18191 -11195 -11227 0
-18191 -11193 -11228 0
-18191 -11191 -11230 0
-18191 -11189 -11232 0
-18191 -11187 -11234 0
-18191 -11185 -11236 0
-18191 -11183 -11238 0
-18191 -11181 -11240 0
-18191 -11179 -11242 0
-18191 -11177 -11244 0
-18191 -11176 -11246 0
-18191 -11104 -11197 -11227 0
-18191 -11104 -11195 -11228 0
-18191 -11104 -11193 -11230 0
-18191 -11104 -11191 -11232 0
-18191 -11104 -11189 -11234 0
-18191 -11104 -11187 -11236 0
-18191 -11104 -11185 -11238 0
-18191 -11104 -11183 -11240 0
-18191 -11104 -11181 -11242 0
-18191 -11104 -11179 -11244 0
-18191 -11104 -11177 -11246 0
-18191 -11104 -11176 -11248 0
-18191 -11102 -11199 -11227 0
-18191 -11102 -11197 -11228 0
-18191 -11102 -11195 -11230 0
-18191 -11102 -11193 -11232 0
-18191 -11102 -11191 -11234 0
-18191 -11102 -11189 -11236 0
-18191 -11102 -11187 -11238 0
-18191 -11102 -11185 -11240 0
-18191 -11102 -11183 -11242 0
-18191 -11102 -11181 -11244 0
-18191 -11102 -11179 -11246 0
-18191 -11102 -11177 -11248 0
-18191 -11102 -11176 -11250 0
-18191 -11100 -11201 -11227 0
-18191 -11100 -11199 -11228 0
-18191 -11100 -11197 -11230 0
-18191 -11100 -11195 -11232 0
-18191 -11100 -11193 -11234 0
-18191 -11100 -11191 -11236 0
-18191 -11100 -11189 -11238 0
-18191 -11100 -11187 -11240 0
-18191 -11100 -11185 -11242 0
-18191 -11100 -11183 -11244 0
-18191 -11100 -11181 -11246 0
-18191 -11100 -11179 -11248 0
-18191 -11100 -11177 -11250 0
-18191 -11100 -11176 -11252 0
-18191 -11098 -11203 -11227 0
-18191 -11098 -11201 -11228 0
-18191 -11098 -11199 -11230 0
-18191 -11098 -11197 -11232 0
-18191 -11098 -11195 -11234 0
-18191 -11098 -11193 -11236 0
-18191 -11098 -11191 -11238 0
-18191 -11098 -11189 -11240 0
-18191 -11098 -11187 -11242 0
-18191 -11098 -11185 -11244 0
-18191 -11098 -11183 -11246 0
-18191 -11098 -11181 -11248 0
-18191 -11098 -11179 -11250 0
-18191 -11098 -11177 -11252 0
-18191 -11098 -11176 -11254 0
-18191 -11096 -11205 -11227 0
-18191 -11096 -11203 -11228 0
-18191 -11096 -11201 -11230 0
-18191 -11096 -11199 -11232 0
-18191 -11096 -11197 -11234 0
-18191 -11096 -11195 -11236 0
-18191 -11096 -11193 -11238 0
-18191 -11096 -11191 -11240 0
-18191 -11096 -11189 -11242 0
-18191 -11096 -11187 -11244 0
-18191 -11096 -11185 -11246 0
-18191 -11096 -11183 -11248 0
-18191 -11096 -11181 -11250 0
-18191 -11096 -11179 -11252 0
-18191 -11096 -11177 -11254 0
-18191 -11096 -11176 -11256 0
-18191 -11094 -11207 -11227 0
-18191 -11094 -11205 -11228 0
-18191 -11094 -11203 -11230 0
-18191 -11094 -11201 -11232 0
-18191 -11094 -11199 -11234 0
-18191 -11094 -11197 -11236 0
-18191 -11094 -11195 -11238 0
-18191 -11094 -11193 -11240 0
-18191 -11094 -11191 -11242 0
-18191 -11094 -11189 -11244 0
-18191 -11094 -11187 -11246 0
-18191 -11094 -11185 -11248 0
-18191 -11094 -11183 -11250 0
-18191 -11094 -11181 -11252 0
-18191 -11094 -11179 -11254 0
-18191 -11094 -11177 -11256 0
-18191 -11094 -11176 -11258 0
-18191 -11092 -11209 -11227 0
-18191 -11092 -11207 -11228 0
-18191 -11092 -11205 -11230 0
-18191 -11092 -11203 -11232 0
-18191 -11092 -11201 -11234 0
-18191 -11092 -11199 -11236 0
-18191 -11092 -11197 -11238 0
-18191 -11092 -11195 -11240 0
-18191 -11092 -11193 -11242 0
-18191 -11092 -11191 -11244 0
-18191 -11092 -11189 -11246 0
-18191 -11092 -11187 -11248 0
-18191 -11092 -11185 -11250 0
-18191 -11092 -11183 -11252 0
-18191 -11092 -11181 -11254 0
-18191 -11092 -11179 -11256 0
-18191 -11092 -11177 -11258 0
-18191 -11092 -11176 -11260 0
-18191 -11090 -11211 -11227 0
-18191 -11090 -11209 -11228 0
-18191 -11090 -11207 -11230 0
-18191 -11090 -11205 -11232 0
-18191 -11090 -11203 -11234 0
-18191 -11090 -11201 -11236 0
-18191 -11090 -11199 -11238 0
-18191 -11090 -11197 -11240 0
-18191 -11090 -11195 -11242 0
-18191 -11090 -11193 -11244 0
-18191 -11090 -11191 -11246 0
-18191 -11090 -11189 -11248 0
-18191 -11090 -11187 -11250 0
-18191 -11090 -11185 -11252 0
-18191 -11090 -11183 -11254 0
-18191 -11090 -11181 -11256 0
-18191 -11090 -11179 -11258 0
-18191 -11090 -11177 -11260 0
-18191 -11090 -11176 -11262 0
-18191 -11088 -11213 -11227 0
-18191 -11088 -11211 -11228 0
-18191 -11088 -11209 -11230 0
-18191 -11088 -11207 -11232 0
-18191 -11088 -11205 -11234 0
-18191 -11088 -11203 -11236 0
-18191 -11088 -11201 -11238 0
-18191 -11088 -11199 -11240 0
-18191 -11088 -11197 -11242 0
-18191 -11088 -11195 -11244 0
-18191 -11088 -11193 -11246 0
-18191 -11088 -11191 -11248 0
-18191 -11088 -11189 -11250 0
-18191 -11088 -11187 -11252 0
-18191 -11088 -11185 -11254 0
-18191 -11088 -11183 -11256 0
-18191 -11088 -11181 -11258 0
-18191 -11088 -11179 -11260 0
-18191 -11088 -11177 -11262 0
-18191 -11088 -11176 -11264 0
-18191 -11086 -11215 -11227 0
-18191 -11086 -11213 -11228 0
-18191 -11086 -11211 -11230 0
-18191 -11086 -11209 -11232 0
-18191 -11086 -11207 -11234 0
-18191 -11086 -11205 -11236 0
-18191 -11086 -11203 -11238 0
-18191 -11086 -11201 -11240 0
-18191 -11086 -11199 -11242 0
-18191 -11086 -11197 -11244 0
-18191 -11086 -11195 -11246 0
-18191 -11086 -11193 -11248 0
-18191 -11086 -11191 -11250 0
-18191 -11086 -11189 -11252 0
-18191 -11086 -11187 -11254 0
-18191 -11086 -11185 -11256 0
-18191 -11086 -11183 -11258 0
-18191 -11086 -11181 -11260 0
-18191 -11086 -11179 -11262 0
-18191 -11086 -11177 -11264 0
-18191 -11086 -11176 -11266 0
-18191 -11084 -11217 -11227 0
-18191 -11084 -11215 -11228 0
-18191 -11084 -11213 -11230 0
-18191 -11084 -11211 -11232 0
-18191 -11084 -11209 -11234 0
-18191 -11084 -11207 -11236 0
-18191 -11084 -11205 -11238 0
-18191 -11084 -11203 -11240 0
-18191 -11084 -11201 -11242 0
-18191 -11084 -11199 -11244 0
-18191 -11084 -11197 -11246 0
-18191 -11084 -11195 -11248 0
-18191 -11084 -11193 -11250 0
-18191 -11084 -11191 -11252 0
-18191 -11084 -11189 -11254 0
-18191 -11084 -11187 -11256 0
-18191 -11084 -11185 -11258 0
-18191 -11084 -11183 -11260 0
-18191 -11084 -11181 -11262 0
-18191 -11084 -11179 -11264 0
-18191 -11084 -11177 -11266 0
-18191 -11084 -11176 -11268 0
-18191 -11082 -11219 -11227 0
-18191 -11082 -11217 -11228 0
-18191 -11082 -11215 -11230 0
-18191 -11082 -11213 -11232 0
-18191 -11082 -11211 -11234 0
-18191 -11082 -11209 -11236 0
-18191 -11082 -11207 -11238 0
-18191 -11082 -11205 -11240 0
-18191 -11082 -11203 -11242 0
-18191 -11082 -11201 -11244 0
-18191 -11082 -11199 -11246 0
-18191 -11082 -11197 -11248 0
-18191 -11082 -11195 -11250 0
-18191 -11082 -11193 -11252 0
-18191 -11082 -11191 -11254 0
-18191 -11082 -11189 -11256 0
-18191 -11082 -11187 -11258 0
-18191 -11082 -11185 -11260 0
-18191 -11082 -11183 -11262 0
-18191 -11082 -11181 -11264 0
-18191 -11082 -11179 -11266 0
-18191 -11082 -11177 -11268 0
-18191 -11082 -11176 -11270 0
-18191 -11080 -11221 -11227 0
-18191 -11080 -11219 -11228 0
-18191 -11080 -11217 -11230 0
-18191 -11080 -11215 -11232 0
-18191 -11080 -11213 -11234 0
-18191 -11080 -11211 -11236 0
-18191 -11080 -11209 -11238 0
-18191 -11080 -11207 -11240 0
-18191 -11080 -11205 -11242 0
-18191 -11080 -11203 -11244 0
-18191 -11080 -11201 -11246 0
-18191 -11080 -11199 -11248 0
-18191 -11080 -11197 -11250 0
-18191 -11080 -11195 -11252 0
-18191 -11080 -11193 -11254 0
-18191 -11080 -11191 -11256 0
-18191 -11080 -11189 -11258 0
-18191 -11080 -11187 -11260 0
-18191 -11080 -11185 -11262 0
-18191 -11080 -11183 -11264 0
-18191 -11080 -11181 -11266 0
-18191 -11080 -11179 -11268 0
-18191 -11080 -11177 -11270 0
-18191 -11080 -11176 -11272 0
-18191 -11078 -11223 -11227 0
-18191 -11078 -11221 -11228 0
-18191 -11078 -11219 -11230 0
-18191 -11078 -11217 -11232 0
-18191 -11078 -11215 -11234 0
-18191 -11078 -11213 -11236 0
-18191 -11078 -11211 -11238 0
-18191 -11078 -11209 -11240 0
-18191 -11078 -11207 -11242 0
-18191 -11078 -11205 -11244 0
-18191 -11078 -11203 -11246 0
-18191 -11078 -11201 -11248 0
-18191 -11078 -11199 -11250 0
-18191 -11078 -11197 -11252 0
-18191 -11078 -11195 -11254 0
-18191 -11078 -11193 -11256 0
-18191 -11078 -11191 -11258 0
-18191 -11078 -11189 -11260 0
-18191 -11078 -11187 -11262 0
-18191 -11078 -11185 -11264 0
-18191 -11078 -11183 -11266 0
-18191 -11078 -11181 -11268 0
-18191 -11078 -11179 -11270 0
-18191 -11078 -11177 -11272 0
-18191 -11078 -11176 -11274 0
-18191 -11076 -11225 -11227 0
-18191 -11076 -11223 -11228 0
-18191 -11076 -11221 -11230 0
-18191 -11076 -11219 -11232 0
-18191 -11076 -11217 -11234 0
-18191 -11076 -11215 -11236 0
-18191 -11076 -11213 -11238 0
-18191 -11076 -11211 -11240 0
-18191 -11076 -11209 -11242 0
-18191 -11076 -11207 -11244 0
-18191 -11076 -11205 -11246 0
-18191 -11076 -11203 -11248 0
-18191 -11076 -11201 -11250 0
-18191 -11076 -11199 -11252 0
-18191 -11076 -11197 -11254 0
-18191 -11076 -11195 -11256 0
-18191 -11076 -11193 -11258 0
-18191 -11076 -11191 -11260 0
-18191 -11076 -11189 -11262 0
-18191 -11076 -11187 -11264 0
-18191 -11076 -11185 -11266 0
-18191 -11076 -11183 -11268 0
-18191 -11076 -11181 -11270 0
-18191 -11076 -11179 -11272 0
-18191 -11076 -11177 -11274 0
-18191 -11076 -11176 -11276 0
-18191 -11074 -11227 0
-18191 -11074 -11225 -11228 0
-18191 -11074 -11223 -11230 0
-18191 -11074 -11221 -11232 0
-18191 -11074 -11219 -11234 0
-18191 -11074 -11217 -11236 0
-18191 -11074 -11215 -11238 0
-18191 -11074 -11213 -11240 0
-18191 -11074 -11211 -11242 0
-18191 -11074 -11209 -11244 0
-18191 -11074 -11207 -11246 0
-18191 -11074 -11205 -11248 0
-18191 -11074 -11203 -11250 0
-18191 -11074 -11201 -11252 0
-18191 -11074 -11199 -11254 0
-18191 -11074 -11197 -11256 0
-18191 -11074 -11195 -11258 0
-18191 -11074 -11193 -11260 0
-18191 -11074 -11191 -11262 0
-18191 -11074 -11189 -11264 0
-18191 -11074 -11187 -11266 0
-18191 -11074 -11185 -11268 0
-18191 -11074 -11183 -11270 0
-18191 -11074 -11181 -11272 0
-18191 -11074 -11179 -11274 0
-18191 -11074 -11177 -11276 0
-18191 -11074 -11176 -11278 0
-18191 -11072 -11228 0
-18191 -11072 -11225 -11230 0
-18191 -11072 -11223 -11232 0
-18191 -11072 -11221 -11234 0
-18191 -11072 -11219 -11236 0
-18191 -11072 -11217 -11238 0
-18191 -11072 -11215 -11240 0
-18191 -11072 -11213 -11242 0
-18191 -11072 -11211 -11244 0
-18191 -11072 -11209 -11246 0
-18191 -11072 -11207 -11248 0
-18191 -11072 -11205 -11250 0
-18191 -11072 -11203 -11252 0
-18191 -11072 -11201 -11254 0
-18191 -11072 -11199 -11256 0
-18191 -11072 -11197 -11258 0
-18191 -11072 -11195 -11260 0
-18191 -11072 -11193 -11262 0
-18191 -11072 -11191 -11264 0
-18191 -11072 -11189 -11266 0
-18191 -11072 -11187 -11268 0
-18191 -11072 -11185 -11270 0
-18191 -11072 -11183 -11272 0
-18191 -11072 -11181 -11274 0
-18191 -11072 -11179 -11276 0
-18191 -11072 -11177 -11278 0
-18191 -11072 -11176 -11280 0
-18191 -11071 -11230 0
-18191 -11071 -11225 -11232 0
-18191 -11071 -11223 -11234 0
-18191 -11071 -11221 -11236 0
-18191 -11071 -11219 -11238 0
-18191 -11071 -11217 -11240 0
-18191 -11071 -11215 -11242 0
-18191 -11071 -11213 -11244 0
-18191 -11071 -11211 -11246 0
-18191 -11071 -11209 -11248 0
-18191 -11071 -11207 -11250 0
-18191 -11071 -11205 -11252 0
-18191 -11071 -11203 -11254 0
-18191 -11071 -11201 -11256 0
-18191 -11071 -11199 -11258 0
-18191 -11071 -11197 -11260 0
-18191 -11071 -11195 -11262 0
-18191 -11071 -11193 -11264 0
-18191 -11071 -11191 -11266 0
-18191 -11071 -11189 -11268 0
-18191 -11071 -11187 -11270 0
-18191 -11071 -11185 -11272 0
-18191 -11071 -11183 -11274 0
-18191 -11071 -11181 -11276 0
-18191 -11071 -11179 -11278 0
-18191 -11071 -11177 -11280 0
-18191 -11071 -11176 -11282 0
18191 11282 0
18191 11176 11280 0
18191 11177 11278 0
18191 11179 11276 0
18191 11181 11274 0
18191 11183 11272 0
18191 11185 11270 0
18191 11187 11268 0
18191 11189 11266 0
18191 11191 11264 0
18191 11193 11262 0
18191 11195 11260 0
18191 11197 11258 0
18191 11199 11256 0
18191 11201 11254 0
18191 11203 11252 0
18191 11205 11250 0
18191 11207 11248 0
18191 11209 11246 0
18191 11211 11244 0
18191 11213 11242 0
18191 11215 11240 0
18191 11217 11238 0
18191 11219 11236 0
18191 11221 11234 0
18191 11223 11232 0
18191 11225 11230 0
18191 11071 11280 0
18191 11071 11176 11278 0
18191 11071 11177 11276 0
18191 11071 11179 11274 0
18191 11071 11181 11272 0
18191 11071 11183 11270 0
18191 11071 11185 11268 0
18191 11071 11187 11266 0
18191 11071 11189 11264 0
18191 11071 11191 11262 0
18191 11071 11193 11260 0
18191 11071 11195 11258 0
18191 11071 11197 11256 0
18191 11071 11199 11254 0
18191 11071 11201 11252 0
18191 11071 11203 11250 0
18191 11071 11205 11248 0
18191 11071 11207 11246 0
18191 11071 11209 11244 0
18191 11071 11211 11242 0
18191 11071 11213 11240 0
18191 11071 11215 11238 0
18191 11071 11217 11236 0
18191 11071 11219 11234 0
18191 11071 11221 11232 0
18191 11071 11223 11230 0
18191 11071 11225 11228 0
18191 11072 11278 0
18191 11072 11176 11276 0
18191 11072 11177 11274 0
18191 11072 11179 11272 0
18191 11072 11181 11270 0
18191 11072 11183 11268 0
18191 11072 11185 11266 0
18191 11072 11187 11264 0
18191 11072 11189 11262 0
18191 11072 11191 11260 0
18191 11072 11193 11258 0
18191 11072 11195 11256 0
18191 11072 11197 11254 0
18191 11072 11199 11252 0
18191 11072 11201 11250 0
18191 11072 11203 11248 0
18191 11072 11205 11246 0
18191 11072 11207 11244 0
18191 11072 11209 11242 0
18191 11072 11211 11240 0
18191 11072 11213 11238 0
18191 11072 11215 11236 0
18191 11072 11217 11234 0
18191 11072 11219 11232 0
18191 11072 11221 11230 0
18191 11072 11223 11228 0
18191 11072 11225 11227 0
18191 11074 11276 0
18191 11074 11176 11274 0
18191 11074 11177 11272 0
18191 11074 11179 11270 0
18191 11074 11181 11268 0
18191 11074 11183 11266 0
18191 11074 11185 11264 0
18191 11074 11187 11262 0
18191 11074 11189 11260 0
18191 11074 11191 11258 0
18191 11074 11193 11256 0
18191 11074 11195 11254 0
18191 11074 11197 11252 0
18191 11074 11199 11250 0
18191 11074 11201 11248 0
18191 11074 11203 11246 0
18191 11074 11205 11244 0
18191 11074 11207 11242 0
18191 11074 11209 11240 0
18191 11074 11211 11238 0
18191 11074 11213 11236 0
18191 11074 11215 11234 0
18191 11074 11217 11232 0
18191 11074 11219 11230 0
18191 11074 11221 11228 0
18191 11074 11223 11227 0
18191 11074 11225 0
18191 11076 11274 0
18191 11076 11176 11272 0
18191 11076 11177 11270 0
18191 11076 11179 11268 0
18191 11076 11181 11266 0
18191 11076 11183 11264 0
18191 11076 11185 11262 0
18191 11076 11187 11260 0
18191 11076 11189 11258 0
18191 11076 11191 11256 0
18191 11076 11193 11254 0
18191 11076 11195 11252 0
18191 11076 11197 11250 0
18191 11076 11199 11248 0
18191 11076 11201 11246 0
18191 11076 11203 11244 0
18191 11076 11205 11242 0
18191 11076 11207 11240 0
18191 11076 11209 11238 0
18191 11076 11211 11236 0
18191 11076 11213 11234 0
18191 11076 11215 11232 0
18191 11076 11217 11230 0
18191 11076 11219 11228 0
18191 11076 11221 11227 0
18191 11076 11223 0
18191 11076 11225 0
18191 11078 11272 0
18191 11078 11176 11270 0
18191 11078 11177 11268 0
18191 11078 11179 11266 0
18191 11078 11181 11264 0
18191 11078 11183 11262 0
18191 11078 11185 11260 0
18191 11078 11187 11258 0
18191 11078 11189 11256 0
18191 11078 11191 11254 0
18191 11078 11193 11252 0
18191 11078 11195 11250 0
18191 11078 11197 11248 0
18191 11078 11199 11246 0
18191 11078 11201 11244 0
18191 11078 11203 11242 0
18191 11078 11205 11240 0
18191 11078 11207 11238 0
18191 11078 11209 11236 0
18191 11078 11211 11234 0
18191 11078 11213 11232 0
18191 11078 11215 11230 0
18191 11078 11217 11228 0
18191 11078 11219 11227 0
18191 11078 11221 0
18191 11078 11223 0
18191 11078 11225 0
18191 11080 11270 0
18191 11080 11176 11268 0
18191 11080 11177 11266 0
18191 11080 11179 11264 0
18191 11080 11181 11262 0
18191 11080 11183 11260 0
18191 11080 11185 11258 0
18191 11080 11187 11256 0
18191 11080 11189 11254 0
18191 11080 11191 11252 0
18191 11080 11193 11250 0
18191 11080 11195 11248 0
18191 11080 11197 11246 0
18191 11080 11199 11244 0
18191 11080 11201 11242 0
18191 11080 11203 11240 0
18191 11080 11205 11238 0
18191 11080 11207 11236 0
18191 11080 11209 11234 0
18191 11080 11211 11232 0
18191 11080 11213 11230 0
18191 11080 11215 11228 0
18191 11080 11217 11227 0
18191 11080 11219 0
18191 11080 11221 0
18191 11080 11223 0
18191 11080 11225 0
18191 11082 11268 0
18191 11082 11176 11266 0
18191 11082 11177 11264 0
18191 11082 11179 11262 0
18191 11082 11181 11260 0
18191 11082 11183 11258 0
18191 11082 11185 11256 0
18191 11082 11187 11254 0
18191 11082 11189 11252 0
18191 11082 11191 11250 0
18191 11082 11193 11248 0
18191 11082 11195 11246 0
18191 11082 11197 11244 0
18191 11082 11199 11242 0
18191 11082 11201 11240 0
18191 11082 11203 11238 0
18191 11082 11205 11236 0
18191 11082 11207 11234 0
18191 11082 11209 11232 0
18191 11082 11211 11230 0
18191 11082 11213 11228 0
18191 11082 11215 11227 0
18191 11082 11217 0
18191 11082 11219 0
18191 11082 11221 0
18191 11082 11223 0
18191 11082 11225 0
18191 11084 11266 0
18191 11084 11176 11264 0
18191 11084 11177 11262 0
18191 11084 11179 11260 0
18191 11084 11181 11258 0
18191 11084 11183 11256 0
18191 11084 11185 11254 0
18191 11084 11187 11252 0
18191 11084 11189 11250 0
18191 11084 11191 11248 0
18191 11084 11193 11246 0
18191 11084 11195 11244 0
18191 11084 11197 11242 0
18191 11084 11199 11240 0
18191 11084 11201 11238 0
18191 11084 11203 11236 0
18191 11084 11205 11234 0
18191 11084 11207 11232 0
18191 11084 11209 11230 0
18191 11084 11211 11228 0
18191 11084 11213 11227 0
18191 11084 11215 0
18191 11084 11217 0
18191 11084 11219 0
18191 11084 11221 0
18191 11084 11223 0
18191 11084 11225 0
18191 11086 11264 0
18191 11086 11176 11262 0
18191 11086 11177 11260 0
18191 11086 11179 11258 0
18191 11086 11181 11256 0
18191 11086 11183 11254 0
18191 11086 11185 11252 0
18191 11086 11187 11250 0
18191 11086 11189 11248 0
18191 11086 11191 11246 0
18191 11086 11193 11244 0
18191 11086 11195 11242 0
18191 11086 11197 11240 0
18191 11086 11199 11238 0
18191 11086 11201 11236 0
18191 11086 11203 11234 0
18191 11086 11205 11232 0
18191 11086 11207 11230 0
18191 11086 11209 11228 0
18191 11086 11211 11227 0
18191 11086 11213 0
18191 11086 11215 0
18191 11086 11217 0
18191 11086 11219 0
18191 11086 11221 0
18191 11086 11223 0
18191 11086 11225 0
18191 11088 11262 0
18191 11088 11176 11260 0
18191 11088 11177 11258 0
18191 11088 11179 11256 0
18191 11088 11181 11254 0
18191 11088 11183 11252 0
18191 11088 11185 11250 0
18191 11088 11187 11248 0
18191 11088 11189 11246 0
18191 11088 11191 11244 0
18191 11088 11193 11242 0
18191 11088 11195 11240 0
18191 11088 11197 11238 0
18191 11088 11199 11236 0
18191 11088 11201 11234 0
18191 11088 11203 11232 0
18191 11088 11205 11230 0
18191 11088 11207 11228 0
18191 11088 11209 11227 0
18191 11088 11211 0
18191 11088 11213 0
18191 11088 11215 0
18191 11088 11217 0
18191 11088 11219 0
18191 11088 11221 0
18191 11088 11223 0
18191 11088 11225 0
18191 11090 11260 0
18191 11090 11176 11258 0
18191 11090 11177 11256 0
18191 11090 11179 11254 0
18191 11090 11181 11252 0
18191 11090 11183 11250 0
18191 11090 11185 11248 0
18191 11090 11187 11246 0
18191 11090 11189 11244 0
18191 11090 11191 11242 0
18191 11090 11193 11240 0
18191 11090 11195 11238 0
18191 11090 11197 11236 0
18191 11090 11199 11234 0
18191 11090 11201 11232 0
18191 11090 11203 11230 0
18191 11090 11205 11228 0
18191 11090 11207 11227 0
18191 11090 11209 0
18191 11090 11211 0
18191 11090 11213 0
18191 11090 11215 0
18191 11090 11217 0
18191 11090 11219 0
18191 11090 11221 0
18191 11090 11223 0
18191 11090 11225 0
18191 11092 11258 0
18191 11092 11176 11256 0
18191 11092 11177 11254 0
18191 11092 11179 11252 0
18191 11092 11181 11250 0
18191 11092 11183 11248 0
18191 11092 11185 11246 0
18191 11092 11187 11244 0
18191 11092 11189 11242 0
18191 11092 11191 11240 0
18191 11092 11193 11238 0
18191 11092 11195 11236 0
18191 11092 11197 11234 0
18191 11092 11199 11232 0
18191 11092 11201 11230 0
18191 11092 11203 11228 0
18191 11092 11205 11227 0
18191 11092 11207 0
18191 11092 11209 0
18191 11092 11211 0
18191 11092 11213 0
18191 11092 11215 0
18191 11092 11217 0
18191 11092 11219 0
18191 11092 11221 0
18191 11092 11223 0
18191 11092 11225 0
18191 11094 11256 0
18191 11094 11176 11254 0
18191 11094 11177 11252 0
18191 11094 11179 11250 0
18191 11094 11181 11248 0
18191 11094 11183 11246 0
18191 11094 11185 11244 0
18191 11094 11187 11242 0
18191 11094 11189 11240 0
18191 11094 11191 11238 0
18191 11094 11193 11236 0
18191 11094 11195 11234 0
18191 11094 11197 11232 0
18191 11094 11199 11230 0
18191 11094 11201 11228 0
18191 11094 11203 11227 0
18191 11094 11205 0
18191 11094 11207 0
18191 11094 11209 0
18191 11094 11211 0
18191 11094 11213 0
18191 11094 11215 0
18191 11094 11217 0
18191 11094 11219 0
18191 11094 11221 0
18191 11094 11223 0
18191 11094 11225 0
18191 11096 11254 0
18191 11096 11176 11252 0
18191 11096 11177 11250 0
18191 11096 11179 11248 0
18191 11096 11181 11246 0
18191 11096 11183 11244 0
18191 11096 11185 11242 0
18191 11096 11187 11240 0
18191 11096 11189 11238 0
18191 11096 11191 11236 0
18191 11096 11193 11234 0
18191 11096 11195 11232 0
18191 11096 11197 11230 0
18191 11096 11199 11228 0
18191 11096 11201 11227 0
18191 11096 11203 0
18191 11096 11205 0
18191 11096 11207 0
18191 11096 11209 0
18191 11096 11211 0
18191 11096 11213 0
18191 11096 11215 0
18191 11096 11217 0
18191 11096 11219 0
18191 11096 11221 0
18191 11096 11223 0
18191 11096 11225 0
18191 11098 11252 0
18191 11098 11176 11250 0
18191 11098 11177 11248 0
18191 11098 11179 11246 0
18191 11098 11181 11244 0
18191 11098 11183 11242 0
18191 11098 11185 11240 0
18191 11098 11187 11238 0
18191 11098 11189 11236 0
18191 11098 11191 11234 0
18191 11098 11193 11232 0
18191 11098 11195 11230 0
18191 11098 11197 11228 0
18191 11098 11199 11227 0
18191 11098 11201 0
18191 11098 11203 0
18191 11098 11205 0
18191 11098 11207 0
18191 11098 11209 0
18191 11098 11211 0
18191 11098 11213 0
18191 11098 11215 0
18191 11098 11217 0
18191 11098 11219 0
18191 11098 11221 0
18191 11098 11223 0
18191 11098 11225 0
18191 11100 11250 0
18191 11100 11176 11248 0
18191 11100 11177 11246 0
18191 11100 11179 11244 0
18191 11100 11181 11242 0
18191 11100 11183 11240 0
18191 11100 11185 11238 0
18191 11100 11187 11236 0
18191 11100 11189 11234 0
18191 11100 11191 11232 0
18191 11100 11193 11230 0
18191 11100 11195 11228 0
18191 11100 11197 11227 0
18191 11100 11199 0
18191 11100 11201 0
18191 11100 11203 0
18191 11100 11205 0
18191 11100 11207 0
18191 11100 11209 0
18191 11100 11211 0
18191 11100 11213 0
18191 11100 11215 0
18191 11100 11217 0
18191 11100 11219 0
18191 11100 11221 0
18191 11100 11223 0
18191 11100 11225 0
18191 11102 11248 0
18191 11102 11176 11246 0
18191 11102 11177 11244 0
18191 11102 11179 11242 0
18191 11102 11181 11240 0
18191 11102 11183 11238 0
18191 11102 11185 11236 0
18191 11102 11187 11234 0
18191 11102 11189 11232 0
18191 11102 11191 11230 0
18191 11102 11193 11228 0
18191 11102 11195 11227 0
18191 11102 11197 0
18191 11102 11199 0
18191 11102 11201 0
18191 11102 11203 0
18191 11102 11205 0
18191 11102 11207 0
18191 11102 11209 0
18191 11102 11211 0
18191 11102 11213 0
18191 11102 11215 0
18191 11102 11217 0
18191 11102 11219 0
18191 11102 11221 0
18191 11102 11223 0
18191 11102 11225 0
18191 11104 11246 0
18191 11104 11176 11244 0
18191 11104 11177 11242 0
18191 11104 11179 11240 0
18191 11104 11181 11238 0
18191 11104 11183 11236 0
18191 11104 11185 11234 0
18191 11104 11187 11232 0
18191 11104 11189 11230 0
18191 11104 11191 11228 0
18191 11104 11193 11227 0
18191 11104 11195 0
18191 11104 11197 0
18191 11104 11199 0
18191 11104 11201 0
18191 11104 11203 0
18191 11104 11205 0
18191 11104 11207 0
18191 11104 11209 0
18191 11104 11211 0
18191 11104 11213 0
18191 11104 11215 0
18191 11104 11217 0
18191 11104 11219 0
18191 11104 11221 0
18191 11104 11223 0
18191 11104 11225 0
c (((aux445 + aux448 + aux449)<=27)=tv=SATLiteral(18192))
-18192 11540 0
-18192 11436 11538 0
-18192 11437 11536 0
-18192 11439 11534 0
-18192 11441 11532 0
-18192 11443 11530 0
-18192 11445 11528 0
-18192 11447 11526 0
-18192 11449 11524 0
-18192 11451 11522 0
-18192 11453 11520 0
-18192 11455 11518 0
-18192 11457 11516 0
-18192 11459 11514 0
-18192 11461 11512 0
-18192 11463 11510 0
-18192 11465 11508 0
-18192 11467 11506 0
-18192 11469 11504 0
-18192 11471 11502 0
-18192 11473 11500 0
-18192 11475 11498 0
-18192 11477 11496 0
-18192 11479 11494 0
-18192 11481 11492 0
-18192 11483 11490 0
-18192 11485 11488 0
-18192 11331 11538 0
-18192 11331 11436 11536 0
-18192 11331 11437 11534 0
-18192 11331 11439 11532 0
-18192 11331 11441 11530 0
-18192 11331 11443 11528 0
-18192 11331 11445 11526 0
-18192 11331 11447 11524 0
-18192 11331 11449 11522 0
-18192 11331 11451 11520 0
-18192 11331 11453 11518 0
-18192 11331 11455 11516 0
-18192 11331 11457 11514 0
-18192 11331 11459 11512 0
-18192 11331 11461 11510 0
-18192 11331 11463 11508 0
-18192 11331 11465 11506 0
-18192 11331 11467 11504 0
-18192 11331 11469 11502 0
-18192 11331 11471 11500 0
-18192 11331 11473 11498 0
-18192 11331 11475 11496 0
-18192 11331 11477 11494 0
-18192 11331 11479 11492 0
-18192 11331 11481 11490 0
-18192 11331 11483 11488 0
-18192 11331 11485 11487 0
-18192 11332 11536 0
-18192 11332 11436 11534 0
-18192 11332 11437 11532 0
-18192 11332 11439 11530 0
-18192 11332 11441 11528 0
-18192 11332 11443 11526 0
-18192 11332 11445 11524 0
-18192 11332 11447 11522 0
-18192 11332 11449 11520 0
-18192 11332 11451 11518 0
-18192 11332 11453 11516 0
-18192 11332 11455 11514 0
-18192 11332 11457 11512 0
-18192 11332 11459 11510 0
-18192 11332 11461 11508 0
-18192 11332 11463 11506 0
-18192 11332 11465 11504 0
-18192 11332 11467 11502 0
-18192 11332 11469 11500 0
-18192 11332 11471 11498 0
-18192 11332 11473 11496 0
-18192 11332 11475 11494 0
-18192 11332 11477 11492 0
-18192 11332 11479 11490 0
-18192 11332 11481 11488 0
-18192 11332 11483 11487 0
-18192 11332 11485 0
-18192 11334 11534 0
-18192 11334 11436 11532 0
-18192 11334 11437 11530 0
-18192 11334 11439 11528 0
-18192 11334 11441 11526 0
-18192 11334 11443 11524 0
-18192 11334 11445 11522 0
-18192 11334 11447 11520 0
-18192 11334 11449 11518 0
-18192 11334 11451 11516 0
-18192 11334 11453 11514 0
-18192 11334 11455 11512 0
-18192 11334 11457 11510 0
-18192 11334 11459 11508 0
-18192 11334 11461 11506 0
-18192 11334 11463 11504 0
-18192 11334 11465 11502 0
-18192 11334 11467 11500 0
-18192 11334 11469 11498 0
-18192 11334 11471 11496 0
-18192 11334 11473 11494 0
-18192 11334 11475 11492 0
-18192 11334 11477 11490 0
-18192 11334 11479 11488 0
-18192 11334 11481 11487 0
-18192 11334 11483 0
-18192 11334 11485 0
-18192 11336 11532 0
-18192 11336 11436 11530 0
-18192 11336 11437 11528 0
-18192 11336 11439 11526 0
-18192 11336 11441 11524 0
-18192 11336 11443 11522 0
-18192 11336 11445 11520 0
-18192 11336 11447 11518 0
-18192 11336 11449 11516 0
-18192 11336 11451 11514 0
-18192 11336 11453 11512 0
-18192 11336 11455 11510 0
-18192 11336 11457 11508 0
-18192 11336 11459 11506 0
-18192 11336 11461 11504 0
-18192 11336 11463 11502 0
-18192 11336 11465 11500 0
-18192 11336 11467 11498 0
-18192 11336 11469 11496 0
-18192 11336 11471 11494 0
-18192 11336 11473 11492 0
-18192 11336 11475 11490 0
-18192 11336 11477 11488 0
-18192 11336 11479 11487 0
-18192 11336 11481 0
-18192 11336 11483 0
-18192 11336 11485 0
-18192 11338 11530 0
-18192 11338 11436 11528 0
-18192 11338 11437 11526 0
-18192 11338 11439 11524 0
-18192 11338 11441 11522 0
-18192 11338 11443 11520 0
-18192 11338 11445 11518 0
-18192 11338 11447 11516 0
-18192 11338 11449 11514 0
-18192 11338 11451 11512 0
-18192 11338 11453 11510 0
-18192 11338 11455 11508 0
-18192 11338 11457 11506 0
-18192 11338 11459 11504 0
-18192 11338 11461 11502 0
-18192 11338 11463 11500 0
-18192 11338 11465 11498 0
-18192 11338 11467 11496 0
-18192 11338 11469 11494 0
-18192 11338 11471 11492 0
-18192 11338 11473 11490 0
-18192 11338 11475 11488 0
-18192 11338 11477 11487 0
-18192 11338 11479 0
-18192 11338 11481 0
-18192 11338 11483 0
-18192 11338 11485 0
-18192 11340 11528 0
-18192 11340 11436 11526 0
-18192 11340 11437 11524 0
-18192 11340 11439 11522 0
-18192 11340 11441 11520 0
-18192 11340 11443 11518 0
-18192 11340 11445 11516 0
-18192 11340 11447 11514 0
-18192 11340 11449 11512 0
-18192 11340 11451 11510 0
-18192 11340 11453 11508 0
-18192 11340 11455 11506 0
-18192 11340 11457 11504 0
-18192 11340 11459 11502 0
-18192 11340 11461 11500 0
-18192 11340 11463 11498 0
-18192 11340 11465 11496 0
-18192 11340 11467 11494 0
-18192 11340 11469 11492 0
-18192 11340 11471 11490 0
-18192 11340 11473 11488 0
-18192 11340 11475 11487 0
-18192 11340 11477 0
-18192 11340 11479 0
-18192 11340 11481 0
-18192 11340 11483 0
-18192 11340 11485 0
-18192 11342 11526 0
-18192 11342 11436 11524 0
-18192 11342 11437 11522 0
-18192 11342 11439 11520 0
-18192 11342 11441 11518 0
-18192 11342 11443 11516 0
-18192 11342 11445 11514 0
-18192 11342 11447 11512 0
-18192 11342 11449 11510 0
-18192 11342 11451 11508 0
-18192 11342 11453 11506 0
-18192 11342 11455 11504 0
-18192 11342 11457 11502 0
-18192 11342 11459 11500 0
-18192 11342 11461 11498 0
-18192 11342 11463 11496 0
-18192 11342 11465 11494 0
-18192 11342 11467 11492 0
-18192 11342 11469 11490 0
-18192 11342 11471 11488 0
-18192 11342 11473 11487 0
-18192 11342 11475 0
-18192 11342 11477 0
-18192 11342 11479 0
-18192 11342 11481 0
-18192 11342 11483 0
-18192 11342 11485 0
-18192 11344 11524 0
-18192 11344 11436 11522 0
-18192 11344 11437 11520 0
-18192 11344 11439 11518 0
-18192 11344 11441 11516 0
-18192 11344 11443 11514 0
-18192 11344 11445 11512 0
-18192 11344 11447 11510 0
-18192 11344 11449 11508 0
-18192 11344 11451 11506 0
-18192 11344 11453 11504 0
-18192 11344 11455 11502 0
-18192 11344 11457 11500 0
-18192 11344 11459 11498 0
-18192 11344 11461 11496 0
-18192 11344 11463 11494 0
-18192 11344 11465 11492 0
-18192 11344 11467 11490 0
-18192 11344 11469 11488 0
-18192 11344 11471 11487 0
-18192 11344 11473 0
-18192 11344 11475 0
-18192 11344 11477 0
-18192 11344 11479 0
-18192 11344 11481 0
-18192 11344 11483 0
-18192 11344 11485 0
-18192 11346 11522 0
-18192 11346 11436 11520 0
-18192 11346 11437 11518 0
-18192 11346 11439 11516 0
-18192 11346 11441 11514 0
-18192 11346 11443 11512 0
-18192 11346 11445 11510 0
-18192 11346 11447 11508 0
-18192 11346 11449 11506 0
-18192 11346 11451 11504 0
-18192 11346 11453 11502 0
-18192 11346 11455 11500 0
-18192 11346 11457 11498 0
-18192 11346 11459 11496 0
-18192 11346 11461 11494 0
-18192 11346 11463 11492 0
-18192 11346 11465 11490 0
-18192 11346 11467 11488 0
-18192 11346 11469 11487 0
-18192 11346 11471 0
-18192 11346 11473 0
-18192 11346 11475 0
-18192 11346 11477 0
-18192 11346 11479 0
-18192 11346 11481 0
-18192 11346 11483 0
-18192 11346 11485 0
-18192 11348 11520 0
-18192 11348 11436 11518 0
-18192 11348 11437 11516 0
-18192 11348 11439 11514 0
-18192 11348 11441 11512 0
-18192 11348 11443 11510 0
-18192 11348 11445 11508 0
-18192 11348 11447 11506 0
-18192 11348 11449 11504 0
-18192 11348 11451 11502 0
-18192 11348 11453 11500 0
-18192 11348 11455 11498 0
-18192 11348 11457 11496 0
-18192 11348 11459 11494 0
-18192 11348 11461 11492 0
-18192 11348 11463 11490 0
-18192 11348 11465 11488 0
-18192 11348 11467 11487 0
-18192 11348 11469 0
-18192 11348 11471 0
-18192 11348 11473 0
-18192 11348 11475 0
-18192 11348 11477 0
-18192 11348 11479 0
-18192 11348 11481 0
-18192 11348 11483 0
-18192 11348 11485 0
-18192 11350 11518 0
-18192 11350 11436 11516 0
-18192 11350 11437 11514 0
-18192 11350 11439 11512 0
-18192 11350 11441 11510 0
-18192 11350 11443 11508 0
-18192 11350 11445 11506 0
-18192 11350 11447 11504 0
-18192 11350 11449 11502 0
-18192 11350 11451 11500 0
-18192 11350 11453 11498 0
-18192 11350 11455 11496 0
-18192 11350 11457 11494 0
-18192 11350 11459 11492 0
-18192 11350 11461 11490 0
-18192 11350 11463 11488 0
-18192 11350 11465 11487 0
-18192 11350 11467 0
-18192 11350 11469 0
-18192 11350 11471 0
-18192 11350 11473 0
-18192 11350 11475 0
-18192 11350 11477 0
-18192 11350 11479 0
-18192 11350 11481 0
-18192 11350 11483 0
-18192 11350 11485 0
-18192 11352 11516 0
-18192 11352 11436 11514 0
-18192 11352 11437 11512 0
-18192 11352 11439 11510 0
-18192 11352 11441 11508 0
-18192 11352 11443 11506 0
-18192 11352 11445 11504 0
-18192 11352 11447 11502 0
-18192 11352 11449 11500 0
-18192 11352 11451 11498 0
-18192 11352 11453 11496 0
-18192 11352 11455 11494 0
-18192 11352 11457 11492 0
-18192 11352 11459 11490 0
-18192 11352 11461 11488 0
-18192 11352 11463 11487 0
-18192 11352 11465 0
-18192 11352 11467 0
-18192 11352 11469 0
-18192 11352 11471 0
-18192 11352 11473 0
-18192 11352 11475 0
-18192 11352 11477 0
-18192 11352 11479 0
-18192 11352 11481 0
-18192 11352 11483 0
-18192 11352 11485 0
-18192 11354 11514 0
-18192 11354 11436 11512 0
-18192 11354 11437 11510 0
-18192 11354 11439 11508 0
-18192 11354 11441 11506 0
-18192 11354 11443 11504 0
-18192 11354 11445 11502 0
-18192 11354 11447 11500 0
-18192 11354 11449 11498 0
-18192 11354 11451 11496 0
-18192 11354 11453 11494 0
-18192 11354 11455 11492 0
-18192 11354 11457 11490 0
-18192 11354 11459 11488 0
-18192 11354 11461 11487 0
-18192 11354 11463 0
-18192 11354 11465 0
-18192 11354 11467 0
-18192 11354 11469 0
-18192 11354 11471 0
-18192 11354 11473 0
-18192 11354 11475 0
-18192 11354 11477 0
-18192 11354 11479 0
-18192 11354 11481 0
-18192 11354 11483 0
-18192 11354 11485 0
-18192 11356 11512 0
-18192 11356 11436 11510 0
-18192 11356 11437 11508 0
-18192 11356 11439 11506 0
-18192 11356 11441 11504 0
-18192 11356 11443 11502 0
-18192 11356 11445 11500 0
-18192 11356 11447 11498 0
-18192 11356 11449 11496 0
-18192 11356 11451 11494 0
-18192 11356 11453 11492 0
-18192 11356 11455 11490 0
-18192 11356 11457 11488 0
-18192 11356 11459 11487 0
-18192 11356 11461 0
-18192 11356 11463 0
-18192 11356 11465 0
-18192 11356 11467 0
-18192 11356 11469 0
-18192 11356 11471 0
-18192 11356 11473 0
-18192 11356 11475 0
-18192 11356 11477 0
-18192 11356 11479 0
-18192 11356 11481 0
-18192 11356 11483 0
-18192 11356 11485 0
-18192 11358 11510 0
-18192 11358 11436 11508 0
-18192 11358 11437 11506 0
-18192 11358 11439 11504 0
-18192 11358 11441 11502 0
-18192 11358 11443 11500 0
-18192 11358 11445 11498 0
-18192 11358 11447 11496 0
-18192 11358 11449 11494 0
-18192 11358 11451 11492 0
-18192 11358 11453 11490 0
-18192 11358 11455 11488 0
-18192 11358 11457 11487 0
-18192 11358 11459 0
-18192 11358 11461 0
-18192 11358 11463 0
-18192 11358 11465 0
-18192 11358 11467 0
-18192 11358 11469 0
-18192 11358 11471 0
-18192 11358 11473 0
-18192 11358 11475 0
-18192 11358 11477 0
-18192 11358 11479 0
-18192 11358 11481 0
-18192 11358 11483 0
-18192 11358 11485 0
-18192 11360 11508 0
-18192 11360 11436 11506 0
-18192 11360 11437 11504 0
-18192 11360 11439 11502 0
-18192 11360 11441 11500 0
-18192 11360 11443 11498 0
-18192 11360 11445 11496 0
-18192 11360 11447 11494 0
-18192 11360 11449 11492 0
-18192 11360 11451 11490 0
-18192 11360 11453 11488 0
-18192 11360 11455 11487 0
-18192 11360 11457 0
-18192 11360 11459 0
-18192 11360 11461 0
-18192 11360 11463 0
-18192 11360 11465 0
-18192 11360 11467 0
-18192 11360 11469 0
-18192 11360 11471 0
-18192 11360 11473 0
-18192 11360 11475 0
-18192 11360 11477 0
-18192 11360 11479 0
-18192 11360 11481 0
-18192 11360 11483 0
-18192 11360 11485 0
-18192 11362 11506 0
-18192 11362 11436 11504 0
-18192 11362 11437 11502 0
-18192 11362 11439 11500 0
-18192 11362 11441 11498 0
-18192 11362 11443 11496 0
-18192 11362 11445 11494 0
-18192 11362 11447 11492 0
-18192 11362 11449 11490 0
-18192 11362 11451 11488 0
-18192 11362 11453 11487 0
-18192 11362 11455 0
-18192 11362 11457 0
-18192 11362 11459 0
-18192 11362 11461 0
-18192 11362 11463 0
-18192 11362 11465 0
-18192 11362 11467 0
-18192 11362 11469 0
-18192 11362 11471 0
-18192 11362 11473 0
-18192 11362 11475 0
-18192 11362 11477 0
-18192 11362 11479 0
-18192 11362 11481 0
-18192 11362 11483 0
-18192 11362 11485 0
-18192 11364 11504 0
-18192 11364 11436 11502 0
-18192 11364 11437 11500 0
-18192 11364 11439 11498 0
-18192 11364 11441 11496 0
-18192 11364 11443 11494 0
-18192 11364 11445 11492 0
-18192 11364 11447 11490 0
-18192 11364 11449 11488 0
-18192 11364 11451 11487 0
-18192 11364 11453 0
-18192 11364 11455 0
-18192 11364 11457 0
-18192 11364 11459 0
-18192 11364 11461 0
-18192 11364 11463 0
-18192 11364 11465 0
-18192 11364 11467 0
-18192 11364 11469 0
-18192 11364 11471 0
-18192 11364 11473 0
-18192 11364 11475 0
-18192 11364 11477 0
-18192 11364 11479 0
-18192 11364 11481 0
-18192 11364 11483 0
-18192 11364 11485 0
18192 -11453 -11487 0
18192 -11451 -11488 0
18192 -11449 -11490 0
18192 -11447 -11492 0
18192 -11445 -11494 0
18192 -11443 -11496 0
18192 -11441 -11498 0
18192 -11439 -11500 0
18192 -11437 -11502 0
18192 -11436 -11504 0
18192 -11364 -11455 -11487 0
18192 -11364 -11453 -11488 0
18192 -11364 -11451 -11490 0
18192 -11364 -11449 -11492 0
18192 -11364 -11447 -11494 0
18192 -11364 -11445 -11496 0
18192 -11364 -11443 -11498 0
18192 -11364 -11441 -11500 0
18192 -11364 -11439 -11502 0
18192 -11364 -11437 -11504 0
18192 -11364 -11436 -11506 0
18192 -11362 -11457 -11487 0
18192 -11362 -11455 -11488 0
18192 -11362 -11453 -11490 0
18192 -11362 -11451 -11492 0
18192 -11362 -11449 -11494 0
18192 -11362 -11447 -11496 0
18192 -11362 -11445 -11498 0
18192 -11362 -11443 -11500 0
18192 -11362 -11441 -11502 0
18192 -11362 -11439 -11504 0
18192 -11362 -11437 -11506 0
18192 -11362 -11436 -11508 0
18192 -11360 -11459 -11487 0
18192 -11360 -11457 -11488 0
18192 -11360 -11455 -11490 0
18192 -11360 -11453 -11492 0
18192 -11360 -11451 -11494 0
18192 -11360 -11449 -11496 0
18192 -11360 -11447 -11498 0
18192 -11360 -11445 -11500 0
18192 -11360 -11443 -11502 0
18192 -11360 -11441 -11504 0
18192 -11360 -11439 -11506 0
18192 -11360 -11437 -11508 0
18192 -11360 -11436 -11510 0
18192 -11358 -11461 -11487 0
18192 -11358 -11459 -11488 0
18192 -11358 -11457 -11490 0
18192 -11358 -11455 -11492 0
18192 -11358 -11453 -11494 0
18192 -11358 -11451 -11496 0
18192 -11358 -11449 -11498 0
18192 -11358 -11447 -11500 0
18192 -11358 -11445 -11502 0
18192 -11358 -11443 -11504 0
18192 -11358 -11441 -11506 0
18192 -11358 -11439 -11508 0
18192 -11358 -11437 -11510 0
18192 -11358 -11436 -11512 0
18192 -11356 -11463 -11487 0
18192 -11356 -11461 -11488 0
18192 -11356 -11459 -11490 0
18192 -11356 -11457 -11492 0
18192 -11356 -11455 -11494 0
18192 -11356 -11453 -11496 0
18192 -11356 -11451 -11498 0
18192 -11356 -11449 -11500 0
18192 -11356 -11447 -11502 0
18192 -11356 -11445 -11504 0
18192 -11356 -11443 -11506 0
18192 -11356 -11441 -11508 0
18192 -11356 -11439 -11510 0
18192 -11356 -11437 -11512 0
18192 -11356 -11436 -11514 0
18192 -11354 -11465 -11487 0
18192 -11354 -11463 -11488 0
18192 -11354 -11461 -11490 0
18192 -11354 -11459 -11492 0
18192 -11354 -11457 -11494 0
18192 -11354 -11455 -11496 0
18192 -11354 -11453 -11498 0
18192 -11354 -11451 -11500 0
18192 -11354 -11449 -11502 0
18192 -11354 -11447 -11504 0
18192 -11354 -11445 -11506 0
18192 -11354 -11443 -11508 0
18192 -11354 -11441 -11510 0
18192 -11354 -11439 -11512 0
18192 -11354 -11437 -11514 0
18192 -11354 -11436 -11516 0
18192 -11352 -11467 -11487 0
18192 -11352 -11465 -11488 0
18192 -11352 -11463 -11490 0
18192 -11352 -11461 -11492 0
18192 -11352 -11459 -11494 0
18192 -11352 -11457 -11496 0
18192 -11352 -11455 -11498 0
18192 -11352 -11453 -11500 0
18192 -11352 -11451 -11502 0
18192 -11352 -11449 -11504 0
18192 -11352 -11447 -11506 0
18192 -11352 -11445 -11508 0
18192 -11352 -11443 -11510 0
18192 -11352 -11441 -11512 0
18192 -11352 -11439 -11514 0
18192 -11352 -11437 -11516 0
18192 -11352 -11436 -11518 0
18192 -11350 -11469 -11487 0
18192 -11350 -11467 -11488 0
18192 -11350 -11465 -11490 0
18192 -11350 -11463 -11492 0
18192 -11350 -11461 -11494 0
18192 -11350 -11459 -11496 0
18192 -11350 -11457 -11498 0
18192 -11350 -11455 -11500 0
18192 -11350 -11453 -11502 0
18192 -11350 -11451 -11504 0
18192 -11350 -11449 -11506 0
18192 -11350 -11447 -11508 0
18192 -11350 -11445 -11510 0
18192 -11350 -11443 -11512 0
18192 -11350 -11441 -11514 0
18192 -11350 -11439 -11516 0
18192 -11350 -11437 -11518 0
18192 -11350 -11436 -11520 0
18192 -11348 -11471 -11487 0
18192 -11348 -11469 -11488 0
18192 -11348 -11467 -11490 0
18192 -11348 -11465 -11492 0
18192 -11348 -11463 -11494 0
18192 -11348 -11461 -11496 0
18192 -11348 -11459 -11498 0
18192 -11348 -11457 -11500 0
18192 -11348 -11455 -11502 0
18192 -11348 -11453 -11504 0
18192 -11348 -11451 -11506 0
18192 -11348 -11449 -11508 0
18192 -11348 -11447 -11510 0
18192 -11348 -11445 -11512 0
18192 -11348 -11443 -11514 0
18192 -11348 -11441 -11516 0
18192 -11348 -11439 -11518 0
18192 -11348 -11437 -11520 0
18192 -11348 -11436 -11522 0
18192 -11346 -11473 -11487 0
18192 -11346 -11471 -11488 0
18192 -11346 -11469 -11490 0
18192 -11346 -11467 -11492 0
18192 -11346 -11465 -11494 0
18192 -11346 -11463 -11496 0
18192 -11346 -11461 -11498 0
18192 -11346 -11459 -11500 0
18192 -11346 -11457 -11502 0
18192 -11346 -11455 -11504 0
18192 -11346 -11453 -11506 0
18192 -11346 -11451 -11508 0
18192 -11346 -11449 -11510 0
18192 -11346 -11447 -11512 0
18192 -11346 -11445 -11514 0
18192 -11346 -11443 -11516 0
18192 -11346 -11441 -11518 0
18192 -11346 -11439 -11520 0
18192 -11346 -11437 -11522 0
18192 -11346 -11436 -11524 0
18192 -11344 -11475 -11487 0
18192 -11344 -11473 -11488 0
18192 -11344 -11471 -11490 0
18192 -11344 -11469 -11492 0
18192 -11344 -11467 -11494 0
18192 -11344 -11465 -11496 0
18192 -11344 -11463 -11498 0
18192 -11344 -11461 -11500 0
18192 -11344 -11459 -11502 0
18192 -11344 -11457 -11504 0
18192 -11344 -11455 -11506 0
18192 -11344 -11453 -11508 0
18192 -11344 -11451 -11510 0
18192 -11344 -11449 -11512 0
18192 -11344 -11447 -11514 0
18192 -11344 -11445 -11516 0
18192 -11344 -11443 -11518 0
18192 -11344 -11441 -11520 0
18192 -11344 -11439 -11522 0
18192 -11344 -11437 -11524 0
18192 -11344 -11436 -11526 0
18192 -11342 -11477 -11487 0
18192 -11342 -11475 -11488 0
18192 -11342 -11473 -11490 0
18192 -11342 -11471 -11492 0
18192 -11342 -11469 -11494 0
18192 -11342 -11467 -11496 0
18192 -11342 -11465 -11498 0
18192 -11342 -11463 -11500 0
18192 -11342 -11461 -11502 0
18192 -11342 -11459 -11504 0
18192 -11342 -11457 -11506 0
18192 -11342 -11455 -11508 0
18192 -11342 -11453 -11510 0
18192 -11342 -11451 -11512 0
18192 -11342 -11449 -11514 0
18192 -11342 -11447 -11516 0
18192 -11342 -11445 -11518 0
18192 -11342 -11443 -11520 0
18192 -11342 -11441 -11522 0
18192 -11342 -11439 -11524 0
18192 -11342 -11437 -11526 0
18192 -11342 -11436 -11528 0
18192 -11340 -11479 -11487 0
18192 -11340 -11477 -11488 0
18192 -11340 -11475 -11490 0
18192 -11340 -11473 -11492 0
18192 -11340 -11471 -11494 0
18192 -11340 -11469 -11496 0
18192 -11340 -11467 -11498 0
18192 -11340 -11465 -11500 0
18192 -11340 -11463 -11502 0
18192 -11340 -11461 -11504 0
18192 -11340 -11459 -11506 0
18192 -11340 -11457 -11508 0
18192 -11340 -11455 -11510 0
18192 -11340 -11453 -11512 0
18192 -11340 -11451 -11514 0
18192 -11340 -11449 -11516 0
18192 -11340 -11447 -11518 0
18192 -11340 -11445 -11520 0
18192 -11340 -11443 -11522 0
18192 -11340 -11441 -11524 0
18192 -11340 -11439 -11526 0
18192 -11340 -11437 -11528 0
18192 -11340 -11436 -11530 0
18192 -11338 -11481 -11487 0
18192 -11338 -11479 -11488 0
18192 -11338 -11477 -11490 0
18192 -11338 -11475 -11492 0
18192 -11338 -11473 -11494 0
18192 -11338 -11471 -11496 0
18192 -11338 -11469 -11498 0
18192 -11338 -11467 -11500 0
18192 -11338 -11465 -11502 0
18192 -11338 -11463 -11504 0
18192 -11338 -11461 -11506 0
18192 -11338 -11459 -11508 0
18192 -11338 -11457 -11510 0
18192 -11338 -11455 -11512 0
18192 -11338 -11453 -11514 0
18192 -11338 -11451 -11516 0
18192 -11338 -11449 -11518 0
18192 -11338 -11447 -11520 0
18192 -11338 -11445 -11522 0
18192 -11338 -11443 -11524 0
18192 -11338 -11441 -11526 0
18192 -11338 -11439 -11528 0
18192 -11338 -11437 -11530 0
18192 -11338 -11436 -11532 0
18192 -11336 -11483 -11487 0
18192 -11336 -11481 -11488 0
18192 -11336 -11479 -11490 0
18192 -11336 -11477 -11492 0
18192 -11336 -11475 -11494 0
18192 -11336 -11473 -11496 0
18192 -11336 -11471 -11498 0
18192 -11336 -11469 -11500 0
18192 -11336 -11467 -11502 0
18192 -11336 -11465 -11504 0
18192 -11336 -11463 -11506 0
18192 -11336 -11461 -11508 0
18192 -11336 -11459 -11510 0
18192 -11336 -11457 -11512 0
18192 -11336 -11455 -11514 0
18192 -11336 -11453 -11516 0
18192 -11336 -11451 -11518 0
18192 -11336 -11449 -11520 0
18192 -11336 -11447 -11522 0
18192 -11336 -11445 -11524 0
18192 -11336 -11443 -11526 0
18192 -11336 -11441 -11528 0
18192 -11336 -11439 -11530 0
18192 -11336 -11437 -11532 0
18192 -11336 -11436 -11534 0
18192 -11334 -11485 -11487 0
18192 -11334 -11483 -11488 0
18192 -11334 -11481 -11490 0
18192 -11334 -11479 -11492 0
18192 -11334 -11477 -11494 0
18192 -11334 -11475 -11496 0
18192 -11334 -11473 -11498 0
18192 -11334 -11471 -11500 0
18192 -11334 -11469 -11502 0
18192 -11334 -11467 -11504 0
18192 -11334 -11465 -11506 0
18192 -11334 -11463 -11508 0
18192 -11334 -11461 -11510 0
18192 -11334 -11459 -11512 0
18192 -11334 -11457 -11514 0
18192 -11334 -11455 -11516 0
18192 -11334 -11453 -11518 0
18192 -11334 -11451 -11520 0
18192 -11334 -11449 -11522 0
18192 -11334 -11447 -11524 0
18192 -11334 -11445 -11526 0
18192 -11334 -11443 -11528 0
18192 -11334 -11441 -11530 0
18192 -11334 -11439 -11532 0
18192 -11334 -11437 -11534 0
18192 -11334 -11436 -11536 0
18192 -11332 -11487 0
18192 -11332 -11485 -11488 0
18192 -11332 -11483 -11490 0
18192 -11332 -11481 -11492 0
18192 -11332 -11479 -11494 0
18192 -11332 -11477 -11496 0
18192 -11332 -11475 -11498 0
18192 -11332 -11473 -11500 0
18192 -11332 -11471 -11502 0
18192 -11332 -11469 -11504 0
18192 -11332 -11467 -11506 0
18192 -11332 -11465 -11508 0
18192 -11332 -11463 -11510 0
18192 -11332 -11461 -11512 0
18192 -11332 -11459 -11514 0
18192 -11332 -11457 -11516 0
18192 -11332 -11455 -11518 0
18192 -11332 -11453 -11520 0
18192 -11332 -11451 -11522 0
18192 -11332 -11449 -11524 0
18192 -11332 -11447 -11526 0
18192 -11332 -11445 -11528 0
18192 -11332 -11443 -11530 0
18192 -11332 -11441 -11532 0
18192 -11332 -11439 -11534 0
18192 -11332 -11437 -11536 0
18192 -11332 -11436 -11538 0
18192 -11331 -11488 0
18192 -11331 -11485 -11490 0
18192 -11331 -11483 -11492 0
18192 -11331 -11481 -11494 0
18192 -11331 -11479 -11496 0
18192 -11331 -11477 -11498 0
18192 -11331 -11475 -11500 0
18192 -11331 -11473 -11502 0
18192 -11331 -11471 -11504 0
18192 -11331 -11469 -11506 0
18192 -11331 -11467 -11508 0
18192 -11331 -11465 -11510 0
18192 -11331 -11463 -11512 0
18192 -11331 -11461 -11514 0
18192 -11331 -11459 -11516 0
18192 -11331 -11457 -11518 0
18192 -11331 -11455 -11520 0
18192 -11331 -11453 -11522 0
18192 -11331 -11451 -11524 0
18192 -11331 -11449 -11526 0
18192 -11331 -11447 -11528 0
18192 -11331 -11445 -11530 0
18192 -11331 -11443 -11532 0
18192 -11331 -11441 -11534 0
18192 -11331 -11439 -11536 0
18192 -11331 -11437 -11538 0
18192 -11331 -11436 -11540 0
c ((27<=(aux445 + aux448 + aux449))=tv=SATLiteral(18193))
-18193 -11451 -11487 0
-18193 -11449 -11488 0
-18193 -11447 -11490 0
-18193 -11445 -11492 0
-18193 -11443 -11494 0
-18193 -11441 -11496 0
-18193 -11439 -11498 0
-18193 -11437 -11500 0
-18193 -11436 -11502 0
-18193 -11364 -11453 -11487 0
-18193 -11364 -11451 -11488 0
-18193 -11364 -11449 -11490 0
-18193 -11364 -11447 -11492 0
-18193 -11364 -11445 -11494 0
-18193 -11364 -11443 -11496 0
-18193 -11364 -11441 -11498 0
-18193 -11364 -11439 -11500 0
-18193 -11364 -11437 -11502 0
-18193 -11364 -11436 -11504 0
-18193 -11362 -11455 -11487 0
-18193 -11362 -11453 -11488 0
-18193 -11362 -11451 -11490 0
-18193 -11362 -11449 -11492 0
-18193 -11362 -11447 -11494 0
-18193 -11362 -11445 -11496 0
-18193 -11362 -11443 -11498 0
-18193 -11362 -11441 -11500 0
-18193 -11362 -11439 -11502 0
-18193 -11362 -11437 -11504 0
-18193 -11362 -11436 -11506 0
-18193 -11360 -11457 -11487 0
-18193 -11360 -11455 -11488 0
-18193 -11360 -11453 -11490 0
-18193 -11360 -11451 -11492 0
-18193 -11360 -11449 -11494 0
-18193 -11360 -11447 -11496 0
-18193 -11360 -11445 -11498 0
-18193 -11360 -11443 -11500 0
-18193 -11360 -11441 -11502 0
-18193 -11360 -11439 -11504 0
-18193 -11360 -11437 -11506 0
-18193 -11360 -11436 -11508 0
-18193 -11358 -11459 -11487 0
-18193 -11358 -11457 -11488 0
-18193 -11358 -11455 -11490 0
-18193 -11358 -11453 -11492 0
-18193 -11358 -11451 -11494 0
-18193 -11358 -11449 -11496 0
-18193 -11358 -11447 -11498 0
-18193 -11358 -11445 -11500 0
-18193 -11358 -11443 -11502 0
-18193 -11358 -11441 -11504 0
-18193 -11358 -11439 -11506 0
-18193 -11358 -11437 -11508 0
-18193 -11358 -11436 -11510 0
-18193 -11356 -11461 -11487 0
-18193 -11356 -11459 -11488 0
-18193 -11356 -11457 -11490 0
-18193 -11356 -11455 -11492 0
-18193 -11356 -11453 -11494 0
-18193 -11356 -11451 -11496 0
-18193 -11356 -11449 -11498 0
-18193 -11356 -11447 -11500 0
-18193 -11356 -11445 -11502 0
-18193 -11356 -11443 -11504 0
-18193 -11356 -11441 -11506 0
-18193 -11356 -11439 -11508 0
-18193 -11356 -11437 -11510 0
-18193 -11356 -11436 -11512 0
-18193 -11354 -11463 -11487 0
-18193 -11354 -11461 -11488 0
-18193 -11354 -11459 -11490 0
-18193 -11354 -11457 -11492 0
-18193 -11354 -11455 -11494 0
-18193 -11354 -11453 -11496 0
-18193 -11354 -11451 -11498 0
-18193 -11354 -11449 -11500 0
-18193 -11354 -11447 -11502 0
-18193 -11354 -11445 -11504 0
-18193 -11354 -11443 -11506 0
-18193 -11354 -11441 -11508 0
-18193 -11354 -11439 -11510 0
-18193 -11354 -11437 -11512 0
-18193 -11354 -11436 -11514 0
-18193 -11352 -11465 -11487 0
-18193 -11352 -11463 -11488 0
-18193 -11352 -11461 -11490 0
-18193 -11352 -11459 -11492 0
-18193 -11352 -11457 -11494 0
-18193 -11352 -11455 -11496 0
-18193 -11352 -11453 -11498 0
-18193 -11352 -11451 -11500 0
-18193 -11352 -11449 -11502 0
-18193 -11352 -11447 -11504 0
-18193 -11352 -11445 -11506 0
-18193 -11352 -11443 -11508 0
-18193 -11352 -11441 -11510 0
-18193 -11352 -11439 -11512 0
-18193 -11352 -11437 -11514 0
-18193 -11352 -11436 -11516 0
-18193 -11350 -11467 -11487 0
-18193 -11350 -11465 -11488 0
-18193 -11350 -11463 -11490 0
-18193 -11350 -11461 -11492 0
-18193 -11350 -11459 -11494 0
-18193 -11350 -11457 -11496 0
-18193 -11350 -11455 -11498 0
-18193 -11350 -11453 -11500 0
-18193 -11350 -11451 -11502 0
-18193 -11350 -11449 -11504 0
-18193 -11350 -11447 -11506 0
-18193 -11350 -11445 -11508 0
-18193 -11350 -11443 -11510 0
-18193 -11350 -11441 -11512 0
-18193 -11350 -11439 -11514 0
-18193 -11350 -11437 -11516 0
-18193 -11350 -11436 -11518 0
-18193 -11348 -11469 -11487 0
-18193 -11348 -11467 -11488 0
-18193 -11348 -11465 -11490 0
-18193 -11348 -11463 -11492 0
-18193 -11348 -11461 -11494 0
-18193 -11348 -11459 -11496 0
-18193 -11348 -11457 -11498 0
-18193 -11348 -11455 -11500 0
-18193 -11348 -11453 -11502 0
-18193 -11348 -11451 -11504 0
-18193 -11348 -11449 -11506 0
-18193 -11348 -11447 -11508 0
-18193 -11348 -11445 -11510 0
-18193 -11348 -11443 -11512 0
-18193 -11348 -11441 -11514 0
-18193 -11348 -11439 -11516 0
-18193 -11348 -11437 -11518 0
-18193 -11348 -11436 -11520 0
-18193 -11346 -11471 -11487 0
-18193 -11346 -11469 -11488 0
-18193 -11346 -11467 -11490 0
-18193 -11346 -11465 -11492 0
-18193 -11346 -11463 -11494 0
-18193 -11346 -11461 -11496 0
-18193 -11346 -11459 -11498 0
-18193 -11346 -11457 -11500 0
-18193 -11346 -11455 -11502 0
-18193 -11346 -11453 -11504 0
-18193 -11346 -11451 -11506 0
-18193 -11346 -11449 -11508 0
-18193 -11346 -11447 -11510 0
-18193 -11346 -11445 -11512 0
-18193 -11346 -11443 -11514 0
-18193 -11346 -11441 -11516 0
-18193 -11346 -11439 -11518 0
-18193 -11346 -11437 -11520 0
-18193 -11346 -11436 -11522 0
-18193 -11344 -11473 -11487 0
-18193 -11344 -11471 -11488 0
-18193 -11344 -11469 -11490 0
-18193 -11344 -11467 -11492 0
-18193 -11344 -11465 -11494 0
-18193 -11344 -11463 -11496 0
-18193 -11344 -11461 -11498 0
-18193 -11344 -11459 -11500 0
-18193 -11344 -11457 -11502 0
-18193 -11344 -11455 -11504 0
-18193 -11344 -11453 -11506 0
-18193 -11344 -11451 -11508 0
-18193 -11344 -11449 -11510 0
-18193 -11344 -11447 -11512 0
-18193 -11344 -11445 -11514 0
-18193 -11344 -11443 -11516 0
-18193 -11344 -11441 -11518 0
-18193 -11344 -11439 -11520 0
-18193 -11344 -11437 -11522 0
-18193 -11344 -11436 -11524 0
-18193 -11342 -11475 -11487 0
-18193 -11342 -11473 -11488 0
-18193 -11342 -11471 -11490 0
-18193 -11342 -11469 -11492 0
-18193 -11342 -11467 -11494 0
-18193 -11342 -11465 -11496 0
-18193 -11342 -11463 -11498 0
-18193 -11342 -11461 -11500 0
-18193 -11342 -11459 -11502 0
-18193 -11342 -11457 -11504 0
-18193 -11342 -11455 -11506 0
-18193 -11342 -11453 -11508 0
-18193 -11342 -11451 -11510 0
-18193 -11342 -11449 -11512 0
-18193 -11342 -11447 -11514 0
-18193 -11342 -11445 -11516 0
-18193 -11342 -11443 -11518 0
-18193 -11342 -11441 -11520 0
-18193 -11342 -11439 -11522 0
-18193 -11342 -11437 -11524 0
-18193 -11342 -11436 -11526 0
-18193 -11340 -11477 -11487 0
-18193 -11340 -11475 -11488 0
-18193 -11340 -11473 -11490 0
-18193 -11340 -11471 -11492 0
-18193 -11340 -11469 -11494 0
-18193 -11340 -11467 -11496 0
-18193 -11340 -11465 -11498 0
-18193 -11340 -11463 -11500 0
-18193 -11340 -11461 -11502 0
-18193 -11340 -11459 -11504 0
-18193 -11340 -11457 -11506 0
-18193 -11340 -11455 -11508 0
-18193 -11340 -11453 -11510 0
-18193 -11340 -11451 -11512 0
-18193 -11340 -11449 -11514 0
-18193 -11340 -11447 -11516 0
-18193 -11340 -11445 -11518 0
-18193 -11340 -11443 -11520 0
-18193 -11340 -11441 -11522 0
-18193 -11340 -11439 -11524 0
-18193 -11340 -11437 -11526 0
-18193 -11340 -11436 -11528 0
-18193 -11338 -11479 -11487 0
-18193 -11338 -11477 -11488 0
-18193 -11338 -11475 -11490 0
-18193 -11338 -11473 -11492 0
-18193 -11338 -11471 -11494 0
-18193 -11338 -11469 -11496 0
-18193 -11338 -11467 -11498 0
-18193 -11338 -11465 -11500 0
-18193 -11338 -11463 -11502 0
-18193 -11338 -11461 -11504 0
-18193 -11338 -11459 -11506 0
-18193 -11338 -11457 -11508 0
-18193 -11338 -11455 -11510 0
-18193 -11338 -11453 -11512 0
-18193 -11338 -11451 -11514 0
-18193 -11338 -11449 -11516 0
-18193 -11338 -11447 -11518 0
-18193 -11338 -11445 -11520 0
-18193 -11338 -11443 -11522 0
-18193 -11338 -11441 -11524 0
-18193 -11338 -11439 -11526 0
-18193 -11338 -11437 -11528 0
-18193 -11338 -11436 -11530 0
-18193 -11336 -11481 -11487 0
-18193 -11336 -11479 -11488 0
-18193 -11336 -11477 -11490 0
-18193 -11336 -11475 -11492 0
-18193 -11336 -11473 -11494 0
-18193 -11336 -11471 -11496 0
-18193 -11336 -11469 -11498 0
-18193 -11336 -11467 -11500 0
-18193 -11336 -11465 -11502 0
-18193 -11336 -11463 -11504 0
-18193 -11336 -11461 -11506 0
-18193 -11336 -11459 -11508 0
-18193 -11336 -11457 -11510 0
-18193 -11336 -11455 -11512 0
-18193 -11336 -11453 -11514 0
-18193 -11336 -11451 -11516 0
-18193 -11336 -11449 -11518 0
-18193 -11336 -11447 -11520 0
-18193 -11336 -11445 -11522 0
-18193 -11336 -11443 -11524 0
-18193 -11336 -11441 -11526 0
-18193 -11336 -11439 -11528 0
-18193 -11336 -11437 -11530 0
-18193 -11336 -11436 -11532 0
-18193 -11334 -11483 -11487 0
-18193 -11334 -11481 -11488 0
-18193 -11334 -11479 -11490 0
-18193 -11334 -11477 -11492 0
-18193 -11334 -11475 -11494 0
-18193 -11334 -11473 -11496 0
-18193 -11334 -11471 -11498 0
-18193 -11334 -11469 -11500 0
-18193 -11334 -11467 -11502 0
-18193 -11334 -11465 -11504 0
-18193 -11334 -11463 -11506 0
-18193 -11334 -11461 -11508 0
-18193 -11334 -11459 -11510 0
-18193 -11334 -11457 -11512 0
-18193 -11334 -11455 -11514 0
-18193 -11334 -11453 -11516 0
-18193 -11334 -11451 -11518 0
-18193 -11334 -11449 -11520 0
-18193 -11334 -11447 -11522 0
-18193 -11334 -11445 -11524 0
-18193 -11334 -11443 -11526 0
-18193 -11334 -11441 -11528 0
-18193 -11334 -11439 -11530 0
-18193 -11334 -11437 -11532 0
-18193 -11334 -11436 -11534 0
-18193 -11332 -11485 -11487 0
-18193 -11332 -11483 -11488 0
-18193 -11332 -11481 -11490 0
-18193 -11332 -11479 -11492 0
-18193 -11332 -11477 -11494 0
-18193 -11332 -11475 -11496 0
-18193 -11332 -11473 -11498 0
-18193 -11332 -11471 -11500 0
-18193 -11332 -11469 -11502 0
-18193 -11332 -11467 -11504 0
-18193 -11332 -11465 -11506 0
-18193 -11332 -11463 -11508 0
-18193 -11332 -11461 -11510 0
-18193 -11332 -11459 -11512 0
-18193 -11332 -11457 -11514 0
-18193 -11332 -11455 -11516 0
-18193 -11332 -11453 -11518 0
-18193 -11332 -11451 -11520 0
-18193 -11332 -11449 -11522 0
-18193 -11332 -11447 -11524 0
-18193 -11332 -11445 -11526 0
-18193 -11332 -11443 -11528 0
-18193 -11332 -11441 -11530 0
-18193 -11332 -11439 -11532 0
-18193 -11332 -11437 -11534 0
-18193 -11332 -11436 -11536 0
-18193 -11331 -11487 0
-18193 -11331 -11485 -11488 0
-18193 -11331 -11483 -11490 0
-18193 -11331 -11481 -11492 0
-18193 -11331 -11479 -11494 0
-18193 -11331 -11477 -11496 0
-18193 -11331 -11475 -11498 0
-18193 -11331 -11473 -11500 0
-18193 -11331 -11471 -11502 0
-18193 -11331 -11469 -11504 0
-18193 -11331 -11467 -11506 0
-18193 -11331 -11465 -11508 0
-18193 -11331 -11463 -11510 0
-18193 -11331 -11461 -11512 0
-18193 -11331 -11459 -11514 0
-18193 -11331 -11457 -11516 0
-18193 -11331 -11455 -11518 0
-18193 -11331 -11453 -11520 0
-18193 -11331 -11451 -11522 0
-18193 -11331 -11449 -11524 0
-18193 -11331 -11447 -11526 0
-18193 -11331 -11445 -11528 0
-18193 -11331 -11443 -11530 0
-18193 -11331 -11441 -11532 0
-18193 -11331 -11439 -11534 0
-18193 -11331 -11437 -11536 0
-18193 -11331 -11436 -11538 0
18193 11538 0
18193 11436 11536 0
18193 11437 11534 0
18193 11439 11532 0
18193 11441 11530 0
18193 11443 11528 0
18193 11445 11526 0
18193 11447 11524 0
18193 11449 11522 0
18193 11451 11520 0
18193 11453 11518 0
18193 11455 11516 0
18193 11457 11514 0
18193 11459 11512 0
18193 11461 11510 0
18193 11463 11508 0
18193 11465 11506 0
18193 11467 11504 0
18193 11469 11502 0
18193 11471 11500 0
18193 11473 11498 0
18193 11475 11496 0
18193 11477 11494 0
18193 11479 11492 0
18193 11481 11490 0
18193 11483 11488 0
18193 11485 11487 0
18193 11331 11536 0
18193 11331 11436 11534 0
18193 11331 11437 11532 0
18193 11331 11439 11530 0
18193 11331 11441 11528 0
18193 11331 11443 11526 0
18193 11331 11445 11524 0
18193 11331 11447 11522 0
18193 11331 11449 11520 0
18193 11331 11451 11518 0
18193 11331 11453 11516 0
18193 11331 11455 11514 0
18193 11331 11457 11512 0
18193 11331 11459 11510 0
18193 11331 11461 11508 0
18193 11331 11463 11506 0
18193 11331 11465 11504 0
18193 11331 11467 11502 0
18193 11331 11469 11500 0
18193 11331 11471 11498 0
18193 11331 11473 11496 0
18193 11331 11475 11494 0
18193 11331 11477 11492 0
18193 11331 11479 11490 0
18193 11331 11481 11488 0
18193 11331 11483 11487 0
18193 11331 11485 0
18193 11332 11534 0
18193 11332 11436 11532 0
18193 11332 11437 11530 0
18193 11332 11439 11528 0
18193 11332 11441 11526 0
18193 11332 11443 11524 0
18193 11332 11445 11522 0
18193 11332 11447 11520 0
18193 11332 11449 11518 0
18193 11332 11451 11516 0
18193 11332 11453 11514 0
18193 11332 11455 11512 0
18193 11332 11457 11510 0
18193 11332 11459 11508 0
18193 11332 11461 11506 0
18193 11332 11463 11504 0
18193 11332 11465 11502 0
18193 11332 11467 11500 0
18193 11332 11469 11498 0
18193 11332 11471 11496 0
18193 11332 11473 11494 0
18193 11332 11475 11492 0
18193 11332 11477 11490 0
18193 11332 11479 11488 0
18193 11332 11481 11487 0
18193 11332 11483 0
18193 11332 11485 0
18193 11334 11532 0
18193 11334 11436 11530 0
18193 11334 11437 11528 0
18193 11334 11439 11526 0
18193 11334 11441 11524 0
18193 11334 11443 11522 0
18193 11334 11445 11520 0
18193 11334 11447 11518 0
18193 11334 11449 11516 0
18193 11334 11451 11514 0
18193 11334 11453 11512 0
18193 11334 11455 11510 0
18193 11334 11457 11508 0
18193 11334 11459 11506 0
18193 11334 11461 11504 0
18193 11334 11463 11502 0
18193 11334 11465 11500 0
18193 11334 11467 11498 0
18193 11334 11469 11496 0
18193 11334 11471 11494 0
18193 11334 11473 11492 0
18193 11334 11475 11490 0
18193 11334 11477 11488 0
18193 11334 11479 11487 0
18193 11334 11481 0
18193 11334 11483 0
18193 11334 11485 0
18193 11336 11530 0
18193 11336 11436 11528 0
18193 11336 11437 11526 0
18193 11336 11439 11524 0
18193 11336 11441 11522 0
18193 11336 11443 11520 0
18193 11336 11445 11518 0
18193 11336 11447 11516 0
18193 11336 11449 11514 0
18193 11336 11451 11512 0
18193 11336 11453 11510 0
18193 11336 11455 11508 0
18193 11336 11457 11506 0
18193 11336 11459 11504 0
18193 11336 11461 11502 0
18193 11336 11463 11500 0
18193 11336 11465 11498 0
18193 11336 11467 11496 0
18193 11336 11469 11494 0
18193 11336 11471 11492 0
18193 11336 11473 11490 0
18193 11336 11475 11488 0
18193 11336 11477 11487 0
18193 11336 11479 0
18193 11336 11481 0
18193 11336 11483 0
18193 11336 11485 0
18193 11338 11528 0
18193 11338 11436 11526 0
18193 11338 11437 11524 0
18193 11338 11439 11522 0
18193 11338 11441 11520 0
18193 11338 11443 11518 0
18193 11338 11445 11516 0
18193 11338 11447 11514 0
18193 11338 11449 11512 0
18193 11338 11451 11510 0
18193 11338 11453 11508 0
18193 11338 11455 11506 0
18193 11338 11457 11504 0
18193 11338 11459 11502 0
18193 11338 11461 11500 0
18193 11338 11463 11498 0
18193 11338 11465 11496 0
18193 11338 11467 11494 0
18193 11338 11469 11492 0
18193 11338 11471 11490 0
18193 11338 11473 11488 0
18193 11338 11475 11487 0
18193 11338 11477 0
18193 11338 11479 0
18193 11338 11481 0
18193 11338 11483 0
18193 11338 11485 0
18193 11340 11526 0
18193 11340 11436 11524 0
18193 11340 11437 11522 0
18193 11340 11439 11520 0
18193 11340 11441 11518 0
18193 11340 11443 11516 0
18193 11340 11445 11514 0
18193 11340 11447 11512 0
18193 11340 11449 11510 0
18193 11340 11451 11508 0
18193 11340 11453 11506 0
18193 11340 11455 11504 0
18193 11340 11457 11502 0
18193 11340 11459 11500 0
18193 11340 11461 11498 0
18193 11340 11463 11496 0
18193 11340 11465 11494 0
18193 11340 11467 11492 0
18193 11340 11469 11490 0
18193 11340 11471 11488 0
18193 11340 11473 11487 0
18193 11340 11475 0
18193 11340 11477 0
18193 11340 11479 0
18193 11340 11481 0
18193 11340 11483 0
18193 11340 11485 0
18193 11342 11524 0
18193 11342 11436 11522 0
18193 11342 11437 11520 0
18193 11342 11439 11518 0
18193 11342 11441 11516 0
18193 11342 11443 11514 0
18193 11342 11445 11512 0
18193 11342 11447 11510 0
18193 11342 11449 11508 0
18193 11342 11451 11506 0
18193 11342 11453 11504 0
18193 11342 11455 11502 0
18193 11342 11457 11500 0
18193 11342 11459 11498 0
18193 11342 11461 11496 0
18193 11342 11463 11494 0
18193 11342 11465 11492 0
18193 11342 11467 11490 0
18193 11342 11469 11488 0
18193 11342 11471 11487 0
18193 11342 11473 0
18193 11342 11475 0
18193 11342 11477 0
18193 11342 11479 0
18193 11342 11481 0
18193 11342 11483 0
18193 11342 11485 0
18193 11344 11522 0
18193 11344 11436 11520 0
18193 11344 11437 11518 0
18193 11344 11439 11516 0
18193 11344 11441 11514 0
18193 11344 11443 11512 0
18193 11344 11445 11510 0
18193 11344 11447 11508 0
18193 11344 11449 11506 0
18193 11344 11451 11504 0
18193 11344 11453 11502 0
18193 11344 11455 11500 0
18193 11344 11457 11498 0
18193 11344 11459 11496 0
18193 11344 11461 11494 0
18193 11344 11463 11492 0
18193 11344 11465 11490 0
18193 11344 11467 11488 0
18193 11344 11469 11487 0
18193 11344 11471 0
18193 11344 11473 0
18193 11344 11475 0
18193 11344 11477 0
18193 11344 11479 0
18193 11344 11481 0
18193 11344 11483 0
18193 11344 11485 0
18193 11346 11520 0
18193 11346 11436 11518 0
18193 11346 11437 11516 0
18193 11346 11439 11514 0
18193 11346 11441 11512 0
18193 11346 11443 11510 0
18193 11346 11445 11508 0
18193 11346 11447 11506 0
18193 11346 11449 11504 0
18193 11346 11451 11502 0
18193 11346 11453 11500 0
18193 11346 11455 11498 0
18193 11346 11457 11496 0
18193 11346 11459 11494 0
18193 11346 11461 11492 0
18193 11346 11463 11490 0
18193 11346 11465 11488 0
18193 11346 11467 11487 0
18193 11346 11469 0
18193 11346 11471 0
18193 11346 11473 0
18193 11346 11475 0
18193 11346 11477 0
18193 11346 11479 0
18193 11346 11481 0
18193 11346 11483 0
18193 11346 11485 0
18193 11348 11518 0
18193 11348 11436 11516 0
18193 11348 11437 11514 0
18193 11348 11439 11512 0
18193 11348 11441 11510 0
18193 11348 11443 11508 0
18193 11348 11445 11506 0
18193 11348 11447 11504 0
18193 11348 11449 11502 0
18193 11348 11451 11500 0
18193 11348 11453 11498 0
18193 11348 11455 11496 0
18193 11348 11457 11494 0
18193 11348 11459 11492 0
18193 11348 11461 11490 0
18193 11348 11463 11488 0
18193 11348 11465 11487 0
18193 11348 11467 0
18193 11348 11469 0
18193 11348 11471 0
18193 11348 11473 0
18193 11348 11475 0
18193 11348 11477 0
18193 11348 11479 0
18193 11348 11481 0
18193 11348 11483 0
18193 11348 11485 0
18193 11350 11516 0
18193 11350 11436 11514 0
18193 11350 11437 11512 0
18193 11350 11439 11510 0
18193 11350 11441 11508 0
18193 11350 11443 11506 0
18193 11350 11445 11504 0
18193 11350 11447 11502 0
18193 11350 11449 11500 0
18193 11350 11451 11498 0
18193 11350 11453 11496 0
18193 11350 11455 11494 0
18193 11350 11457 11492 0
18193 11350 11459 11490 0
18193 11350 11461 11488 0
18193 11350 11463 11487 0
18193 11350 11465 0
18193 11350 11467 0
18193 11350 11469 0
18193 11350 11471 0
18193 11350 11473 0
18193 11350 11475 0
18193 11350 11477 0
18193 11350 11479 0
18193 11350 11481 0
18193 11350 11483 0
18193 11350 11485 0
18193 11352 11514 0
18193 11352 11436 11512 0
18193 11352 11437 11510 0
18193 11352 11439 11508 0
18193 11352 11441 11506 0
18193 11352 11443 11504 0
18193 11352 11445 11502 0
18193 11352 11447 11500 0
18193 11352 11449 11498 0
18193 11352 11451 11496 0
18193 11352 11453 11494 0
18193 11352 11455 11492 0
18193 11352 11457 11490 0
18193 11352 11459 11488 0
18193 11352 11461 11487 0
18193 11352 11463 0
18193 11352 11465 0
18193 11352 11467 0
18193 11352 11469 0
18193 11352 11471 0
18193 11352 11473 0
18193 11352 11475 0
18193 11352 11477 0
18193 11352 11479 0
18193 11352 11481 0
18193 11352 11483 0
18193 11352 11485 0
18193 11354 11512 0
18193 11354 11436 11510 0
18193 11354 11437 11508 0
18193 11354 11439 11506 0
18193 11354 11441 11504 0
18193 11354 11443 11502 0
18193 11354 11445 11500 0
18193 11354 11447 11498 0
18193 11354 11449 11496 0
18193 11354 11451 11494 0
18193 11354 11453 11492 0
18193 11354 11455 11490 0
18193 11354 11457 11488 0
18193 11354 11459 11487 0
18193 11354 11461 0
18193 11354 11463 0
18193 11354 11465 0
18193 11354 11467 0
18193 11354 11469 0
18193 11354 11471 0
18193 11354 11473 0
18193 11354 11475 0
18193 11354 11477 0
18193 11354 11479 0
18193 11354 11481 0
18193 11354 11483 0
18193 11354 11485 0
18193 11356 11510 0
18193 11356 11436 11508 0
18193 11356 11437 11506 0
18193 11356 11439 11504 0
18193 11356 11441 11502 0
18193 11356 11443 11500 0
18193 11356 11445 11498 0
18193 11356 11447 11496 0
18193 11356 11449 11494 0
18193 11356 11451 11492 0
18193 11356 11453 11490 0
18193 11356 11455 11488 0
18193 11356 11457 11487 0
18193 11356 11459 0
18193 11356 11461 0
18193 11356 11463 0
18193 11356 11465 0
18193 11356 11467 0
18193 11356 11469 0
18193 11356 11471 0
18193 11356 11473 0
18193 11356 11475 0
18193 11356 11477 0
18193 11356 11479 0
18193 11356 11481 0
18193 11356 11483 0
18193 11356 11485 0
18193 11358 11508 0
18193 11358 11436 11506 0
18193 11358 11437 11504 0
18193 11358 11439 11502 0
18193 11358 11441 11500 0
18193 11358 11443 11498 0
18193 11358 11445 11496 0
18193 11358 11447 11494 0
18193 11358 11449 11492 0
18193 11358 11451 11490 0
18193 11358 11453 11488 0
18193 11358 11455 11487 0
18193 11358 11457 0
18193 11358 11459 0
18193 11358 11461 0
18193 11358 11463 0
18193 11358 11465 0
18193 11358 11467 0
18193 11358 11469 0
18193 11358 11471 0
18193 11358 11473 0
18193 11358 11475 0
18193 11358 11477 0
18193 11358 11479 0
18193 11358 11481 0
18193 11358 11483 0
18193 11358 11485 0
18193 11360 11506 0
18193 11360 11436 11504 0
18193 11360 11437 11502 0
18193 11360 11439 11500 0
18193 11360 11441 11498 0
18193 11360 11443 11496 0
18193 11360 11445 11494 0
18193 11360 11447 11492 0
18193 11360 11449 11490 0
18193 11360 11451 11488 0
18193 11360 11453 11487 0
18193 11360 11455 0
18193 11360 11457 0
18193 11360 11459 0
18193 11360 11461 0
18193 11360 11463 0
18193 11360 11465 0
18193 11360 11467 0
18193 11360 11469 0
18193 11360 11471 0
18193 11360 11473 0
18193 11360 11475 0
18193 11360 11477 0
18193 11360 11479 0
18193 11360 11481 0
18193 11360 11483 0
18193 11360 11485 0
18193 11362 11504 0
18193 11362 11436 11502 0
18193 11362 11437 11500 0
18193 11362 11439 11498 0
18193 11362 11441 11496 0
18193 11362 11443 11494 0
18193 11362 11445 11492 0
18193 11362 11447 11490 0
18193 11362 11449 11488 0
18193 11362 11451 11487 0
18193 11362 11453 0
18193 11362 11455 0
18193 11362 11457 0
18193 11362 11459 0
18193 11362 11461 0
18193 11362 11463 0
18193 11362 11465 0
18193 11362 11467 0
18193 11362 11469 0
18193 11362 11471 0
18193 11362 11473 0
18193 11362 11475 0
18193 11362 11477 0
18193 11362 11479 0
18193 11362 11481 0
18193 11362 11483 0
18193 11362 11485 0
18193 11364 11502 0
18193 11364 11436 11500 0
18193 11364 11437 11498 0
18193 11364 11439 11496 0
18193 11364 11441 11494 0
18193 11364 11443 11492 0
18193 11364 11445 11490 0
18193 11364 11447 11488 0
18193 11364 11449 11487 0
18193 11364 11451 0
18193 11364 11453 0
18193 11364 11455 0
18193 11364 11457 0
18193 11364 11459 0
18193 11364 11461 0
18193 11364 11463 0
18193 11364 11465 0
18193 11364 11467 0
18193 11364 11469 0
18193 11364 11471 0
18193 11364 11473 0
18193 11364 11475 0
18193 11364 11477 0
18193 11364 11479 0
18193 11364 11481 0
18193 11364 11483 0
18193 11364 11485 0
c (((aux451 + aux454 + aux455)<=26)=tv=SATLiteral(18194))
-18194 11798 0
-18194 11696 11796 0
-18194 11697 11794 0
-18194 11699 11792 0
-18194 11701 11790 0
-18194 11703 11788 0
-18194 11705 11786 0
-18194 11707 11784 0
-18194 11709 11782 0
-18194 11711 11780 0
-18194 11713 11778 0
-18194 11715 11776 0
-18194 11717 11774 0
-18194 11719 11772 0
-18194 11721 11770 0
-18194 11723 11768 0
-18194 11725 11766 0
-18194 11727 11764 0
-18194 11729 11762 0
-18194 11731 11760 0
-18194 11733 11758 0
-18194 11735 11756 0
-18194 11737 11754 0
-18194 11739 11752 0
-18194 11741 11750 0
-18194 11743 11748 0
-18194 11745 11747 0
-18194 11591 11796 0
-18194 11591 11696 11794 0
-18194 11591 11697 11792 0
-18194 11591 11699 11790 0
-18194 11591 11701 11788 0
-18194 11591 11703 11786 0
-18194 11591 11705 11784 0
-18194 11591 11707 11782 0
-18194 11591 11709 11780 0
-18194 11591 11711 11778 0
-18194 11591 11713 11776 0
-18194 11591 11715 11774 0
-18194 11591 11717 11772 0
-18194 11591 11719 11770 0
-18194 11591 11721 11768 0
-18194 11591 11723 11766 0
-18194 11591 11725 11764 0
-18194 11591 11727 11762 0
-18194 11591 11729 11760 0
-18194 11591 11731 11758 0
-18194 11591 11733 11756 0
-18194 11591 11735 11754 0
-18194 11591 11737 11752 0
-18194 11591 11739 11750 0
-18194 11591 11741 11748 0
-18194 11591 11743 11747 0
-18194 11591 11745 0
-18194 11592 11794 0
-18194 11592 11696 11792 0
-18194 11592 11697 11790 0
-18194 11592 11699 11788 0
-18194 11592 11701 11786 0
-18194 11592 11703 11784 0
-18194 11592 11705 11782 0
-18194 11592 11707 11780 0
-18194 11592 11709 11778 0
-18194 11592 11711 11776 0
-18194 11592 11713 11774 0
-18194 11592 11715 11772 0
-18194 11592 11717 11770 0
-18194 11592 11719 11768 0
-18194 11592 11721 11766 0
-18194 11592 11723 11764 0
-18194 11592 11725 11762 0
-18194 11592 11727 11760 0
-18194 11592 11729 11758 0
-18194 11592 11731 11756 0
-18194 11592 11733 11754 0
-18194 11592 11735 11752 0
-18194 11592 11737 11750 0
-18194 11592 11739 11748 0
-18194 11592 11741 11747 0
-18194 11592 11743 0
-18194 11592 11745 0
-18194 11594 11792 0
-18194 11594 11696 11790 0
-18194 11594 11697 11788 0
-18194 11594 11699 11786 0
-18194 11594 11701 11784 0
-18194 11594 11703 11782 0
-18194 11594 11705 11780 0
-18194 11594 11707 11778 0
-18194 11594 11709 11776 0
-18194 11594 11711 11774 0
-18194 11594 11713 11772 0
-18194 11594 11715 11770 0
-18194 11594 11717 11768 0
-18194 11594 11719 11766 0
-18194 11594 11721 11764 0
-18194 11594 11723 11762 0
-18194 11594 11725 11760 0
-18194 11594 11727 11758 0
-18194 11594 11729 11756 0
-18194 11594 11731 11754 0
-18194 11594 11733 11752 0
-18194 11594 11735 11750 0
-18194 11594 11737 11748 0
-18194 11594 11739 11747 0
-18194 11594 11741 0
-18194 11594 11743 0
-18194 11594 11745 0
-18194 11596 11790 0
-18194 11596 11696 11788 0
-18194 11596 11697 11786 0
-18194 11596 11699 11784 0
-18194 11596 11701 11782 0
-18194 11596 11703 11780 0
-18194 11596 11705 11778 0
-18194 11596 11707 11776 0
-18194 11596 11709 11774 0
-18194 11596 11711 11772 0
-18194 11596 11713 11770 0
-18194 11596 11715 11768 0
-18194 11596 11717 11766 0
-18194 11596 11719 11764 0
-18194 11596 11721 11762 0
-18194 11596 11723 11760 0
-18194 11596 11725 11758 0
-18194 11596 11727 11756 0
-18194 11596 11729 11754 0
-18194 11596 11731 11752 0
-18194 11596 11733 11750 0
-18194 11596 11735 11748 0
-18194 11596 11737 11747 0
-18194 11596 11739 0
-18194 11596 11741 0
-18194 11596 11743 0
-18194 11596 11745 0
-18194 11598 11788 0
-18194 11598 11696 11786 0
-18194 11598 11697 11784 0
-18194 11598 11699 11782 0
-18194 11598 11701 11780 0
-18194 11598 11703 11778 0
-18194 11598 11705 11776 0
-18194 11598 11707 11774 0
-18194 11598 11709 11772 0
-18194 11598 11711 11770 0
-18194 11598 11713 11768 0
-18194 11598 11715 11766 0
-18194 11598 11717 11764 0
-18194 11598 11719 11762 0
-18194 11598 11721 11760 0
-18194 11598 11723 11758 0
-18194 11598 11725 11756 0
-18194 11598 11727 11754 0
-18194 11598 11729 11752 0
-18194 11598 11731 11750 0
-18194 11598 11733 11748 0
-18194 11598 11735 11747 0
-18194 11598 11737 0
-18194 11598 11739 0
-18194 11598 11741 0
-18194 11598 11743 0
-18194 11598 11745 0
-18194 11600 11786 0
-18194 11600 11696 11784 0
-18194 11600 11697 11782 0
-18194 11600 11699 11780 0
-18194 11600 11701 11778 0
-18194 11600 11703 11776 0
-18194 11600 11705 11774 0
-18194 11600 11707 11772 0
-18194 11600 11709 11770 0
-18194 11600 11711 11768 0
-18194 11600 11713 11766 0
-18194 11600 11715 11764 0
-18194 11600 11717 11762 0
-18194 11600 11719 11760 0
-18194 11600 11721 11758 0
-18194 11600 11723 11756 0
-18194 11600 11725 11754 0
-18194 11600 11727 11752 0
-18194 11600 11729 11750 0
-18194 11600 11731 11748 0
-18194 11600 11733 11747 0
-18194 11600 11735 0
-18194 11600 11737 0
-18194 11600 11739 0
-18194 11600 11741 0
-18194 11600 11743 0
-18194 11600 11745 0
-18194 11602 11784 0
-18194 11602 11696 11782 0
-18194 11602 11697 11780 0
-18194 11602 11699 11778 0
-18194 11602 11701 11776 0
-18194 11602 11703 11774 0
-18194 11602 11705 11772 0
-18194 11602 11707 11770 0
-18194 11602 11709 11768 0
-18194 11602 11711 11766 0
-18194 11602 11713 11764 0
-18194 11602 11715 11762 0
-18194 11602 11717 11760 0
-18194 11602 11719 11758 0
-18194 11602 11721 11756 0
-18194 11602 11723 11754 0
-18194 11602 11725 11752 0
-18194 11602 11727 11750 0
-18194 11602 11729 11748 0
-18194 11602 11731 11747 0
-18194 11602 11733 0
-18194 11602 11735 0
-18194 11602 11737 0
-18194 11602 11739 0
-18194 11602 11741 0
-18194 11602 11743 0
-18194 11602 11745 0
-18194 11604 11782 0
-18194 11604 11696 11780 0
-18194 11604 11697 11778 0
-18194 11604 11699 11776 0
-18194 11604 11701 11774 0
-18194 11604 11703 11772 0
-18194 11604 11705 11770 0
-18194 11604 11707 11768 0
-18194 11604 11709 11766 0
-18194 11604 11711 11764 0
-18194 11604 11713 11762 0
-18194 11604 11715 11760 0
-18194 11604 11717 11758 0
-18194 11604 11719 11756 0
-18194 11604 11721 11754 0
-18194 11604 11723 11752 0
-18194 11604 11725 11750 0
-18194 11604 11727 11748 0
-18194 11604 11729 11747 0
-18194 11604 11731 0
-18194 11604 11733 0
-18194 11604 11735 0
-18194 11604 11737 0
-18194 11604 11739 0
-18194 11604 11741 0
-18194 11604 11743 0
-18194 11604 11745 0
-18194 11606 11780 0
-18194 11606 11696 11778 0
-18194 11606 11697 11776 0
-18194 11606 11699 11774 0
-18194 11606 11701 11772 0
-18194 11606 11703 11770 0
-18194 11606 11705 11768 0
-18194 11606 11707 11766 0
-18194 11606 11709 11764 0
-18194 11606 11711 11762 0
-18194 11606 11713 11760 0
-18194 11606 11715 11758 0
-18194 11606 11717 11756 0
-18194 11606 11719 11754 0
-18194 11606 11721 11752 0
-18194 11606 11723 11750 0
-18194 11606 11725 11748 0
-18194 11606 11727 11747 0
-18194 11606 11729 0
-18194 11606 11731 0
-18194 11606 11733 0
-18194 11606 11735 0
-18194 11606 11737 0
-18194 11606 11739 0
-18194 11606 11741 0
-18194 11606 11743 0
-18194 11606 11745 0
-18194 11608 11778 0
-18194 11608 11696 11776 0
-18194 11608 11697 11774 0
-18194 11608 11699 11772 0
-18194 11608 11701 11770 0
-18194 11608 11703 11768 0
-18194 11608 11705 11766 0
-18194 11608 11707 11764 0
-18194 11608 11709 11762 0
-18194 11608 11711 11760 0
-18194 11608 11713 11758 0
-18194 11608 11715 11756 0
-18194 11608 11717 11754 0
-18194 11608 11719 11752 0
-18194 11608 11721 11750 0
-18194 11608 11723 11748 0
-18194 11608 11725 11747 0
-18194 11608 11727 0
-18194 11608 11729 0
-18194 11608 11731 0
-18194 11608 11733 0
-18194 11608 11735 0
-18194 11608 11737 0
-18194 11608 11739 0
-18194 11608 11741 0
-18194 11608 11743 0
-18194 11608 11745 0
-18194 11610 11776 0
-18194 11610 11696 11774 0
-18194 11610 11697 11772 0
-18194 11610 11699 11770 0
-18194 11610 11701 11768 0
-18194 11610 11703 11766 0
-18194 11610 11705 11764 0
-18194 11610 11707 11762 0
-18194 11610 11709 11760 0
-18194 11610 11711 11758 0
-18194 11610 11713 11756 0
-18194 11610 11715 11754 0
-18194 11610 11717 11752 0
-18194 11610 11719 11750 0
-18194 11610 11721 11748 0
-18194 11610 11723 11747 0
-18194 11610 11725 0
-18194 11610 11727 0
-18194 11610 11729 0
-18194 11610 11731 0
-18194 11610 11733 0
-18194 11610 11735 0
-18194 11610 11737 0
-18194 11610 11739 0
-18194 11610 11741 0
-18194 11610 11743 0
-18194 11610 11745 0
-18194 11612 11774 0
-18194 11612 11696 11772 0
-18194 11612 11697 11770 0
-18194 11612 11699 11768 0
-18194 11612 11701 11766 0
-18194 11612 11703 11764 0
-18194 11612 11705 11762 0
-18194 11612 11707 11760 0
-18194 11612 11709 11758 0
-18194 11612 11711 11756 0
-18194 11612 11713 11754 0
-18194 11612 11715 11752 0
-18194 11612 11717 11750 0
-18194 11612 11719 11748 0
-18194 11612 11721 11747 0
-18194 11612 11723 0
-18194 11612 11725 0
-18194 11612 11727 0
-18194 11612 11729 0
-18194 11612 11731 0
-18194 11612 11733 0
-18194 11612 11735 0
-18194 11612 11737 0
-18194 11612 11739 0
-18194 11612 11741 0
-18194 11612 11743 0
-18194 11612 11745 0
-18194 11614 11772 0
-18194 11614 11696 11770 0
-18194 11614 11697 11768 0
-18194 11614 11699 11766 0
-18194 11614 11701 11764 0
-18194 11614 11703 11762 0
-18194 11614 11705 11760 0
-18194 11614 11707 11758 0
-18194 11614 11709 11756 0
-18194 11614 11711 11754 0
-18194 11614 11713 11752 0
-18194 11614 11715 11750 0
-18194 11614 11717 11748 0
-18194 11614 11719 11747 0
-18194 11614 11721 0
-18194 11614 11723 0
-18194 11614 11725 0
-18194 11614 11727 0
-18194 11614 11729 0
-18194 11614 11731 0
-18194 11614 11733 0
-18194 11614 11735 0
-18194 11614 11737 0
-18194 11614 11739 0
-18194 11614 11741 0
-18194 11614 11743 0
-18194 11614 11745 0
-18194 11616 11770 0
-18194 11616 11696 11768 0
-18194 11616 11697 11766 0
-18194 11616 11699 11764 0
-18194 11616 11701 11762 0
-18194 11616 11703 11760 0
-18194 11616 11705 11758 0
-18194 11616 11707 11756 0
-18194 11616 11709 11754 0
-18194 11616 11711 11752 0
-18194 11616 11713 11750 0
-18194 11616 11715 11748 0
-18194 11616 11717 11747 0
-18194 11616 11719 0
-18194 11616 11721 0
-18194 11616 11723 0
-18194 11616 11725 0
-18194 11616 11727 0
-18194 11616 11729 0
-18194 11616 11731 0
-18194 11616 11733 0
-18194 11616 11735 0
-18194 11616 11737 0
-18194 11616 11739 0
-18194 11616 11741 0
-18194 11616 11743 0
-18194 11616 11745 0
-18194 11618 11768 0
-18194 11618 11696 11766 0
-18194 11618 11697 11764 0
-18194 11618 11699 11762 0
-18194 11618 11701 11760 0
-18194 11618 11703 11758 0
-18194 11618 11705 11756 0
-18194 11618 11707 11754 0
-18194 11618 11709 11752 0
-18194 11618 11711 11750 0
-18194 11618 11713 11748 0
-18194 11618 11715 11747 0
-18194 11618 11717 0
-18194 11618 11719 0
-18194 11618 11721 0
-18194 11618 11723 0
-18194 11618 11725 0
-18194 11618 11727 0
-18194 11618 11729 0
-18194 11618 11731 0
-18194 11618 11733 0
-18194 11618 11735 0
-18194 11618 11737 0
-18194 11618 11739 0
-18194 11618 11741 0
-18194 11618 11743 0
-18194 11618 11745 0
-18194 11620 11766 0
-18194 11620 11696 11764 0
-18194 11620 11697 11762 0
-18194 11620 11699 11760 0
-18194 11620 11701 11758 0
-18194 11620 11703 11756 0
-18194 11620 11705 11754 0
-18194 11620 11707 11752 0
-18194 11620 11709 11750 0
-18194 11620 11711 11748 0
-18194 11620 11713 11747 0
-18194 11620 11715 0
-18194 11620 11717 0
-18194 11620 11719 0
-18194 11620 11721 0
-18194 11620 11723 0
-18194 11620 11725 0
-18194 11620 11727 0
-18194 11620 11729 0
-18194 11620 11731 0
-18194 11620 11733 0
-18194 11620 11735 0
-18194 11620 11737 0
-18194 11620 11739 0
-18194 11620 11741 0
-18194 11620 11743 0
-18194 11620 11745 0
-18194 11622 11764 0
-18194 11622 11696 11762 0
-18194 11622 11697 11760 0
-18194 11622 11699 11758 0
-18194 11622 11701 11756 0
-18194 11622 11703 11754 0
-18194 11622 11705 11752 0
-18194 11622 11707 11750 0
-18194 11622 11709 11748 0
-18194 11622 11711 11747 0
-18194 11622 11713 0
-18194 11622 11715 0
-18194 11622 11717 0
-18194 11622 11719 0
-18194 11622 11721 0
-18194 11622 11723 0
-18194 11622 11725 0
-18194 11622 11727 0
-18194 11622 11729 0
-18194 11622 11731 0
-18194 11622 11733 0
-18194 11622 11735 0
-18194 11622 11737 0
-18194 11622 11739 0
-18194 11622 11741 0
-18194 11622 11743 0
-18194 11622 11745 0
-18194 11624 11762 0
-18194 11624 11696 11760 0
-18194 11624 11697 11758 0
-18194 11624 11699 11756 0
-18194 11624 11701 11754 0
-18194 11624 11703 11752 0
-18194 11624 11705 11750 0
-18194 11624 11707 11748 0
-18194 11624 11709 11747 0
-18194 11624 11711 0
-18194 11624 11713 0
-18194 11624 11715 0
-18194 11624 11717 0
-18194 11624 11719 0
-18194 11624 11721 0
-18194 11624 11723 0
-18194 11624 11725 0
-18194 11624 11727 0
-18194 11624 11729 0
-18194 11624 11731 0
-18194 11624 11733 0
-18194 11624 11735 0
-18194 11624 11737 0
-18194 11624 11739 0
-18194 11624 11741 0
-18194 11624 11743 0
-18194 11624 11745 0
18194 -11711 -11747 0
18194 -11709 -11748 0
18194 -11707 -11750 0
18194 -11705 -11752 0
18194 -11703 -11754 0
18194 -11701 -11756 0
18194 -11699 -11758 0
18194 -11697 -11760 0
18194 -11696 -11762 0
18194 -11624 -11713 -11747 0
18194 -11624 -11711 -11748 0
18194 -11624 -11709 -11750 0
18194 -11624 -11707 -11752 0
18194 -11624 -11705 -11754 0
18194 -11624 -11703 -11756 0
18194 -11624 -11701 -11758 0
18194 -11624 -11699 -11760 0
18194 -11624 -11697 -11762 0
18194 -11624 -11696 -11764 0
18194 -11622 -11715 -11747 0
18194 -11622 -11713 -11748 0
18194 -11622 -11711 -11750 0
18194 -11622 -11709 -11752 0
18194 -11622 -11707 -11754 0
18194 -11622 -11705 -11756 0
18194 -11622 -11703 -11758 0
18194 -11622 -11701 -11760 0
18194 -11622 -11699 -11762 0
18194 -11622 -11697 -11764 0
18194 -11622 -11696 -11766 0
18194 -11620 -11717 -11747 0
18194 -11620 -11715 -11748 0
18194 -11620 -11713 -11750 0
18194 -11620 -11711 -11752 0
18194 -11620 -11709 -11754 0
18194 -11620 -11707 -11756 0
18194 -11620 -11705 -11758 0
18194 -11620 -11703 -11760 0
18194 -11620 -11701 -11762 0
18194 -11620 -11699 -11764 0
18194 -11620 -11697 -11766 0
18194 -11620 -11696 -11768 0
18194 -11618 -11719 -11747 0
18194 -11618 -11717 -11748 0
18194 -11618 -11715 -11750 0
18194 -11618 -11713 -11752 0
18194 -11618 -11711 -11754 0
18194 -11618 -11709 -11756 0
18194 -11618 -11707 -11758 0
18194 -11618 -11705 -11760 0
18194 -11618 -11703 -11762 0
18194 -11618 -11701 -11764 0
18194 -11618 -11699 -11766 0
18194 -11618 -11697 -11768 0
18194 -11618 -11696 -11770 0
18194 -11616 -11721 -11747 0
18194 -11616 -11719 -11748 0
18194 -11616 -11717 -11750 0
18194 -11616 -11715 -11752 0
18194 -11616 -11713 -11754 0
18194 -11616 -11711 -11756 0
18194 -11616 -11709 -11758 0
18194 -11616 -11707 -11760 0
18194 -11616 -11705 -11762 0
18194 -11616 -11703 -11764 0
18194 -11616 -11701 -11766 0
18194 -11616 -11699 -11768 0
18194 -11616 -11697 -11770 0
18194 -11616 -11696 -11772 0
18194 -11614 -11723 -11747 0
18194 -11614 -11721 -11748 0
18194 -11614 -11719 -11750 0
18194 -11614 -11717 -11752 0
18194 -11614 -11715 -11754 0
18194 -11614 -11713 -11756 0
18194 -11614 -11711 -11758 0
18194 -11614 -11709 -11760 0
18194 -11614 -11707 -11762 0
18194 -11614 -11705 -11764 0
18194 -11614 -11703 -11766 0
18194 -11614 -11701 -11768 0
18194 -11614 -11699 -11770 0
18194 -11614 -11697 -11772 0
18194 -11614 -11696 -11774 0
18194 -11612 -11725 -11747 0
18194 -11612 -11723 -11748 0
18194 -11612 -11721 -11750 0
18194 -11612 -11719 -11752 0
18194 -11612 -11717 -11754 0
18194 -11612 -11715 -11756 0
18194 -11612 -11713 -11758 0
18194 -11612 -11711 -11760 0
18194 -11612 -11709 -11762 0
18194 -11612 -11707 -11764 0
18194 -11612 -11705 -11766 0
18194 -11612 -11703 -11768 0
18194 -11612 -11701 -11770 0
18194 -11612 -11699 -11772 0
18194 -11612 -11697 -11774 0
18194 -11612 -11696 -11776 0
18194 -11610 -11727 -11747 0
18194 -11610 -11725 -11748 0
18194 -11610 -11723 -11750 0
18194 -11610 -11721 -11752 0
18194 -11610 -11719 -11754 0
18194 -11610 -11717 -11756 0
18194 -11610 -11715 -11758 0
18194 -11610 -11713 -11760 0
18194 -11610 -11711 -11762 0
18194 -11610 -11709 -11764 0
18194 -11610 -11707 -11766 0
18194 -11610 -11705 -11768 0
18194 -11610 -11703 -11770 0
18194 -11610 -11701 -11772 0
18194 -11610 -11699 -11774 0
18194 -11610 -11697 -11776 0
18194 -11610 -11696 -11778 0
18194 -11608 -11729 -11747 0
18194 -11608 -11727 -11748 0
18194 -11608 -11725 -11750 0
18194 -11608 -11723 -11752 0
18194 -11608 -11721 -11754 0
18194 -11608 -11719 -11756 0
18194 -11608 -11717 -11758 0
18194 -11608 -11715 -11760 0
18194 -11608 -11713 -11762 0
18194 -11608 -11711 -11764 0
18194 -11608 -11709 -11766 0
18194 -11608 -11707 -11768 0
18194 -11608 -11705 -11770 0
18194 -11608 -11703 -11772 0
18194 -11608 -11701 -11774 0
18194 -11608 -11699 -11776 0
18194 -11608 -11697 -11778 0
18194 -11608 -11696 -11780 0
18194 -11606 -11731 -11747 0
18194 -11606 -11729 -11748 0
18194 -11606 -11727 -11750 0
18194 -11606 -11725 -11752 0
18194 -11606 -11723 -11754 0
18194 -11606 -11721 -11756 0
18194 -11606 -11719 -11758 0
18194 -11606 -11717 -11760 0
18194 -11606 -11715 -11762 0
18194 -11606 -11713 -11764 0
18194 -11606 -11711 -11766 0
18194 -11606 -11709 -11768 0
18194 -11606 -11707 -11770 0
18194 -11606 -11705 -11772 0
18194 -11606 -11703 -11774 0
18194 -11606 -11701 -11776 0
18194 -11606 -11699 -11778 0
18194 -11606 -11697 -11780 0
18194 -11606 -11696 -11782 0
18194 -11604 -11733 -11747 0
18194 -11604 -11731 -11748 0
18194 -11604 -11729 -11750 0
18194 -11604 -11727 -11752 0
18194 -11604 -11725 -11754 0
18194 -11604 -11723 -11756 0
18194 -11604 -11721 -11758 0
18194 -11604 -11719 -11760 0
18194 -11604 -11717 -11762 0
18194 -11604 -11715 -11764 0
18194 -11604 -11713 -11766 0
18194 -11604 -11711 -11768 0
18194 -11604 -11709 -11770 0
18194 -11604 -11707 -11772 0
18194 -11604 -11705 -11774 0
18194 -11604 -11703 -11776 0
18194 -11604 -11701 -11778 0
18194 -11604 -11699 -11780 0
18194 -11604 -11697 -11782 0
18194 -11604 -11696 -11784 0
18194 -11602 -11735 -11747 0
18194 -11602 -11733 -11748 0
18194 -11602 -11731 -11750 0
18194 -11602 -11729 -11752 0
18194 -11602 -11727 -11754 0
18194 -11602 -11725 -11756 0
18194 -11602 -11723 -11758 0
18194 -11602 -11721 -11760 0
18194 -11602 -11719 -11762 0
18194 -11602 -11717 -11764 0
18194 -11602 -11715 -11766 0
18194 -11602 -11713 -11768 0
18194 -11602 -11711 -11770 0
18194 -11602 -11709 -11772 0
18194 -11602 -11707 -11774 0
18194 -11602 -11705 -11776 0
18194 -11602 -11703 -11778 0
18194 -11602 -11701 -11780 0
18194 -11602 -11699 -11782 0
18194 -11602 -11697 -11784 0
18194 -11602 -11696 -11786 0
18194 -11600 -11737 -11747 0
18194 -11600 -11735 -11748 0
18194 -11600 -11733 -11750 0
18194 -11600 -11731 -11752 0
18194 -11600 -11729 -11754 0
18194 -11600 -11727 -11756 0
18194 -11600 -11725 -11758 0
18194 -11600 -11723 -11760 0
18194 -11600 -11721 -11762 0
18194 -11600 -11719 -11764 0
18194 -11600 -11717 -11766 0
18194 -11600 -11715 -11768 0
18194 -11600 -11713 -11770 0
18194 -11600 -11711 -11772 0
18194 -11600 -11709 -11774 0
18194 -11600 -11707 -11776 0
18194 -11600 -11705 -11778 0
18194 -11600 -11703 -11780 0
18194 -11600 -11701 -11782 0
18194 -11600 -11699 -11784 0
18194 -11600 -11697 -11786 0
18194 -11600 -11696 -11788 0
18194 -11598 -11739 -11747 0
18194 -11598 -11737 -11748 0
18194 -11598 -11735 -11750 0
18194 -11598 -11733 -11752 0
18194 -11598 -11731 -11754 0
18194 -11598 -11729 -11756 0
18194 -11598 -11727 -11758 0
18194 -11598 -11725 -11760 0
18194 -11598 -11723 -11762 0
18194 -11598 -11721 -11764 0
18194 -11598 -11719 -11766 0
18194 -11598 -11717 -11768 0
18194 -11598 -11715 -11770 0
18194 -11598 -11713 -11772 0
18194 -11598 -11711 -11774 0
18194 -11598 -11709 -11776 0
18194 -11598 -11707 -11778 0
18194 -11598 -11705 -11780 0
18194 -11598 -11703 -11782 0
18194 -11598 -11701 -11784 0
18194 -11598 -11699 -11786 0
18194 -11598 -11697 -11788 0
18194 -11598 -11696 -11790 0
18194 -11596 -11741 -11747 0
18194 -11596 -11739 -11748 0
18194 -11596 -11737 -11750 0
18194 -11596 -11735 -11752 0
18194 -11596 -11733 -11754 0
18194 -11596 -11731 -11756 0
18194 -11596 -11729 -11758 0
18194 -11596 -11727 -11760 0
18194 -11596 -11725 -11762 0
18194 -11596 -11723 -11764 0
18194 -11596 -11721 -11766 0
18194 -11596 -11719 -11768 0
18194 -11596 -11717 -11770 0
18194 -11596 -11715 -11772 0
18194 -11596 -11713 -11774 0
18194 -11596 -11711 -11776 0
18194 -11596 -11709 -11778 0
18194 -11596 -11707 -11780 0
18194 -11596 -11705 -11782 0
18194 -11596 -11703 -11784 0
18194 -11596 -11701 -11786 0
18194 -11596 -11699 -11788 0
18194 -11596 -11697 -11790 0
18194 -11596 -11696 -11792 0
18194 -11594 -11743 -11747 0
18194 -11594 -11741 -11748 0
18194 -11594 -11739 -11750 0
18194 -11594 -11737 -11752 0
18194 -11594 -11735 -11754 0
18194 -11594 -11733 -11756 0
18194 -11594 -11731 -11758 0
18194 -11594 -11729 -11760 0
18194 -11594 -11727 -11762 0
18194 -11594 -11725 -11764 0
18194 -11594 -11723 -11766 0
18194 -11594 -11721 -11768 0
18194 -11594 -11719 -11770 0
18194 -11594 -11717 -11772 0
18194 -11594 -11715 -11774 0
18194 -11594 -11713 -11776 0
18194 -11594 -11711 -11778 0
18194 -11594 -11709 -11780 0
18194 -11594 -11707 -11782 0
18194 -11594 -11705 -11784 0
18194 -11594 -11703 -11786 0
18194 -11594 -11701 -11788 0
18194 -11594 -11699 -11790 0
18194 -11594 -11697 -11792 0
18194 -11594 -11696 -11794 0
18194 -11592 -11745 -11747 0
18194 -11592 -11743 -11748 0
18194 -11592 -11741 -11750 0
18194 -11592 -11739 -11752 0
18194 -11592 -11737 -11754 0
18194 -11592 -11735 -11756 0
18194 -11592 -11733 -11758 0
18194 -11592 -11731 -11760 0
18194 -11592 -11729 -11762 0
18194 -11592 -11727 -11764 0
18194 -11592 -11725 -11766 0
18194 -11592 -11723 -11768 0
18194 -11592 -11721 -11770 0
18194 -11592 -11719 -11772 0
18194 -11592 -11717 -11774 0
18194 -11592 -11715 -11776 0
18194 -11592 -11713 -11778 0
18194 -11592 -11711 -11780 0
18194 -11592 -11709 -11782 0
18194 -11592 -11707 -11784 0
18194 -11592 -11705 -11786 0
18194 -11592 -11703 -11788 0
18194 -11592 -11701 -11790 0
18194 -11592 -11699 -11792 0
18194 -11592 -11697 -11794 0
18194 -11592 -11696 -11796 0
18194 -11591 -11747 0
18194 -11591 -11745 -11748 0
18194 -11591 -11743 -11750 0
18194 -11591 -11741 -11752 0
18194 -11591 -11739 -11754 0
18194 -11591 -11737 -11756 0
18194 -11591 -11735 -11758 0
18194 -11591 -11733 -11760 0
18194 -11591 -11731 -11762 0
18194 -11591 -11729 -11764 0
18194 -11591 -11727 -11766 0
18194 -11591 -11725 -11768 0
18194 -11591 -11723 -11770 0
18194 -11591 -11721 -11772 0
18194 -11591 -11719 -11774 0
18194 -11591 -11717 -11776 0
18194 -11591 -11715 -11778 0
18194 -11591 -11713 -11780 0
18194 -11591 -11711 -11782 0
18194 -11591 -11709 -11784 0
18194 -11591 -11707 -11786 0
18194 -11591 -11705 -11788 0
18194 -11591 -11703 -11790 0
18194 -11591 -11701 -11792 0
18194 -11591 -11699 -11794 0
18194 -11591 -11697 -11796 0
18194 -11591 -11696 -11798 0
c ((26<=(aux451 + aux454 + aux455))=tv=SATLiteral(18195))
-18195 -11709 -11747 0
-18195 -11707 -11748 0
-18195 -11705 -11750 0
-18195 -11703 -11752 0
-18195 -11701 -11754 0
-18195 -11699 -11756 0
-18195 -11697 -11758 0
-18195 -11696 -11760 0
-18195 -11624 -11711 -11747 0
-18195 -11624 -11709 -11748 0
-18195 -11624 -11707 -11750 0
-18195 -11624 -11705 -11752 0
-18195 -11624 -11703 -11754 0
-18195 -11624 -11701 -11756 0
-18195 -11624 -11699 -11758 0
-18195 -11624 -11697 -11760 0
-18195 -11624 -11696 -11762 0
-18195 -11622 -11713 -11747 0
-18195 -11622 -11711 -11748 0
-18195 -11622 -11709 -11750 0
-18195 -11622 -11707 -11752 0
-18195 -11622 -11705 -11754 0
-18195 -11622 -11703 -11756 0
-18195 -11622 -11701 -11758 0
-18195 -11622 -11699 -11760 0
-18195 -11622 -11697 -11762 0
-18195 -11622 -11696 -11764 0
-18195 -11620 -11715 -11747 0
-18195 -11620 -11713 -11748 0
-18195 -11620 -11711 -11750 0
-18195 -11620 -11709 -11752 0
-18195 -11620 -11707 -11754 0
-18195 -11620 -11705 -11756 0
-18195 -11620 -11703 -11758 0
-18195 -11620 -11701 -11760 0
-18195 -11620 -11699 -11762 0
-18195 -11620 -11697 -11764 0
-18195 -11620 -11696 -11766 0
-18195 -11618 -11717 -11747 0
-18195 -11618 -11715 -11748 0
-18195 -11618 -11713 -11750 0
-18195 -11618 -11711 -11752 0
-18195 -11618 -11709 -11754 0
-18195 -11618 -11707 -11756 0
-18195 -11618 -11705 -11758 0
-18195 -11618 -11703 -11760 0
-18195 -11618 -11701 -11762 0
-18195 -11618 -11699 -11764 0
-18195 -11618 -11697 -11766 0
-18195 -11618 -11696 -11768 0
-18195 -11616 -11719 -11747 0
-18195 -11616 -11717 -11748 0
-18195 -11616 -11715 -11750 0
-18195 -11616 -11713 -11752 0
-18195 -11616 -11711 -11754 0
-18195 -11616 -11709 -11756 0
-18195 -11616 -11707 -11758 0
-18195 -11616 -11705 -11760 0
-18195 -11616 -11703 -11762 0
-18195 -11616 -11701 -11764 0
-18195 -11616 -11699 -11766 0
-18195 -11616 -11697 -11768 0
-18195 -11616 -11696 -11770 0
-18195 -11614 -11721 -11747 0
-18195 -11614 -11719 -11748 0
-18195 -11614 -11717 -11750 0
-18195 -11614 -11715 -11752 0
-18195 -11614 -11713 -11754 0
-18195 -11614 -11711 -11756 0
-18195 -11614 -11709 -11758 0
-18195 -11614 -11707 -11760 0
-18195 -11614 -11705 -11762 0
-18195 -11614 -11703 -11764 0
-18195 -11614 -11701 -11766 0
-18195 -11614 -11699 -11768 0
-18195 -11614 -11697 -11770 0
-18195 -11614 -11696 -11772 0
-18195 -11612 -11723 -11747 0
-18195 -11612 -11721 -11748 0
-18195 -11612 -11719 -11750 0
-18195 -11612 -11717 -11752 0
-18195 -11612 -11715 -11754 0
-18195 -11612 -11713 -11756 0
-18195 -11612 -11711 -11758 0
-18195 -11612 -11709 -11760 0
-18195 -11612 -11707 -11762 0
-18195 -11612 -11705 -11764 0
-18195 -11612 -11703 -11766 0
-18195 -11612 -11701 -11768 0
-18195 -11612 -11699 -11770 0
-18195 -11612 -11697 -11772 0
-18195 -11612 -11696 -11774 0
-18195 -11610 -11725 -11747 0
-18195 -11610 -11723 -11748 0
-18195 -11610 -11721 -11750 0
-18195 -11610 -11719 -11752 0
-18195 -11610 -11717 -11754 0
-18195 -11610 -11715 -11756 0
-18195 -11610 -11713 -11758 0
-18195 -11610 -11711 -11760 0
-18195 -11610 -11709 -11762 0
-18195 -11610 -11707 -11764 0
-18195 -11610 -11705 -11766 0
-18195 -11610 -11703 -11768 0
-18195 -11610 -11701 -11770 0
-18195 -11610 -11699 -11772 0
-18195 -11610 -11697 -11774 0
-18195 -11610 -11696 -11776 0
-18195 -11608 -11727 -11747 0
-18195 -11608 -11725 -11748 0
-18195 -11608 -11723 -11750 0
-18195 -11608 -11721 -11752 0
-18195 -11608 -11719 -11754 0
-18195 -11608 -11717 -11756 0
-18195 -11608 -11715 -11758 0
-18195 -11608 -11713 -11760 0
-18195 -11608 -11711 -11762 0
-18195 -11608 -11709 -11764 0
-18195 -11608 -11707 -11766 0
-18195 -11608 -11705 -11768 0
-18195 -11608 -11703 -11770 0
-18195 -11608 -11701 -11772 0
-18195 -11608 -11699 -11774 0
-18195 -11608 -11697 -11776 0
-18195 -11608 -11696 -11778 0
-18195 -11606 -11729 -11747 0
-18195 -11606 -11727 -11748 0
-18195 -11606 -11725 -11750 0
-18195 -11606 -11723 -11752 0
-18195 -11606 -11721 -11754 0
-18195 -11606 -11719 -11756 0
-18195 -11606 -11717 -11758 0
-18195 -11606 -11715 -11760 0
-18195 -11606 -11713 -11762 0
-18195 -11606 -11711 -11764 0
-18195 -11606 -11709 -11766 0
-18195 -11606 -11707 -11768 0
-18195 -11606 -11705 -11770 0
-18195 -11606 -11703 -11772 0
-18195 -11606 -11701 -11774 0
-18195 -11606 -11699 -11776 0
-18195 -11606 -11697 -11778 0
-18195 -11606 -11696 -11780 0
-18195 -11604 -11731 -11747 0
-18195 -11604 -11729 -11748 0
-18195 -11604 -11727 -11750 0
-18195 -11604 -11725 -11752 0
-18195 -11604 -11723 -11754 0
-18195 -11604 -11721 -11756 0
-18195 -11604 -11719 -11758 0
-18195 -11604 -11717 -11760 0
-18195 -11604 -11715 -11762 0
-18195 -11604 -11713 -11764 0
-18195 -11604 -11711 -11766 0
-18195 -11604 -11709 -11768 0
-18195 -11604 -11707 -11770 0
-18195 -11604 -11705 -11772 0
-18195 -11604 -11703 -11774 0
-18195 -11604 -11701 -11776 0
-18195 -11604 -11699 -11778 0
-18195 -11604 -11697 -11780 0
-18195 -11604 -11696 -11782 0
-18195 -11602 -11733 -11747 0
-18195 -11602 -11731 -11748 0
-18195 -11602 -11729 -11750 0
-18195 -11602 -11727 -11752 0
-18195 -11602 -11725 -11754 0
-18195 -11602 -11723 -11756 0
-18195 -11602 -11721 -11758 0
-18195 -11602 -11719 -11760 0
-18195 -11602 -11717 -11762 0
-18195 -11602 -11715 -11764 0
-18195 -11602 -11713 -11766 0
-18195 -11602 -11711 -11768 0
-18195 -11602 -11709 -11770 0
-18195 -11602 -11707 -11772 0
-18195 -11602 -11705 -11774 0
-18195 -11602 -11703 -11776 0
-18195 -11602 -11701 -11778 0
-18195 -11602 -11699 -11780 0
-18195 -11602 -11697 -11782 0
-18195 -11602 -11696 -11784 0
-18195 -11600 -11735 -11747 0
-18195 -11600 -11733 -11748 0
-18195 -11600 -11731 -11750 0
-18195 -11600 -11729 -11752 0
-18195 -11600 -11727 -11754 0
-18195 -11600 -11725 -11756 0
-18195 -11600 -11723 -11758 0
-18195 -11600 -11721 -11760 0
-18195 -11600 -11719 -11762 0
-18195 -11600 -11717 -11764 0
-18195 -11600 -11715 -11766 0
-18195 -11600 -11713 -11768 0
-18195 -11600 -11711 -11770 0
-18195 -11600 -11709 -11772 0
-18195 -11600 -11707 -11774 0
-18195 -11600 -11705 -11776 0
-18195 -11600 -11703 -11778 0
-18195 -11600 -11701 -11780 0
-18195 -11600 -11699 -11782 0
-18195 -11600 -11697 -11784 0
-18195 -11600 -11696 -11786 0
-18195 -11598 -11737 -11747 0
-18195 -11598 -11735 -11748 0
-18195 -11598 -11733 -11750 0
-18195 -11598 -11731 -11752 0
-18195 -11598 -11729 -11754 0
-18195 -11598 -11727 -11756 0
-18195 -11598 -11725 -11758 0
-18195 -11598 -11723 -11760 0
-18195 -11598 -11721 -11762 0
-18195 -11598 -11719 -11764 0
-18195 -11598 -11717 -11766 0
-18195 -11598 -11715 -11768 0
-18195 -11598 -11713 -11770 0
-18195 -11598 -11711 -11772 0
-18195 -11598 -11709 -11774 0
-18195 -11598 -11707 -11776 0
-18195 -11598 -11705 -11778 0
-18195 -11598 -11703 -11780 0
-18195 -11598 -11701 -11782 0
-18195 -11598 -11699 -11784 0
-18195 -11598 -11697 -11786 0
-18195 -11598 -11696 -11788 0
-18195 -11596 -11739 -11747 0
-18195 -11596 -11737 -11748 0
-18195 -11596 -11735 -11750 0
-18195 -11596 -11733 -11752 0
-18195 -11596 -11731 -11754 0
-18195 -11596 -11729 -11756 0
-18195 -11596 -11727 -11758 0
-18195 -11596 -11725 -11760 0
-18195 -11596 -11723 -11762 0
-18195 -11596 -11721 -11764 0
-18195 -11596 -11719 -11766 0
-18195 -11596 -11717 -11768 0
-18195 -11596 -11715 -11770 0
-18195 -11596 -11713 -11772 0
-18195 -11596 -11711 -11774 0
-18195 -11596 -11709 -11776 0
-18195 -11596 -11707 -11778 0
-18195 -11596 -11705 -11780 0
-18195 -11596 -11703 -11782 0
-18195 -11596 -11701 -11784 0
-18195 -11596 -11699 -11786 0
-18195 -11596 -11697 -11788 0
-18195 -11596 -11696 -11790 0
-18195 -11594 -11741 -11747 0
-18195 -11594 -11739 -11748 0
-18195 -11594 -11737 -11750 0
-18195 -11594 -11735 -11752 0
-18195 -11594 -11733 -11754 0
-18195 -11594 -11731 -11756 0
-18195 -11594 -11729 -11758 0
-18195 -11594 -11727 -11760 0
-18195 -11594 -11725 -11762 0
-18195 -11594 -11723 -11764 0
-18195 -11594 -11721 -11766 0
-18195 -11594 -11719 -11768 0
-18195 -11594 -11717 -11770 0
-18195 -11594 -11715 -11772 0
-18195 -11594 -11713 -11774 0
-18195 -11594 -11711 -11776 0
-18195 -11594 -11709 -11778 0
-18195 -11594 -11707 -11780 0
-18195 -11594 -11705 -11782 0
-18195 -11594 -11703 -11784 0
-18195 -11594 -11701 -11786 0
-18195 -11594 -11699 -11788 0
-18195 -11594 -11697 -11790 0
-18195 -11594 -11696 -11792 0
-18195 -11592 -11743 -11747 0
-18195 -11592 -11741 -11748 0
-18195 -11592 -11739 -11750 0
-18195 -11592 -11737 -11752 0
-18195 -11592 -11735 -11754 0
-18195 -11592 -11733 -11756 0
-18195 -11592 -11731 -11758 0
-18195 -11592 -11729 -11760 0
-18195 -11592 -11727 -11762 0
-18195 -11592 -11725 -11764 0
-18195 -11592 -11723 -11766 0
-18195 -11592 -11721 -11768 0
-18195 -11592 -11719 -11770 0
-18195 -11592 -11717 -11772 0
-18195 -11592 -11715 -11774 0
-18195 -11592 -11713 -11776 0
-18195 -11592 -11711 -11778 0
-18195 -11592 -11709 -11780 0
-18195 -11592 -11707 -11782 0
-18195 -11592 -11705 -11784 0
-18195 -11592 -11703 -11786 0
-18195 -11592 -11701 -11788 0
-18195 -11592 -11699 -11790 0
-18195 -11592 -11697 -11792 0
-18195 -11592 -11696 -11794 0
-18195 -11591 -11745 -11747 0
-18195 -11591 -11743 -11748 0
-18195 -11591 -11741 -11750 0
-18195 -11591 -11739 -11752 0
-18195 -11591 -11737 -11754 0
-18195 -11591 -11735 -11756 0
-18195 -11591 -11733 -11758 0
-18195 -11591 -11731 -11760 0
-18195 -11591 -11729 -11762 0
-18195 -11591 -11727 -11764 0
-18195 -11591 -11725 -11766 0
-18195 -11591 -11723 -11768 0
-18195 -11591 -11721 -11770 0
-18195 -11591 -11719 -11772 0
-18195 -11591 -11717 -11774 0
-18195 -11591 -11715 -11776 0
-18195 -11591 -11713 -11778 0
-18195 -11591 -11711 -11780 0
-18195 -11591 -11709 -11782 0
-18195 -11591 -11707 -11784 0
-18195 -11591 -11705 -11786 0
-18195 -11591 -11703 -11788 0
-18195 -11591 -11701 -11790 0
-18195 -11591 -11699 -11792 0
-18195 -11591 -11697 -11794 0
-18195 -11591 -11696 -11796 0
18195 11796 0
18195 11696 11794 0
18195 11697 11792 0
18195 11699 11790 0
18195 11701 11788 0
18195 11703 11786 0
18195 11705 11784 0
18195 11707 11782 0
18195 11709 11780 0
18195 11711 11778 0
18195 11713 11776 0
18195 11715 11774 0
18195 11717 11772 0
18195 11719 11770 0
18195 11721 11768 0
18195 11723 11766 0
18195 11725 11764 0
18195 11727 11762 0
18195 11729 11760 0
18195 11731 11758 0
18195 11733 11756 0
18195 11735 11754 0
18195 11737 11752 0
18195 11739 11750 0
18195 11741 11748 0
18195 11743 11747 0
18195 11745 0
18195 11591 11794 0
18195 11591 11696 11792 0
18195 11591 11697 11790 0
18195 11591 11699 11788 0
18195 11591 11701 11786 0
18195 11591 11703 11784 0
18195 11591 11705 11782 0
18195 11591 11707 11780 0
18195 11591 11709 11778 0
18195 11591 11711 11776 0
18195 11591 11713 11774 0
18195 11591 11715 11772 0
18195 11591 11717 11770 0
18195 11591 11719 11768 0
18195 11591 11721 11766 0
18195 11591 11723 11764 0
18195 11591 11725 11762 0
18195 11591 11727 11760 0
18195 11591 11729 11758 0
18195 11591 11731 11756 0
18195 11591 11733 11754 0
18195 11591 11735 11752 0
18195 11591 11737 11750 0
18195 11591 11739 11748 0
18195 11591 11741 11747 0
18195 11591 11743 0
18195 11591 11745 0
18195 11592 11792 0
18195 11592 11696 11790 0
18195 11592 11697 11788 0
18195 11592 11699 11786 0
18195 11592 11701 11784 0
18195 11592 11703 11782 0
18195 11592 11705 11780 0
18195 11592 11707 11778 0
18195 11592 11709 11776 0
18195 11592 11711 11774 0
18195 11592 11713 11772 0
18195 11592 11715 11770 0
18195 11592 11717 11768 0
18195 11592 11719 11766 0
18195 11592 11721 11764 0
18195 11592 11723 11762 0
18195 11592 11725 11760 0
18195 11592 11727 11758 0
18195 11592 11729 11756 0
18195 11592 11731 11754 0
18195 11592 11733 11752 0
18195 11592 11735 11750 0
18195 11592 11737 11748 0
18195 11592 11739 11747 0
18195 11592 11741 0
18195 11592 11743 0
18195 11592 11745 0
18195 11594 11790 0
18195 11594 11696 11788 0
18195 11594 11697 11786 0
18195 11594 11699 11784 0
18195 11594 11701 11782 0
18195 11594 11703 11780 0
18195 11594 11705 11778 0
18195 11594 11707 11776 0
18195 11594 11709 11774 0
18195 11594 11711 11772 0
18195 11594 11713 11770 0
18195 11594 11715 11768 0
18195 11594 11717 11766 0
18195 11594 11719 11764 0
18195 11594 11721 11762 0
18195 11594 11723 11760 0
18195 11594 11725 11758 0
18195 11594 11727 11756 0
18195 11594 11729 11754 0
18195 11594 11731 11752 0
18195 11594 11733 11750 0
18195 11594 11735 11748 0
18195 11594 11737 11747 0
18195 11594 11739 0
18195 11594 11741 0
18195 11594 11743 0
18195 11594 11745 0
18195 11596 11788 0
18195 11596 11696 11786 0
18195 11596 11697 11784 0
18195 11596 11699 11782 0
18195 11596 11701 11780 0
18195 11596 11703 11778 0
18195 11596 11705 11776 0
18195 11596 11707 11774 0
18195 11596 11709 11772 0
18195 11596 11711 11770 0
18195 11596 11713 11768 0
18195 11596 11715 11766 0
18195 11596 11717 11764 0
18195 11596 11719 11762 0
18195 11596 11721 11760 0
18195 11596 11723 11758 0
18195 11596 11725 11756 0
18195 11596 11727 11754 0
18195 11596 11729 11752 0
18195 11596 11731 11750 0
18195 11596 11733 11748 0
18195 11596 11735 11747 0
18195 11596 11737 0
18195 11596 11739 0
18195 11596 11741 0
18195 11596 11743 0
18195 11596 11745 0
18195 11598 11786 0
18195 11598 11696 11784 0
18195 11598 11697 11782 0
18195 11598 11699 11780 0
18195 11598 11701 11778 0
18195 11598 11703 11776 0
18195 11598 11705 11774 0
18195 11598 11707 11772 0
18195 11598 11709 11770 0
18195 11598 11711 11768 0
18195 11598 11713 11766 0
18195 11598 11715 11764 0
18195 11598 11717 11762 0
18195 11598 11719 11760 0
18195 11598 11721 11758 0
18195 11598 11723 11756 0
18195 11598 11725 11754 0
18195 11598 11727 11752 0
18195 11598 11729 11750 0
18195 11598 11731 11748 0
18195 11598 11733 11747 0
18195 11598 11735 0
18195 11598 11737 0
18195 11598 11739 0
18195 11598 11741 0
18195 11598 11743 0
18195 11598 11745 0
18195 11600 11784 0
18195 11600 11696 11782 0
18195 11600 11697 11780 0
18195 11600 11699 11778 0
18195 11600 11701 11776 0
18195 11600 11703 11774 0
18195 11600 11705 11772 0
18195 11600 11707 11770 0
18195 11600 11709 11768 0
18195 11600 11711 11766 0
18195 11600 11713 11764 0
18195 11600 11715 11762 0
18195 11600 11717 11760 0
18195 11600 11719 11758 0
18195 11600 11721 11756 0
18195 11600 11723 11754 0
18195 11600 11725 11752 0
18195 11600 11727 11750 0
18195 11600 11729 11748 0
18195 11600 11731 11747 0
18195 11600 11733 0
18195 11600 11735 0
18195 11600 11737 0
18195 11600 11739 0
18195 11600 11741 0
18195 11600 11743 0
18195 11600 11745 0
18195 11602 11782 0
18195 11602 11696 11780 0
18195 11602 11697 11778 0
18195 11602 11699 11776 0
18195 11602 11701 11774 0
18195 11602 11703 11772 0
18195 11602 11705 11770 0
18195 11602 11707 11768 0
18195 11602 11709 11766 0
18195 11602 11711 11764 0
18195 11602 11713 11762 0
18195 11602 11715 11760 0
18195 11602 11717 11758 0
18195 11602 11719 11756 0
18195 11602 11721 11754 0
18195 11602 11723 11752 0
18195 11602 11725 11750 0
18195 11602 11727 11748 0
18195 11602 11729 11747 0
18195 11602 11731 0
18195 11602 11733 0
18195 11602 11735 0
18195 11602 11737 0
18195 11602 11739 0
18195 11602 11741 0
18195 11602 11743 0
18195 11602 11745 0
18195 11604 11780 0
18195 11604 11696 11778 0
18195 11604 11697 11776 0
18195 11604 11699 11774 0
18195 11604 11701 11772 0
18195 11604 11703 11770 0
18195 11604 11705 11768 0
18195 11604 11707 11766 0
18195 11604 11709 11764 0
18195 11604 11711 11762 0
18195 11604 11713 11760 0
18195 11604 11715 11758 0
18195 11604 11717 11756 0
18195 11604 11719 11754 0
18195 11604 11721 11752 0
18195 11604 11723 11750 0
18195 11604 11725 11748 0
18195 11604 11727 11747 0
18195 11604 11729 0
18195 11604 11731 0
18195 11604 11733 0
18195 11604 11735 0
18195 11604 11737 0
18195 11604 11739 0
18195 11604 11741 0
18195 11604 11743 0
18195 11604 11745 0
18195 11606 11778 0
18195 11606 11696 11776 0
18195 11606 11697 11774 0
18195 11606 11699 11772 0
18195 11606 11701 11770 0
18195 11606 11703 11768 0
18195 11606 11705 11766 0
18195 11606 11707 11764 0
18195 11606 11709 11762 0
18195 11606 11711 11760 0
18195 11606 11713 11758 0
18195 11606 11715 11756 0
18195 11606 11717 11754 0
18195 11606 11719 11752 0
18195 11606 11721 11750 0
18195 11606 11723 11748 0
18195 11606 11725 11747 0
18195 11606 11727 0
18195 11606 11729 0
18195 11606 11731 0
18195 11606 11733 0
18195 11606 11735 0
18195 11606 11737 0
18195 11606 11739 0
18195 11606 11741 0
18195 11606 11743 0
18195 11606 11745 0
18195 11608 11776 0
18195 11608 11696 11774 0
18195 11608 11697 11772 0
18195 11608 11699 11770 0
18195 11608 11701 11768 0
18195 11608 11703 11766 0
18195 11608 11705 11764 0
18195 11608 11707 11762 0
18195 11608 11709 11760 0
18195 11608 11711 11758 0
18195 11608 11713 11756 0
18195 11608 11715 11754 0
18195 11608 11717 11752 0
18195 11608 11719 11750 0
18195 11608 11721 11748 0
18195 11608 11723 11747 0
18195 11608 11725 0
18195 11608 11727 0
18195 11608 11729 0
18195 11608 11731 0
18195 11608 11733 0
18195 11608 11735 0
18195 11608 11737 0
18195 11608 11739 0
18195 11608 11741 0
18195 11608 11743 0
18195 11608 11745 0
18195 11610 11774 0
18195 11610 11696 11772 0
18195 11610 11697 11770 0
18195 11610 11699 11768 0
18195 11610 11701 11766 0
18195 11610 11703 11764 0
18195 11610 11705 11762 0
18195 11610 11707 11760 0
18195 11610 11709 11758 0
18195 11610 11711 11756 0
18195 11610 11713 11754 0
18195 11610 11715 11752 0
18195 11610 11717 11750 0
18195 11610 11719 11748 0
18195 11610 11721 11747 0
18195 11610 11723 0
18195 11610 11725 0
18195 11610 11727 0
18195 11610 11729 0
18195 11610 11731 0
18195 11610 11733 0
18195 11610 11735 0
18195 11610 11737 0
18195 11610 11739 0
18195 11610 11741 0
18195 11610 11743 0
18195 11610 11745 0
18195 11612 11772 0
18195 11612 11696 11770 0
18195 11612 11697 11768 0
18195 11612 11699 11766 0
18195 11612 11701 11764 0
18195 11612 11703 11762 0
18195 11612 11705 11760 0
18195 11612 11707 11758 0
18195 11612 11709 11756 0
18195 11612 11711 11754 0
18195 11612 11713 11752 0
18195 11612 11715 11750 0
18195 11612 11717 11748 0
18195 11612 11719 11747 0
18195 11612 11721 0
18195 11612 11723 0
18195 11612 11725 0
18195 11612 11727 0
18195 11612 11729 0
18195 11612 11731 0
18195 11612 11733 0
18195 11612 11735 0
18195 11612 11737 0
18195 11612 11739 0
18195 11612 11741 0
18195 11612 11743 0
18195 11612 11745 0
18195 11614 11770 0
18195 11614 11696 11768 0
18195 11614 11697 11766 0
18195 11614 11699 11764 0
18195 11614 11701 11762 0
18195 11614 11703 11760 0
18195 11614 11705 11758 0
18195 11614 11707 11756 0
18195 11614 11709 11754 0
18195 11614 11711 11752 0
18195 11614 11713 11750 0
18195 11614 11715 11748 0
18195 11614 11717 11747 0
18195 11614 11719 0
18195 11614 11721 0
18195 11614 11723 0
18195 11614 11725 0
18195 11614 11727 0
18195 11614 11729 0
18195 11614 11731 0
18195 11614 11733 0
18195 11614 11735 0
18195 11614 11737 0
18195 11614 11739 0
18195 11614 11741 0
18195 11614 11743 0
18195 11614 11745 0
18195 11616 11768 0
18195 11616 11696 11766 0
18195 11616 11697 11764 0
18195 11616 11699 11762 0
18195 11616 11701 11760 0
18195 11616 11703 11758 0
18195 11616 11705 11756 0
18195 11616 11707 11754 0
18195 11616 11709 11752 0
18195 11616 11711 11750 0
18195 11616 11713 11748 0
18195 11616 11715 11747 0
18195 11616 11717 0
18195 11616 11719 0
18195 11616 11721 0
18195 11616 11723 0
18195 11616 11725 0
18195 11616 11727 0
18195 11616 11729 0
18195 11616 11731 0
18195 11616 11733 0
18195 11616 11735 0
18195 11616 11737 0
18195 11616 11739 0
18195 11616 11741 0
18195 11616 11743 0
18195 11616 11745 0
18195 11618 11766 0
18195 11618 11696 11764 0
18195 11618 11697 11762 0
18195 11618 11699 11760 0
18195 11618 11701 11758 0
18195 11618 11703 11756 0
18195 11618 11705 11754 0
18195 11618 11707 11752 0
18195 11618 11709 11750 0
18195 11618 11711 11748 0
18195 11618 11713 11747 0
18195 11618 11715 0
18195 11618 11717 0
18195 11618 11719 0
18195 11618 11721 0
18195 11618 11723 0
18195 11618 11725 0
18195 11618 11727 0
18195 11618 11729 0
18195 11618 11731 0
18195 11618 11733 0
18195 11618 11735 0
18195 11618 11737 0
18195 11618 11739 0
18195 11618 11741 0
18195 11618 11743 0
18195 11618 11745 0
18195 11620 11764 0
18195 11620 11696 11762 0
18195 11620 11697 11760 0
18195 11620 11699 11758 0
18195 11620 11701 11756 0
18195 11620 11703 11754 0
18195 11620 11705 11752 0
18195 11620 11707 11750 0
18195 11620 11709 11748 0
18195 11620 11711 11747 0
18195 11620 11713 0
18195 11620 11715 0
18195 11620 11717 0
18195 11620 11719 0
18195 11620 11721 0
18195 11620 11723 0
18195 11620 11725 0
18195 11620 11727 0
18195 11620 11729 0
18195 11620 11731 0
18195 11620 11733 0
18195 11620 11735 0
18195 11620 11737 0
18195 11620 11739 0
18195 11620 11741 0
18195 11620 11743 0
18195 11620 11745 0
18195 11622 11762 0
18195 11622 11696 11760 0
18195 11622 11697 11758 0
18195 11622 11699 11756 0
18195 11622 11701 11754 0
18195 11622 11703 11752 0
18195 11622 11705 11750 0
18195 11622 11707 11748 0
18195 11622 11709 11747 0
18195 11622 11711 0
18195 11622 11713 0
18195 11622 11715 0
18195 11622 11717 0
18195 11622 11719 0
18195 11622 11721 0
18195 11622 11723 0
18195 11622 11725 0
18195 11622 11727 0
18195 11622 11729 0
18195 11622 11731 0
18195 11622 11733 0
18195 11622 11735 0
18195 11622 11737 0
18195 11622 11739 0
18195 11622 11741 0
18195 11622 11743 0
18195 11622 11745 0
18195 11624 11760 0
18195 11624 11696 11758 0
18195 11624 11697 11756 0
18195 11624 11699 11754 0
18195 11624 11701 11752 0
18195 11624 11703 11750 0
18195 11624 11705 11748 0
18195 11624 11707 11747 0
18195 11624 11709 0
18195 11624 11711 0
18195 11624 11713 0
18195 11624 11715 0
18195 11624 11717 0
18195 11624 11719 0
18195 11624 11721 0
18195 11624 11723 0
18195 11624 11725 0
18195 11624 11727 0
18195 11624 11729 0
18195 11624 11731 0
18195 11624 11733 0
18195 11624 11735 0
18195 11624 11737 0
18195 11624 11739 0
18195 11624 11741 0
18195 11624 11743 0
18195 11624 11745 0
c (((aux457 + aux460 + aux461)<=10)=tv=SATLiteral(18196))
-18196 12026 0
-18196 11956 12024 0
-18196 11957 12022 0
-18196 11959 12020 0
-18196 11961 12018 0
-18196 11963 12016 0
-18196 11965 12014 0
-18196 11967 12012 0
-18196 11969 12010 0
-18196 11971 12008 0
-18196 11973 12007 0
-18196 11975 0
-18196 11977 0
-18196 11979 0
-18196 11981 0
-18196 11983 0
-18196 11985 0
-18196 11987 0
-18196 11989 0
-18196 11991 0
-18196 11993 0
-18196 11995 0
-18196 11997 0
-18196 11999 0
-18196 12001 0
-18196 12003 0
-18196 12005 0
-18196 11851 12024 0
-18196 11851 11956 12022 0
-18196 11851 11957 12020 0
-18196 11851 11959 12018 0
-18196 11851 11961 12016 0
-18196 11851 11963 12014 0
-18196 11851 11965 12012 0
-18196 11851 11967 12010 0
-18196 11851 11969 12008 0
-18196 11851 11971 12007 0
-18196 11851 11973 0
-18196 11851 11975 0
-18196 11851 11977 0
-18196 11851 11979 0
-18196 11851 11981 0
-18196 11851 11983 0
-18196 11851 11985 0
-18196 11851 11987 0
-18196 11851 11989 0
-18196 11851 11991 0
-18196 11851 11993 0
-18196 11851 11995 0
-18196 11851 11997 0
-18196 11851 11999 0
-18196 11851 12001 0
-18196 11851 12003 0
-18196 11851 12005 0
-18196 11852 12022 0
-18196 11852 11956 12020 0
-18196 11852 11957 12018 0
-18196 11852 11959 12016 0
-18196 11852 11961 12014 0
-18196 11852 11963 12012 0
-18196 11852 11965 12010 0
-18196 11852 11967 12008 0
-18196 11852 11969 12007 0
-18196 11852 11971 0
-18196 11852 11973 0
-18196 11852 11975 0
-18196 11852 11977 0
-18196 11852 11979 0
-18196 11852 11981 0
-18196 11852 11983 0
-18196 11852 11985 0
-18196 11852 11987 0
-18196 11852 11989 0
-18196 11852 11991 0
-18196 11852 11993 0
-18196 11852 11995 0
-18196 11852 11997 0
-18196 11852 11999 0
-18196 11852 12001 0
-18196 11852 12003 0
-18196 11852 12005 0
-18196 11854 12020 0
-18196 11854 11956 12018 0
-18196 11854 11957 12016 0
-18196 11854 11959 12014 0
-18196 11854 11961 12012 0
-18196 11854 11963 12010 0
-18196 11854 11965 12008 0
-18196 11854 11967 12007 0
-18196 11854 11969 0
-18196 11854 11971 0
-18196 11854 11973 0
-18196 11854 11975 0
-18196 11854 11977 0
-18196 11854 11979 0
-18196 11854 11981 0
-18196 11854 11983 0
-18196 11854 11985 0
-18196 11854 11987 0
-18196 11854 11989 0
-18196 11854 11991 0
-18196 11854 11993 0
-18196 11854 11995 0
-18196 11854 11997 0
-18196 11854 11999 0
-18196 11854 12001 0
-18196 11854 12003 0
-18196 11854 12005 0
-18196 11856 12018 0
-18196 11856 11956 12016 0
-18196 11856 11957 12014 0
-18196 11856 11959 12012 0
-18196 11856 11961 12010 0
-18196 11856 11963 12008 0
-18196 11856 11965 12007 0
-18196 11856 11967 0
-18196 11856 11969 0
-18196 11856 11971 0
-18196 11856 11973 0
-18196 11856 11975 0
-18196 11856 11977 0
-18196 11856 11979 0
-18196 11856 11981 0
-18196 11856 11983 0
-18196 11856 11985 0
-18196 11856 11987 0
-18196 11856 11989 0
-18196 11856 11991 0
-18196 11856 11993 0
-18196 11856 11995 0
-18196 11856 11997 0
-18196 11856 11999 0
-18196 11856 12001 0
-18196 11856 12003 0
-18196 11856 12005 0
-18196 11858 12016 0
-18196 11858 11956 12014 0
-18196 11858 11957 12012 0
-18196 11858 11959 12010 0
-18196 11858 11961 12008 0
-18196 11858 11963 12007 0
-18196 11858 11965 0
-18196 11858 11967 0
-18196 11858 11969 0
-18196 11858 11971 0
-18196 11858 11973 0
-18196 11858 11975 0
-18196 11858 11977 0
-18196 11858 11979 0
-18196 11858 11981 0
-18196 11858 11983 0
-18196 11858 11985 0
-18196 11858 11987 0
-18196 11858 11989 0
-18196 11858 11991 0
-18196 11858 11993 0
-18196 11858 11995 0
-18196 11858 11997 0
-18196 11858 11999 0
-18196 11858 12001 0
-18196 11858 12003 0
-18196 11858 12005 0
-18196 11860 12014 0
-18196 11860 11956 12012 0
-18196 11860 11957 12010 0
-18196 11860 11959 12008 0
-18196 11860 11961 12007 0
-18196 11860 11963 0
-18196 11860 11965 0
-18196 11860 11967 0
-18196 11860 11969 0
-18196 11860 11971 0
-18196 11860 11973 0
-18196 11860 11975 0
-18196 11860 11977 0
-18196 11860 11979 0
-18196 11860 11981 0
-18196 11860 11983 0
-18196 11860 11985 0
-18196 11860 11987 0
-18196 11860 11989 0
-18196 11860 11991 0
-18196 11860 11993 0
-18196 11860 11995 0
-18196 11860 11997 0
-18196 11860 11999 0
-18196 11860 12001 0
-18196 11860 12003 0
-18196 11860 12005 0
-18196 11862 12012 0
-18196 11862 11956 12010 0
-18196 11862 11957 12008 0
-18196 11862 11959 12007 0
-18196 11862 11961 0
-18196 11862 11963 0
-18196 11862 11965 0
-18196 11862 11967 0
-18196 11862 11969 0
-18196 11862 11971 0
-18196 11862 11973 0
-18196 11862 11975 0
-18196 11862 11977 0
-18196 11862 11979 0
-18196 11862 11981 0
-18196 11862 11983 0
-18196 11862 11985 0
-18196 11862 11987 0
-18196 11862 11989 0
-18196 11862 11991 0
-18196 11862 11993 0
-18196 11862 11995 0
-18196 11862 11997 0
-18196 11862 11999 0
-18196 11862 12001 0
-18196 11862 12003 0
-18196 11862 12005 0
-18196 11864 12010 0
-18196 11864 11956 12008 0
-18196 11864 11957 12007 0
-18196 11864 11959 0
-18196 11864 11961 0
-18196 11864 11963 0
-18196 11864 11965 0
-18196 11864 11967 0
-18196 11864 11969 0
-18196 11864 11971 0
-18196 11864 11973 0
-18196 11864 11975 0
-18196 11864 11977 0
-18196 11864 11979 0
-18196 11864 11981 0
-18196 11864 11983 0
-18196 11864 11985 0
-18196 11864 11987 0
-18196 11864 11989 0
-18196 11864 11991 0
-18196 11864 11993 0
-18196 11864 11995 0
-18196 11864 11997 0
-18196 11864 11999 0
-18196 11864 12001 0
-18196 11864 12003 0
-18196 11864 12005 0
-18196 11866 12008 0
-18196 11866 11956 12007 0
-18196 11866 11957 0
-18196 11866 11959 0
-18196 11866 11961 0
-18196 11866 11963 0
-18196 11866 11965 0
-18196 11866 11967 0
-18196 11866 11969 0
-18196 11866 11971 0
-18196 11866 11973 0
-18196 11866 11975 0
-18196 11866 11977 0
-18196 11866 11979 0
-18196 11866 11981 0
-18196 11866 11983 0
-18196 11866 11985 0
-18196 11866 11987 0
-18196 11866 11989 0
-18196 11866 11991 0
-18196 11866 11993 0
-18196 11866 11995 0
-18196 11866 11997 0
-18196 11866 11999 0
-18196 11866 12001 0
-18196 11866 12003 0
-18196 11866 12005 0
-18196 11868 12007 0
-18196 11868 11956 0
-18196 11868 11957 0
-18196 11868 11959 0
-18196 11868 11961 0
-18196 11868 11963 0
-18196 11868 11965 0
-18196 11868 11967 0
-18196 11868 11969 0
-18196 11868 11971 0
-18196 11868 11973 0
-18196 11868 11975 0
-18196 11868 11977 0
-18196 11868 11979 0
-18196 11868 11981 0
-18196 11868 11983 0
-18196 11868 11985 0
-18196 11868 11987 0
-18196 11868 11989 0
-18196 11868 11991 0
-18196 11868 11993 0
-18196 11868 11995 0
-18196 11868 11997 0
-18196 11868 11999 0
-18196 11868 12001 0
-18196 11868 12003 0
-18196 11868 12005 0
-18196 11870 0
-18196 11870 11956 0
-18196 11870 11957 0
-18196 11870 11959 0
-18196 11870 11961 0
-18196 11870 11963 0
-18196 11870 11965 0
-18196 11870 11967 0
-18196 11870 11969 0
-18196 11870 11971 0
-18196 11870 11973 0
-18196 11870 11975 0
-18196 11870 11977 0
-18196 11870 11979 0
-18196 11870 11981 0
-18196 11870 11983 0
-18196 11870 11985 0
-18196 11870 11987 0
-18196 11870 11989 0
-18196 11870 11991 0
-18196 11870 11993 0
-18196 11870 11995 0
-18196 11870 11997 0
-18196 11870 11999 0
-18196 11870 12001 0
-18196 11870 12003 0
-18196 11870 12005 0
-18196 11872 0
-18196 11872 11956 0
-18196 11872 11957 0
-18196 11872 11959 0
-18196 11872 11961 0
-18196 11872 11963 0
-18196 11872 11965 0
-18196 11872 11967 0
-18196 11872 11969 0
-18196 11872 11971 0
-18196 11872 11973 0
-18196 11872 11975 0
-18196 11872 11977 0
-18196 11872 11979 0
-18196 11872 11981 0
-18196 11872 11983 0
-18196 11872 11985 0
-18196 11872 11987 0
-18196 11872 11989 0
-18196 11872 11991 0
-18196 11872 11993 0
-18196 11872 11995 0
-18196 11872 11997 0
-18196 11872 11999 0
-18196 11872 12001 0
-18196 11872 12003 0
-18196 11872 12005 0
-18196 11874 0
-18196 11874 11956 0
-18196 11874 11957 0
-18196 11874 11959 0
-18196 11874 11961 0
-18196 11874 11963 0
-18196 11874 11965 0
-18196 11874 11967 0
-18196 11874 11969 0
-18196 11874 11971 0
-18196 11874 11973 0
-18196 11874 11975 0
-18196 11874 11977 0
-18196 11874 11979 0
-18196 11874 11981 0
-18196 11874 11983 0
-18196 11874 11985 0
-18196 11874 11987 0
-18196 11874 11989 0
-18196 11874 11991 0
-18196 11874 11993 0
-18196 11874 11995 0
-18196 11874 11997 0
-18196 11874 11999 0
-18196 11874 12001 0
-18196 11874 12003 0
-18196 11874 12005 0
-18196 11876 0
-18196 11876 11956 0
-18196 11876 11957 0
-18196 11876 11959 0
-18196 11876 11961 0
-18196 11876 11963 0
-18196 11876 11965 0
-18196 11876 11967 0
-18196 11876 11969 0
-18196 11876 11971 0
-18196 11876 11973 0
-18196 11876 11975 0
-18196 11876 11977 0
-18196 11876 11979 0
-18196 11876 11981 0
-18196 11876 11983 0
-18196 11876 11985 0
-18196 11876 11987 0
-18196 11876 11989 0
-18196 11876 11991 0
-18196 11876 11993 0
-18196 11876 11995 0
-18196 11876 11997 0
-18196 11876 11999 0
-18196 11876 12001 0
-18196 11876 12003 0
-18196 11876 12005 0
-18196 11878 0
-18196 11878 11956 0
-18196 11878 11957 0
-18196 11878 11959 0
-18196 11878 11961 0
-18196 11878 11963 0
-18196 11878 11965 0
-18196 11878 11967 0
-18196 11878 11969 0
-18196 11878 11971 0
-18196 11878 11973 0
-18196 11878 11975 0
-18196 11878 11977 0
-18196 11878 11979 0
-18196 11878 11981 0
-18196 11878 11983 0
-18196 11878 11985 0
-18196 11878 11987 0
-18196 11878 11989 0
-18196 11878 11991 0
-18196 11878 11993 0
-18196 11878 11995 0
-18196 11878 11997 0
-18196 11878 11999 0
-18196 11878 12001 0
-18196 11878 12003 0
-18196 11878 12005 0
-18196 11880 0
-18196 11880 11956 0
-18196 11880 11957 0
-18196 11880 11959 0
-18196 11880 11961 0
-18196 11880 11963 0
-18196 11880 11965 0
-18196 11880 11967 0
-18196 11880 11969 0
-18196 11880 11971 0
-18196 11880 11973 0
-18196 11880 11975 0
-18196 11880 11977 0
-18196 11880 11979 0
-18196 11880 11981 0
-18196 11880 11983 0
-18196 11880 11985 0
-18196 11880 11987 0
-18196 11880 11989 0
-18196 11880 11991 0
-18196 11880 11993 0
-18196 11880 11995 0
-18196 11880 11997 0
-18196 11880 11999 0
-18196 11880 12001 0
-18196 11880 12003 0
-18196 11880 12005 0
-18196 11882 0
-18196 11882 11956 0
-18196 11882 11957 0
-18196 11882 11959 0
-18196 11882 11961 0
-18196 11882 11963 0
-18196 11882 11965 0
-18196 11882 11967 0
-18196 11882 11969 0
-18196 11882 11971 0
-18196 11882 11973 0
-18196 11882 11975 0
-18196 11882 11977 0
-18196 11882 11979 0
-18196 11882 11981 0
-18196 11882 11983 0
-18196 11882 11985 0
-18196 11882 11987 0
-18196 11882 11989 0
-18196 11882 11991 0
-18196 11882 11993 0
-18196 11882 11995 0
-18196 11882 11997 0
-18196 11882 11999 0
-18196 11882 12001 0
-18196 11882 12003 0
-18196 11882 12005 0
-18196 11884 0
-18196 11884 11956 0
-18196 11884 11957 0
-18196 11884 11959 0
-18196 11884 11961 0
-18196 11884 11963 0
-18196 11884 11965 0
-18196 11884 11967 0
-18196 11884 11969 0
-18196 11884 11971 0
-18196 11884 11973 0
-18196 11884 11975 0
-18196 11884 11977 0
-18196 11884 11979 0
-18196 11884 11981 0
-18196 11884 11983 0
-18196 11884 11985 0
-18196 11884 11987 0
-18196 11884 11989 0
-18196 11884 11991 0
-18196 11884 11993 0
-18196 11884 11995 0
-18196 11884 11997 0
-18196 11884 11999 0
-18196 11884 12001 0
-18196 11884 12003 0
-18196 11884 12005 0
18196 -11870 -11956 -12007 0
18196 -11868 -11957 -12007 0
18196 -11868 -11956 -12008 0
18196 -11866 -11959 -12007 0
18196 -11866 -11957 -12008 0
18196 -11866 -11956 -12010 0
18196 -11864 -11961 -12007 0
18196 -11864 -11959 -12008 0
18196 -11864 -11957 -12010 0
18196 -11864 -11956 -12012 0
18196 -11862 -11963 -12007 0
18196 -11862 -11961 -12008 0
18196 -11862 -11959 -12010 0
18196 -11862 -11957 -12012 0
18196 -11862 -11956 -12014 0
18196 -11860 -11965 -12007 0
18196 -11860 -11963 -12008 0
18196 -11860 -11961 -12010 0
18196 -11860 -11959 -12012 0
18196 -11860 -11957 -12014 0
18196 -11860 -11956 -12016 0
18196 -11858 -11967 -12007 0
18196 -11858 -11965 -12008 0
18196 -11858 -11963 -12010 0
18196 -11858 -11961 -12012 0
18196 -11858 -11959 -12014 0
18196 -11858 -11957 -12016 0
18196 -11858 -11956 -12018 0
18196 -11856 -11969 -12007 0
18196 -11856 -11967 -12008 0
18196 -11856 -11965 -12010 0
18196 -11856 -11963 -12012 0
18196 -11856 -11961 -12014 0
18196 -11856 -11959 -12016 0
18196 -11856 -11957 -12018 0
18196 -11856 -11956 -12020 0
18196 -11854 -11971 -12007 0
18196 -11854 -11969 -12008 0
18196 -11854 -11967 -12010 0
18196 -11854 -11965 -12012 0
18196 -11854 -11963 -12014 0
18196 -11854 -11961 -12016 0
18196 -11854 -11959 -12018 0
18196 -11854 -11957 -12020 0
18196 -11854 -11956 -12022 0
18196 -11852 -11973 -12007 0
18196 -11852 -11971 -12008 0
18196 -11852 -11969 -12010 0
18196 -11852 -11967 -12012 0
18196 -11852 -11965 -12014 0
18196 -11852 -11963 -12016 0
18196 -11852 -11961 -12018 0
18196 -11852 -11959 -12020 0
18196 -11852 -11957 -12022 0
18196 -11852 -11956 -12024 0
18196 -11851 -11975 -12007 0
18196 -11851 -11973 -12008 0
18196 -11851 -11971 -12010 0
18196 -11851 -11969 -12012 0
18196 -11851 -11967 -12014 0
18196 -11851 -11965 -12016 0
18196 -11851 -11963 -12018 0
18196 -11851 -11961 -12020 0
18196 -11851 -11959 -12022 0
18196 -11851 -11957 -12024 0
18196 -11851 -11956 -12026 0
c ((10<=(aux457 + aux460 + aux461))=tv=SATLiteral(18197))
-18197 -11868 -11956 -12007 0
-18197 -11866 -11957 -12007 0
-18197 -11866 -11956 -12008 0
-18197 -11864 -11959 -12007 0
-18197 -11864 -11957 -12008 0
-18197 -11864 -11956 -12010 0
-18197 -11862 -11961 -12007 0
-18197 -11862 -11959 -12008 0
-18197 -11862 -11957 -12010 0
-18197 -11862 -11956 -12012 0
-18197 -11860 -11963 -12007 0
-18197 -11860 -11961 -12008 0
-18197 -11860 -11959 -12010 0
-18197 -11860 -11957 -12012 0
-18197 -11860 -11956 -12014 0
-18197 -11858 -11965 -12007 0
-18197 -11858 -11963 -12008 0
-18197 -11858 -11961 -12010 0
-18197 -11858 -11959 -12012 0
-18197 -11858 -11957 -12014 0
-18197 -11858 -11956 -12016 0
-18197 -11856 -11967 -12007 0
-18197 -11856 -11965 -12008 0
-18197 -11856 -11963 -12010 0
-18197 -11856 -11961 -12012 0
-18197 -11856 -11959 -12014 0
-18197 -11856 -11957 -12016 0
-18197 -11856 -11956 -12018 0
-18197 -11854 -11969 -12007 0
-18197 -11854 -11967 -12008 0
-18197 -11854 -11965 -12010 0
-18197 -11854 -11963 -12012 0
-18197 -11854 -11961 -12014 0
-18197 -11854 -11959 -12016 0
-18197 -11854 -11957 -12018 0
-18197 -11854 -11956 -12020 0
-18197 -11852 -11971 -12007 0
-18197 -11852 -11969 -12008 0
-18197 -11852 -11967 -12010 0
-18197 -11852 -11965 -12012 0
-18197 -11852 -11963 -12014 0
-18197 -11852 -11961 -12016 0
-18197 -11852 -11959 -12018 0
-18197 -11852 -11957 -12020 0
-18197 -11852 -11956 -12022 0
-18197 -11851 -11973 -12007 0
-18197 -11851 -11971 -12008 0
-18197 -11851 -11969 -12010 0
-18197 -11851 -11967 -12012 0
-18197 -11851 -11965 -12014 0
-18197 -11851 -11963 -12016 0
-18197 -11851 -11961 -12018 0
-18197 -11851 -11959 -12020 0
-18197 -11851 -11957 -12022 0
-18197 -11851 -11956 -12024 0
18197 12024 0
18197 11956 12022 0
18197 11957 12020 0
18197 11959 12018 0
18197 11961 12016 0
18197 11963 12014 0
18197 11965 12012 0
18197 11967 12010 0
18197 11969 12008 0
18197 11971 12007 0
18197 11973 0
18197 11975 0
18197 11977 0
18197 11979 0
18197 11981 0
18197 11983 0
18197 11985 0
18197 11987 0
18197 11989 0
18197 11991 0
18197 11993 0
18197 11995 0
18197 11997 0
18197 11999 0
18197 12001 0
18197 12003 0
18197 12005 0
18197 11851 12022 0
18197 11851 11956 12020 0
18197 11851 11957 12018 0
18197 11851 11959 12016 0
18197 11851 11961 12014 0
18197 11851 11963 12012 0
18197 11851 11965 12010 0
18197 11851 11967 12008 0
18197 11851 11969 12007 0
18197 11851 11971 0
18197 11851 11973 0
18197 11851 11975 0
18197 11851 11977 0
18197 11851 11979 0
18197 11851 11981 0
18197 11851 11983 0
18197 11851 11985 0
18197 11851 11987 0
18197 11851 11989 0
18197 11851 11991 0
18197 11851 11993 0
18197 11851 11995 0
18197 11851 11997 0
18197 11851 11999 0
18197 11851 12001 0
18197 11851 12003 0
18197 11851 12005 0
18197 11852 12020 0
18197 11852 11956 12018 0
18197 11852 11957 12016 0
18197 11852 11959 12014 0
18197 11852 11961 12012 0
18197 11852 11963 12010 0
18197 11852 11965 12008 0
18197 11852 11967 12007 0
18197 11852 11969 0
18197 11852 11971 0
18197 11852 11973 0
18197 11852 11975 0
18197 11852 11977 0
18197 11852 11979 0
18197 11852 11981 0
18197 11852 11983 0
18197 11852 11985 0
18197 11852 11987 0
18197 11852 11989 0
18197 11852 11991 0
18197 11852 11993 0
18197 11852 11995 0
18197 11852 11997 0
18197 11852 11999 0
18197 11852 12001 0
18197 11852 12003 0
18197 11852 12005 0
18197 11854 12018 0
18197 11854 11956 12016 0
18197 11854 11957 12014 0
18197 11854 11959 12012 0
18197 11854 11961 12010 0
18197 11854 11963 12008 0
18197 11854 11965 12007 0
18197 11854 11967 0
18197 11854 11969 0
18197 11854 11971 0
18197 11854 11973 0
18197 11854 11975 0
18197 11854 11977 0
18197 11854 11979 0
18197 11854 11981 0
18197 11854 11983 0
18197 11854 11985 0
18197 11854 11987 0
18197 11854 11989 0
18197 11854 11991 0
18197 11854 11993 0
18197 11854 11995 0
18197 11854 11997 0
18197 11854 11999 0
18197 11854 12001 0
18197 11854 12003 0
18197 11854 12005 0
18197 11856 12016 0
18197 11856 11956 12014 0
18197 11856 11957 12012 0
18197 11856 11959 12010 0
18197 11856 11961 12008 0
18197 11856 11963 12007 0
18197 11856 11965 0
18197 11856 11967 0
18197 11856 11969 0
18197 11856 11971 0
18197 11856 11973 0
18197 11856 11975 0
18197 11856 11977 0
18197 11856 11979 0
18197 11856 11981 0
18197 11856 11983 0
18197 11856 11985 0
18197 11856 11987 0
18197 11856 11989 0
18197 11856 11991 0
18197 11856 11993 0
18197 11856 11995 0
18197 11856 11997 0
18197 11856 11999 0
18197 11856 12001 0
18197 11856 12003 0
18197 11856 12005 0
18197 11858 12014 0
18197 11858 11956 12012 0
18197 11858 11957 12010 0
18197 11858 11959 12008 0
18197 11858 11961 12007 0
18197 11858 11963 0
18197 11858 11965 0
18197 11858 11967 0
18197 11858 11969 0
18197 11858 11971 0
18197 11858 11973 0
18197 11858 11975 0
18197 11858 11977 0
18197 11858 11979 0
18197 11858 11981 0
18197 11858 11983 0
18197 11858 11985 0
18197 11858 11987 0
18197 11858 11989 0
18197 11858 11991 0
18197 11858 11993 0
18197 11858 11995 0
18197 11858 11997 0
18197 11858 11999 0
18197 11858 12001 0
18197 11858 12003 0
18197 11858 12005 0
18197 11860 12012 0
18197 11860 11956 12010 0
18197 11860 11957 12008 0
18197 11860 11959 12007 0
18197 11860 11961 0
18197 11860 11963 0
18197 11860 11965 0
18197 11860 11967 0
18197 11860 11969 0
18197 11860 11971 0
18197 11860 11973 0
18197 11860 11975 0
18197 11860 11977 0
18197 11860 11979 0
18197 11860 11981 0
18197 11860 11983 0
18197 11860 11985 0
18197 11860 11987 0
18197 11860 11989 0
18197 11860 11991 0
18197 11860 11993 0
18197 11860 11995 0
18197 11860 11997 0
18197 11860 11999 0
18197 11860 12001 0
18197 11860 12003 0
18197 11860 12005 0
18197 11862 12010 0
18197 11862 11956 12008 0
18197 11862 11957 12007 0
18197 11862 11959 0
18197 11862 11961 0
18197 11862 11963 0
18197 11862 11965 0
18197 11862 11967 0
18197 11862 11969 0
18197 11862 11971 0
18197 11862 11973 0
18197 11862 11975 0
18197 11862 11977 0
18197 11862 11979 0
18197 11862 11981 0
18197 11862 11983 0
18197 11862 11985 0
18197 11862 11987 0
18197 11862 11989 0
18197 11862 11991 0
18197 11862 11993 0
18197 11862 11995 0
18197 11862 11997 0
18197 11862 11999 0
18197 11862 12001 0
18197 11862 12003 0
18197 11862 12005 0
18197 11864 12008 0
18197 11864 11956 12007 0
18197 11864 11957 0
18197 11864 11959 0
18197 11864 11961 0
18197 11864 11963 0
18197 11864 11965 0
18197 11864 11967 0
18197 11864 11969 0
18197 11864 11971 0
18197 11864 11973 0
18197 11864 11975 0
18197 11864 11977 0
18197 11864 11979 0
18197 11864 11981 0
18197 11864 11983 0
18197 11864 11985 0
18197 11864 11987 0
18197 11864 11989 0
18197 11864 11991 0
18197 11864 11993 0
18197 11864 11995 0
18197 11864 11997 0
18197 11864 11999 0
18197 11864 12001 0
18197 11864 12003 0
18197 11864 12005 0
18197 11866 12007 0
18197 11866 11956 0
18197 11866 11957 0
18197 11866 11959 0
18197 11866 11961 0
18197 11866 11963 0
18197 11866 11965 0
18197 11866 11967 0
18197 11866 11969 0
18197 11866 11971 0
18197 11866 11973 0
18197 11866 11975 0
18197 11866 11977 0
18197 11866 11979 0
18197 11866 11981 0
18197 11866 11983 0
18197 11866 11985 0
18197 11866 11987 0
18197 11866 11989 0
18197 11866 11991 0
18197 11866 11993 0
18197 11866 11995 0
18197 11866 11997 0
18197 11866 11999 0
18197 11866 12001 0
18197 11866 12003 0
18197 11866 12005 0
18197 11868 0
18197 11868 11956 0
18197 11868 11957 0
18197 11868 11959 0
18197 11868 11961 0
18197 11868 11963 0
18197 11868 11965 0
18197 11868 11967 0
18197 11868 11969 0
18197 11868 11971 0
18197 11868 11973 0
18197 11868 11975 0
18197 11868 11977 0
18197 11868 11979 0
18197 11868 11981 0
18197 11868 11983 0
18197 11868 11985 0
18197 11868 11987 0
18197 11868 11989 0
18197 11868 11991 0
18197 11868 11993 0
18197 11868 11995 0
18197 11868 11997 0
18197 11868 11999 0
18197 11868 12001 0
18197 11868 12003 0
18197 11868 12005 0
18197 11870 0
18197 11870 11956 0
18197 11870 11957 0
18197 11870 11959 0
18197 11870 11961 0
18197 11870 11963 0
18197 11870 11965 0
18197 11870 11967 0
18197 11870 11969 0
18197 11870 11971 0
18197 11870 11973 0
18197 11870 11975 0
18197 11870 11977 0
18197 11870 11979 0
18197 11870 11981 0
18197 11870 11983 0
18197 11870 11985 0
18197 11870 11987 0
18197 11870 11989 0
18197 11870 11991 0
18197 11870 11993 0
18197 11870 11995 0
18197 11870 11997 0
18197 11870 11999 0
18197 11870 12001 0
18197 11870 12003 0
18197 11870 12005 0
18197 11872 0
18197 11872 11956 0
18197 11872 11957 0
18197 11872 11959 0
18197 11872 11961 0
18197 11872 11963 0
18197 11872 11965 0
18197 11872 11967 0
18197 11872 11969 0
18197 11872 11971 0
18197 11872 11973 0
18197 11872 11975 0
18197 11872 11977 0
18197 11872 11979 0
18197 11872 11981 0
18197 11872 11983 0
18197 11872 11985 0
18197 11872 11987 0
18197 11872 11989 0
18197 11872 11991 0
18197 11872 11993 0
18197 11872 11995 0
18197 11872 11997 0
18197 11872 11999 0
18197 11872 12001 0
18197 11872 12003 0
18197 11872 12005 0
18197 11874 0
18197 11874 11956 0
18197 11874 11957 0
18197 11874 11959 0
18197 11874 11961 0
18197 11874 11963 0
18197 11874 11965 0
18197 11874 11967 0
18197 11874 11969 0
18197 11874 11971 0
18197 11874 11973 0
18197 11874 11975 0
18197 11874 11977 0
18197 11874 11979 0
18197 11874 11981 0
18197 11874 11983 0
18197 11874 11985 0
18197 11874 11987 0
18197 11874 11989 0
18197 11874 11991 0
18197 11874 11993 0
18197 11874 11995 0
18197 11874 11997 0
18197 11874 11999 0
18197 11874 12001 0
18197 11874 12003 0
18197 11874 12005 0
18197 11876 0
18197 11876 11956 0
18197 11876 11957 0
18197 11876 11959 0
18197 11876 11961 0
18197 11876 11963 0
18197 11876 11965 0
18197 11876 11967 0
18197 11876 11969 0
18197 11876 11971 0
18197 11876 11973 0
18197 11876 11975 0
18197 11876 11977 0
18197 11876 11979 0
18197 11876 11981 0
18197 11876 11983 0
18197 11876 11985 0
18197 11876 11987 0
18197 11876 11989 0
18197 11876 11991 0
18197 11876 11993 0
18197 11876 11995 0
18197 11876 11997 0
18197 11876 11999 0
18197 11876 12001 0
18197 11876 12003 0
18197 11876 12005 0
18197 11878 0
18197 11878 11956 0
18197 11878 11957 0
18197 11878 11959 0
18197 11878 11961 0
18197 11878 11963 0
18197 11878 11965 0
18197 11878 11967 0
18197 11878 11969 0
18197 11878 11971 0
18197 11878 11973 0
18197 11878 11975 0
18197 11878 11977 0
18197 11878 11979 0
18197 11878 11981 0
18197 11878 11983 0
18197 11878 11985 0
18197 11878 11987 0
18197 11878 11989 0
18197 11878 11991 0
18197 11878 11993 0
18197 11878 11995 0
18197 11878 11997 0
18197 11878 11999 0
18197 11878 12001 0
18197 11878 12003 0
18197 11878 12005 0
18197 11880 0
18197 11880 11956 0
18197 11880 11957 0
18197 11880 11959 0
18197 11880 11961 0
18197 11880 11963 0
18197 11880 11965 0
18197 11880 11967 0
18197 11880 11969 0
18197 11880 11971 0
18197 11880 11973 0
18197 11880 11975 0
18197 11880 11977 0
18197 11880 11979 0
18197 11880 11981 0
18197 11880 11983 0
18197 11880 11985 0
18197 11880 11987 0
18197 11880 11989 0
18197 11880 11991 0
18197 11880 11993 0
18197 11880 11995 0
18197 11880 11997 0
18197 11880 11999 0
18197 11880 12001 0
18197 11880 12003 0
18197 11880 12005 0
18197 11882 0
18197 11882 11956 0
18197 11882 11957 0
18197 11882 11959 0
18197 11882 11961 0
18197 11882 11963 0
18197 11882 11965 0
18197 11882 11967 0
18197 11882 11969 0
18197 11882 11971 0
18197 11882 11973 0
18197 11882 11975 0
18197 11882 11977 0
18197 11882 11979 0
18197 11882 11981 0
18197 11882 11983 0
18197 11882 11985 0
18197 11882 11987 0
18197 11882 11989 0
18197 11882 11991 0
18197 11882 11993 0
18197 11882 11995 0
18197 11882 11997 0
18197 11882 11999 0
18197 11882 12001 0
18197 11882 12003 0
18197 11882 12005 0
18197 11884 0
18197 11884 11956 0
18197 11884 11957 0
18197 11884 11959 0
18197 11884 11961 0
18197 11884 11963 0
18197 11884 11965 0
18197 11884 11967 0
18197 11884 11969 0
18197 11884 11971 0
18197 11884 11973 0
18197 11884 11975 0
18197 11884 11977 0
18197 11884 11979 0
18197 11884 11981 0
18197 11884 11983 0
18197 11884 11985 0
18197 11884 11987 0
18197 11884 11989 0
18197 11884 11991 0
18197 11884 11993 0
18197 11884 11995 0
18197 11884 11997 0
18197 11884 11999 0
18197 11884 12001 0
18197 11884 12003 0
18197 11884 12005 0
c (((aux463 + aux466 + aux467)<=15)=tv=SATLiteral(18198))
-18198 12296 0
-18198 12216 12294 0
-18198 12217 12292 0
-18198 12219 12290 0
-18198 12221 12288 0
-18198 12223 12286 0
-18198 12225 12284 0
-18198 12227 12282 0
-18198 12229 12280 0
-18198 12231 12278 0
-18198 12233 12276 0
-18198 12235 12274 0
-18198 12237 12272 0
-18198 12239 12270 0
-18198 12241 12268 0
-18198 12243 12267 0
-18198 12245 0
-18198 12247 0
-18198 12249 0
-18198 12251 0
-18198 12253 0
-18198 12255 0
-18198 12257 0
-18198 12259 0
-18198 12261 0
-18198 12263 0
-18198 12265 0
-18198 12111 12294 0
-18198 12111 12216 12292 0
-18198 12111 12217 12290 0
-18198 12111 12219 12288 0
-18198 12111 12221 12286 0
-18198 12111 12223 12284 0
-18198 12111 12225 12282 0
-18198 12111 12227 12280 0
-18198 12111 12229 12278 0
-18198 12111 12231 12276 0
-18198 12111 12233 12274 0
-18198 12111 12235 12272 0
-18198 12111 12237 12270 0
-18198 12111 12239 12268 0
-18198 12111 12241 12267 0
-18198 12111 12243 0
-18198 12111 12245 0
-18198 12111 12247 0
-18198 12111 12249 0
-18198 12111 12251 0
-18198 12111 12253 0
-18198 12111 12255 0
-18198 12111 12257 0
-18198 12111 12259 0
-18198 12111 12261 0
-18198 12111 12263 0
-18198 12111 12265 0
-18198 12112 12292 0
-18198 12112 12216 12290 0
-18198 12112 12217 12288 0
-18198 12112 12219 12286 0
-18198 12112 12221 12284 0
-18198 12112 12223 12282 0
-18198 12112 12225 12280 0
-18198 12112 12227 12278 0
-18198 12112 12229 12276 0
-18198 12112 12231 12274 0
-18198 12112 12233 12272 0
-18198 12112 12235 12270 0
-18198 12112 12237 12268 0
-18198 12112 12239 12267 0
-18198 12112 12241 0
-18198 12112 12243 0
-18198 12112 12245 0
-18198 12112 12247 0
-18198 12112 12249 0
-18198 12112 12251 0
-18198 12112 12253 0
-18198 12112 12255 0
-18198 12112 12257 0
-18198 12112 12259 0
-18198 12112 12261 0
-18198 12112 12263 0
-18198 12112 12265 0
-18198 12114 12290 0
-18198 12114 12216 12288 0
-18198 12114 12217 12286 0
-18198 12114 12219 12284 0
-18198 12114 12221 12282 0
-18198 12114 12223 12280 0
-18198 12114 12225 12278 0
-18198 12114 12227 12276 0
-18198 12114 12229 12274 0
-18198 12114 12231 12272 0
-18198 12114 12233 12270 0
-18198 12114 12235 12268 0
-18198 12114 12237 12267 0
-18198 12114 12239 0
-18198 12114 12241 0
-18198 12114 12243 0
-18198 12114 12245 0
-18198 12114 12247 0
-18198 12114 12249 0
-18198 12114 12251 0
-18198 12114 12253 0
-18198 12114 12255 0
-18198 12114 12257 0
-18198 12114 12259 0
-18198 12114 12261 0
-18198 12114 12263 0
-18198 12114 12265 0
-18198 12116 12288 0
-18198 12116 12216 12286 0
-18198 12116 12217 12284 0
-18198 12116 12219 12282 0
-18198 12116 12221 12280 0
-18198 12116 12223 12278 0
-18198 12116 12225 12276 0
-18198 12116 12227 12274 0
-18198 12116 12229 12272 0
-18198 12116 12231 12270 0
-18198 12116 12233 12268 0
-18198 12116 12235 12267 0
-18198 12116 12237 0
-18198 12116 12239 0
-18198 12116 12241 0
-18198 12116 12243 0
-18198 12116 12245 0
-18198 12116 12247 0
-18198 12116 12249 0
-18198 12116 12251 0
-18198 12116 12253 0
-18198 12116 12255 0
-18198 12116 12257 0
-18198 12116 12259 0
-18198 12116 12261 0
-18198 12116 12263 0
-18198 12116 12265 0
-18198 12118 12286 0
-18198 12118 12216 12284 0
-18198 12118 12217 12282 0
-18198 12118 12219 12280 0
-18198 12118 12221 12278 0
-18198 12118 12223 12276 0
-18198 12118 12225 12274 0
-18198 12118 12227 12272 0
-18198 12118 12229 12270 0
-18198 12118 12231 12268 0
-18198 12118 12233 12267 0
-18198 12118 12235 0
-18198 12118 12237 0
-18198 12118 12239 0
-18198 12118 12241 0
-18198 12118 12243 0
-18198 12118 12245 0
-18198 12118 12247 0
-18198 12118 12249 0
-18198 12118 12251 0
-18198 12118 12253 0
-18198 12118 12255 0
-18198 12118 12257 0
-18198 12118 12259 0
-18198 12118 12261 0
-18198 12118 12263 0
-18198 12118 12265 0
-18198 12120 12284 0
-18198 12120 12216 12282 0
-18198 12120 12217 12280 0
-18198 12120 12219 12278 0
-18198 12120 12221 12276 0
-18198 12120 12223 12274 0
-18198 12120 12225 12272 0
-18198 12120 12227 12270 0
-18198 12120 12229 12268 0
-18198 12120 12231 12267 0
-18198 12120 12233 0
-18198 12120 12235 0
-18198 12120 12237 0
-18198 12120 12239 0
-18198 12120 12241 0
-18198 12120 12243 0
-18198 12120 12245 0
-18198 12120 12247 0
-18198 12120 12249 0
-18198 12120 12251 0
-18198 12120 12253 0
-18198 12120 12255 0
-18198 12120 12257 0
-18198 12120 12259 0
-18198 12120 12261 0
-18198 12120 12263 0
-18198 12120 12265 0
-18198 12122 12282 0
-18198 12122 12216 12280 0
-18198 12122 12217 12278 0
-18198 12122 12219 12276 0
-18198 12122 12221 12274 0
-18198 12122 12223 12272 0
-18198 12122 12225 12270 0
-18198 12122 12227 12268 0
-18198 12122 12229 12267 0
-18198 12122 12231 0
-18198 12122 12233 0
-18198 12122 12235 0
-18198 12122 12237 0
-18198 12122 12239 0
-18198 12122 12241 0
-18198 12122 12243 0
-18198 12122 12245 0
-18198 12122 12247 0
-18198 12122 12249 0
-18198 12122 12251 0
-18198 12122 12253 0
-18198 12122 12255 0
-18198 12122 12257 0
-18198 12122 12259 0
-18198 12122 12261 0
-18198 12122 12263 0
-18198 12122 12265 0
-18198 12124 12280 0
-18198 12124 12216 12278 0
-18198 12124 12217 12276 0
-18198 12124 12219 12274 0
-18198 12124 12221 12272 0
-18198 12124 12223 12270 0
-18198 12124 12225 12268 0
-18198 12124 12227 12267 0
-18198 12124 12229 0
-18198 12124 12231 0
-18198 12124 12233 0
-18198 12124 12235 0
-18198 12124 12237 0
-18198 12124 12239 0
-18198 12124 12241 0
-18198 12124 12243 0
-18198 12124 12245 0
-18198 12124 12247 0
-18198 12124 12249 0
-18198 12124 12251 0
-18198 12124 12253 0
-18198 12124 12255 0
-18198 12124 12257 0
-18198 12124 12259 0
-18198 12124 12261 0
-18198 12124 12263 0
-18198 12124 12265 0
-18198 12126 12278 0
-18198 12126 12216 12276 0
-18198 12126 12217 12274 0
-18198 12126 12219 12272 0
-18198 12126 12221 12270 0
-18198 12126 12223 12268 0
-18198 12126 12225 12267 0
-18198 12126 12227 0
-18198 12126 12229 0
-18198 12126 12231 0
-18198 12126 12233 0
-18198 12126 12235 0
-18198 12126 12237 0
-18198 12126 12239 0
-18198 12126 12241 0
-18198 12126 12243 0
-18198 12126 12245 0
-18198 12126 12247 0
-18198 12126 12249 0
-18198 12126 12251 0
-18198 12126 12253 0
-18198 12126 12255 0
-18198 12126 12257 0
-18198 12126 12259 0
-18198 12126 12261 0
-18198 12126 12263 0
-18198 12126 12265 0
-18198 12128 12276 0
-18198 12128 12216 12274 0
-18198 12128 12217 12272 0
-18198 12128 12219 12270 0
-18198 12128 12221 12268 0
-18198 12128 12223 12267 0
-18198 12128 12225 0
-18198 12128 12227 0
-18198 12128 12229 0
-18198 12128 12231 0
-18198 12128 12233 0
-18198 12128 12235 0
-18198 12128 12237 0
-18198 12128 12239 0
-18198 12128 12241 0
-18198 12128 12243 0
-18198 12128 12245 0
-18198 12128 12247 0
-18198 12128 12249 0
-18198 12128 12251 0
-18198 12128 12253 0
-18198 12128 12255 0
-18198 12128 12257 0
-18198 12128 12259 0
-18198 12128 12261 0
-18198 12128 12263 0
-18198 12128 12265 0
-18198 12130 12274 0
-18198 12130 12216 12272 0
-18198 12130 12217 12270 0
-18198 12130 12219 12268 0
-18198 12130 12221 12267 0
-18198 12130 12223 0
-18198 12130 12225 0
-18198 12130 12227 0
-18198 12130 12229 0
-18198 12130 12231 0
-18198 12130 12233 0
-18198 12130 12235 0
-18198 12130 12237 0
-18198 12130 12239 0
-18198 12130 12241 0
-18198 12130 12243 0
-18198 12130 12245 0
-18198 12130 12247 0
-18198 12130 12249 0
-18198 12130 12251 0
-18198 12130 12253 0
-18198 12130 12255 0
-18198 12130 12257 0
-18198 12130 12259 0
-18198 12130 12261 0
-18198 12130 12263 0
-18198 12130 12265 0
-18198 12132 12272 0
-18198 12132 12216 12270 0
-18198 12132 12217 12268 0
-18198 12132 12219 12267 0
-18198 12132 12221 0
-18198 12132 12223 0
-18198 12132 12225 0
-18198 12132 12227 0
-18198 12132 12229 0
-18198 12132 12231 0
-18198 12132 12233 0
-18198 12132 12235 0
-18198 12132 12237 0
-18198 12132 12239 0
-18198 12132 12241 0
-18198 12132 12243 0
-18198 12132 12245 0
-18198 12132 12247 0
-18198 12132 12249 0
-18198 12132 12251 0
-18198 12132 12253 0
-18198 12132 12255 0
-18198 12132 12257 0
-18198 12132 12259 0
-18198 12132 12261 0
-18198 12132 12263 0
-18198 12132 12265 0
-18198 12134 12270 0
-18198 12134 12216 12268 0
-18198 12134 12217 12267 0
-18198 12134 12219 0
-18198 12134 12221 0
-18198 12134 12223 0
-18198 12134 12225 0
-18198 12134 12227 0
-18198 12134 12229 0
-18198 12134 12231 0
-18198 12134 12233 0
-18198 12134 12235 0
-18198 12134 12237 0
-18198 12134 12239 0
-18198 12134 12241 0
-18198 12134 12243 0
-18198 12134 12245 0
-18198 12134 12247 0
-18198 12134 12249 0
-18198 12134 12251 0
-18198 12134 12253 0
-18198 12134 12255 0
-18198 12134 12257 0
-18198 12134 12259 0
-18198 12134 12261 0
-18198 12134 12263 0
-18198 12134 12265 0
-18198 12136 12268 0
-18198 12136 12216 12267 0
-18198 12136 12217 0
-18198 12136 12219 0
-18198 12136 12221 0
-18198 12136 12223 0
-18198 12136 12225 0
-18198 12136 12227 0
-18198 12136 12229 0
-18198 12136 12231 0
-18198 12136 12233 0
-18198 12136 12235 0
-18198 12136 12237 0
-18198 12136 12239 0
-18198 12136 12241 0
-18198 12136 12243 0
-18198 12136 12245 0
-18198 12136 12247 0
-18198 12136 12249 0
-18198 12136 12251 0
-18198 12136 12253 0
-18198 12136 12255 0
-18198 12136 12257 0
-18198 12136 12259 0
-18198 12136 12261 0
-18198 12136 12263 0
-18198 12136 12265 0
-18198 12138 12267 0
-18198 12138 12216 0
-18198 12138 12217 0
-18198 12138 12219 0
-18198 12138 12221 0
-18198 12138 12223 0
-18198 12138 12225 0
-18198 12138 12227 0
-18198 12138 12229 0
-18198 12138 12231 0
-18198 12138 12233 0
-18198 12138 12235 0
-18198 12138 12237 0
-18198 12138 12239 0
-18198 12138 12241 0
-18198 12138 12243 0
-18198 12138 12245 0
-18198 12138 12247 0
-18198 12138 12249 0
-18198 12138 12251 0
-18198 12138 12253 0
-18198 12138 12255 0
-18198 12138 12257 0
-18198 12138 12259 0
-18198 12138 12261 0
-18198 12138 12263 0
-18198 12138 12265 0
-18198 12140 0
-18198 12140 12216 0
-18198 12140 12217 0
-18198 12140 12219 0
-18198 12140 12221 0
-18198 12140 12223 0
-18198 12140 12225 0
-18198 12140 12227 0
-18198 12140 12229 0
-18198 12140 12231 0
-18198 12140 12233 0
-18198 12140 12235 0
-18198 12140 12237 0
-18198 12140 12239 0
-18198 12140 12241 0
-18198 12140 12243 0
-18198 12140 12245 0
-18198 12140 12247 0
-18198 12140 12249 0
-18198 12140 12251 0
-18198 12140 12253 0
-18198 12140 12255 0
-18198 12140 12257 0
-18198 12140 12259 0
-18198 12140 12261 0
-18198 12140 12263 0
-18198 12140 12265 0
-18198 12142 0
-18198 12142 12216 0
-18198 12142 12217 0
-18198 12142 12219 0
-18198 12142 12221 0
-18198 12142 12223 0
-18198 12142 12225 0
-18198 12142 12227 0
-18198 12142 12229 0
-18198 12142 12231 0
-18198 12142 12233 0
-18198 12142 12235 0
-18198 12142 12237 0
-18198 12142 12239 0
-18198 12142 12241 0
-18198 12142 12243 0
-18198 12142 12245 0
-18198 12142 12247 0
-18198 12142 12249 0
-18198 12142 12251 0
-18198 12142 12253 0
-18198 12142 12255 0
-18198 12142 12257 0
-18198 12142 12259 0
-18198 12142 12261 0
-18198 12142 12263 0
-18198 12142 12265 0
-18198 12144 0
-18198 12144 12216 0
-18198 12144 12217 0
-18198 12144 12219 0
-18198 12144 12221 0
-18198 12144 12223 0
-18198 12144 12225 0
-18198 12144 12227 0
-18198 12144 12229 0
-18198 12144 12231 0
-18198 12144 12233 0
-18198 12144 12235 0
-18198 12144 12237 0
-18198 12144 12239 0
-18198 12144 12241 0
-18198 12144 12243 0
-18198 12144 12245 0
-18198 12144 12247 0
-18198 12144 12249 0
-18198 12144 12251 0
-18198 12144 12253 0
-18198 12144 12255 0
-18198 12144 12257 0
-18198 12144 12259 0
-18198 12144 12261 0
-18198 12144 12263 0
-18198 12144 12265 0
18198 -12140 -12216 -12267 0
18198 -12138 -12217 -12267 0
18198 -12138 -12216 -12268 0
18198 -12136 -12219 -12267 0
18198 -12136 -12217 -12268 0
18198 -12136 -12216 -12270 0
18198 -12134 -12221 -12267 0
18198 -12134 -12219 -12268 0
18198 -12134 -12217 -12270 0
18198 -12134 -12216 -12272 0
18198 -12132 -12223 -12267 0
18198 -12132 -12221 -12268 0
18198 -12132 -12219 -12270 0
18198 -12132 -12217 -12272 0
18198 -12132 -12216 -12274 0
18198 -12130 -12225 -12267 0
18198 -12130 -12223 -12268 0
18198 -12130 -12221 -12270 0
18198 -12130 -12219 -12272 0
18198 -12130 -12217 -12274 0
18198 -12130 -12216 -12276 0
18198 -12128 -12227 -12267 0
18198 -12128 -12225 -12268 0
18198 -12128 -12223 -12270 0
18198 -12128 -12221 -12272 0
18198 -12128 -12219 -12274 0
18198 -12128 -12217 -12276 0
18198 -12128 -12216 -12278 0
18198 -12126 -12229 -12267 0
18198 -12126 -12227 -12268 0
18198 -12126 -12225 -12270 0
18198 -12126 -12223 -12272 0
18198 -12126 -12221 -12274 0
18198 -12126 -12219 -12276 0
18198 -12126 -12217 -12278 0
18198 -12126 -12216 -12280 0
18198 -12124 -12231 -12267 0
18198 -12124 -12229 -12268 0
18198 -12124 -12227 -12270 0
18198 -12124 -12225 -12272 0
18198 -12124 -12223 -12274 0
18198 -12124 -12221 -12276 0
18198 -12124 -12219 -12278 0
18198 -12124 -12217 -12280 0
18198 -12124 -12216 -12282 0
18198 -12122 -12233 -12267 0
18198 -12122 -12231 -12268 0
18198 -12122 -12229 -12270 0
18198 -12122 -12227 -12272 0
18198 -12122 -12225 -12274 0
18198 -12122 -12223 -12276 0
18198 -12122 -12221 -12278 0
18198 -12122 -12219 -12280 0
18198 -12122 -12217 -12282 0
18198 -12122 -12216 -12284 0
18198 -12120 -12235 -12267 0
18198 -12120 -12233 -12268 0
18198 -12120 -12231 -12270 0
18198 -12120 -12229 -12272 0
18198 -12120 -12227 -12274 0
18198 -12120 -12225 -12276 0
18198 -12120 -12223 -12278 0
18198 -12120 -12221 -12280 0
18198 -12120 -12219 -12282 0
18198 -12120 -12217 -12284 0
18198 -12120 -12216 -12286 0
18198 -12118 -12237 -12267 0
18198 -12118 -12235 -12268 0
18198 -12118 -12233 -12270 0
18198 -12118 -12231 -12272 0
18198 -12118 -12229 -12274 0
18198 -12118 -12227 -12276 0
18198 -12118 -12225 -12278 0
18198 -12118 -12223 -12280 0
18198 -12118 -12221 -12282 0
18198 -12118 -12219 -12284 0
18198 -12118 -12217 -12286 0
18198 -12118 -12216 -12288 0
18198 -12116 -12239 -12267 0
18198 -12116 -12237 -12268 0
18198 -12116 -12235 -12270 0
18198 -12116 -12233 -12272 0
18198 -12116 -12231 -12274 0
18198 -12116 -12229 -12276 0
18198 -12116 -12227 -12278 0
18198 -12116 -12225 -12280 0
18198 -12116 -12223 -12282 0
18198 -12116 -12221 -12284 0
18198 -12116 -12219 -12286 0
18198 -12116 -12217 -12288 0
18198 -12116 -12216 -12290 0
18198 -12114 -12241 -12267 0
18198 -12114 -12239 -12268 0
18198 -12114 -12237 -12270 0
18198 -12114 -12235 -12272 0
18198 -12114 -12233 -12274 0
18198 -12114 -12231 -12276 0
18198 -12114 -12229 -12278 0
18198 -12114 -12227 -12280 0
18198 -12114 -12225 -12282 0
18198 -12114 -12223 -12284 0
18198 -12114 -12221 -12286 0
18198 -12114 -12219 -12288 0
18198 -12114 -12217 -12290 0
18198 -12114 -12216 -12292 0
18198 -12112 -12243 -12267 0
18198 -12112 -12241 -12268 0
18198 -12112 -12239 -12270 0
18198 -12112 -12237 -12272 0
18198 -12112 -12235 -12274 0
18198 -12112 -12233 -12276 0
18198 -12112 -12231 -12278 0
18198 -12112 -12229 -12280 0
18198 -12112 -12227 -12282 0
18198 -12112 -12225 -12284 0
18198 -12112 -12223 -12286 0
18198 -12112 -12221 -12288 0
18198 -12112 -12219 -12290 0
18198 -12112 -12217 -12292 0
18198 -12112 -12216 -12294 0
18198 -12111 -12245 -12267 0
18198 -12111 -12243 -12268 0
18198 -12111 -12241 -12270 0
18198 -12111 -12239 -12272 0
18198 -12111 -12237 -12274 0
18198 -12111 -12235 -12276 0
18198 -12111 -12233 -12278 0
18198 -12111 -12231 -12280 0
18198 -12111 -12229 -12282 0
18198 -12111 -12227 -12284 0
18198 -12111 -12225 -12286 0
18198 -12111 -12223 -12288 0
18198 -12111 -12221 -12290 0
18198 -12111 -12219 -12292 0
18198 -12111 -12217 -12294 0
18198 -12111 -12216 -12296 0
c ((15<=(aux463 + aux466 + aux467))=tv=SATLiteral(18199))
-18199 -12138 -12216 -12267 0
-18199 -12136 -12217 -12267 0
-18199 -12136 -12216 -12268 0
-18199 -12134 -12219 -12267 0
-18199 -12134 -12217 -12268 0
-18199 -12134 -12216 -12270 0
-18199 -12132 -12221 -12267 0
-18199 -12132 -12219 -12268 0
-18199 -12132 -12217 -12270 0
-18199 -12132 -12216 -12272 0
-18199 -12130 -12223 -12267 0
-18199 -12130 -12221 -12268 0
-18199 -12130 -12219 -12270 0
-18199 -12130 -12217 -12272 0
-18199 -12130 -12216 -12274 0
-18199 -12128 -12225 -12267 0
-18199 -12128 -12223 -12268 0
-18199 -12128 -12221 -12270 0
-18199 -12128 -12219 -12272 0
-18199 -12128 -12217 -12274 0
-18199 -12128 -12216 -12276 0
-18199 -12126 -12227 -12267 0
-18199 -12126 -12225 -12268 0
-18199 -12126 -12223 -12270 0
-18199 -12126 -12221 -12272 0
-18199 -12126 -12219 -12274 0
-18199 -12126 -12217 -12276 0
-18199 -12126 -12216 -12278 0
-18199 -12124 -12229 -12267 0
-18199 -12124 -12227 -12268 0
-18199 -12124 -12225 -12270 0
-18199 -12124 -12223 -12272 0
-18199 -12124 -12221 -12274 0
-18199 -12124 -12219 -12276 0
-18199 -12124 -12217 -12278 0
-18199 -12124 -12216 -12280 0
-18199 -12122 -12231 -12267 0
-18199 -12122 -12229 -12268 0
-18199 -12122 -12227 -12270 0
-18199 -12122 -12225 -12272 0
-18199 -12122 -12223 -12274 0
-18199 -12122 -12221 -12276 0
-18199 -12122 -12219 -12278 0
-18199 -12122 -12217 -12280 0
-18199 -12122 -12216 -12282 0
-18199 -12120 -12233 -12267 0
-18199 -12120 -12231 -12268 0
-18199 -12120 -12229 -12270 0
-18199 -12120 -12227 -12272 0
-18199 -12120 -12225 -12274 0
-18199 -12120 -12223 -12276 0
-18199 -12120 -12221 -12278 0
-18199 -12120 -12219 -12280 0
-18199 -12120 -12217 -12282 0
-18199 -12120 -12216 -12284 0
-18199 -12118 -12235 -12267 0
-18199 -12118 -12233 -12268 0
-18199 -12118 -12231 -12270 0
-18199 -12118 -12229 -12272 0
-18199 -12118 -12227 -12274 0
-18199 -12118 -12225 -12276 0
-18199 -12118 -12223 -12278 0
-18199 -12118 -12221 -12280 0
-18199 -12118 -12219 -12282 0
-18199 -12118 -12217 -12284 0
-18199 -12118 -12216 -12286 0
-18199 -12116 -12237 -12267 0
-18199 -12116 -12235 -12268 0
-18199 -12116 -12233 -12270 0
-18199 -12116 -12231 -12272 0
-18199 -12116 -12229 -12274 0
-18199 -12116 -12227 -12276 0
-18199 -12116 -12225 -12278 0
-18199 -12116 -12223 -12280 0
-18199 -12116 -12221 -12282 0
-18199 -12116 -12219 -12284 0
-18199 -12116 -12217 -12286 0
-18199 -12116 -12216 -12288 0
-18199 -12114 -12239 -12267 0
-18199 -12114 -12237 -12268 0
-18199 -12114 -12235 -12270 0
-18199 -12114 -12233 -12272 0
-18199 -12114 -12231 -12274 0
-18199 -12114 -12229 -12276 0
-18199 -12114 -12227 -12278 0
-18199 -12114 -12225 -12280 0
-18199 -12114 -12223 -12282 0
-18199 -12114 -12221 -12284 0
-18199 -12114 -12219 -12286 0
-18199 -12114 -12217 -12288 0
-18199 -12114 -12216 -12290 0
-18199 -12112 -12241 -12267 0
-18199 -12112 -12239 -12268 0
-18199 -12112 -12237 -12270 0
-18199 -12112 -12235 -12272 0
-18199 -12112 -12233 -12274 0
-18199 -12112 -12231 -12276 0
-18199 -12112 -12229 -12278 0
-18199 -12112 -12227 -12280 0
-18199 -12112 -12225 -12282 0
-18199 -12112 -12223 -12284 0
-18199 -12112 -12221 -12286 0
-18199 -12112 -12219 -12288 0
-18199 -12112 -12217 -12290 0
-18199 -12112 -12216 -12292 0
-18199 -12111 -12243 -12267 0
-18199 -12111 -12241 -12268 0
-18199 -12111 -12239 -12270 0
-18199 -12111 -12237 -12272 0
-18199 -12111 -12235 -12274 0
-18199 -12111 -12233 -12276 0
-18199 -12111 -12231 -12278 0
-18199 -12111 -12229 -12280 0
-18199 -12111 -12227 -12282 0
-18199 -12111 -12225 -12284 0
-18199 -12111 -12223 -12286 0
-18199 -12111 -12221 -12288 0
-18199 -12111 -12219 -12290 0
-18199 -12111 -12217 -12292 0
-18199 -12111 -12216 -12294 0
18199 12294 0
18199 12216 12292 0
18199 12217 12290 0
18199 12219 12288 0
18199 12221 12286 0
18199 12223 12284 0
18199 12225 12282 0
18199 12227 12280 0
18199 12229 12278 0
18199 12231 12276 0
18199 12233 12274 0
18199 12235 12272 0
18199 12237 12270 0
18199 12239 12268 0
18199 12241 12267 0
18199 12243 0
18199 12245 0
18199 12247 0
18199 12249 0
18199 12251 0
18199 12253 0
18199 12255 0
18199 12257 0
18199 12259 0
18199 12261 0
18199 12263 0
18199 12265 0
18199 12111 12292 0
18199 12111 12216 12290 0
18199 12111 12217 12288 0
18199 12111 12219 12286 0
18199 12111 12221 12284 0
18199 12111 12223 12282 0
18199 12111 12225 12280 0
18199 12111 12227 12278 0
18199 12111 12229 12276 0
18199 12111 12231 12274 0
18199 12111 12233 12272 0
18199 12111 12235 12270 0
18199 12111 12237 12268 0
18199 12111 12239 12267 0
18199 12111 12241 0
18199 12111 12243 0
18199 12111 12245 0
18199 12111 12247 0
18199 12111 12249 0
18199 12111 12251 0
18199 12111 12253 0
18199 12111 12255 0
18199 12111 12257 0
18199 12111 12259 0
18199 12111 12261 0
18199 12111 12263 0
18199 12111 12265 0
18199 12112 12290 0
18199 12112 12216 12288 0
18199 12112 12217 12286 0
18199 12112 12219 12284 0
18199 12112 12221 12282 0
18199 12112 12223 12280 0
18199 12112 12225 12278 0
18199 12112 12227 12276 0
18199 12112 12229 12274 0
18199 12112 12231 12272 0
18199 12112 12233 12270 0
18199 12112 12235 12268 0
18199 12112 12237 12267 0
18199 12112 12239 0
18199 12112 12241 0
18199 12112 12243 0
18199 12112 12245 0
18199 12112 12247 0
18199 12112 12249 0
18199 12112 12251 0
18199 12112 12253 0
18199 12112 12255 0
18199 12112 12257 0
18199 12112 12259 0
18199 12112 12261 0
18199 12112 12263 0
18199 12112 12265 0
18199 12114 12288 0
18199 12114 12216 12286 0
18199 12114 12217 12284 0
18199 12114 12219 12282 0
18199 12114 12221 12280 0
18199 12114 12223 12278 0
18199 12114 12225 12276 0
18199 12114 12227 12274 0
18199 12114 12229 12272 0
18199 12114 12231 12270 0
18199 12114 12233 12268 0
18199 12114 12235 12267 0
18199 12114 12237 0
18199 12114 12239 0
18199 12114 12241 0
18199 12114 12243 0
18199 12114 12245 0
18199 12114 12247 0
18199 12114 12249 0
18199 12114 12251 0
18199 12114 12253 0
18199 12114 12255 0
18199 12114 12257 0
18199 12114 12259 0
18199 12114 12261 0
18199 12114 12263 0
18199 12114 12265 0
18199 12116 12286 0
18199 12116 12216 12284 0
18199 12116 12217 12282 0
18199 12116 12219 12280 0
18199 12116 12221 12278 0
18199 12116 12223 12276 0
18199 12116 12225 12274 0
18199 12116 12227 12272 0
18199 12116 12229 12270 0
18199 12116 12231 12268 0
18199 12116 12233 12267 0
18199 12116 12235 0
18199 12116 12237 0
18199 12116 12239 0
18199 12116 12241 0
18199 12116 12243 0
18199 12116 12245 0
18199 12116 12247 0
18199 12116 12249 0
18199 12116 12251 0
18199 12116 12253 0
18199 12116 12255 0
18199 12116 12257 0
18199 12116 12259 0
18199 12116 12261 0
18199 12116 12263 0
18199 12116 12265 0
18199 12118 12284 0
18199 12118 12216 12282 0
18199 12118 12217 12280 0
18199 12118 12219 12278 0
18199 12118 12221 12276 0
18199 12118 12223 12274 0
18199 12118 12225 12272 0
18199 12118 12227 12270 0
18199 12118 12229 12268 0
18199 12118 12231 12267 0
18199 12118 12233 0
18199 12118 12235 0
18199 12118 12237 0
18199 12118 12239 0
18199 12118 12241 0
18199 12118 12243 0
18199 12118 12245 0
18199 12118 12247 0
18199 12118 12249 0
18199 12118 12251 0
18199 12118 12253 0
18199 12118 12255 0
18199 12118 12257 0
18199 12118 12259 0
18199 12118 12261 0
18199 12118 12263 0
18199 12118 12265 0
18199 12120 12282 0
18199 12120 12216 12280 0
18199 12120 12217 12278 0
18199 12120 12219 12276 0
18199 12120 12221 12274 0
18199 12120 12223 12272 0
18199 12120 12225 12270 0
18199 12120 12227 12268 0
18199 12120 12229 12267 0
18199 12120 12231 0
18199 12120 12233 0
18199 12120 12235 0
18199 12120 12237 0
18199 12120 12239 0
18199 12120 12241 0
18199 12120 12243 0
18199 12120 12245 0
18199 12120 12247 0
18199 12120 12249 0
18199 12120 12251 0
18199 12120 12253 0
18199 12120 12255 0
18199 12120 12257 0
18199 12120 12259 0
18199 12120 12261 0
18199 12120 12263 0
18199 12120 12265 0
18199 12122 12280 0
18199 12122 12216 12278 0
18199 12122 12217 12276 0
18199 12122 12219 12274 0
18199 12122 12221 12272 0
18199 12122 12223 12270 0
18199 12122 12225 12268 0
18199 12122 12227 12267 0
18199 12122 12229 0
18199 12122 12231 0
18199 12122 12233 0
18199 12122 12235 0
18199 12122 12237 0
18199 12122 12239 0
18199 12122 12241 0
18199 12122 12243 0
18199 12122 12245 0
18199 12122 12247 0
18199 12122 12249 0
18199 12122 12251 0
18199 12122 12253 0
18199 12122 12255 0
18199 12122 12257 0
18199 12122 12259 0
18199 12122 12261 0
18199 12122 12263 0
18199 12122 12265 0
18199 12124 12278 0
18199 12124 12216 12276 0
18199 12124 12217 12274 0
18199 12124 12219 12272 0
18199 12124 12221 12270 0
18199 12124 12223 12268 0
18199 12124 12225 12267 0
18199 12124 12227 0
18199 12124 12229 0
18199 12124 12231 0
18199 12124 12233 0
18199 12124 12235 0
18199 12124 12237 0
18199 12124 12239 0
18199 12124 12241 0
18199 12124 12243 0
18199 12124 12245 0
18199 12124 12247 0
18199 12124 12249 0
18199 12124 12251 0
18199 12124 12253 0
18199 12124 12255 0
18199 12124 12257 0
18199 12124 12259 0
18199 12124 12261 0
18199 12124 12263 0
18199 12124 12265 0
18199 12126 12276 0
18199 12126 12216 12274 0
18199 12126 12217 12272 0
18199 12126 12219 12270 0
18199 12126 12221 12268 0
18199 12126 12223 12267 0
18199 12126 12225 0
18199 12126 12227 0
18199 12126 12229 0
18199 12126 12231 0
18199 12126 12233 0
18199 12126 12235 0
18199 12126 12237 0
18199 12126 12239 0
18199 12126 12241 0
18199 12126 12243 0
18199 12126 12245 0
18199 12126 12247 0
18199 12126 12249 0
18199 12126 12251 0
18199 12126 12253 0
18199 12126 12255 0
18199 12126 12257 0
18199 12126 12259 0
18199 12126 12261 0
18199 12126 12263 0
18199 12126 12265 0
18199 12128 12274 0
18199 12128 12216 12272 0
18199 12128 12217 12270 0
18199 12128 12219 12268 0
18199 12128 12221 12267 0
18199 12128 12223 0
18199 12128 12225 0
18199 12128 12227 0
18199 12128 12229 0
18199 12128 12231 0
18199 12128 12233 0
18199 12128 12235 0
18199 12128 12237 0
18199 12128 12239 0
18199 12128 12241 0
18199 12128 12243 0
18199 12128 12245 0
18199 12128 12247 0
18199 12128 12249 0
18199 12128 12251 0
18199 12128 12253 0
18199 12128 12255 0
18199 12128 12257 0
18199 12128 12259 0
18199 12128 12261 0
18199 12128 12263 0
18199 12128 12265 0
18199 12130 12272 0
18199 12130 12216 12270 0
18199 12130 12217 12268 0
18199 12130 12219 12267 0
18199 12130 12221 0
18199 12130 12223 0
18199 12130 12225 0
18199 12130 12227 0
18199 12130 12229 0
18199 12130 12231 0
18199 12130 12233 0
18199 12130 12235 0
18199 12130 12237 0
18199 12130 12239 0
18199 12130 12241 0
18199 12130 12243 0
18199 12130 12245 0
18199 12130 12247 0
18199 12130 12249 0
18199 12130 12251 0
18199 12130 12253 0
18199 12130 12255 0
18199 12130 12257 0
18199 12130 12259 0
18199 12130 12261 0
18199 12130 12263 0
18199 12130 12265 0
18199 12132 12270 0
18199 12132 12216 12268 0
18199 12132 12217 12267 0
18199 12132 12219 0
18199 12132 12221 0
18199 12132 12223 0
18199 12132 12225 0
18199 12132 12227 0
18199 12132 12229 0
18199 12132 12231 0
18199 12132 12233 0
18199 12132 12235 0
18199 12132 12237 0
18199 12132 12239 0
18199 12132 12241 0
18199 12132 12243 0
18199 12132 12245 0
18199 12132 12247 0
18199 12132 12249 0
18199 12132 12251 0
18199 12132 12253 0
18199 12132 12255 0
18199 12132 12257 0
18199 12132 12259 0
18199 12132 12261 0
18199 12132 12263 0
18199 12132 12265 0
18199 12134 12268 0
18199 12134 12216 12267 0
18199 12134 12217 0
18199 12134 12219 0
18199 12134 12221 0
18199 12134 12223 0
18199 12134 12225 0
18199 12134 12227 0
18199 12134 12229 0
18199 12134 12231 0
18199 12134 12233 0
18199 12134 12235 0
18199 12134 12237 0
18199 12134 12239 0
18199 12134 12241 0
18199 12134 12243 0
18199 12134 12245 0
18199 12134 12247 0
18199 12134 12249 0
18199 12134 12251 0
18199 12134 12253 0
18199 12134 12255 0
18199 12134 12257 0
18199 12134 12259 0
18199 12134 12261 0
18199 12134 12263 0
18199 12134 12265 0
18199 12136 12267 0
18199 12136 12216 0
18199 12136 12217 0
18199 12136 12219 0
18199 12136 12221 0
18199 12136 12223 0
18199 12136 12225 0
18199 12136 12227 0
18199 12136 12229 0
18199 12136 12231 0
18199 12136 12233 0
18199 12136 12235 0
18199 12136 12237 0
18199 12136 12239 0
18199 12136 12241 0
18199 12136 12243 0
18199 12136 12245 0
18199 12136 12247 0
18199 12136 12249 0
18199 12136 12251 0
18199 12136 12253 0
18199 12136 12255 0
18199 12136 12257 0
18199 12136 12259 0
18199 12136 12261 0
18199 12136 12263 0
18199 12136 12265 0
18199 12138 0
18199 12138 12216 0
18199 12138 12217 0
18199 12138 12219 0
18199 12138 12221 0
18199 12138 12223 0
18199 12138 12225 0
18199 12138 12227 0
18199 12138 12229 0
18199 12138 12231 0
18199 12138 12233 0
18199 12138 12235 0
18199 12138 12237 0
18199 12138 12239 0
18199 12138 12241 0
18199 12138 12243 0
18199 12138 12245 0
18199 12138 12247 0
18199 12138 12249 0
18199 12138 12251 0
18199 12138 12253 0
18199 12138 12255 0
18199 12138 12257 0
18199 12138 12259 0
18199 12138 12261 0
18199 12138 12263 0
18199 12138 12265 0
18199 12140 0
18199 12140 12216 0
18199 12140 12217 0
18199 12140 12219 0
18199 12140 12221 0
18199 12140 12223 0
18199 12140 12225 0
18199 12140 12227 0
18199 12140 12229 0
18199 12140 12231 0
18199 12140 12233 0
18199 12140 12235 0
18199 12140 12237 0
18199 12140 12239 0
18199 12140 12241 0
18199 12140 12243 0
18199 12140 12245 0
18199 12140 12247 0
18199 12140 12249 0
18199 12140 12251 0
18199 12140 12253 0
18199 12140 12255 0
18199 12140 12257 0
18199 12140 12259 0
18199 12140 12261 0
18199 12140 12263 0
18199 12140 12265 0
18199 12142 0
18199 12142 12216 0
18199 12142 12217 0
18199 12142 12219 0
18199 12142 12221 0
18199 12142 12223 0
18199 12142 12225 0
18199 12142 12227 0
18199 12142 12229 0
18199 12142 12231 0
18199 12142 12233 0
18199 12142 12235 0
18199 12142 12237 0
18199 12142 12239 0
18199 12142 12241 0
18199 12142 12243 0
18199 12142 12245 0
18199 12142 12247 0
18199 12142 12249 0
18199 12142 12251 0
18199 12142 12253 0
18199 12142 12255 0
18199 12142 12257 0
18199 12142 12259 0
18199 12142 12261 0
18199 12142 12263 0
18199 12142 12265 0
18199 12144 0
18199 12144 12216 0
18199 12144 12217 0
18199 12144 12219 0
18199 12144 12221 0
18199 12144 12223 0
18199 12144 12225 0
18199 12144 12227 0
18199 12144 12229 0
18199 12144 12231 0
18199 12144 12233 0
18199 12144 12235 0
18199 12144 12237 0
18199 12144 12239 0
18199 12144 12241 0
18199 12144 12243 0
18199 12144 12245 0
18199 12144 12247 0
18199 12144 12249 0
18199 12144 12251 0
18199 12144 12253 0
18199 12144 12255 0
18199 12144 12257 0
18199 12144 12259 0
18199 12144 12261 0
18199 12144 12263 0
18199 12144 12265 0
c (((aux469 + aux472 + aux473)<=1)=tv=SATLiteral(18200))
-18200 12356 0
-18200 12350 12355 0
-18200 12351 0
-18200 12353 0
-18200 12341 12355 0
-18200 12341 12350 0
-18200 12341 12351 0
-18200 12341 12353 0
-18200 12342 0
-18200 12342 12350 0
-18200 12342 12351 0
-18200 12342 12353 0
18200 -12342 -12350 -12355 0
18200 -12341 -12351 -12355 0
18200 -12341 -12350 -12356 0
c ((1<=(aux469 + aux472 + aux473))=tv=SATLiteral(18201))
-18201 -12341 -12350 -12355 0
18201 12355 0
18201 12350 0
18201 12351 0
18201 12353 0
18201 12341 0
18201 12341 12350 0
18201 12341 12351 0
18201 12341 12353 0
18201 12342 0
18201 12342 12350 0
18201 12342 12351 0
18201 12342 12353 0
c (((aux475 + aux478 + aux479)<=1)=tv=SATLiteral(18202))
-18202 12380 0
-18202 12374 12379 0
-18202 12375 0
-18202 12377 0
-18202 12365 12379 0
-18202 12365 12374 0
-18202 12365 12375 0
-18202 12365 12377 0
-18202 12366 0
-18202 12366 12374 0
-18202 12366 12375 0
-18202 12366 12377 0
18202 -12366 -12374 -12379 0
18202 -12365 -12375 -12379 0
18202 -12365 -12374 -12380 0
c ((1<=(aux475 + aux478 + aux479))=tv=SATLiteral(18203))
-18203 -12365 -12374 -12379 0
18203 12379 0
18203 12374 0
18203 12375 0
18203 12377 0
18203 12365 0
18203 12365 12374 0
18203 12365 12375 0
18203 12365 12377 0
18203 12366 0
18203 12366 12374 0
18203 12366 12375 0
18203 12366 12377 0
c (((aux481 + aux484 + aux485)<=1)=tv=SATLiteral(18204))
-18204 12404 0
-18204 12398 12403 0
-18204 12399 0
-18204 12401 0
-18204 12389 12403 0
-18204 12389 12398 0
-18204 12389 12399 0
-18204 12389 12401 0
-18204 12390 0
-18204 12390 12398 0
-18204 12390 12399 0
-18204 12390 12401 0
18204 -12390 -12398 -12403 0
18204 -12389 -12399 -12403 0
18204 -12389 -12398 -12404 0
c ((1<=(aux481 + aux484 + aux485))=tv=SATLiteral(18205))
-18205 -12389 -12398 -12403 0
18205 12403 0
18205 12398 0
18205 12399 0
18205 12401 0
18205 12389 0
18205 12389 12398 0
18205 12389 12399 0
18205 12389 12401 0
18205 12390 0
18205 12390 12398 0
18205 12390 12399 0
18205 12390 12401 0
c (((aux487 + aux490 + aux491)<=1)=tv=SATLiteral(18206))
-18206 12428 0
-18206 12422 12427 0
-18206 12423 0
-18206 12425 0
-18206 12413 12427 0
-18206 12413 12422 0
-18206 12413 12423 0
-18206 12413 12425 0
-18206 12414 0
-18206 12414 12422 0
-18206 12414 12423 0
-18206 12414 12425 0
18206 -12414 -12422 -12427 0
18206 -12413 -12423 -12427 0
18206 -12413 -12422 -12428 0
c ((1<=(aux487 + aux490 + aux491))=tv=SATLiteral(18207))
-18207 -12413 -12422 -12427 0
18207 12427 0
18207 12422 0
18207 12423 0
18207 12425 0
18207 12413 0
18207 12413 12422 0
18207 12413 12423 0
18207 12413 12425 0
18207 12414 0
18207 12414 12422 0
18207 12414 12423 0
18207 12414 12425 0
c (((aux493 + aux496 + aux497)<=1)=tv=SATLiteral(18208))
-18208 12452 0
-18208 12446 12451 0
-18208 12447 0
-18208 12449 0
-18208 12437 12451 0
-18208 12437 12446 0
-18208 12437 12447 0
-18208 12437 12449 0
-18208 12438 0
-18208 12438 12446 0
-18208 12438 12447 0
-18208 12438 12449 0
18208 -12438 -12446 -12451 0
18208 -12437 -12447 -12451 0
18208 -12437 -12446 -12452 0
c ((1<=(aux493 + aux496 + aux497))=tv=SATLiteral(18209))
-18209 -12437 -12446 -12451 0
18209 12451 0
18209 12446 0
18209 12447 0
18209 12449 0
18209 12437 0
18209 12437 12446 0
18209 12437 12447 0
18209 12437 12449 0
18209 12438 0
18209 12438 12446 0
18209 12438 12447 0
18209 12438 12449 0
c (((aux499 + aux502 + aux503)<=1)=tv=SATLiteral(18210))
-18210 12476 0
-18210 12470 12475 0
-18210 12471 0
-18210 12473 0
-18210 12461 12475 0
-18210 12461 12470 0
-18210 12461 12471 0
-18210 12461 12473 0
-18210 12462 0
-18210 12462 12470 0
-18210 12462 12471 0
-18210 12462 12473 0
18210 -12462 -12470 -12475 0
18210 -12461 -12471 -12475 0
18210 -12461 -12470 -12476 0
c ((1<=(aux499 + aux502 + aux503))=tv=SATLiteral(18211))
-18211 -12461 -12470 -12475 0
18211 12475 0
18211 12470 0
18211 12471 0
18211 12473 0
18211 12461 0
18211 12461 12470 0
18211 12461 12471 0
18211 12461 12473 0
18211 12462 0
18211 12462 12470 0
18211 12462 12471 0
18211 12462 12473 0
c (((aux505 + aux508 + aux509)<=1)=tv=SATLiteral(18212))
-18212 12500 0
-18212 12494 12499 0
-18212 12495 0
-18212 12497 0
-18212 12485 12499 0
-18212 12485 12494 0
-18212 12485 12495 0
-18212 12485 12497 0
-18212 12486 0
-18212 12486 12494 0
-18212 12486 12495 0
-18212 12486 12497 0
18212 -12486 -12494 -12499 0
18212 -12485 -12495 -12499 0
18212 -12485 -12494 -12500 0
c ((1<=(aux505 + aux508 + aux509))=tv=SATLiteral(18213))
-18213 -12485 -12494 -12499 0
18213 12499 0
18213 12494 0
18213 12495 0
18213 12497 0
18213 12485 0
18213 12485 12494 0
18213 12485 12495 0
18213 12485 12497 0
18213 12486 0
18213 12486 12494 0
18213 12486 12495 0
18213 12486 12497 0
c (((aux511 + aux514 + aux515)<=1)=tv=SATLiteral(18214))
-18214 12524 0
-18214 12518 12523 0
-18214 12519 0
-18214 12521 0
-18214 12509 12523 0
-18214 12509 12518 0
-18214 12509 12519 0
-18214 12509 12521 0
-18214 12510 0
-18214 12510 12518 0
-18214 12510 12519 0
-18214 12510 12521 0
18214 -12510 -12518 -12523 0
18214 -12509 -12519 -12523 0
18214 -12509 -12518 -12524 0
c ((1<=(aux511 + aux514 + aux515))=tv=SATLiteral(18215))
-18215 -12509 -12518 -12523 0
18215 12523 0
18215 12518 0
18215 12519 0
18215 12521 0
18215 12509 0
18215 12509 12518 0
18215 12509 12519 0
18215 12509 12521 0
18215 12510 0
18215 12510 12518 0
18215 12510 12519 0
18215 12510 12521 0
c (((aux517 + aux520 + aux521)<=1)=tv=SATLiteral(18216))
-18216 12548 0
-18216 12542 12547 0
-18216 12543 0
-18216 12545 0
-18216 12533 12547 0
-18216 12533 12542 0
-18216 12533 12543 0
-18216 12533 12545 0
-18216 12534 0
-18216 12534 12542 0
-18216 12534 12543 0
-18216 12534 12545 0
18216 -12534 -12542 -12547 0
18216 -12533 -12543 -12547 0
18216 -12533 -12542 -12548 0
c ((1<=(aux517 + aux520 + aux521))=tv=SATLiteral(18217))
-18217 -12533 -12542 -12547 0
18217 12547 0
18217 12542 0
18217 12543 0
18217 12545 0
18217 12533 0
18217 12533 12542 0
18217 12533 12543 0
18217 12533 12545 0
18217 12534 0
18217 12534 12542 0
18217 12534 12543 0
18217 12534 12545 0
c (((aux523 + aux526 + aux527)<=1)=tv=SATLiteral(18218))
-18218 12572 0
-18218 12566 12571 0
-18218 12567 0
-18218 12569 0
-18218 12557 12571 0
-18218 12557 12566 0
-18218 12557 12567 0
-18218 12557 12569 0
-18218 12558 0
-18218 12558 12566 0
-18218 12558 12567 0
-18218 12558 12569 0
18218 -12558 -12566 -12571 0
18218 -12557 -12567 -12571 0
18218 -12557 -12566 -12572 0
c ((1<=(aux523 + aux526 + aux527))=tv=SATLiteral(18219))
-18219 -12557 -12566 -12571 0
18219 12571 0
18219 12566 0
18219 12567 0
18219 12569 0
18219 12557 0
18219 12557 12566 0
18219 12557 12567 0
18219 12557 12569 0
18219 12558 0
18219 12558 12566 0
18219 12558 12567 0
18219 12558 12569 0
c (((aux529 + aux532 + aux533)<=1)=tv=SATLiteral(18220))
-18220 12596 0
-18220 12590 12595 0
-18220 12591 0
-18220 12593 0
-18220 12581 12595 0
-18220 12581 12590 0
-18220 12581 12591 0
-18220 12581 12593 0
-18220 12582 0
-18220 12582 12590 0
-18220 12582 12591 0
-18220 12582 12593 0
18220 -12582 -12590 -12595 0
18220 -12581 -12591 -12595 0
18220 -12581 -12590 -12596 0
c ((1<=(aux529 + aux532 + aux533))=tv=SATLiteral(18221))
-18221 -12581 -12590 -12595 0
18221 12595 0
18221 12590 0
18221 12591 0
18221 12593 0
18221 12581 0
18221 12581 12590 0
18221 12581 12591 0
18221 12581 12593 0
18221 12582 0
18221 12582 12590 0
18221 12582 12591 0
18221 12582 12593 0
c (((aux535 + aux538 + aux539)<=1)=tv=SATLiteral(18222))
-18222 12620 0
-18222 12614 12619 0
-18222 12615 0
-18222 12617 0
-18222 12605 12619 0
-18222 12605 12614 0
-18222 12605 12615 0
-18222 12605 12617 0
-18222 12606 0
-18222 12606 12614 0
-18222 12606 12615 0
-18222 12606 12617 0
18222 -12606 -12614 -12619 0
18222 -12605 -12615 -12619 0
18222 -12605 -12614 -12620 0
c ((1<=(aux535 + aux538 + aux539))=tv=SATLiteral(18223))
-18223 -12605 -12614 -12619 0
18223 12619 0
18223 12614 0
18223 12615 0
18223 12617 0
18223 12605 0
18223 12605 12614 0
18223 12605 12615 0
18223 12605 12617 0
18223 12606 0
18223 12606 12614 0
18223 12606 12615 0
18223 12606 12617 0
c (((aux541 + aux544 + aux545)<=1)=tv=SATLiteral(18224))
-18224 12644 0
-18224 12638 12643 0
-18224 12639 0
-18224 12641 0
-18224 12629 12643 0
-18224 12629 12638 0
-18224 12629 12639 0
-18224 12629 12641 0
-18224 12630 0
-18224 12630 12638 0
-18224 12630 12639 0
-18224 12630 12641 0
18224 -12630 -12638 -12643 0
18224 -12629 -12639 -12643 0
18224 -12629 -12638 -12644 0
c ((1<=(aux541 + aux544 + aux545))=tv=SATLiteral(18225))
-18225 -12629 -12638 -12643 0
18225 12643 0
18225 12638 0
18225 12639 0
18225 12641 0
18225 12629 0
18225 12629 12638 0
18225 12629 12639 0
18225 12629 12641 0
18225 12630 0
18225 12630 12638 0
18225 12630 12639 0
18225 12630 12641 0
c (((aux547 + aux550 + aux551)<=1)=tv=SATLiteral(18226))
-18226 12668 0
-18226 12662 12667 0
-18226 12663 0
-18226 12665 0
-18226 12653 12667 0
-18226 12653 12662 0
-18226 12653 12663 0
-18226 12653 12665 0
-18226 12654 0
-18226 12654 12662 0
-18226 12654 12663 0
-18226 12654 12665 0
18226 -12654 -12662 -12667 0
18226 -12653 -12663 -12667 0
18226 -12653 -12662 -12668 0
c ((1<=(aux547 + aux550 + aux551))=tv=SATLiteral(18227))
-18227 -12653 -12662 -12667 0
18227 12667 0
18227 12662 0
18227 12663 0
18227 12665 0
18227 12653 0
18227 12653 12662 0
18227 12653 12663 0
18227 12653 12665 0
18227 12654 0
18227 12654 12662 0
18227 12654 12663 0
18227 12654 12665 0
c (((aux553 + aux556 + aux557)<=1)=tv=SATLiteral(18228))
-18228 12692 0
-18228 12686 12691 0
-18228 12687 0
-18228 12689 0
-18228 12677 12691 0
-18228 12677 12686 0
-18228 12677 12687 0
-18228 12677 12689 0
-18228 12678 0
-18228 12678 12686 0
-18228 12678 12687 0
-18228 12678 12689 0
18228 -12678 -12686 -12691 0
18228 -12677 -12687 -12691 0
18228 -12677 -12686 -12692 0
c ((1<=(aux553 + aux556 + aux557))=tv=SATLiteral(18229))
-18229 -12677 -12686 -12691 0
18229 12691 0
18229 12686 0
18229 12687 0
18229 12689 0
18229 12677 0
18229 12677 12686 0
18229 12677 12687 0
18229 12677 12689 0
18229 12678 0
18229 12678 12686 0
18229 12678 12687 0
18229 12678 12689 0
c (((aux559 + aux562 + aux563)<=1)=tv=SATLiteral(18230))
-18230 12716 0
-18230 12710 12715 0
-18230 12711 0
-18230 12713 0
-18230 12701 12715 0
-18230 12701 12710 0
-18230 12701 12711 0
-18230 12701 12713 0
-18230 12702 0
-18230 12702 12710 0
-18230 12702 12711 0
-18230 12702 12713 0
18230 -12702 -12710 -12715 0
18230 -12701 -12711 -12715 0
18230 -12701 -12710 -12716 0
c ((1<=(aux559 + aux562 + aux563))=tv=SATLiteral(18231))
-18231 -12701 -12710 -12715 0
18231 12715 0
18231 12710 0
18231 12711 0
18231 12713 0
18231 12701 0
18231 12701 12710 0
18231 12701 12711 0
18231 12701 12713 0
18231 12702 0
18231 12702 12710 0
18231 12702 12711 0
18231 12702 12713 0
c (((aux565 + aux568 + aux569)<=1)=tv=SATLiteral(18232))
-18232 12740 0
-18232 12734 12739 0
-18232 12735 0
-18232 12737 0
-18232 12725 12739 0
-18232 12725 12734 0
-18232 12725 12735 0
-18232 12725 12737 0
-18232 12726 0
-18232 12726 12734 0
-18232 12726 12735 0
-18232 12726 12737 0
18232 -12726 -12734 -12739 0
18232 -12725 -12735 -12739 0
18232 -12725 -12734 -12740 0
c ((1<=(aux565 + aux568 + aux569))=tv=SATLiteral(18233))
-18233 -12725 -12734 -12739 0
18233 12739 0
18233 12734 0
18233 12735 0
18233 12737 0
18233 12725 0
18233 12725 12734 0
18233 12725 12735 0
18233 12725 12737 0
18233 12726 0
18233 12726 12734 0
18233 12726 12735 0
18233 12726 12737 0
c (((aux571 + aux574 + aux575)<=1)=tv=SATLiteral(18234))
-18234 12764 0
-18234 12758 12763 0
-18234 12759 0
-18234 12761 0
-18234 12749 12763 0
-18234 12749 12758 0
-18234 12749 12759 0
-18234 12749 12761 0
-18234 12750 0
-18234 12750 12758 0
-18234 12750 12759 0
-18234 12750 12761 0
18234 -12750 -12758 -12763 0
18234 -12749 -12759 -12763 0
18234 -12749 -12758 -12764 0
c ((1<=(aux571 + aux574 + aux575))=tv=SATLiteral(18235))
-18235 -12749 -12758 -12763 0
18235 12763 0
18235 12758 0
18235 12759 0
18235 12761 0
18235 12749 0
18235 12749 12758 0
18235 12749 12759 0
18235 12749 12761 0
18235 12750 0
18235 12750 12758 0
18235 12750 12759 0
18235 12750 12761 0
c (((aux577 + aux580 + aux581)<=1)=tv=SATLiteral(18236))
-18236 12788 0
-18236 12782 12787 0
-18236 12783 0
-18236 12785 0
-18236 12773 12787 0
-18236 12773 12782 0
-18236 12773 12783 0
-18236 12773 12785 0
-18236 12774 0
-18236 12774 12782 0
-18236 12774 12783 0
-18236 12774 12785 0
18236 -12774 -12782 -12787 0
18236 -12773 -12783 -12787 0
18236 -12773 -12782 -12788 0
c ((1<=(aux577 + aux580 + aux581))=tv=SATLiteral(18237))
-18237 -12773 -12782 -12787 0
18237 12787 0
18237 12782 0
18237 12783 0
18237 12785 0
18237 12773 0
18237 12773 12782 0
18237 12773 12783 0
18237 12773 12785 0
18237 12774 0
18237 12774 12782 0
18237 12774 12783 0
18237 12774 12785 0
c (((aux583 + aux586 + aux587)<=1)=tv=SATLiteral(18238))
-18238 12812 0
-18238 12806 12811 0
-18238 12807 0
-18238 12809 0
-18238 12797 12811 0
-18238 12797 12806 0
-18238 12797 12807 0
-18238 12797 12809 0
-18238 12798 0
-18238 12798 12806 0
-18238 12798 12807 0
-18238 12798 12809 0
18238 -12798 -12806 -12811 0
18238 -12797 -12807 -12811 0
18238 -12797 -12806 -12812 0
c ((1<=(aux583 + aux586 + aux587))=tv=SATLiteral(18239))
-18239 -12797 -12806 -12811 0
18239 12811 0
18239 12806 0
18239 12807 0
18239 12809 0
18239 12797 0
18239 12797 12806 0
18239 12797 12807 0
18239 12797 12809 0
18239 12798 0
18239 12798 12806 0
18239 12798 12807 0
18239 12798 12809 0
c (((aux589 + aux592 + aux593)<=1)=tv=SATLiteral(18240))
-18240 12836 0
-18240 12830 12835 0
-18240 12831 0
-18240 12833 0
-18240 12821 12835 0
-18240 12821 12830 0
-18240 12821 12831 0
-18240 12821 12833 0
-18240 12822 0
-18240 12822 12830 0
-18240 12822 12831 0
-18240 12822 12833 0
18240 -12822 -12830 -12835 0
18240 -12821 -12831 -12835 0
18240 -12821 -12830 -12836 0
c ((1<=(aux589 + aux592 + aux593))=tv=SATLiteral(18241))
-18241 -12821 -12830 -12835 0
18241 12835 0
18241 12830 0
18241 12831 0
18241 12833 0
18241 12821 0
18241 12821 12830 0
18241 12821 12831 0
18241 12821 12833 0
18241 12822 0
18241 12822 12830 0
18241 12822 12831 0
18241 12822 12833 0
c (((aux595 + aux598 + aux599)<=1)=tv=SATLiteral(18242))
-18242 12860 0
-18242 12854 12859 0
-18242 12855 0
-18242 12857 0
-18242 12845 12859 0
-18242 12845 12854 0
-18242 12845 12855 0
-18242 12845 12857 0
-18242 12846 0
-18242 12846 12854 0
-18242 12846 12855 0
-18242 12846 12857 0
18242 -12846 -12854 -12859 0
18242 -12845 -12855 -12859 0
18242 -12845 -12854 -12860 0
c ((1<=(aux595 + aux598 + aux599))=tv=SATLiteral(18243))
-18243 -12845 -12854 -12859 0
18243 12859 0
18243 12854 0
18243 12855 0
18243 12857 0
18243 12845 0
18243 12845 12854 0
18243 12845 12855 0
18243 12845 12857 0
18243 12846 0
18243 12846 12854 0
18243 12846 12855 0
18243 12846 12857 0
c (((aux601 + aux604 + aux605)<=1)=tv=SATLiteral(18244))
-18244 12884 0
-18244 12878 12883 0
-18244 12879 0
-18244 12881 0
-18244 12869 12883 0
-18244 12869 12878 0
-18244 12869 12879 0
-18244 12869 12881 0
-18244 12870 0
-18244 12870 12878 0
-18244 12870 12879 0
-18244 12870 12881 0
18244 -12870 -12878 -12883 0
18244 -12869 -12879 -12883 0
18244 -12869 -12878 -12884 0
c ((1<=(aux601 + aux604 + aux605))=tv=SATLiteral(18245))
-18245 -12869 -12878 -12883 0
18245 12883 0
18245 12878 0
18245 12879 0
18245 12881 0
18245 12869 0
18245 12869 12878 0
18245 12869 12879 0
18245 12869 12881 0
18245 12870 0
18245 12870 12878 0
18245 12870 12879 0
18245 12870 12881 0
c (((aux607 + aux610 + aux611)<=1)=tv=SATLiteral(18246))
-18246 12908 0
-18246 12902 12907 0
-18246 12903 0
-18246 12905 0
-18246 12893 12907 0
-18246 12893 12902 0
-18246 12893 12903 0
-18246 12893 12905 0
-18246 12894 0
-18246 12894 12902 0
-18246 12894 12903 0
-18246 12894 12905 0
18246 -12894 -12902 -12907 0
18246 -12893 -12903 -12907 0
18246 -12893 -12902 -12908 0
c ((1<=(aux607 + aux610 + aux611))=tv=SATLiteral(18247))
-18247 -12893 -12902 -12907 0
18247 12907 0
18247 12902 0
18247 12903 0
18247 12905 0
18247 12893 0
18247 12893 12902 0
18247 12893 12903 0
18247 12893 12905 0
18247 12894 0
18247 12894 12902 0
18247 12894 12903 0
18247 12894 12905 0
c (((aux613 + aux616 + aux617)<=1)=tv=SATLiteral(18248))
-18248 12932 0
-18248 12926 12931 0
-18248 12927 0
-18248 12929 0
-18248 12917 12931 0
-18248 12917 12926 0
-18248 12917 12927 0
-18248 12917 12929 0
-18248 12918 0
-18248 12918 12926 0
-18248 12918 12927 0
-18248 12918 12929 0
18248 -12918 -12926 -12931 0
18248 -12917 -12927 -12931 0
18248 -12917 -12926 -12932 0
c ((1<=(aux613 + aux616 + aux617))=tv=SATLiteral(18249))
-18249 -12917 -12926 -12931 0
18249 12931 0
18249 12926 0
18249 12927 0
18249 12929 0
18249 12917 0
18249 12917 12926 0
18249 12917 12927 0
18249 12917 12929 0
18249 12918 0
18249 12918 12926 0
18249 12918 12927 0
18249 12918 12929 0
c (((aux619 + aux622 + aux623)<=1)=tv=SATLiteral(18250))
-18250 12956 0
-18250 12950 12955 0
-18250 12951 0
-18250 12953 0
-18250 12941 12955 0
-18250 12941 12950 0
-18250 12941 12951 0
-18250 12941 12953 0
-18250 12942 0
-18250 12942 12950 0
-18250 12942 12951 0
-18250 12942 12953 0
18250 -12942 -12950 -12955 0
18250 -12941 -12951 -12955 0
18250 -12941 -12950 -12956 0
c ((1<=(aux619 + aux622 + aux623))=tv=SATLiteral(18251))
-18251 -12941 -12950 -12955 0
18251 12955 0
18251 12950 0
18251 12951 0
18251 12953 0
18251 12941 0
18251 12941 12950 0
18251 12941 12951 0
18251 12941 12953 0
18251 12942 0
18251 12942 12950 0
18251 12942 12951 0
18251 12942 12953 0
c (((aux625 + aux628 + aux629)<=1)=tv=SATLiteral(18252))
-18252 12980 0
-18252 12974 12979 0
-18252 12975 0
-18252 12977 0
-18252 12965 12979 0
-18252 12965 12974 0
-18252 12965 12975 0
-18252 12965 12977 0
-18252 12966 0
-18252 12966 12974 0
-18252 12966 12975 0
-18252 12966 12977 0
18252 -12966 -12974 -12979 0
18252 -12965 -12975 -12979 0
18252 -12965 -12974 -12980 0
c ((1<=(aux625 + aux628 + aux629))=tv=SATLiteral(18253))
-18253 -12965 -12974 -12979 0
18253 12979 0
18253 12974 0
18253 12975 0
18253 12977 0
18253 12965 0
18253 12965 12974 0
18253 12965 12975 0
18253 12965 12977 0
18253 12966 0
18253 12966 12974 0
18253 12966 12975 0
18253 12966 12977 0
c (((aux631 + aux634 + aux635)<=1)=tv=SATLiteral(18254))
-18254 13004 0
-18254 12998 13003 0
-18254 12999 0
-18254 13001 0
-18254 12989 13003 0
-18254 12989 12998 0
-18254 12989 12999 0
-18254 12989 13001 0
-18254 12990 0
-18254 12990 12998 0
-18254 12990 12999 0
-18254 12990 13001 0
18254 -12990 -12998 -13003 0
18254 -12989 -12999 -13003 0
18254 -12989 -12998 -13004 0
c ((1<=(aux631 + aux634 + aux635))=tv=SATLiteral(18255))
-18255 -12989 -12998 -13003 0
18255 13003 0
18255 12998 0
18255 12999 0
18255 13001 0
18255 12989 0
18255 12989 12998 0
18255 12989 12999 0
18255 12989 13001 0
18255 12990 0
18255 12990 12998 0
18255 12990 12999 0
18255 12990 13001 0
c (((aux637 + aux640 + aux641)<=1)=tv=SATLiteral(18256))
-18256 13028 0
-18256 13022 13027 0
-18256 13023 0
-18256 13025 0
-18256 13013 13027 0
-18256 13013 13022 0
-18256 13013 13023 0
-18256 13013 13025 0
-18256 13014 0
-18256 13014 13022 0
-18256 13014 13023 0
-18256 13014 13025 0
18256 -13014 -13022 -13027 0
18256 -13013 -13023 -13027 0
18256 -13013 -13022 -13028 0
c ((1<=(aux637 + aux640 + aux641))=tv=SATLiteral(18257))
-18257 -13013 -13022 -13027 0
18257 13027 0
18257 13022 0
18257 13023 0
18257 13025 0
18257 13013 0
18257 13013 13022 0
18257 13013 13023 0
18257 13013 13025 0
18257 13014 0
18257 13014 13022 0
18257 13014 13023 0
18257 13014 13025 0
c (((aux643 + aux646 + aux647)<=1)=tv=SATLiteral(18258))
-18258 13052 0
-18258 13046 13051 0
-18258 13047 0
-18258 13049 0
-18258 13037 13051 0
-18258 13037 13046 0
-18258 13037 13047 0
-18258 13037 13049 0
-18258 13038 0
-18258 13038 13046 0
-18258 13038 13047 0
-18258 13038 13049 0
18258 -13038 -13046 -13051 0
18258 -13037 -13047 -13051 0
18258 -13037 -13046 -13052 0
c ((1<=(aux643 + aux646 + aux647))=tv=SATLiteral(18259))
-18259 -13037 -13046 -13051 0
18259 13051 0
18259 13046 0
18259 13047 0
18259 13049 0
18259 13037 0
18259 13037 13046 0
18259 13037 13047 0
18259 13037 13049 0
18259 13038 0
18259 13038 13046 0
18259 13038 13047 0
18259 13038 13049 0
c (((aux649 + aux652 + aux653)<=1)=tv=SATLiteral(18260))
-18260 13076 0
-18260 13070 13075 0
-18260 13071 0
-18260 13073 0
-18260 13061 13075 0
-18260 13061 13070 0
-18260 13061 13071 0
-18260 13061 13073 0
-18260 13062 0
-18260 13062 13070 0
-18260 13062 13071 0
-18260 13062 13073 0
18260 -13062 -13070 -13075 0
18260 -13061 -13071 -13075 0
18260 -13061 -13070 -13076 0
c ((1<=(aux649 + aux652 + aux653))=tv=SATLiteral(18261))
-18261 -13061 -13070 -13075 0
18261 13075 0
18261 13070 0
18261 13071 0
18261 13073 0
18261 13061 0
18261 13061 13070 0
18261 13061 13071 0
18261 13061 13073 0
18261 13062 0
18261 13062 13070 0
18261 13062 13071 0
18261 13062 13073 0
c (((aux655 + aux658 + aux659)<=1)=tv=SATLiteral(18262))
-18262 13100 0
-18262 13094 13099 0
-18262 13095 0
-18262 13097 0
-18262 13085 13099 0
-18262 13085 13094 0
-18262 13085 13095 0
-18262 13085 13097 0
-18262 13086 0
-18262 13086 13094 0
-18262 13086 13095 0
-18262 13086 13097 0
18262 -13086 -13094 -13099 0
18262 -13085 -13095 -13099 0
18262 -13085 -13094 -13100 0
c ((1<=(aux655 + aux658 + aux659))=tv=SATLiteral(18263))
-18263 -13085 -13094 -13099 0
18263 13099 0
18263 13094 0
18263 13095 0
18263 13097 0
18263 13085 0
18263 13085 13094 0
18263 13085 13095 0
18263 13085 13097 0
18263 13086 0
18263 13086 13094 0
18263 13086 13095 0
18263 13086 13097 0
c (((aux661 + aux664 + aux665)<=1)=tv=SATLiteral(18264))
-18264 13124 0
-18264 13118 13123 0
-18264 13119 0
-18264 13121 0
-18264 13109 13123 0
-18264 13109 13118 0
-18264 13109 13119 0
-18264 13109 13121 0
-18264 13110 0
-18264 13110 13118 0
-18264 13110 13119 0
-18264 13110 13121 0
18264 -13110 -13118 -13123 0
18264 -13109 -13119 -13123 0
18264 -13109 -13118 -13124 0
c ((1<=(aux661 + aux664 + aux665))=tv=SATLiteral(18265))
-18265 -13109 -13118 -13123 0
18265 13123 0
18265 13118 0
18265 13119 0
18265 13121 0
18265 13109 0
18265 13109 13118 0
18265 13109 13119 0
18265 13109 13121 0
18265 13110 0
18265 13110 13118 0
18265 13110 13119 0
18265 13110 13121 0
c (((aux667 + aux670 + aux671)<=1)=tv=SATLiteral(18266))
-18266 13148 0
-18266 13142 13147 0
-18266 13143 0
-18266 13145 0
-18266 13133 13147 0
-18266 13133 13142 0
-18266 13133 13143 0
-18266 13133 13145 0
-18266 13134 0
-18266 13134 13142 0
-18266 13134 13143 0
-18266 13134 13145 0
18266 -13134 -13142 -13147 0
18266 -13133 -13143 -13147 0
18266 -13133 -13142 -13148 0
c ((1<=(aux667 + aux670 + aux671))=tv=SATLiteral(18267))
-18267 -13133 -13142 -13147 0
18267 13147 0
18267 13142 0
18267 13143 0
18267 13145 0
18267 13133 0
18267 13133 13142 0
18267 13133 13143 0
18267 13133 13145 0
18267 13134 0
18267 13134 13142 0
18267 13134 13143 0
18267 13134 13145 0
c (((aux673 + aux676 + aux677)<=1)=tv=SATLiteral(18268))
-18268 13172 0
-18268 13166 13171 0
-18268 13167 0
-18268 13169 0
-18268 13157 13171 0
-18268 13157 13166 0
-18268 13157 13167 0
-18268 13157 13169 0
-18268 13158 0
-18268 13158 13166 0
-18268 13158 13167 0
-18268 13158 13169 0
18268 -13158 -13166 -13171 0
18268 -13157 -13167 -13171 0
18268 -13157 -13166 -13172 0
c ((1<=(aux673 + aux676 + aux677))=tv=SATLiteral(18269))
-18269 -13157 -13166 -13171 0
18269 13171 0
18269 13166 0
18269 13167 0
18269 13169 0
18269 13157 0
18269 13157 13166 0
18269 13157 13167 0
18269 13157 13169 0
18269 13158 0
18269 13158 13166 0
18269 13158 13167 0
18269 13158 13169 0
c (((aux679 + aux682 + aux683)<=1)=tv=SATLiteral(18270))
-18270 13196 0
-18270 13190 13195 0
-18270 13191 0
-18270 13193 0
-18270 13181 13195 0
-18270 13181 13190 0
-18270 13181 13191 0
-18270 13181 13193 0
-18270 13182 0
-18270 13182 13190 0
-18270 13182 13191 0
-18270 13182 13193 0
18270 -13182 -13190 -13195 0
18270 -13181 -13191 -13195 0
18270 -13181 -13190 -13196 0
c ((1<=(aux679 + aux682 + aux683))=tv=SATLiteral(18271))
-18271 -13181 -13190 -13195 0
18271 13195 0
18271 13190 0
18271 13191 0
18271 13193 0
18271 13181 0
18271 13181 13190 0
18271 13181 13191 0
18271 13181 13193 0
18271 13182 0
18271 13182 13190 0
18271 13182 13191 0
18271 13182 13193 0
c (((aux685 + aux688 + aux689)<=1)=tv=SATLiteral(18272))
-18272 13220 0
-18272 13214 13219 0
-18272 13215 0
-18272 13217 0
-18272 13205 13219 0
-18272 13205 13214 0
-18272 13205 13215 0
-18272 13205 13217 0
-18272 13206 0
-18272 13206 13214 0
-18272 13206 13215 0
-18272 13206 13217 0
18272 -13206 -13214 -13219 0
18272 -13205 -13215 -13219 0
18272 -13205 -13214 -13220 0
c ((1<=(aux685 + aux688 + aux689))=tv=SATLiteral(18273))
-18273 -13205 -13214 -13219 0
18273 13219 0
18273 13214 0
18273 13215 0
18273 13217 0
18273 13205 0
18273 13205 13214 0
18273 13205 13215 0
18273 13205 13217 0
18273 13206 0
18273 13206 13214 0
18273 13206 13215 0
18273 13206 13217 0
c (((aux691 + aux694 + aux695)<=1)=tv=SATLiteral(18274))
-18274 13244 0
-18274 13238 13243 0
-18274 13239 0
-18274 13241 0
-18274 13229 13243 0
-18274 13229 13238 0
-18274 13229 13239 0
-18274 13229 13241 0
-18274 13230 0
-18274 13230 13238 0
-18274 13230 13239 0
-18274 13230 13241 0
18274 -13230 -13238 -13243 0
18274 -13229 -13239 -13243 0
18274 -13229 -13238 -13244 0
c ((1<=(aux691 + aux694 + aux695))=tv=SATLiteral(18275))
-18275 -13229 -13238 -13243 0
18275 13243 0
18275 13238 0
18275 13239 0
18275 13241 0
18275 13229 0
18275 13229 13238 0
18275 13229 13239 0
18275 13229 13241 0
18275 13230 0
18275 13230 13238 0
18275 13230 13239 0
18275 13230 13241 0
c (((aux697 + aux700 + aux701)<=1)=tv=SATLiteral(18276))
-18276 13268 0
-18276 13262 13267 0
-18276 13263 0
-18276 13265 0
-18276 13253 13267 0
-18276 13253 13262 0
-18276 13253 13263 0
-18276 13253 13265 0
-18276 13254 0
-18276 13254 13262 0
-18276 13254 13263 0
-18276 13254 13265 0
18276 -13254 -13262 -13267 0
18276 -13253 -13263 -13267 0
18276 -13253 -13262 -13268 0
c ((1<=(aux697 + aux700 + aux701))=tv=SATLiteral(18277))
-18277 -13253 -13262 -13267 0
18277 13267 0
18277 13262 0
18277 13263 0
18277 13265 0
18277 13253 0
18277 13253 13262 0
18277 13253 13263 0
18277 13253 13265 0
18277 13254 0
18277 13254 13262 0
18277 13254 13263 0
18277 13254 13265 0
c (((aux703 + aux706 + aux707)<=1)=tv=SATLiteral(18278))
-18278 13292 0
-18278 13286 13291 0
-18278 13287 0
-18278 13289 0
-18278 13277 13291 0
-18278 13277 13286 0
-18278 13277 13287 0
-18278 13277 13289 0
-18278 13278 0
-18278 13278 13286 0
-18278 13278 13287 0
-18278 13278 13289 0
18278 -13278 -13286 -13291 0
18278 -13277 -13287 -13291 0
18278 -13277 -13286 -13292 0
c ((1<=(aux703 + aux706 + aux707))=tv=SATLiteral(18279))
-18279 -13277 -13286 -13291 0
18279 13291 0
18279 13286 0
18279 13287 0
18279 13289 0
18279 13277 0
18279 13277 13286 0
18279 13277 13287 0
18279 13277 13289 0
18279 13278 0
18279 13278 13286 0
18279 13278 13287 0
18279 13278 13289 0
c (((aux709 + aux712 + aux713)<=1)=tv=SATLiteral(18280))
-18280 13316 0
-18280 13310 13315 0
-18280 13311 0
-18280 13313 0
-18280 13301 13315 0
-18280 13301 13310 0
-18280 13301 13311 0
-18280 13301 13313 0
-18280 13302 0
-18280 13302 13310 0
-18280 13302 13311 0
-18280 13302 13313 0
18280 -13302 -13310 -13315 0
18280 -13301 -13311 -13315 0
18280 -13301 -13310 -13316 0
c ((1<=(aux709 + aux712 + aux713))=tv=SATLiteral(18281))
-18281 -13301 -13310 -13315 0
18281 13315 0
18281 13310 0
18281 13311 0
18281 13313 0
18281 13301 0
18281 13301 13310 0
18281 13301 13311 0
18281 13301 13313 0
18281 13302 0
18281 13302 13310 0
18281 13302 13311 0
18281 13302 13313 0
c (((aux715 + aux718 + aux719)<=1)=tv=SATLiteral(18282))
-18282 13340 0
-18282 13334 13339 0
-18282 13335 0
-18282 13337 0
-18282 13325 13339 0
-18282 13325 13334 0
-18282 13325 13335 0
-18282 13325 13337 0
-18282 13326 0
-18282 13326 13334 0
-18282 13326 13335 0
-18282 13326 13337 0
18282 -13326 -13334 -13339 0
18282 -13325 -13335 -13339 0
18282 -13325 -13334 -13340 0
c ((1<=(aux715 + aux718 + aux719))=tv=SATLiteral(18283))
-18283 -13325 -13334 -13339 0
18283 13339 0
18283 13334 0
18283 13335 0
18283 13337 0
18283 13325 0
18283 13325 13334 0
18283 13325 13335 0
18283 13325 13337 0
18283 13326 0
18283 13326 13334 0
18283 13326 13335 0
18283 13326 13337 0
c (((aux721 + aux724 + aux725)<=1)=tv=SATLiteral(18284))
-18284 13364 0
-18284 13358 13363 0
-18284 13359 0
-18284 13361 0
-18284 13349 13363 0
-18284 13349 13358 0
-18284 13349 13359 0
-18284 13349 13361 0
-18284 13350 0
-18284 13350 13358 0
-18284 13350 13359 0
-18284 13350 13361 0
18284 -13350 -13358 -13363 0
18284 -13349 -13359 -13363 0
18284 -13349 -13358 -13364 0
c ((1<=(aux721 + aux724 + aux725))=tv=SATLiteral(18285))
-18285 -13349 -13358 -13363 0
18285 13363 0
18285 13358 0
18285 13359 0
18285 13361 0
18285 13349 0
18285 13349 13358 0
18285 13349 13359 0
18285 13349 13361 0
18285 13350 0
18285 13350 13358 0
18285 13350 13359 0
18285 13350 13361 0
c (((aux727 + aux730 + aux731)<=1)=tv=SATLiteral(18286))
-18286 13388 0
-18286 13382 13387 0
-18286 13383 0
-18286 13385 0
-18286 13373 13387 0
-18286 13373 13382 0
-18286 13373 13383 0
-18286 13373 13385 0
-18286 13374 0
-18286 13374 13382 0
-18286 13374 13383 0
-18286 13374 13385 0
18286 -13374 -13382 -13387 0
18286 -13373 -13383 -13387 0
18286 -13373 -13382 -13388 0
c ((1<=(aux727 + aux730 + aux731))=tv=SATLiteral(18287))
-18287 -13373 -13382 -13387 0
18287 13387 0
18287 13382 0
18287 13383 0
18287 13385 0
18287 13373 0
18287 13373 13382 0
18287 13373 13383 0
18287 13373 13385 0
18287 13374 0
18287 13374 13382 0
18287 13374 13383 0
18287 13374 13385 0
c (((aux733 + aux736 + aux737)<=1)=tv=SATLiteral(18288))
-18288 13412 0
-18288 13406 13411 0
-18288 13407 0
-18288 13409 0
-18288 13397 13411 0
-18288 13397 13406 0
-18288 13397 13407 0
-18288 13397 13409 0
-18288 13398 0
-18288 13398 13406 0
-18288 13398 13407 0
-18288 13398 13409 0
18288 -13398 -13406 -13411 0
18288 -13397 -13407 -13411 0
18288 -13397 -13406 -13412 0
c ((1<=(aux733 + aux736 + aux737))=tv=SATLiteral(18289))
-18289 -13397 -13406 -13411 0
18289 13411 0
18289 13406 0
18289 13407 0
18289 13409 0
18289 13397 0
18289 13397 13406 0
18289 13397 13407 0
18289 13397 13409 0
18289 13398 0
18289 13398 13406 0
18289 13398 13407 0
18289 13398 13409 0
c (((aux739 + aux742 + aux743)<=1)=tv=SATLiteral(18290))
-18290 13436 0
-18290 13430 13435 0
-18290 13431 0
-18290 13433 0
-18290 13421 13435 0
-18290 13421 13430 0
-18290 13421 13431 0
-18290 13421 13433 0
-18290 13422 0
-18290 13422 13430 0
-18290 13422 13431 0
-18290 13422 13433 0
18290 -13422 -13430 -13435 0
18290 -13421 -13431 -13435 0
18290 -13421 -13430 -13436 0
c ((1<=(aux739 + aux742 + aux743))=tv=SATLiteral(18291))
-18291 -13421 -13430 -13435 0
18291 13435 0
18291 13430 0
18291 13431 0
18291 13433 0
18291 13421 0
18291 13421 13430 0
18291 13421 13431 0
18291 13421 13433 0
18291 13422 0
18291 13422 13430 0
18291 13422 13431 0
18291 13422 13433 0
c (((aux745 + aux748 + aux749)<=1)=tv=SATLiteral(18292))
-18292 13460 0
-18292 13454 13459 0
-18292 13455 0
-18292 13457 0
-18292 13445 13459 0
-18292 13445 13454 0
-18292 13445 13455 0
-18292 13445 13457 0
-18292 13446 0
-18292 13446 13454 0
-18292 13446 13455 0
-18292 13446 13457 0
18292 -13446 -13454 -13459 0
18292 -13445 -13455 -13459 0
18292 -13445 -13454 -13460 0
c ((1<=(aux745 + aux748 + aux749))=tv=SATLiteral(18293))
-18293 -13445 -13454 -13459 0
18293 13459 0
18293 13454 0
18293 13455 0
18293 13457 0
18293 13445 0
18293 13445 13454 0
18293 13445 13455 0
18293 13445 13457 0
18293 13446 0
18293 13446 13454 0
18293 13446 13455 0
18293 13446 13457 0
c (((aux751 + aux754 + aux755)<=1)=tv=SATLiteral(18294))
-18294 13484 0
-18294 13478 13483 0
-18294 13479 0
-18294 13481 0
-18294 13469 13483 0
-18294 13469 13478 0
-18294 13469 13479 0
-18294 13469 13481 0
-18294 13470 0
-18294 13470 13478 0
-18294 13470 13479 0
-18294 13470 13481 0
18294 -13470 -13478 -13483 0
18294 -13469 -13479 -13483 0
18294 -13469 -13478 -13484 0
c ((1<=(aux751 + aux754 + aux755))=tv=SATLiteral(18295))
-18295 -13469 -13478 -13483 0
18295 13483 0
18295 13478 0
18295 13479 0
18295 13481 0
18295 13469 0
18295 13469 13478 0
18295 13469 13479 0
18295 13469 13481 0
18295 13470 0
18295 13470 13478 0
18295 13470 13479 0
18295 13470 13481 0
c (((aux757 + aux760 + aux761)<=1)=tv=SATLiteral(18296))
-18296 13508 0
-18296 13502 13507 0
-18296 13503 0
-18296 13505 0
-18296 13493 13507 0
-18296 13493 13502 0
-18296 13493 13503 0
-18296 13493 13505 0
-18296 13494 0
-18296 13494 13502 0
-18296 13494 13503 0
-18296 13494 13505 0
18296 -13494 -13502 -13507 0
18296 -13493 -13503 -13507 0
18296 -13493 -13502 -13508 0
c ((1<=(aux757 + aux760 + aux761))=tv=SATLiteral(18297))
-18297 -13493 -13502 -13507 0
18297 13507 0
18297 13502 0
18297 13503 0
18297 13505 0
18297 13493 0
18297 13493 13502 0
18297 13493 13503 0
18297 13493 13505 0
18297 13494 0
18297 13494 13502 0
18297 13494 13503 0
18297 13494 13505 0
c (((aux763 + aux766 + aux767)<=1)=tv=SATLiteral(18298))
-18298 13532 0
-18298 13526 13531 0
-18298 13527 0
-18298 13529 0
-18298 13517 13531 0
-18298 13517 13526 0
-18298 13517 13527 0
-18298 13517 13529 0
-18298 13518 0
-18298 13518 13526 0
-18298 13518 13527 0
-18298 13518 13529 0
18298 -13518 -13526 -13531 0
18298 -13517 -13527 -13531 0
18298 -13517 -13526 -13532 0
c ((1<=(aux763 + aux766 + aux767))=tv=SATLiteral(18299))
-18299 -13517 -13526 -13531 0
18299 13531 0
18299 13526 0
18299 13527 0
18299 13529 0
18299 13517 0
18299 13517 13526 0
18299 13517 13527 0
18299 13517 13529 0
18299 13518 0
18299 13518 13526 0
18299 13518 13527 0
18299 13518 13529 0
c (((aux769 + aux772 + aux773)<=1)=tv=SATLiteral(18300))
-18300 13556 0
-18300 13550 13555 0
-18300 13551 0
-18300 13553 0
-18300 13541 13555 0
-18300 13541 13550 0
-18300 13541 13551 0
-18300 13541 13553 0
-18300 13542 0
-18300 13542 13550 0
-18300 13542 13551 0
-18300 13542 13553 0
18300 -13542 -13550 -13555 0
18300 -13541 -13551 -13555 0
18300 -13541 -13550 -13556 0
c ((1<=(aux769 + aux772 + aux773))=tv=SATLiteral(18301))
-18301 -13541 -13550 -13555 0
18301 13555 0
18301 13550 0
18301 13551 0
18301 13553 0
18301 13541 0
18301 13541 13550 0
18301 13541 13551 0
18301 13541 13553 0
18301 13542 0
18301 13542 13550 0
18301 13542 13551 0
18301 13542 13553 0
c (((aux775 + aux778 + aux779)<=1)=tv=SATLiteral(18302))
-18302 13580 0
-18302 13574 13579 0
-18302 13575 0
-18302 13577 0
-18302 13565 13579 0
-18302 13565 13574 0
-18302 13565 13575 0
-18302 13565 13577 0
-18302 13566 0
-18302 13566 13574 0
-18302 13566 13575 0
-18302 13566 13577 0
18302 -13566 -13574 -13579 0
18302 -13565 -13575 -13579 0
18302 -13565 -13574 -13580 0
c ((1<=(aux775 + aux778 + aux779))=tv=SATLiteral(18303))
-18303 -13565 -13574 -13579 0
18303 13579 0
18303 13574 0
18303 13575 0
18303 13577 0
18303 13565 0
18303 13565 13574 0
18303 13565 13575 0
18303 13565 13577 0
18303 13566 0
18303 13566 13574 0
18303 13566 13575 0
18303 13566 13577 0
c (((aux781 + aux784 + aux785)<=1)=tv=SATLiteral(18304))
-18304 13604 0
-18304 13598 13603 0
-18304 13599 0
-18304 13601 0
-18304 13589 13603 0
-18304 13589 13598 0
-18304 13589 13599 0
-18304 13589 13601 0
-18304 13590 0
-18304 13590 13598 0
-18304 13590 13599 0
-18304 13590 13601 0
18304 -13590 -13598 -13603 0
18304 -13589 -13599 -13603 0
18304 -13589 -13598 -13604 0
c ((1<=(aux781 + aux784 + aux785))=tv=SATLiteral(18305))
-18305 -13589 -13598 -13603 0
18305 13603 0
18305 13598 0
18305 13599 0
18305 13601 0
18305 13589 0
18305 13589 13598 0
18305 13589 13599 0
18305 13589 13601 0
18305 13590 0
18305 13590 13598 0
18305 13590 13599 0
18305 13590 13601 0
c (((aux787 + aux790 + aux791)<=1)=tv=SATLiteral(18306))
-18306 13628 0
-18306 13622 13627 0
-18306 13623 0
-18306 13625 0
-18306 13613 13627 0
-18306 13613 13622 0
-18306 13613 13623 0
-18306 13613 13625 0
-18306 13614 0
-18306 13614 13622 0
-18306 13614 13623 0
-18306 13614 13625 0
18306 -13614 -13622 -13627 0
18306 -13613 -13623 -13627 0
18306 -13613 -13622 -13628 0
c ((1<=(aux787 + aux790 + aux791))=tv=SATLiteral(18307))
-18307 -13613 -13622 -13627 0
18307 13627 0
18307 13622 0
18307 13623 0
18307 13625 0
18307 13613 0
18307 13613 13622 0
18307 13613 13623 0
18307 13613 13625 0
18307 13614 0
18307 13614 13622 0
18307 13614 13623 0
18307 13614 13625 0
c (((aux793 + aux796 + aux797)<=1)=tv=SATLiteral(18308))
-18308 13652 0
-18308 13646 13651 0
-18308 13647 0
-18308 13649 0
-18308 13637 13651 0
-18308 13637 13646 0
-18308 13637 13647 0
-18308 13637 13649 0
-18308 13638 0
-18308 13638 13646 0
-18308 13638 13647 0
-18308 13638 13649 0
18308 -13638 -13646 -13651 0
18308 -13637 -13647 -13651 0
18308 -13637 -13646 -13652 0
c ((1<=(aux793 + aux796 + aux797))=tv=SATLiteral(18309))
-18309 -13637 -13646 -13651 0
18309 13651 0
18309 13646 0
18309 13647 0
18309 13649 0
18309 13637 0
18309 13637 13646 0
18309 13637 13647 0
18309 13637 13649 0
18309 13638 0
18309 13638 13646 0
18309 13638 13647 0
18309 13638 13649 0
c (((aux799 + aux802 + aux803)<=1)=tv=SATLiteral(18310))
-18310 13676 0
-18310 13670 13675 0
-18310 13671 0
-18310 13673 0
-18310 13661 13675 0
-18310 13661 13670 0
-18310 13661 13671 0
-18310 13661 13673 0
-18310 13662 0
-18310 13662 13670 0
-18310 13662 13671 0
-18310 13662 13673 0
18310 -13662 -13670 -13675 0
18310 -13661 -13671 -13675 0
18310 -13661 -13670 -13676 0
c ((1<=(aux799 + aux802 + aux803))=tv=SATLiteral(18311))
-18311 -13661 -13670 -13675 0
18311 13675 0
18311 13670 0
18311 13671 0
18311 13673 0
18311 13661 0
18311 13661 13670 0
18311 13661 13671 0
18311 13661 13673 0
18311 13662 0
18311 13662 13670 0
18311 13662 13671 0
18311 13662 13673 0
c (((aux805 + aux808 + aux809)<=1)=tv=SATLiteral(18312))
-18312 13700 0
-18312 13694 13699 0
-18312 13695 0
-18312 13697 0
-18312 13685 13699 0
-18312 13685 13694 0
-18312 13685 13695 0
-18312 13685 13697 0
-18312 13686 0
-18312 13686 13694 0
-18312 13686 13695 0
-18312 13686 13697 0
18312 -13686 -13694 -13699 0
18312 -13685 -13695 -13699 0
18312 -13685 -13694 -13700 0
c ((1<=(aux805 + aux808 + aux809))=tv=SATLiteral(18313))
-18313 -13685 -13694 -13699 0
18313 13699 0
18313 13694 0
18313 13695 0
18313 13697 0
18313 13685 0
18313 13685 13694 0
18313 13685 13695 0
18313 13685 13697 0
18313 13686 0
18313 13686 13694 0
18313 13686 13695 0
18313 13686 13697 0
c (((aux811 + aux814 + aux815)<=1)=tv=SATLiteral(18314))
-18314 13724 0
-18314 13718 13723 0
-18314 13719 0
-18314 13721 0
-18314 13709 13723 0
-18314 13709 13718 0
-18314 13709 13719 0
-18314 13709 13721 0
-18314 13710 0
-18314 13710 13718 0
-18314 13710 13719 0
-18314 13710 13721 0
18314 -13710 -13718 -13723 0
18314 -13709 -13719 -13723 0
18314 -13709 -13718 -13724 0
c ((1<=(aux811 + aux814 + aux815))=tv=SATLiteral(18315))
-18315 -13709 -13718 -13723 0
18315 13723 0
18315 13718 0
18315 13719 0
18315 13721 0
18315 13709 0
18315 13709 13718 0
18315 13709 13719 0
18315 13709 13721 0
18315 13710 0
18315 13710 13718 0
18315 13710 13719 0
18315 13710 13721 0
c (((aux817 + aux820 + aux821)<=1)=tv=SATLiteral(18316))
-18316 13748 0
-18316 13742 13747 0
-18316 13743 0
-18316 13745 0
-18316 13733 13747 0
-18316 13733 13742 0
-18316 13733 13743 0
-18316 13733 13745 0
-18316 13734 0
-18316 13734 13742 0
-18316 13734 13743 0
-18316 13734 13745 0
18316 -13734 -13742 -13747 0
18316 -13733 -13743 -13747 0
18316 -13733 -13742 -13748 0
c ((1<=(aux817 + aux820 + aux821))=tv=SATLiteral(18317))
-18317 -13733 -13742 -13747 0
18317 13747 0
18317 13742 0
18317 13743 0
18317 13745 0
18317 13733 0
18317 13733 13742 0
18317 13733 13743 0
18317 13733 13745 0
18317 13734 0
18317 13734 13742 0
18317 13734 13743 0
18317 13734 13745 0
c (((aux823 + aux826 + aux827)<=1)=tv=SATLiteral(18318))
-18318 13772 0
-18318 13766 13771 0
-18318 13767 0
-18318 13769 0
-18318 13757 13771 0
-18318 13757 13766 0
-18318 13757 13767 0
-18318 13757 13769 0
-18318 13758 0
-18318 13758 13766 0
-18318 13758 13767 0
-18318 13758 13769 0
18318 -13758 -13766 -13771 0
18318 -13757 -13767 -13771 0
18318 -13757 -13766 -13772 0
c ((1<=(aux823 + aux826 + aux827))=tv=SATLiteral(18319))
-18319 -13757 -13766 -13771 0
18319 13771 0
18319 13766 0
18319 13767 0
18319 13769 0
18319 13757 0
18319 13757 13766 0
18319 13757 13767 0
18319 13757 13769 0
18319 13758 0
18319 13758 13766 0
18319 13758 13767 0
18319 13758 13769 0
c (((aux829 + aux832 + aux833)<=1)=tv=SATLiteral(18320))
-18320 13796 0
-18320 13790 13795 0
-18320 13791 0
-18320 13793 0
-18320 13781 13795 0
-18320 13781 13790 0
-18320 13781 13791 0
-18320 13781 13793 0
-18320 13782 0
-18320 13782 13790 0
-18320 13782 13791 0
-18320 13782 13793 0
18320 -13782 -13790 -13795 0
18320 -13781 -13791 -13795 0
18320 -13781 -13790 -13796 0
c ((1<=(aux829 + aux832 + aux833))=tv=SATLiteral(18321))
-18321 -13781 -13790 -13795 0
18321 13795 0
18321 13790 0
18321 13791 0
18321 13793 0
18321 13781 0
18321 13781 13790 0
18321 13781 13791 0
18321 13781 13793 0
18321 13782 0
18321 13782 13790 0
18321 13782 13791 0
18321 13782 13793 0
c (((aux835 + aux838 + aux839)<=1)=tv=SATLiteral(18322))
-18322 13820 0
-18322 13814 13819 0
-18322 13815 0
-18322 13817 0
-18322 13805 13819 0
-18322 13805 13814 0
-18322 13805 13815 0
-18322 13805 13817 0
-18322 13806 0
-18322 13806 13814 0
-18322 13806 13815 0
-18322 13806 13817 0
18322 -13806 -13814 -13819 0
18322 -13805 -13815 -13819 0
18322 -13805 -13814 -13820 0
c ((1<=(aux835 + aux838 + aux839))=tv=SATLiteral(18323))
-18323 -13805 -13814 -13819 0
18323 13819 0
18323 13814 0
18323 13815 0
18323 13817 0
18323 13805 0
18323 13805 13814 0
18323 13805 13815 0
18323 13805 13817 0
18323 13806 0
18323 13806 13814 0
18323 13806 13815 0
18323 13806 13817 0
c (((aux841 + aux844 + aux845)<=1)=tv=SATLiteral(18324))
-18324 13844 0
-18324 13838 13843 0
-18324 13839 0
-18324 13841 0
-18324 13829 13843 0
-18324 13829 13838 0
-18324 13829 13839 0
-18324 13829 13841 0
-18324 13830 0
-18324 13830 13838 0
-18324 13830 13839 0
-18324 13830 13841 0
18324 -13830 -13838 -13843 0
18324 -13829 -13839 -13843 0
18324 -13829 -13838 -13844 0
c ((1<=(aux841 + aux844 + aux845))=tv=SATLiteral(18325))
-18325 -13829 -13838 -13843 0
18325 13843 0
18325 13838 0
18325 13839 0
18325 13841 0
18325 13829 0
18325 13829 13838 0
18325 13829 13839 0
18325 13829 13841 0
18325 13830 0
18325 13830 13838 0
18325 13830 13839 0
18325 13830 13841 0
c (((aux847 + aux850 + aux851)<=1)=tv=SATLiteral(18326))
-18326 13868 0
-18326 13862 13867 0
-18326 13863 0
-18326 13865 0
-18326 13853 13867 0
-18326 13853 13862 0
-18326 13853 13863 0
-18326 13853 13865 0
-18326 13854 0
-18326 13854 13862 0
-18326 13854 13863 0
-18326 13854 13865 0
18326 -13854 -13862 -13867 0
18326 -13853 -13863 -13867 0
18326 -13853 -13862 -13868 0
c ((1<=(aux847 + aux850 + aux851))=tv=SATLiteral(18327))
-18327 -13853 -13862 -13867 0
18327 13867 0
18327 13862 0
18327 13863 0
18327 13865 0
18327 13853 0
18327 13853 13862 0
18327 13853 13863 0
18327 13853 13865 0
18327 13854 0
18327 13854 13862 0
18327 13854 13863 0
18327 13854 13865 0
c (((aux853 + aux856 + aux857)<=1)=tv=SATLiteral(18328))
-18328 13892 0
-18328 13886 13891 0
-18328 13887 0
-18328 13889 0
-18328 13877 13891 0
-18328 13877 13886 0
-18328 13877 13887 0
-18328 13877 13889 0
-18328 13878 0
-18328 13878 13886 0
-18328 13878 13887 0
-18328 13878 13889 0
18328 -13878 -13886 -13891 0
18328 -13877 -13887 -13891 0
18328 -13877 -13886 -13892 0
c ((1<=(aux853 + aux856 + aux857))=tv=SATLiteral(18329))
-18329 -13877 -13886 -13891 0
18329 13891 0
18329 13886 0
18329 13887 0
18329 13889 0
18329 13877 0
18329 13877 13886 0
18329 13877 13887 0
18329 13877 13889 0
18329 13878 0
18329 13878 13886 0
18329 13878 13887 0
18329 13878 13889 0
c (((aux859 + aux862 + aux863)<=1)=tv=SATLiteral(18330))
-18330 13916 0
-18330 13910 13915 0
-18330 13911 0
-18330 13913 0
-18330 13901 13915 0
-18330 13901 13910 0
-18330 13901 13911 0
-18330 13901 13913 0
-18330 13902 0
-18330 13902 13910 0
-18330 13902 13911 0
-18330 13902 13913 0
18330 -13902 -13910 -13915 0
18330 -13901 -13911 -13915 0
18330 -13901 -13910 -13916 0
c ((1<=(aux859 + aux862 + aux863))=tv=SATLiteral(18331))
-18331 -13901 -13910 -13915 0
18331 13915 0
18331 13910 0
18331 13911 0
18331 13913 0
18331 13901 0
18331 13901 13910 0
18331 13901 13911 0
18331 13901 13913 0
18331 13902 0
18331 13902 13910 0
18331 13902 13911 0
18331 13902 13913 0
c (((aux865 + aux868 + aux869)<=1)=tv=SATLiteral(18332))
-18332 13940 0
-18332 13934 13939 0
-18332 13935 0
-18332 13937 0
-18332 13925 13939 0
-18332 13925 13934 0
-18332 13925 13935 0
-18332 13925 13937 0
-18332 13926 0
-18332 13926 13934 0
-18332 13926 13935 0
-18332 13926 13937 0
18332 -13926 -13934 -13939 0
18332 -13925 -13935 -13939 0
18332 -13925 -13934 -13940 0
c ((1<=(aux865 + aux868 + aux869))=tv=SATLiteral(18333))
-18333 -13925 -13934 -13939 0
18333 13939 0
18333 13934 0
18333 13935 0
18333 13937 0
18333 13925 0
18333 13925 13934 0
18333 13925 13935 0
18333 13925 13937 0
18333 13926 0
18333 13926 13934 0
18333 13926 13935 0
18333 13926 13937 0
c (((aux871 + aux874 + aux875)<=1)=tv=SATLiteral(18334))
-18334 13964 0
-18334 13958 13963 0
-18334 13959 0
-18334 13961 0
-18334 13949 13963 0
-18334 13949 13958 0
-18334 13949 13959 0
-18334 13949 13961 0
-18334 13950 0
-18334 13950 13958 0
-18334 13950 13959 0
-18334 13950 13961 0
18334 -13950 -13958 -13963 0
18334 -13949 -13959 -13963 0
18334 -13949 -13958 -13964 0
c ((1<=(aux871 + aux874 + aux875))=tv=SATLiteral(18335))
-18335 -13949 -13958 -13963 0
18335 13963 0
18335 13958 0
18335 13959 0
18335 13961 0
18335 13949 0
18335 13949 13958 0
18335 13949 13959 0
18335 13949 13961 0
18335 13950 0
18335 13950 13958 0
18335 13950 13959 0
18335 13950 13961 0
c (((aux877 + aux880 + aux881)<=1)=tv=SATLiteral(18336))
-18336 13988 0
-18336 13982 13987 0
-18336 13983 0
-18336 13985 0
-18336 13973 13987 0
-18336 13973 13982 0
-18336 13973 13983 0
-18336 13973 13985 0
-18336 13974 0
-18336 13974 13982 0
-18336 13974 13983 0
-18336 13974 13985 0
18336 -13974 -13982 -13987 0
18336 -13973 -13983 -13987 0
18336 -13973 -13982 -13988 0
c ((1<=(aux877 + aux880 + aux881))=tv=SATLiteral(18337))
-18337 -13973 -13982 -13987 0
18337 13987 0
18337 13982 0
18337 13983 0
18337 13985 0
18337 13973 0
18337 13973 13982 0
18337 13973 13983 0
18337 13973 13985 0
18337 13974 0
18337 13974 13982 0
18337 13974 13983 0
18337 13974 13985 0
c (((aux883 + aux886 + aux887)<=1)=tv=SATLiteral(18338))
-18338 14012 0
-18338 14006 14011 0
-18338 14007 0
-18338 14009 0
-18338 13997 14011 0
-18338 13997 14006 0
-18338 13997 14007 0
-18338 13997 14009 0
-18338 13998 0
-18338 13998 14006 0
-18338 13998 14007 0
-18338 13998 14009 0
18338 -13998 -14006 -14011 0
18338 -13997 -14007 -14011 0
18338 -13997 -14006 -14012 0
c ((1<=(aux883 + aux886 + aux887))=tv=SATLiteral(18339))
-18339 -13997 -14006 -14011 0
18339 14011 0
18339 14006 0
18339 14007 0
18339 14009 0
18339 13997 0
18339 13997 14006 0
18339 13997 14007 0
18339 13997 14009 0
18339 13998 0
18339 13998 14006 0
18339 13998 14007 0
18339 13998 14009 0
c (((aux889 + aux892 + aux893)<=1)=tv=SATLiteral(18340))
-18340 14036 0
-18340 14030 14035 0
-18340 14031 0
-18340 14033 0
-18340 14021 14035 0
-18340 14021 14030 0
-18340 14021 14031 0
-18340 14021 14033 0
-18340 14022 0
-18340 14022 14030 0
-18340 14022 14031 0
-18340 14022 14033 0
18340 -14022 -14030 -14035 0
18340 -14021 -14031 -14035 0
18340 -14021 -14030 -14036 0
c ((1<=(aux889 + aux892 + aux893))=tv=SATLiteral(18341))
-18341 -14021 -14030 -14035 0
18341 14035 0
18341 14030 0
18341 14031 0
18341 14033 0
18341 14021 0
18341 14021 14030 0
18341 14021 14031 0
18341 14021 14033 0
18341 14022 0
18341 14022 14030 0
18341 14022 14031 0
18341 14022 14033 0
c (((aux895 + aux898 + aux899)<=1)=tv=SATLiteral(18342))
-18342 14060 0
-18342 14054 14059 0
-18342 14055 0
-18342 14057 0
-18342 14045 14059 0
-18342 14045 14054 0
-18342 14045 14055 0
-18342 14045 14057 0
-18342 14046 0
-18342 14046 14054 0
-18342 14046 14055 0
-18342 14046 14057 0
18342 -14046 -14054 -14059 0
18342 -14045 -14055 -14059 0
18342 -14045 -14054 -14060 0
c ((1<=(aux895 + aux898 + aux899))=tv=SATLiteral(18343))
-18343 -14045 -14054 -14059 0
18343 14059 0
18343 14054 0
18343 14055 0
18343 14057 0
18343 14045 0
18343 14045 14054 0
18343 14045 14055 0
18343 14045 14057 0
18343 14046 0
18343 14046 14054 0
18343 14046 14055 0
18343 14046 14057 0
c (((aux901 + aux904 + aux905)<=1)=tv=SATLiteral(18344))
-18344 14084 0
-18344 14078 14083 0
-18344 14079 0
-18344 14081 0
-18344 14069 14083 0
-18344 14069 14078 0
-18344 14069 14079 0
-18344 14069 14081 0
-18344 14070 0
-18344 14070 14078 0
-18344 14070 14079 0
-18344 14070 14081 0
18344 -14070 -14078 -14083 0
18344 -14069 -14079 -14083 0
18344 -14069 -14078 -14084 0
c ((1<=(aux901 + aux904 + aux905))=tv=SATLiteral(18345))
-18345 -14069 -14078 -14083 0
18345 14083 0
18345 14078 0
18345 14079 0
18345 14081 0
18345 14069 0
18345 14069 14078 0
18345 14069 14079 0
18345 14069 14081 0
18345 14070 0
18345 14070 14078 0
18345 14070 14079 0
18345 14070 14081 0
c (((aux907 + aux910 + aux911)<=1)=tv=SATLiteral(18346))
-18346 14108 0
-18346 14102 14107 0
-18346 14103 0
-18346 14105 0
-18346 14093 14107 0
-18346 14093 14102 0
-18346 14093 14103 0
-18346 14093 14105 0
-18346 14094 0
-18346 14094 14102 0
-18346 14094 14103 0
-18346 14094 14105 0
18346 -14094 -14102 -14107 0
18346 -14093 -14103 -14107 0
18346 -14093 -14102 -14108 0
c ((1<=(aux907 + aux910 + aux911))=tv=SATLiteral(18347))
-18347 -14093 -14102 -14107 0
18347 14107 0
18347 14102 0
18347 14103 0
18347 14105 0
18347 14093 0
18347 14093 14102 0
18347 14093 14103 0
18347 14093 14105 0
18347 14094 0
18347 14094 14102 0
18347 14094 14103 0
18347 14094 14105 0
c (((aux913 + aux916 + aux917)<=1)=tv=SATLiteral(18348))
-18348 14132 0
-18348 14126 14131 0
-18348 14127 0
-18348 14129 0
-18348 14117 14131 0
-18348 14117 14126 0
-18348 14117 14127 0
-18348 14117 14129 0
-18348 14118 0
-18348 14118 14126 0
-18348 14118 14127 0
-18348 14118 14129 0
18348 -14118 -14126 -14131 0
18348 -14117 -14127 -14131 0
18348 -14117 -14126 -14132 0
c ((1<=(aux913 + aux916 + aux917))=tv=SATLiteral(18349))
-18349 -14117 -14126 -14131 0
18349 14131 0
18349 14126 0
18349 14127 0
18349 14129 0
18349 14117 0
18349 14117 14126 0
18349 14117 14127 0
18349 14117 14129 0
18349 14118 0
18349 14118 14126 0
18349 14118 14127 0
18349 14118 14129 0
c (((aux919 + aux922 + aux923)<=1)=tv=SATLiteral(18350))
-18350 14156 0
-18350 14150 14155 0
-18350 14151 0
-18350 14153 0
-18350 14141 14155 0
-18350 14141 14150 0
-18350 14141 14151 0
-18350 14141 14153 0
-18350 14142 0
-18350 14142 14150 0
-18350 14142 14151 0
-18350 14142 14153 0
18350 -14142 -14150 -14155 0
18350 -14141 -14151 -14155 0
18350 -14141 -14150 -14156 0
c ((1<=(aux919 + aux922 + aux923))=tv=SATLiteral(18351))
-18351 -14141 -14150 -14155 0
18351 14155 0
18351 14150 0
18351 14151 0
18351 14153 0
18351 14141 0
18351 14141 14150 0
18351 14141 14151 0
18351 14141 14153 0
18351 14142 0
18351 14142 14150 0
18351 14142 14151 0
18351 14142 14153 0
c (((aux925 + aux928 + aux929)<=1)=tv=SATLiteral(18352))
-18352 14180 0
-18352 14174 14179 0
-18352 14175 0
-18352 14177 0
-18352 14165 14179 0
-18352 14165 14174 0
-18352 14165 14175 0
-18352 14165 14177 0
-18352 14166 0
-18352 14166 14174 0
-18352 14166 14175 0
-18352 14166 14177 0
18352 -14166 -14174 -14179 0
18352 -14165 -14175 -14179 0
18352 -14165 -14174 -14180 0
c ((1<=(aux925 + aux928 + aux929))=tv=SATLiteral(18353))
-18353 -14165 -14174 -14179 0
18353 14179 0
18353 14174 0
18353 14175 0
18353 14177 0
18353 14165 0
18353 14165 14174 0
18353 14165 14175 0
18353 14165 14177 0
18353 14166 0
18353 14166 14174 0
18353 14166 14175 0
18353 14166 14177 0
c (((aux931 + aux934 + aux935)<=1)=tv=SATLiteral(18354))
-18354 14204 0
-18354 14198 14203 0
-18354 14199 0
-18354 14201 0
-18354 14189 14203 0
-18354 14189 14198 0
-18354 14189 14199 0
-18354 14189 14201 0
-18354 14190 0
-18354 14190 14198 0
-18354 14190 14199 0
-18354 14190 14201 0
18354 -14190 -14198 -14203 0
18354 -14189 -14199 -14203 0
18354 -14189 -14198 -14204 0
c ((1<=(aux931 + aux934 + aux935))=tv=SATLiteral(18355))
-18355 -14189 -14198 -14203 0
18355 14203 0
18355 14198 0
18355 14199 0
18355 14201 0
18355 14189 0
18355 14189 14198 0
18355 14189 14199 0
18355 14189 14201 0
18355 14190 0
18355 14190 14198 0
18355 14190 14199 0
18355 14190 14201 0
c (((aux937 + aux940 + aux941)<=1)=tv=SATLiteral(18356))
-18356 14228 0
-18356 14222 14227 0
-18356 14223 0
-18356 14225 0
-18356 14213 14227 0
-18356 14213 14222 0
-18356 14213 14223 0
-18356 14213 14225 0
-18356 14214 0
-18356 14214 14222 0
-18356 14214 14223 0
-18356 14214 14225 0
18356 -14214 -14222 -14227 0
18356 -14213 -14223 -14227 0
18356 -14213 -14222 -14228 0
c ((1<=(aux937 + aux940 + aux941))=tv=SATLiteral(18357))
-18357 -14213 -14222 -14227 0
18357 14227 0
18357 14222 0
18357 14223 0
18357 14225 0
18357 14213 0
18357 14213 14222 0
18357 14213 14223 0
18357 14213 14225 0
18357 14214 0
18357 14214 14222 0
18357 14214 14223 0
18357 14214 14225 0
c (((aux943 + aux946 + aux947)<=1)=tv=SATLiteral(18358))
-18358 14252 0
-18358 14246 14251 0
-18358 14247 0
-18358 14249 0
-18358 14237 14251 0
-18358 14237 14246 0
-18358 14237 14247 0
-18358 14237 14249 0
-18358 14238 0
-18358 14238 14246 0
-18358 14238 14247 0
-18358 14238 14249 0
18358 -14238 -14246 -14251 0
18358 -14237 -14247 -14251 0
18358 -14237 -14246 -14252 0
c ((1<=(aux943 + aux946 + aux947))=tv=SATLiteral(18359))
-18359 -14237 -14246 -14251 0
18359 14251 0
18359 14246 0
18359 14247 0
18359 14249 0
18359 14237 0
18359 14237 14246 0
18359 14237 14247 0
18359 14237 14249 0
18359 14238 0
18359 14238 14246 0
18359 14238 14247 0
18359 14238 14249 0
c (((aux949 + aux952 + aux953)<=1)=tv=SATLiteral(18360))
-18360 14276 0
-18360 14270 14275 0
-18360 14271 0
-18360 14273 0
-18360 14261 14275 0
-18360 14261 14270 0
-18360 14261 14271 0
-18360 14261 14273 0
-18360 14262 0
-18360 14262 14270 0
-18360 14262 14271 0
-18360 14262 14273 0
18360 -14262 -14270 -14275 0
18360 -14261 -14271 -14275 0
18360 -14261 -14270 -14276 0
c ((1<=(aux949 + aux952 + aux953))=tv=SATLiteral(18361))
-18361 -14261 -14270 -14275 0
18361 14275 0
18361 14270 0
18361 14271 0
18361 14273 0
18361 14261 0
18361 14261 14270 0
18361 14261 14271 0
18361 14261 14273 0
18361 14262 0
18361 14262 14270 0
18361 14262 14271 0
18361 14262 14273 0
c (((aux955 + aux958 + aux959)<=1)=tv=SATLiteral(18362))
-18362 14300 0
-18362 14294 14299 0
-18362 14295 0
-18362 14297 0
-18362 14285 14299 0
-18362 14285 14294 0
-18362 14285 14295 0
-18362 14285 14297 0
-18362 14286 0
-18362 14286 14294 0
-18362 14286 14295 0
-18362 14286 14297 0
18362 -14286 -14294 -14299 0
18362 -14285 -14295 -14299 0
18362 -14285 -14294 -14300 0
c ((1<=(aux955 + aux958 + aux959))=tv=SATLiteral(18363))
-18363 -14285 -14294 -14299 0
18363 14299 0
18363 14294 0
18363 14295 0
18363 14297 0
18363 14285 0
18363 14285 14294 0
18363 14285 14295 0
18363 14285 14297 0
18363 14286 0
18363 14286 14294 0
18363 14286 14295 0
18363 14286 14297 0
c (((aux961 + aux964 + aux965)<=1)=tv=SATLiteral(18364))
-18364 14324 0
-18364 14318 14323 0
-18364 14319 0
-18364 14321 0
-18364 14309 14323 0
-18364 14309 14318 0
-18364 14309 14319 0
-18364 14309 14321 0
-18364 14310 0
-18364 14310 14318 0
-18364 14310 14319 0
-18364 14310 14321 0
18364 -14310 -14318 -14323 0
18364 -14309 -14319 -14323 0
18364 -14309 -14318 -14324 0
c ((1<=(aux961 + aux964 + aux965))=tv=SATLiteral(18365))
-18365 -14309 -14318 -14323 0
18365 14323 0
18365 14318 0
18365 14319 0
18365 14321 0
18365 14309 0
18365 14309 14318 0
18365 14309 14319 0
18365 14309 14321 0
18365 14310 0
18365 14310 14318 0
18365 14310 14319 0
18365 14310 14321 0
c (((aux967 + aux970 + aux971)<=1)=tv=SATLiteral(18366))
-18366 14348 0
-18366 14342 14347 0
-18366 14343 0
-18366 14345 0
-18366 14333 14347 0
-18366 14333 14342 0
-18366 14333 14343 0
-18366 14333 14345 0
-18366 14334 0
-18366 14334 14342 0
-18366 14334 14343 0
-18366 14334 14345 0
18366 -14334 -14342 -14347 0
18366 -14333 -14343 -14347 0
18366 -14333 -14342 -14348 0
c ((1<=(aux967 + aux970 + aux971))=tv=SATLiteral(18367))
-18367 -14333 -14342 -14347 0
18367 14347 0
18367 14342 0
18367 14343 0
18367 14345 0
18367 14333 0
18367 14333 14342 0
18367 14333 14343 0
18367 14333 14345 0
18367 14334 0
18367 14334 14342 0
18367 14334 14343 0
18367 14334 14345 0
c (((aux973 + aux976 + aux977)<=1)=tv=SATLiteral(18368))
-18368 14372 0
-18368 14366 14371 0
-18368 14367 0
-18368 14369 0
-18368 14357 14371 0
-18368 14357 14366 0
-18368 14357 14367 0
-18368 14357 14369 0
-18368 14358 0
-18368 14358 14366 0
-18368 14358 14367 0
-18368 14358 14369 0
18368 -14358 -14366 -14371 0
18368 -14357 -14367 -14371 0
18368 -14357 -14366 -14372 0
c ((1<=(aux973 + aux976 + aux977))=tv=SATLiteral(18369))
-18369 -14357 -14366 -14371 0
18369 14371 0
18369 14366 0
18369 14367 0
18369 14369 0
18369 14357 0
18369 14357 14366 0
18369 14357 14367 0
18369 14357 14369 0
18369 14358 0
18369 14358 14366 0
18369 14358 14367 0
18369 14358 14369 0
c (((aux979 + aux982 + aux983)<=1)=tv=SATLiteral(18370))
-18370 14396 0
-18370 14390 14395 0
-18370 14391 0
-18370 14393 0
-18370 14381 14395 0
-18370 14381 14390 0
-18370 14381 14391 0
-18370 14381 14393 0
-18370 14382 0
-18370 14382 14390 0
-18370 14382 14391 0
-18370 14382 14393 0
18370 -14382 -14390 -14395 0
18370 -14381 -14391 -14395 0
18370 -14381 -14390 -14396 0
c ((1<=(aux979 + aux982 + aux983))=tv=SATLiteral(18371))
-18371 -14381 -14390 -14395 0
18371 14395 0
18371 14390 0
18371 14391 0
18371 14393 0
18371 14381 0
18371 14381 14390 0
18371 14381 14391 0
18371 14381 14393 0
18371 14382 0
18371 14382 14390 0
18371 14382 14391 0
18371 14382 14393 0
c (((aux985 + aux988 + aux989)<=1)=tv=SATLiteral(18372))
-18372 14420 0
-18372 14414 14419 0
-18372 14415 0
-18372 14417 0
-18372 14405 14419 0
-18372 14405 14414 0
-18372 14405 14415 0
-18372 14405 14417 0
-18372 14406 0
-18372 14406 14414 0
-18372 14406 14415 0
-18372 14406 14417 0
18372 -14406 -14414 -14419 0
18372 -14405 -14415 -14419 0
18372 -14405 -14414 -14420 0
c ((1<=(aux985 + aux988 + aux989))=tv=SATLiteral(18373))
-18373 -14405 -14414 -14419 0
18373 14419 0
18373 14414 0
18373 14415 0
18373 14417 0
18373 14405 0
18373 14405 14414 0
18373 14405 14415 0
18373 14405 14417 0
18373 14406 0
18373 14406 14414 0
18373 14406 14415 0
18373 14406 14417 0
c (((aux991 + aux994 + aux995)<=1)=tv=SATLiteral(18374))
-18374 14444 0
-18374 14438 14443 0
-18374 14439 0
-18374 14441 0
-18374 14429 14443 0
-18374 14429 14438 0
-18374 14429 14439 0
-18374 14429 14441 0
-18374 14430 0
-18374 14430 14438 0
-18374 14430 14439 0
-18374 14430 14441 0
18374 -14430 -14438 -14443 0
18374 -14429 -14439 -14443 0
18374 -14429 -14438 -14444 0
c ((1<=(aux991 + aux994 + aux995))=tv=SATLiteral(18375))
-18375 -14429 -14438 -14443 0
18375 14443 0
18375 14438 0
18375 14439 0
18375 14441 0
18375 14429 0
18375 14429 14438 0
18375 14429 14439 0
18375 14429 14441 0
18375 14430 0
18375 14430 14438 0
18375 14430 14439 0
18375 14430 14441 0
c (((aux997 + aux1000 + aux1001)<=1)=tv=SATLiteral(18376))
-18376 14468 0
-18376 14462 14467 0
-18376 14463 0
-18376 14465 0
-18376 14453 14467 0
-18376 14453 14462 0
-18376 14453 14463 0
-18376 14453 14465 0
-18376 14454 0
-18376 14454 14462 0
-18376 14454 14463 0
-18376 14454 14465 0
18376 -14454 -14462 -14467 0
18376 -14453 -14463 -14467 0
18376 -14453 -14462 -14468 0
c ((1<=(aux997 + aux1000 + aux1001))=tv=SATLiteral(18377))
-18377 -14453 -14462 -14467 0
18377 14467 0
18377 14462 0
18377 14463 0
18377 14465 0
18377 14453 0
18377 14453 14462 0
18377 14453 14463 0
18377 14453 14465 0
18377 14454 0
18377 14454 14462 0
18377 14454 14463 0
18377 14454 14465 0
c (((aux1003 + aux1006 + aux1007)<=1)=tv=SATLiteral(18378))
-18378 14492 0
-18378 14486 14491 0
-18378 14487 0
-18378 14489 0
-18378 14477 14491 0
-18378 14477 14486 0
-18378 14477 14487 0
-18378 14477 14489 0
-18378 14478 0
-18378 14478 14486 0
-18378 14478 14487 0
-18378 14478 14489 0
18378 -14478 -14486 -14491 0
18378 -14477 -14487 -14491 0
18378 -14477 -14486 -14492 0
c ((1<=(aux1003 + aux1006 + aux1007))=tv=SATLiteral(18379))
-18379 -14477 -14486 -14491 0
18379 14491 0
18379 14486 0
18379 14487 0
18379 14489 0
18379 14477 0
18379 14477 14486 0
18379 14477 14487 0
18379 14477 14489 0
18379 14478 0
18379 14478 14486 0
18379 14478 14487 0
18379 14478 14489 0
c (((aux1009 + aux1012 + aux1013)<=1)=tv=SATLiteral(18380))
-18380 14516 0
-18380 14510 14515 0
-18380 14511 0
-18380 14513 0
-18380 14501 14515 0
-18380 14501 14510 0
-18380 14501 14511 0
-18380 14501 14513 0
-18380 14502 0
-18380 14502 14510 0
-18380 14502 14511 0
-18380 14502 14513 0
18380 -14502 -14510 -14515 0
18380 -14501 -14511 -14515 0
18380 -14501 -14510 -14516 0
c ((1<=(aux1009 + aux1012 + aux1013))=tv=SATLiteral(18381))
-18381 -14501 -14510 -14515 0
18381 14515 0
18381 14510 0
18381 14511 0
18381 14513 0
18381 14501 0
18381 14501 14510 0
18381 14501 14511 0
18381 14501 14513 0
18381 14502 0
18381 14502 14510 0
18381 14502 14511 0
18381 14502 14513 0
c (((aux1015 + aux1018 + aux1019)<=1)=tv=SATLiteral(18382))
-18382 14540 0
-18382 14534 14539 0
-18382 14535 0
-18382 14537 0
-18382 14525 14539 0
-18382 14525 14534 0
-18382 14525 14535 0
-18382 14525 14537 0
-18382 14526 0
-18382 14526 14534 0
-18382 14526 14535 0
-18382 14526 14537 0
18382 -14526 -14534 -14539 0
18382 -14525 -14535 -14539 0
18382 -14525 -14534 -14540 0
c ((1<=(aux1015 + aux1018 + aux1019))=tv=SATLiteral(18383))
-18383 -14525 -14534 -14539 0
18383 14539 0
18383 14534 0
18383 14535 0
18383 14537 0
18383 14525 0
18383 14525 14534 0
18383 14525 14535 0
18383 14525 14537 0
18383 14526 0
18383 14526 14534 0
18383 14526 14535 0
18383 14526 14537 0
c (((aux1021 + aux1024 + aux1025)<=1)=tv=SATLiteral(18384))
-18384 14564 0
-18384 14558 14563 0
-18384 14559 0
-18384 14561 0
-18384 14549 14563 0
-18384 14549 14558 0
-18384 14549 14559 0
-18384 14549 14561 0
-18384 14550 0
-18384 14550 14558 0
-18384 14550 14559 0
-18384 14550 14561 0
18384 -14550 -14558 -14563 0
18384 -14549 -14559 -14563 0
18384 -14549 -14558 -14564 0
c ((1<=(aux1021 + aux1024 + aux1025))=tv=SATLiteral(18385))
-18385 -14549 -14558 -14563 0
18385 14563 0
18385 14558 0
18385 14559 0
18385 14561 0
18385 14549 0
18385 14549 14558 0
18385 14549 14559 0
18385 14549 14561 0
18385 14550 0
18385 14550 14558 0
18385 14550 14559 0
18385 14550 14561 0
c (((aux1027 + aux1030 + aux1031)<=1)=tv=SATLiteral(18386))
-18386 14588 0
-18386 14582 14587 0
-18386 14583 0
-18386 14585 0
-18386 14573 14587 0
-18386 14573 14582 0
-18386 14573 14583 0
-18386 14573 14585 0
-18386 14574 0
-18386 14574 14582 0
-18386 14574 14583 0
-18386 14574 14585 0
18386 -14574 -14582 -14587 0
18386 -14573 -14583 -14587 0
18386 -14573 -14582 -14588 0
c ((1<=(aux1027 + aux1030 + aux1031))=tv=SATLiteral(18387))
-18387 -14573 -14582 -14587 0
18387 14587 0
18387 14582 0
18387 14583 0
18387 14585 0
18387 14573 0
18387 14573 14582 0
18387 14573 14583 0
18387 14573 14585 0
18387 14574 0
18387 14574 14582 0
18387 14574 14583 0
18387 14574 14585 0
c (((aux1033 + aux1036 + aux1037)<=1)=tv=SATLiteral(18388))
-18388 14612 0
-18388 14606 14611 0
-18388 14607 0
-18388 14609 0
-18388 14597 14611 0
-18388 14597 14606 0
-18388 14597 14607 0
-18388 14597 14609 0
-18388 14598 0
-18388 14598 14606 0
-18388 14598 14607 0
-18388 14598 14609 0
18388 -14598 -14606 -14611 0
18388 -14597 -14607 -14611 0
18388 -14597 -14606 -14612 0
c ((1<=(aux1033 + aux1036 + aux1037))=tv=SATLiteral(18389))
-18389 -14597 -14606 -14611 0
18389 14611 0
18389 14606 0
18389 14607 0
18389 14609 0
18389 14597 0
18389 14597 14606 0
18389 14597 14607 0
18389 14597 14609 0
18389 14598 0
18389 14598 14606 0
18389 14598 14607 0
18389 14598 14609 0
c (((aux1039 + aux1042 + aux1043)<=1)=tv=SATLiteral(18390))
-18390 14636 0
-18390 14630 14635 0
-18390 14631 0
-18390 14633 0
-18390 14621 14635 0
-18390 14621 14630 0
-18390 14621 14631 0
-18390 14621 14633 0
-18390 14622 0
-18390 14622 14630 0
-18390 14622 14631 0
-18390 14622 14633 0
18390 -14622 -14630 -14635 0
18390 -14621 -14631 -14635 0
18390 -14621 -14630 -14636 0
c ((1<=(aux1039 + aux1042 + aux1043))=tv=SATLiteral(18391))
-18391 -14621 -14630 -14635 0
18391 14635 0
18391 14630 0
18391 14631 0
18391 14633 0
18391 14621 0
18391 14621 14630 0
18391 14621 14631 0
18391 14621 14633 0
18391 14622 0
18391 14622 14630 0
18391 14622 14631 0
18391 14622 14633 0
c (((aux1045 + aux1048 + aux1049)<=1)=tv=SATLiteral(18392))
-18392 14660 0
-18392 14654 14659 0
-18392 14655 0
-18392 14657 0
-18392 14645 14659 0
-18392 14645 14654 0
-18392 14645 14655 0
-18392 14645 14657 0
-18392 14646 0
-18392 14646 14654 0
-18392 14646 14655 0
-18392 14646 14657 0
18392 -14646 -14654 -14659 0
18392 -14645 -14655 -14659 0
18392 -14645 -14654 -14660 0
c ((1<=(aux1045 + aux1048 + aux1049))=tv=SATLiteral(18393))
-18393 -14645 -14654 -14659 0
18393 14659 0
18393 14654 0
18393 14655 0
18393 14657 0
18393 14645 0
18393 14645 14654 0
18393 14645 14655 0
18393 14645 14657 0
18393 14646 0
18393 14646 14654 0
18393 14646 14655 0
18393 14646 14657 0
c (((aux1051 + aux1054 + aux1055)<=1)=tv=SATLiteral(18394))
-18394 14684 0
-18394 14678 14683 0
-18394 14679 0
-18394 14681 0
-18394 14669 14683 0
-18394 14669 14678 0
-18394 14669 14679 0
-18394 14669 14681 0
-18394 14670 0
-18394 14670 14678 0
-18394 14670 14679 0
-18394 14670 14681 0
18394 -14670 -14678 -14683 0
18394 -14669 -14679 -14683 0
18394 -14669 -14678 -14684 0
c ((1<=(aux1051 + aux1054 + aux1055))=tv=SATLiteral(18395))
-18395 -14669 -14678 -14683 0
18395 14683 0
18395 14678 0
18395 14679 0
18395 14681 0
18395 14669 0
18395 14669 14678 0
18395 14669 14679 0
18395 14669 14681 0
18395 14670 0
18395 14670 14678 0
18395 14670 14679 0
18395 14670 14681 0
c (((aux1057 + aux1060 + aux1061)<=1)=tv=SATLiteral(18396))
-18396 14708 0
-18396 14702 14707 0
-18396 14703 0
-18396 14705 0
-18396 14693 14707 0
-18396 14693 14702 0
-18396 14693 14703 0
-18396 14693 14705 0
-18396 14694 0
-18396 14694 14702 0
-18396 14694 14703 0
-18396 14694 14705 0
18396 -14694 -14702 -14707 0
18396 -14693 -14703 -14707 0
18396 -14693 -14702 -14708 0
c ((1<=(aux1057 + aux1060 + aux1061))=tv=SATLiteral(18397))
-18397 -14693 -14702 -14707 0
18397 14707 0
18397 14702 0
18397 14703 0
18397 14705 0
18397 14693 0
18397 14693 14702 0
18397 14693 14703 0
18397 14693 14705 0
18397 14694 0
18397 14694 14702 0
18397 14694 14703 0
18397 14694 14705 0
c (((aux1063 + aux1066 + aux1067)<=1)=tv=SATLiteral(18398))
-18398 14732 0
-18398 14726 14731 0
-18398 14727 0
-18398 14729 0
-18398 14717 14731 0
-18398 14717 14726 0
-18398 14717 14727 0
-18398 14717 14729 0
-18398 14718 0
-18398 14718 14726 0
-18398 14718 14727 0
-18398 14718 14729 0
18398 -14718 -14726 -14731 0
18398 -14717 -14727 -14731 0
18398 -14717 -14726 -14732 0
c ((1<=(aux1063 + aux1066 + aux1067))=tv=SATLiteral(18399))
-18399 -14717 -14726 -14731 0
18399 14731 0
18399 14726 0
18399 14727 0
18399 14729 0
18399 14717 0
18399 14717 14726 0
18399 14717 14727 0
18399 14717 14729 0
18399 14718 0
18399 14718 14726 0
18399 14718 14727 0
18399 14718 14729 0
c (((aux1069 + aux1072 + aux1073)<=1)=tv=SATLiteral(18400))
-18400 14756 0
-18400 14750 14755 0
-18400 14751 0
-18400 14753 0
-18400 14741 14755 0
-18400 14741 14750 0
-18400 14741 14751 0
-18400 14741 14753 0
-18400 14742 0
-18400 14742 14750 0
-18400 14742 14751 0
-18400 14742 14753 0
18400 -14742 -14750 -14755 0
18400 -14741 -14751 -14755 0
18400 -14741 -14750 -14756 0
c ((1<=(aux1069 + aux1072 + aux1073))=tv=SATLiteral(18401))
-18401 -14741 -14750 -14755 0
18401 14755 0
18401 14750 0
18401 14751 0
18401 14753 0
18401 14741 0
18401 14741 14750 0
18401 14741 14751 0
18401 14741 14753 0
18401 14742 0
18401 14742 14750 0
18401 14742 14751 0
18401 14742 14753 0
c (((aux1075 + aux1078 + aux1079)<=1)=tv=SATLiteral(18402))
-18402 14780 0
-18402 14774 14779 0
-18402 14775 0
-18402 14777 0
-18402 14765 14779 0
-18402 14765 14774 0
-18402 14765 14775 0
-18402 14765 14777 0
-18402 14766 0
-18402 14766 14774 0
-18402 14766 14775 0
-18402 14766 14777 0
18402 -14766 -14774 -14779 0
18402 -14765 -14775 -14779 0
18402 -14765 -14774 -14780 0
c ((1<=(aux1075 + aux1078 + aux1079))=tv=SATLiteral(18403))
-18403 -14765 -14774 -14779 0
18403 14779 0
18403 14774 0
18403 14775 0
18403 14777 0
18403 14765 0
18403 14765 14774 0
18403 14765 14775 0
18403 14765 14777 0
18403 14766 0
18403 14766 14774 0
18403 14766 14775 0
18403 14766 14777 0
c (((aux1081 + aux1084 + aux1085)<=1)=tv=SATLiteral(18404))
-18404 14804 0
-18404 14798 14803 0
-18404 14799 0
-18404 14801 0
-18404 14789 14803 0
-18404 14789 14798 0
-18404 14789 14799 0
-18404 14789 14801 0
-18404 14790 0
-18404 14790 14798 0
-18404 14790 14799 0
-18404 14790 14801 0
18404 -14790 -14798 -14803 0
18404 -14789 -14799 -14803 0
18404 -14789 -14798 -14804 0
c ((1<=(aux1081 + aux1084 + aux1085))=tv=SATLiteral(18405))
-18405 -14789 -14798 -14803 0
18405 14803 0
18405 14798 0
18405 14799 0
18405 14801 0
18405 14789 0
18405 14789 14798 0
18405 14789 14799 0
18405 14789 14801 0
18405 14790 0
18405 14790 14798 0
18405 14790 14799 0
18405 14790 14801 0
c (((aux1087 + aux1090 + aux1091)<=1)=tv=SATLiteral(18406))
-18406 14828 0
-18406 14822 14827 0
-18406 14823 0
-18406 14825 0
-18406 14813 14827 0
-18406 14813 14822 0
-18406 14813 14823 0
-18406 14813 14825 0
-18406 14814 0
-18406 14814 14822 0
-18406 14814 14823 0
-18406 14814 14825 0
18406 -14814 -14822 -14827 0
18406 -14813 -14823 -14827 0
18406 -14813 -14822 -14828 0
c ((1<=(aux1087 + aux1090 + aux1091))=tv=SATLiteral(18407))
-18407 -14813 -14822 -14827 0
18407 14827 0
18407 14822 0
18407 14823 0
18407 14825 0
18407 14813 0
18407 14813 14822 0
18407 14813 14823 0
18407 14813 14825 0
18407 14814 0
18407 14814 14822 0
18407 14814 14823 0
18407 14814 14825 0
c (((aux1093 + aux1096 + aux1097)<=1)=tv=SATLiteral(18408))
-18408 14852 0
-18408 14846 14851 0
-18408 14847 0
-18408 14849 0
-18408 14837 14851 0
-18408 14837 14846 0
-18408 14837 14847 0
-18408 14837 14849 0
-18408 14838 0
-18408 14838 14846 0
-18408 14838 14847 0
-18408 14838 14849 0
18408 -14838 -14846 -14851 0
18408 -14837 -14847 -14851 0
18408 -14837 -14846 -14852 0
c ((1<=(aux1093 + aux1096 + aux1097))=tv=SATLiteral(18409))
-18409 -14837 -14846 -14851 0
18409 14851 0
18409 14846 0
18409 14847 0
18409 14849 0
18409 14837 0
18409 14837 14846 0
18409 14837 14847 0
18409 14837 14849 0
18409 14838 0
18409 14838 14846 0
18409 14838 14847 0
18409 14838 14849 0
c (((aux1099 + aux1102 + aux1103)<=1)=tv=SATLiteral(18410))
-18410 14876 0
-18410 14870 14875 0
-18410 14871 0
-18410 14873 0
-18410 14861 14875 0
-18410 14861 14870 0
-18410 14861 14871 0
-18410 14861 14873 0
-18410 14862 0
-18410 14862 14870 0
-18410 14862 14871 0
-18410 14862 14873 0
18410 -14862 -14870 -14875 0
18410 -14861 -14871 -14875 0
18410 -14861 -14870 -14876 0
c ((1<=(aux1099 + aux1102 + aux1103))=tv=SATLiteral(18411))
-18411 -14861 -14870 -14875 0
18411 14875 0
18411 14870 0
18411 14871 0
18411 14873 0
18411 14861 0
18411 14861 14870 0
18411 14861 14871 0
18411 14861 14873 0
18411 14862 0
18411 14862 14870 0
18411 14862 14871 0
18411 14862 14873 0
c (((aux1105 + aux1108 + aux1109)<=1)=tv=SATLiteral(18412))
-18412 14900 0
-18412 14894 14899 0
-18412 14895 0
-18412 14897 0
-18412 14885 14899 0
-18412 14885 14894 0
-18412 14885 14895 0
-18412 14885 14897 0
-18412 14886 0
-18412 14886 14894 0
-18412 14886 14895 0
-18412 14886 14897 0
18412 -14886 -14894 -14899 0
18412 -14885 -14895 -14899 0
18412 -14885 -14894 -14900 0
c ((1<=(aux1105 + aux1108 + aux1109))=tv=SATLiteral(18413))
-18413 -14885 -14894 -14899 0
18413 14899 0
18413 14894 0
18413 14895 0
18413 14897 0
18413 14885 0
18413 14885 14894 0
18413 14885 14895 0
18413 14885 14897 0
18413 14886 0
18413 14886 14894 0
18413 14886 14895 0
18413 14886 14897 0
c (((aux1111 + aux1114 + aux1115)<=1)=tv=SATLiteral(18414))
-18414 14924 0
-18414 14918 14923 0
-18414 14919 0
-18414 14921 0
-18414 14909 14923 0
-18414 14909 14918 0
-18414 14909 14919 0
-18414 14909 14921 0
-18414 14910 0
-18414 14910 14918 0
-18414 14910 14919 0
-18414 14910 14921 0
18414 -14910 -14918 -14923 0
18414 -14909 -14919 -14923 0
18414 -14909 -14918 -14924 0
c ((1<=(aux1111 + aux1114 + aux1115))=tv=SATLiteral(18415))
-18415 -14909 -14918 -14923 0
18415 14923 0
18415 14918 0
18415 14919 0
18415 14921 0
18415 14909 0
18415 14909 14918 0
18415 14909 14919 0
18415 14909 14921 0
18415 14910 0
18415 14910 14918 0
18415 14910 14919 0
18415 14910 14921 0
c (((aux1117 + aux1120 + aux1121)<=1)=tv=SATLiteral(18416))
-18416 14948 0
-18416 14942 14947 0
-18416 14943 0
-18416 14945 0
-18416 14933 14947 0
-18416 14933 14942 0
-18416 14933 14943 0
-18416 14933 14945 0
-18416 14934 0
-18416 14934 14942 0
-18416 14934 14943 0
-18416 14934 14945 0
18416 -14934 -14942 -14947 0
18416 -14933 -14943 -14947 0
18416 -14933 -14942 -14948 0
c ((1<=(aux1117 + aux1120 + aux1121))=tv=SATLiteral(18417))
-18417 -14933 -14942 -14947 0
18417 14947 0
18417 14942 0
18417 14943 0
18417 14945 0
18417 14933 0
18417 14933 14942 0
18417 14933 14943 0
18417 14933 14945 0
18417 14934 0
18417 14934 14942 0
18417 14934 14943 0
18417 14934 14945 0
c (((aux1123 + aux1126 + aux1127)<=1)=tv=SATLiteral(18418))
-18418 14972 0
-18418 14966 14971 0
-18418 14967 0
-18418 14969 0
-18418 14957 14971 0
-18418 14957 14966 0
-18418 14957 14967 0
-18418 14957 14969 0
-18418 14958 0
-18418 14958 14966 0
-18418 14958 14967 0
-18418 14958 14969 0
18418 -14958 -14966 -14971 0
18418 -14957 -14967 -14971 0
18418 -14957 -14966 -14972 0
c ((1<=(aux1123 + aux1126 + aux1127))=tv=SATLiteral(18419))
-18419 -14957 -14966 -14971 0
18419 14971 0
18419 14966 0
18419 14967 0
18419 14969 0
18419 14957 0
18419 14957 14966 0
18419 14957 14967 0
18419 14957 14969 0
18419 14958 0
18419 14958 14966 0
18419 14958 14967 0
18419 14958 14969 0
c (((aux1129 + aux1132 + aux1133)<=1)=tv=SATLiteral(18420))
-18420 14996 0
-18420 14990 14995 0
-18420 14991 0
-18420 14993 0
-18420 14981 14995 0
-18420 14981 14990 0
-18420 14981 14991 0
-18420 14981 14993 0
-18420 14982 0
-18420 14982 14990 0
-18420 14982 14991 0
-18420 14982 14993 0
18420 -14982 -14990 -14995 0
18420 -14981 -14991 -14995 0
18420 -14981 -14990 -14996 0
c ((1<=(aux1129 + aux1132 + aux1133))=tv=SATLiteral(18421))
-18421 -14981 -14990 -14995 0
18421 14995 0
18421 14990 0
18421 14991 0
18421 14993 0
18421 14981 0
18421 14981 14990 0
18421 14981 14991 0
18421 14981 14993 0
18421 14982 0
18421 14982 14990 0
18421 14982 14991 0
18421 14982 14993 0
c (((aux1135 + aux1138 + aux1139)<=1)=tv=SATLiteral(18422))
-18422 15020 0
-18422 15014 15019 0
-18422 15015 0
-18422 15017 0
-18422 15005 15019 0
-18422 15005 15014 0
-18422 15005 15015 0
-18422 15005 15017 0
-18422 15006 0
-18422 15006 15014 0
-18422 15006 15015 0
-18422 15006 15017 0
18422 -15006 -15014 -15019 0
18422 -15005 -15015 -15019 0
18422 -15005 -15014 -15020 0
c ((1<=(aux1135 + aux1138 + aux1139))=tv=SATLiteral(18423))
-18423 -15005 -15014 -15019 0
18423 15019 0
18423 15014 0
18423 15015 0
18423 15017 0
18423 15005 0
18423 15005 15014 0
18423 15005 15015 0
18423 15005 15017 0
18423 15006 0
18423 15006 15014 0
18423 15006 15015 0
18423 15006 15017 0
c (((aux1141 + aux1144 + aux1145)<=1)=tv=SATLiteral(18424))
-18424 15044 0
-18424 15038 15043 0
-18424 15039 0
-18424 15041 0
-18424 15029 15043 0
-18424 15029 15038 0
-18424 15029 15039 0
-18424 15029 15041 0
-18424 15030 0
-18424 15030 15038 0
-18424 15030 15039 0
-18424 15030 15041 0
18424 -15030 -15038 -15043 0
18424 -15029 -15039 -15043 0
18424 -15029 -15038 -15044 0
c ((1<=(aux1141 + aux1144 + aux1145))=tv=SATLiteral(18425))
-18425 -15029 -15038 -15043 0
18425 15043 0
18425 15038 0
18425 15039 0
18425 15041 0
18425 15029 0
18425 15029 15038 0
18425 15029 15039 0
18425 15029 15041 0
18425 15030 0
18425 15030 15038 0
18425 15030 15039 0
18425 15030 15041 0
c (((aux1147 + aux1150 + aux1151)<=1)=tv=SATLiteral(18426))
-18426 15068 0
-18426 15062 15067 0
-18426 15063 0
-18426 15065 0
-18426 15053 15067 0
-18426 15053 15062 0
-18426 15053 15063 0
-18426 15053 15065 0
-18426 15054 0
-18426 15054 15062 0
-18426 15054 15063 0
-18426 15054 15065 0
18426 -15054 -15062 -15067 0
18426 -15053 -15063 -15067 0
18426 -15053 -15062 -15068 0
c ((1<=(aux1147 + aux1150 + aux1151))=tv=SATLiteral(18427))
-18427 -15053 -15062 -15067 0
18427 15067 0
18427 15062 0
18427 15063 0
18427 15065 0
18427 15053 0
18427 15053 15062 0
18427 15053 15063 0
18427 15053 15065 0
18427 15054 0
18427 15054 15062 0
18427 15054 15063 0
18427 15054 15065 0
c (((aux1153 + aux1156 + aux1157)<=1)=tv=SATLiteral(18428))
-18428 15092 0
-18428 15086 15091 0
-18428 15087 0
-18428 15089 0
-18428 15077 15091 0
-18428 15077 15086 0
-18428 15077 15087 0
-18428 15077 15089 0
-18428 15078 0
-18428 15078 15086 0
-18428 15078 15087 0
-18428 15078 15089 0
18428 -15078 -15086 -15091 0
18428 -15077 -15087 -15091 0
18428 -15077 -15086 -15092 0
c ((1<=(aux1153 + aux1156 + aux1157))=tv=SATLiteral(18429))
-18429 -15077 -15086 -15091 0
18429 15091 0
18429 15086 0
18429 15087 0
18429 15089 0
18429 15077 0
18429 15077 15086 0
18429 15077 15087 0
18429 15077 15089 0
18429 15078 0
18429 15078 15086 0
18429 15078 15087 0
18429 15078 15089 0
c (((aux1159 + aux1162 + aux1163)<=1)=tv=SATLiteral(18430))
-18430 15116 0
-18430 15110 15115 0
-18430 15111 0
-18430 15113 0
-18430 15101 15115 0
-18430 15101 15110 0
-18430 15101 15111 0
-18430 15101 15113 0
-18430 15102 0
-18430 15102 15110 0
-18430 15102 15111 0
-18430 15102 15113 0
18430 -15102 -15110 -15115 0
18430 -15101 -15111 -15115 0
18430 -15101 -15110 -15116 0
c ((1<=(aux1159 + aux1162 + aux1163))=tv=SATLiteral(18431))
-18431 -15101 -15110 -15115 0
18431 15115 0
18431 15110 0
18431 15111 0
18431 15113 0
18431 15101 0
18431 15101 15110 0
18431 15101 15111 0
18431 15101 15113 0
18431 15102 0
18431 15102 15110 0
18431 15102 15111 0
18431 15102 15113 0
c (((aux1165 + aux1168 + aux1169)<=1)=tv=SATLiteral(18432))
-18432 15140 0
-18432 15134 15139 0
-18432 15135 0
-18432 15137 0
-18432 15125 15139 0
-18432 15125 15134 0
-18432 15125 15135 0
-18432 15125 15137 0
-18432 15126 0
-18432 15126 15134 0
-18432 15126 15135 0
-18432 15126 15137 0
18432 -15126 -15134 -15139 0
18432 -15125 -15135 -15139 0
18432 -15125 -15134 -15140 0
c ((1<=(aux1165 + aux1168 + aux1169))=tv=SATLiteral(18433))
-18433 -15125 -15134 -15139 0
18433 15139 0
18433 15134 0
18433 15135 0
18433 15137 0
18433 15125 0
18433 15125 15134 0
18433 15125 15135 0
18433 15125 15137 0
18433 15126 0
18433 15126 15134 0
18433 15126 15135 0
18433 15126 15137 0
c (((aux1171 + aux1174 + aux1175)<=1)=tv=SATLiteral(18434))
-18434 15164 0
-18434 15158 15163 0
-18434 15159 0
-18434 15161 0
-18434 15149 15163 0
-18434 15149 15158 0
-18434 15149 15159 0
-18434 15149 15161 0
-18434 15150 0
-18434 15150 15158 0
-18434 15150 15159 0
-18434 15150 15161 0
18434 -15150 -15158 -15163 0
18434 -15149 -15159 -15163 0
18434 -15149 -15158 -15164 0
c ((1<=(aux1171 + aux1174 + aux1175))=tv=SATLiteral(18435))
-18435 -15149 -15158 -15163 0
18435 15163 0
18435 15158 0
18435 15159 0
18435 15161 0
18435 15149 0
18435 15149 15158 0
18435 15149 15159 0
18435 15149 15161 0
18435 15150 0
18435 15150 15158 0
18435 15150 15159 0
18435 15150 15161 0
c (((aux1177 + aux1180 + aux1181)<=1)=tv=SATLiteral(18436))
-18436 15188 0
-18436 15182 15187 0
-18436 15183 0
-18436 15185 0
-18436 15173 15187 0
-18436 15173 15182 0
-18436 15173 15183 0
-18436 15173 15185 0
-18436 15174 0
-18436 15174 15182 0
-18436 15174 15183 0
-18436 15174 15185 0
18436 -15174 -15182 -15187 0
18436 -15173 -15183 -15187 0
18436 -15173 -15182 -15188 0
c ((1<=(aux1177 + aux1180 + aux1181))=tv=SATLiteral(18437))
-18437 -15173 -15182 -15187 0
18437 15187 0
18437 15182 0
18437 15183 0
18437 15185 0
18437 15173 0
18437 15173 15182 0
18437 15173 15183 0
18437 15173 15185 0
18437 15174 0
18437 15174 15182 0
18437 15174 15183 0
18437 15174 15185 0
c (((aux1183 + aux1186 + aux1187)<=1)=tv=SATLiteral(18438))
-18438 15212 0
-18438 15206 15211 0
-18438 15207 0
-18438 15209 0
-18438 15197 15211 0
-18438 15197 15206 0
-18438 15197 15207 0
-18438 15197 15209 0
-18438 15198 0
-18438 15198 15206 0
-18438 15198 15207 0
-18438 15198 15209 0
18438 -15198 -15206 -15211 0
18438 -15197 -15207 -15211 0
18438 -15197 -15206 -15212 0
c ((1<=(aux1183 + aux1186 + aux1187))=tv=SATLiteral(18439))
-18439 -15197 -15206 -15211 0
18439 15211 0
18439 15206 0
18439 15207 0
18439 15209 0
18439 15197 0
18439 15197 15206 0
18439 15197 15207 0
18439 15197 15209 0
18439 15198 0
18439 15198 15206 0
18439 15198 15207 0
18439 15198 15209 0
c (((aux1189 + aux1192 + aux1193)<=1)=tv=SATLiteral(18440))
-18440 15236 0
-18440 15230 15235 0
-18440 15231 0
-18440 15233 0
-18440 15221 15235 0
-18440 15221 15230 0
-18440 15221 15231 0
-18440 15221 15233 0
-18440 15222 0
-18440 15222 15230 0
-18440 15222 15231 0
-18440 15222 15233 0
18440 -15222 -15230 -15235 0
18440 -15221 -15231 -15235 0
18440 -15221 -15230 -15236 0
c ((1<=(aux1189 + aux1192 + aux1193))=tv=SATLiteral(18441))
-18441 -15221 -15230 -15235 0
18441 15235 0
18441 15230 0
18441 15231 0
18441 15233 0
18441 15221 0
18441 15221 15230 0
18441 15221 15231 0
18441 15221 15233 0
18441 15222 0
18441 15222 15230 0
18441 15222 15231 0
18441 15222 15233 0
c (((aux1195 + aux1198 + aux1199)<=1)=tv=SATLiteral(18442))
-18442 15260 0
-18442 15254 15259 0
-18442 15255 0
-18442 15257 0
-18442 15245 15259 0
-18442 15245 15254 0
-18442 15245 15255 0
-18442 15245 15257 0
-18442 15246 0
-18442 15246 15254 0
-18442 15246 15255 0
-18442 15246 15257 0
18442 -15246 -15254 -15259 0
18442 -15245 -15255 -15259 0
18442 -15245 -15254 -15260 0
c ((1<=(aux1195 + aux1198 + aux1199))=tv=SATLiteral(18443))
-18443 -15245 -15254 -15259 0
18443 15259 0
18443 15254 0
18443 15255 0
18443 15257 0
18443 15245 0
18443 15245 15254 0
18443 15245 15255 0
18443 15245 15257 0
18443 15246 0
18443 15246 15254 0
18443 15246 15255 0
18443 15246 15257 0
c (((aux1201 + aux1204 + aux1205)<=1)=tv=SATLiteral(18444))
-18444 15284 0
-18444 15278 15283 0
-18444 15279 0
-18444 15281 0
-18444 15269 15283 0
-18444 15269 15278 0
-18444 15269 15279 0
-18444 15269 15281 0
-18444 15270 0
-18444 15270 15278 0
-18444 15270 15279 0
-18444 15270 15281 0
18444 -15270 -15278 -15283 0
18444 -15269 -15279 -15283 0
18444 -15269 -15278 -15284 0
c ((1<=(aux1201 + aux1204 + aux1205))=tv=SATLiteral(18445))
-18445 -15269 -15278 -15283 0
18445 15283 0
18445 15278 0
18445 15279 0
18445 15281 0
18445 15269 0
18445 15269 15278 0
18445 15269 15279 0
18445 15269 15281 0
18445 15270 0
18445 15270 15278 0
18445 15270 15279 0
18445 15270 15281 0
c (((aux1207 + aux1210 + aux1211)<=1)=tv=SATLiteral(18446))
-18446 15308 0
-18446 15302 15307 0
-18446 15303 0
-18446 15305 0
-18446 15293 15307 0
-18446 15293 15302 0
-18446 15293 15303 0
-18446 15293 15305 0
-18446 15294 0
-18446 15294 15302 0
-18446 15294 15303 0
-18446 15294 15305 0
18446 -15294 -15302 -15307 0
18446 -15293 -15303 -15307 0
18446 -15293 -15302 -15308 0
c ((1<=(aux1207 + aux1210 + aux1211))=tv=SATLiteral(18447))
-18447 -15293 -15302 -15307 0
18447 15307 0
18447 15302 0
18447 15303 0
18447 15305 0
18447 15293 0
18447 15293 15302 0
18447 15293 15303 0
18447 15293 15305 0
18447 15294 0
18447 15294 15302 0
18447 15294 15303 0
18447 15294 15305 0
c (((aux1213 + aux1216 + aux1217)<=1)=tv=SATLiteral(18448))
-18448 15332 0
-18448 15326 15331 0
-18448 15327 0
-18448 15329 0
-18448 15317 15331 0
-18448 15317 15326 0
-18448 15317 15327 0
-18448 15317 15329 0
-18448 15318 0
-18448 15318 15326 0
-18448 15318 15327 0
-18448 15318 15329 0
18448 -15318 -15326 -15331 0
18448 -15317 -15327 -15331 0
18448 -15317 -15326 -15332 0
c ((1<=(aux1213 + aux1216 + aux1217))=tv=SATLiteral(18449))
-18449 -15317 -15326 -15331 0
18449 15331 0
18449 15326 0
18449 15327 0
18449 15329 0
18449 15317 0
18449 15317 15326 0
18449 15317 15327 0
18449 15317 15329 0
18449 15318 0
18449 15318 15326 0
18449 15318 15327 0
18449 15318 15329 0
c (((aux1219 + aux1222 + aux1223)<=1)=tv=SATLiteral(18450))
-18450 15356 0
-18450 15350 15355 0
-18450 15351 0
-18450 15353 0
-18450 15341 15355 0
-18450 15341 15350 0
-18450 15341 15351 0
-18450 15341 15353 0
-18450 15342 0
-18450 15342 15350 0
-18450 15342 15351 0
-18450 15342 15353 0
18450 -15342 -15350 -15355 0
18450 -15341 -15351 -15355 0
18450 -15341 -15350 -15356 0
c ((1<=(aux1219 + aux1222 + aux1223))=tv=SATLiteral(18451))
-18451 -15341 -15350 -15355 0
18451 15355 0
18451 15350 0
18451 15351 0
18451 15353 0
18451 15341 0
18451 15341 15350 0
18451 15341 15351 0
18451 15341 15353 0
18451 15342 0
18451 15342 15350 0
18451 15342 15351 0
18451 15342 15353 0
c (((aux1225 + aux1228 + aux1229)<=1)=tv=SATLiteral(18452))
-18452 15380 0
-18452 15374 15379 0
-18452 15375 0
-18452 15377 0
-18452 15365 15379 0
-18452 15365 15374 0
-18452 15365 15375 0
-18452 15365 15377 0
-18452 15366 0
-18452 15366 15374 0
-18452 15366 15375 0
-18452 15366 15377 0
18452 -15366 -15374 -15379 0
18452 -15365 -15375 -15379 0
18452 -15365 -15374 -15380 0
c ((1<=(aux1225 + aux1228 + aux1229))=tv=SATLiteral(18453))
-18453 -15365 -15374 -15379 0
18453 15379 0
18453 15374 0
18453 15375 0
18453 15377 0
18453 15365 0
18453 15365 15374 0
18453 15365 15375 0
18453 15365 15377 0
18453 15366 0
18453 15366 15374 0
18453 15366 15375 0
18453 15366 15377 0
c (((aux1231 + aux1234 + aux1235)<=1)=tv=SATLiteral(18454))
-18454 15404 0
-18454 15398 15403 0
-18454 15399 0
-18454 15401 0
-18454 15389 15403 0
-18454 15389 15398 0
-18454 15389 15399 0
-18454 15389 15401 0
-18454 15390 0
-18454 15390 15398 0
-18454 15390 15399 0
-18454 15390 15401 0
18454 -15390 -15398 -15403 0
18454 -15389 -15399 -15403 0
18454 -15389 -15398 -15404 0
c ((1<=(aux1231 + aux1234 + aux1235))=tv=SATLiteral(18455))
-18455 -15389 -15398 -15403 0
18455 15403 0
18455 15398 0
18455 15399 0
18455 15401 0
18455 15389 0
18455 15389 15398 0
18455 15389 15399 0
18455 15389 15401 0
18455 15390 0
18455 15390 15398 0
18455 15390 15399 0
18455 15390 15401 0
c (((aux1237 + aux1240 + aux1241)<=1)=tv=SATLiteral(18456))
-18456 15428 0
-18456 15422 15427 0
-18456 15423 0
-18456 15425 0
-18456 15413 15427 0
-18456 15413 15422 0
-18456 15413 15423 0
-18456 15413 15425 0
-18456 15414 0
-18456 15414 15422 0
-18456 15414 15423 0
-18456 15414 15425 0
18456 -15414 -15422 -15427 0
18456 -15413 -15423 -15427 0
18456 -15413 -15422 -15428 0
c ((1<=(aux1237 + aux1240 + aux1241))=tv=SATLiteral(18457))
-18457 -15413 -15422 -15427 0
18457 15427 0
18457 15422 0
18457 15423 0
18457 15425 0
18457 15413 0
18457 15413 15422 0
18457 15413 15423 0
18457 15413 15425 0
18457 15414 0
18457 15414 15422 0
18457 15414 15423 0
18457 15414 15425 0
c (((aux1243 + aux1246 + aux1247)<=1)=tv=SATLiteral(18458))
-18458 15452 0
-18458 15446 15451 0
-18458 15447 0
-18458 15449 0
-18458 15437 15451 0
-18458 15437 15446 0
-18458 15437 15447 0
-18458 15437 15449 0
-18458 15438 0
-18458 15438 15446 0
-18458 15438 15447 0
-18458 15438 15449 0
18458 -15438 -15446 -15451 0
18458 -15437 -15447 -15451 0
18458 -15437 -15446 -15452 0
c ((1<=(aux1243 + aux1246 + aux1247))=tv=SATLiteral(18459))
-18459 -15437 -15446 -15451 0
18459 15451 0
18459 15446 0
18459 15447 0
18459 15449 0
18459 15437 0
18459 15437 15446 0
18459 15437 15447 0
18459 15437 15449 0
18459 15438 0
18459 15438 15446 0
18459 15438 15447 0
18459 15438 15449 0
c (((aux1249 + aux1252 + aux1253)<=1)=tv=SATLiteral(18460))
-18460 15476 0
-18460 15470 15475 0
-18460 15471 0
-18460 15473 0
-18460 15461 15475 0
-18460 15461 15470 0
-18460 15461 15471 0
-18460 15461 15473 0
-18460 15462 0
-18460 15462 15470 0
-18460 15462 15471 0
-18460 15462 15473 0
18460 -15462 -15470 -15475 0
18460 -15461 -15471 -15475 0
18460 -15461 -15470 -15476 0
c ((1<=(aux1249 + aux1252 + aux1253))=tv=SATLiteral(18461))
-18461 -15461 -15470 -15475 0
18461 15475 0
18461 15470 0
18461 15471 0
18461 15473 0
18461 15461 0
18461 15461 15470 0
18461 15461 15471 0
18461 15461 15473 0
18461 15462 0
18461 15462 15470 0
18461 15462 15471 0
18461 15462 15473 0
c (((aux1255 + aux1258 + aux1259)<=1)=tv=SATLiteral(18462))
-18462 15500 0
-18462 15494 15499 0
-18462 15495 0
-18462 15497 0
-18462 15485 15499 0
-18462 15485 15494 0
-18462 15485 15495 0
-18462 15485 15497 0
-18462 15486 0
-18462 15486 15494 0
-18462 15486 15495 0
-18462 15486 15497 0
18462 -15486 -15494 -15499 0
18462 -15485 -15495 -15499 0
18462 -15485 -15494 -15500 0
c ((1<=(aux1255 + aux1258 + aux1259))=tv=SATLiteral(18463))
-18463 -15485 -15494 -15499 0
18463 15499 0
18463 15494 0
18463 15495 0
18463 15497 0
18463 15485 0
18463 15485 15494 0
18463 15485 15495 0
18463 15485 15497 0
18463 15486 0
18463 15486 15494 0
18463 15486 15495 0
18463 15486 15497 0
c (((aux1261 + aux1264 + aux1265)<=1)=tv=SATLiteral(18464))
-18464 15524 0
-18464 15518 15523 0
-18464 15519 0
-18464 15521 0
-18464 15509 15523 0
-18464 15509 15518 0
-18464 15509 15519 0
-18464 15509 15521 0
-18464 15510 0
-18464 15510 15518 0
-18464 15510 15519 0
-18464 15510 15521 0
18464 -15510 -15518 -15523 0
18464 -15509 -15519 -15523 0
18464 -15509 -15518 -15524 0
c ((1<=(aux1261 + aux1264 + aux1265))=tv=SATLiteral(18465))
-18465 -15509 -15518 -15523 0
18465 15523 0
18465 15518 0
18465 15519 0
18465 15521 0
18465 15509 0
18465 15509 15518 0
18465 15509 15519 0
18465 15509 15521 0
18465 15510 0
18465 15510 15518 0
18465 15510 15519 0
18465 15510 15521 0
c (((aux1267 + aux1270 + aux1271)<=1)=tv=SATLiteral(18466))
-18466 15548 0
-18466 15542 15547 0
-18466 15543 0
-18466 15545 0
-18466 15533 15547 0
-18466 15533 15542 0
-18466 15533 15543 0
-18466 15533 15545 0
-18466 15534 0
-18466 15534 15542 0
-18466 15534 15543 0
-18466 15534 15545 0
18466 -15534 -15542 -15547 0
18466 -15533 -15543 -15547 0
18466 -15533 -15542 -15548 0
c ((1<=(aux1267 + aux1270 + aux1271))=tv=SATLiteral(18467))
-18467 -15533 -15542 -15547 0
18467 15547 0
18467 15542 0
18467 15543 0
18467 15545 0
18467 15533 0
18467 15533 15542 0
18467 15533 15543 0
18467 15533 15545 0
18467 15534 0
18467 15534 15542 0
18467 15534 15543 0
18467 15534 15545 0
c (((aux1273 + aux1276 + aux1277)<=1)=tv=SATLiteral(18468))
-18468 15572 0
-18468 15566 15571 0
-18468 15567 0
-18468 15569 0
-18468 15557 15571 0
-18468 15557 15566 0
-18468 15557 15567 0
-18468 15557 15569 0
-18468 15558 0
-18468 15558 15566 0
-18468 15558 15567 0
-18468 15558 15569 0
18468 -15558 -15566 -15571 0
18468 -15557 -15567 -15571 0
18468 -15557 -15566 -15572 0
c ((1<=(aux1273 + aux1276 + aux1277))=tv=SATLiteral(18469))
-18469 -15557 -15566 -15571 0
18469 15571 0
18469 15566 0
18469 15567 0
18469 15569 0
18469 15557 0
18469 15557 15566 0
18469 15557 15567 0
18469 15557 15569 0
18469 15558 0
18469 15558 15566 0
18469 15558 15567 0
18469 15558 15569 0
c (((aux1279 + aux1282 + aux1283)<=1)=tv=SATLiteral(18470))
-18470 15596 0
-18470 15590 15595 0
-18470 15591 0
-18470 15593 0
-18470 15581 15595 0
-18470 15581 15590 0
-18470 15581 15591 0
-18470 15581 15593 0
-18470 15582 0
-18470 15582 15590 0
-18470 15582 15591 0
-18470 15582 15593 0
18470 -15582 -15590 -15595 0
18470 -15581 -15591 -15595 0
18470 -15581 -15590 -15596 0
c ((1<=(aux1279 + aux1282 + aux1283))=tv=SATLiteral(18471))
-18471 -15581 -15590 -15595 0
18471 15595 0
18471 15590 0
18471 15591 0
18471 15593 0
18471 15581 0
18471 15581 15590 0
18471 15581 15591 0
18471 15581 15593 0
18471 15582 0
18471 15582 15590 0
18471 15582 15591 0
18471 15582 15593 0
c (((aux1285 + aux1288 + aux1289)<=1)=tv=SATLiteral(18472))
-18472 15620 0
-18472 15614 15619 0
-18472 15615 0
-18472 15617 0
-18472 15605 15619 0
-18472 15605 15614 0
-18472 15605 15615 0
-18472 15605 15617 0
-18472 15606 0
-18472 15606 15614 0
-18472 15606 15615 0
-18472 15606 15617 0
18472 -15606 -15614 -15619 0
18472 -15605 -15615 -15619 0
18472 -15605 -15614 -15620 0
c ((1<=(aux1285 + aux1288 + aux1289))=tv=SATLiteral(18473))
-18473 -15605 -15614 -15619 0
18473 15619 0
18473 15614 0
18473 15615 0
18473 15617 0
18473 15605 0
18473 15605 15614 0
18473 15605 15615 0
18473 15605 15617 0
18473 15606 0
18473 15606 15614 0
18473 15606 15615 0
18473 15606 15617 0
c (((aux1291 + aux1294 + aux1295)<=1)=tv=SATLiteral(18474))
-18474 15644 0
-18474 15638 15643 0
-18474 15639 0
-18474 15641 0
-18474 15629 15643 0
-18474 15629 15638 0
-18474 15629 15639 0
-18474 15629 15641 0
-18474 15630 0
-18474 15630 15638 0
-18474 15630 15639 0
-18474 15630 15641 0
18474 -15630 -15638 -15643 0
18474 -15629 -15639 -15643 0
18474 -15629 -15638 -15644 0
c ((1<=(aux1291 + aux1294 + aux1295))=tv=SATLiteral(18475))
-18475 -15629 -15638 -15643 0
18475 15643 0
18475 15638 0
18475 15639 0
18475 15641 0
18475 15629 0
18475 15629 15638 0
18475 15629 15639 0
18475 15629 15641 0
18475 15630 0
18475 15630 15638 0
18475 15630 15639 0
18475 15630 15641 0
c (((aux1297 + aux1300 + aux1301)<=1)=tv=SATLiteral(18476))
-18476 15668 0
-18476 15662 15667 0
-18476 15663 0
-18476 15665 0
-18476 15653 15667 0
-18476 15653 15662 0
-18476 15653 15663 0
-18476 15653 15665 0
-18476 15654 0
-18476 15654 15662 0
-18476 15654 15663 0
-18476 15654 15665 0
18476 -15654 -15662 -15667 0
18476 -15653 -15663 -15667 0
18476 -15653 -15662 -15668 0
c ((1<=(aux1297 + aux1300 + aux1301))=tv=SATLiteral(18477))
-18477 -15653 -15662 -15667 0
18477 15667 0
18477 15662 0
18477 15663 0
18477 15665 0
18477 15653 0
18477 15653 15662 0
18477 15653 15663 0
18477 15653 15665 0
18477 15654 0
18477 15654 15662 0
18477 15654 15663 0
18477 15654 15665 0
c (((aux1303 + aux1306 + aux1307)<=1)=tv=SATLiteral(18478))
-18478 15692 0
-18478 15686 15691 0
-18478 15687 0
-18478 15689 0
-18478 15677 15691 0
-18478 15677 15686 0
-18478 15677 15687 0
-18478 15677 15689 0
-18478 15678 0
-18478 15678 15686 0
-18478 15678 15687 0
-18478 15678 15689 0
18478 -15678 -15686 -15691 0
18478 -15677 -15687 -15691 0
18478 -15677 -15686 -15692 0
c ((1<=(aux1303 + aux1306 + aux1307))=tv=SATLiteral(18479))
-18479 -15677 -15686 -15691 0
18479 15691 0
18479 15686 0
18479 15687 0
18479 15689 0
18479 15677 0
18479 15677 15686 0
18479 15677 15687 0
18479 15677 15689 0
18479 15678 0
18479 15678 15686 0
18479 15678 15687 0
18479 15678 15689 0
c (((aux1309 + aux1312 + aux1313)<=1)=tv=SATLiteral(18480))
-18480 15716 0
-18480 15710 15715 0
-18480 15711 0
-18480 15713 0
-18480 15701 15715 0
-18480 15701 15710 0
-18480 15701 15711 0
-18480 15701 15713 0
-18480 15702 0
-18480 15702 15710 0
-18480 15702 15711 0
-18480 15702 15713 0
18480 -15702 -15710 -15715 0
18480 -15701 -15711 -15715 0
18480 -15701 -15710 -15716 0
c ((1<=(aux1309 + aux1312 + aux1313))=tv=SATLiteral(18481))
-18481 -15701 -15710 -15715 0
18481 15715 0
18481 15710 0
18481 15711 0
18481 15713 0
18481 15701 0
18481 15701 15710 0
18481 15701 15711 0
18481 15701 15713 0
18481 15702 0
18481 15702 15710 0
18481 15702 15711 0
18481 15702 15713 0
c (((aux1315 + aux1318 + aux1319)<=1)=tv=SATLiteral(18482))
-18482 15740 0
-18482 15734 15739 0
-18482 15735 0
-18482 15737 0
-18482 15725 15739 0
-18482 15725 15734 0
-18482 15725 15735 0
-18482 15725 15737 0
-18482 15726 0
-18482 15726 15734 0
-18482 15726 15735 0
-18482 15726 15737 0
18482 -15726 -15734 -15739 0
18482 -15725 -15735 -15739 0
18482 -15725 -15734 -15740 0
c ((1<=(aux1315 + aux1318 + aux1319))=tv=SATLiteral(18483))
-18483 -15725 -15734 -15739 0
18483 15739 0
18483 15734 0
18483 15735 0
18483 15737 0
18483 15725 0
18483 15725 15734 0
18483 15725 15735 0
18483 15725 15737 0
18483 15726 0
18483 15726 15734 0
18483 15726 15735 0
18483 15726 15737 0
c (((aux1321 + aux1324 + aux1325)<=1)=tv=SATLiteral(18484))
-18484 15764 0
-18484 15758 15763 0
-18484 15759 0
-18484 15761 0
-18484 15749 15763 0
-18484 15749 15758 0
-18484 15749 15759 0
-18484 15749 15761 0
-18484 15750 0
-18484 15750 15758 0
-18484 15750 15759 0
-18484 15750 15761 0
18484 -15750 -15758 -15763 0
18484 -15749 -15759 -15763 0
18484 -15749 -15758 -15764 0
c ((1<=(aux1321 + aux1324 + aux1325))=tv=SATLiteral(18485))
-18485 -15749 -15758 -15763 0
18485 15763 0
18485 15758 0
18485 15759 0
18485 15761 0
18485 15749 0
18485 15749 15758 0
18485 15749 15759 0
18485 15749 15761 0
18485 15750 0
18485 15750 15758 0
18485 15750 15759 0
18485 15750 15761 0
c (((aux1327 + aux1330 + aux1331)<=1)=tv=SATLiteral(18486))
-18486 15788 0
-18486 15782 15787 0
-18486 15783 0
-18486 15785 0
-18486 15773 15787 0
-18486 15773 15782 0
-18486 15773 15783 0
-18486 15773 15785 0
-18486 15774 0
-18486 15774 15782 0
-18486 15774 15783 0
-18486 15774 15785 0
18486 -15774 -15782 -15787 0
18486 -15773 -15783 -15787 0
18486 -15773 -15782 -15788 0
c ((1<=(aux1327 + aux1330 + aux1331))=tv=SATLiteral(18487))
-18487 -15773 -15782 -15787 0
18487 15787 0
18487 15782 0
18487 15783 0
18487 15785 0
18487 15773 0
18487 15773 15782 0
18487 15773 15783 0
18487 15773 15785 0
18487 15774 0
18487 15774 15782 0
18487 15774 15783 0
18487 15774 15785 0
c (((aux1333 + aux1336 + aux1337)<=1)=tv=SATLiteral(18488))
-18488 15812 0
-18488 15806 15811 0
-18488 15807 0
-18488 15809 0
-18488 15797 15811 0
-18488 15797 15806 0
-18488 15797 15807 0
-18488 15797 15809 0
-18488 15798 0
-18488 15798 15806 0
-18488 15798 15807 0
-18488 15798 15809 0
18488 -15798 -15806 -15811 0
18488 -15797 -15807 -15811 0
18488 -15797 -15806 -15812 0
c ((1<=(aux1333 + aux1336 + aux1337))=tv=SATLiteral(18489))
-18489 -15797 -15806 -15811 0
18489 15811 0
18489 15806 0
18489 15807 0
18489 15809 0
18489 15797 0
18489 15797 15806 0
18489 15797 15807 0
18489 15797 15809 0
18489 15798 0
18489 15798 15806 0
18489 15798 15807 0
18489 15798 15809 0
c (((aux1339 + aux1342 + aux1343)<=1)=tv=SATLiteral(18490))
-18490 15836 0
-18490 15830 15835 0
-18490 15831 0
-18490 15833 0
-18490 15821 15835 0
-18490 15821 15830 0
-18490 15821 15831 0
-18490 15821 15833 0
-18490 15822 0
-18490 15822 15830 0
-18490 15822 15831 0
-18490 15822 15833 0
18490 -15822 -15830 -15835 0
18490 -15821 -15831 -15835 0
18490 -15821 -15830 -15836 0
c ((1<=(aux1339 + aux1342 + aux1343))=tv=SATLiteral(18491))
-18491 -15821 -15830 -15835 0
18491 15835 0
18491 15830 0
18491 15831 0
18491 15833 0
18491 15821 0
18491 15821 15830 0
18491 15821 15831 0
18491 15821 15833 0
18491 15822 0
18491 15822 15830 0
18491 15822 15831 0
18491 15822 15833 0
c (((aux1345 + aux1348 + aux1349)<=1)=tv=SATLiteral(18492))
-18492 15860 0
-18492 15854 15859 0
-18492 15855 0
-18492 15857 0
-18492 15845 15859 0
-18492 15845 15854 0
-18492 15845 15855 0
-18492 15845 15857 0
-18492 15846 0
-18492 15846 15854 0
-18492 15846 15855 0
-18492 15846 15857 0
18492 -15846 -15854 -15859 0
18492 -15845 -15855 -15859 0
18492 -15845 -15854 -15860 0
c ((1<=(aux1345 + aux1348 + aux1349))=tv=SATLiteral(18493))
-18493 -15845 -15854 -15859 0
18493 15859 0
18493 15854 0
18493 15855 0
18493 15857 0
18493 15845 0
18493 15845 15854 0
18493 15845 15855 0
18493 15845 15857 0
18493 15846 0
18493 15846 15854 0
18493 15846 15855 0
18493 15846 15857 0
c (((aux1351 + aux1354 + aux1355)<=1)=tv=SATLiteral(18494))
-18494 15884 0
-18494 15878 15883 0
-18494 15879 0
-18494 15881 0
-18494 15869 15883 0
-18494 15869 15878 0
-18494 15869 15879 0
-18494 15869 15881 0
-18494 15870 0
-18494 15870 15878 0
-18494 15870 15879 0
-18494 15870 15881 0
18494 -15870 -15878 -15883 0
18494 -15869 -15879 -15883 0
18494 -15869 -15878 -15884 0
c ((1<=(aux1351 + aux1354 + aux1355))=tv=SATLiteral(18495))
-18495 -15869 -15878 -15883 0
18495 15883 0
18495 15878 0
18495 15879 0
18495 15881 0
18495 15869 0
18495 15869 15878 0
18495 15869 15879 0
18495 15869 15881 0
18495 15870 0
18495 15870 15878 0
18495 15870 15879 0
18495 15870 15881 0
c (((aux1357 + aux1360 + aux1361)<=1)=tv=SATLiteral(18496))
-18496 15908 0
-18496 15902 15907 0
-18496 15903 0
-18496 15905 0
-18496 15893 15907 0
-18496 15893 15902 0
-18496 15893 15903 0
-18496 15893 15905 0
-18496 15894 0
-18496 15894 15902 0
-18496 15894 15903 0
-18496 15894 15905 0
18496 -15894 -15902 -15907 0
18496 -15893 -15903 -15907 0
18496 -15893 -15902 -15908 0
c ((1<=(aux1357 + aux1360 + aux1361))=tv=SATLiteral(18497))
-18497 -15893 -15902 -15907 0
18497 15907 0
18497 15902 0
18497 15903 0
18497 15905 0
18497 15893 0
18497 15893 15902 0
18497 15893 15903 0
18497 15893 15905 0
18497 15894 0
18497 15894 15902 0
18497 15894 15903 0
18497 15894 15905 0
c (((aux1363 + aux1366 + aux1367)<=1)=tv=SATLiteral(18498))
-18498 15932 0
-18498 15926 15931 0
-18498 15927 0
-18498 15929 0
-18498 15917 15931 0
-18498 15917 15926 0
-18498 15917 15927 0
-18498 15917 15929 0
-18498 15918 0
-18498 15918 15926 0
-18498 15918 15927 0
-18498 15918 15929 0
18498 -15918 -15926 -15931 0
18498 -15917 -15927 -15931 0
18498 -15917 -15926 -15932 0
c ((1<=(aux1363 + aux1366 + aux1367))=tv=SATLiteral(18499))
-18499 -15917 -15926 -15931 0
18499 15931 0
18499 15926 0
18499 15927 0
18499 15929 0
18499 15917 0
18499 15917 15926 0
18499 15917 15927 0
18499 15917 15929 0
18499 15918 0
18499 15918 15926 0
18499 15918 15927 0
18499 15918 15929 0
c (((aux1369 + aux1372 + aux1373)<=1)=tv=SATLiteral(18500))
-18500 15956 0
-18500 15950 15955 0
-18500 15951 0
-18500 15953 0
-18500 15941 15955 0
-18500 15941 15950 0
-18500 15941 15951 0
-18500 15941 15953 0
-18500 15942 0
-18500 15942 15950 0
-18500 15942 15951 0
-18500 15942 15953 0
18500 -15942 -15950 -15955 0
18500 -15941 -15951 -15955 0
18500 -15941 -15950 -15956 0
c ((1<=(aux1369 + aux1372 + aux1373))=tv=SATLiteral(18501))
-18501 -15941 -15950 -15955 0
18501 15955 0
18501 15950 0
18501 15951 0
18501 15953 0
18501 15941 0
18501 15941 15950 0
18501 15941 15951 0
18501 15941 15953 0
18501 15942 0
18501 15942 15950 0
18501 15942 15951 0
18501 15942 15953 0
c (((aux1375 + aux1378 + aux1379)<=1)=tv=SATLiteral(18502))
-18502 15980 0
-18502 15974 15979 0
-18502 15975 0
-18502 15977 0
-18502 15965 15979 0
-18502 15965 15974 0
-18502 15965 15975 0
-18502 15965 15977 0
-18502 15966 0
-18502 15966 15974 0
-18502 15966 15975 0
-18502 15966 15977 0
18502 -15966 -15974 -15979 0
18502 -15965 -15975 -15979 0
18502 -15965 -15974 -15980 0
c ((1<=(aux1375 + aux1378 + aux1379))=tv=SATLiteral(18503))
-18503 -15965 -15974 -15979 0
18503 15979 0
18503 15974 0
18503 15975 0
18503 15977 0
18503 15965 0
18503 15965 15974 0
18503 15965 15975 0
18503 15965 15977 0
18503 15966 0
18503 15966 15974 0
18503 15966 15975 0
18503 15966 15977 0
c (((aux1381 + aux1384 + aux1385)<=1)=tv=SATLiteral(18504))
-18504 16004 0
-18504 15998 16003 0
-18504 15999 0
-18504 16001 0
-18504 15989 16003 0
-18504 15989 15998 0
-18504 15989 15999 0
-18504 15989 16001 0
-18504 15990 0
-18504 15990 15998 0
-18504 15990 15999 0
-18504 15990 16001 0
18504 -15990 -15998 -16003 0
18504 -15989 -15999 -16003 0
18504 -15989 -15998 -16004 0
c ((1<=(aux1381 + aux1384 + aux1385))=tv=SATLiteral(18505))
-18505 -15989 -15998 -16003 0
18505 16003 0
18505 15998 0
18505 15999 0
18505 16001 0
18505 15989 0
18505 15989 15998 0
18505 15989 15999 0
18505 15989 16001 0
18505 15990 0
18505 15990 15998 0
18505 15990 15999 0
18505 15990 16001 0
c (((aux1387 + aux1390 + aux1391)<=1)=tv=SATLiteral(18506))
-18506 16028 0
-18506 16022 16027 0
-18506 16023 0
-18506 16025 0
-18506 16013 16027 0
-18506 16013 16022 0
-18506 16013 16023 0
-18506 16013 16025 0
-18506 16014 0
-18506 16014 16022 0
-18506 16014 16023 0
-18506 16014 16025 0
18506 -16014 -16022 -16027 0
18506 -16013 -16023 -16027 0
18506 -16013 -16022 -16028 0
c ((1<=(aux1387 + aux1390 + aux1391))=tv=SATLiteral(18507))
-18507 -16013 -16022 -16027 0
18507 16027 0
18507 16022 0
18507 16023 0
18507 16025 0
18507 16013 0
18507 16013 16022 0
18507 16013 16023 0
18507 16013 16025 0
18507 16014 0
18507 16014 16022 0
18507 16014 16023 0
18507 16014 16025 0
c (((aux1393 + aux1396 + aux1397)<=1)=tv=SATLiteral(18508))
-18508 16052 0
-18508 16046 16051 0
-18508 16047 0
-18508 16049 0
-18508 16037 16051 0
-18508 16037 16046 0
-18508 16037 16047 0
-18508 16037 16049 0
-18508 16038 0
-18508 16038 16046 0
-18508 16038 16047 0
-18508 16038 16049 0
18508 -16038 -16046 -16051 0
18508 -16037 -16047 -16051 0
18508 -16037 -16046 -16052 0
c ((1<=(aux1393 + aux1396 + aux1397))=tv=SATLiteral(18509))
-18509 -16037 -16046 -16051 0
18509 16051 0
18509 16046 0
18509 16047 0
18509 16049 0
18509 16037 0
18509 16037 16046 0
18509 16037 16047 0
18509 16037 16049 0
18509 16038 0
18509 16038 16046 0
18509 16038 16047 0
18509 16038 16049 0
c (((aux1399 + aux1402 + aux1403)<=1)=tv=SATLiteral(18510))
-18510 16076 0
-18510 16070 16075 0
-18510 16071 0
-18510 16073 0
-18510 16061 16075 0
-18510 16061 16070 0
-18510 16061 16071 0
-18510 16061 16073 0
-18510 16062 0
-18510 16062 16070 0
-18510 16062 16071 0
-18510 16062 16073 0
18510 -16062 -16070 -16075 0
18510 -16061 -16071 -16075 0
18510 -16061 -16070 -16076 0
c ((1<=(aux1399 + aux1402 + aux1403))=tv=SATLiteral(18511))
-18511 -16061 -16070 -16075 0
18511 16075 0
18511 16070 0
18511 16071 0
18511 16073 0
18511 16061 0
18511 16061 16070 0
18511 16061 16071 0
18511 16061 16073 0
18511 16062 0
18511 16062 16070 0
18511 16062 16071 0
18511 16062 16073 0
c (((aux1405 + aux1408 + aux1409)<=1)=tv=SATLiteral(18512))
-18512 16100 0
-18512 16094 16099 0
-18512 16095 0
-18512 16097 0
-18512 16085 16099 0
-18512 16085 16094 0
-18512 16085 16095 0
-18512 16085 16097 0
-18512 16086 0
-18512 16086 16094 0
-18512 16086 16095 0
-18512 16086 16097 0
18512 -16086 -16094 -16099 0
18512 -16085 -16095 -16099 0
18512 -16085 -16094 -16100 0
c ((1<=(aux1405 + aux1408 + aux1409))=tv=SATLiteral(18513))
-18513 -16085 -16094 -16099 0
18513 16099 0
18513 16094 0
18513 16095 0
18513 16097 0
18513 16085 0
18513 16085 16094 0
18513 16085 16095 0
18513 16085 16097 0
18513 16086 0
18513 16086 16094 0
18513 16086 16095 0
18513 16086 16097 0
c (((aux1411 + aux1414 + aux1415)<=1)=tv=SATLiteral(18514))
-18514 16124 0
-18514 16118 16123 0
-18514 16119 0
-18514 16121 0
-18514 16109 16123 0
-18514 16109 16118 0
-18514 16109 16119 0
-18514 16109 16121 0
-18514 16110 0
-18514 16110 16118 0
-18514 16110 16119 0
-18514 16110 16121 0
18514 -16110 -16118 -16123 0
18514 -16109 -16119 -16123 0
18514 -16109 -16118 -16124 0
c ((1<=(aux1411 + aux1414 + aux1415))=tv=SATLiteral(18515))
-18515 -16109 -16118 -16123 0
18515 16123 0
18515 16118 0
18515 16119 0
18515 16121 0
18515 16109 0
18515 16109 16118 0
18515 16109 16119 0
18515 16109 16121 0
18515 16110 0
18515 16110 16118 0
18515 16110 16119 0
18515 16110 16121 0
c (((aux1417 + aux1420 + aux1421)<=1)=tv=SATLiteral(18516))
-18516 16148 0
-18516 16142 16147 0
-18516 16143 0
-18516 16145 0
-18516 16133 16147 0
-18516 16133 16142 0
-18516 16133 16143 0
-18516 16133 16145 0
-18516 16134 0
-18516 16134 16142 0
-18516 16134 16143 0
-18516 16134 16145 0
18516 -16134 -16142 -16147 0
18516 -16133 -16143 -16147 0
18516 -16133 -16142 -16148 0
c ((1<=(aux1417 + aux1420 + aux1421))=tv=SATLiteral(18517))
-18517 -16133 -16142 -16147 0
18517 16147 0
18517 16142 0
18517 16143 0
18517 16145 0
18517 16133 0
18517 16133 16142 0
18517 16133 16143 0
18517 16133 16145 0
18517 16134 0
18517 16134 16142 0
18517 16134 16143 0
18517 16134 16145 0
c (((aux1423 + aux1426 + aux1427)<=1)=tv=SATLiteral(18518))
-18518 16172 0
-18518 16166 16171 0
-18518 16167 0
-18518 16169 0
-18518 16157 16171 0
-18518 16157 16166 0
-18518 16157 16167 0
-18518 16157 16169 0
-18518 16158 0
-18518 16158 16166 0
-18518 16158 16167 0
-18518 16158 16169 0
18518 -16158 -16166 -16171 0
18518 -16157 -16167 -16171 0
18518 -16157 -16166 -16172 0
c ((1<=(aux1423 + aux1426 + aux1427))=tv=SATLiteral(18519))
-18519 -16157 -16166 -16171 0
18519 16171 0
18519 16166 0
18519 16167 0
18519 16169 0
18519 16157 0
18519 16157 16166 0
18519 16157 16167 0
18519 16157 16169 0
18519 16158 0
18519 16158 16166 0
18519 16158 16167 0
18519 16158 16169 0
c (((aux1429 + aux1432 + aux1433)<=1)=tv=SATLiteral(18520))
-18520 16196 0
-18520 16190 16195 0
-18520 16191 0
-18520 16193 0
-18520 16181 16195 0
-18520 16181 16190 0
-18520 16181 16191 0
-18520 16181 16193 0
-18520 16182 0
-18520 16182 16190 0
-18520 16182 16191 0
-18520 16182 16193 0
18520 -16182 -16190 -16195 0
18520 -16181 -16191 -16195 0
18520 -16181 -16190 -16196 0
c ((1<=(aux1429 + aux1432 + aux1433))=tv=SATLiteral(18521))
-18521 -16181 -16190 -16195 0
18521 16195 0
18521 16190 0
18521 16191 0
18521 16193 0
18521 16181 0
18521 16181 16190 0
18521 16181 16191 0
18521 16181 16193 0
18521 16182 0
18521 16182 16190 0
18521 16182 16191 0
18521 16182 16193 0
c (((aux1435 + aux1438 + aux1439)<=1)=tv=SATLiteral(18522))
-18522 16220 0
-18522 16214 16219 0
-18522 16215 0
-18522 16217 0
-18522 16205 16219 0
-18522 16205 16214 0
-18522 16205 16215 0
-18522 16205 16217 0
-18522 16206 0
-18522 16206 16214 0
-18522 16206 16215 0
-18522 16206 16217 0
18522 -16206 -16214 -16219 0
18522 -16205 -16215 -16219 0
18522 -16205 -16214 -16220 0
c ((1<=(aux1435 + aux1438 + aux1439))=tv=SATLiteral(18523))
-18523 -16205 -16214 -16219 0
18523 16219 0
18523 16214 0
18523 16215 0
18523 16217 0
18523 16205 0
18523 16205 16214 0
18523 16205 16215 0
18523 16205 16217 0
18523 16206 0
18523 16206 16214 0
18523 16206 16215 0
18523 16206 16217 0
c (((aux1441 + aux1444 + aux1445)<=1)=tv=SATLiteral(18524))
-18524 16244 0
-18524 16238 16243 0
-18524 16239 0
-18524 16241 0
-18524 16229 16243 0
-18524 16229 16238 0
-18524 16229 16239 0
-18524 16229 16241 0
-18524 16230 0
-18524 16230 16238 0
-18524 16230 16239 0
-18524 16230 16241 0
18524 -16230 -16238 -16243 0
18524 -16229 -16239 -16243 0
18524 -16229 -16238 -16244 0
c ((1<=(aux1441 + aux1444 + aux1445))=tv=SATLiteral(18525))
-18525 -16229 -16238 -16243 0
18525 16243 0
18525 16238 0
18525 16239 0
18525 16241 0
18525 16229 0
18525 16229 16238 0
18525 16229 16239 0
18525 16229 16241 0
18525 16230 0
18525 16230 16238 0
18525 16230 16239 0
18525 16230 16241 0
c (((aux1447 + aux1450 + aux1451)<=1)=tv=SATLiteral(18526))
-18526 16268 0
-18526 16262 16267 0
-18526 16263 0
-18526 16265 0
-18526 16253 16267 0
-18526 16253 16262 0
-18526 16253 16263 0
-18526 16253 16265 0
-18526 16254 0
-18526 16254 16262 0
-18526 16254 16263 0
-18526 16254 16265 0
18526 -16254 -16262 -16267 0
18526 -16253 -16263 -16267 0
18526 -16253 -16262 -16268 0
c ((1<=(aux1447 + aux1450 + aux1451))=tv=SATLiteral(18527))
-18527 -16253 -16262 -16267 0
18527 16267 0
18527 16262 0
18527 16263 0
18527 16265 0
18527 16253 0
18527 16253 16262 0
18527 16253 16263 0
18527 16253 16265 0
18527 16254 0
18527 16254 16262 0
18527 16254 16263 0
18527 16254 16265 0
c (((aux1453 + aux1456 + aux1457)<=1)=tv=SATLiteral(18528))
-18528 16292 0
-18528 16286 16291 0
-18528 16287 0
-18528 16289 0
-18528 16277 16291 0
-18528 16277 16286 0
-18528 16277 16287 0
-18528 16277 16289 0
-18528 16278 0
-18528 16278 16286 0
-18528 16278 16287 0
-18528 16278 16289 0
18528 -16278 -16286 -16291 0
18528 -16277 -16287 -16291 0
18528 -16277 -16286 -16292 0
c ((1<=(aux1453 + aux1456 + aux1457))=tv=SATLiteral(18529))
-18529 -16277 -16286 -16291 0
18529 16291 0
18529 16286 0
18529 16287 0
18529 16289 0
18529 16277 0
18529 16277 16286 0
18529 16277 16287 0
18529 16277 16289 0
18529 16278 0
18529 16278 16286 0
18529 16278 16287 0
18529 16278 16289 0
c (((aux1459 + aux1462 + aux1463)<=1)=tv=SATLiteral(18530))
-18530 16316 0
-18530 16310 16315 0
-18530 16311 0
-18530 16313 0
-18530 16301 16315 0
-18530 16301 16310 0
-18530 16301 16311 0
-18530 16301 16313 0
-18530 16302 0
-18530 16302 16310 0
-18530 16302 16311 0
-18530 16302 16313 0
18530 -16302 -16310 -16315 0
18530 -16301 -16311 -16315 0
18530 -16301 -16310 -16316 0
c ((1<=(aux1459 + aux1462 + aux1463))=tv=SATLiteral(18531))
-18531 -16301 -16310 -16315 0
18531 16315 0
18531 16310 0
18531 16311 0
18531 16313 0
18531 16301 0
18531 16301 16310 0
18531 16301 16311 0
18531 16301 16313 0
18531 16302 0
18531 16302 16310 0
18531 16302 16311 0
18531 16302 16313 0
c (((aux1465 + aux1468 + aux1469)<=1)=tv=SATLiteral(18532))
-18532 16340 0
-18532 16334 16339 0
-18532 16335 0
-18532 16337 0
-18532 16325 16339 0
-18532 16325 16334 0
-18532 16325 16335 0
-18532 16325 16337 0
-18532 16326 0
-18532 16326 16334 0
-18532 16326 16335 0
-18532 16326 16337 0
18532 -16326 -16334 -16339 0
18532 -16325 -16335 -16339 0
18532 -16325 -16334 -16340 0
c ((1<=(aux1465 + aux1468 + aux1469))=tv=SATLiteral(18533))
-18533 -16325 -16334 -16339 0
18533 16339 0
18533 16334 0
18533 16335 0
18533 16337 0
18533 16325 0
18533 16325 16334 0
18533 16325 16335 0
18533 16325 16337 0
18533 16326 0
18533 16326 16334 0
18533 16326 16335 0
18533 16326 16337 0
c (((aux1471 + aux1474 + aux1475)<=1)=tv=SATLiteral(18534))
-18534 16364 0
-18534 16358 16363 0
-18534 16359 0
-18534 16361 0
-18534 16349 16363 0
-18534 16349 16358 0
-18534 16349 16359 0
-18534 16349 16361 0
-18534 16350 0
-18534 16350 16358 0
-18534 16350 16359 0
-18534 16350 16361 0
18534 -16350 -16358 -16363 0
18534 -16349 -16359 -16363 0
18534 -16349 -16358 -16364 0
c ((1<=(aux1471 + aux1474 + aux1475))=tv=SATLiteral(18535))
-18535 -16349 -16358 -16363 0
18535 16363 0
18535 16358 0
18535 16359 0
18535 16361 0
18535 16349 0
18535 16349 16358 0
18535 16349 16359 0
18535 16349 16361 0
18535 16350 0
18535 16350 16358 0
18535 16350 16359 0
18535 16350 16361 0
c (((aux1477 + aux1480 + aux1481)<=1)=tv=SATLiteral(18536))
-18536 16388 0
-18536 16382 16387 0
-18536 16383 0
-18536 16385 0
-18536 16373 16387 0
-18536 16373 16382 0
-18536 16373 16383 0
-18536 16373 16385 0
-18536 16374 0
-18536 16374 16382 0
-18536 16374 16383 0
-18536 16374 16385 0
18536 -16374 -16382 -16387 0
18536 -16373 -16383 -16387 0
18536 -16373 -16382 -16388 0
c ((1<=(aux1477 + aux1480 + aux1481))=tv=SATLiteral(18537))
-18537 -16373 -16382 -16387 0
18537 16387 0
18537 16382 0
18537 16383 0
18537 16385 0
18537 16373 0
18537 16373 16382 0
18537 16373 16383 0
18537 16373 16385 0
18537 16374 0
18537 16374 16382 0
18537 16374 16383 0
18537 16374 16385 0
c (((aux1483 + aux1486 + aux1487)<=1)=tv=SATLiteral(18538))
-18538 16412 0
-18538 16406 16411 0
-18538 16407 0
-18538 16409 0
-18538 16397 16411 0
-18538 16397 16406 0
-18538 16397 16407 0
-18538 16397 16409 0
-18538 16398 0
-18538 16398 16406 0
-18538 16398 16407 0
-18538 16398 16409 0
18538 -16398 -16406 -16411 0
18538 -16397 -16407 -16411 0
18538 -16397 -16406 -16412 0
c ((1<=(aux1483 + aux1486 + aux1487))=tv=SATLiteral(18539))
-18539 -16397 -16406 -16411 0
18539 16411 0
18539 16406 0
18539 16407 0
18539 16409 0
18539 16397 0
18539 16397 16406 0
18539 16397 16407 0
18539 16397 16409 0
18539 16398 0
18539 16398 16406 0
18539 16398 16407 0
18539 16398 16409 0
c (((aux1489 + aux1492 + aux1493)<=1)=tv=SATLiteral(18540))
-18540 16436 0
-18540 16430 16435 0
-18540 16431 0
-18540 16433 0
-18540 16421 16435 0
-18540 16421 16430 0
-18540 16421 16431 0
-18540 16421 16433 0
-18540 16422 0
-18540 16422 16430 0
-18540 16422 16431 0
-18540 16422 16433 0
18540 -16422 -16430 -16435 0
18540 -16421 -16431 -16435 0
18540 -16421 -16430 -16436 0
c ((1<=(aux1489 + aux1492 + aux1493))=tv=SATLiteral(18541))
-18541 -16421 -16430 -16435 0
18541 16435 0
18541 16430 0
18541 16431 0
18541 16433 0
18541 16421 0
18541 16421 16430 0
18541 16421 16431 0
18541 16421 16433 0
18541 16422 0
18541 16422 16430 0
18541 16422 16431 0
18541 16422 16433 0
c (((aux1495 + aux1498 + aux1499)<=1)=tv=SATLiteral(18542))
-18542 16460 0
-18542 16454 16459 0
-18542 16455 0
-18542 16457 0
-18542 16445 16459 0
-18542 16445 16454 0
-18542 16445 16455 0
-18542 16445 16457 0
-18542 16446 0
-18542 16446 16454 0
-18542 16446 16455 0
-18542 16446 16457 0
18542 -16446 -16454 -16459 0
18542 -16445 -16455 -16459 0
18542 -16445 -16454 -16460 0
c ((1<=(aux1495 + aux1498 + aux1499))=tv=SATLiteral(18543))
-18543 -16445 -16454 -16459 0
18543 16459 0
18543 16454 0
18543 16455 0
18543 16457 0
18543 16445 0
18543 16445 16454 0
18543 16445 16455 0
18543 16445 16457 0
18543 16446 0
18543 16446 16454 0
18543 16446 16455 0
18543 16446 16457 0
c (((aux1501 + aux1504 + aux1505)<=1)=tv=SATLiteral(18544))
-18544 16484 0
-18544 16478 16483 0
-18544 16479 0
-18544 16481 0
-18544 16469 16483 0
-18544 16469 16478 0
-18544 16469 16479 0
-18544 16469 16481 0
-18544 16470 0
-18544 16470 16478 0
-18544 16470 16479 0
-18544 16470 16481 0
18544 -16470 -16478 -16483 0
18544 -16469 -16479 -16483 0
18544 -16469 -16478 -16484 0
c ((1<=(aux1501 + aux1504 + aux1505))=tv=SATLiteral(18545))
-18545 -16469 -16478 -16483 0
18545 16483 0
18545 16478 0
18545 16479 0
18545 16481 0
18545 16469 0
18545 16469 16478 0
18545 16469 16479 0
18545 16469 16481 0
18545 16470 0
18545 16470 16478 0
18545 16470 16479 0
18545 16470 16481 0
c (((aux1507 + aux1510 + aux1511)<=1)=tv=SATLiteral(18546))
-18546 16508 0
-18546 16502 16507 0
-18546 16503 0
-18546 16505 0
-18546 16493 16507 0
-18546 16493 16502 0
-18546 16493 16503 0
-18546 16493 16505 0
-18546 16494 0
-18546 16494 16502 0
-18546 16494 16503 0
-18546 16494 16505 0
18546 -16494 -16502 -16507 0
18546 -16493 -16503 -16507 0
18546 -16493 -16502 -16508 0
c ((1<=(aux1507 + aux1510 + aux1511))=tv=SATLiteral(18547))
-18547 -16493 -16502 -16507 0
18547 16507 0
18547 16502 0
18547 16503 0
18547 16505 0
18547 16493 0
18547 16493 16502 0
18547 16493 16503 0
18547 16493 16505 0
18547 16494 0
18547 16494 16502 0
18547 16494 16503 0
18547 16494 16505 0
c (((aux1513 + aux1516 + aux1517)<=1)=tv=SATLiteral(18548))
-18548 16532 0
-18548 16526 16531 0
-18548 16527 0
-18548 16529 0
-18548 16517 16531 0
-18548 16517 16526 0
-18548 16517 16527 0
-18548 16517 16529 0
-18548 16518 0
-18548 16518 16526 0
-18548 16518 16527 0
-18548 16518 16529 0
18548 -16518 -16526 -16531 0
18548 -16517 -16527 -16531 0
18548 -16517 -16526 -16532 0
c ((1<=(aux1513 + aux1516 + aux1517))=tv=SATLiteral(18549))
-18549 -16517 -16526 -16531 0
18549 16531 0
18549 16526 0
18549 16527 0
18549 16529 0
18549 16517 0
18549 16517 16526 0
18549 16517 16527 0
18549 16517 16529 0
18549 16518 0
18549 16518 16526 0
18549 16518 16527 0
18549 16518 16529 0
c (((aux1519 + aux1522 + aux1523)<=1)=tv=SATLiteral(18550))
-18550 16556 0
-18550 16550 16555 0
-18550 16551 0
-18550 16553 0
-18550 16541 16555 0
-18550 16541 16550 0
-18550 16541 16551 0
-18550 16541 16553 0
-18550 16542 0
-18550 16542 16550 0
-18550 16542 16551 0
-18550 16542 16553 0
18550 -16542 -16550 -16555 0
18550 -16541 -16551 -16555 0
18550 -16541 -16550 -16556 0
c ((1<=(aux1519 + aux1522 + aux1523))=tv=SATLiteral(18551))
-18551 -16541 -16550 -16555 0
18551 16555 0
18551 16550 0
18551 16551 0
18551 16553 0
18551 16541 0
18551 16541 16550 0
18551 16541 16551 0
18551 16541 16553 0
18551 16542 0
18551 16542 16550 0
18551 16542 16551 0
18551 16542 16553 0
c (((aux1525 + aux1528 + aux1529)<=1)=tv=SATLiteral(18552))
-18552 16580 0
-18552 16574 16579 0
-18552 16575 0
-18552 16577 0
-18552 16565 16579 0
-18552 16565 16574 0
-18552 16565 16575 0
-18552 16565 16577 0
-18552 16566 0
-18552 16566 16574 0
-18552 16566 16575 0
-18552 16566 16577 0
18552 -16566 -16574 -16579 0
18552 -16565 -16575 -16579 0
18552 -16565 -16574 -16580 0
c ((1<=(aux1525 + aux1528 + aux1529))=tv=SATLiteral(18553))
-18553 -16565 -16574 -16579 0
18553 16579 0
18553 16574 0
18553 16575 0
18553 16577 0
18553 16565 0
18553 16565 16574 0
18553 16565 16575 0
18553 16565 16577 0
18553 16566 0
18553 16566 16574 0
18553 16566 16575 0
18553 16566 16577 0
c (((aux1531 + aux1534 + aux1535)<=1)=tv=SATLiteral(18554))
-18554 16604 0
-18554 16598 16603 0
-18554 16599 0
-18554 16601 0
-18554 16589 16603 0
-18554 16589 16598 0
-18554 16589 16599 0
-18554 16589 16601 0
-18554 16590 0
-18554 16590 16598 0
-18554 16590 16599 0
-18554 16590 16601 0
18554 -16590 -16598 -16603 0
18554 -16589 -16599 -16603 0
18554 -16589 -16598 -16604 0
c ((1<=(aux1531 + aux1534 + aux1535))=tv=SATLiteral(18555))
-18555 -16589 -16598 -16603 0
18555 16603 0
18555 16598 0
18555 16599 0
18555 16601 0
18555 16589 0
18555 16589 16598 0
18555 16589 16599 0
18555 16589 16601 0
18555 16590 0
18555 16590 16598 0
18555 16590 16599 0
18555 16590 16601 0
c (((aux1537 + aux1540 + aux1541)<=1)=tv=SATLiteral(18556))
-18556 16628 0
-18556 16622 16627 0
-18556 16623 0
-18556 16625 0
-18556 16613 16627 0
-18556 16613 16622 0
-18556 16613 16623 0
-18556 16613 16625 0
-18556 16614 0
-18556 16614 16622 0
-18556 16614 16623 0
-18556 16614 16625 0
18556 -16614 -16622 -16627 0
18556 -16613 -16623 -16627 0
18556 -16613 -16622 -16628 0
c ((1<=(aux1537 + aux1540 + aux1541))=tv=SATLiteral(18557))
-18557 -16613 -16622 -16627 0
18557 16627 0
18557 16622 0
18557 16623 0
18557 16625 0
18557 16613 0
18557 16613 16622 0
18557 16613 16623 0
18557 16613 16625 0
18557 16614 0
18557 16614 16622 0
18557 16614 16623 0
18557 16614 16625 0
c (((aux1543 + aux1546 + aux1547)<=1)=tv=SATLiteral(18558))
-18558 16652 0
-18558 16646 16651 0
-18558 16647 0
-18558 16649 0
-18558 16637 16651 0
-18558 16637 16646 0
-18558 16637 16647 0
-18558 16637 16649 0
-18558 16638 0
-18558 16638 16646 0
-18558 16638 16647 0
-18558 16638 16649 0
18558 -16638 -16646 -16651 0
18558 -16637 -16647 -16651 0
18558 -16637 -16646 -16652 0
c ((1<=(aux1543 + aux1546 + aux1547))=tv=SATLiteral(18559))
-18559 -16637 -16646 -16651 0
18559 16651 0
18559 16646 0
18559 16647 0
18559 16649 0
18559 16637 0
18559 16637 16646 0
18559 16637 16647 0
18559 16637 16649 0
18559 16638 0
18559 16638 16646 0
18559 16638 16647 0
18559 16638 16649 0
c (((aux1549 + aux1552 + aux1553)<=1)=tv=SATLiteral(18560))
-18560 16676 0
-18560 16670 16675 0
-18560 16671 0
-18560 16673 0
-18560 16661 16675 0
-18560 16661 16670 0
-18560 16661 16671 0
-18560 16661 16673 0
-18560 16662 0
-18560 16662 16670 0
-18560 16662 16671 0
-18560 16662 16673 0
18560 -16662 -16670 -16675 0
18560 -16661 -16671 -16675 0
18560 -16661 -16670 -16676 0
c ((1<=(aux1549 + aux1552 + aux1553))=tv=SATLiteral(18561))
-18561 -16661 -16670 -16675 0
18561 16675 0
18561 16670 0
18561 16671 0
18561 16673 0
18561 16661 0
18561 16661 16670 0
18561 16661 16671 0
18561 16661 16673 0
18561 16662 0
18561 16662 16670 0
18561 16662 16671 0
18561 16662 16673 0
c (((aux1555 + aux1558 + aux1559)<=1)=tv=SATLiteral(18562))
-18562 16700 0
-18562 16694 16699 0
-18562 16695 0
-18562 16697 0
-18562 16685 16699 0
-18562 16685 16694 0
-18562 16685 16695 0
-18562 16685 16697 0
-18562 16686 0
-18562 16686 16694 0
-18562 16686 16695 0
-18562 16686 16697 0
18562 -16686 -16694 -16699 0
18562 -16685 -16695 -16699 0
18562 -16685 -16694 -16700 0
c ((1<=(aux1555 + aux1558 + aux1559))=tv=SATLiteral(18563))
-18563 -16685 -16694 -16699 0
18563 16699 0
18563 16694 0
18563 16695 0
18563 16697 0
18563 16685 0
18563 16685 16694 0
18563 16685 16695 0
18563 16685 16697 0
18563 16686 0
18563 16686 16694 0
18563 16686 16695 0
18563 16686 16697 0
c (((aux1561 + aux1564 + aux1565)<=1)=tv=SATLiteral(18564))
-18564 16724 0
-18564 16718 16723 0
-18564 16719 0
-18564 16721 0
-18564 16709 16723 0
-18564 16709 16718 0
-18564 16709 16719 0
-18564 16709 16721 0
-18564 16710 0
-18564 16710 16718 0
-18564 16710 16719 0
-18564 16710 16721 0
18564 -16710 -16718 -16723 0
18564 -16709 -16719 -16723 0
18564 -16709 -16718 -16724 0
c ((1<=(aux1561 + aux1564 + aux1565))=tv=SATLiteral(18565))
-18565 -16709 -16718 -16723 0
18565 16723 0
18565 16718 0
18565 16719 0
18565 16721 0
18565 16709 0
18565 16709 16718 0
18565 16709 16719 0
18565 16709 16721 0
18565 16710 0
18565 16710 16718 0
18565 16710 16719 0
18565 16710 16721 0
c (((aux1567 + aux1570 + aux1571)<=1)=tv=SATLiteral(18566))
-18566 16748 0
-18566 16742 16747 0
-18566 16743 0
-18566 16745 0
-18566 16733 16747 0
-18566 16733 16742 0
-18566 16733 16743 0
-18566 16733 16745 0
-18566 16734 0
-18566 16734 16742 0
-18566 16734 16743 0
-18566 16734 16745 0
18566 -16734 -16742 -16747 0
18566 -16733 -16743 -16747 0
18566 -16733 -16742 -16748 0
c ((1<=(aux1567 + aux1570 + aux1571))=tv=SATLiteral(18567))
-18567 -16733 -16742 -16747 0
18567 16747 0
18567 16742 0
18567 16743 0
18567 16745 0
18567 16733 0
18567 16733 16742 0
18567 16733 16743 0
18567 16733 16745 0
18567 16734 0
18567 16734 16742 0
18567 16734 16743 0
18567 16734 16745 0
c (((aux1573 + aux1576 + aux1577)<=1)=tv=SATLiteral(18568))
-18568 16772 0
-18568 16766 16771 0
-18568 16767 0
-18568 16769 0
-18568 16757 16771 0
-18568 16757 16766 0
-18568 16757 16767 0
-18568 16757 16769 0
-18568 16758 0
-18568 16758 16766 0
-18568 16758 16767 0
-18568 16758 16769 0
18568 -16758 -16766 -16771 0
18568 -16757 -16767 -16771 0
18568 -16757 -16766 -16772 0
c ((1<=(aux1573 + aux1576 + aux1577))=tv=SATLiteral(18569))
-18569 -16757 -16766 -16771 0
18569 16771 0
18569 16766 0
18569 16767 0
18569 16769 0
18569 16757 0
18569 16757 16766 0
18569 16757 16767 0
18569 16757 16769 0
18569 16758 0
18569 16758 16766 0
18569 16758 16767 0
18569 16758 16769 0
c (((aux1579 + aux1582 + aux1583)<=1)=tv=SATLiteral(18570))
-18570 16796 0
-18570 16790 16795 0
-18570 16791 0
-18570 16793 0
-18570 16781 16795 0
-18570 16781 16790 0
-18570 16781 16791 0
-18570 16781 16793 0
-18570 16782 0
-18570 16782 16790 0
-18570 16782 16791 0
-18570 16782 16793 0
18570 -16782 -16790 -16795 0
18570 -16781 -16791 -16795 0
18570 -16781 -16790 -16796 0
c ((1<=(aux1579 + aux1582 + aux1583))=tv=SATLiteral(18571))
-18571 -16781 -16790 -16795 0
18571 16795 0
18571 16790 0
18571 16791 0
18571 16793 0
18571 16781 0
18571 16781 16790 0
18571 16781 16791 0
18571 16781 16793 0
18571 16782 0
18571 16782 16790 0
18571 16782 16791 0
18571 16782 16793 0
c (((aux1585 + aux1588 + aux1589)<=1)=tv=SATLiteral(18572))
-18572 16820 0
-18572 16814 16819 0
-18572 16815 0
-18572 16817 0
-18572 16805 16819 0
-18572 16805 16814 0
-18572 16805 16815 0
-18572 16805 16817 0
-18572 16806 0
-18572 16806 16814 0
-18572 16806 16815 0
-18572 16806 16817 0
18572 -16806 -16814 -16819 0
18572 -16805 -16815 -16819 0
18572 -16805 -16814 -16820 0
c ((1<=(aux1585 + aux1588 + aux1589))=tv=SATLiteral(18573))
-18573 -16805 -16814 -16819 0
18573 16819 0
18573 16814 0
18573 16815 0
18573 16817 0
18573 16805 0
18573 16805 16814 0
18573 16805 16815 0
18573 16805 16817 0
18573 16806 0
18573 16806 16814 0
18573 16806 16815 0
18573 16806 16817 0
c (((aux1591 + aux1594 + aux1595)<=1)=tv=SATLiteral(18574))
-18574 16844 0
-18574 16838 16843 0
-18574 16839 0
-18574 16841 0
-18574 16829 16843 0
-18574 16829 16838 0
-18574 16829 16839 0
-18574 16829 16841 0
-18574 16830 0
-18574 16830 16838 0
-18574 16830 16839 0
-18574 16830 16841 0
18574 -16830 -16838 -16843 0
18574 -16829 -16839 -16843 0
18574 -16829 -16838 -16844 0
c ((1<=(aux1591 + aux1594 + aux1595))=tv=SATLiteral(18575))
-18575 -16829 -16838 -16843 0
18575 16843 0
18575 16838 0
18575 16839 0
18575 16841 0
18575 16829 0
18575 16829 16838 0
18575 16829 16839 0
18575 16829 16841 0
18575 16830 0
18575 16830 16838 0
18575 16830 16839 0
18575 16830 16841 0
c (((aux1597 + aux1600 + aux1601)<=1)=tv=SATLiteral(18576))
-18576 16868 0
-18576 16862 16867 0
-18576 16863 0
-18576 16865 0
-18576 16853 16867 0
-18576 16853 16862 0
-18576 16853 16863 0
-18576 16853 16865 0
-18576 16854 0
-18576 16854 16862 0
-18576 16854 16863 0
-18576 16854 16865 0
18576 -16854 -16862 -16867 0
18576 -16853 -16863 -16867 0
18576 -16853 -16862 -16868 0
c ((1<=(aux1597 + aux1600 + aux1601))=tv=SATLiteral(18577))
-18577 -16853 -16862 -16867 0
18577 16867 0
18577 16862 0
18577 16863 0
18577 16865 0
18577 16853 0
18577 16853 16862 0
18577 16853 16863 0
18577 16853 16865 0
18577 16854 0
18577 16854 16862 0
18577 16854 16863 0
18577 16854 16865 0
c (((aux1603 + aux1606 + aux1607)<=1)=tv=SATLiteral(18578))
-18578 16892 0
-18578 16886 16891 0
-18578 16887 0
-18578 16889 0
-18578 16877 16891 0
-18578 16877 16886 0
-18578 16877 16887 0
-18578 16877 16889 0
-18578 16878 0
-18578 16878 16886 0
-18578 16878 16887 0
-18578 16878 16889 0
18578 -16878 -16886 -16891 0
18578 -16877 -16887 -16891 0
18578 -16877 -16886 -16892 0
c ((1<=(aux1603 + aux1606 + aux1607))=tv=SATLiteral(18579))
-18579 -16877 -16886 -16891 0
18579 16891 0
18579 16886 0
18579 16887 0
18579 16889 0
18579 16877 0
18579 16877 16886 0
18579 16877 16887 0
18579 16877 16889 0
18579 16878 0
18579 16878 16886 0
18579 16878 16887 0
18579 16878 16889 0
c (((aux1609 + aux1612 + aux1613)<=1)=tv=SATLiteral(18580))
-18580 16916 0
-18580 16910 16915 0
-18580 16911 0
-18580 16913 0
-18580 16901 16915 0
-18580 16901 16910 0
-18580 16901 16911 0
-18580 16901 16913 0
-18580 16902 0
-18580 16902 16910 0
-18580 16902 16911 0
-18580 16902 16913 0
18580 -16902 -16910 -16915 0
18580 -16901 -16911 -16915 0
18580 -16901 -16910 -16916 0
c ((1<=(aux1609 + aux1612 + aux1613))=tv=SATLiteral(18581))
-18581 -16901 -16910 -16915 0
18581 16915 0
18581 16910 0
18581 16911 0
18581 16913 0
18581 16901 0
18581 16901 16910 0
18581 16901 16911 0
18581 16901 16913 0
18581 16902 0
18581 16902 16910 0
18581 16902 16911 0
18581 16902 16913 0
c (((aux1615 + aux1618 + aux1619)<=1)=tv=SATLiteral(18582))
-18582 16940 0
-18582 16934 16939 0
-18582 16935 0
-18582 16937 0
-18582 16925 16939 0
-18582 16925 16934 0
-18582 16925 16935 0
-18582 16925 16937 0
-18582 16926 0
-18582 16926 16934 0
-18582 16926 16935 0
-18582 16926 16937 0
18582 -16926 -16934 -16939 0
18582 -16925 -16935 -16939 0
18582 -16925 -16934 -16940 0
c ((1<=(aux1615 + aux1618 + aux1619))=tv=SATLiteral(18583))
-18583 -16925 -16934 -16939 0
18583 16939 0
18583 16934 0
18583 16935 0
18583 16937 0
18583 16925 0
18583 16925 16934 0
18583 16925 16935 0
18583 16925 16937 0
18583 16926 0
18583 16926 16934 0
18583 16926 16935 0
18583 16926 16937 0
c (((aux1621 + aux1624 + aux1625)<=1)=tv=SATLiteral(18584))
-18584 16964 0
-18584 16958 16963 0
-18584 16959 0
-18584 16961 0
-18584 16949 16963 0
-18584 16949 16958 0
-18584 16949 16959 0
-18584 16949 16961 0
-18584 16950 0
-18584 16950 16958 0
-18584 16950 16959 0
-18584 16950 16961 0
18584 -16950 -16958 -16963 0
18584 -16949 -16959 -16963 0
18584 -16949 -16958 -16964 0
c ((1<=(aux1621 + aux1624 + aux1625))=tv=SATLiteral(18585))
-18585 -16949 -16958 -16963 0
18585 16963 0
18585 16958 0
18585 16959 0
18585 16961 0
18585 16949 0
18585 16949 16958 0
18585 16949 16959 0
18585 16949 16961 0
18585 16950 0
18585 16950 16958 0
18585 16950 16959 0
18585 16950 16961 0
c (((aux1627 + aux1630 + aux1631)<=1)=tv=SATLiteral(18586))
-18586 16988 0
-18586 16982 16987 0
-18586 16983 0
-18586 16985 0
-18586 16973 16987 0
-18586 16973 16982 0
-18586 16973 16983 0
-18586 16973 16985 0
-18586 16974 0
-18586 16974 16982 0
-18586 16974 16983 0
-18586 16974 16985 0
18586 -16974 -16982 -16987 0
18586 -16973 -16983 -16987 0
18586 -16973 -16982 -16988 0
c ((1<=(aux1627 + aux1630 + aux1631))=tv=SATLiteral(18587))
-18587 -16973 -16982 -16987 0
18587 16987 0
18587 16982 0
18587 16983 0
18587 16985 0
18587 16973 0
18587 16973 16982 0
18587 16973 16983 0
18587 16973 16985 0
18587 16974 0
18587 16974 16982 0
18587 16974 16983 0
18587 16974 16985 0
c (((aux1633 + aux1636 + aux1637)<=1)=tv=SATLiteral(18588))
-18588 17012 0
-18588 17006 17011 0
-18588 17007 0
-18588 17009 0
-18588 16997 17011 0
-18588 16997 17006 0
-18588 16997 17007 0
-18588 16997 17009 0
-18588 16998 0
-18588 16998 17006 0
-18588 16998 17007 0
-18588 16998 17009 0
18588 -16998 -17006 -17011 0
18588 -16997 -17007 -17011 0
18588 -16997 -17006 -17012 0
c ((1<=(aux1633 + aux1636 + aux1637))=tv=SATLiteral(18589))
-18589 -16997 -17006 -17011 0
18589 17011 0
18589 17006 0
18589 17007 0
18589 17009 0
18589 16997 0
18589 16997 17006 0
18589 16997 17007 0
18589 16997 17009 0
18589 16998 0
18589 16998 17006 0
18589 16998 17007 0
18589 16998 17009 0
c (((aux1639 + aux1642 + aux1643)<=1)=tv=SATLiteral(18590))
-18590 17036 0
-18590 17030 17035 0
-18590 17031 0
-18590 17033 0
-18590 17021 17035 0
-18590 17021 17030 0
-18590 17021 17031 0
-18590 17021 17033 0
-18590 17022 0
-18590 17022 17030 0
-18590 17022 17031 0
-18590 17022 17033 0
18590 -17022 -17030 -17035 0
18590 -17021 -17031 -17035 0
18590 -17021 -17030 -17036 0
c ((1<=(aux1639 + aux1642 + aux1643))=tv=SATLiteral(18591))
-18591 -17021 -17030 -17035 0
18591 17035 0
18591 17030 0
18591 17031 0
18591 17033 0
18591 17021 0
18591 17021 17030 0
18591 17021 17031 0
18591 17021 17033 0
18591 17022 0
18591 17022 17030 0
18591 17022 17031 0
18591 17022 17033 0
c (((aux1645 + aux1648 + aux1649)<=1)=tv=SATLiteral(18592))
-18592 17060 0
-18592 17054 17059 0
-18592 17055 0
-18592 17057 0
-18592 17045 17059 0
-18592 17045 17054 0
-18592 17045 17055 0
-18592 17045 17057 0
-18592 17046 0
-18592 17046 17054 0
-18592 17046 17055 0
-18592 17046 17057 0
18592 -17046 -17054 -17059 0
18592 -17045 -17055 -17059 0
18592 -17045 -17054 -17060 0
c ((1<=(aux1645 + aux1648 + aux1649))=tv=SATLiteral(18593))
-18593 -17045 -17054 -17059 0
18593 17059 0
18593 17054 0
18593 17055 0
18593 17057 0
18593 17045 0
18593 17045 17054 0
18593 17045 17055 0
18593 17045 17057 0
18593 17046 0
18593 17046 17054 0
18593 17046 17055 0
18593 17046 17057 0
c (((aux1651 + aux1654 + aux1655)<=1)=tv=SATLiteral(18594))
-18594 17084 0
-18594 17078 17083 0
-18594 17079 0
-18594 17081 0
-18594 17069 17083 0
-18594 17069 17078 0
-18594 17069 17079 0
-18594 17069 17081 0
-18594 17070 0
-18594 17070 17078 0
-18594 17070 17079 0
-18594 17070 17081 0
18594 -17070 -17078 -17083 0
18594 -17069 -17079 -17083 0
18594 -17069 -17078 -17084 0
c ((1<=(aux1651 + aux1654 + aux1655))=tv=SATLiteral(18595))
-18595 -17069 -17078 -17083 0
18595 17083 0
18595 17078 0
18595 17079 0
18595 17081 0
18595 17069 0
18595 17069 17078 0
18595 17069 17079 0
18595 17069 17081 0
18595 17070 0
18595 17070 17078 0
18595 17070 17079 0
18595 17070 17081 0
c (((aux1657 + aux1660 + aux1661)<=1)=tv=SATLiteral(18596))
-18596 17108 0
-18596 17102 17107 0
-18596 17103 0
-18596 17105 0
-18596 17093 17107 0
-18596 17093 17102 0
-18596 17093 17103 0
-18596 17093 17105 0
-18596 17094 0
-18596 17094 17102 0
-18596 17094 17103 0
-18596 17094 17105 0
18596 -17094 -17102 -17107 0
18596 -17093 -17103 -17107 0
18596 -17093 -17102 -17108 0
c ((1<=(aux1657 + aux1660 + aux1661))=tv=SATLiteral(18597))
-18597 -17093 -17102 -17107 0
18597 17107 0
18597 17102 0
18597 17103 0
18597 17105 0
18597 17093 0
18597 17093 17102 0
18597 17093 17103 0
18597 17093 17105 0
18597 17094 0
18597 17094 17102 0
18597 17094 17103 0
18597 17094 17105 0
c (((aux1663 + aux1666 + aux1667)<=1)=tv=SATLiteral(18598))
-18598 17132 0
-18598 17126 17131 0
-18598 17127 0
-18598 17129 0
-18598 17117 17131 0
-18598 17117 17126 0
-18598 17117 17127 0
-18598 17117 17129 0
-18598 17118 0
-18598 17118 17126 0
-18598 17118 17127 0
-18598 17118 17129 0
18598 -17118 -17126 -17131 0
18598 -17117 -17127 -17131 0
18598 -17117 -17126 -17132 0
c ((1<=(aux1663 + aux1666 + aux1667))=tv=SATLiteral(18599))
-18599 -17117 -17126 -17131 0
18599 17131 0
18599 17126 0
18599 17127 0
18599 17129 0
18599 17117 0
18599 17117 17126 0
18599 17117 17127 0
18599 17117 17129 0
18599 17118 0
18599 17118 17126 0
18599 17118 17127 0
18599 17118 17129 0
c (((aux1669 + aux1672 + aux1673)<=1)=tv=SATLiteral(18600))
-18600 17156 0
-18600 17150 17155 0
-18600 17151 0
-18600 17153 0
-18600 17141 17155 0
-18600 17141 17150 0
-18600 17141 17151 0
-18600 17141 17153 0
-18600 17142 0
-18600 17142 17150 0
-18600 17142 17151 0
-18600 17142 17153 0
18600 -17142 -17150 -17155 0
18600 -17141 -17151 -17155 0
18600 -17141 -17150 -17156 0
c ((1<=(aux1669 + aux1672 + aux1673))=tv=SATLiteral(18601))
-18601 -17141 -17150 -17155 0
18601 17155 0
18601 17150 0
18601 17151 0
18601 17153 0
18601 17141 0
18601 17141 17150 0
18601 17141 17151 0
18601 17141 17153 0
18601 17142 0
18601 17142 17150 0
18601 17142 17151 0
18601 17142 17153 0
c (((aux1675 + aux1678 + aux1679)<=1)=tv=SATLiteral(18602))
-18602 17180 0
-18602 17174 17179 0
-18602 17175 0
-18602 17177 0
-18602 17165 17179 0
-18602 17165 17174 0
-18602 17165 17175 0
-18602 17165 17177 0
-18602 17166 0
-18602 17166 17174 0
-18602 17166 17175 0
-18602 17166 17177 0
18602 -17166 -17174 -17179 0
18602 -17165 -17175 -17179 0
18602 -17165 -17174 -17180 0
c ((1<=(aux1675 + aux1678 + aux1679))=tv=SATLiteral(18603))
-18603 -17165 -17174 -17179 0
18603 17179 0
18603 17174 0
18603 17175 0
18603 17177 0
18603 17165 0
18603 17165 17174 0
18603 17165 17175 0
18603 17165 17177 0
18603 17166 0
18603 17166 17174 0
18603 17166 17175 0
18603 17166 17177 0
c (((aux1681 + aux1684 + aux1685)<=1)=tv=SATLiteral(18604))
-18604 17204 0
-18604 17198 17203 0
-18604 17199 0
-18604 17201 0
-18604 17189 17203 0
-18604 17189 17198 0
-18604 17189 17199 0
-18604 17189 17201 0
-18604 17190 0
-18604 17190 17198 0
-18604 17190 17199 0
-18604 17190 17201 0
18604 -17190 -17198 -17203 0
18604 -17189 -17199 -17203 0
18604 -17189 -17198 -17204 0
c ((1<=(aux1681 + aux1684 + aux1685))=tv=SATLiteral(18605))
-18605 -17189 -17198 -17203 0
18605 17203 0
18605 17198 0
18605 17199 0
18605 17201 0
18605 17189 0
18605 17189 17198 0
18605 17189 17199 0
18605 17189 17201 0
18605 17190 0
18605 17190 17198 0
18605 17190 17199 0
18605 17190 17201 0
c (((aux1687 + aux1690 + aux1691)<=1)=tv=SATLiteral(18606))
-18606 17228 0
-18606 17222 17227 0
-18606 17223 0
-18606 17225 0
-18606 17213 17227 0
-18606 17213 17222 0
-18606 17213 17223 0
-18606 17213 17225 0
-18606 17214 0
-18606 17214 17222 0
-18606 17214 17223 0
-18606 17214 17225 0
18606 -17214 -17222 -17227 0
18606 -17213 -17223 -17227 0
18606 -17213 -17222 -17228 0
c ((1<=(aux1687 + aux1690 + aux1691))=tv=SATLiteral(18607))
-18607 -17213 -17222 -17227 0
18607 17227 0
18607 17222 0
18607 17223 0
18607 17225 0
18607 17213 0
18607 17213 17222 0
18607 17213 17223 0
18607 17213 17225 0
18607 17214 0
18607 17214 17222 0
18607 17214 17223 0
18607 17214 17225 0
c (((aux1693 + aux1696 + aux1697)<=1)=tv=SATLiteral(18608))
-18608 17252 0
-18608 17246 17251 0
-18608 17247 0
-18608 17249 0
-18608 17237 17251 0
-18608 17237 17246 0
-18608 17237 17247 0
-18608 17237 17249 0
-18608 17238 0
-18608 17238 17246 0
-18608 17238 17247 0
-18608 17238 17249 0
18608 -17238 -17246 -17251 0
18608 -17237 -17247 -17251 0
18608 -17237 -17246 -17252 0
c ((1<=(aux1693 + aux1696 + aux1697))=tv=SATLiteral(18609))
-18609 -17237 -17246 -17251 0
18609 17251 0
18609 17246 0
18609 17247 0
18609 17249 0
18609 17237 0
18609 17237 17246 0
18609 17237 17247 0
18609 17237 17249 0
18609 17238 0
18609 17238 17246 0
18609 17238 17247 0
18609 17238 17249 0
c (((aux1699 + aux1702 + aux1703)<=1)=tv=SATLiteral(18610))
-18610 17276 0
-18610 17270 17275 0
-18610 17271 0
-18610 17273 0
-18610 17261 17275 0
-18610 17261 17270 0
-18610 17261 17271 0
-18610 17261 17273 0
-18610 17262 0
-18610 17262 17270 0
-18610 17262 17271 0
-18610 17262 17273 0
18610 -17262 -17270 -17275 0
18610 -17261 -17271 -17275 0
18610 -17261 -17270 -17276 0
c ((1<=(aux1699 + aux1702 + aux1703))=tv=SATLiteral(18611))
-18611 -17261 -17270 -17275 0
18611 17275 0
18611 17270 0
18611 17271 0
18611 17273 0
18611 17261 0
18611 17261 17270 0
18611 17261 17271 0
18611 17261 17273 0
18611 17262 0
18611 17262 17270 0
18611 17262 17271 0
18611 17262 17273 0
c (((aux1705 + aux1708 + aux1709)<=1)=tv=SATLiteral(18612))
-18612 17300 0
-18612 17294 17299 0
-18612 17295 0
-18612 17297 0
-18612 17285 17299 0
-18612 17285 17294 0
-18612 17285 17295 0
-18612 17285 17297 0
-18612 17286 0
-18612 17286 17294 0
-18612 17286 17295 0
-18612 17286 17297 0
18612 -17286 -17294 -17299 0
18612 -17285 -17295 -17299 0
18612 -17285 -17294 -17300 0
c ((1<=(aux1705 + aux1708 + aux1709))=tv=SATLiteral(18613))
-18613 -17285 -17294 -17299 0
18613 17299 0
18613 17294 0
18613 17295 0
18613 17297 0
18613 17285 0
18613 17285 17294 0
18613 17285 17295 0
18613 17285 17297 0
18613 17286 0
18613 17286 17294 0
18613 17286 17295 0
18613 17286 17297 0
c (((aux1711 + aux1714 + aux1715)<=1)=tv=SATLiteral(18614))
-18614 17324 0
-18614 17318 17323 0
-18614 17319 0
-18614 17321 0
-18614 17309 17323 0
-18614 17309 17318 0
-18614 17309 17319 0
-18614 17309 17321 0
-18614 17310 0
-18614 17310 17318 0
-18614 17310 17319 0
-18614 17310 17321 0
18614 -17310 -17318 -17323 0
18614 -17309 -17319 -17323 0
18614 -17309 -17318 -17324 0
c ((1<=(aux1711 + aux1714 + aux1715))=tv=SATLiteral(18615))
-18615 -17309 -17318 -17323 0
18615 17323 0
18615 17318 0
18615 17319 0
18615 17321 0
18615 17309 0
18615 17309 17318 0
18615 17309 17319 0
18615 17309 17321 0
18615 17310 0
18615 17310 17318 0
18615 17310 17319 0
18615 17310 17321 0
c (((aux1717 + aux1720 + aux1721)<=1)=tv=SATLiteral(18616))
-18616 17348 0
-18616 17342 17347 0
-18616 17343 0
-18616 17345 0
-18616 17333 17347 0
-18616 17333 17342 0
-18616 17333 17343 0
-18616 17333 17345 0
-18616 17334 0
-18616 17334 17342 0
-18616 17334 17343 0
-18616 17334 17345 0
18616 -17334 -17342 -17347 0
18616 -17333 -17343 -17347 0
18616 -17333 -17342 -17348 0
c ((1<=(aux1717 + aux1720 + aux1721))=tv=SATLiteral(18617))
-18617 -17333 -17342 -17347 0
18617 17347 0
18617 17342 0
18617 17343 0
18617 17345 0
18617 17333 0
18617 17333 17342 0
18617 17333 17343 0
18617 17333 17345 0
18617 17334 0
18617 17334 17342 0
18617 17334 17343 0
18617 17334 17345 0
c (((aux1723 + aux1726 + aux1727)<=1)=tv=SATLiteral(18618))
-18618 17372 0
-18618 17366 17371 0
-18618 17367 0
-18618 17369 0
-18618 17357 17371 0
-18618 17357 17366 0
-18618 17357 17367 0
-18618 17357 17369 0
-18618 17358 0
-18618 17358 17366 0
-18618 17358 17367 0
-18618 17358 17369 0
18618 -17358 -17366 -17371 0
18618 -17357 -17367 -17371 0
18618 -17357 -17366 -17372 0
c ((1<=(aux1723 + aux1726 + aux1727))=tv=SATLiteral(18619))
-18619 -17357 -17366 -17371 0
18619 17371 0
18619 17366 0
18619 17367 0
18619 17369 0
18619 17357 0
18619 17357 17366 0
18619 17357 17367 0
18619 17357 17369 0
18619 17358 0
18619 17358 17366 0
18619 17358 17367 0
18619 17358 17369 0
c (((aux1729 + aux1732 + aux1733)<=1)=tv=SATLiteral(18620))
-18620 17396 0
-18620 17390 17395 0
-18620 17391 0
-18620 17393 0
-18620 17381 17395 0
-18620 17381 17390 0
-18620 17381 17391 0
-18620 17381 17393 0
-18620 17382 0
-18620 17382 17390 0
-18620 17382 17391 0
-18620 17382 17393 0
18620 -17382 -17390 -17395 0
18620 -17381 -17391 -17395 0
18620 -17381 -17390 -17396 0
c ((1<=(aux1729 + aux1732 + aux1733))=tv=SATLiteral(18621))
-18621 -17381 -17390 -17395 0
18621 17395 0
18621 17390 0
18621 17391 0
18621 17393 0
18621 17381 0
18621 17381 17390 0
18621 17381 17391 0
18621 17381 17393 0
18621 17382 0
18621 17382 17390 0
18621 17382 17391 0
18621 17382 17393 0
c (((aux1735 + aux1738 + aux1739)<=1)=tv=SATLiteral(18622))
-18622 17420 0
-18622 17414 17419 0
-18622 17415 0
-18622 17417 0
-18622 17405 17419 0
-18622 17405 17414 0
-18622 17405 17415 0
-18622 17405 17417 0
-18622 17406 0
-18622 17406 17414 0
-18622 17406 17415 0
-18622 17406 17417 0
18622 -17406 -17414 -17419 0
18622 -17405 -17415 -17419 0
18622 -17405 -17414 -17420 0
c ((1<=(aux1735 + aux1738 + aux1739))=tv=SATLiteral(18623))
-18623 -17405 -17414 -17419 0
18623 17419 0
18623 17414 0
18623 17415 0
18623 17417 0
18623 17405 0
18623 17405 17414 0
18623 17405 17415 0
18623 17405 17417 0
18623 17406 0
18623 17406 17414 0
18623 17406 17415 0
18623 17406 17417 0
c (((aux1741 + aux1744 + aux1745)<=1)=tv=SATLiteral(18624))
-18624 17444 0
-18624 17438 17443 0
-18624 17439 0
-18624 17441 0
-18624 17429 17443 0
-18624 17429 17438 0
-18624 17429 17439 0
-18624 17429 17441 0
-18624 17430 0
-18624 17430 17438 0
-18624 17430 17439 0
-18624 17430 17441 0
18624 -17430 -17438 -17443 0
18624 -17429 -17439 -17443 0
18624 -17429 -17438 -17444 0
c ((1<=(aux1741 + aux1744 + aux1745))=tv=SATLiteral(18625))
-18625 -17429 -17438 -17443 0
18625 17443 0
18625 17438 0
18625 17439 0
18625 17441 0
18625 17429 0
18625 17429 17438 0
18625 17429 17439 0
18625 17429 17441 0
18625 17430 0
18625 17430 17438 0
18625 17430 17439 0
18625 17430 17441 0
c (((aux1747 + aux1750 + aux1751)<=1)=tv=SATLiteral(18626))
-18626 17468 0
-18626 17462 17467 0
-18626 17463 0
-18626 17465 0
-18626 17453 17467 0
-18626 17453 17462 0
-18626 17453 17463 0
-18626 17453 17465 0
-18626 17454 0
-18626 17454 17462 0
-18626 17454 17463 0
-18626 17454 17465 0
18626 -17454 -17462 -17467 0
18626 -17453 -17463 -17467 0
18626 -17453 -17462 -17468 0
c ((1<=(aux1747 + aux1750 + aux1751))=tv=SATLiteral(18627))
-18627 -17453 -17462 -17467 0
18627 17467 0
18627 17462 0
18627 17463 0
18627 17465 0
18627 17453 0
18627 17453 17462 0
18627 17453 17463 0
18627 17453 17465 0
18627 17454 0
18627 17454 17462 0
18627 17454 17463 0
18627 17454 17465 0
c (((aux1753 + aux1756 + aux1757)<=1)=tv=SATLiteral(18628))
-18628 17492 0
-18628 17486 17491 0
-18628 17487 0
-18628 17489 0
-18628 17477 17491 0
-18628 17477 17486 0
-18628 17477 17487 0
-18628 17477 17489 0
-18628 17478 0
-18628 17478 17486 0
-18628 17478 17487 0
-18628 17478 17489 0
18628 -17478 -17486 -17491 0
18628 -17477 -17487 -17491 0
18628 -17477 -17486 -17492 0
c ((1<=(aux1753 + aux1756 + aux1757))=tv=SATLiteral(18629))
-18629 -17477 -17486 -17491 0
18629 17491 0
18629 17486 0
18629 17487 0
18629 17489 0
18629 17477 0
18629 17477 17486 0
18629 17477 17487 0
18629 17477 17489 0
18629 17478 0
18629 17478 17486 0
18629 17478 17487 0
18629 17478 17489 0
c (((aux1759 + aux1762 + aux1763)<=1)=tv=SATLiteral(18630))
-18630 17516 0
-18630 17510 17515 0
-18630 17511 0
-18630 17513 0
-18630 17501 17515 0
-18630 17501 17510 0
-18630 17501 17511 0
-18630 17501 17513 0
-18630 17502 0
-18630 17502 17510 0
-18630 17502 17511 0
-18630 17502 17513 0
18630 -17502 -17510 -17515 0
18630 -17501 -17511 -17515 0
18630 -17501 -17510 -17516 0
c ((1<=(aux1759 + aux1762 + aux1763))=tv=SATLiteral(18631))
-18631 -17501 -17510 -17515 0
18631 17515 0
18631 17510 0
18631 17511 0
18631 17513 0
18631 17501 0
18631 17501 17510 0
18631 17501 17511 0
18631 17501 17513 0
18631 17502 0
18631 17502 17510 0
18631 17502 17511 0
18631 17502 17513 0
c (((aux1765 + aux1768 + aux1769)<=1)=tv=SATLiteral(18632))
-18632 17540 0
-18632 17534 17539 0
-18632 17535 0
-18632 17537 0
-18632 17525 17539 0
-18632 17525 17534 0
-18632 17525 17535 0
-18632 17525 17537 0
-18632 17526 0
-18632 17526 17534 0
-18632 17526 17535 0
-18632 17526 17537 0
18632 -17526 -17534 -17539 0
18632 -17525 -17535 -17539 0
18632 -17525 -17534 -17540 0
c ((1<=(aux1765 + aux1768 + aux1769))=tv=SATLiteral(18633))
-18633 -17525 -17534 -17539 0
18633 17539 0
18633 17534 0
18633 17535 0
18633 17537 0
18633 17525 0
18633 17525 17534 0
18633 17525 17535 0
18633 17525 17537 0
18633 17526 0
18633 17526 17534 0
18633 17526 17535 0
18633 17526 17537 0
c (((aux1771 + aux1774 + aux1775)<=1)=tv=SATLiteral(18634))
-18634 17564 0
-18634 17558 17563 0
-18634 17559 0
-18634 17561 0
-18634 17549 17563 0
-18634 17549 17558 0
-18634 17549 17559 0
-18634 17549 17561 0
-18634 17550 0
-18634 17550 17558 0
-18634 17550 17559 0
-18634 17550 17561 0
18634 -17550 -17558 -17563 0
18634 -17549 -17559 -17563 0
18634 -17549 -17558 -17564 0
c ((1<=(aux1771 + aux1774 + aux1775))=tv=SATLiteral(18635))
-18635 -17549 -17558 -17563 0
18635 17563 0
18635 17558 0
18635 17559 0
18635 17561 0
18635 17549 0
18635 17549 17558 0
18635 17549 17559 0
18635 17549 17561 0
18635 17550 0
18635 17550 17558 0
18635 17550 17559 0
18635 17550 17561 0
c (((aux1777 + aux1780 + aux1781)<=1)=tv=SATLiteral(18636))
-18636 17588 0
-18636 17582 17587 0
-18636 17583 0
-18636 17585 0
-18636 17573 17587 0
-18636 17573 17582 0
-18636 17573 17583 0
-18636 17573 17585 0
-18636 17574 0
-18636 17574 17582 0
-18636 17574 17583 0
-18636 17574 17585 0
18636 -17574 -17582 -17587 0
18636 -17573 -17583 -17587 0
18636 -17573 -17582 -17588 0
c ((1<=(aux1777 + aux1780 + aux1781))=tv=SATLiteral(18637))
-18637 -17573 -17582 -17587 0
18637 17587 0
18637 17582 0
18637 17583 0
18637 17585 0
18637 17573 0
18637 17573 17582 0
18637 17573 17583 0
18637 17573 17585 0
18637 17574 0
18637 17574 17582 0
18637 17574 17583 0
18637 17574 17585 0
c (((aux1783 + aux1786 + aux1787)<=1)=tv=SATLiteral(18638))
-18638 17612 0
-18638 17606 17611 0
-18638 17607 0
-18638 17609 0
-18638 17597 17611 0
-18638 17597 17606 0
-18638 17597 17607 0
-18638 17597 17609 0
-18638 17598 0
-18638 17598 17606 0
-18638 17598 17607 0
-18638 17598 17609 0
18638 -17598 -17606 -17611 0
18638 -17597 -17607 -17611 0
18638 -17597 -17606 -17612 0
c ((1<=(aux1783 + aux1786 + aux1787))=tv=SATLiteral(18639))
-18639 -17597 -17606 -17611 0
18639 17611 0
18639 17606 0
18639 17607 0
18639 17609 0
18639 17597 0
18639 17597 17606 0
18639 17597 17607 0
18639 17597 17609 0
18639 17598 0
18639 17598 17606 0
18639 17598 17607 0
18639 17598 17609 0
c (((aux1789 + aux1792 + aux1793)<=1)=tv=SATLiteral(18640))
-18640 17636 0
-18640 17630 17635 0
-18640 17631 0
-18640 17633 0
-18640 17621 17635 0
-18640 17621 17630 0
-18640 17621 17631 0
-18640 17621 17633 0
-18640 17622 0
-18640 17622 17630 0
-18640 17622 17631 0
-18640 17622 17633 0
18640 -17622 -17630 -17635 0
18640 -17621 -17631 -17635 0
18640 -17621 -17630 -17636 0
c ((1<=(aux1789 + aux1792 + aux1793))=tv=SATLiteral(18641))
-18641 -17621 -17630 -17635 0
18641 17635 0
18641 17630 0
18641 17631 0
18641 17633 0
18641 17621 0
18641 17621 17630 0
18641 17621 17631 0
18641 17621 17633 0
18641 17622 0
18641 17622 17630 0
18641 17622 17631 0
18641 17622 17633 0
c (((aux1795 + aux1798 + aux1799)<=1)=tv=SATLiteral(18642))
-18642 17660 0
-18642 17654 17659 0
-18642 17655 0
-18642 17657 0
-18642 17645 17659 0
-18642 17645 17654 0
-18642 17645 17655 0
-18642 17645 17657 0
-18642 17646 0
-18642 17646 17654 0
-18642 17646 17655 0
-18642 17646 17657 0
18642 -17646 -17654 -17659 0
18642 -17645 -17655 -17659 0
18642 -17645 -17654 -17660 0
c ((1<=(aux1795 + aux1798 + aux1799))=tv=SATLiteral(18643))
-18643 -17645 -17654 -17659 0
18643 17659 0
18643 17654 0
18643 17655 0
18643 17657 0
18643 17645 0
18643 17645 17654 0
18643 17645 17655 0
18643 17645 17657 0
18643 17646 0
18643 17646 17654 0
18643 17646 17655 0
18643 17646 17657 0
c (((aux1801 + aux1804 + aux1805)<=1)=tv=SATLiteral(18644))
-18644 17684 0
-18644 17678 17683 0
-18644 17679 0
-18644 17681 0
-18644 17669 17683 0
-18644 17669 17678 0
-18644 17669 17679 0
-18644 17669 17681 0
-18644 17670 0
-18644 17670 17678 0
-18644 17670 17679 0
-18644 17670 17681 0
18644 -17670 -17678 -17683 0
18644 -17669 -17679 -17683 0
18644 -17669 -17678 -17684 0
c ((1<=(aux1801 + aux1804 + aux1805))=tv=SATLiteral(18645))
-18645 -17669 -17678 -17683 0
18645 17683 0
18645 17678 0
18645 17679 0
18645 17681 0
18645 17669 0
18645 17669 17678 0
18645 17669 17679 0
18645 17669 17681 0
18645 17670 0
18645 17670 17678 0
18645 17670 17679 0
18645 17670 17681 0
c (((aux1807 + aux1810 + aux1811)<=1)=tv=SATLiteral(18646))
-18646 17708 0
-18646 17702 17707 0
-18646 17703 0
-18646 17705 0
-18646 17693 17707 0
-18646 17693 17702 0
-18646 17693 17703 0
-18646 17693 17705 0
-18646 17694 0
-18646 17694 17702 0
-18646 17694 17703 0
-18646 17694 17705 0
18646 -17694 -17702 -17707 0
18646 -17693 -17703 -17707 0
18646 -17693 -17702 -17708 0
c ((1<=(aux1807 + aux1810 + aux1811))=tv=SATLiteral(18647))
-18647 -17693 -17702 -17707 0
18647 17707 0
18647 17702 0
18647 17703 0
18647 17705 0
18647 17693 0
18647 17693 17702 0
18647 17693 17703 0
18647 17693 17705 0
18647 17694 0
18647 17694 17702 0
18647 17694 17703 0
18647 17694 17705 0
c (((aux1813 + aux1816 + aux1817)<=1)=tv=SATLiteral(18648))
-18648 17732 0
-18648 17726 17731 0
-18648 17727 0
-18648 17729 0
-18648 17717 17731 0
-18648 17717 17726 0
-18648 17717 17727 0
-18648 17717 17729 0
-18648 17718 0
-18648 17718 17726 0
-18648 17718 17727 0
-18648 17718 17729 0
18648 -17718 -17726 -17731 0
18648 -17717 -17727 -17731 0
18648 -17717 -17726 -17732 0
c ((1<=(aux1813 + aux1816 + aux1817))=tv=SATLiteral(18649))
-18649 -17717 -17726 -17731 0
18649 17731 0
18649 17726 0
18649 17727 0
18649 17729 0
18649 17717 0
18649 17717 17726 0
18649 17717 17727 0
18649 17717 17729 0
18649 17718 0
18649 17718 17726 0
18649 17718 17727 0
18649 17718 17729 0
c (((aux1819 + aux1822 + aux1823)<=1)=tv=SATLiteral(18650))
-18650 17756 0
-18650 17750 17755 0
-18650 17751 0
-18650 17753 0
-18650 17741 17755 0
-18650 17741 17750 0
-18650 17741 17751 0
-18650 17741 17753 0
-18650 17742 0
-18650 17742 17750 0
-18650 17742 17751 0
-18650 17742 17753 0
18650 -17742 -17750 -17755 0
18650 -17741 -17751 -17755 0
18650 -17741 -17750 -17756 0
c ((1<=(aux1819 + aux1822 + aux1823))=tv=SATLiteral(18651))
-18651 -17741 -17750 -17755 0
18651 17755 0
18651 17750 0
18651 17751 0
18651 17753 0
18651 17741 0
18651 17741 17750 0
18651 17741 17751 0
18651 17741 17753 0
18651 17742 0
18651 17742 17750 0
18651 17742 17751 0
18651 17742 17753 0
c (((aux1825 + aux1828 + aux1829)<=1)=tv=SATLiteral(18652))
-18652 17780 0
-18652 17774 17779 0
-18652 17775 0
-18652 17777 0
-18652 17765 17779 0
-18652 17765 17774 0
-18652 17765 17775 0
-18652 17765 17777 0
-18652 17766 0
-18652 17766 17774 0
-18652 17766 17775 0
-18652 17766 17777 0
18652 -17766 -17774 -17779 0
18652 -17765 -17775 -17779 0
18652 -17765 -17774 -17780 0
c ((1<=(aux1825 + aux1828 + aux1829))=tv=SATLiteral(18653))
-18653 -17765 -17774 -17779 0
18653 17779 0
18653 17774 0
18653 17775 0
18653 17777 0
18653 17765 0
18653 17765 17774 0
18653 17765 17775 0
18653 17765 17777 0
18653 17766 0
18653 17766 17774 0
18653 17766 17775 0
18653 17766 17777 0
c (((aux1831 + aux1834 + aux1835)<=1)=tv=SATLiteral(18654))
-18654 17804 0
-18654 17798 17803 0
-18654 17799 0
-18654 17801 0
-18654 17789 17803 0
-18654 17789 17798 0
-18654 17789 17799 0
-18654 17789 17801 0
-18654 17790 0
-18654 17790 17798 0
-18654 17790 17799 0
-18654 17790 17801 0
18654 -17790 -17798 -17803 0
18654 -17789 -17799 -17803 0
18654 -17789 -17798 -17804 0
c ((1<=(aux1831 + aux1834 + aux1835))=tv=SATLiteral(18655))
-18655 -17789 -17798 -17803 0
18655 17803 0
18655 17798 0
18655 17799 0
18655 17801 0
18655 17789 0
18655 17789 17798 0
18655 17789 17799 0
18655 17789 17801 0
18655 17790 0
18655 17790 17798 0
18655 17790 17799 0
18655 17790 17801 0
c (((aux1837 + aux1840 + aux1841)<=1)=tv=SATLiteral(18656))
-18656 17828 0
-18656 17822 17827 0
-18656 17823 0
-18656 17825 0
-18656 17813 17827 0
-18656 17813 17822 0
-18656 17813 17823 0
-18656 17813 17825 0
-18656 17814 0
-18656 17814 17822 0
-18656 17814 17823 0
-18656 17814 17825 0
18656 -17814 -17822 -17827 0
18656 -17813 -17823 -17827 0
18656 -17813 -17822 -17828 0
c ((1<=(aux1837 + aux1840 + aux1841))=tv=SATLiteral(18657))
-18657 -17813 -17822 -17827 0
18657 17827 0
18657 17822 0
18657 17823 0
18657 17825 0
18657 17813 0
18657 17813 17822 0
18657 17813 17823 0
18657 17813 17825 0
18657 17814 0
18657 17814 17822 0
18657 17814 17823 0
18657 17814 17825 0
c (((aux1843 + aux1846 + aux1847)<=1)=tv=SATLiteral(18658))
-18658 17852 0
-18658 17846 17851 0
-18658 17847 0
-18658 17849 0
-18658 17837 17851 0
-18658 17837 17846 0
-18658 17837 17847 0
-18658 17837 17849 0
-18658 17838 0
-18658 17838 17846 0
-18658 17838 17847 0
-18658 17838 17849 0
18658 -17838 -17846 -17851 0
18658 -17837 -17847 -17851 0
18658 -17837 -17846 -17852 0
c ((1<=(aux1843 + aux1846 + aux1847))=tv=SATLiteral(18659))
-18659 -17837 -17846 -17851 0
18659 17851 0
18659 17846 0
18659 17847 0
18659 17849 0
18659 17837 0
18659 17837 17846 0
18659 17837 17847 0
18659 17837 17849 0
18659 17838 0
18659 17838 17846 0
18659 17838 17847 0
18659 17838 17849 0
c (((aux1849 + aux1852 + aux1853)<=1)=tv=SATLiteral(18660))
-18660 17876 0
-18660 17870 17875 0
-18660 17871 0
-18660 17873 0
-18660 17861 17875 0
-18660 17861 17870 0
-18660 17861 17871 0
-18660 17861 17873 0
-18660 17862 0
-18660 17862 17870 0
-18660 17862 17871 0
-18660 17862 17873 0
18660 -17862 -17870 -17875 0
18660 -17861 -17871 -17875 0
18660 -17861 -17870 -17876 0
c ((1<=(aux1849 + aux1852 + aux1853))=tv=SATLiteral(18661))
-18661 -17861 -17870 -17875 0
18661 17875 0
18661 17870 0
18661 17871 0
18661 17873 0
18661 17861 0
18661 17861 17870 0
18661 17861 17871 0
18661 17861 17873 0
18661 17862 0
18661 17862 17870 0
18661 17862 17871 0
18661 17862 17873 0
c (((aux1855 + aux1858 + aux1859)<=1)=tv=SATLiteral(18662))
-18662 17900 0
-18662 17894 17899 0
-18662 17895 0
-18662 17897 0
-18662 17885 17899 0
-18662 17885 17894 0
-18662 17885 17895 0
-18662 17885 17897 0
-18662 17886 0
-18662 17886 17894 0
-18662 17886 17895 0
-18662 17886 17897 0
18662 -17886 -17894 -17899 0
18662 -17885 -17895 -17899 0
18662 -17885 -17894 -17900 0
c ((1<=(aux1855 + aux1858 + aux1859))=tv=SATLiteral(18663))
-18663 -17885 -17894 -17899 0
18663 17899 0
18663 17894 0
18663 17895 0
18663 17897 0
18663 17885 0
18663 17885 17894 0
18663 17885 17895 0
18663 17885 17897 0
18663 17886 0
18663 17886 17894 0
18663 17886 17895 0
18663 17886 17897 0
c (((aux1861 + aux1864 + aux1865)<=1)=tv=SATLiteral(18664))
-18664 17924 0
-18664 17918 17923 0
-18664 17919 0
-18664 17921 0
-18664 17909 17923 0
-18664 17909 17918 0
-18664 17909 17919 0
-18664 17909 17921 0
-18664 17910 0
-18664 17910 17918 0
-18664 17910 17919 0
-18664 17910 17921 0
18664 -17910 -17918 -17923 0
18664 -17909 -17919 -17923 0
18664 -17909 -17918 -17924 0
c ((1<=(aux1861 + aux1864 + aux1865))=tv=SATLiteral(18665))
-18665 -17909 -17918 -17923 0
18665 17923 0
18665 17918 0
18665 17919 0
18665 17921 0
18665 17909 0
18665 17909 17918 0
18665 17909 17919 0
18665 17909 17921 0
18665 17910 0
18665 17910 17918 0
18665 17910 17919 0
18665 17910 17921 0
c (((aux1867 + aux1870 + aux1871)<=1)=tv=SATLiteral(18666))
-18666 17948 0
-18666 17942 17947 0
-18666 17943 0
-18666 17945 0
-18666 17933 17947 0
-18666 17933 17942 0
-18666 17933 17943 0
-18666 17933 17945 0
-18666 17934 0
-18666 17934 17942 0
-18666 17934 17943 0
-18666 17934 17945 0
18666 -17934 -17942 -17947 0
18666 -17933 -17943 -17947 0
18666 -17933 -17942 -17948 0
c ((1<=(aux1867 + aux1870 + aux1871))=tv=SATLiteral(18667))
-18667 -17933 -17942 -17947 0
18667 17947 0
18667 17942 0
18667 17943 0
18667 17945 0
18667 17933 0
18667 17933 17942 0
18667 17933 17943 0
18667 17933 17945 0
18667 17934 0
18667 17934 17942 0
18667 17934 17943 0
18667 17934 17945 0
c (((aux1873 + aux1876 + aux1877)<=1)=tv=SATLiteral(18668))
-18668 17972 0
-18668 17966 17971 0
-18668 17967 0
-18668 17969 0
-18668 17957 17971 0
-18668 17957 17966 0
-18668 17957 17967 0
-18668 17957 17969 0
-18668 17958 0
-18668 17958 17966 0
-18668 17958 17967 0
-18668 17958 17969 0
18668 -17958 -17966 -17971 0
18668 -17957 -17967 -17971 0
18668 -17957 -17966 -17972 0
c ((1<=(aux1873 + aux1876 + aux1877))=tv=SATLiteral(18669))
-18669 -17957 -17966 -17971 0
18669 17971 0
18669 17966 0
18669 17967 0
18669 17969 0
18669 17957 0
18669 17957 17966 0
18669 17957 17967 0
18669 17957 17969 0
18669 17958 0
18669 17958 17966 0
18669 17958 17967 0
18669 17958 17969 0
c (((aux1879 + aux1882 + aux1883)<=1)=tv=SATLiteral(18670))
-18670 17996 0
-18670 17990 17995 0
-18670 17991 0
-18670 17993 0
-18670 17981 17995 0
-18670 17981 17990 0
-18670 17981 17991 0
-18670 17981 17993 0
-18670 17982 0
-18670 17982 17990 0
-18670 17982 17991 0
-18670 17982 17993 0
18670 -17982 -17990 -17995 0
18670 -17981 -17991 -17995 0
18670 -17981 -17990 -17996 0
c ((1<=(aux1879 + aux1882 + aux1883))=tv=SATLiteral(18671))
-18671 -17981 -17990 -17995 0
18671 17995 0
18671 17990 0
18671 17991 0
18671 17993 0
18671 17981 0
18671 17981 17990 0
18671 17981 17991 0
18671 17981 17993 0
18671 17982 0
18671 17982 17990 0
18671 17982 17991 0
18671 17982 17993 0
c (((aux1885 + aux1888 + aux1889)<=1)=tv=SATLiteral(18672))
-18672 18020 0
-18672 18014 18019 0
-18672 18015 0
-18672 18017 0
-18672 18005 18019 0
-18672 18005 18014 0
-18672 18005 18015 0
-18672 18005 18017 0
-18672 18006 0
-18672 18006 18014 0
-18672 18006 18015 0
-18672 18006 18017 0
18672 -18006 -18014 -18019 0
18672 -18005 -18015 -18019 0
18672 -18005 -18014 -18020 0
c ((1<=(aux1885 + aux1888 + aux1889))=tv=SATLiteral(18673))
-18673 -18005 -18014 -18019 0
18673 18019 0
18673 18014 0
18673 18015 0
18673 18017 0
18673 18005 0
18673 18005 18014 0
18673 18005 18015 0
18673 18005 18017 0
18673 18006 0
18673 18006 18014 0
18673 18006 18015 0
18673 18006 18017 0
c (((aux1891 + aux1894 + aux1895)<=1)=tv=SATLiteral(18674))
-18674 18044 0
-18674 18038 18043 0
-18674 18039 0
-18674 18041 0
-18674 18029 18043 0
-18674 18029 18038 0
-18674 18029 18039 0
-18674 18029 18041 0
-18674 18030 0
-18674 18030 18038 0
-18674 18030 18039 0
-18674 18030 18041 0
18674 -18030 -18038 -18043 0
18674 -18029 -18039 -18043 0
18674 -18029 -18038 -18044 0
c ((1<=(aux1891 + aux1894 + aux1895))=tv=SATLiteral(18675))
-18675 -18029 -18038 -18043 0
18675 18043 0
18675 18038 0
18675 18039 0
18675 18041 0
18675 18029 0
18675 18029 18038 0
18675 18029 18039 0
18675 18029 18041 0
18675 18030 0
18675 18030 18038 0
18675 18030 18039 0
18675 18030 18041 0
c (((aux1897 + aux1900 + aux1901)<=1)=tv=SATLiteral(18676))
-18676 18068 0
-18676 18062 18067 0
-18676 18063 0
-18676 18065 0
-18676 18053 18067 0
-18676 18053 18062 0
-18676 18053 18063 0
-18676 18053 18065 0
-18676 18054 0
-18676 18054 18062 0
-18676 18054 18063 0
-18676 18054 18065 0
18676 -18054 -18062 -18067 0
18676 -18053 -18063 -18067 0
18676 -18053 -18062 -18068 0
c ((1<=(aux1897 + aux1900 + aux1901))=tv=SATLiteral(18677))
-18677 -18053 -18062 -18067 0
18677 18067 0
18677 18062 0
18677 18063 0
18677 18065 0
18677 18053 0
18677 18053 18062 0
18677 18053 18063 0
18677 18053 18065 0
18677 18054 0
18677 18054 18062 0
18677 18054 18063 0
18677 18054 18065 0
c (((aux1903 + aux1906 + aux1907)<=1)=tv=SATLiteral(18678))
-18678 18092 0
-18678 18086 18091 0
-18678 18087 0
-18678 18089 0
-18678 18077 18091 0
-18678 18077 18086 0
-18678 18077 18087 0
-18678 18077 18089 0
-18678 18078 0
-18678 18078 18086 0
-18678 18078 18087 0
-18678 18078 18089 0
18678 -18078 -18086 -18091 0
18678 -18077 -18087 -18091 0
18678 -18077 -18086 -18092 0
c ((1<=(aux1903 + aux1906 + aux1907))=tv=SATLiteral(18679))
-18679 -18077 -18086 -18091 0
18679 18091 0
18679 18086 0
18679 18087 0
18679 18089 0
18679 18077 0
18679 18077 18086 0
18679 18077 18087 0
18679 18077 18089 0
18679 18078 0
18679 18078 18086 0
18679 18078 18087 0
18679 18078 18089 0
c (((aux1909 + aux1912 + aux1913)<=1)=tv=SATLiteral(18680))
-18680 18116 0
-18680 18110 18115 0
-18680 18111 0
-18680 18113 0
-18680 18101 18115 0
-18680 18101 18110 0
-18680 18101 18111 0
-18680 18101 18113 0
-18680 18102 0
-18680 18102 18110 0
-18680 18102 18111 0
-18680 18102 18113 0
18680 -18102 -18110 -18115 0
18680 -18101 -18111 -18115 0
18680 -18101 -18110 -18116 0
c ((1<=(aux1909 + aux1912 + aux1913))=tv=SATLiteral(18681))
-18681 -18101 -18110 -18115 0
18681 18115 0
18681 18110 0
18681 18111 0
18681 18113 0
18681 18101 0
18681 18101 18110 0
18681 18101 18111 0
18681 18101 18113 0
18681 18102 0
18681 18102 18110 0
18681 18102 18111 0
18681 18102 18113 0
c (((aux1915 + aux1918 + aux1919)<=1)=tv=SATLiteral(18682))
-18682 18140 0
-18682 18134 18139 0
-18682 18135 0
-18682 18137 0
-18682 18125 18139 0
-18682 18125 18134 0
-18682 18125 18135 0
-18682 18125 18137 0
-18682 18126 0
-18682 18126 18134 0
-18682 18126 18135 0
-18682 18126 18137 0
18682 -18126 -18134 -18139 0
18682 -18125 -18135 -18139 0
18682 -18125 -18134 -18140 0
c ((1<=(aux1915 + aux1918 + aux1919))=tv=SATLiteral(18683))
-18683 -18125 -18134 -18139 0
18683 18139 0
18683 18134 0
18683 18135 0
18683 18137 0
18683 18125 0
18683 18125 18134 0
18683 18125 18135 0
18683 18125 18137 0
18683 18126 0
18683 18126 18134 0
18683 18126 18135 0
18683 18126 18137 0
c (((aux1921 + aux1924 + aux1925)<=1)=tv=SATLiteral(18684))
-18684 18164 0
-18684 18158 18163 0
-18684 18159 0
-18684 18161 0
-18684 18149 18163 0
-18684 18149 18158 0
-18684 18149 18159 0
-18684 18149 18161 0
-18684 18150 0
-18684 18150 18158 0
-18684 18150 18159 0
-18684 18150 18161 0
18684 -18150 -18158 -18163 0
18684 -18149 -18159 -18163 0
18684 -18149 -18158 -18164 0
c ((1<=(aux1921 + aux1924 + aux1925))=tv=SATLiteral(18685))
-18685 -18149 -18158 -18163 0
18685 18163 0
18685 18158 0
18685 18159 0
18685 18161 0
18685 18149 0
18685 18149 18158 0
18685 18149 18159 0
18685 18149 18161 0
18685 18150 0
18685 18150 18158 0
18685 18150 18159 0
18685 18150 18161 0
c ((variant_fields_00001_00002_00002 * SATLiteral(-1352))=tv=aux0)
-1367 -1352 6140 0
-1367 1352 6142 0
-1368 -1352 6140 0
-1368 1352 6144 0
-1369 -1352 6140 0
-1369 1352 6146 0
-1370 -1352 6140 0
-1370 1352 6148 0
-1371 -1352 6140 0
-1371 1352 6150 0
-1372 -1352 6140 0
-1372 1352 6152 0
-1373 -1352 6140 0
-1373 1352 6154 0
-1374 -1352 6140 0
-1374 1352 6156 0
-1375 -1352 6140 0
-1375 1352 -6155 0
c ((variant_fields_00001_00002_00003 * SATLiteral(-1353))=tv=aux1)
-1382 -1353 6157 0
-1382 1353 6159 0
-1383 -1353 6157 0
-1383 1353 6161 0
-1384 -1353 6157 0
-1384 1353 6163 0
-1385 -1353 6157 0
-1385 1353 6165 0
-1386 -1353 6157 0
-1386 1353 6167 0
-1387 -1353 6157 0
-1387 1353 6169 0
-1388 -1353 6157 0
-1388 1353 6171 0
-1389 -1353 6157 0
-1389 1353 6173 0
-1390 -1353 6157 0
-1390 1353 -6172 0
c ((variant_fields_00001_00002_00004 * SATLiteral(-1355))=tv=aux2)
-1397 -1355 6174 0
-1397 1355 6176 0
-1398 -1355 6174 0
-1398 1355 6178 0
-1399 -1355 6174 0
-1399 1355 6180 0
-1400 -1355 6174 0
-1400 1355 6182 0
-1401 -1355 6174 0
-1401 1355 6184 0
-1402 -1355 6174 0
-1402 1355 6186 0
-1403 -1355 6174 0
-1403 1355 6188 0
-1404 -1355 6174 0
-1404 1355 6190 0
-1405 -1355 6174 0
-1405 1355 -6189 0
c ((variant_fields_00001_00002_00005 * SATLiteral(-1357))=tv=aux3)
-1412 -1357 6191 0
-1412 1357 6193 0
-1413 -1357 6191 0
-1413 1357 6195 0
-1414 -1357 6191 0
-1414 1357 6197 0
-1415 -1357 6191 0
-1415 1357 6199 0
-1416 -1357 6191 0
-1416 1357 6201 0
-1417 -1357 6191 0
-1417 1357 6203 0
-1418 -1357 6191 0
-1418 1357 6205 0
-1419 -1357 6191 0
-1419 1357 6207 0
-1420 -1357 6191 0
-1420 1357 -6206 0
c ((variant_fields_00001_00002_00006 * SATLiteral(-1359))=tv=aux4)
-1427 -1359 6208 0
-1427 1359 6210 0
-1428 -1359 6208 0
-1428 1359 6212 0
-1429 -1359 6208 0
-1429 1359 6214 0
-1430 -1359 6208 0
-1430 1359 6216 0
-1431 -1359 6208 0
-1431 1359 6218 0
-1432 -1359 6208 0
-1432 1359 6220 0
-1433 -1359 6208 0
-1433 1359 6222 0
-1434 -1359 6208 0
-1434 1359 6224 0
-1435 -1359 6208 0
-1435 1359 -6223 0
c ((variant_fields_00001_00002_00007 * SATLiteral(-1361))=tv=aux5)
-1442 -1361 6225 0
-1442 1361 6227 0
-1443 -1361 6225 0
-1443 1361 6229 0
-1444 -1361 6225 0
-1444 1361 6231 0
-1445 -1361 6225 0
-1445 1361 6233 0
-1446 -1361 6225 0
-1446 1361 6235 0
-1447 -1361 6225 0
-1447 1361 6237 0
-1448 -1361 6225 0
-1448 1361 6239 0
-1449 -1361 6225 0
-1449 1361 6241 0
-1450 -1361 6225 0
-1450 1361 -6240 0
c ((variant_fields_00001_00002_00008 * SATLiteral(-1363))=tv=aux6)
-1457 -1363 6242 0
-1457 1363 6244 0
-1458 -1363 6242 0
-1458 1363 6246 0
-1459 -1363 6242 0
-1459 1363 6248 0
-1460 -1363 6242 0
-1460 1363 6250 0
-1461 -1363 6242 0
-1461 1363 6252 0
-1462 -1363 6242 0
-1462 1363 6254 0
-1463 -1363 6242 0
-1463 1363 6256 0
-1464 -1363 6242 0
-1464 1363 6258 0
-1465 -1363 6242 0
-1465 1363 -6257 0
c ((variant_fields_00001_00002_00009 * SATLiteral(-1365))=tv=aux7)
-1472 -1365 6259 0
-1472 1365 6261 0
-1473 -1365 6259 0
-1473 1365 6263 0
-1474 -1365 6259 0
-1474 1365 6265 0
-1475 -1365 6259 0
-1475 1365 6267 0
-1476 -1365 6259 0
-1476 1365 6269 0
-1477 -1365 6259 0
-1477 1365 6271 0
-1478 -1365 6259 0
-1478 1365 6273 0
-1479 -1365 6259 0
-1479 1365 6275 0
-1480 -1365 6259 0
-1480 1365 -6274 0
c ((SATLiteral(18170) /\ SATLiteral(18171))=tv=SATLiteral(6276))
6276 -18170 -18171 0
18170 -6276 0
18171 -6276 0
c ((SATLiteral(-1622) * variant_fields_00001_00004_00002)=tv=aux9)
-1622 -1637 6277 0
-1622 -1638 6277 0
-1622 -1639 6277 0
-1622 -1640 6277 0
-1622 -1641 6277 0
-1622 -1642 6277 0
-1622 -1643 6277 0
-1622 -1644 6277 0
-1622 -1645 6277 0
1622 -1637 6279 0
1622 -1638 6281 0
1622 -1639 6283 0
1622 -1640 6285 0
1622 -1641 6287 0
1622 -1642 6289 0
1622 -1643 6291 0
1622 -1644 6293 0
1622 -1645 -6292 0
c ((SATLiteral(-1623) * variant_fields_00001_00004_00003)=tv=aux10)
-1623 -1652 6294 0
-1623 -1653 6294 0
-1623 -1654 6294 0
-1623 -1655 6294 0
-1623 -1656 6294 0
-1623 -1657 6294 0
-1623 -1658 6294 0
-1623 -1659 6294 0
-1623 -1660 6294 0
1623 -1652 6296 0
1623 -1653 6298 0
1623 -1654 6300 0
1623 -1655 6302 0
1623 -1656 6304 0
1623 -1657 6306 0
1623 -1658 6308 0
1623 -1659 6310 0
1623 -1660 -6309 0
c ((SATLiteral(-1625) * variant_fields_00001_00004_00004)=tv=aux11)
-1625 -1667 6311 0
-1625 -1668 6311 0
-1625 -1669 6311 0
-1625 -1670 6311 0
-1625 -1671 6311 0
-1625 -1672 6311 0
-1625 -1673 6311 0
-1625 -1674 6311 0
-1625 -1675 6311 0
1625 -1667 6313 0
1625 -1668 6315 0
1625 -1669 6317 0
1625 -1670 6319 0
1625 -1671 6321 0
1625 -1672 6323 0
1625 -1673 6325 0
1625 -1674 6327 0
1625 -1675 -6326 0
c ((SATLiteral(-1627) * variant_fields_00001_00004_00005)=tv=aux12)
-1627 -1682 6328 0
-1627 -1683 6328 0
-1627 -1684 6328 0
-1627 -1685 6328 0
-1627 -1686 6328 0
-1627 -1687 6328 0
-1627 -1688 6328 0
-1627 -1689 6328 0
-1627 -1690 6328 0
1627 -1682 6330 0
1627 -1683 6332 0
1627 -1684 6334 0
1627 -1685 6336 0
1627 -1686 6338 0
1627 -1687 6340 0
1627 -1688 6342 0
1627 -1689 6344 0
1627 -1690 -6343 0
c ((SATLiteral(-1629) * variant_fields_00001_00004_00006)=tv=aux13)
-1629 -1697 6345 0
-1629 -1698 6345 0
-1629 -1699 6345 0
-1629 -1700 6345 0
-1629 -1701 6345 0
-1629 -1702 6345 0
-1629 -1703 6345 0
-1629 -1704 6345 0
-1629 -1705 6345 0
1629 -1697 6347 0
1629 -1698 6349 0
1629 -1699 6351 0
1629 -1700 6353 0
1629 -1701 6355 0
1629 -1702 6357 0
1629 -1703 6359 0
1629 -1704 6361 0
1629 -1705 -6360 0
c ((SATLiteral(-1631) * variant_fields_00001_00004_00007)=tv=aux14)
-1631 -1712 6362 0
-1631 -1713 6362 0
-1631 -1714 6362 0
-1631 -1715 6362 0
-1631 -1716 6362 0
-1631 -1717 6362 0
-1631 -1718 6362 0
-1631 -1719 6362 0
-1631 -1720 6362 0
1631 -1712 6364 0
1631 -1713 6366 0
1631 -1714 6368 0
1631 -1715 6370 0
1631 -1716 6372 0
1631 -1717 6374 0
1631 -1718 6376 0
1631 -1719 6378 0
1631 -1720 -6377 0
c ((SATLiteral(-1633) * variant_fields_00001_00004_00008)=tv=aux15)
-1633 -1727 6379 0
-1633 -1728 6379 0
-1633 -1729 6379 0
-1633 -1730 6379 0
-1633 -1731 6379 0
-1633 -1732 6379 0
-1633 -1733 6379 0
-1633 -1734 6379 0
-1633 -1735 6379 0
1633 -1727 6381 0
1633 -1728 6383 0
1633 -1729 6385 0
1633 -1730 6387 0
1633 -1731 6389 0
1633 -1732 6391 0
1633 -1733 6393 0
1633 -1734 6395 0
1633 -1735 -6394 0
c ((SATLiteral(-1635) * variant_fields_00001_00004_00009)=tv=aux16)
-1635 -1742 6396 0
-1635 -1743 6396 0
-1635 -1744 6396 0
-1635 -1745 6396 0
-1635 -1746 6396 0
-1635 -1747 6396 0
-1635 -1748 6396 0
-1635 -1749 6396 0
-1635 -1750 6396 0
1635 -1742 6398 0
1635 -1743 6400 0
1635 -1744 6402 0
1635 -1745 6404 0
1635 -1746 6406 0
1635 -1747 6408 0
1635 -1748 6410 0
1635 -1749 6412 0
1635 -1750 -6411 0
c ((SATLiteral(18172) /\ SATLiteral(18173))=tv=SATLiteral(6413))
6413 -18172 -18173 0
18172 -6413 0
18173 -6413 0
c ((variant_fields_00001_00006_00002 * SATLiteral(-1892))=tv=aux18)
-1907 -1892 6414 0
-1907 1892 6416 0
-1908 -1892 6414 0
-1908 1892 6418 0
-1909 -1892 6414 0
-1909 1892 6420 0
-1910 -1892 6414 0
-1910 1892 6422 0
-1911 -1892 6414 0
-1911 1892 6424 0
-1912 -1892 6414 0
-1912 1892 6426 0
-1913 -1892 6414 0
-1913 1892 6428 0
-1914 -1892 6414 0
-1914 1892 6430 0
-1915 -1892 6414 0
-1915 1892 -6429 0
c ((variant_fields_00001_00006_00003 * SATLiteral(-1893))=tv=aux19)
-1922 -1893 6431 0
-1922 1893 6433 0
-1923 -1893 6431 0
-1923 1893 6435 0
-1924 -1893 6431 0
-1924 1893 6437 0
-1925 -1893 6431 0
-1925 1893 6439 0
-1926 -1893 6431 0
-1926 1893 6441 0
-1927 -1893 6431 0
-1927 1893 6443 0
-1928 -1893 6431 0
-1928 1893 6445 0
-1929 -1893 6431 0
-1929 1893 6447 0
-1930 -1893 6431 0
-1930 1893 -6446 0
c ((variant_fields_00001_00006_00004 * SATLiteral(-1895))=tv=aux20)
-1937 -1895 6448 0
-1937 1895 6450 0
-1938 -1895 6448 0
-1938 1895 6452 0
-1939 -1895 6448 0
-1939 1895 6454 0
-1940 -1895 6448 0
-1940 1895 6456 0
-1941 -1895 6448 0
-1941 1895 6458 0
-1942 -1895 6448 0
-1942 1895 6460 0
-1943 -1895 6448 0
-1943 1895 6462 0
-1944 -1895 6448 0
-1944 1895 6464 0
-1945 -1895 6448 0
-1945 1895 -6463 0
c ((variant_fields_00001_00006_00005 * SATLiteral(-1897))=tv=aux21)
-1952 -1897 6465 0
-1952 1897 6467 0
-1953 -1897 6465 0
-1953 1897 6469 0
-1954 -1897 6465 0
-1954 1897 6471 0
-1955 -1897 6465 0
-1955 1897 6473 0
-1956 -1897 6465 0
-1956 1897 6475 0
-1957 -1897 6465 0
-1957 1897 6477 0
-1958 -1897 6465 0
-1958 1897 6479 0
-1959 -1897 6465 0
-1959 1897 6481 0
-1960 -1897 6465 0
-1960 1897 -6480 0
c ((variant_fields_00001_00006_00006 * SATLiteral(-1899))=tv=aux22)
-1967 -1899 6482 0
-1967 1899 6484 0
-1968 -1899 6482 0
-1968 1899 6486 0
-1969 -1899 6482 0
-1969 1899 6488 0
-1970 -1899 6482 0
-1970 1899 6490 0
-1971 -1899 6482 0
-1971 1899 6492 0
-1972 -1899 6482 0
-1972 1899 6494 0
-1973 -1899 6482 0
-1973 1899 6496 0
-1974 -1899 6482 0
-1974 1899 6498 0
-1975 -1899 6482 0
-1975 1899 -6497 0
c ((variant_fields_00001_00006_00007 * SATLiteral(-1901))=tv=aux23)
-1982 -1901 6499 0
-1982 1901 6501 0
-1983 -1901 6499 0
-1983 1901 6503 0
-1984 -1901 6499 0
-1984 1901 6505 0
-1985 -1901 6499 0
-1985 1901 6507 0
-1986 -1901 6499 0
-1986 1901 6509 0
-1987 -1901 6499 0
-1987 1901 6511 0
-1988 -1901 6499 0
-1988 1901 6513 0
-1989 -1901 6499 0
-1989 1901 6515 0
-1990 -1901 6499 0
-1990 1901 -6514 0
c ((variant_fields_00001_00006_00008 * SATLiteral(-1903))=tv=aux24)
-1997 -1903 6516 0
-1997 1903 6518 0
-1998 -1903 6516 0
-1998 1903 6520 0
-1999 -1903 6516 0
-1999 1903 6522 0
-2000 -1903 6516 0
-2000 1903 6524 0
-2001 -1903 6516 0
-2001 1903 6526 0
-2002 -1903 6516 0
-2002 1903 6528 0
-2003 -1903 6516 0
-2003 1903 6530 0
-2004 -1903 6516 0
-2004 1903 6532 0
-2005 -1903 6516 0
-2005 1903 -6531 0
c ((variant_fields_00001_00006_00009 * SATLiteral(-1905))=tv=aux25)
-2012 -1905 6533 0
-2012 1905 6535 0
-2013 -1905 6533 0
-2013 1905 6537 0
-2014 -1905 6533 0
-2014 1905 6539 0
-2015 -1905 6533 0
-2015 1905 6541 0
-2016 -1905 6533 0
-2016 1905 6543 0
-2017 -1905 6533 0
-2017 1905 6545 0
-2018 -1905 6533 0
-2018 1905 6547 0
-2019 -1905 6533 0
-2019 1905 6549 0
-2020 -1905 6533 0
-2020 1905 -6548 0
c ((SATLiteral(18174) /\ SATLiteral(18175))=tv=SATLiteral(6550))
6550 -18174 -18175 0
18174 -6550 0
18175 -6550 0
c ((variant_fields_00001_00008_00002 * SATLiteral(-2162))=tv=aux27)
-2177 -2162 6551 0
-2177 2162 6553 0
-2178 -2162 6551 0
-2178 2162 6555 0
-2179 -2162 6551 0
-2179 2162 6557 0
-2180 -2162 6551 0
-2180 2162 6559 0
-2181 -2162 6551 0
-2181 2162 6561 0
-2182 -2162 6551 0
-2182 2162 6563 0
-2183 -2162 6551 0
-2183 2162 6565 0
-2184 -2162 6551 0
-2184 2162 6567 0
-2185 -2162 6551 0
-2185 2162 -6566 0
c ((variant_fields_00001_00008_00003 * SATLiteral(-2163))=tv=aux28)
-2192 -2163 6568 0
-2192 2163 6570 0
-2193 -2163 6568 0
-2193 2163 6572 0
-2194 -2163 6568 0
-2194 2163 6574 0
-2195 -2163 6568 0
-2195 2163 6576 0
-2196 -2163 6568 0
-2196 2163 6578 0
-2197 -2163 6568 0
-2197 2163 6580 0
-2198 -2163 6568 0
-2198 2163 6582 0
-2199 -2163 6568 0
-2199 2163 6584 0
-2200 -2163 6568 0
-2200 2163 -6583 0
c ((variant_fields_00001_00008_00004 * SATLiteral(-2165))=tv=aux29)
-2207 -2165 6585 0
-2207 2165 6587 0
-2208 -2165 6585 0
-2208 2165 6589 0
-2209 -2165 6585 0
-2209 2165 6591 0
-2210 -2165 6585 0
-2210 2165 6593 0
-2211 -2165 6585 0
-2211 2165 6595 0
-2212 -2165 6585 0
-2212 2165 6597 0
-2213 -2165 6585 0
-2213 2165 6599 0
-2214 -2165 6585 0
-2214 2165 6601 0
-2215 -2165 6585 0
-2215 2165 -6600 0
c ((variant_fields_00001_00008_00005 * SATLiteral(-2167))=tv=aux30)
-2222 -2167 6602 0
-2222 2167 6604 0
-2223 -2167 6602 0
-2223 2167 6606 0
-2224 -2167 6602 0
-2224 2167 6608 0
-2225 -2167 6602 0
-2225 2167 6610 0
-2226 -2167 6602 0
-2226 2167 6612 0
-2227 -2167 6602 0
-2227 2167 6614 0
-2228 -2167 6602 0
-2228 2167 6616 0
-2229 -2167 6602 0
-2229 2167 6618 0
-2230 -2167 6602 0
-2230 2167 -6617 0
c ((variant_fields_00001_00008_00006 * SATLiteral(-2169))=tv=aux31)
-2237 -2169 6619 0
-2237 2169 6621 0
-2238 -2169 6619 0
-2238 2169 6623 0
-2239 -2169 6619 0
-2239 2169 6625 0
-2240 -2169 6619 0
-2240 2169 6627 0
-2241 -2169 6619 0
-2241 2169 6629 0
-2242 -2169 6619 0
-2242 2169 6631 0
-2243 -2169 6619 0
-2243 2169 6633 0
-2244 -2169 6619 0
-2244 2169 6635 0
-2245 -2169 6619 0
-2245 2169 -6634 0
c ((variant_fields_00001_00008_00007 * SATLiteral(-2171))=tv=aux32)
-2252 -2171 6636 0
-2252 2171 6638 0
-2253 -2171 6636 0
-2253 2171 6640 0
-2254 -2171 6636 0
-2254 2171 6642 0
-2255 -2171 6636 0
-2255 2171 6644 0
-2256 -2171 6636 0
-2256 2171 6646 0
-2257 -2171 6636 0
-2257 2171 6648 0
-2258 -2171 6636 0
-2258 2171 6650 0
-2259 -2171 6636 0
-2259 2171 6652 0
-2260 -2171 6636 0
-2260 2171 -6651 0
c ((variant_fields_00001_00008_00008 * SATLiteral(-2173))=tv=aux33)
-2267 -2173 6653 0
-2267 2173 6655 0
-2268 -2173 6653 0
-2268 2173 6657 0
-2269 -2173 6653 0
-2269 2173 6659 0
-2270 -2173 6653 0
-2270 2173 6661 0
-2271 -2173 6653 0
-2271 2173 6663 0
-2272 -2173 6653 0
-2272 2173 6665 0
-2273 -2173 6653 0
-2273 2173 6667 0
-2274 -2173 6653 0
-2274 2173 6669 0
-2275 -2173 6653 0
-2275 2173 -6668 0
c ((variant_fields_00001_00008_00009 * SATLiteral(-2175))=tv=aux34)
-2282 -2175 6670 0
-2282 2175 6672 0
-2283 -2175 6670 0
-2283 2175 6674 0
-2284 -2175 6670 0
-2284 2175 6676 0
-2285 -2175 6670 0
-2285 2175 6678 0
-2286 -2175 6670 0
-2286 2175 6680 0
-2287 -2175 6670 0
-2287 2175 6682 0
-2288 -2175 6670 0
-2288 2175 6684 0
-2289 -2175 6670 0
-2289 2175 6686 0
-2290 -2175 6670 0
-2290 2175 -6685 0
c ((SATLiteral(18176) /\ SATLiteral(18177))=tv=SATLiteral(6687))
6687 -18176 -18177 0
18176 -6687 0
18177 -6687 0
c ((variant_fields_00002_00002_00002 * SATLiteral(-2567))=tv=aux36)
-2582 -2567 6688 0
-2582 2567 6690 0
-2583 -2567 6688 0
-2583 2567 6692 0
-2584 -2567 6688 0
-2584 2567 6694 0
-2585 -2567 6688 0
-2585 2567 6696 0
-2586 -2567 6688 0
-2586 2567 6698 0
-2587 -2567 6688 0
-2587 2567 6700 0
-2588 -2567 6688 0
-2588 2567 6702 0
-2589 -2567 6688 0
-2589 2567 6704 0
-2590 -2567 6688 0
-2590 2567 -6703 0
c ((variant_fields_00002_00002_00003 * SATLiteral(-2568))=tv=aux37)
-2597 -2568 6705 0
-2597 2568 6707 0
-2598 -2568 6705 0
-2598 2568 6709 0
-2599 -2568 6705 0
-2599 2568 6711 0
-2600 -2568 6705 0
-2600 2568 6713 0
-2601 -2568 6705 0
-2601 2568 6715 0
-2602 -2568 6705 0
-2602 2568 6717 0
-2603 -2568 6705 0
-2603 2568 6719 0
-2604 -2568 6705 0
-2604 2568 6721 0
-2605 -2568 6705 0
-2605 2568 -6720 0
c ((variant_fields_00002_00002_00004 * SATLiteral(-2570))=tv=aux38)
-2612 -2570 6722 0
-2612 2570 6724 0
-2613 -2570 6722 0
-2613 2570 6726 0
-2614 -2570 6722 0
-2614 2570 6728 0
-2615 -2570 6722 0
-2615 2570 6730 0
-2616 -2570 6722 0
-2616 2570 6732 0
-2617 -2570 6722 0
-2617 2570 6734 0
-2618 -2570 6722 0
-2618 2570 6736 0
-2619 -2570 6722 0
-2619 2570 6738 0
-2620 -2570 6722 0
-2620 2570 -6737 0
c ((variant_fields_00002_00002_00005 * SATLiteral(-2572))=tv=aux39)
-2627 -2572 6739 0
-2627 2572 6741 0
-2628 -2572 6739 0
-2628 2572 6743 0
-2629 -2572 6739 0
-2629 2572 6745 0
-2630 -2572 6739 0
-2630 2572 6747 0
-2631 -2572 6739 0
-2631 2572 6749 0
-2632 -2572 6739 0
-2632 2572 6751 0
-2633 -2572 6739 0
-2633 2572 6753 0
-2634 -2572 6739 0
-2634 2572 6755 0
-2635 -2572 6739 0
-2635 2572 -6754 0
c ((variant_fields_00002_00002_00006 * SATLiteral(-2574))=tv=aux40)
-2642 -2574 6756 0
-2642 2574 6758 0
-2643 -2574 6756 0
-2643 2574 6760 0
-2644 -2574 6756 0
-2644 2574 6762 0
-2645 -2574 6756 0
-2645 2574 6764 0
-2646 -2574 6756 0
-2646 2574 6766 0
-2647 -2574 6756 0
-2647 2574 6768 0
-2648 -2574 6756 0
-2648 2574 6770 0
-2649 -2574 6756 0
-2649 2574 6772 0
-2650 -2574 6756 0
-2650 2574 -6771 0
c ((variant_fields_00002_00002_00007 * SATLiteral(-2576))=tv=aux41)
-2657 -2576 6773 0
-2657 2576 6775 0
-2658 -2576 6773 0
-2658 2576 6777 0
-2659 -2576 6773 0
-2659 2576 6779 0
-2660 -2576 6773 0
-2660 2576 6781 0
-2661 -2576 6773 0
-2661 2576 6783 0
-2662 -2576 6773 0
-2662 2576 6785 0
-2663 -2576 6773 0
-2663 2576 6787 0
-2664 -2576 6773 0
-2664 2576 6789 0
-2665 -2576 6773 0
-2665 2576 -6788 0
c ((variant_fields_00002_00002_00008 * SATLiteral(-2578))=tv=aux42)
-2672 -2578 6790 0
-2672 2578 6792 0
-2673 -2578 6790 0
-2673 2578 6794 0
-2674 -2578 6790 0
-2674 2578 6796 0
-2675 -2578 6790 0
-2675 2578 6798 0
-2676 -2578 6790 0
-2676 2578 6800 0
-2677 -2578 6790 0
-2677 2578 6802 0
-2678 -2578 6790 0
-2678 2578 6804 0
-2679 -2578 6790 0
-2679 2578 6806 0
-2680 -2578 6790 0
-2680 2578 -6805 0
c ((variant_fields_00002_00002_00009 * SATLiteral(-2580))=tv=aux43)
-2687 -2580 6807 0
-2687 2580 6809 0
-2688 -2580 6807 0
-2688 2580 6811 0
-2689 -2580 6807 0
-2689 2580 6813 0
-2690 -2580 6807 0
-2690 2580 6815 0
-2691 -2580 6807 0
-2691 2580 6817 0
-2692 -2580 6807 0
-2692 2580 6819 0
-2693 -2580 6807 0
-2693 2580 6821 0
-2694 -2580 6807 0
-2694 2580 6823 0
-2695 -2580 6807 0
-2695 2580 -6822 0
c ((SATLiteral(18178) /\ SATLiteral(18179))=tv=SATLiteral(6824))
6824 -18178 -18179 0
18178 -6824 0
18179 -6824 0
c ((variant_fields_00002_00004_00002 * SATLiteral(-2837))=tv=aux45)
-2852 -2837 6825 0
-2852 2837 6827 0
-2853 -2837 6825 0
-2853 2837 6829 0
-2854 -2837 6825 0
-2854 2837 6831 0
-2855 -2837 6825 0
-2855 2837 6833 0
-2856 -2837 6825 0
-2856 2837 6835 0
-2857 -2837 6825 0
-2857 2837 6837 0
-2858 -2837 6825 0
-2858 2837 6839 0
-2859 -2837 6825 0
-2859 2837 6841 0
-2860 -2837 6825 0
-2860 2837 -6840 0
c ((variant_fields_00002_00004_00003 * SATLiteral(-2838))=tv=aux46)
-2867 -2838 6842 0
-2867 2838 6844 0
-2868 -2838 6842 0
-2868 2838 6846 0
-2869 -2838 6842 0
-2869 2838 6848 0
-2870 -2838 6842 0
-2870 2838 6850 0
-2871 -2838 6842 0
-2871 2838 6852 0
-2872 -2838 6842 0
-2872 2838 6854 0
-2873 -2838 6842 0
-2873 2838 6856 0
-2874 -2838 6842 0
-2874 2838 6858 0
-2875 -2838 6842 0
-2875 2838 -6857 0
c ((variant_fields_00002_00004_00004 * SATLiteral(-2840))=tv=aux47)
-2882 -2840 6859 0
-2882 2840 6861 0
-2883 -2840 6859 0
-2883 2840 6863 0
-2884 -2840 6859 0
-2884 2840 6865 0
-2885 -2840 6859 0
-2885 2840 6867 0
-2886 -2840 6859 0
-2886 2840 6869 0
-2887 -2840 6859 0
-2887 2840 6871 0
-2888 -2840 6859 0
-2888 2840 6873 0
-2889 -2840 6859 0
-2889 2840 6875 0
-2890 -2840 6859 0
-2890 2840 -6874 0
c ((variant_fields_00002_00004_00005 * SATLiteral(-2842))=tv=aux48)
-2897 -2842 6876 0
-2897 2842 6878 0
-2898 -2842 6876 0
-2898 2842 6880 0
-2899 -2842 6876 0
-2899 2842 6882 0
-2900 -2842 6876 0
-2900 2842 6884 0
-2901 -2842 6876 0
-2901 2842 6886 0
-2902 -2842 6876 0
-2902 2842 6888 0
-2903 -2842 6876 0
-2903 2842 6890 0
-2904 -2842 6876 0
-2904 2842 6892 0
-2905 -2842 6876 0
-2905 2842 -6891 0
c ((variant_fields_00002_00004_00006 * SATLiteral(-2844))=tv=aux49)
-2912 -2844 6893 0
-2912 2844 6895 0
-2913 -2844 6893 0
-2913 2844 6897 0
-2914 -2844 6893 0
-2914 2844 6899 0
-2915 -2844 6893 0
-2915 2844 6901 0
-2916 -2844 6893 0
-2916 2844 6903 0
-2917 -2844 6893 0
-2917 2844 6905 0
-2918 -2844 6893 0
-2918 2844 6907 0
-2919 -2844 6893 0
-2919 2844 6909 0
-2920 -2844 6893 0
-2920 2844 -6908 0
c ((variant_fields_00002_00004_00007 * SATLiteral(-2846))=tv=aux50)
-2927 -2846 6910 0
-2927 2846 6912 0
-2928 -2846 6910 0
-2928 2846 6914 0
-2929 -2846 6910 0
-2929 2846 6916 0
-2930 -2846 6910 0
-2930 2846 6918 0
-2931 -2846 6910 0
-2931 2846 6920 0
-2932 -2846 6910 0
-2932 2846 6922 0
-2933 -2846 6910 0
-2933 2846 6924 0
-2934 -2846 6910 0
-2934 2846 6926 0
-2935 -2846 6910 0
-2935 2846 -6925 0
c ((variant_fields_00002_00004_00008 * SATLiteral(-2848))=tv=aux51)
-2942 -2848 6927 0
-2942 2848 6929 0
-2943 -2848 6927 0
-2943 2848 6931 0
-2944 -2848 6927 0
-2944 2848 6933 0
-2945 -2848 6927 0
-2945 2848 6935 0
-2946 -2848 6927 0
-2946 2848 6937 0
-2947 -2848 6927 0
-2947 2848 6939 0
-2948 -2848 6927 0
-2948 2848 6941 0
-2949 -2848 6927 0
-2949 2848 6943 0
-2950 -2848 6927 0
-2950 2848 -6942 0
c ((variant_fields_00002_00004_00009 * SATLiteral(-2850))=tv=aux52)
-2957 -2850 6944 0
-2957 2850 6946 0
-2958 -2850 6944 0
-2958 2850 6948 0
-2959 -2850 6944 0
-2959 2850 6950 0
-2960 -2850 6944 0
-2960 2850 6952 0
-2961 -2850 6944 0
-2961 2850 6954 0
-2962 -2850 6944 0
-2962 2850 6956 0
-2963 -2850 6944 0
-2963 2850 6958 0
-2964 -2850 6944 0
-2964 2850 6960 0
-2965 -2850 6944 0
-2965 2850 -6959 0
c ((SATLiteral(18180) /\ SATLiteral(18181))=tv=SATLiteral(6961))
6961 -18180 -18181 0
18180 -6961 0
18181 -6961 0
c ((variant_fields_00002_00006_00002 * SATLiteral(-3107))=tv=aux54)
-3122 -3107 6962 0
-3122 3107 6964 0
-3123 -3107 6962 0
-3123 3107 6966 0
-3124 -3107 6962 0
-3124 3107 6968 0
-3125 -3107 6962 0
-3125 3107 6970 0
-3126 -3107 6962 0
-3126 3107 6972 0
-3127 -3107 6962 0
-3127 3107 6974 0
-3128 -3107 6962 0
-3128 3107 6976 0
-3129 -3107 6962 0
-3129 3107 6978 0
-3130 -3107 6962 0
-3130 3107 -6977 0
c ((variant_fields_00002_00006_00003 * SATLiteral(-3108))=tv=aux55)
-3137 -3108 6979 0
-3137 3108 6981 0
-3138 -3108 6979 0
-3138 3108 6983 0
-3139 -3108 6979 0
-3139 3108 6985 0
-3140 -3108 6979 0
-3140 3108 6987 0
-3141 -3108 6979 0
-3141 3108 6989 0
-3142 -3108 6979 0
-3142 3108 6991 0
-3143 -3108 6979 0
-3143 3108 6993 0
-3144 -3108 6979 0
-3144 3108 6995 0
-3145 -3108 6979 0
-3145 3108 -6994 0
c ((variant_fields_00002_00006_00004 * SATLiteral(-3110))=tv=aux56)
-3152 -3110 6996 0
-3152 3110 6998 0
-3153 -3110 6996 0
-3153 3110 7000 0
-3154 -3110 6996 0
-3154 3110 7002 0
-3155 -3110 6996 0
-3155 3110 7004 0
-3156 -3110 6996 0
-3156 3110 7006 0
-3157 -3110 6996 0
-3157 3110 7008 0
-3158 -3110 6996 0
-3158 3110 7010 0
-3159 -3110 6996 0
-3159 3110 7012 0
-3160 -3110 6996 0
-3160 3110 -7011 0
c ((variant_fields_00002_00006_00005 * SATLiteral(-3112))=tv=aux57)
-3167 -3112 7013 0
-3167 3112 7015 0
-3168 -3112 7013 0
-3168 3112 7017 0
-3169 -3112 7013 0
-3169 3112 7019 0
-3170 -3112 7013 0
-3170 3112 7021 0
-3171 -3112 7013 0
-3171 3112 7023 0
-3172 -3112 7013 0
-3172 3112 7025 0
-3173 -3112 7013 0
-3173 3112 7027 0
-3174 -3112 7013 0
-3174 3112 7029 0
-3175 -3112 7013 0
-3175 3112 -7028 0
c ((variant_fields_00002_00006_00006 * SATLiteral(-3114))=tv=aux58)
-3182 -3114 7030 0
-3182 3114 7032 0
-3183 -3114 7030 0
-3183 3114 7034 0
-3184 -3114 7030 0
-3184 3114 7036 0
-3185 -3114 7030 0
-3185 3114 7038 0
-3186 -3114 7030 0
-3186 3114 7040 0
-3187 -3114 7030 0
-3187 3114 7042 0
-3188 -3114 7030 0
-3188 3114 7044 0
-3189 -3114 7030 0
-3189 3114 7046 0
-3190 -3114 7030 0
-3190 3114 -7045 0
c ((variant_fields_00002_00006_00007 * SATLiteral(-3116))=tv=aux59)
-3197 -3116 7047 0
-3197 3116 7049 0
-3198 -3116 7047 0
-3198 3116 7051 0
-3199 -3116 7047 0
-3199 3116 7053 0
-3200 -3116 7047 0
-3200 3116 7055 0
-3201 -3116 7047 0
-3201 3116 7057 0
-3202 -3116 7047 0
-3202 3116 7059 0
-3203 -3116 7047 0
-3203 3116 7061 0
-3204 -3116 7047 0
-3204 3116 7063 0
-3205 -3116 7047 0
-3205 3116 -7062 0
c ((variant_fields_00002_00006_00008 * SATLiteral(-3118))=tv=aux60)
-3212 -3118 7064 0
-3212 3118 7066 0
-3213 -3118 7064 0
-3213 3118 7068 0
-3214 -3118 7064 0
-3214 3118 7070 0
-3215 -3118 7064 0
-3215 3118 7072 0
-3216 -3118 7064 0
-3216 3118 7074 0
-3217 -3118 7064 0
-3217 3118 7076 0
-3218 -3118 7064 0
-3218 3118 7078 0
-3219 -3118 7064 0
-3219 3118 7080 0
-3220 -3118 7064 0
-3220 3118 -7079 0
c ((variant_fields_00002_00006_00009 * SATLiteral(-3120))=tv=aux61)
-3227 -3120 7081 0
-3227 3120 7083 0
-3228 -3120 7081 0
-3228 3120 7085 0
-3229 -3120 7081 0
-3229 3120 7087 0
-3230 -3120 7081 0
-3230 3120 7089 0
-3231 -3120 7081 0
-3231 3120 7091 0
-3232 -3120 7081 0
-3232 3120 7093 0
-3233 -3120 7081 0
-3233 3120 7095 0
-3234 -3120 7081 0
-3234 3120 7097 0
-3235 -3120 7081 0
-3235 3120 -7096 0
c ((SATLiteral(18182) /\ SATLiteral(18183))=tv=SATLiteral(7098))
7098 -18182 -18183 0
18182 -7098 0
18183 -7098 0
c ((variant_fields_00002_00007_00002 * SATLiteral(-3242))=tv=aux63)
-3257 -3242 7099 0
-3257 3242 7101 0
-3258 -3242 7099 0
-3258 3242 7103 0
-3259 -3242 7099 0
-3259 3242 7105 0
-3260 -3242 7099 0
-3260 3242 7107 0
-3261 -3242 7099 0
-3261 3242 7109 0
-3262 -3242 7099 0
-3262 3242 7111 0
-3263 -3242 7099 0
-3263 3242 7113 0
-3264 -3242 7099 0
-3264 3242 7115 0
-3265 -3242 7099 0
-3265 3242 -7114 0
c ((variant_fields_00002_00007_00003 * SATLiteral(-3243))=tv=aux64)
-3272 -3243 7116 0
-3272 3243 7118 0
-3273 -3243 7116 0
-3273 3243 7120 0
-3274 -3243 7116 0
-3274 3243 7122 0
-3275 -3243 7116 0
-3275 3243 7124 0
-3276 -3243 7116 0
-3276 3243 7126 0
-3277 -3243 7116 0
-3277 3243 7128 0
-3278 -3243 7116 0
-3278 3243 7130 0
-3279 -3243 7116 0
-3279 3243 7132 0
-3280 -3243 7116 0
-3280 3243 -7131 0
c ((variant_fields_00002_00007_00004 * SATLiteral(-3245))=tv=aux65)
-3287 -3245 7133 0
-3287 3245 7135 0
-3288 -3245 7133 0
-3288 3245 7137 0
-3289 -3245 7133 0
-3289 3245 7139 0
-3290 -3245 7133 0
-3290 3245 7141 0
-3291 -3245 7133 0
-3291 3245 7143 0
-3292 -3245 7133 0
-3292 3245 7145 0
-3293 -3245 7133 0
-3293 3245 7147 0
-3294 -3245 7133 0
-3294 3245 7149 0
-3295 -3245 7133 0
-3295 3245 -7148 0
c ((variant_fields_00002_00007_00005 * SATLiteral(-3247))=tv=aux66)
-3302 -3247 7150 0
-3302 3247 7152 0
-3303 -3247 7150 0
-3303 3247 7154 0
-3304 -3247 7150 0
-3304 3247 7156 0
-3305 -3247 7150 0
-3305 3247 7158 0
-3306 -3247 7150 0
-3306 3247 7160 0
-3307 -3247 7150 0
-3307 3247 7162 0
-3308 -3247 7150 0
-3308 3247 7164 0
-3309 -3247 7150 0
-3309 3247 7166 0
-3310 -3247 7150 0
-3310 3247 -7165 0
c ((variant_fields_00002_00007_00006 * SATLiteral(-3249))=tv=aux67)
-3317 -3249 7167 0
-3317 3249 7169 0
-3318 -3249 7167 0
-3318 3249 7171 0
-3319 -3249 7167 0
-3319 3249 7173 0
-3320 -3249 7167 0
-3320 3249 7175 0
-3321 -3249 7167 0
-3321 3249 7177 0
-3322 -3249 7167 0
-3322 3249 7179 0
-3323 -3249 7167 0
-3323 3249 7181 0
-3324 -3249 7167 0
-3324 3249 7183 0
-3325 -3249 7167 0
-3325 3249 -7182 0
c ((variant_fields_00002_00007_00007 * SATLiteral(-3251))=tv=aux68)
-3332 -3251 7184 0
-3332 3251 7186 0
-3333 -3251 7184 0
-3333 3251 7188 0
-3334 -3251 7184 0
-3334 3251 7190 0
-3335 -3251 7184 0
-3335 3251 7192 0
-3336 -3251 7184 0
-3336 3251 7194 0
-3337 -3251 7184 0
-3337 3251 7196 0
-3338 -3251 7184 0
-3338 3251 7198 0
-3339 -3251 7184 0
-3339 3251 7200 0
-3340 -3251 7184 0
-3340 3251 -7199 0
c ((variant_fields_00002_00007_00008 * SATLiteral(-3253))=tv=aux69)
-3347 -3253 7201 0
-3347 3253 7203 0
-3348 -3253 7201 0
-3348 3253 7205 0
-3349 -3253 7201 0
-3349 3253 7207 0
-3350 -3253 7201 0
-3350 3253 7209 0
-3351 -3253 7201 0
-3351 3253 7211 0
-3352 -3253 7201 0
-3352 3253 7213 0
-3353 -3253 7201 0
-3353 3253 7215 0
-3354 -3253 7201 0
-3354 3253 7217 0
-3355 -3253 7201 0
-3355 3253 -7216 0
c ((variant_fields_00002_00007_00009 * SATLiteral(-3255))=tv=aux70)
-3362 -3255 7218 0
-3362 3255 7220 0
-3363 -3255 7218 0
-3363 3255 7222 0
-3364 -3255 7218 0
-3364 3255 7224 0
-3365 -3255 7218 0
-3365 3255 7226 0
-3366 -3255 7218 0
-3366 3255 7228 0
-3367 -3255 7218 0
-3367 3255 7230 0
-3368 -3255 7218 0
-3368 3255 7232 0
-3369 -3255 7218 0
-3369 3255 7234 0
-3370 -3255 7218 0
-3370 3255 -7233 0
c ((SATLiteral(18184) /\ SATLiteral(18185))=tv=SATLiteral(7235))
7235 -18184 -18185 0
18184 -7235 0
18185 -7235 0
c ((variant_fields_00003_00002_00002 * SATLiteral(-3782))=tv=aux72)
-3797 -3782 7236 0
-3797 3782 7238 0
-3798 -3782 7236 0
-3798 3782 7240 0
-3799 -3782 7236 0
-3799 3782 7242 0
-3800 -3782 7236 0
-3800 3782 7244 0
-3801 -3782 7236 0
-3801 3782 7246 0
-3802 -3782 7236 0
-3802 3782 7248 0
-3803 -3782 7236 0
-3803 3782 7250 0
-3804 -3782 7236 0
-3804 3782 7252 0
-3805 -3782 7236 0
-3805 3782 -7251 0
c ((variant_fields_00003_00002_00003 * SATLiteral(-3783))=tv=aux73)
-3812 -3783 7253 0
-3812 3783 7255 0
-3813 -3783 7253 0
-3813 3783 7257 0
-3814 -3783 7253 0
-3814 3783 7259 0
-3815 -3783 7253 0
-3815 3783 7261 0
-3816 -3783 7253 0
-3816 3783 7263 0
-3817 -3783 7253 0
-3817 3783 7265 0
-3818 -3783 7253 0
-3818 3783 7267 0
-3819 -3783 7253 0
-3819 3783 7269 0
-3820 -3783 7253 0
-3820 3783 -7268 0
c ((variant_fields_00003_00002_00004 * SATLiteral(-3785))=tv=aux74)
-3827 -3785 7270 0
-3827 3785 7272 0
-3828 -3785 7270 0
-3828 3785 7274 0
-3829 -3785 7270 0
-3829 3785 7276 0
-3830 -3785 7270 0
-3830 3785 7278 0
-3831 -3785 7270 0
-3831 3785 7280 0
-3832 -3785 7270 0
-3832 3785 7282 0
-3833 -3785 7270 0
-3833 3785 7284 0
-3834 -3785 7270 0
-3834 3785 7286 0
-3835 -3785 7270 0
-3835 3785 -7285 0
c ((variant_fields_00003_00002_00005 * SATLiteral(-3787))=tv=aux75)
-3842 -3787 7287 0
-3842 3787 7289 0
-3843 -3787 7287 0
-3843 3787 7291 0
-3844 -3787 7287 0
-3844 3787 7293 0
-3845 -3787 7287 0
-3845 3787 7295 0
-3846 -3787 7287 0
-3846 3787 7297 0
-3847 -3787 7287 0
-3847 3787 7299 0
-3848 -3787 7287 0
-3848 3787 7301 0
-3849 -3787 7287 0
-3849 3787 7303 0
-3850 -3787 7287 0
-3850 3787 -7302 0
c ((variant_fields_00003_00002_00006 * SATLiteral(-3789))=tv=aux76)
-3857 -3789 7304 0
-3857 3789 7306 0
-3858 -3789 7304 0
-3858 3789 7308 0
-3859 -3789 7304 0
-3859 3789 7310 0
-3860 -3789 7304 0
-3860 3789 7312 0
-3861 -3789 7304 0
-3861 3789 7314 0
-3862 -3789 7304 0
-3862 3789 7316 0
-3863 -3789 7304 0
-3863 3789 7318 0
-3864 -3789 7304 0
-3864 3789 7320 0
-3865 -3789 7304 0
-3865 3789 -7319 0
c ((variant_fields_00003_00002_00007 * SATLiteral(-3791))=tv=aux77)
-3872 -3791 7321 0
-3872 3791 7323 0
-3873 -3791 7321 0
-3873 3791 7325 0
-3874 -3791 7321 0
-3874 3791 7327 0
-3875 -3791 7321 0
-3875 3791 7329 0
-3876 -3791 7321 0
-3876 3791 7331 0
-3877 -3791 7321 0
-3877 3791 7333 0
-3878 -3791 7321 0
-3878 3791 7335 0
-3879 -3791 7321 0
-3879 3791 7337 0
-3880 -3791 7321 0
-3880 3791 -7336 0
c ((variant_fields_00003_00002_00008 * SATLiteral(-3793))=tv=aux78)
-3887 -3793 7338 0
-3887 3793 7340 0
-3888 -3793 7338 0
-3888 3793 7342 0
-3889 -3793 7338 0
-3889 3793 7344 0
-3890 -3793 7338 0
-3890 3793 7346 0
-3891 -3793 7338 0
-3891 3793 7348 0
-3892 -3793 7338 0
-3892 3793 7350 0
-3893 -3793 7338 0
-3893 3793 7352 0
-3894 -3793 7338 0
-3894 3793 7354 0
-3895 -3793 7338 0
-3895 3793 -7353 0
c ((variant_fields_00003_00002_00009 * SATLiteral(-3795))=tv=aux79)
-3902 -3795 7355 0
-3902 3795 7357 0
-3903 -3795 7355 0
-3903 3795 7359 0
-3904 -3795 7355 0
-3904 3795 7361 0
-3905 -3795 7355 0
-3905 3795 7363 0
-3906 -3795 7355 0
-3906 3795 7365 0
-3907 -3795 7355 0
-3907 3795 7367 0
-3908 -3795 7355 0
-3908 3795 7369 0
-3909 -3795 7355 0
-3909 3795 7371 0
-3910 -3795 7355 0
-3910 3795 -7370 0
c ((SATLiteral(18186) /\ SATLiteral(18187))=tv=SATLiteral(7372))
7372 -18186 -18187 0
18186 -7372 0
18187 -7372 0
c ((variant_fields_00003_00004_00002 * SATLiteral(-4052))=tv=aux81)
-4067 -4052 7373 0
-4067 4052 7375 0
-4068 -4052 7373 0
-4068 4052 7377 0
-4069 -4052 7373 0
-4069 4052 7379 0
-4070 -4052 7373 0
-4070 4052 7381 0
-4071 -4052 7373 0
-4071 4052 7383 0
-4072 -4052 7373 0
-4072 4052 7385 0
-4073 -4052 7373 0
-4073 4052 7387 0
-4074 -4052 7373 0
-4074 4052 7389 0
-4075 -4052 7373 0
-4075 4052 -7388 0
c ((variant_fields_00003_00004_00003 * SATLiteral(-4053))=tv=aux82)
-4082 -4053 7390 0
-4082 4053 7392 0
-4083 -4053 7390 0
-4083 4053 7394 0
-4084 -4053 7390 0
-4084 4053 7396 0
-4085 -4053 7390 0
-4085 4053 7398 0
-4086 -4053 7390 0
-4086 4053 7400 0
-4087 -4053 7390 0
-4087 4053 7402 0
-4088 -4053 7390 0
-4088 4053 7404 0
-4089 -4053 7390 0
-4089 4053 7406 0
-4090 -4053 7390 0
-4090 4053 -7405 0
c ((variant_fields_00003_00004_00004 * SATLiteral(-4055))=tv=aux83)
-4097 -4055 7407 0
-4097 4055 7409 0
-4098 -4055 7407 0
-4098 4055 7411 0
-4099 -4055 7407 0
-4099 4055 7413 0
-4100 -4055 7407 0
-4100 4055 7415 0
-4101 -4055 7407 0
-4101 4055 7417 0
-4102 -4055 7407 0
-4102 4055 7419 0
-4103 -4055 7407 0
-4103 4055 7421 0
-4104 -4055 7407 0
-4104 4055 7423 0
-4105 -4055 7407 0
-4105 4055 -7422 0
c ((variant_fields_00003_00004_00005 * SATLiteral(-4057))=tv=aux84)
-4112 -4057 7424 0
-4112 4057 7426 0
-4113 -4057 7424 0
-4113 4057 7428 0
-4114 -4057 7424 0
-4114 4057 7430 0
-4115 -4057 7424 0
-4115 4057 7432 0
-4116 -4057 7424 0
-4116 4057 7434 0
-4117 -4057 7424 0
-4117 4057 7436 0
-4118 -4057 7424 0
-4118 4057 7438 0
-4119 -4057 7424 0
-4119 4057 7440 0
-4120 -4057 7424 0
-4120 4057 -7439 0
c ((variant_fields_00003_00004_00006 * SATLiteral(-4059))=tv=aux85)
-4127 -4059 7441 0
-4127 4059 7443 0
-4128 -4059 7441 0
-4128 4059 7445 0
-4129 -4059 7441 0
-4129 4059 7447 0
-4130 -4059 7441 0
-4130 4059 7449 0
-4131 -4059 7441 0
-4131 4059 7451 0
-4132 -4059 7441 0
-4132 4059 7453 0
-4133 -4059 7441 0
-4133 4059 7455 0
-4134 -4059 7441 0
-4134 4059 7457 0
-4135 -4059 7441 0
-4135 4059 -7456 0
c ((variant_fields_00003_00004_00007 * SATLiteral(-4061))=tv=aux86)
-4142 -4061 7458 0
-4142 4061 7460 0
-4143 -4061 7458 0
-4143 4061 7462 0
-4144 -4061 7458 0
-4144 4061 7464 0
-4145 -4061 7458 0
-4145 4061 7466 0
-4146 -4061 7458 0
-4146 4061 7468 0
-4147 -4061 7458 0
-4147 4061 7470 0
-4148 -4061 7458 0
-4148 4061 7472 0
-4149 -4061 7458 0
-4149 4061 7474 0
-4150 -4061 7458 0
-4150 4061 -7473 0
c ((variant_fields_00003_00004_00008 * SATLiteral(-4063))=tv=aux87)
-4157 -4063 7475 0
-4157 4063 7477 0
-4158 -4063 7475 0
-4158 4063 7479 0
-4159 -4063 7475 0
-4159 4063 7481 0
-4160 -4063 7475 0
-4160 4063 7483 0
-4161 -4063 7475 0
-4161 4063 7485 0
-4162 -4063 7475 0
-4162 4063 7487 0
-4163 -4063 7475 0
-4163 4063 7489 0
-4164 -4063 7475 0
-4164 4063 7491 0
-4165 -4063 7475 0
-4165 4063 -7490 0
c ((variant_fields_00003_00004_00009 * SATLiteral(-4065))=tv=aux88)
-4172 -4065 7492 0
-4172 4065 7494 0
-4173 -4065 7492 0
-4173 4065 7496 0
-4174 -4065 7492 0
-4174 4065 7498 0
-4175 -4065 7492 0
-4175 4065 7500 0
-4176 -4065 7492 0
-4176 4065 7502 0
-4177 -4065 7492 0
-4177 4065 7504 0
-4178 -4065 7492 0
-4178 4065 7506 0
-4179 -4065 7492 0
-4179 4065 7508 0
-4180 -4065 7492 0
-4180 4065 -7507 0
c ((SATLiteral(18188) /\ SATLiteral(18189))=tv=SATLiteral(7509))
7509 -18188 -18189 0
18188 -7509 0
18189 -7509 0
c ((variant_fields_00003_00006_00002 * SATLiteral(-4322))=tv=aux90)
-4337 -4322 7510 0
-4337 4322 7512 0
-4338 -4322 7510 0
-4338 4322 7514 0
-4339 -4322 7510 0
-4339 4322 7516 0
-4340 -4322 7510 0
-4340 4322 7518 0
-4341 -4322 7510 0
-4341 4322 7520 0
-4342 -4322 7510 0
-4342 4322 7522 0
-4343 -4322 7510 0
-4343 4322 7524 0
-4344 -4322 7510 0
-4344 4322 7526 0
-4345 -4322 7510 0
-4345 4322 -7525 0
c ((variant_fields_00003_00006_00003 * SATLiteral(-4323))=tv=aux91)
-4352 -4323 7527 0
-4352 4323 7529 0
-4353 -4323 7527 0
-4353 4323 7531 0
-4354 -4323 7527 0
-4354 4323 7533 0
-4355 -4323 7527 0
-4355 4323 7535 0
-4356 -4323 7527 0
-4356 4323 7537 0
-4357 -4323 7527 0
-4357 4323 7539 0
-4358 -4323 7527 0
-4358 4323 7541 0
-4359 -4323 7527 0
-4359 4323 7543 0
-4360 -4323 7527 0
-4360 4323 -7542 0
c ((variant_fields_00003_00006_00004 * SATLiteral(-4325))=tv=aux92)
-4367 -4325 7544 0
-4367 4325 7546 0
-4368 -4325 7544 0
-4368 4325 7548 0
-4369 -4325 7544 0
-4369 4325 7550 0
-4370 -4325 7544 0
-4370 4325 7552 0
-4371 -4325 7544 0
-4371 4325 7554 0
-4372 -4325 7544 0
-4372 4325 7556 0
-4373 -4325 7544 0
-4373 4325 7558 0
-4374 -4325 7544 0
-4374 4325 7560 0
-4375 -4325 7544 0
-4375 4325 -7559 0
c ((variant_fields_00003_00006_00005 * SATLiteral(-4327))=tv=aux93)
-4382 -4327 7561 0
-4382 4327 7563 0
-4383 -4327 7561 0
-4383 4327 7565 0
-4384 -4327 7561 0
-4384 4327 7567 0
-4385 -4327 7561 0
-4385 4327 7569 0
-4386 -4327 7561 0
-4386 4327 7571 0
-4387 -4327 7561 0
-4387 4327 7573 0
-4388 -4327 7561 0
-4388 4327 7575 0
-4389 -4327 7561 0
-4389 4327 7577 0
-4390 -4327 7561 0
-4390 4327 -7576 0
c ((variant_fields_00003_00006_00006 * SATLiteral(-4329))=tv=aux94)
-4397 -4329 7578 0
-4397 4329 7580 0
-4398 -4329 7578 0
-4398 4329 7582 0
-4399 -4329 7578 0
-4399 4329 7584 0
-4400 -4329 7578 0
-4400 4329 7586 0
-4401 -4329 7578 0
-4401 4329 7588 0
-4402 -4329 7578 0
-4402 4329 7590 0
-4403 -4329 7578 0
-4403 4329 7592 0
-4404 -4329 7578 0
-4404 4329 7594 0
-4405 -4329 7578 0
-4405 4329 -7593 0
c ((variant_fields_00003_00006_00007 * SATLiteral(-4331))=tv=aux95)
-4412 -4331 7595 0
-4412 4331 7597 0
-4413 -4331 7595 0
-4413 4331 7599 0
-4414 -4331 7595 0
-4414 4331 7601 0
-4415 -4331 7595 0
-4415 4331 7603 0
-4416 -4331 7595 0
-4416 4331 7605 0
-4417 -4331 7595 0
-4417 4331 7607 0
-4418 -4331 7595 0
-4418 4331 7609 0
-4419 -4331 7595 0
-4419 4331 7611 0
-4420 -4331 7595 0
-4420 4331 -7610 0
c ((variant_fields_00003_00006_00008 * SATLiteral(-4333))=tv=aux96)
-4427 -4333 7612 0
-4427 4333 7614 0
-4428 -4333 7612 0
-4428 4333 7616 0
-4429 -4333 7612 0
-4429 4333 7618 0
-4430 -4333 7612 0
-4430 4333 7620 0
-4431 -4333 7612 0
-4431 4333 7622 0
-4432 -4333 7612 0
-4432 4333 7624 0
-4433 -4333 7612 0
-4433 4333 7626 0
-4434 -4333 7612 0
-4434 4333 7628 0
-4435 -4333 7612 0
-4435 4333 -7627 0
c ((variant_fields_00003_00006_00009 * SATLiteral(-4335))=tv=aux97)
-4442 -4335 7629 0
-4442 4335 7631 0
-4443 -4335 7629 0
-4443 4335 7633 0
-4444 -4335 7629 0
-4444 4335 7635 0
-4445 -4335 7629 0
-4445 4335 7637 0
-4446 -4335 7629 0
-4446 4335 7639 0
-4447 -4335 7629 0
-4447 4335 7641 0
-4448 -4335 7629 0
-4448 4335 7643 0
-4449 -4335 7629 0
-4449 4335 7645 0
-4450 -4335 7629 0
-4450 4335 -7644 0
c ((SATLiteral(18190) /\ SATLiteral(18191))=tv=SATLiteral(7646))
7646 -18190 -18191 0
18190 -7646 0
18191 -7646 0
c ((variant_fields_00003_00008_00002 * SATLiteral(-4592))=tv=aux99)
-4607 -4592 7647 0
-4607 4592 7649 0
-4608 -4592 7647 0
-4608 4592 7651 0
-4609 -4592 7647 0
-4609 4592 7653 0
-4610 -4592 7647 0
-4610 4592 7655 0
-4611 -4592 7647 0
-4611 4592 7657 0
-4612 -4592 7647 0
-4612 4592 7659 0
-4613 -4592 7647 0
-4613 4592 7661 0
-4614 -4592 7647 0
-4614 4592 7663 0
-4615 -4592 7647 0
-4615 4592 -7662 0
c ((variant_fields_00003_00008_00003 * SATLiteral(-4593))=tv=aux100)
-4622 -4593 7664 0
-4622 4593 7666 0
-4623 -4593 7664 0
-4623 4593 7668 0
-4624 -4593 7664 0
-4624 4593 7670 0
-4625 -4593 7664 0
-4625 4593 7672 0
-4626 -4593 7664 0
-4626 4593 7674 0
-4627 -4593 7664 0
-4627 4593 7676 0
-4628 -4593 7664 0
-4628 4593 7678 0
-4629 -4593 7664 0
-4629 4593 7680 0
-4630 -4593 7664 0
-4630 4593 -7679 0
c ((variant_fields_00003_00008_00004 * SATLiteral(-4595))=tv=aux101)
-4637 -4595 7681 0
-4637 4595 7683 0
-4638 -4595 7681 0
-4638 4595 7685 0
-4639 -4595 7681 0
-4639 4595 7687 0
-4640 -4595 7681 0
-4640 4595 7689 0
-4641 -4595 7681 0
-4641 4595 7691 0
-4642 -4595 7681 0
-4642 4595 7693 0
-4643 -4595 7681 0
-4643 4595 7695 0
-4644 -4595 7681 0
-4644 4595 7697 0
-4645 -4595 7681 0
-4645 4595 -7696 0
c ((variant_fields_00003_00008_00005 * SATLiteral(-4597))=tv=aux102)
-4652 -4597 7698 0
-4652 4597 7700 0
-4653 -4597 7698 0
-4653 4597 7702 0
-4654 -4597 7698 0
-4654 4597 7704 0
-4655 -4597 7698 0
-4655 4597 7706 0
-4656 -4597 7698 0
-4656 4597 7708 0
-4657 -4597 7698 0
-4657 4597 7710 0
-4658 -4597 7698 0
-4658 4597 7712 0
-4659 -4597 7698 0
-4659 4597 7714 0
-4660 -4597 7698 0
-4660 4597 -7713 0
c ((variant_fields_00003_00008_00006 * SATLiteral(-4599))=tv=aux103)
-4667 -4599 7715 0
-4667 4599 7717 0
-4668 -4599 7715 0
-4668 4599 7719 0
-4669 -4599 7715 0
-4669 4599 7721 0
-4670 -4599 7715 0
-4670 4599 7723 0
-4671 -4599 7715 0
-4671 4599 7725 0
-4672 -4599 7715 0
-4672 4599 7727 0
-4673 -4599 7715 0
-4673 4599 7729 0
-4674 -4599 7715 0
-4674 4599 7731 0
-4675 -4599 7715 0
-4675 4599 -7730 0
c ((variant_fields_00003_00008_00007 * SATLiteral(-4601))=tv=aux104)
-4682 -4601 7732 0
-4682 4601 7734 0
-4683 -4601 7732 0
-4683 4601 7736 0
-4684 -4601 7732 0
-4684 4601 7738 0
-4685 -4601 7732 0
-4685 4601 7740 0
-4686 -4601 7732 0
-4686 4601 7742 0
-4687 -4601 7732 0
-4687 4601 7744 0
-4688 -4601 7732 0
-4688 4601 7746 0
-4689 -4601 7732 0
-4689 4601 7748 0
-4690 -4601 7732 0
-4690 4601 -7747 0
c ((variant_fields_00003_00008_00008 * SATLiteral(-4603))=tv=aux105)
-4697 -4603 7749 0
-4697 4603 7751 0
-4698 -4603 7749 0
-4698 4603 7753 0
-4699 -4603 7749 0
-4699 4603 7755 0
-4700 -4603 7749 0
-4700 4603 7757 0
-4701 -4603 7749 0
-4701 4603 7759 0
-4702 -4603 7749 0
-4702 4603 7761 0
-4703 -4603 7749 0
-4703 4603 7763 0
-4704 -4603 7749 0
-4704 4603 7765 0
-4705 -4603 7749 0
-4705 4603 -7764 0
c ((variant_fields_00003_00008_00009 * SATLiteral(-4605))=tv=aux106)
-4712 -4605 7766 0
-4712 4605 7768 0
-4713 -4605 7766 0
-4713 4605 7770 0
-4714 -4605 7766 0
-4714 4605 7772 0
-4715 -4605 7766 0
-4715 4605 7774 0
-4716 -4605 7766 0
-4716 4605 7776 0
-4717 -4605 7766 0
-4717 4605 7778 0
-4718 -4605 7766 0
-4718 4605 7780 0
-4719 -4605 7766 0
-4719 4605 7782 0
-4720 -4605 7766 0
-4720 4605 -7781 0
c ((SATLiteral(18192) /\ SATLiteral(18193))=tv=SATLiteral(7783))
7783 -18192 -18193 0
18192 -7783 0
18193 -7783 0
c ((variant_fields_00004_00002_00002 * SATLiteral(-4997))=tv=aux108)
-5012 -4997 7784 0
-5012 4997 7786 0
-5013 -4997 7784 0
-5013 4997 7788 0
-5014 -4997 7784 0
-5014 4997 7790 0
-5015 -4997 7784 0
-5015 4997 7792 0
-5016 -4997 7784 0
-5016 4997 7794 0
-5017 -4997 7784 0
-5017 4997 7796 0
-5018 -4997 7784 0
-5018 4997 7798 0
-5019 -4997 7784 0
-5019 4997 7800 0
-5020 -4997 7784 0
-5020 4997 -7799 0
c ((variant_fields_00004_00002_00003 * SATLiteral(-4998))=tv=aux109)
-5027 -4998 7801 0
-5027 4998 7803 0
-5028 -4998 7801 0
-5028 4998 7805 0
-5029 -4998 7801 0
-5029 4998 7807 0
-5030 -4998 7801 0
-5030 4998 7809 0
-5031 -4998 7801 0
-5031 4998 7811 0
-5032 -4998 7801 0
-5032 4998 7813 0
-5033 -4998 7801 0
-5033 4998 7815 0
-5034 -4998 7801 0
-5034 4998 7817 0
-5035 -4998 7801 0
-5035 4998 -7816 0
c ((variant_fields_00004_00002_00004 * SATLiteral(-5000))=tv=aux110)
-5042 -5000 7818 0
-5042 5000 7820 0
-5043 -5000 7818 0
-5043 5000 7822 0
-5044 -5000 7818 0
-5044 5000 7824 0
-5045 -5000 7818 0
-5045 5000 7826 0
-5046 -5000 7818 0
-5046 5000 7828 0
-5047 -5000 7818 0
-5047 5000 7830 0
-5048 -5000 7818 0
-5048 5000 7832 0
-5049 -5000 7818 0
-5049 5000 7834 0
-5050 -5000 7818 0
-5050 5000 -7833 0
c ((variant_fields_00004_00002_00005 * SATLiteral(-5002))=tv=aux111)
-5057 -5002 7835 0
-5057 5002 7837 0
-5058 -5002 7835 0
-5058 5002 7839 0
-5059 -5002 7835 0
-5059 5002 7841 0
-5060 -5002 7835 0
-5060 5002 7843 0
-5061 -5002 7835 0
-5061 5002 7845 0
-5062 -5002 7835 0
-5062 5002 7847 0
-5063 -5002 7835 0
-5063 5002 7849 0
-5064 -5002 7835 0
-5064 5002 7851 0
-5065 -5002 7835 0
-5065 5002 -7850 0
c ((variant_fields_00004_00002_00006 * SATLiteral(-5004))=tv=aux112)
-5072 -5004 7852 0
-5072 5004 7854 0
-5073 -5004 7852 0
-5073 5004 7856 0
-5074 -5004 7852 0
-5074 5004 7858 0
-5075 -5004 7852 0
-5075 5004 7860 0
-5076 -5004 7852 0
-5076 5004 7862 0
-5077 -5004 7852 0
-5077 5004 7864 0
-5078 -5004 7852 0
-5078 5004 7866 0
-5079 -5004 7852 0
-5079 5004 7868 0
-5080 -5004 7852 0
-5080 5004 -7867 0
c ((variant_fields_00004_00002_00007 * SATLiteral(-5006))=tv=aux113)
-5087 -5006 7869 0
-5087 5006 7871 0
-5088 -5006 7869 0
-5088 5006 7873 0
-5089 -5006 7869 0
-5089 5006 7875 0
-5090 -5006 7869 0
-5090 5006 7877 0
-5091 -5006 7869 0
-5091 5006 7879 0
-5092 -5006 7869 0
-5092 5006 7881 0
-5093 -5006 7869 0
-5093 5006 7883 0
-5094 -5006 7869 0
-5094 5006 7885 0
-5095 -5006 7869 0
-5095 5006 -7884 0
c ((variant_fields_00004_00002_00008 * SATLiteral(-5008))=tv=aux114)
-5102 -5008 7886 0
-5102 5008 7888 0
-5103 -5008 7886 0
-5103 5008 7890 0
-5104 -5008 7886 0
-5104 5008 7892 0
-5105 -5008 7886 0
-5105 5008 7894 0
-5106 -5008 7886 0
-5106 5008 7896 0
-5107 -5008 7886 0
-5107 5008 7898 0
-5108 -5008 7886 0
-5108 5008 7900 0
-5109 -5008 7886 0
-5109 5008 7902 0
-5110 -5008 7886 0
-5110 5008 -7901 0
c ((variant_fields_00004_00002_00009 * SATLiteral(-5010))=tv=aux115)
-5117 -5010 7903 0
-5117 5010 7905 0
-5118 -5010 7903 0
-5118 5010 7907 0
-5119 -5010 7903 0
-5119 5010 7909 0
-5120 -5010 7903 0
-5120 5010 7911 0
-5121 -5010 7903 0
-5121 5010 7913 0
-5122 -5010 7903 0
-5122 5010 7915 0
-5123 -5010 7903 0
-5123 5010 7917 0
-5124 -5010 7903 0
-5124 5010 7919 0
-5125 -5010 7903 0
-5125 5010 -7918 0
c ((SATLiteral(18194) /\ SATLiteral(18195))=tv=SATLiteral(7920))
7920 -18194 -18195 0
18194 -7920 0
18195 -7920 0
c ((variant_fields_00004_00004_00002 * SATLiteral(-5267))=tv=aux117)
-5282 -5267 7921 0
-5282 5267 7923 0
-5283 -5267 7921 0
-5283 5267 7925 0
-5284 -5267 7921 0
-5284 5267 7927 0
-5285 -5267 7921 0
-5285 5267 7929 0
-5286 -5267 7921 0
-5286 5267 7931 0
-5287 -5267 7921 0
-5287 5267 7933 0
-5288 -5267 7921 0
-5288 5267 7935 0
-5289 -5267 7921 0
-5289 5267 7937 0
-5290 -5267 7921 0
-5290 5267 -7936 0
c ((variant_fields_00004_00004_00003 * SATLiteral(-5268))=tv=aux118)
-5297 -5268 7938 0
-5297 5268 7940 0
-5298 -5268 7938 0
-5298 5268 7942 0
-5299 -5268 7938 0
-5299 5268 7944 0
-5300 -5268 7938 0
-5300 5268 7946 0
-5301 -5268 7938 0
-5301 5268 7948 0
-5302 -5268 7938 0
-5302 5268 7950 0
-5303 -5268 7938 0
-5303 5268 7952 0
-5304 -5268 7938 0
-5304 5268 7954 0
-5305 -5268 7938 0
-5305 5268 -7953 0
c ((variant_fields_00004_00004_00004 * SATLiteral(-5270))=tv=aux119)
-5312 -5270 7955 0
-5312 5270 7957 0
-5313 -5270 7955 0
-5313 5270 7959 0
-5314 -5270 7955 0
-5314 5270 7961 0
-5315 -5270 7955 0
-5315 5270 7963 0
-5316 -5270 7955 0
-5316 5270 7965 0
-5317 -5270 7955 0
-5317 5270 7967 0
-5318 -5270 7955 0
-5318 5270 7969 0
-5319 -5270 7955 0
-5319 5270 7971 0
-5320 -5270 7955 0
-5320 5270 -7970 0
c ((variant_fields_00004_00004_00005 * SATLiteral(-5272))=tv=aux120)
-5327 -5272 7972 0
-5327 5272 7974 0
-5328 -5272 7972 0
-5328 5272 7976 0
-5329 -5272 7972 0
-5329 5272 7978 0
-5330 -5272 7972 0
-5330 5272 7980 0
-5331 -5272 7972 0
-5331 5272 7982 0
-5332 -5272 7972 0
-5332 5272 7984 0
-5333 -5272 7972 0
-5333 5272 7986 0
-5334 -5272 7972 0
-5334 5272 7988 0
-5335 -5272 7972 0
-5335 5272 -7987 0
c ((variant_fields_00004_00004_00006 * SATLiteral(-5274))=tv=aux121)
-5342 -5274 7989 0
-5342 5274 7991 0
-5343 -5274 7989 0
-5343 5274 7993 0
-5344 -5274 7989 0
-5344 5274 7995 0
-5345 -5274 7989 0
-5345 5274 7997 0
-5346 -5274 7989 0
-5346 5274 7999 0
-5347 -5274 7989 0
-5347 5274 8001 0
-5348 -5274 7989 0
-5348 5274 8003 0
-5349 -5274 7989 0
-5349 5274 8005 0
-5350 -5274 7989 0
-5350 5274 -8004 0
c ((variant_fields_00004_00004_00007 * SATLiteral(-5276))=tv=aux122)
-5357 -5276 8006 0
-5357 5276 8008 0
-5358 -5276 8006 0
-5358 5276 8010 0
-5359 -5276 8006 0
-5359 5276 8012 0
-5360 -5276 8006 0
-5360 5276 8014 0
-5361 -5276 8006 0
-5361 5276 8016 0
-5362 -5276 8006 0
-5362 5276 8018 0
-5363 -5276 8006 0
-5363 5276 8020 0
-5364 -5276 8006 0
-5364 5276 8022 0
-5365 -5276 8006 0
-5365 5276 -8021 0
c ((variant_fields_00004_00004_00008 * SATLiteral(-5278))=tv=aux123)
-5372 -5278 8023 0
-5372 5278 8025 0
-5373 -5278 8023 0
-5373 5278 8027 0
-5374 -5278 8023 0
-5374 5278 8029 0
-5375 -5278 8023 0
-5375 5278 8031 0
-5376 -5278 8023 0
-5376 5278 8033 0
-5377 -5278 8023 0
-5377 5278 8035 0
-5378 -5278 8023 0
-5378 5278 8037 0
-5379 -5278 8023 0
-5379 5278 8039 0
-5380 -5278 8023 0
-5380 5278 -8038 0
c ((variant_fields_00004_00004_00009 * SATLiteral(-5280))=tv=aux124)
-5387 -5280 8040 0
-5387 5280 8042 0
-5388 -5280 8040 0
-5388 5280 8044 0
-5389 -5280 8040 0
-5389 5280 8046 0
-5390 -5280 8040 0
-5390 5280 8048 0
-5391 -5280 8040 0
-5391 5280 8050 0
-5392 -5280 8040 0
-5392 5280 8052 0
-5393 -5280 8040 0
-5393 5280 8054 0
-5394 -5280 8040 0
-5394 5280 8056 0
-5395 -5280 8040 0
-5395 5280 -8055 0
c ((SATLiteral(18196) /\ SATLiteral(18197))=tv=SATLiteral(8057))
8057 -18196 -18197 0
18196 -8057 0
18197 -8057 0
c ((variant_fields_00004_00007_00002 * SATLiteral(-5672))=tv=aux126)
-5687 -5672 8058 0
-5687 5672 8060 0
-5688 -5672 8058 0
-5688 5672 8062 0
-5689 -5672 8058 0
-5689 5672 8064 0
-5690 -5672 8058 0
-5690 5672 8066 0
-5691 -5672 8058 0
-5691 5672 8068 0
-5692 -5672 8058 0
-5692 5672 8070 0
-5693 -5672 8058 0
-5693 5672 8072 0
-5694 -5672 8058 0
-5694 5672 8074 0
-5695 -5672 8058 0
-5695 5672 -8073 0
c ((variant_fields_00004_00007_00003 * SATLiteral(-5673))=tv=aux127)
-5702 -5673 8075 0
-5702 5673 8077 0
-5703 -5673 8075 0
-5703 5673 8079 0
-5704 -5673 8075 0
-5704 5673 8081 0
-5705 -5673 8075 0
-5705 5673 8083 0
-5706 -5673 8075 0
-5706 5673 8085 0
-5707 -5673 8075 0
-5707 5673 8087 0
-5708 -5673 8075 0
-5708 5673 8089 0
-5709 -5673 8075 0
-5709 5673 8091 0
-5710 -5673 8075 0
-5710 5673 -8090 0
c ((variant_fields_00004_00007_00004 * SATLiteral(-5675))=tv=aux128)
-5717 -5675 8092 0
-5717 5675 8094 0
-5718 -5675 8092 0
-5718 5675 8096 0
-5719 -5675 8092 0
-5719 5675 8098 0
-5720 -5675 8092 0
-5720 5675 8100 0
-5721 -5675 8092 0
-5721 5675 8102 0
-5722 -5675 8092 0
-5722 5675 8104 0
-5723 -5675 8092 0
-5723 5675 8106 0
-5724 -5675 8092 0
-5724 5675 8108 0
-5725 -5675 8092 0
-5725 5675 -8107 0
c ((variant_fields_00004_00007_00005 * SATLiteral(-5677))=tv=aux129)
-5732 -5677 8109 0
-5732 5677 8111 0
-5733 -5677 8109 0
-5733 5677 8113 0
-5734 -5677 8109 0
-5734 5677 8115 0
-5735 -5677 8109 0
-5735 5677 8117 0
-5736 -5677 8109 0
-5736 5677 8119 0
-5737 -5677 8109 0
-5737 5677 8121 0
-5738 -5677 8109 0
-5738 5677 8123 0
-5739 -5677 8109 0
-5739 5677 8125 0
-5740 -5677 8109 0
-5740 5677 -8124 0
c ((variant_fields_00004_00007_00006 * SATLiteral(-5679))=tv=aux130)
-5747 -5679 8126 0
-5747 5679 8128 0
-5748 -5679 8126 0
-5748 5679 8130 0
-5749 -5679 8126 0
-5749 5679 8132 0
-5750 -5679 8126 0
-5750 5679 8134 0
-5751 -5679 8126 0
-5751 5679 8136 0
-5752 -5679 8126 0
-5752 5679 8138 0
-5753 -5679 8126 0
-5753 5679 8140 0
-5754 -5679 8126 0
-5754 5679 8142 0
-5755 -5679 8126 0
-5755 5679 -8141 0
c ((variant_fields_00004_00007_00007 * SATLiteral(-5681))=tv=aux131)
-5762 -5681 8143 0
-5762 5681 8145 0
-5763 -5681 8143 0
-5763 5681 8147 0
-5764 -5681 8143 0
-5764 5681 8149 0
-5765 -5681 8143 0
-5765 5681 8151 0
-5766 -5681 8143 0
-5766 5681 8153 0
-5767 -5681 8143 0
-5767 5681 8155 0
-5768 -5681 8143 0
-5768 5681 8157 0
-5769 -5681 8143 0
-5769 5681 8159 0
-5770 -5681 8143 0
-5770 5681 -8158 0
c ((variant_fields_00004_00007_00008 * SATLiteral(-5683))=tv=aux132)
-5777 -5683 8160 0
-5777 5683 8162 0
-5778 -5683 8160 0
-5778 5683 8164 0
-5779 -5683 8160 0
-5779 5683 8166 0
-5780 -5683 8160 0
-5780 5683 8168 0
-5781 -5683 8160 0
-5781 5683 8170 0
-5782 -5683 8160 0
-5782 5683 8172 0
-5783 -5683 8160 0
-5783 5683 8174 0
-5784 -5683 8160 0
-5784 5683 8176 0
-5785 -5683 8160 0
-5785 5683 -8175 0
c ((variant_fields_00004_00007_00009 * SATLiteral(-5685))=tv=aux133)
-5792 -5685 8177 0
-5792 5685 8179 0
-5793 -5685 8177 0
-5793 5685 8181 0
-5794 -5685 8177 0
-5794 5685 8183 0
-5795 -5685 8177 0
-5795 5685 8185 0
-5796 -5685 8177 0
-5796 5685 8187 0
-5797 -5685 8177 0
-5797 5685 8189 0
-5798 -5685 8177 0
-5798 5685 8191 0
-5799 -5685 8177 0
-5799 5685 8193 0
-5800 -5685 8177 0
-5800 5685 -8192 0
c ((SATLiteral(18198) /\ SATLiteral(18199))=tv=SATLiteral(8194))
8194 -18198 -18199 0
18198 -8194 0
18199 -8194 0
c ((SATLiteral(18200) /\ SATLiteral(18201))=tv=SATLiteral(8195))
8195 -18200 -18201 0
18200 -8195 0
18201 -8195 0
c ((SATLiteral(18202) /\ SATLiteral(18203))=tv=SATLiteral(8196))
8196 -18202 -18203 0
18202 -8196 0
18203 -8196 0
c ((SATLiteral(18204) /\ SATLiteral(18205))=tv=SATLiteral(8197))
8197 -18204 -18205 0
18204 -8197 0
18205 -8197 0
c ((SATLiteral(18206) /\ SATLiteral(18207))=tv=SATLiteral(8198))
8198 -18206 -18207 0
18206 -8198 0
18207 -8198 0
c ((SATLiteral(18208) /\ SATLiteral(18209))=tv=SATLiteral(8199))
8199 -18208 -18209 0
18208 -8199 0
18209 -8199 0
c ((SATLiteral(18210) /\ SATLiteral(18211))=tv=SATLiteral(8200))
8200 -18210 -18211 0
18210 -8200 0
18211 -8200 0
c ((SATLiteral(18212) /\ SATLiteral(18213))=tv=SATLiteral(8201))
8201 -18212 -18213 0
18212 -8201 0
18213 -8201 0
c ((SATLiteral(18214) /\ SATLiteral(18215))=tv=SATLiteral(8202))
8202 -18214 -18215 0
18214 -8202 0
18215 -8202 0
c ((SATLiteral(18216) /\ SATLiteral(18217))=tv=SATLiteral(8203))
8203 -18216 -18217 0
18216 -8203 0
18217 -8203 0
c ((SATLiteral(18218) /\ SATLiteral(18219))=tv=SATLiteral(8204))
8204 -18218 -18219 0
18218 -8204 0
18219 -8204 0
c ((SATLiteral(18220) /\ SATLiteral(18221))=tv=SATLiteral(8205))
8205 -18220 -18221 0
18220 -8205 0
18221 -8205 0
c ((SATLiteral(18222) /\ SATLiteral(18223))=tv=SATLiteral(8206))
8206 -18222 -18223 0
18222 -8206 0
18223 -8206 0
c ((SATLiteral(18224) /\ SATLiteral(18225))=tv=SATLiteral(8207))
8207 -18224 -18225 0
18224 -8207 0
18225 -8207 0
c ((SATLiteral(18226) /\ SATLiteral(18227))=tv=SATLiteral(8208))
8208 -18226 -18227 0
18226 -8208 0
18227 -8208 0
c ((SATLiteral(18228) /\ SATLiteral(18229))=tv=SATLiteral(8209))
8209 -18228 -18229 0
18228 -8209 0
18229 -8209 0
c ((SATLiteral(18230) /\ SATLiteral(18231))=tv=SATLiteral(8210))
8210 -18230 -18231 0
18230 -8210 0
18231 -8210 0
c ((SATLiteral(18232) /\ SATLiteral(18233))=tv=SATLiteral(8211))
8211 -18232 -18233 0
18232 -8211 0
18233 -8211 0
c ((SATLiteral(18234) /\ SATLiteral(18235))=tv=SATLiteral(8212))
8212 -18234 -18235 0
18234 -8212 0
18235 -8212 0
c ((SATLiteral(18236) /\ SATLiteral(18237))=tv=SATLiteral(8213))
8213 -18236 -18237 0
18236 -8213 0
18237 -8213 0
c ((SATLiteral(18238) /\ SATLiteral(18239))=tv=SATLiteral(8214))
8214 -18238 -18239 0
18238 -8214 0
18239 -8214 0
c ((SATLiteral(18240) /\ SATLiteral(18241))=tv=SATLiteral(8215))
8215 -18240 -18241 0
18240 -8215 0
18241 -8215 0
c ((SATLiteral(18242) /\ SATLiteral(18243))=tv=SATLiteral(8216))
8216 -18242 -18243 0
18242 -8216 0
18243 -8216 0
c ((SATLiteral(18244) /\ SATLiteral(18245))=tv=SATLiteral(8217))
8217 -18244 -18245 0
18244 -8217 0
18245 -8217 0
c ((SATLiteral(18246) /\ SATLiteral(18247))=tv=SATLiteral(8218))
8218 -18246 -18247 0
18246 -8218 0
18247 -8218 0
c ((SATLiteral(18248) /\ SATLiteral(18249))=tv=SATLiteral(8219))
8219 -18248 -18249 0
18248 -8219 0
18249 -8219 0
c ((SATLiteral(18250) /\ SATLiteral(18251))=tv=SATLiteral(8220))
8220 -18250 -18251 0
18250 -8220 0
18251 -8220 0
c ((SATLiteral(18252) /\ SATLiteral(18253))=tv=SATLiteral(8221))
8221 -18252 -18253 0
18252 -8221 0
18253 -8221 0
c ((SATLiteral(18254) /\ SATLiteral(18255))=tv=SATLiteral(8222))
8222 -18254 -18255 0
18254 -8222 0
18255 -8222 0
c ((SATLiteral(18256) /\ SATLiteral(18257))=tv=SATLiteral(8223))
8223 -18256 -18257 0
18256 -8223 0
18257 -8223 0
c ((SATLiteral(18258) /\ SATLiteral(18259))=tv=SATLiteral(8224))
8224 -18258 -18259 0
18258 -8224 0
18259 -8224 0
c ((SATLiteral(18260) /\ SATLiteral(18261))=tv=SATLiteral(8225))
8225 -18260 -18261 0
18260 -8225 0
18261 -8225 0
c ((SATLiteral(18262) /\ SATLiteral(18263))=tv=SATLiteral(8226))
8226 -18262 -18263 0
18262 -8226 0
18263 -8226 0
c ((SATLiteral(18264) /\ SATLiteral(18265))=tv=SATLiteral(8227))
8227 -18264 -18265 0
18264 -8227 0
18265 -8227 0
c ((SATLiteral(18266) /\ SATLiteral(18267))=tv=SATLiteral(8228))
8228 -18266 -18267 0
18266 -8228 0
18267 -8228 0
c ((SATLiteral(18268) /\ SATLiteral(18269))=tv=SATLiteral(8229))
8229 -18268 -18269 0
18268 -8229 0
18269 -8229 0
c ((SATLiteral(18270) /\ SATLiteral(18271))=tv=SATLiteral(8230))
8230 -18270 -18271 0
18270 -8230 0
18271 -8230 0
c ((SATLiteral(18272) /\ SATLiteral(18273))=tv=SATLiteral(8231))
8231 -18272 -18273 0
18272 -8231 0
18273 -8231 0
c ((SATLiteral(18274) /\ SATLiteral(18275))=tv=SATLiteral(8232))
8232 -18274 -18275 0
18274 -8232 0
18275 -8232 0
c ((SATLiteral(18276) /\ SATLiteral(18277))=tv=SATLiteral(8233))
8233 -18276 -18277 0
18276 -8233 0
18277 -8233 0
c ((SATLiteral(18278) /\ SATLiteral(18279))=tv=SATLiteral(8234))
8234 -18278 -18279 0
18278 -8234 0
18279 -8234 0
c ((SATLiteral(18280) /\ SATLiteral(18281))=tv=SATLiteral(8235))
8235 -18280 -18281 0
18280 -8235 0
18281 -8235 0
c ((SATLiteral(18282) /\ SATLiteral(18283))=tv=SATLiteral(8236))
8236 -18282 -18283 0
18282 -8236 0
18283 -8236 0
c ((SATLiteral(18284) /\ SATLiteral(18285))=tv=SATLiteral(8237))
8237 -18284 -18285 0
18284 -8237 0
18285 -8237 0
c ((SATLiteral(18286) /\ SATLiteral(18287))=tv=SATLiteral(8238))
8238 -18286 -18287 0
18286 -8238 0
18287 -8238 0
c ((SATLiteral(18288) /\ SATLiteral(18289))=tv=SATLiteral(8239))
8239 -18288 -18289 0
18288 -8239 0
18289 -8239 0
c ((SATLiteral(18290) /\ SATLiteral(18291))=tv=SATLiteral(8240))
8240 -18290 -18291 0
18290 -8240 0
18291 -8240 0
c ((SATLiteral(18292) /\ SATLiteral(18293))=tv=SATLiteral(8241))
8241 -18292 -18293 0
18292 -8241 0
18293 -8241 0
c ((SATLiteral(18294) /\ SATLiteral(18295))=tv=SATLiteral(8242))
8242 -18294 -18295 0
18294 -8242 0
18295 -8242 0
c ((SATLiteral(18296) /\ SATLiteral(18297))=tv=SATLiteral(8243))
8243 -18296 -18297 0
18296 -8243 0
18297 -8243 0
c ((SATLiteral(18298) /\ SATLiteral(18299))=tv=SATLiteral(8244))
8244 -18298 -18299 0
18298 -8244 0
18299 -8244 0
c ((SATLiteral(18300) /\ SATLiteral(18301))=tv=SATLiteral(8245))
8245 -18300 -18301 0
18300 -8245 0
18301 -8245 0
c ((SATLiteral(18302) /\ SATLiteral(18303))=tv=SATLiteral(8246))
8246 -18302 -18303 0
18302 -8246 0
18303 -8246 0
c ((SATLiteral(18304) /\ SATLiteral(18305))=tv=SATLiteral(8247))
8247 -18304 -18305 0
18304 -8247 0
18305 -8247 0
c ((SATLiteral(18306) /\ SATLiteral(18307))=tv=SATLiteral(8248))
8248 -18306 -18307 0
18306 -8248 0
18307 -8248 0
c ((SATLiteral(18308) /\ SATLiteral(18309))=tv=SATLiteral(8249))
8249 -18308 -18309 0
18308 -8249 0
18309 -8249 0
c ((SATLiteral(18310) /\ SATLiteral(18311))=tv=SATLiteral(8250))
8250 -18310 -18311 0
18310 -8250 0
18311 -8250 0
c ((SATLiteral(18312) /\ SATLiteral(18313))=tv=SATLiteral(8251))
8251 -18312 -18313 0
18312 -8251 0
18313 -8251 0
c ((SATLiteral(18314) /\ SATLiteral(18315))=tv=SATLiteral(8252))
8252 -18314 -18315 0
18314 -8252 0
18315 -8252 0
c ((SATLiteral(18316) /\ SATLiteral(18317))=tv=SATLiteral(8253))
8253 -18316 -18317 0
18316 -8253 0
18317 -8253 0
c ((SATLiteral(18318) /\ SATLiteral(18319))=tv=SATLiteral(8254))
8254 -18318 -18319 0
18318 -8254 0
18319 -8254 0
c ((SATLiteral(18320) /\ SATLiteral(18321))=tv=SATLiteral(8255))
8255 -18320 -18321 0
18320 -8255 0
18321 -8255 0
c ((SATLiteral(18322) /\ SATLiteral(18323))=tv=SATLiteral(8256))
8256 -18322 -18323 0
18322 -8256 0
18323 -8256 0
c ((SATLiteral(18324) /\ SATLiteral(18325))=tv=SATLiteral(8257))
8257 -18324 -18325 0
18324 -8257 0
18325 -8257 0
c ((SATLiteral(18326) /\ SATLiteral(18327))=tv=SATLiteral(8258))
8258 -18326 -18327 0
18326 -8258 0
18327 -8258 0
c ((SATLiteral(18328) /\ SATLiteral(18329))=tv=SATLiteral(8259))
8259 -18328 -18329 0
18328 -8259 0
18329 -8259 0
c ((SATLiteral(18330) /\ SATLiteral(18331))=tv=SATLiteral(8260))
8260 -18330 -18331 0
18330 -8260 0
18331 -8260 0
c ((SATLiteral(18332) /\ SATLiteral(18333))=tv=SATLiteral(8261))
8261 -18332 -18333 0
18332 -8261 0
18333 -8261 0
c ((SATLiteral(18334) /\ SATLiteral(18335))=tv=SATLiteral(8262))
8262 -18334 -18335 0
18334 -8262 0
18335 -8262 0
c ((SATLiteral(18336) /\ SATLiteral(18337))=tv=SATLiteral(8263))
8263 -18336 -18337 0
18336 -8263 0
18337 -8263 0
c ((SATLiteral(18338) /\ SATLiteral(18339))=tv=SATLiteral(8264))
8264 -18338 -18339 0
18338 -8264 0
18339 -8264 0
c ((SATLiteral(18340) /\ SATLiteral(18341))=tv=SATLiteral(8265))
8265 -18340 -18341 0
18340 -8265 0
18341 -8265 0
c ((SATLiteral(18342) /\ SATLiteral(18343))=tv=SATLiteral(8266))
8266 -18342 -18343 0
18342 -8266 0
18343 -8266 0
c ((SATLiteral(18344) /\ SATLiteral(18345))=tv=SATLiteral(8267))
8267 -18344 -18345 0
18344 -8267 0
18345 -8267 0
c ((SATLiteral(18346) /\ SATLiteral(18347))=tv=SATLiteral(8268))
8268 -18346 -18347 0
18346 -8268 0
18347 -8268 0
c ((SATLiteral(18348) /\ SATLiteral(18349))=tv=SATLiteral(8269))
8269 -18348 -18349 0
18348 -8269 0
18349 -8269 0
c ((SATLiteral(18350) /\ SATLiteral(18351))=tv=SATLiteral(8270))
8270 -18350 -18351 0
18350 -8270 0
18351 -8270 0
c ((SATLiteral(18352) /\ SATLiteral(18353))=tv=SATLiteral(8271))
8271 -18352 -18353 0
18352 -8271 0
18353 -8271 0
c ((SATLiteral(18354) /\ SATLiteral(18355))=tv=SATLiteral(8272))
8272 -18354 -18355 0
18354 -8272 0
18355 -8272 0
c ((SATLiteral(18356) /\ SATLiteral(18357))=tv=SATLiteral(8273))
8273 -18356 -18357 0
18356 -8273 0
18357 -8273 0
c ((SATLiteral(18358) /\ SATLiteral(18359))=tv=SATLiteral(8274))
8274 -18358 -18359 0
18358 -8274 0
18359 -8274 0
c ((SATLiteral(18360) /\ SATLiteral(18361))=tv=SATLiteral(8275))
8275 -18360 -18361 0
18360 -8275 0
18361 -8275 0
c ((SATLiteral(18362) /\ SATLiteral(18363))=tv=SATLiteral(8276))
8276 -18362 -18363 0
18362 -8276 0
18363 -8276 0
c ((SATLiteral(18364) /\ SATLiteral(18365))=tv=SATLiteral(8277))
8277 -18364 -18365 0
18364 -8277 0
18365 -8277 0
c ((SATLiteral(18366) /\ SATLiteral(18367))=tv=SATLiteral(8278))
8278 -18366 -18367 0
18366 -8278 0
18367 -8278 0
c ((SATLiteral(18368) /\ SATLiteral(18369))=tv=SATLiteral(8279))
8279 -18368 -18369 0
18368 -8279 0
18369 -8279 0
c ((SATLiteral(18370) /\ SATLiteral(18371))=tv=SATLiteral(8280))
8280 -18370 -18371 0
18370 -8280 0
18371 -8280 0
c ((SATLiteral(18372) /\ SATLiteral(18373))=tv=SATLiteral(8281))
8281 -18372 -18373 0
18372 -8281 0
18373 -8281 0
c ((SATLiteral(18374) /\ SATLiteral(18375))=tv=SATLiteral(8282))
8282 -18374 -18375 0
18374 -8282 0
18375 -8282 0
c ((SATLiteral(18376) /\ SATLiteral(18377))=tv=SATLiteral(8283))
8283 -18376 -18377 0
18376 -8283 0
18377 -8283 0
c ((SATLiteral(18378) /\ SATLiteral(18379))=tv=SATLiteral(8284))
8284 -18378 -18379 0
18378 -8284 0
18379 -8284 0
c ((SATLiteral(18380) /\ SATLiteral(18381))=tv=SATLiteral(8285))
8285 -18380 -18381 0
18380 -8285 0
18381 -8285 0
c ((SATLiteral(18382) /\ SATLiteral(18383))=tv=SATLiteral(8286))
8286 -18382 -18383 0
18382 -8286 0
18383 -8286 0
c ((SATLiteral(18384) /\ SATLiteral(18385))=tv=SATLiteral(8287))
8287 -18384 -18385 0
18384 -8287 0
18385 -8287 0
c ((SATLiteral(18386) /\ SATLiteral(18387))=tv=SATLiteral(8288))
8288 -18386 -18387 0
18386 -8288 0
18387 -8288 0
c ((SATLiteral(18388) /\ SATLiteral(18389))=tv=SATLiteral(8289))
8289 -18388 -18389 0
18388 -8289 0
18389 -8289 0
c ((SATLiteral(18390) /\ SATLiteral(18391))=tv=SATLiteral(8290))
8290 -18390 -18391 0
18390 -8290 0
18391 -8290 0
c ((SATLiteral(18392) /\ SATLiteral(18393))=tv=SATLiteral(8291))
8291 -18392 -18393 0
18392 -8291 0
18393 -8291 0
c ((SATLiteral(18394) /\ SATLiteral(18395))=tv=SATLiteral(8292))
8292 -18394 -18395 0
18394 -8292 0
18395 -8292 0
c ((SATLiteral(18396) /\ SATLiteral(18397))=tv=SATLiteral(8293))
8293 -18396 -18397 0
18396 -8293 0
18397 -8293 0
c ((SATLiteral(18398) /\ SATLiteral(18399))=tv=SATLiteral(8294))
8294 -18398 -18399 0
18398 -8294 0
18399 -8294 0
c ((SATLiteral(18400) /\ SATLiteral(18401))=tv=SATLiteral(8295))
8295 -18400 -18401 0
18400 -8295 0
18401 -8295 0
c ((SATLiteral(18402) /\ SATLiteral(18403))=tv=SATLiteral(8296))
8296 -18402 -18403 0
18402 -8296 0
18403 -8296 0
c ((SATLiteral(18404) /\ SATLiteral(18405))=tv=SATLiteral(8297))
8297 -18404 -18405 0
18404 -8297 0
18405 -8297 0
c ((SATLiteral(18406) /\ SATLiteral(18407))=tv=SATLiteral(8298))
8298 -18406 -18407 0
18406 -8298 0
18407 -8298 0
c ((SATLiteral(18408) /\ SATLiteral(18409))=tv=SATLiteral(8299))
8299 -18408 -18409 0
18408 -8299 0
18409 -8299 0
c ((SATLiteral(18410) /\ SATLiteral(18411))=tv=SATLiteral(8300))
8300 -18410 -18411 0
18410 -8300 0
18411 -8300 0
c ((SATLiteral(18412) /\ SATLiteral(18413))=tv=SATLiteral(8301))
8301 -18412 -18413 0
18412 -8301 0
18413 -8301 0
c ((SATLiteral(18414) /\ SATLiteral(18415))=tv=SATLiteral(8302))
8302 -18414 -18415 0
18414 -8302 0
18415 -8302 0
c ((SATLiteral(18416) /\ SATLiteral(18417))=tv=SATLiteral(8303))
8303 -18416 -18417 0
18416 -8303 0
18417 -8303 0
c ((SATLiteral(18418) /\ SATLiteral(18419))=tv=SATLiteral(8304))
8304 -18418 -18419 0
18418 -8304 0
18419 -8304 0
c ((SATLiteral(18420) /\ SATLiteral(18421))=tv=SATLiteral(8305))
8305 -18420 -18421 0
18420 -8305 0
18421 -8305 0
c ((SATLiteral(18422) /\ SATLiteral(18423))=tv=SATLiteral(8306))
8306 -18422 -18423 0
18422 -8306 0
18423 -8306 0
c ((SATLiteral(18424) /\ SATLiteral(18425))=tv=SATLiteral(8307))
8307 -18424 -18425 0
18424 -8307 0
18425 -8307 0
c ((SATLiteral(18426) /\ SATLiteral(18427))=tv=SATLiteral(8308))
8308 -18426 -18427 0
18426 -8308 0
18427 -8308 0
c ((SATLiteral(18428) /\ SATLiteral(18429))=tv=SATLiteral(8309))
8309 -18428 -18429 0
18428 -8309 0
18429 -8309 0
c ((SATLiteral(18430) /\ SATLiteral(18431))=tv=SATLiteral(8310))
8310 -18430 -18431 0
18430 -8310 0
18431 -8310 0
c ((SATLiteral(18432) /\ SATLiteral(18433))=tv=SATLiteral(8311))
8311 -18432 -18433 0
18432 -8311 0
18433 -8311 0
c ((SATLiteral(18434) /\ SATLiteral(18435))=tv=SATLiteral(8312))
8312 -18434 -18435 0
18434 -8312 0
18435 -8312 0
c ((SATLiteral(18436) /\ SATLiteral(18437))=tv=SATLiteral(8313))
8313 -18436 -18437 0
18436 -8313 0
18437 -8313 0
c ((SATLiteral(18438) /\ SATLiteral(18439))=tv=SATLiteral(8314))
8314 -18438 -18439 0
18438 -8314 0
18439 -8314 0
c ((SATLiteral(18440) /\ SATLiteral(18441))=tv=SATLiteral(8315))
8315 -18440 -18441 0
18440 -8315 0
18441 -8315 0
c ((SATLiteral(18442) /\ SATLiteral(18443))=tv=SATLiteral(8316))
8316 -18442 -18443 0
18442 -8316 0
18443 -8316 0
c ((SATLiteral(18444) /\ SATLiteral(18445))=tv=SATLiteral(8317))
8317 -18444 -18445 0
18444 -8317 0
18445 -8317 0
c ((SATLiteral(18446) /\ SATLiteral(18447))=tv=SATLiteral(8318))
8318 -18446 -18447 0
18446 -8318 0
18447 -8318 0
c ((SATLiteral(18448) /\ SATLiteral(18449))=tv=SATLiteral(8319))
8319 -18448 -18449 0
18448 -8319 0
18449 -8319 0
c ((SATLiteral(18450) /\ SATLiteral(18451))=tv=SATLiteral(8320))
8320 -18450 -18451 0
18450 -8320 0
18451 -8320 0
c ((SATLiteral(18452) /\ SATLiteral(18453))=tv=SATLiteral(8321))
8321 -18452 -18453 0
18452 -8321 0
18453 -8321 0
c ((SATLiteral(18454) /\ SATLiteral(18455))=tv=SATLiteral(8322))
8322 -18454 -18455 0
18454 -8322 0
18455 -8322 0
c ((SATLiteral(18456) /\ SATLiteral(18457))=tv=SATLiteral(8323))
8323 -18456 -18457 0
18456 -8323 0
18457 -8323 0
c ((SATLiteral(18458) /\ SATLiteral(18459))=tv=SATLiteral(8324))
8324 -18458 -18459 0
18458 -8324 0
18459 -8324 0
c ((SATLiteral(18460) /\ SATLiteral(18461))=tv=SATLiteral(8325))
8325 -18460 -18461 0
18460 -8325 0
18461 -8325 0
c ((SATLiteral(18462) /\ SATLiteral(18463))=tv=SATLiteral(8326))
8326 -18462 -18463 0
18462 -8326 0
18463 -8326 0
c ((SATLiteral(18464) /\ SATLiteral(18465))=tv=SATLiteral(8327))
8327 -18464 -18465 0
18464 -8327 0
18465 -8327 0
c ((SATLiteral(18466) /\ SATLiteral(18467))=tv=SATLiteral(8328))
8328 -18466 -18467 0
18466 -8328 0
18467 -8328 0
c ((SATLiteral(18468) /\ SATLiteral(18469))=tv=SATLiteral(8329))
8329 -18468 -18469 0
18468 -8329 0
18469 -8329 0
c ((SATLiteral(18470) /\ SATLiteral(18471))=tv=SATLiteral(8330))
8330 -18470 -18471 0
18470 -8330 0
18471 -8330 0
c ((SATLiteral(18472) /\ SATLiteral(18473))=tv=SATLiteral(8331))
8331 -18472 -18473 0
18472 -8331 0
18473 -8331 0
c ((SATLiteral(18474) /\ SATLiteral(18475))=tv=SATLiteral(8332))
8332 -18474 -18475 0
18474 -8332 0
18475 -8332 0
c ((SATLiteral(18476) /\ SATLiteral(18477))=tv=SATLiteral(8333))
8333 -18476 -18477 0
18476 -8333 0
18477 -8333 0
c ((SATLiteral(18478) /\ SATLiteral(18479))=tv=SATLiteral(8334))
8334 -18478 -18479 0
18478 -8334 0
18479 -8334 0
c ((SATLiteral(18480) /\ SATLiteral(18481))=tv=SATLiteral(8335))
8335 -18480 -18481 0
18480 -8335 0
18481 -8335 0
c ((SATLiteral(18482) /\ SATLiteral(18483))=tv=SATLiteral(8336))
8336 -18482 -18483 0
18482 -8336 0
18483 -8336 0
c ((SATLiteral(18484) /\ SATLiteral(18485))=tv=SATLiteral(8337))
8337 -18484 -18485 0
18484 -8337 0
18485 -8337 0
c ((SATLiteral(18486) /\ SATLiteral(18487))=tv=SATLiteral(8338))
8338 -18486 -18487 0
18486 -8338 0
18487 -8338 0
c ((SATLiteral(18488) /\ SATLiteral(18489))=tv=SATLiteral(8339))
8339 -18488 -18489 0
18488 -8339 0
18489 -8339 0
c ((SATLiteral(18490) /\ SATLiteral(18491))=tv=SATLiteral(8340))
8340 -18490 -18491 0
18490 -8340 0
18491 -8340 0
c ((SATLiteral(18492) /\ SATLiteral(18493))=tv=SATLiteral(8341))
8341 -18492 -18493 0
18492 -8341 0
18493 -8341 0
c ((SATLiteral(18494) /\ SATLiteral(18495))=tv=SATLiteral(8342))
8342 -18494 -18495 0
18494 -8342 0
18495 -8342 0
c ((SATLiteral(18496) /\ SATLiteral(18497))=tv=SATLiteral(8343))
8343 -18496 -18497 0
18496 -8343 0
18497 -8343 0
c ((SATLiteral(18498) /\ SATLiteral(18499))=tv=SATLiteral(8344))
8344 -18498 -18499 0
18498 -8344 0
18499 -8344 0
c ((SATLiteral(18500) /\ SATLiteral(18501))=tv=SATLiteral(8345))
8345 -18500 -18501 0
18500 -8345 0
18501 -8345 0
c ((SATLiteral(18502) /\ SATLiteral(18503))=tv=SATLiteral(8346))
8346 -18502 -18503 0
18502 -8346 0
18503 -8346 0
c ((SATLiteral(18504) /\ SATLiteral(18505))=tv=SATLiteral(8347))
8347 -18504 -18505 0
18504 -8347 0
18505 -8347 0
c ((SATLiteral(18506) /\ SATLiteral(18507))=tv=SATLiteral(8348))
8348 -18506 -18507 0
18506 -8348 0
18507 -8348 0
c ((SATLiteral(18508) /\ SATLiteral(18509))=tv=SATLiteral(8349))
8349 -18508 -18509 0
18508 -8349 0
18509 -8349 0
c ((SATLiteral(18510) /\ SATLiteral(18511))=tv=SATLiteral(8350))
8350 -18510 -18511 0
18510 -8350 0
18511 -8350 0
c ((SATLiteral(18512) /\ SATLiteral(18513))=tv=SATLiteral(8351))
8351 -18512 -18513 0
18512 -8351 0
18513 -8351 0
c ((SATLiteral(18514) /\ SATLiteral(18515))=tv=SATLiteral(8352))
8352 -18514 -18515 0
18514 -8352 0
18515 -8352 0
c ((SATLiteral(18516) /\ SATLiteral(18517))=tv=SATLiteral(8353))
8353 -18516 -18517 0
18516 -8353 0
18517 -8353 0
c ((SATLiteral(18518) /\ SATLiteral(18519))=tv=SATLiteral(8354))
8354 -18518 -18519 0
18518 -8354 0
18519 -8354 0
c ((SATLiteral(18520) /\ SATLiteral(18521))=tv=SATLiteral(8355))
8355 -18520 -18521 0
18520 -8355 0
18521 -8355 0
c ((SATLiteral(18522) /\ SATLiteral(18523))=tv=SATLiteral(8356))
8356 -18522 -18523 0
18522 -8356 0
18523 -8356 0
c ((SATLiteral(18524) /\ SATLiteral(18525))=tv=SATLiteral(8357))
8357 -18524 -18525 0
18524 -8357 0
18525 -8357 0
c ((SATLiteral(18526) /\ SATLiteral(18527))=tv=SATLiteral(8358))
8358 -18526 -18527 0
18526 -8358 0
18527 -8358 0
c ((SATLiteral(18528) /\ SATLiteral(18529))=tv=SATLiteral(8359))
8359 -18528 -18529 0
18528 -8359 0
18529 -8359 0
c ((SATLiteral(18530) /\ SATLiteral(18531))=tv=SATLiteral(8360))
8360 -18530 -18531 0
18530 -8360 0
18531 -8360 0
c ((SATLiteral(18532) /\ SATLiteral(18533))=tv=SATLiteral(8361))
8361 -18532 -18533 0
18532 -8361 0
18533 -8361 0
c ((SATLiteral(18534) /\ SATLiteral(18535))=tv=SATLiteral(8362))
8362 -18534 -18535 0
18534 -8362 0
18535 -8362 0
c ((SATLiteral(18536) /\ SATLiteral(18537))=tv=SATLiteral(8363))
8363 -18536 -18537 0
18536 -8363 0
18537 -8363 0
c ((SATLiteral(18538) /\ SATLiteral(18539))=tv=SATLiteral(8364))
8364 -18538 -18539 0
18538 -8364 0
18539 -8364 0
c ((SATLiteral(18540) /\ SATLiteral(18541))=tv=SATLiteral(8365))
8365 -18540 -18541 0
18540 -8365 0
18541 -8365 0
c ((SATLiteral(18542) /\ SATLiteral(18543))=tv=SATLiteral(8366))
8366 -18542 -18543 0
18542 -8366 0
18543 -8366 0
c ((SATLiteral(18544) /\ SATLiteral(18545))=tv=SATLiteral(8367))
8367 -18544 -18545 0
18544 -8367 0
18545 -8367 0
c ((SATLiteral(18546) /\ SATLiteral(18547))=tv=SATLiteral(8368))
8368 -18546 -18547 0
18546 -8368 0
18547 -8368 0
c ((SATLiteral(18548) /\ SATLiteral(18549))=tv=SATLiteral(8369))
8369 -18548 -18549 0
18548 -8369 0
18549 -8369 0
c ((SATLiteral(18550) /\ SATLiteral(18551))=tv=SATLiteral(8370))
8370 -18550 -18551 0
18550 -8370 0
18551 -8370 0
c ((SATLiteral(18552) /\ SATLiteral(18553))=tv=SATLiteral(8371))
8371 -18552 -18553 0
18552 -8371 0
18553 -8371 0
c ((SATLiteral(18554) /\ SATLiteral(18555))=tv=SATLiteral(8372))
8372 -18554 -18555 0
18554 -8372 0
18555 -8372 0
c ((SATLiteral(18556) /\ SATLiteral(18557))=tv=SATLiteral(8373))
8373 -18556 -18557 0
18556 -8373 0
18557 -8373 0
c ((SATLiteral(18558) /\ SATLiteral(18559))=tv=SATLiteral(8374))
8374 -18558 -18559 0
18558 -8374 0
18559 -8374 0
c ((SATLiteral(18560) /\ SATLiteral(18561))=tv=SATLiteral(8375))
8375 -18560 -18561 0
18560 -8375 0
18561 -8375 0
c ((SATLiteral(18562) /\ SATLiteral(18563))=tv=SATLiteral(8376))
8376 -18562 -18563 0
18562 -8376 0
18563 -8376 0
c ((SATLiteral(18564) /\ SATLiteral(18565))=tv=SATLiteral(8377))
8377 -18564 -18565 0
18564 -8377 0
18565 -8377 0
c ((SATLiteral(18566) /\ SATLiteral(18567))=tv=SATLiteral(8378))
8378 -18566 -18567 0
18566 -8378 0
18567 -8378 0
c ((SATLiteral(18568) /\ SATLiteral(18569))=tv=SATLiteral(8379))
8379 -18568 -18569 0
18568 -8379 0
18569 -8379 0
c ((SATLiteral(18570) /\ SATLiteral(18571))=tv=SATLiteral(8380))
8380 -18570 -18571 0
18570 -8380 0
18571 -8380 0
c ((SATLiteral(18572) /\ SATLiteral(18573))=tv=SATLiteral(8381))
8381 -18572 -18573 0
18572 -8381 0
18573 -8381 0
c ((SATLiteral(18574) /\ SATLiteral(18575))=tv=SATLiteral(8382))
8382 -18574 -18575 0
18574 -8382 0
18575 -8382 0
c ((SATLiteral(18576) /\ SATLiteral(18577))=tv=SATLiteral(8383))
8383 -18576 -18577 0
18576 -8383 0
18577 -8383 0
c ((SATLiteral(18578) /\ SATLiteral(18579))=tv=SATLiteral(8384))
8384 -18578 -18579 0
18578 -8384 0
18579 -8384 0
c ((SATLiteral(18580) /\ SATLiteral(18581))=tv=SATLiteral(8385))
8385 -18580 -18581 0
18580 -8385 0
18581 -8385 0
c ((SATLiteral(18582) /\ SATLiteral(18583))=tv=SATLiteral(8386))
8386 -18582 -18583 0
18582 -8386 0
18583 -8386 0
c ((SATLiteral(18584) /\ SATLiteral(18585))=tv=SATLiteral(8387))
8387 -18584 -18585 0
18584 -8387 0
18585 -8387 0
c ((SATLiteral(18586) /\ SATLiteral(18587))=tv=SATLiteral(8388))
8388 -18586 -18587 0
18586 -8388 0
18587 -8388 0
c ((SATLiteral(18588) /\ SATLiteral(18589))=tv=SATLiteral(8389))
8389 -18588 -18589 0
18588 -8389 0
18589 -8389 0
c ((SATLiteral(18590) /\ SATLiteral(18591))=tv=SATLiteral(8390))
8390 -18590 -18591 0
18590 -8390 0
18591 -8390 0
c ((SATLiteral(18592) /\ SATLiteral(18593))=tv=SATLiteral(8391))
8391 -18592 -18593 0
18592 -8391 0
18593 -8391 0
c ((SATLiteral(18594) /\ SATLiteral(18595))=tv=SATLiteral(8392))
8392 -18594 -18595 0
18594 -8392 0
18595 -8392 0
c ((SATLiteral(18596) /\ SATLiteral(18597))=tv=SATLiteral(8393))
8393 -18596 -18597 0
18596 -8393 0
18597 -8393 0
c ((SATLiteral(18598) /\ SATLiteral(18599))=tv=SATLiteral(8394))
8394 -18598 -18599 0
18598 -8394 0
18599 -8394 0
c ((SATLiteral(18600) /\ SATLiteral(18601))=tv=SATLiteral(8395))
8395 -18600 -18601 0
18600 -8395 0
18601 -8395 0
c ((SATLiteral(18602) /\ SATLiteral(18603))=tv=SATLiteral(8396))
8396 -18602 -18603 0
18602 -8396 0
18603 -8396 0
c ((SATLiteral(18604) /\ SATLiteral(18605))=tv=SATLiteral(8397))
8397 -18604 -18605 0
18604 -8397 0
18605 -8397 0
c ((SATLiteral(18606) /\ SATLiteral(18607))=tv=SATLiteral(8398))
8398 -18606 -18607 0
18606 -8398 0
18607 -8398 0
c ((SATLiteral(18608) /\ SATLiteral(18609))=tv=SATLiteral(8399))
8399 -18608 -18609 0
18608 -8399 0
18609 -8399 0
c ((SATLiteral(18610) /\ SATLiteral(18611))=tv=SATLiteral(8400))
8400 -18610 -18611 0
18610 -8400 0
18611 -8400 0
c ((SATLiteral(18612) /\ SATLiteral(18613))=tv=SATLiteral(8401))
8401 -18612 -18613 0
18612 -8401 0
18613 -8401 0
c ((SATLiteral(18614) /\ SATLiteral(18615))=tv=SATLiteral(8402))
8402 -18614 -18615 0
18614 -8402 0
18615 -8402 0
c ((SATLiteral(18616) /\ SATLiteral(18617))=tv=SATLiteral(8403))
8403 -18616 -18617 0
18616 -8403 0
18617 -8403 0
c ((SATLiteral(18618) /\ SATLiteral(18619))=tv=SATLiteral(8404))
8404 -18618 -18619 0
18618 -8404 0
18619 -8404 0
c ((SATLiteral(18620) /\ SATLiteral(18621))=tv=SATLiteral(8405))
8405 -18620 -18621 0
18620 -8405 0
18621 -8405 0
c ((SATLiteral(18622) /\ SATLiteral(18623))=tv=SATLiteral(8406))
8406 -18622 -18623 0
18622 -8406 0
18623 -8406 0
c ((SATLiteral(18624) /\ SATLiteral(18625))=tv=SATLiteral(8407))
8407 -18624 -18625 0
18624 -8407 0
18625 -8407 0
c ((SATLiteral(18626) /\ SATLiteral(18627))=tv=SATLiteral(8408))
8408 -18626 -18627 0
18626 -8408 0
18627 -8408 0
c ((SATLiteral(18628) /\ SATLiteral(18629))=tv=SATLiteral(8409))
8409 -18628 -18629 0
18628 -8409 0
18629 -8409 0
c ((SATLiteral(18630) /\ SATLiteral(18631))=tv=SATLiteral(8410))
8410 -18630 -18631 0
18630 -8410 0
18631 -8410 0
c ((SATLiteral(18632) /\ SATLiteral(18633))=tv=SATLiteral(8411))
8411 -18632 -18633 0
18632 -8411 0
18633 -8411 0
c ((SATLiteral(18634) /\ SATLiteral(18635))=tv=SATLiteral(8412))
8412 -18634 -18635 0
18634 -8412 0
18635 -8412 0
c ((SATLiteral(18636) /\ SATLiteral(18637))=tv=SATLiteral(8413))
8413 -18636 -18637 0
18636 -8413 0
18637 -8413 0
c ((SATLiteral(18638) /\ SATLiteral(18639))=tv=SATLiteral(8414))
8414 -18638 -18639 0
18638 -8414 0
18639 -8414 0
c ((SATLiteral(18640) /\ SATLiteral(18641))=tv=SATLiteral(8415))
8415 -18640 -18641 0
18640 -8415 0
18641 -8415 0
c ((SATLiteral(18642) /\ SATLiteral(18643))=tv=SATLiteral(8416))
8416 -18642 -18643 0
18642 -8416 0
18643 -8416 0
c ((SATLiteral(18644) /\ SATLiteral(18645))=tv=SATLiteral(8417))
8417 -18644 -18645 0
18644 -8417 0
18645 -8417 0
c ((SATLiteral(18646) /\ SATLiteral(18647))=tv=SATLiteral(8418))
8418 -18646 -18647 0
18646 -8418 0
18647 -8418 0
c ((SATLiteral(18648) /\ SATLiteral(18649))=tv=SATLiteral(8419))
8419 -18648 -18649 0
18648 -8419 0
18649 -8419 0
c ((SATLiteral(18650) /\ SATLiteral(18651))=tv=SATLiteral(8420))
8420 -18650 -18651 0
18650 -8420 0
18651 -8420 0
c ((SATLiteral(18652) /\ SATLiteral(18653))=tv=SATLiteral(8421))
8421 -18652 -18653 0
18652 -8421 0
18653 -8421 0
c ((SATLiteral(18654) /\ SATLiteral(18655))=tv=SATLiteral(8422))
8422 -18654 -18655 0
18654 -8422 0
18655 -8422 0
c ((SATLiteral(18656) /\ SATLiteral(18657))=tv=SATLiteral(8423))
8423 -18656 -18657 0
18656 -8423 0
18657 -8423 0
c ((SATLiteral(18658) /\ SATLiteral(18659))=tv=SATLiteral(8424))
8424 -18658 -18659 0
18658 -8424 0
18659 -8424 0
c ((SATLiteral(18660) /\ SATLiteral(18661))=tv=SATLiteral(8425))
8425 -18660 -18661 0
18660 -8425 0
18661 -8425 0
c ((SATLiteral(18662) /\ SATLiteral(18663))=tv=SATLiteral(8426))
8426 -18662 -18663 0
18662 -8426 0
18663 -8426 0
c ((SATLiteral(18664) /\ SATLiteral(18665))=tv=SATLiteral(8427))
8427 -18664 -18665 0
18664 -8427 0
18665 -8427 0
c ((SATLiteral(18666) /\ SATLiteral(18667))=tv=SATLiteral(8428))
8428 -18666 -18667 0
18666 -8428 0
18667 -8428 0
c ((SATLiteral(18668) /\ SATLiteral(18669))=tv=SATLiteral(8429))
8429 -18668 -18669 0
18668 -8429 0
18669 -8429 0
c ((SATLiteral(18670) /\ SATLiteral(18671))=tv=SATLiteral(8430))
8430 -18670 -18671 0
18670 -8430 0
18671 -8430 0
c ((SATLiteral(18672) /\ SATLiteral(18673))=tv=SATLiteral(8431))
8431 -18672 -18673 0
18672 -8431 0
18673 -8431 0
c ((SATLiteral(18674) /\ SATLiteral(18675))=tv=SATLiteral(8432))
8432 -18674 -18675 0
18674 -8432 0
18675 -8432 0
c ((SATLiteral(18676) /\ SATLiteral(18677))=tv=SATLiteral(8433))
8433 -18676 -18677 0
18676 -8433 0
18677 -8433 0
c ((SATLiteral(18678) /\ SATLiteral(18679))=tv=SATLiteral(8434))
8434 -18678 -18679 0
18678 -8434 0
18679 -8434 0
c ((SATLiteral(18680) /\ SATLiteral(18681))=tv=SATLiteral(8435))
8435 -18680 -18681 0
18680 -8435 0
18681 -8435 0
c ((SATLiteral(18682) /\ SATLiteral(18683))=tv=SATLiteral(8436))
8436 -18682 -18683 0
18682 -8436 0
18683 -8436 0
c ((SATLiteral(18684) /\ SATLiteral(18685))=tv=SATLiteral(8437))
8437 -18684 -18685 0
18684 -8437 0
18685 -8437 0
c (field_00009_00001=variant_fields_00004_00001_00001)
-1082 4862 0
-1083 4863 0
-1084 4864 0
-1085 4865 0
-1086 4866 0
-1087 4867 0
-1088 4868 0
-1089 4869 0
-1090 4870 0
-4862 1082 0
-4863 1083 0
-4864 1084 0
-4865 1085 0
-4866 1086 0
-4867 1087 0
-4868 1088 0
-4869 1089 0
-4870 1090 0
c (variant_fields_00003_00001_00001=field_00001_00009)
-3647 122 0
-3648 123 0
-3649 124 0
-3650 125 0
-3651 126 0
-3652 127 0
-3653 128 0
-3654 129 0
-3655 130 0
-122 3647 0
-123 3648 0
-124 3649 0
-125 3650 0
-126 3651 0
-127 3652 0
-128 3653 0
-129 3654 0
-130 3655 0
c (variant_fields_00001_00001_00001=field_00001_00001)
-1217 2 0
-1218 3 0
-1219 4 0
-1220 5 0
-1221 6 0
-1222 7 0
-1223 8 0
-1224 9 0
-1225 10 0
-2 1217 0
-3 1218 0
-4 1219 0
-5 1220 0
-6 1221 0
-7 1222 0
-8 1223 0
-9 1224 0
-10 1225 0
c (variant_fields_00002_00001_00001=field_00001_00001)
-2432 2 0
-2433 3 0
-2434 4 0
-2435 5 0
-2436 6 0
-2437 7 0
-2438 8 0
-2439 9 0
-2440 10 0
-2 2432 0
-3 2433 0
-4 2434 0
-5 2435 0
-6 2436 0
-7 2437 0
-8 2438 0
-9 2439 0
-10 2440 0
c (field_00008_00001=variant_fields_00004_00001_00002)
-947 4877 0
-948 4878 0
-949 4879 0
-950 4880 0
-951 4881 0
-952 4882 0
-953 4883 0
-954 4884 0
-955 4885 0
-4877 947 0
-4878 948 0
-4879 949 0
-4880 950 0
-4881 951 0
-4882 952 0
-4883 953 0
-4884 954 0
-4885 955 0
c (variant_fields_00003_00001_00002=field_00001_00008)
-3662 107 0
-3663 108 0
-3664 109 0
-3665 110 0
-3666 111 0
-3667 112 0
-3668 113 0
-3669 114 0
-3670 115 0
-107 3662 0
-108 3663 0
-109 3664 0
-110 3665 0
-111 3666 0
-112 3667 0
-113 3668 0
-114 3669 0
-115 3670 0
c (variant_fields_00001_00001_00002=field_00001_00002)
-1232 17 0
-1233 18 0
-1234 19 0
-1235 20 0
-1236 21 0
-1237 22 0
-1238 23 0
-1239 24 0
-1240 25 0
-17 1232 0
-18 1233 0
-19 1234 0
-20 1235 0
-21 1236 0
-22 1237 0
-23 1238 0
-24 1239 0
-25 1240 0
c (variant_fields_00002_00001_00002=field_00002_00001)
-2447 137 0
-2448 138 0
-2449 139 0
-2450 140 0
-2451 141 0
-2452 142 0
-2453 143 0
-2454 144 0
-2455 145 0
-137 2447 0
-138 2448 0
-139 2449 0
-140 2450 0
-141 2451 0
-142 2452 0
-143 2453 0
-144 2454 0
-145 2455 0
c (field_00007_00001=variant_fields_00004_00001_00003)
-812 4892 0
-813 4893 0
-814 4894 0
-815 4895 0
-816 4896 0
-817 4897 0
-818 4898 0
-819 4899 0
-820 4900 0
-4892 812 0
-4893 813 0
-4894 814 0
-4895 815 0
-4896 816 0
-4897 817 0
-4898 818 0
-4899 819 0
-4900 820 0
c (variant_fields_00003_00001_00003=field_00001_00007)
-3677 92 0
-3678 93 0
-3679 94 0
-3680 95 0
-3681 96 0
-3682 97 0
-3683 98 0
-3684 99 0
-3685 100 0
-92 3677 0
-93 3678 0
-94 3679 0
-95 3680 0
-96 3681 0
-97 3682 0
-98 3683 0
-99 3684 0
-100 3685 0
c (variant_fields_00001_00001_00003=field_00001_00003)
-1247 32 0
-1248 33 0
-1249 34 0
-1250 35 0
-1251 36 0
-1252 37 0
-1253 38 0
-1254 39 0
-1255 40 0
-32 1247 0
-33 1248 0
-34 1249 0
-35 1250 0
-36 1251 0
-37 1252 0
-38 1253 0
-39 1254 0
-40 1255 0
c (variant_fields_00002_00001_00003=field_00003_00001)
-2462 272 0
-2463 273 0
-2464 274 0
-2465 275 0
-2466 276 0
-2467 277 0
-2468 278 0
-2469 279 0
-2470 280 0
-272 2462 0
-273 2463 0
-274 2464 0
-275 2465 0
-276 2466 0
-277 2467 0
-278 2468 0
-279 2469 0
-280 2470 0
c (field_00006_00001=variant_fields_00004_00001_00004)
-677 4907 0
-678 4908 0
-679 4909 0
-680 4910 0
-681 4911 0
-682 4912 0
-683 4913 0
-684 4914 0
-685 4915 0
-4907 677 0
-4908 678 0
-4909 679 0
-4910 680 0
-4911 681 0
-4912 682 0
-4913 683 0
-4914 684 0
-4915 685 0
c (variant_fields_00003_00001_00004=field_00001_00006)
-3692 77 0
-3693 78 0
-3694 79 0
-3695 80 0
-3696 81 0
-3697 82 0
-3698 83 0
-3699 84 0
-3700 85 0
-77 3692 0
-78 3693 0
-79 3694 0
-80 3695 0
-81 3696 0
-82 3697 0
-83 3698 0
-84 3699 0
-85 3700 0
c (variant_fields_00001_00001_00004=field_00001_00004)
-1262 47 0
-1263 48 0
-1264 49 0
-1265 50 0
-1266 51 0
-1267 52 0
-1268 53 0
-1269 54 0
-1270 55 0
-47 1262 0
-48 1263 0
-49 1264 0
-50 1265 0
-51 1266 0
-52 1267 0
-53 1268 0
-54 1269 0
-55 1270 0
c (variant_fields_00002_00001_00004=field_00004_00001)
-2477 407 0
-2478 408 0
-2479 409 0
-2480 410 0
-2481 411 0
-2482 412 0
-2483 413 0
-2484 414 0
-2485 415 0
-407 2477 0
-408 2478 0
-409 2479 0
-410 2480 0
-411 2481 0
-412 2482 0
-413 2483 0
-414 2484 0
-415 2485 0
c (field_00005_00001=variant_fields_00004_00001_00005)
-542 4922 0
-543 4923 0
-544 4924 0
-545 4925 0
-546 4926 0
-547 4927 0
-548 4928 0
-549 4929 0
-550 4930 0
-4922 542 0
-4923 543 0
-4924 544 0
-4925 545 0
-4926 546 0
-4927 547 0
-4928 548 0
-4929 549 0
-4930 550 0
c (variant_fields_00003_00001_00005=field_00001_00005)
-3707 62 0
-3708 63 0
-3709 64 0
-3710 65 0
-3711 66 0
-3712 67 0
-3713 68 0
-3714 69 0
-3715 70 0
-62 3707 0
-63 3708 0
-64 3709 0
-65 3710 0
-66 3711 0
-67 3712 0
-68 3713 0
-69 3714 0
-70 3715 0
c (variant_fields_00001_00001_00005=field_00001_00005)
-1277 62 0
-1278 63 0
-1279 64 0
-1280 65 0
-1281 66 0
-1282 67 0
-1283 68 0
-1284 69 0
-1285 70 0
-62 1277 0
-63 1278 0
-64 1279 0
-65 1280 0
-66 1281 0
-67 1282 0
-68 1283 0
-69 1284 0
-70 1285 0
c (variant_fields_00002_00001_00005=field_00005_00001)
-2492 542 0
-2493 543 0
-2494 544 0
-2495 545 0
-2496 546 0
-2497 547 0
-2498 548 0
-2499 549 0
-2500 550 0
-542 2492 0
-543 2493 0
-544 2494 0
-545 2495 0
-546 2496 0
-547 2497 0
-548 2498 0
-549 2499 0
-550 2500 0
c (field_00004_00001=variant_fields_00004_00001_00006)
-407 4937 0
-408 4938 0
-409 4939 0
-410 4940 0
-411 4941 0
-412 4942 0
-413 4943 0
-414 4944 0
-415 4945 0
-4937 407 0
-4938 408 0
-4939 409 0
-4940 410 0
-4941 411 0
-4942 412 0
-4943 413 0
-4944 414 0
-4945 415 0
c (variant_fields_00003_00001_00006=field_00001_00004)
-3722 47 0
-3723 48 0
-3724 49 0
-3725 50 0
-3726 51 0
-3727 52 0
-3728 53 0
-3729 54 0
-3730 55 0
-47 3722 0
-48 3723 0
-49 3724 0
-50 3725 0
-51 3726 0
-52 3727 0
-53 3728 0
-54 3729 0
-55 3730 0
c (variant_fields_00001_00001_00006=field_00001_00006)
-1292 77 0
-1293 78 0
-1294 79 0
-1295 80 0
-1296 81 0
-1297 82 0
-1298 83 0
-1299 84 0
-1300 85 0
-77 1292 0
-78 1293 0
-79 1294 0
-80 1295 0
-81 1296 0
-82 1297 0
-83 1298 0
-84 1299 0
-85 1300 0
c (variant_fields_00002_00001_00006=field_00006_00001)
-2507 677 0
-2508 678 0
-2509 679 0
-2510 680 0
-2511 681 0
-2512 682 0
-2513 683 0
-2514 684 0
-2515 685 0
-677 2507 0
-678 2508 0
-679 2509 0
-680 2510 0
-681 2511 0
-682 2512 0
-683 2513 0
-684 2514 0
-685 2515 0
c (field_00003_00001=variant_fields_00004_00001_00007)
-272 4952 0
-273 4953 0
-274 4954 0
-275 4955 0
-276 4956 0
-277 4957 0
-278 4958 0
-279 4959 0
-280 4960 0
-4952 272 0
-4953 273 0
-4954 274 0
-4955 275 0
-4956 276 0
-4957 277 0
-4958 278 0
-4959 279 0
-4960 280 0
c (variant_fields_00003_00001_00007=field_00001_00003)
-3737 32 0
-3738 33 0
-3739 34 0
-3740 35 0
-3741 36 0
-3742 37 0
-3743 38 0
-3744 39 0
-3745 40 0
-32 3737 0
-33 3738 0
-34 3739 0
-35 3740 0
-36 3741 0
-37 3742 0
-38 3743 0
-39 3744 0
-40 3745 0
c (variant_fields_00001_00001_00007=field_00001_00007)
-1307 92 0
-1308 93 0
-1309 94 0
-1310 95 0
-1311 96 0
-1312 97 0
-1313 98 0
-1314 99 0
-1315 100 0
-92 1307 0
-93 1308 0
-94 1309 0
-95 1310 0
-96 1311 0
-97 1312 0
-98 1313 0
-99 1314 0
-100 1315 0
c (variant_fields_00002_00001_00007=field_00007_00001)
-2522 812 0
-2523 813 0
-2524 814 0
-2525 815 0
-2526 816 0
-2527 817 0
-2528 818 0
-2529 819 0
-2530 820 0
-812 2522 0
-813 2523 0
-814 2524 0
-815 2525 0
-816 2526 0
-817 2527 0
-818 2528 0
-819 2529 0
-820 2530 0
c (field_00002_00001=variant_fields_00004_00001_00008)
-137 4967 0
-138 4968 0
-139 4969 0
-140 4970 0
-141 4971 0
-142 4972 0
-143 4973 0
-144 4974 0
-145 4975 0
-4967 137 0
-4968 138 0
-4969 139 0
-4970 140 0
-4971 141 0
-4972 142 0
-4973 143 0
-4974 144 0
-4975 145 0
c (variant_fields_00003_00001_00008=field_00001_00002)
-3752 17 0
-3753 18 0
-3754 19 0
-3755 20 0
-3756 21 0
-3757 22 0
-3758 23 0
-3759 24 0
-3760 25 0
-17 3752 0
-18 3753 0
-19 3754 0
-20 3755 0
-21 3756 0
-22 3757 0
-23 3758 0
-24 3759 0
-25 3760 0
c (variant_fields_00001_00001_00008=field_00001_00008)
-1322 107 0
-1323 108 0
-1324 109 0
-1325 110 0
-1326 111 0
-1327 112 0
-1328 113 0
-1329 114 0
-1330 115 0
-107 1322 0
-108 1323 0
-109 1324 0
-110 1325 0
-111 1326 0
-112 1327 0
-113 1328 0
-114 1329 0
-115 1330 0
c (variant_fields_00002_00001_00008=field_00008_00001)
-2537 947 0
-2538 948 0
-2539 949 0
-2540 950 0
-2541 951 0
-2542 952 0
-2543 953 0
-2544 954 0
-2545 955 0
-947 2537 0
-948 2538 0
-949 2539 0
-950 2540 0
-951 2541 0
-952 2542 0
-953 2543 0
-954 2544 0
-955 2545 0
c (field_00001_00001=variant_fields_00004_00001_00009)
-2 4982 0
-3 4983 0
-4 4984 0
-5 4985 0
-6 4986 0
-7 4987 0
-8 4988 0
-9 4989 0
-10 4990 0
-4982 2 0
-4983 3 0
-4984 4 0
-4985 5 0
-4986 6 0
-4987 7 0
-4988 8 0
-4989 9 0
-4990 10 0
c (variant_fields_00003_00001_00009=field_00001_00001)
-3767 2 0
-3768 3 0
-3769 4 0
-3770 5 0
-3771 6 0
-3772 7 0
-3773 8 0
-3774 9 0
-3775 10 0
-2 3767 0
-3 3768 0
-4 3769 0
-5 3770 0
-6 3771 0
-7 3772 0
-8 3773 0
-9 3774 0
-10 3775 0
c (variant_fields_00001_00001_00009=field_00001_00009)
-1337 122 0
-1338 123 0
-1339 124 0
-1340 125 0
-1341 126 0
-1342 127 0
-1343 128 0
-1344 129 0
-1345 130 0
-122 1337 0
-123 1338 0
-124 1339 0
-125 1340 0
-126 1341 0
-127 1342 0
-128 1343 0
-129 1344 0
-130 1345 0
c (variant_fields_00002_00001_00009=field_00009_00001)
-2552 1082 0
-2553 1083 0
-2554 1084 0
-2555 1085 0
-2556 1086 0
-2557 1087 0
-2558 1088 0
-2559 1089 0
-2560 1090 0
-1082 2552 0
-1083 2553 0
-1084 2554 0
-1085 2555 0
-1086 2556 0
-1087 2557 0
-1088 2558 0
-1089 2559 0
-1090 2560 0
c (variant_fields_00004_00002_00001=field_00009_00002)
-4997 1097 0
-4999 1098 0
-5001 1099 0
-5003 1100 0
-5005 1101 0
-5007 1102 0
-5009 1103 0
-5011 1104 0
5010 1105 0
-1097 4997 0
-1098 4999 0
-1099 5001 0
-1100 5003 0
-1101 5005 0
-1102 5007 0
-1103 5009 0
-1104 5011 0
-1105 -5010 0
c (variant_fields_00003_00002_00001=field_00002_00009)
-3782 257 0
-3784 258 0
-3786 259 0
-3788 260 0
-3790 261 0
-3792 262 0
-3794 263 0
-3796 264 0
3795 265 0
-257 3782 0
-258 3784 0
-259 3786 0
-260 3788 0
-261 3790 0
-262 3792 0
-263 3794 0
-264 3796 0
-265 -3795 0
c (variant_fields_00001_00002_00001=field_00002_00001)
-1352 137 0
-1354 138 0
-1356 139 0
-1358 140 0
-1360 141 0
-1362 142 0
-1364 143 0
-1366 144 0
1365 145 0
-137 1352 0
-138 1354 0
-139 1356 0
-140 1358 0
-141 1360 0
-142 1362 0
-143 1364 0
-144 1366 0
-145 -1365 0
c (variant_fields_00002_00002_00001=field_00001_00002)
-2567 17 0
-2569 18 0
-2571 19 0
-2573 20 0
-2575 21 0
-2577 22 0
-2579 23 0
-2581 24 0
2580 25 0
-17 2567 0
-18 2569 0
-19 2571 0
-20 2573 0
-21 2575 0
-22 2577 0
-23 2579 0
-24 2581 0
-25 -2580 0
c (field_00008_00002=variant_fields_00004_00002_00002)
-962 5012 0
-963 5013 0
-964 5014 0
-965 5015 0
-966 5016 0
-967 5017 0
-968 5018 0
-969 5019 0
-970 5020 0
-5012 962 0
-5013 963 0
-5014 964 0
-5015 965 0
-5016 966 0
-5017 967 0
-5018 968 0
-5019 969 0
-5020 970 0
c (variant_fields_00003_00002_00002=field_00002_00008)
-3797 242 0
-3798 243 0
-3799 244 0
-3800 245 0
-3801 246 0
-3802 247 0
-3803 248 0
-3804 249 0
-3805 250 0
-242 3797 0
-243 3798 0
-244 3799 0
-245 3800 0
-246 3801 0
-247 3802 0
-248 3803 0
-249 3804 0
-250 3805 0
c (variant_fields_00001_00002_00002=field_00002_00002)
-1367 152 0
-1368 153 0
-1369 154 0
-1370 155 0
-1371 156 0
-1372 157 0
-1373 158 0
-1374 159 0
-1375 160 0
-152 1367 0
-153 1368 0
-154 1369 0
-155 1370 0
-156 1371 0
-157 1372 0
-158 1373 0
-159 1374 0
-160 1375 0
c (variant_fields_00002_00002_00002=field_00002_00002)
-2582 152 0
-2583 153 0
-2584 154 0
-2585 155 0
-2586 156 0
-2587 157 0
-2588 158 0
-2589 159 0
-2590 160 0
-152 2582 0
-153 2583 0
-154 2584 0
-155 2585 0
-156 2586 0
-157 2587 0
-158 2588 0
-159 2589 0
-160 2590 0
c (variant_fields_00004_00002_00003=field_00007_00002)
-5027 827 0
-5028 828 0
-5029 829 0
-5030 830 0
-5031 831 0
-5032 832 0
-5033 833 0
-5034 834 0
-5035 835 0
-827 5027 0
-828 5028 0
-829 5029 0
-830 5030 0
-831 5031 0
-832 5032 0
-833 5033 0
-834 5034 0
-835 5035 0
c (variant_fields_00003_00002_00003=field_00002_00007)
-3812 227 0
-3813 228 0
-3814 229 0
-3815 230 0
-3816 231 0
-3817 232 0
-3818 233 0
-3819 234 0
-3820 235 0
-227 3812 0
-228 3813 0
-229 3814 0
-230 3815 0
-231 3816 0
-232 3817 0
-233 3818 0
-234 3819 0
-235 3820 0
c (variant_fields_00001_00002_00003=field_00002_00003)
-1382 167 0
-1383 168 0
-1384 169 0
-1385 170 0
-1386 171 0
-1387 172 0
-1388 173 0
-1389 174 0
-1390 175 0
-167 1382 0
-168 1383 0
-169 1384 0
-170 1385 0
-171 1386 0
-172 1387 0
-173 1388 0
-174 1389 0
-175 1390 0
c (field_00003_00002=variant_fields_00002_00002_00003)
-287 2597 0
-288 2598 0
-289 2599 0
-290 2600 0
-291 2601 0
-292 2602 0
-293 2603 0
-294 2604 0
-295 2605 0
-2597 287 0
-2598 288 0
-2599 289 0
-2600 290 0
-2601 291 0
-2602 292 0
-2603 293 0
-2604 294 0
-2605 295 0
c (variant_fields_00004_00002_00004=field_00006_00002)
-5042 692 0
-5043 693 0
-5044 694 0
-5045 695 0
-5046 696 0
-5047 697 0
-5048 698 0
-5049 699 0
-5050 700 0
-692 5042 0
-693 5043 0
-694 5044 0
-695 5045 0
-696 5046 0
-697 5047 0
-698 5048 0
-699 5049 0
-700 5050 0
c (variant_fields_00003_00002_00004=field_00002_00006)
-3827 212 0
-3828 213 0
-3829 214 0
-3830 215 0
-3831 216 0
-3832 217 0
-3833 218 0
-3834 219 0
-3835 220 0
-212 3827 0
-213 3828 0
-214 3829 0
-215 3830 0
-216 3831 0
-217 3832 0
-218 3833 0
-219 3834 0
-220 3835 0
c (variant_fields_00001_00002_00004=field_00002_00004)
-1397 182 0
-1398 183 0
-1399 184 0
-1400 185 0
-1401 186 0
-1402 187 0
-1403 188 0
-1404 189 0
-1405 190 0
-182 1397 0
-183 1398 0
-184 1399 0
-185 1400 0
-186 1401 0
-187 1402 0
-188 1403 0
-189 1404 0
-190 1405 0
c (variant_fields_00002_00002_00004=field_00004_00002)
-2612 422 0
-2613 423 0
-2614 424 0
-2615 425 0
-2616 426 0
-2617 427 0
-2618 428 0
-2619 429 0
-2620 430 0
-422 2612 0
-423 2613 0
-424 2614 0
-425 2615 0
-426 2616 0
-427 2617 0
-428 2618 0
-429 2619 0
-430 2620 0
c (variant_fields_00004_00002_00005=field_00005_00002)
-5057 557 0
-5058 558 0
-5059 559 0
-5060 560 0
-5061 561 0
-5062 562 0
-5063 563 0
-5064 564 0
-5065 565 0
-557 5057 0
-558 5058 0
-559 5059 0
-560 5060 0
-561 5061 0
-562 5062 0
-563 5063 0
-564 5064 0
-565 5065 0
c (variant_fields_00003_00002_00005=field_00002_00005)
-3842 197 0
-3843 198 0
-3844 199 0
-3845 200 0
-3846 201 0
-3847 202 0
-3848 203 0
-3849 204 0
-3850 205 0
-197 3842 0
-198 3843 0
-199 3844 0
-200 3845 0
-201 3846 0
-202 3847 0
-203 3848 0
-204 3849 0
-205 3850 0
c (variant_fields_00001_00002_00005=field_00002_00005)
-1412 197 0
-1413 198 0
-1414 199 0
-1415 200 0
-1416 201 0
-1417 202 0
-1418 203 0
-1419 204 0
-1420 205 0
-197 1412 0
-198 1413 0
-199 1414 0
-200 1415 0
-201 1416 0
-202 1417 0
-203 1418 0
-204 1419 0
-205 1420 0
c (variant_fields_00002_00002_00005=field_00005_00002)
-2627 557 0
-2628 558 0
-2629 559 0
-2630 560 0
-2631 561 0
-2632 562 0
-2633 563 0
-2634 564 0
-2635 565 0
-557 2627 0
-558 2628 0
-559 2629 0
-560 2630 0
-561 2631 0
-562 2632 0
-563 2633 0
-564 2634 0
-565 2635 0
c (variant_fields_00004_00002_00006=field_00004_00002)
-5072 422 0
-5073 423 0
-5074 424 0
-5075 425 0
-5076 426 0
-5077 427 0
-5078 428 0
-5079 429 0
-5080 430 0
-422 5072 0
-423 5073 0
-424 5074 0
-425 5075 0
-426 5076 0
-427 5077 0
-428 5078 0
-429 5079 0
-430 5080 0
c (variant_fields_00003_00002_00006=field_00002_00004)
-3857 182 0
-3858 183 0
-3859 184 0
-3860 185 0
-3861 186 0
-3862 187 0
-3863 188 0
-3864 189 0
-3865 190 0
-182 3857 0
-183 3858 0
-184 3859 0
-185 3860 0
-186 3861 0
-187 3862 0
-188 3863 0
-189 3864 0
-190 3865 0
c (variant_fields_00001_00002_00006=field_00002_00006)
-1427 212 0
-1428 213 0
-1429 214 0
-1430 215 0
-1431 216 0
-1432 217 0
-1433 218 0
-1434 219 0
-1435 220 0
-212 1427 0
-213 1428 0
-214 1429 0
-215 1430 0
-216 1431 0
-217 1432 0
-218 1433 0
-219 1434 0
-220 1435 0
c (variant_fields_00002_00002_00006=field_00006_00002)
-2642 692 0
-2643 693 0
-2644 694 0
-2645 695 0
-2646 696 0
-2647 697 0
-2648 698 0
-2649 699 0
-2650 700 0
-692 2642 0
-693 2643 0
-694 2644 0
-695 2645 0
-696 2646 0
-697 2647 0
-698 2648 0
-699 2649 0
-700 2650 0
c (field_00003_00002=variant_fields_00004_00002_00007)
-287 5087 0
-288 5088 0
-289 5089 0
-290 5090 0
-291 5091 0
-292 5092 0
-293 5093 0
-294 5094 0
-295 5095 0
-5087 287 0
-5088 288 0
-5089 289 0
-5090 290 0
-5091 291 0
-5092 292 0
-5093 293 0
-5094 294 0
-5095 295 0
c (variant_fields_00003_00002_00007=field_00002_00003)
-3872 167 0
-3873 168 0
-3874 169 0
-3875 170 0
-3876 171 0
-3877 172 0
-3878 173 0
-3879 174 0
-3880 175 0
-167 3872 0
-168 3873 0
-169 3874 0
-170 3875 0
-171 3876 0
-172 3877 0
-173 3878 0
-174 3879 0
-175 3880 0
c (variant_fields_00001_00002_00007=field_00002_00007)
-1442 227 0
-1443 228 0
-1444 229 0
-1445 230 0
-1446 231 0
-1447 232 0
-1448 233 0
-1449 234 0
-1450 235 0
-227 1442 0
-228 1443 0
-229 1444 0
-230 1445 0
-231 1446 0
-232 1447 0
-233 1448 0
-234 1449 0
-235 1450 0
c (variant_fields_00002_00002_00007=field_00007_00002)
-2657 827 0
-2658 828 0
-2659 829 0
-2660 830 0
-2661 831 0
-2662 832 0
-2663 833 0
-2664 834 0
-2665 835 0
-827 2657 0
-828 2658 0
-829 2659 0
-830 2660 0
-831 2661 0
-832 2662 0
-833 2663 0
-834 2664 0
-835 2665 0
c (variant_fields_00004_00002_00008=field_00002_00002)
-5102 152 0
-5103 153 0
-5104 154 0
-5105 155 0
-5106 156 0
-5107 157 0
-5108 158 0
-5109 159 0
-5110 160 0
-152 5102 0
-153 5103 0
-154 5104 0
-155 5105 0
-156 5106 0
-157 5107 0
-158 5108 0
-159 5109 0
-160 5110 0
c (variant_fields_00003_00002_00008=field_00002_00002)
-3887 152 0
-3888 153 0
-3889 154 0
-3890 155 0
-3891 156 0
-3892 157 0
-3893 158 0
-3894 159 0
-3895 160 0
-152 3887 0
-153 3888 0
-154 3889 0
-155 3890 0
-156 3891 0
-157 3892 0
-158 3893 0
-159 3894 0
-160 3895 0
c (variant_fields_00001_00002_00008=field_00002_00008)
-1457 242 0
-1458 243 0
-1459 244 0
-1460 245 0
-1461 246 0
-1462 247 0
-1463 248 0
-1464 249 0
-1465 250 0
-242 1457 0
-243 1458 0
-244 1459 0
-245 1460 0
-246 1461 0
-247 1462 0
-248 1463 0
-249 1464 0
-250 1465 0
c (field_00008_00002=variant_fields_00002_00002_00008)
-962 2672 0
-963 2673 0
-964 2674 0
-965 2675 0
-966 2676 0
-967 2677 0
-968 2678 0
-969 2679 0
-970 2680 0
-2672 962 0
-2673 963 0
-2674 964 0
-2675 965 0
-2676 966 0
-2677 967 0
-2678 968 0
-2679 969 0
-2680 970 0
c (variant_fields_00004_00002_00009=field_00001_00002)
-5117 17 0
-5118 18 0
-5119 19 0
-5120 20 0
-5121 21 0
-5122 22 0
-5123 23 0
-5124 24 0
-5125 25 0
-17 5117 0
-18 5118 0
-19 5119 0
-20 5120 0
-21 5121 0
-22 5122 0
-23 5123 0
-24 5124 0
-25 5125 0
c (variant_fields_00003_00002_00009=field_00002_00001)
-3902 137 0
-3903 138 0
-3904 139 0
-3905 140 0
-3906 141 0
-3907 142 0
-3908 143 0
-3909 144 0
-3910 145 0
-137 3902 0
-138 3903 0
-139 3904 0
-140 3905 0
-141 3906 0
-142 3907 0
-143 3908 0
-144 3909 0
-145 3910 0
c (variant_fields_00001_00002_00009=field_00002_00009)
-1472 257 0
-1473 258 0
-1474 259 0
-1475 260 0
-1476 261 0
-1477 262 0
-1478 263 0
-1479 264 0
-1480 265 0
-257 1472 0
-258 1473 0
-259 1474 0
-260 1475 0
-261 1476 0
-262 1477 0
-263 1478 0
-264 1479 0
-265 1480 0
c (variant_fields_00002_00002_00009=field_00009_00002)
-2687 1097 0
-2688 1098 0
-2689 1099 0
-2690 1100 0
-2691 1101 0
-2692 1102 0
-2693 1103 0
-2694 1104 0
-2695 1105 0
-1097 2687 0
-1098 2688 0
-1099 2689 0
-1100 2690 0
-1101 2691 0
-1102 2692 0
-1103 2693 0
-1104 2694 0
-1105 2695 0
c (field_00009_00003=variant_fields_00004_00003_00001)
-1112 5132 0
-1113 5133 0
-1114 5134 0
-1115 5135 0
-1116 5136 0
-1117 5137 0
-1118 5138 0
-1119 5139 0
-1120 5140 0
-5132 1112 0
-5133 1113 0
-5134 1114 0
-5135 1115 0
-5136 1116 0
-5137 1117 0
-5138 1118 0
-5139 1119 0
-5140 1120 0
c (field_00003_00009=variant_fields_00003_00003_00001)
-392 3917 0
-393 3918 0
-394 3919 0
-395 3920 0
-396 3921 0
-397 3922 0
-398 3923 0
-399 3924 0
-400 3925 0
-3917 392 0
-3918 393 0
-3919 394 0
-3920 395 0
-3921 396 0
-3922 397 0
-3923 398 0
-3924 399 0
-3925 400 0
c (field_00003_00001=variant_fields_00001_00003_00001)
-272 1487 0
-273 1488 0
-274 1489 0
-275 1490 0
-276 1491 0
-277 1492 0
-278 1493 0
-279 1494 0
-280 1495 0
-1487 272 0
-1488 273 0
-1489 274 0
-1490 275 0
-1491 276 0
-1492 277 0
-1493 278 0
-1494 279 0
-1495 280 0
c (variant_fields_00002_00003_00001=field_00001_00003)
-2702 32 0
-2703 33 0
-2704 34 0
-2705 35 0
-2706 36 0
-2707 37 0
-2708 38 0
-2709 39 0
-2710 40 0
-32 2702 0
-33 2703 0
-34 2704 0
-35 2705 0
-36 2706 0
-37 2707 0
-38 2708 0
-39 2709 0
-40 2710 0
c (field_00008_00003=variant_fields_00004_00003_00002)
-977 5147 0
-978 5148 0
-979 5149 0
-980 5150 0
-981 5151 0
-982 5152 0
-983 5153 0
-984 5154 0
-985 5155 0
-5147 977 0
-5148 978 0
-5149 979 0
-5150 980 0
-5151 981 0
-5152 982 0
-5153 983 0
-5154 984 0
-5155 985 0
c (field_00003_00008=variant_fields_00003_00003_00002)
-377 3932 0
-378 3933 0
-379 3934 0
-380 3935 0
-381 3936 0
-382 3937 0
-383 3938 0
-384 3939 0
-385 3940 0
-3932 377 0
-3933 378 0
-3934 379 0
-3935 380 0
-3936 381 0
-3937 382 0
-3938 383 0
-3939 384 0
-3940 385 0
c (field_00003_00002=variant_fields_00001_00003_00002)
-287 1502 0
-288 1503 0
-289 1504 0
-290 1505 0
-291 1506 0
-292 1507 0
-293 1508 0
-294 1509 0
-295 1510 0
-1502 287 0
-1503 288 0
-1504 289 0
-1505 290 0
-1506 291 0
-1507 292 0
-1508 293 0
-1509 294 0
-1510 295 0
c (variant_fields_00002_00003_00002=field_00002_00003)
-2717 167 0
-2718 168 0
-2719 169 0
-2720 170 0
-2721 171 0
-2722 172 0
-2723 173 0
-2724 174 0
-2725 175 0
-167 2717 0
-168 2718 0
-169 2719 0
-170 2720 0
-171 2721 0
-172 2722 0
-173 2723 0
-174 2724 0
-175 2725 0
c (variant_fields_00004_00003_00003=field_00007_00003)
-5162 842 0
-5163 843 0
-5164 844 0
-5165 845 0
-5166 846 0
-5167 847 0
-5168 848 0
-5169 849 0
-5170 850 0
-842 5162 0
-843 5163 0
-844 5164 0
-845 5165 0
-846 5166 0
-847 5167 0
-848 5168 0
-849 5169 0
-850 5170 0
c (field_00003_00007=variant_fields_00003_00003_00003)
-362 3947 0
-363 3948 0
-364 3949 0
-365 3950 0
-366 3951 0
-367 3952 0
-368 3953 0
-369 3954 0
-370 3955 0
-3947 362 0
-3948 363 0
-3949 364 0
-3950 365 0
-3951 366 0
-3952 367 0
-3953 368 0
-3954 369 0
-3955 370 0
c (field_00003_00003=variant_fields_00001_00003_00003)
-302 1517 0
-303 1518 0
-304 1519 0
-305 1520 0
-306 1521 0
-307 1522 0
-308 1523 0
-309 1524 0
-310 1525 0
-1517 302 0
-1518 303 0
-1519 304 0
-1520 305 0
-1521 306 0
-1522 307 0
-1523 308 0
-1524 309 0
-1525 310 0
c (field_00003_00003=variant_fields_00002_00003_00003)
-302 2732 0
-303 2733 0
-304 2734 0
-305 2735 0
-306 2736 0
-307 2737 0
-308 2738 0
-309 2739 0
-310 2740 0
-2732 302 0
-2733 303 0
-2734 304 0
-2735 305 0
-2736 306 0
-2737 307 0
-2738 308 0
-2739 309 0
-2740 310 0
c (variant_fields_00004_00003_00004=field_00006_00003)
-5177 707 0
-5178 708 0
-5179 709 0
-5180 710 0
-5181 711 0
-5182 712 0
-5183 713 0
-5184 714 0
-5185 715 0
-707 5177 0
-708 5178 0
-709 5179 0
-710 5180 0
-711 5181 0
-712 5182 0
-713 5183 0
-714 5184 0
-715 5185 0
c (field_00003_00006=variant_fields_00003_00003_00004)
-347 3962 0
-348 3963 0
-349 3964 0
-350 3965 0
-351 3966 0
-352 3967 0
-353 3968 0
-354 3969 0
-355 3970 0
-3962 347 0
-3963 348 0
-3964 349 0
-3965 350 0
-3966 351 0
-3967 352 0
-3968 353 0
-3969 354 0
-3970 355 0
c (field_00003_00004=variant_fields_00001_00003_00004)
-317 1532 0
-318 1533 0
-319 1534 0
-320 1535 0
-321 1536 0
-322 1537 0
-323 1538 0
-324 1539 0
-325 1540 0
-1532 317 0
-1533 318 0
-1534 319 0
-1535 320 0
-1536 321 0
-1537 322 0
-1538 323 0
-1539 324 0
-1540 325 0
c (field_00004_00003=variant_fields_00002_00003_00004)
-437 2747 0
-438 2748 0
-439 2749 0
-440 2750 0
-441 2751 0
-442 2752 0
-443 2753 0
-444 2754 0
-445 2755 0
-2747 437 0
-2748 438 0
-2749 439 0
-2750 440 0
-2751 441 0
-2752 442 0
-2753 443 0
-2754 444 0
-2755 445 0
c (variant_fields_00004_00003_00005=field_00005_00003)
-5192 572 0
-5193 573 0
-5194 574 0
-5195 575 0
-5196 576 0
-5197 577 0
-5198 578 0
-5199 579 0
-5200 580 0
-572 5192 0
-573 5193 0
-574 5194 0
-575 5195 0
-576 5196 0
-577 5197 0
-578 5198 0
-579 5199 0
-580 5200 0
c (field_00003_00005=variant_fields_00003_00003_00005)
-332 3977 0
-333 3978 0
-334 3979 0
-335 3980 0
-336 3981 0
-337 3982 0
-338 3983 0
-339 3984 0
-340 3985 0
-3977 332 0
-3978 333 0
-3979 334 0
-3980 335 0
-3981 336 0
-3982 337 0
-3983 338 0
-3984 339 0
-3985 340 0
c (field_00003_00005=variant_fields_00001_00003_00005)
-332 1547 0
-333 1548 0
-334 1549 0
-335 1550 0
-336 1551 0
-337 1552 0
-338 1553 0
-339 1554 0
-340 1555 0
-1547 332 0
-1548 333 0
-1549 334 0
-1550 335 0
-1551 336 0
-1552 337 0
-1553 338 0
-1554 339 0
-1555 340 0
c (variant_fields_00002_00003_00005=field_00005_00003)
-2762 572 0
-2763 573 0
-2764 574 0
-2765 575 0
-2766 576 0
-2767 577 0
-2768 578 0
-2769 579 0
-2770 580 0
-572 2762 0
-573 2763 0
-574 2764 0
-575 2765 0
-576 2766 0
-577 2767 0
-578 2768 0
-579 2769 0
-580 2770 0
c (field_00004_00003=variant_fields_00004_00003_00006)
-437 5207 0
-438 5208 0
-439 5209 0
-440 5210 0
-441 5211 0
-442 5212 0
-443 5213 0
-444 5214 0
-445 5215 0
-5207 437 0
-5208 438 0
-5209 439 0
-5210 440 0
-5211 441 0
-5212 442 0
-5213 443 0
-5214 444 0
-5215 445 0
c (field_00003_00004=variant_fields_00003_00003_00006)
-317 3992 0
-318 3993 0
-319 3994 0
-320 3995 0
-321 3996 0
-322 3997 0
-323 3998 0
-324 3999 0
-325 4000 0
-3992 317 0
-3993 318 0
-3994 319 0
-3995 320 0
-3996 321 0
-3997 322 0
-3998 323 0
-3999 324 0
-4000 325 0
c (field_00003_00006=variant_fields_00001_00003_00006)
-347 1562 0
-348 1563 0
-349 1564 0
-350 1565 0
-351 1566 0
-352 1567 0
-353 1568 0
-354 1569 0
-355 1570 0
-1562 347 0
-1563 348 0
-1564 349 0
-1565 350 0
-1566 351 0
-1567 352 0
-1568 353 0
-1569 354 0
-1570 355 0
c (variant_fields_00002_00003_00006=field_00006_00003)
-2777 707 0
-2778 708 0
-2779 709 0
-2780 710 0
-2781 711 0
-2782 712 0
-2783 713 0
-2784 714 0
-2785 715 0
-707 2777 0
-708 2778 0
-709 2779 0
-710 2780 0
-711 2781 0
-712 2782 0
-713 2783 0
-714 2784 0
-715 2785 0
c (field_00003_00003=variant_fields_00004_00003_00007)
-302 5222 0
-303 5223 0
-304 5224 0
-305 5225 0
-306 5226 0
-307 5227 0
-308 5228 0
-309 5229 0
-310 5230 0
-5222 302 0
-5223 303 0
-5224 304 0
-5225 305 0
-5226 306 0
-5227 307 0
-5228 308 0
-5229 309 0
-5230 310 0
c (field_00003_00003=variant_fields_00003_00003_00007)
-302 4007 0
-303 4008 0
-304 4009 0
-305 4010 0
-306 4011 0
-307 4012 0
-308 4013 0
-309 4014 0
-310 4015 0
-4007 302 0
-4008 303 0
-4009 304 0
-4010 305 0
-4011 306 0
-4012 307 0
-4013 308 0
-4014 309 0
-4015 310 0
c (field_00003_00007=variant_fields_00001_00003_00007)
-362 1577 0
-363 1578 0
-364 1579 0
-365 1580 0
-366 1581 0
-367 1582 0
-368 1583 0
-369 1584 0
-370 1585 0
-1577 362 0
-1578 363 0
-1579 364 0
-1580 365 0
-1581 366 0
-1582 367 0
-1583 368 0
-1584 369 0
-1585 370 0
c (variant_fields_00002_00003_00007=field_00007_00003)
-2792 842 0
-2793 843 0
-2794 844 0
-2795 845 0
-2796 846 0
-2797 847 0
-2798 848 0
-2799 849 0
-2800 850 0
-842 2792 0
-843 2793 0
-844 2794 0
-845 2795 0
-846 2796 0
-847 2797 0
-848 2798 0
-849 2799 0
-850 2800 0
c (variant_fields_00004_00003_00008=field_00002_00003)
-5237 167 0
-5238 168 0
-5239 169 0
-5240 170 0
-5241 171 0
-5242 172 0
-5243 173 0
-5244 174 0
-5245 175 0
-167 5237 0
-168 5238 0
-169 5239 0
-170 5240 0
-171 5241 0
-172 5242 0
-173 5243 0
-174 5244 0
-175 5245 0
c (field_00003_00002=variant_fields_00003_00003_00008)
-287 4022 0
-288 4023 0
-289 4024 0
-290 4025 0
-291 4026 0
-292 4027 0
-293 4028 0
-294 4029 0
-295 4030 0
-4022 287 0
-4023 288 0
-4024 289 0
-4025 290 0
-4026 291 0
-4027 292 0
-4028 293 0
-4029 294 0
-4030 295 0
c (field_00003_00008=variant_fields_00001_00003_00008)
-377 1592 0
-378 1593 0
-379 1594 0
-380 1595 0
-381 1596 0
-382 1597 0
-383 1598 0
-384 1599 0
-385 1600 0
-1592 377 0
-1593 378 0
-1594 379 0
-1595 380 0
-1596 381 0
-1597 382 0
-1598 383 0
-1599 384 0
-1600 385 0
c (field_00008_00003=variant_fields_00002_00003_00008)
-977 2807 0
-978 2808 0
-979 2809 0
-980 2810 0
-981 2811 0
-982 2812 0
-983 2813 0
-984 2814 0
-985 2815 0
-2807 977 0
-2808 978 0
-2809 979 0
-2810 980 0
-2811 981 0
-2812 982 0
-2813 983 0
-2814 984 0
-2815 985 0
c (variant_fields_00004_00003_00009=field_00001_00003)
-5252 32 0
-5253 33 0
-5254 34 0
-5255 35 0
-5256 36 0
-5257 37 0
-5258 38 0
-5259 39 0
-5260 40 0
-32 5252 0
-33 5253 0
-34 5254 0
-35 5255 0
-36 5256 0
-37 5257 0
-38 5258 0
-39 5259 0
-40 5260 0
c (field_00003_00001=variant_fields_00003_00003_00009)
-272 4037 0
-273 4038 0
-274 4039 0
-275 4040 0
-276 4041 0
-277 4042 0
-278 4043 0
-279 4044 0
-280 4045 0
-4037 272 0
-4038 273 0
-4039 274 0
-4040 275 0
-4041 276 0
-4042 277 0
-4043 278 0
-4044 279 0
-4045 280 0
c (field_00003_00009=variant_fields_00001_00003_00009)
-392 1607 0
-393 1608 0
-394 1609 0
-395 1610 0
-396 1611 0
-397 1612 0
-398 1613 0
-399 1614 0
-400 1615 0
-1607 392 0
-1608 393 0
-1609 394 0
-1610 395 0
-1611 396 0
-1612 397 0
-1613 398 0
-1614 399 0
-1615 400 0
c (field_00009_00003=variant_fields_00002_00003_00009)
-1112 2822 0
-1113 2823 0
-1114 2824 0
-1115 2825 0
-1116 2826 0
-1117 2827 0
-1118 2828 0
-1119 2829 0
-1120 2830 0
-2822 1112 0
-2823 1113 0
-2824 1114 0
-2825 1115 0
-2826 1116 0
-2827 1117 0
-2828 1118 0
-2829 1119 0
-2830 1120 0
c (field_00009_00004=variant_fields_00004_00004_00001)
-1127 5267 0
-1128 5269 0
-1129 5271 0
-1130 5273 0
-1131 5275 0
-1132 5277 0
-1133 5279 0
-1134 5281 0
-1135 -5280 0
-5267 1127 0
-5269 1128 0
-5271 1129 0
-5273 1130 0
-5275 1131 0
-5277 1132 0
-5279 1133 0
-5281 1134 0
5280 1135 0
c (field_00004_00009=variant_fields_00003_00004_00001)
-527 4052 0
-528 4054 0
-529 4056 0
-530 4058 0
-531 4060 0
-532 4062 0
-533 4064 0
-534 4066 0
-535 -4065 0
-4052 527 0
-4054 528 0
-4056 529 0
-4058 530 0
-4060 531 0
-4062 532 0
-4064 533 0
-4066 534 0
4065 535 0
c (field_00004_00001=variant_fields_00001_00004_00001)
-407 1622 0
-408 1624 0
-409 1626 0
-410 1628 0
-411 1630 0
-412 1632 0
-413 1634 0
-414 1636 0
-415 -1635 0
-1622 407 0
-1624 408 0
-1626 409 0
-1628 410 0
-1630 411 0
-1632 412 0
-1634 413 0
-1636 414 0
1635 415 0
c (field_00001_00004=variant_fields_00002_00004_00001)
-47 2837 0
-48 2839 0
-49 2841 0
-50 2843 0
-51 2845 0
-52 2847 0
-53 2849 0
-54 2851 0
-55 -2850 0
-2837 47 0
-2839 48 0
-2841 49 0
-2843 50 0
-2845 51 0
-2847 52 0
-2849 53 0
-2851 54 0
2850 55 0
c (field_00008_00004=variant_fields_00004_00004_00002)
-992 5282 0
-993 5283 0
-994 5284 0
-995 5285 0
-996 5286 0
-997 5287 0
-998 5288 0
-999 5289 0
-1000 5290 0
-5282 992 0
-5283 993 0
-5284 994 0
-5285 995 0
-5286 996 0
-5287 997 0
-5288 998 0
-5289 999 0
-5290 1000 0
c (field_00004_00008=variant_fields_00003_00004_00002)
-512 4067 0
-513 4068 0
-514 4069 0
-515 4070 0
-516 4071 0
-517 4072 0
-518 4073 0
-519 4074 0
-520 4075 0
-4067 512 0
-4068 513 0
-4069 514 0
-4070 515 0
-4071 516 0
-4072 517 0
-4073 518 0
-4074 519 0
-4075 520 0
c (field_00004_00002=variant_fields_00001_00004_00002)
-422 1637 0
-423 1638 0
-424 1639 0
-425 1640 0
-426 1641 0
-427 1642 0
-428 1643 0
-429 1644 0
-430 1645 0
-1637 422 0
-1638 423 0
-1639 424 0
-1640 425 0
-1641 426 0
-1642 427 0
-1643 428 0
-1644 429 0
-1645 430 0
c (variant_fields_00002_00004_00002=field_00002_00004)
-2852 182 0
-2853 183 0
-2854 184 0
-2855 185 0
-2856 186 0
-2857 187 0
-2858 188 0
-2859 189 0
-2860 190 0
-182 2852 0
-183 2853 0
-184 2854 0
-185 2855 0
-186 2856 0
-187 2857 0
-188 2858 0
-189 2859 0
-190 2860 0
c (variant_fields_00004_00004_00003=field_00007_00004)
-5297 857 0
-5298 858 0
-5299 859 0
-5300 860 0
-5301 861 0
-5302 862 0
-5303 863 0
-5304 864 0
-5305 865 0
-857 5297 0
-858 5298 0
-859 5299 0
-860 5300 0
-861 5301 0
-862 5302 0
-863 5303 0
-864 5304 0
-865 5305 0
c (field_00004_00007=variant_fields_00003_00004_00003)
-497 4082 0
-498 4083 0
-499 4084 0
-500 4085 0
-501 4086 0
-502 4087 0
-503 4088 0
-504 4089 0
-505 4090 0
-4082 497 0
-4083 498 0
-4084 499 0
-4085 500 0
-4086 501 0
-4087 502 0
-4088 503 0
-4089 504 0
-4090 505 0
c (field_00004_00003=variant_fields_00001_00004_00003)
-437 1652 0
-438 1653 0
-439 1654 0
-440 1655 0
-441 1656 0
-442 1657 0
-443 1658 0
-444 1659 0
-445 1660 0
-1652 437 0
-1653 438 0
-1654 439 0
-1655 440 0
-1656 441 0
-1657 442 0
-1658 443 0
-1659 444 0
-1660 445 0
c (field_00003_00004=variant_fields_00002_00004_00003)
-317 2867 0
-318 2868 0
-319 2869 0
-320 2870 0
-321 2871 0
-322 2872 0
-323 2873 0
-324 2874 0
-325 2875 0
-2867 317 0
-2868 318 0
-2869 319 0
-2870 320 0
-2871 321 0
-2872 322 0
-2873 323 0
-2874 324 0
-2875 325 0
c (variant_fields_00004_00004_00004=field_00006_00004)
-5312 722 0
-5313 723 0
-5314 724 0
-5315 725 0
-5316 726 0
-5317 727 0
-5318 728 0
-5319 729 0
-5320 730 0
-722 5312 0
-723 5313 0
-724 5314 0
-725 5315 0
-726 5316 0
-727 5317 0
-728 5318 0
-729 5319 0
-730 5320 0
c (field_00004_00006=variant_fields_00003_00004_00004)
-482 4097 0
-483 4098 0
-484 4099 0
-485 4100 0
-486 4101 0
-487 4102 0
-488 4103 0
-489 4104 0
-490 4105 0
-4097 482 0
-4098 483 0
-4099 484 0
-4100 485 0
-4101 486 0
-4102 487 0
-4103 488 0
-4104 489 0
-4105 490 0
c (field_00004_00004=variant_fields_00001_00004_00004)
-452 1667 0
-453 1668 0
-454 1669 0
-455 1670 0
-456 1671 0
-457 1672 0
-458 1673 0
-459 1674 0
-460 1675 0
-1667 452 0
-1668 453 0
-1669 454 0
-1670 455 0
-1671 456 0
-1672 457 0
-1673 458 0
-1674 459 0
-1675 460 0
c (field_00004_00004=variant_fields_00002_00004_00004)
-452 2882 0
-453 2883 0
-454 2884 0
-455 2885 0
-456 2886 0
-457 2887 0
-458 2888 0
-459 2889 0
-460 2890 0
-2882 452 0
-2883 453 0
-2884 454 0
-2885 455 0
-2886 456 0
-2887 457 0
-2888 458 0
-2889 459 0
-2890 460 0
c (field_00005_00004=variant_fields_00004_00004_00005)
-587 5327 0
-588 5328 0
-589 5329 0
-590 5330 0
-591 5331 0
-592 5332 0
-593 5333 0
-594 5334 0
-595 5335 0
-5327 587 0
-5328 588 0
-5329 589 0
-5330 590 0
-5331 591 0
-5332 592 0
-5333 593 0
-5334 594 0
-5335 595 0
c (field_00004_00005=variant_fields_00003_00004_00005)
-467 4112 0
-468 4113 0
-469 4114 0
-470 4115 0
-471 4116 0
-472 4117 0
-473 4118 0
-474 4119 0
-475 4120 0
-4112 467 0
-4113 468 0
-4114 469 0
-4115 470 0
-4116 471 0
-4117 472 0
-4118 473 0
-4119 474 0
-4120 475 0
c (field_00004_00005=variant_fields_00001_00004_00005)
-467 1682 0
-468 1683 0
-469 1684 0
-470 1685 0
-471 1686 0
-472 1687 0
-473 1688 0
-474 1689 0
-475 1690 0
-1682 467 0
-1683 468 0
-1684 469 0
-1685 470 0
-1686 471 0
-1687 472 0
-1688 473 0
-1689 474 0
-1690 475 0
c (field_00005_00004=variant_fields_00002_00004_00005)
-587 2897 0
-588 2898 0
-589 2899 0
-590 2900 0
-591 2901 0
-592 2902 0
-593 2903 0
-594 2904 0
-595 2905 0
-2897 587 0
-2898 588 0
-2899 589 0
-2900 590 0
-2901 591 0
-2902 592 0
-2903 593 0
-2904 594 0
-2905 595 0
c (field_00004_00004=variant_fields_00004_00004_00006)
-452 5342 0
-453 5343 0
-454 5344 0
-455 5345 0
-456 5346 0
-457 5347 0
-458 5348 0
-459 5349 0
-460 5350 0
-5342 452 0
-5343 453 0
-5344 454 0
-5345 455 0
-5346 456 0
-5347 457 0
-5348 458 0
-5349 459 0
-5350 460 0
c (field_00004_00004=variant_fields_00003_00004_00006)
-452 4127 0
-453 4128 0
-454 4129 0
-455 4130 0
-456 4131 0
-457 4132 0
-458 4133 0
-459 4134 0
-460 4135 0
-4127 452 0
-4128 453 0
-4129 454 0
-4130 455 0
-4131 456 0
-4132 457 0
-4133 458 0
-4134 459 0
-4135 460 0
c (field_00004_00006=variant_fields_00001_00004_00006)
-482 1697 0
-483 1698 0
-484 1699 0
-485 1700 0
-486 1701 0
-487 1702 0
-488 1703 0
-489 1704 0
-490 1705 0
-1697 482 0
-1698 483 0
-1699 484 0
-1700 485 0
-1701 486 0
-1702 487 0
-1703 488 0
-1704 489 0
-1705 490 0
c (variant_fields_00002_00004_00006=field_00006_00004)
-2912 722 0
-2913 723 0
-2914 724 0
-2915 725 0
-2916 726 0
-2917 727 0
-2918 728 0
-2919 729 0
-2920 730 0
-722 2912 0
-723 2913 0
-724 2914 0
-725 2915 0
-726 2916 0
-727 2917 0
-728 2918 0
-729 2919 0
-730 2920 0
c (field_00003_00004=variant_fields_00004_00004_00007)
-317 5357 0
-318 5358 0
-319 5359 0
-320 5360 0
-321 5361 0
-322 5362 0
-323 5363 0
-324 5364 0
-325 5365 0
-5357 317 0
-5358 318 0
-5359 319 0
-5360 320 0
-5361 321 0
-5362 322 0
-5363 323 0
-5364 324 0
-5365 325 0
c (field_00004_00003=variant_fields_00003_00004_00007)
-437 4142 0
-438 4143 0
-439 4144 0
-440 4145 0
-441 4146 0
-442 4147 0
-443 4148 0
-444 4149 0
-445 4150 0
-4142 437 0
-4143 438 0
-4144 439 0
-4145 440 0
-4146 441 0
-4147 442 0
-4148 443 0
-4149 444 0
-4150 445 0
c (field_00004_00007=variant_fields_00001_00004_00007)
-497 1712 0
-498 1713 0
-499 1714 0
-500 1715 0
-501 1716 0
-502 1717 0
-503 1718 0
-504 1719 0
-505 1720 0
-1712 497 0
-1713 498 0
-1714 499 0
-1715 500 0
-1716 501 0
-1717 502 0
-1718 503 0
-1719 504 0
-1720 505 0
c (variant_fields_00002_00004_00007=field_00007_00004)
-2927 857 0
-2928 858 0
-2929 859 0
-2930 860 0
-2931 861 0
-2932 862 0
-2933 863 0
-2934 864 0
-2935 865 0
-857 2927 0
-858 2928 0
-859 2929 0
-860 2930 0
-861 2931 0
-862 2932 0
-863 2933 0
-864 2934 0
-865 2935 0
c (variant_fields_00004_00004_00008=field_00002_00004)
-5372 182 0
-5373 183 0
-5374 184 0
-5375 185 0
-5376 186 0
-5377 187 0
-5378 188 0
-5379 189 0
-5380 190 0
-182 5372 0
-183 5373 0
-184 5374 0
-185 5375 0
-186 5376 0
-187 5377 0
-188 5378 0
-189 5379 0
-190 5380 0
c (field_00004_00002=variant_fields_00003_00004_00008)
-422 4157 0
-423 4158 0
-424 4159 0
-425 4160 0
-426 4161 0
-427 4162 0
-428 4163 0
-429 4164 0
-430 4165 0
-4157 422 0
-4158 423 0
-4159 424 0
-4160 425 0
-4161 426 0
-4162 427 0
-4163 428 0
-4164 429 0
-4165 430 0
c (field_00004_00008=variant_fields_00001_00004_00008)
-512 1727 0
-513 1728 0
-514 1729 0
-515 1730 0
-516 1731 0
-517 1732 0
-518 1733 0
-519 1734 0
-520 1735 0
-1727 512 0
-1728 513 0
-1729 514 0
-1730 515 0
-1731 516 0
-1732 517 0
-1733 518 0
-1734 519 0
-1735 520 0
c (field_00008_00004=variant_fields_00002_00004_00008)
-992 2942 0
-993 2943 0
-994 2944 0
-995 2945 0
-996 2946 0
-997 2947 0
-998 2948 0
-999 2949 0
-1000 2950 0
-2942 992 0
-2943 993 0
-2944 994 0
-2945 995 0
-2946 996 0
-2947 997 0
-2948 998 0
-2949 999 0
-2950 1000 0
c (variant_fields_00004_00004_00009=field_00001_00004)
-5387 47 0
-5388 48 0
-5389 49 0
-5390 50 0
-5391 51 0
-5392 52 0
-5393 53 0
-5394 54 0
-5395 55 0
-47 5387 0
-48 5388 0
-49 5389 0
-50 5390 0
-51 5391 0
-52 5392 0
-53 5393 0
-54 5394 0
-55 5395 0
c (field_00004_00001=variant_fields_00003_00004_00009)
-407 4172 0
-408 4173 0
-409 4174 0
-410 4175 0
-411 4176 0
-412 4177 0
-413 4178 0
-414 4179 0
-415 4180 0
-4172 407 0
-4173 408 0
-4174 409 0
-4175 410 0
-4176 411 0
-4177 412 0
-4178 413 0
-4179 414 0
-4180 415 0
c (field_00004_00009=variant_fields_00001_00004_00009)
-527 1742 0
-528 1743 0
-529 1744 0
-530 1745 0
-531 1746 0
-532 1747 0
-533 1748 0
-534 1749 0
-535 1750 0
-1742 527 0
-1743 528 0
-1744 529 0
-1745 530 0
-1746 531 0
-1747 532 0
-1748 533 0
-1749 534 0
-1750 535 0
c (field_00009_00004=variant_fields_00002_00004_00009)
-1127 2957 0
-1128 2958 0
-1129 2959 0
-1130 2960 0
-1131 2961 0
-1132 2962 0
-1133 2963 0
-1134 2964 0
-1135 2965 0
-2957 1127 0
-2958 1128 0
-2959 1129 0
-2960 1130 0
-2961 1131 0
-2962 1132 0
-2963 1133 0
-2964 1134 0
-2965 1135 0
c (field_00009_00005=variant_fields_00004_00005_00001)
-1142 5402 0
-1143 5403 0
-1144 5404 0
-1145 5405 0
-1146 5406 0
-1147 5407 0
-1148 5408 0
-1149 5409 0
-1150 5410 0
-5402 1142 0
-5403 1143 0
-5404 1144 0
-5405 1145 0
-5406 1146 0
-5407 1147 0
-5408 1148 0
-5409 1149 0
-5410 1150 0
c (field_00005_00009=variant_fields_00003_00005_00001)
-662 4187 0
-663 4188 0
-664 4189 0
-665 4190 0
-666 4191 0
-667 4192 0
-668 4193 0
-669 4194 0
-670 4195 0
-4187 662 0
-4188 663 0
-4189 664 0
-4190 665 0
-4191 666 0
-4192 667 0
-4193 668 0
-4194 669 0
-4195 670 0
c (field_00005_00001=variant_fields_00001_00005_00001)
-542 1757 0
-543 1758 0
-544 1759 0
-545 1760 0
-546 1761 0
-547 1762 0
-548 1763 0
-549 1764 0
-550 1765 0
-1757 542 0
-1758 543 0
-1759 544 0
-1760 545 0
-1761 546 0
-1762 547 0
-1763 548 0
-1764 549 0
-1765 550 0
c (field_00001_00005=variant_fields_00002_00005_00001)
-62 2972 0
-63 2973 0
-64 2974 0
-65 2975 0
-66 2976 0
-67 2977 0
-68 2978 0
-69 2979 0
-70 2980 0
-2972 62 0
-2973 63 0
-2974 64 0
-2975 65 0
-2976 66 0
-2977 67 0
-2978 68 0
-2979 69 0
-2980 70 0
c (field_00008_00005=variant_fields_00004_00005_00002)
-1007 5417 0
-1008 5418 0
-1009 5419 0
-1010 5420 0
-1011 5421 0
-1012 5422 0
-1013 5423 0
-1014 5424 0
-1015 5425 0
-5417 1007 0
-5418 1008 0
-5419 1009 0
-5420 1010 0
-5421 1011 0
-5422 1012 0
-5423 1013 0
-5424 1014 0
-5425 1015 0
c (field_00005_00008=variant_fields_00003_00005_00002)
-647 4202 0
-648 4203 0
-649 4204 0
-650 4205 0
-651 4206 0
-652 4207 0
-653 4208 0
-654 4209 0
-655 4210 0
-4202 647 0
-4203 648 0
-4204 649 0
-4205 650 0
-4206 651 0
-4207 652 0
-4208 653 0
-4209 654 0
-4210 655 0
c (field_00005_00002=variant_fields_00001_00005_00002)
-557 1772 0
-558 1773 0
-559 1774 0
-560 1775 0
-561 1776 0
-562 1777 0
-563 1778 0
-564 1779 0
-565 1780 0
-1772 557 0
-1773 558 0
-1774 559 0
-1775 560 0
-1776 561 0
-1777 562 0
-1778 563 0
-1779 564 0
-1780 565 0
c (field_00002_00005=variant_fields_00002_00005_00002)
-197 2987 0
-198 2988 0
-199 2989 0
-200 2990 0
-201 2991 0
-202 2992 0
-203 2993 0
-204 2994 0
-205 2995 0
-2987 197 0
-2988 198 0
-2989 199 0
-2990 200 0
-2991 201 0
-2992 202 0
-2993 203 0
-2994 204 0
-2995 205 0
c (variant_fields_00004_00005_00003=field_00007_00005)
-5432 872 0
-5433 873 0
-5434 874 0
-5435 875 0
-5436 876 0
-5437 877 0
-5438 878 0
-5439 879 0
-5440 880 0
-872 5432 0
-873 5433 0
-874 5434 0
-875 5435 0
-876 5436 0
-877 5437 0
-878 5438 0
-879 5439 0
-880 5440 0
c (field_00005_00007=variant_fields_00003_00005_00003)
-632 4217 0
-633 4218 0
-634 4219 0
-635 4220 0
-636 4221 0
-637 4222 0
-638 4223 0
-639 4224 0
-640 4225 0
-4217 632 0
-4218 633 0
-4219 634 0
-4220 635 0
-4221 636 0
-4222 637 0
-4223 638 0
-4224 639 0
-4225 640 0
c (field_00005_00003=variant_fields_00001_00005_00003)
-572 1787 0
-573 1788 0
-574 1789 0
-575 1790 0
-576 1791 0
-577 1792 0
-578 1793 0
-579 1794 0
-580 1795 0
-1787 572 0
-1788 573 0
-1789 574 0
-1790 575 0
-1791 576 0
-1792 577 0
-1793 578 0
-1794 579 0
-1795 580 0
c (field_00003_00005=variant_fields_00002_00005_00003)
-332 3002 0
-333 3003 0
-334 3004 0
-335 3005 0
-336 3006 0
-337 3007 0
-338 3008 0
-339 3009 0
-340 3010 0
-3002 332 0
-3003 333 0
-3004 334 0
-3005 335 0
-3006 336 0
-3007 337 0
-3008 338 0
-3009 339 0
-3010 340 0
c (field_00006_00005=variant_fields_00004_00005_00004)
-737 5447 0
-738 5448 0
-739 5449 0
-740 5450 0
-741 5451 0
-742 5452 0
-743 5453 0
-744 5454 0
-745 5455 0
-5447 737 0
-5448 738 0
-5449 739 0
-5450 740 0
-5451 741 0
-5452 742 0
-5453 743 0
-5454 744 0
-5455 745 0
c (field_00005_00006=variant_fields_00003_00005_00004)
-617 4232 0
-618 4233 0
-619 4234 0
-620 4235 0
-621 4236 0
-622 4237 0
-623 4238 0
-624 4239 0
-625 4240 0
-4232 617 0
-4233 618 0
-4234 619 0
-4235 620 0
-4236 621 0
-4237 622 0
-4238 623 0
-4239 624 0
-4240 625 0
c (field_00005_00004=variant_fields_00001_00005_00004)
-587 1802 0
-588 1803 0
-589 1804 0
-590 1805 0
-591 1806 0
-592 1807 0
-593 1808 0
-594 1809 0
-595 1810 0
-1802 587 0
-1803 588 0
-1804 589 0
-1805 590 0
-1806 591 0
-1807 592 0
-1808 593 0
-1809 594 0
-1810 595 0
c (field_00004_00005=variant_fields_00002_00005_00004)
-467 3017 0
-468 3018 0
-469 3019 0
-470 3020 0
-471 3021 0
-472 3022 0
-473 3023 0
-474 3024 0
-475 3025 0
-3017 467 0
-3018 468 0
-3019 469 0
-3020 470 0
-3021 471 0
-3022 472 0
-3023 473 0
-3024 474 0
-3025 475 0
c (field_00005_00005=variant_fields_00004_00005_00005)
-602 5462 0
-603 5463 0
-604 5464 0
-605 5465 0
-606 5466 0
-607 5467 0
-608 5468 0
-609 5469 0
-610 5470 0
-5462 602 0
-5463 603 0
-5464 604 0
-5465 605 0
-5466 606 0
-5467 607 0
-5468 608 0
-5469 609 0
-5470 610 0
c (field_00005_00005=variant_fields_00003_00005_00005)
-602 4247 0
-603 4248 0
-604 4249 0
-605 4250 0
-606 4251 0
-607 4252 0
-608 4253 0
-609 4254 0
-610 4255 0
-4247 602 0
-4248 603 0
-4249 604 0
-4250 605 0
-4251 606 0
-4252 607 0
-4253 608 0
-4254 609 0
-4255 610 0
c (field_00005_00005=variant_fields_00001_00005_00005)
-602 1817 0
-603 1818 0
-604 1819 0
-605 1820 0
-606 1821 0
-607 1822 0
-608 1823 0
-609 1824 0
-610 1825 0
-1817 602 0
-1818 603 0
-1819 604 0
-1820 605 0
-1821 606 0
-1822 607 0
-1823 608 0
-1824 609 0
-1825 610 0
c (field_00005_00005=variant_fields_00002_00005_00005)
-602 3032 0
-603 3033 0
-604 3034 0
-605 3035 0
-606 3036 0
-607 3037 0
-608 3038 0
-609 3039 0
-610 3040 0
-3032 602 0
-3033 603 0
-3034 604 0
-3035 605 0
-3036 606 0
-3037 607 0
-3038 608 0
-3039 609 0
-3040 610 0
c (field_00004_00005=variant_fields_00004_00005_00006)
-467 5477 0
-468 5478 0
-469 5479 0
-470 5480 0
-471 5481 0
-472 5482 0
-473 5483 0
-474 5484 0
-475 5485 0
-5477 467 0
-5478 468 0
-5479 469 0
-5480 470 0
-5481 471 0
-5482 472 0
-5483 473 0
-5484 474 0
-5485 475 0
c (field_00005_00004=variant_fields_00003_00005_00006)
-587 4262 0
-588 4263 0
-589 4264 0
-590 4265 0
-591 4266 0
-592 4267 0
-593 4268 0
-594 4269 0
-595 4270 0
-4262 587 0
-4263 588 0
-4264 589 0
-4265 590 0
-4266 591 0
-4267 592 0
-4268 593 0
-4269 594 0
-4270 595 0
c (field_00005_00006=variant_fields_00001_00005_00006)
-617 1832 0
-618 1833 0
-619 1834 0
-620 1835 0
-621 1836 0
-622 1837 0
-623 1838 0
-624 1839 0
-625 1840 0
-1832 617 0
-1833 618 0
-1834 619 0
-1835 620 0
-1836 621 0
-1837 622 0
-1838 623 0
-1839 624 0
-1840 625 0
c (field_00006_00005=variant_fields_00002_00005_00006)
-737 3047 0
-738 3048 0
-739 3049 0
-740 3050 0
-741 3051 0
-742 3052 0
-743 3053 0
-744 3054 0
-745 3055 0
-3047 737 0
-3048 738 0
-3049 739 0
-3050 740 0
-3051 741 0
-3052 742 0
-3053 743 0
-3054 744 0
-3055 745 0
c (field_00003_00005=variant_fields_00004_00005_00007)
-332 5492 0
-333 5493 0
-334 5494 0
-335 5495 0
-336 5496 0
-337 5497 0
-338 5498 0
-339 5499 0
-340 5500 0
-5492 332 0
-5493 333 0
-5494 334 0
-5495 335 0
-5496 336 0
-5497 337 0
-5498 338 0
-5499 339 0
-5500 340 0
c (field_00005_00003=variant_fields_00003_00005_00007)
-572 4277 0
-573 4278 0
-574 4279 0
-575 4280 0
-576 4281 0
-577 4282 0
-578 4283 0
-579 4284 0
-580 4285 0
-4277 572 0
-4278 573 0
-4279 574 0
-4280 575 0
-4281 576 0
-4282 577 0
-4283 578 0
-4284 579 0
-4285 580 0
c (field_00005_00007=variant_fields_00001_00005_00007)
-632 1847 0
-633 1848 0
-634 1849 0
-635 1850 0
-636 1851 0
-637 1852 0
-638 1853 0
-639 1854 0
-640 1855 0
-1847 632 0
-1848 633 0
-1849 634 0
-1850 635 0
-1851 636 0
-1852 637 0
-1853 638 0
-1854 639 0
-1855 640 0
c (variant_fields_00002_00005_00007=field_00007_00005)
-3062 872 0
-3063 873 0
-3064 874 0
-3065 875 0
-3066 876 0
-3067 877 0
-3068 878 0
-3069 879 0
-3070 880 0
-872 3062 0
-873 3063 0
-874 3064 0
-875 3065 0
-876 3066 0
-877 3067 0
-878 3068 0
-879 3069 0
-880 3070 0
c (variant_fields_00004_00005_00008=field_00002_00005)
-5507 197 0
-5508 198 0
-5509 199 0
-5510 200 0
-5511 201 0
-5512 202 0
-5513 203 0
-5514 204 0
-5515 205 0
-197 5507 0
-198 5508 0
-199 5509 0
-200 5510 0
-201 5511 0
-202 5512 0
-203 5513 0
-204 5514 0
-205 5515 0
c (field_00005_00002=variant_fields_00003_00005_00008)
-557 4292 0
-558 4293 0
-559 4294 0
-560 4295 0
-561 4296 0
-562 4297 0
-563 4298 0
-564 4299 0
-565 4300 0
-4292 557 0
-4293 558 0
-4294 559 0
-4295 560 0
-4296 561 0
-4297 562 0
-4298 563 0
-4299 564 0
-4300 565 0
c (field_00005_00008=variant_fields_00001_00005_00008)
-647 1862 0
-648 1863 0
-649 1864 0
-650 1865 0
-651 1866 0
-652 1867 0
-653 1868 0
-654 1869 0
-655 1870 0
-1862 647 0
-1863 648 0
-1864 649 0
-1865 650 0
-1866 651 0
-1867 652 0
-1868 653 0
-1869 654 0
-1870 655 0
c (field_00008_00005=variant_fields_00002_00005_00008)
-1007 3077 0
-1008 3078 0
-1009 3079 0
-1010 3080 0
-1011 3081 0
-1012 3082 0
-1013 3083 0
-1014 3084 0
-1015 3085 0
-3077 1007 0
-3078 1008 0
-3079 1009 0
-3080 1010 0
-3081 1011 0
-3082 1012 0
-3083 1013 0
-3084 1014 0
-3085 1015 0
c (field_00001_00005=variant_fields_00004_00005_00009)
-62 5522 0
-63 5523 0
-64 5524 0
-65 5525 0
-66 5526 0
-67 5527 0
-68 5528 0
-69 5529 0
-70 5530 0
-5522 62 0
-5523 63 0
-5524 64 0
-5525 65 0
-5526 66 0
-5527 67 0
-5528 68 0
-5529 69 0
-5530 70 0
c (field_00005_00001=variant_fields_00003_00005_00009)
-542 4307 0
-543 4308 0
-544 4309 0
-545 4310 0
-546 4311 0
-547 4312 0
-548 4313 0
-549 4314 0
-550 4315 0
-4307 542 0
-4308 543 0
-4309 544 0
-4310 545 0
-4311 546 0
-4312 547 0
-4313 548 0
-4314 549 0
-4315 550 0
c (field_00005_00009=variant_fields_00001_00005_00009)
-662 1877 0
-663 1878 0
-664 1879 0
-665 1880 0
-666 1881 0
-667 1882 0
-668 1883 0
-669 1884 0
-670 1885 0
-1877 662 0
-1878 663 0
-1879 664 0
-1880 665 0
-1881 666 0
-1882 667 0
-1883 668 0
-1884 669 0
-1885 670 0
c (field_00009_00005=variant_fields_00002_00005_00009)
-1142 3092 0
-1143 3093 0
-1144 3094 0
-1145 3095 0
-1146 3096 0
-1147 3097 0
-1148 3098 0
-1149 3099 0
-1150 3100 0
-3092 1142 0
-3093 1143 0
-3094 1144 0
-3095 1145 0
-3096 1146 0
-3097 1147 0
-3098 1148 0
-3099 1149 0
-3100 1150 0
c (field_00009_00006=variant_fields_00004_00006_00001)
-1157 5537 0
-1158 5538 0
-1159 5539 0
-1160 5540 0
-1161 5541 0
-1162 5542 0
-1163 5543 0
-1164 5544 0
-1165 5545 0
-5537 1157 0
-5538 1158 0
-5539 1159 0
-5540 1160 0
-5541 1161 0
-5542 1162 0
-5543 1163 0
-5544 1164 0
-5545 1165 0
c (variant_fields_00003_00006_00001=field_00006_00009)
-4322 797 0
-4324 798 0
-4326 799 0
-4328 800 0
-4330 801 0
-4332 802 0
-4334 803 0
-4336 804 0
4335 805 0
-797 4322 0
-798 4324 0
-799 4326 0
-800 4328 0
-801 4330 0
-802 4332 0
-803 4334 0
-804 4336 0
-805 -4335 0
c (variant_fields_00001_00006_00001=field_00006_00001)
-1892 677 0
-1894 678 0
-1896 679 0
-1898 680 0
-1900 681 0
-1902 682 0
-1904 683 0
-1906 684 0
1905 685 0
-677 1892 0
-678 1894 0
-679 1896 0
-680 1898 0
-681 1900 0
-682 1902 0
-683 1904 0
-684 1906 0
-685 -1905 0
c (variant_fields_00002_00006_00001=field_00001_00006)
-3107 77 0
-3109 78 0
-3111 79 0
-3113 80 0
-3115 81 0
-3117 82 0
-3119 83 0
-3121 84 0
3120 85 0
-77 3107 0
-78 3109 0
-79 3111 0
-80 3113 0
-81 3115 0
-82 3117 0
-83 3119 0
-84 3121 0
-85 -3120 0
c (field_00008_00006=variant_fields_00004_00006_00002)
-1022 5552 0
-1023 5553 0
-1024 5554 0
-1025 5555 0
-1026 5556 0
-1027 5557 0
-1028 5558 0
-1029 5559 0
-1030 5560 0
-5552 1022 0
-5553 1023 0
-5554 1024 0
-5555 1025 0
-5556 1026 0
-5557 1027 0
-5558 1028 0
-5559 1029 0
-5560 1030 0
c (variant_fields_00003_00006_00002=field_00006_00008)
-4337 782 0
-4338 783 0
-4339 784 0
-4340 785 0
-4341 786 0
-4342 787 0
-4343 788 0
-4344 789 0
-4345 790 0
-782 4337 0
-783 4338 0
-784 4339 0
-785 4340 0
-786 4341 0
-787 4342 0
-788 4343 0
-789 4344 0
-790 4345 0
c (variant_fields_00001_00006_00002=field_00006_00002)
-1907 692 0
-1908 693 0
-1909 694 0
-1910 695 0
-1911 696 0
-1912 697 0
-1913 698 0
-1914 699 0
-1915 700 0
-692 1907 0
-693 1908 0
-694 1909 0
-695 1910 0
-696 1911 0
-697 1912 0
-698 1913 0
-699 1914 0
-700 1915 0
c (variant_fields_00002_00006_00002=field_00002_00006)
-3122 212 0
-3123 213 0
-3124 214 0
-3125 215 0
-3126 216 0
-3127 217 0
-3128 218 0
-3129 219 0
-3130 220 0
-212 3122 0
-213 3123 0
-214 3124 0
-215 3125 0
-216 3126 0
-217 3127 0
-218 3128 0
-219 3129 0
-220 3130 0
c (field_00007_00006=variant_fields_00004_00006_00003)
-887 5567 0
-888 5568 0
-889 5569 0
-890 5570 0
-891 5571 0
-892 5572 0
-893 5573 0
-894 5574 0
-895 5575 0
-5567 887 0
-5568 888 0
-5569 889 0
-5570 890 0
-5571 891 0
-5572 892 0
-5573 893 0
-5574 894 0
-5575 895 0
c (variant_fields_00003_00006_00003=field_00006_00007)
-4352 767 0
-4353 768 0
-4354 769 0
-4355 770 0
-4356 771 0
-4357 772 0
-4358 773 0
-4359 774 0
-4360 775 0
-767 4352 0
-768 4353 0
-769 4354 0
-770 4355 0
-771 4356 0
-772 4357 0
-773 4358 0
-774 4359 0
-775 4360 0
c (variant_fields_00001_00006_00003=field_00006_00003)
-1922 707 0
-1923 708 0
-1924 709 0
-1925 710 0
-1926 711 0
-1927 712 0
-1928 713 0
-1929 714 0
-1930 715 0
-707 1922 0
-708 1923 0
-709 1924 0
-710 1925 0
-711 1926 0
-712 1927 0
-713 1928 0
-714 1929 0
-715 1930 0
c (field_00003_00006=variant_fields_00002_00006_00003)
-347 3137 0
-348 3138 0
-349 3139 0
-350 3140 0
-351 3141 0
-352 3142 0
-353 3143 0
-354 3144 0
-355 3145 0
-3137 347 0
-3138 348 0
-3139 349 0
-3140 350 0
-3141 351 0
-3142 352 0
-3143 353 0
-3144 354 0
-3145 355 0
c (field_00006_00006=variant_fields_00004_00006_00004)
-752 5582 0
-753 5583 0
-754 5584 0
-755 5585 0
-756 5586 0
-757 5587 0
-758 5588 0
-759 5589 0
-760 5590 0
-5582 752 0
-5583 753 0
-5584 754 0
-5585 755 0
-5586 756 0
-5587 757 0
-5588 758 0
-5589 759 0
-5590 760 0
c (variant_fields_00003_00006_00004=field_00006_00006)
-4367 752 0
-4368 753 0
-4369 754 0
-4370 755 0
-4371 756 0
-4372 757 0
-4373 758 0
-4374 759 0
-4375 760 0
-752 4367 0
-753 4368 0
-754 4369 0
-755 4370 0
-756 4371 0
-757 4372 0
-758 4373 0
-759 4374 0
-760 4375 0
c (variant_fields_00001_00006_00004=field_00006_00004)
-1937 722 0
-1938 723 0
-1939 724 0
-1940 725 0
-1941 726 0
-1942 727 0
-1943 728 0
-1944 729 0
-1945 730 0
-722 1937 0
-723 1938 0
-724 1939 0
-725 1940 0
-726 1941 0
-727 1942 0
-728 1943 0
-729 1944 0
-730 1945 0
c (variant_fields_00002_00006_00004=field_00004_00006)
-3152 482 0
-3153 483 0
-3154 484 0
-3155 485 0
-3156 486 0
-3157 487 0
-3158 488 0
-3159 489 0
-3160 490 0
-482 3152 0
-483 3153 0
-484 3154 0
-485 3155 0
-486 3156 0
-487 3157 0
-488 3158 0
-489 3159 0
-490 3160 0
c (field_00005_00006=variant_fields_00004_00006_00005)
-617 5597 0
-618 5598 0
-619 5599 0
-620 5600 0
-621 5601 0
-622 5602 0
-623 5603 0
-624 5604 0
-625 5605 0
-5597 617 0
-5598 618 0
-5599 619 0
-5600 620 0
-5601 621 0
-5602 622 0
-5603 623 0
-5604 624 0
-5605 625 0
c (variant_fields_00003_00006_00005=field_00006_00005)
-4382 737 0
-4383 738 0
-4384 739 0
-4385 740 0
-4386 741 0
-4387 742 0
-4388 743 0
-4389 744 0
-4390 745 0
-737 4382 0
-738 4383 0
-739 4384 0
-740 4385 0
-741 4386 0
-742 4387 0
-743 4388 0
-744 4389 0
-745 4390 0
c (variant_fields_00001_00006_00005=field_00006_00005)
-1952 737 0
-1953 738 0
-1954 739 0
-1955 740 0
-1956 741 0
-1957 742 0
-1958 743 0
-1959 744 0
-1960 745 0
-737 1952 0
-738 1953 0
-739 1954 0
-740 1955 0
-741 1956 0
-742 1957 0
-743 1958 0
-744 1959 0
-745 1960 0
c (variant_fields_00002_00006_00005=field_00005_00006)
-3167 617 0
-3168 618 0
-3169 619 0
-3170 620 0
-3171 621 0
-3172 622 0
-3173 623 0
-3174 624 0
-3175 625 0
-617 3167 0
-618 3168 0
-619 3169 0
-620 3170 0
-621 3171 0
-622 3172 0
-623 3173 0
-624 3174 0
-625 3175 0
c (field_00004_00006=variant_fields_00004_00006_00006)
-482 5612 0
-483 5613 0
-484 5614 0
-485 5615 0
-486 5616 0
-487 5617 0
-488 5618 0
-489 5619 0
-490 5620 0
-5612 482 0
-5613 483 0
-5614 484 0
-5615 485 0
-5616 486 0
-5617 487 0
-5618 488 0
-5619 489 0
-5620 490 0
c (variant_fields_00003_00006_00006=field_00006_00004)
-4397 722 0
-4398 723 0
-4399 724 0
-4400 725 0
-4401 726 0
-4402 727 0
-4403 728 0
-4404 729 0
-4405 730 0
-722 4397 0
-723 4398 0
-724 4399 0
-725 4400 0
-726 4401 0
-727 4402 0
-728 4403 0
-729 4404 0
-730 4405 0
c (variant_fields_00001_00006_00006=field_00006_00006)
-1967 752 0
-1968 753 0
-1969 754 0
-1970 755 0
-1971 756 0
-1972 757 0
-1973 758 0
-1974 759 0
-1975 760 0
-752 1967 0
-753 1968 0
-754 1969 0
-755 1970 0
-756 1971 0
-757 1972 0
-758 1973 0
-759 1974 0
-760 1975 0
c (variant_fields_00002_00006_00006=field_00006_00006)
-3182 752 0
-3183 753 0
-3184 754 0
-3185 755 0
-3186 756 0
-3187 757 0
-3188 758 0
-3189 759 0
-3190 760 0
-752 3182 0
-753 3183 0
-754 3184 0
-755 3185 0
-756 3186 0
-757 3187 0
-758 3188 0
-759 3189 0
-760 3190 0
c (field_00003_00006=variant_fields_00004_00006_00007)
-347 5627 0
-348 5628 0
-349 5629 0
-350 5630 0
-351 5631 0
-352 5632 0
-353 5633 0
-354 5634 0
-355 5635 0
-5627 347 0
-5628 348 0
-5629 349 0
-5630 350 0
-5631 351 0
-5632 352 0
-5633 353 0
-5634 354 0
-5635 355 0
c (variant_fields_00003_00006_00007=field_00006_00003)
-4412 707 0
-4413 708 0
-4414 709 0
-4415 710 0
-4416 711 0
-4417 712 0
-4418 713 0
-4419 714 0
-4420 715 0
-707 4412 0
-708 4413 0
-709 4414 0
-710 4415 0
-711 4416 0
-712 4417 0
-713 4418 0
-714 4419 0
-715 4420 0
c (variant_fields_00001_00006_00007=field_00006_00007)
-1982 767 0
-1983 768 0
-1984 769 0
-1985 770 0
-1986 771 0
-1987 772 0
-1988 773 0
-1989 774 0
-1990 775 0
-767 1982 0
-768 1983 0
-769 1984 0
-770 1985 0
-771 1986 0
-772 1987 0
-773 1988 0
-774 1989 0
-775 1990 0
c (variant_fields_00002_00006_00007=field_00007_00006)
-3197 887 0
-3198 888 0
-3199 889 0
-3200 890 0
-3201 891 0
-3202 892 0
-3203 893 0
-3204 894 0
-3205 895 0
-887 3197 0
-888 3198 0
-889 3199 0
-890 3200 0
-891 3201 0
-892 3202 0
-893 3203 0
-894 3204 0
-895 3205 0
c (field_00002_00006=variant_fields_00004_00006_00008)
-212 5642 0
-213 5643 0
-214 5644 0
-215 5645 0
-216 5646 0
-217 5647 0
-218 5648 0
-219 5649 0
-220 5650 0
-5642 212 0
-5643 213 0
-5644 214 0
-5645 215 0
-5646 216 0
-5647 217 0
-5648 218 0
-5649 219 0
-5650 220 0
c (variant_fields_00003_00006_00008=field_00006_00002)
-4427 692 0
-4428 693 0
-4429 694 0
-4430 695 0
-4431 696 0
-4432 697 0
-4433 698 0
-4434 699 0
-4435 700 0
-692 4427 0
-693 4428 0
-694 4429 0
-695 4430 0
-696 4431 0
-697 4432 0
-698 4433 0
-699 4434 0
-700 4435 0
c (variant_fields_00001_00006_00008=field_00006_00008)
-1997 782 0
-1998 783 0
-1999 784 0
-2000 785 0
-2001 786 0
-2002 787 0
-2003 788 0
-2004 789 0
-2005 790 0
-782 1997 0
-783 1998 0
-784 1999 0
-785 2000 0
-786 2001 0
-787 2002 0
-788 2003 0
-789 2004 0
-790 2005 0
c (variant_fields_00002_00006_00008=field_00008_00006)
-3212 1022 0
-3213 1023 0
-3214 1024 0
-3215 1025 0
-3216 1026 0
-3217 1027 0
-3218 1028 0
-3219 1029 0
-3220 1030 0
-1022 3212 0
-1023 3213 0
-1024 3214 0
-1025 3215 0
-1026 3216 0
-1027 3217 0
-1028 3218 0
-1029 3219 0
-1030 3220 0
c (field_00001_00006=variant_fields_00004_00006_00009)
-77 5657 0
-78 5658 0
-79 5659 0
-80 5660 0
-81 5661 0
-82 5662 0
-83 5663 0
-84 5664 0
-85 5665 0
-5657 77 0
-5658 78 0
-5659 79 0
-5660 80 0
-5661 81 0
-5662 82 0
-5663 83 0
-5664 84 0
-5665 85 0
c (variant_fields_00003_00006_00009=field_00006_00001)
-4442 677 0
-4443 678 0
-4444 679 0
-4445 680 0
-4446 681 0
-4447 682 0
-4448 683 0
-4449 684 0
-4450 685 0
-677 4442 0
-678 4443 0
-679 4444 0
-680 4445 0
-681 4446 0
-682 4447 0
-683 4448 0
-684 4449 0
-685 4450 0
c (variant_fields_00001_00006_00009=field_00006_00009)
-2012 797 0
-2013 798 0
-2014 799 0
-2015 800 0
-2016 801 0
-2017 802 0
-2018 803 0
-2019 804 0
-2020 805 0
-797 2012 0
-798 2013 0
-799 2014 0
-800 2015 0
-801 2016 0
-802 2017 0
-803 2018 0
-804 2019 0
-805 2020 0
c (variant_fields_00002_00006_00009=field_00009_00006)
-3227 1157 0
-3228 1158 0
-3229 1159 0
-3230 1160 0
-3231 1161 0
-3232 1162 0
-3233 1163 0
-3234 1164 0
-3235 1165 0
-1157 3227 0
-1158 3228 0
-1159 3229 0
-1160 3230 0
-1161 3231 0
-1162 3232 0
-1163 3233 0
-1164 3234 0
-1165 3235 0
c (variant_fields_00004_00007_00001=field_00009_00007)
-5672 1172 0
-5674 1173 0
-5676 1174 0
-5678 1175 0
-5680 1176 0
-5682 1177 0
-5684 1178 0
-5686 1179 0
5685 1180 0
-1172 5672 0
-1173 5674 0
-1174 5676 0
-1175 5678 0
-1176 5680 0
-1177 5682 0
-1178 5684 0
-1179 5686 0
-1180 -5685 0
c (variant_fields_00003_00007_00001=field_00007_00009)
-4457 932 0
-4458 933 0
-4459 934 0
-4460 935 0
-4461 936 0
-4462 937 0
-4463 938 0
-4464 939 0
-4465 940 0
-932 4457 0
-933 4458 0
-934 4459 0
-935 4460 0
-936 4461 0
-937 4462 0
-938 4463 0
-939 4464 0
-940 4465 0
c (variant_fields_00001_00007_00001=field_00007_00001)
-2027 812 0
-2028 813 0
-2029 814 0
-2030 815 0
-2031 816 0
-2032 817 0
-2033 818 0
-2034 819 0
-2035 820 0
-812 2027 0
-813 2028 0
-814 2029 0
-815 2030 0
-816 2031 0
-817 2032 0
-818 2033 0
-819 2034 0
-820 2035 0
c (variant_fields_00002_00007_00001=field_00001_00007)
-3242 92 0
-3244 93 0
-3246 94 0
-3248 95 0
-3250 96 0
-3252 97 0
-3254 98 0
-3256 99 0
3255 100 0
-92 3242 0
-93 3244 0
-94 3246 0
-95 3248 0
-96 3250 0
-97 3252 0
-98 3254 0
-99 3256 0
-100 -3255 0
c (field_00008_00007=variant_fields_00004_00007_00002)
-1037 5687 0
-1038 5688 0
-1039 5689 0
-1040 5690 0
-1041 5691 0
-1042 5692 0
-1043 5693 0
-1044 5694 0
-1045 5695 0
-5687 1037 0
-5688 1038 0
-5689 1039 0
-5690 1040 0
-5691 1041 0
-5692 1042 0
-5693 1043 0
-5694 1044 0
-5695 1045 0
c (variant_fields_00003_00007_00002=field_00007_00008)
-4472 917 0
-4473 918 0
-4474 919 0
-4475 920 0
-4476 921 0
-4477 922 0
-4478 923 0
-4479 924 0
-4480 925 0
-917 4472 0
-918 4473 0
-919 4474 0
-920 4475 0
-921 4476 0
-922 4477 0
-923 4478 0
-924 4479 0
-925 4480 0
c (variant_fields_00001_00007_00002=field_00007_00002)
-2042 827 0
-2043 828 0
-2044 829 0
-2045 830 0
-2046 831 0
-2047 832 0
-2048 833 0
-2049 834 0
-2050 835 0
-827 2042 0
-828 2043 0
-829 2044 0
-830 2045 0
-831 2046 0
-832 2047 0
-833 2048 0
-834 2049 0
-835 2050 0
c (variant_fields_00002_00007_00002=field_00002_00007)
-3257 227 0
-3258 228 0
-3259 229 0
-3260 230 0
-3261 231 0
-3262 232 0
-3263 233 0
-3264 234 0
-3265 235 0
-227 3257 0
-228 3258 0
-229 3259 0
-230 3260 0
-231 3261 0
-232 3262 0
-233 3263 0
-234 3264 0
-235 3265 0
c (variant_fields_00004_00007_00003=field_00007_00007)
-5702 902 0
-5703 903 0
-5704 904 0
-5705 905 0
-5706 906 0
-5707 907 0
-5708 908 0
-5709 909 0
-5710 910 0
-902 5702 0
-903 5703 0
-904 5704 0
-905 5705 0
-906 5706 0
-907 5707 0
-908 5708 0
-909 5709 0
-910 5710 0
c (variant_fields_00003_00007_00003=field_00007_00007)
-4487 902 0
-4488 903 0
-4489 904 0
-4490 905 0
-4491 906 0
-4492 907 0
-4493 908 0
-4494 909 0
-4495 910 0
-902 4487 0
-903 4488 0
-904 4489 0
-905 4490 0
-906 4491 0
-907 4492 0
-908 4493 0
-909 4494 0
-910 4495 0
c (variant_fields_00001_00007_00003=field_00007_00003)
-2057 842 0
-2058 843 0
-2059 844 0
-2060 845 0
-2061 846 0
-2062 847 0
-2063 848 0
-2064 849 0
-2065 850 0
-842 2057 0
-843 2058 0
-844 2059 0
-845 2060 0
-846 2061 0
-847 2062 0
-848 2063 0
-849 2064 0
-850 2065 0
c (field_00003_00007=variant_fields_00002_00007_00003)
-362 3272 0
-363 3273 0
-364 3274 0
-365 3275 0
-366 3276 0
-367 3277 0
-368 3278 0
-369 3279 0
-370 3280 0
-3272 362 0
-3273 363 0
-3274 364 0
-3275 365 0
-3276 366 0
-3277 367 0
-3278 368 0
-3279 369 0
-3280 370 0
c (variant_fields_00004_00007_00004=field_00006_00007)
-5717 767 0
-5718 768 0
-5719 769 0
-5720 770 0
-5721 771 0
-5722 772 0
-5723 773 0
-5724 774 0
-5725 775 0
-767 5717 0
-768 5718 0
-769 5719 0
-770 5720 0
-771 5721 0
-772 5722 0
-773 5723 0
-774 5724 0
-775 5725 0
c (variant_fields_00003_00007_00004=field_00007_00006)
-4502 887 0
-4503 888 0
-4504 889 0
-4505 890 0
-4506 891 0
-4507 892 0
-4508 893 0
-4509 894 0
-4510 895 0
-887 4502 0
-888 4503 0
-889 4504 0
-890 4505 0
-891 4506 0
-892 4507 0
-893 4508 0
-894 4509 0
-895 4510 0
c (variant_fields_00001_00007_00004=field_00007_00004)
-2072 857 0
-2073 858 0
-2074 859 0
-2075 860 0
-2076 861 0
-2077 862 0
-2078 863 0
-2079 864 0
-2080 865 0
-857 2072 0
-858 2073 0
-859 2074 0
-860 2075 0
-861 2076 0
-862 2077 0
-863 2078 0
-864 2079 0
-865 2080 0
c (field_00004_00007=variant_fields_00002_00007_00004)
-497 3287 0
-498 3288 0
-499 3289 0
-500 3290 0
-501 3291 0
-502 3292 0
-503 3293 0
-504 3294 0
-505 3295 0
-3287 497 0
-3288 498 0
-3289 499 0
-3290 500 0
-3291 501 0
-3292 502 0
-3293 503 0
-3294 504 0
-3295 505 0
c (variant_fields_00004_00007_00005=field_00005_00007)
-5732 632 0
-5733 633 0
-5734 634 0
-5735 635 0
-5736 636 0
-5737 637 0
-5738 638 0
-5739 639 0
-5740 640 0
-632 5732 0
-633 5733 0
-634 5734 0
-635 5735 0
-636 5736 0
-637 5737 0
-638 5738 0
-639 5739 0
-640 5740 0
c (variant_fields_00003_00007_00005=field_00007_00005)
-4517 872 0
-4518 873 0
-4519 874 0
-4520 875 0
-4521 876 0
-4522 877 0
-4523 878 0
-4524 879 0
-4525 880 0
-872 4517 0
-873 4518 0
-874 4519 0
-875 4520 0
-876 4521 0
-877 4522 0
-878 4523 0
-879 4524 0
-880 4525 0
c (variant_fields_00001_00007_00005=field_00007_00005)
-2087 872 0
-2088 873 0
-2089 874 0
-2090 875 0
-2091 876 0
-2092 877 0
-2093 878 0
-2094 879 0
-2095 880 0
-872 2087 0
-873 2088 0
-874 2089 0
-875 2090 0
-876 2091 0
-877 2092 0
-878 2093 0
-879 2094 0
-880 2095 0
c (variant_fields_00002_00007_00005=field_00005_00007)
-3302 632 0
-3303 633 0
-3304 634 0
-3305 635 0
-3306 636 0
-3307 637 0
-3308 638 0
-3309 639 0
-3310 640 0
-632 3302 0
-633 3303 0
-634 3304 0
-635 3305 0
-636 3306 0
-637 3307 0
-638 3308 0
-639 3309 0
-640 3310 0
c (variant_fields_00004_00007_00006=field_00004_00007)
-5747 497 0
-5748 498 0
-5749 499 0
-5750 500 0
-5751 501 0
-5752 502 0
-5753 503 0
-5754 504 0
-5755 505 0
-497 5747 0
-498 5748 0
-499 5749 0
-500 5750 0
-501 5751 0
-502 5752 0
-503 5753 0
-504 5754 0
-505 5755 0
c (variant_fields_00003_00007_00006=field_00007_00004)
-4532 857 0
-4533 858 0
-4534 859 0
-4535 860 0
-4536 861 0
-4537 862 0
-4538 863 0
-4539 864 0
-4540 865 0
-857 4532 0
-858 4533 0
-859 4534 0
-860 4535 0
-861 4536 0
-862 4537 0
-863 4538 0
-864 4539 0
-865 4540 0
c (variant_fields_00001_00007_00006=field_00007_00006)
-2102 887 0
-2103 888 0
-2104 889 0
-2105 890 0
-2106 891 0
-2107 892 0
-2108 893 0
-2109 894 0
-2110 895 0
-887 2102 0
-888 2103 0
-889 2104 0
-890 2105 0
-891 2106 0
-892 2107 0
-893 2108 0
-894 2109 0
-895 2110 0
c (variant_fields_00002_00007_00006=field_00006_00007)
-3317 767 0
-3318 768 0
-3319 769 0
-3320 770 0
-3321 771 0
-3322 772 0
-3323 773 0
-3324 774 0
-3325 775 0
-767 3317 0
-768 3318 0
-769 3319 0
-770 3320 0
-771 3321 0
-772 3322 0
-773 3323 0
-774 3324 0
-775 3325 0
c (field_00003_00007=variant_fields_00004_00007_00007)
-362 5762 0
-363 5763 0
-364 5764 0
-365 5765 0
-366 5766 0
-367 5767 0
-368 5768 0
-369 5769 0
-370 5770 0
-5762 362 0
-5763 363 0
-5764 364 0
-5765 365 0
-5766 366 0
-5767 367 0
-5768 368 0
-5769 369 0
-5770 370 0
c (variant_fields_00003_00007_00007=field_00007_00003)
-4547 842 0
-4548 843 0
-4549 844 0
-4550 845 0
-4551 846 0
-4552 847 0
-4553 848 0
-4554 849 0
-4555 850 0
-842 4547 0
-843 4548 0
-844 4549 0
-845 4550 0
-846 4551 0
-847 4552 0
-848 4553 0
-849 4554 0
-850 4555 0
c (variant_fields_00001_00007_00007=field_00007_00007)
-2117 902 0
-2118 903 0
-2119 904 0
-2120 905 0
-2121 906 0
-2122 907 0
-2123 908 0
-2124 909 0
-2125 910 0
-902 2117 0
-903 2118 0
-904 2119 0
-905 2120 0
-906 2121 0
-907 2122 0
-908 2123 0
-909 2124 0
-910 2125 0
c (variant_fields_00002_00007_00007=field_00007_00007)
-3332 902 0
-3333 903 0
-3334 904 0
-3335 905 0
-3336 906 0
-3337 907 0
-3338 908 0
-3339 909 0
-3340 910 0
-902 3332 0
-903 3333 0
-904 3334 0
-905 3335 0
-906 3336 0
-907 3337 0
-908 3338 0
-909 3339 0
-910 3340 0
c (variant_fields_00004_00007_00008=field_00002_00007)
-5777 227 0
-5778 228 0
-5779 229 0
-5780 230 0
-5781 231 0
-5782 232 0
-5783 233 0
-5784 234 0
-5785 235 0
-227 5777 0
-228 5778 0
-229 5779 0
-230 5780 0
-231 5781 0
-232 5782 0
-233 5783 0
-234 5784 0
-235 5785 0
c (variant_fields_00003_00007_00008=field_00007_00002)
-4562 827 0
-4563 828 0
-4564 829 0
-4565 830 0
-4566 831 0
-4567 832 0
-4568 833 0
-4569 834 0
-4570 835 0
-827 4562 0
-828 4563 0
-829 4564 0
-830 4565 0
-831 4566 0
-832 4567 0
-833 4568 0
-834 4569 0
-835 4570 0
c (variant_fields_00001_00007_00008=field_00007_00008)
-2132 917 0
-2133 918 0
-2134 919 0
-2135 920 0
-2136 921 0
-2137 922 0
-2138 923 0
-2139 924 0
-2140 925 0
-917 2132 0
-918 2133 0
-919 2134 0
-920 2135 0
-921 2136 0
-922 2137 0
-923 2138 0
-924 2139 0
-925 2140 0
c (field_00008_00007=variant_fields_00002_00007_00008)
-1037 3347 0
-1038 3348 0
-1039 3349 0
-1040 3350 0
-1041 3351 0
-1042 3352 0
-1043 3353 0
-1044 3354 0
-1045 3355 0
-3347 1037 0
-3348 1038 0
-3349 1039 0
-3350 1040 0
-3351 1041 0
-3352 1042 0
-3353 1043 0
-3354 1044 0
-3355 1045 0
c (variant_fields_00004_00007_00009=field_00001_00007)
-5792 92 0
-5793 93 0
-5794 94 0
-5795 95 0
-5796 96 0
-5797 97 0
-5798 98 0
-5799 99 0
-5800 100 0
-92 5792 0
-93 5793 0
-94 5794 0
-95 5795 0
-96 5796 0
-97 5797 0
-98 5798 0
-99 5799 0
-100 5800 0
c (variant_fields_00003_00007_00009=field_00007_00001)
-4577 812 0
-4578 813 0
-4579 814 0
-4580 815 0
-4581 816 0
-4582 817 0
-4583 818 0
-4584 819 0
-4585 820 0
-812 4577 0
-813 4578 0
-814 4579 0
-815 4580 0
-816 4581 0
-817 4582 0
-818 4583 0
-819 4584 0
-820 4585 0
c (variant_fields_00001_00007_00009=field_00007_00009)
-2147 932 0
-2148 933 0
-2149 934 0
-2150 935 0
-2151 936 0
-2152 937 0
-2153 938 0
-2154 939 0
-2155 940 0
-932 2147 0
-933 2148 0
-934 2149 0
-935 2150 0
-936 2151 0
-937 2152 0
-938 2153 0
-939 2154 0
-940 2155 0
c (variant_fields_00002_00007_00009=field_00009_00007)
-3362 1172 0
-3363 1173 0
-3364 1174 0
-3365 1175 0
-3366 1176 0
-3367 1177 0
-3368 1178 0
-3369 1179 0
-3370 1180 0
-1172 3362 0
-1173 3363 0
-1174 3364 0
-1175 3365 0
-1176 3366 0
-1177 3367 0
-1178 3368 0
-1179 3369 0
-1180 3370 0
c (field_00009_00008=variant_fields_00004_00008_00001)
-1187 5807 0
-1188 5808 0
-1189 5809 0
-1190 5810 0
-1191 5811 0
-1192 5812 0
-1193 5813 0
-1194 5814 0
-1195 5815 0
-5807 1187 0
-5808 1188 0
-5809 1189 0
-5810 1190 0
-5811 1191 0
-5812 1192 0
-5813 1193 0
-5814 1194 0
-5815 1195 0
c (field_00008_00009=variant_fields_00003_00008_00001)
-1067 4592 0
-1068 4594 0
-1069 4596 0
-1070 4598 0
-1071 4600 0
-1072 4602 0
-1073 4604 0
-1074 4606 0
-1075 -4605 0
-4592 1067 0
-4594 1068 0
-4596 1069 0
-4598 1070 0
-4600 1071 0
-4602 1072 0
-4604 1073 0
-4606 1074 0
4605 1075 0
c (field_00008_00001=variant_fields_00001_00008_00001)
-947 2162 0
-948 2164 0
-949 2166 0
-950 2168 0
-951 2170 0
-952 2172 0
-953 2174 0
-954 2176 0
-955 -2175 0
-2162 947 0
-2164 948 0
-2166 949 0
-2168 950 0
-2170 951 0
-2172 952 0
-2174 953 0
-2176 954 0
2175 955 0
c (variant_fields_00002_00008_00001=field_00001_00008)
-3377 107 0
-3378 108 0
-3379 109 0
-3380 110 0
-3381 111 0
-3382 112 0
-3383 113 0
-3384 114 0
-3385 115 0
-107 3377 0
-108 3378 0
-109 3379 0
-110 3380 0
-111 3381 0
-112 3382 0
-113 3383 0
-114 3384 0
-115 3385 0
c (field_00008_00008=variant_fields_00004_00008_00002)
-1052 5822 0
-1053 5823 0
-1054 5824 0
-1055 5825 0
-1056 5826 0
-1057 5827 0
-1058 5828 0
-1059 5829 0
-1060 5830 0
-5822 1052 0
-5823 1053 0
-5824 1054 0
-5825 1055 0
-5826 1056 0
-5827 1057 0
-5828 1058 0
-5829 1059 0
-5830 1060 0
c (field_00008_00008=variant_fields_00003_00008_00002)
-1052 4607 0
-1053 4608 0
-1054 4609 0
-1055 4610 0
-1056 4611 0
-1057 4612 0
-1058 4613 0
-1059 4614 0
-1060 4615 0
-4607 1052 0
-4608 1053 0
-4609 1054 0
-4610 1055 0
-4611 1056 0
-4612 1057 0
-4613 1058 0
-4614 1059 0
-4615 1060 0
c (field_00008_00002=variant_fields_00001_00008_00002)
-962 2177 0
-963 2178 0
-964 2179 0
-965 2180 0
-966 2181 0
-967 2182 0
-968 2183 0
-969 2184 0
-970 2185 0
-2177 962 0
-2178 963 0
-2179 964 0
-2180 965 0
-2181 966 0
-2182 967 0
-2183 968 0
-2184 969 0
-2185 970 0
c (variant_fields_00002_00008_00002=field_00002_00008)
-3392 242 0
-3393 243 0
-3394 244 0
-3395 245 0
-3396 246 0
-3397 247 0
-3398 248 0
-3399 249 0
-3400 250 0
-242 3392 0
-243 3393 0
-244 3394 0
-245 3395 0
-246 3396 0
-247 3397 0
-248 3398 0
-249 3399 0
-250 3400 0
c (variant_fields_00004_00008_00003=field_00007_00008)
-5837 917 0
-5838 918 0
-5839 919 0
-5840 920 0
-5841 921 0
-5842 922 0
-5843 923 0
-5844 924 0
-5845 925 0
-917 5837 0
-918 5838 0
-919 5839 0
-920 5840 0
-921 5841 0
-922 5842 0
-923 5843 0
-924 5844 0
-925 5845 0
c (field_00008_00007=variant_fields_00003_00008_00003)
-1037 4622 0
-1038 4623 0
-1039 4624 0
-1040 4625 0
-1041 4626 0
-1042 4627 0
-1043 4628 0
-1044 4629 0
-1045 4630 0
-4622 1037 0
-4623 1038 0
-4624 1039 0
-4625 1040 0
-4626 1041 0
-4627 1042 0
-4628 1043 0
-4629 1044 0
-4630 1045 0
c (field_00008_00003=variant_fields_00001_00008_00003)
-977 2192 0
-978 2193 0
-979 2194 0
-980 2195 0
-981 2196 0
-982 2197 0
-983 2198 0
-984 2199 0
-985 2200 0
-2192 977 0
-2193 978 0
-2194 979 0
-2195 980 0
-2196 981 0
-2197 982 0
-2198 983 0
-2199 984 0
-2200 985 0
c (field_00003_00008=variant_fields_00002_00008_00003)
-377 3407 0
-378 3408 0
-379 3409 0
-380 3410 0
-381 3411 0
-382 3412 0
-383 3413 0
-384 3414 0
-385 3415 0
-3407 377 0
-3408 378 0
-3409 379 0
-3410 380 0
-3411 381 0
-3412 382 0
-3413 383 0
-3414 384 0
-3415 385 0
c (variant_fields_00004_00008_00004=field_00006_00008)
-5852 782 0
-5853 783 0
-5854 784 0
-5855 785 0
-5856 786 0
-5857 787 0
-5858 788 0
-5859 789 0
-5860 790 0
-782 5852 0
-783 5853 0
-784 5854 0
-785 5855 0
-786 5856 0
-787 5857 0
-788 5858 0
-789 5859 0
-790 5860 0
c (field_00008_00006=variant_fields_00003_00008_00004)
-1022 4637 0
-1023 4638 0
-1024 4639 0
-1025 4640 0
-1026 4641 0
-1027 4642 0
-1028 4643 0
-1029 4644 0
-1030 4645 0
-4637 1022 0
-4638 1023 0
-4639 1024 0
-4640 1025 0
-4641 1026 0
-4642 1027 0
-4643 1028 0
-4644 1029 0
-4645 1030 0
c (field_00008_00004=variant_fields_00001_00008_00004)
-992 2207 0
-993 2208 0
-994 2209 0
-995 2210 0
-996 2211 0
-997 2212 0
-998 2213 0
-999 2214 0
-1000 2215 0
-2207 992 0
-2208 993 0
-2209 994 0
-2210 995 0
-2211 996 0
-2212 997 0
-2213 998 0
-2214 999 0
-2215 1000 0
c (field_00004_00008=variant_fields_00002_00008_00004)
-512 3422 0
-513 3423 0
-514 3424 0
-515 3425 0
-516 3426 0
-517 3427 0
-518 3428 0
-519 3429 0
-520 3430 0
-3422 512 0
-3423 513 0
-3424 514 0
-3425 515 0
-3426 516 0
-3427 517 0
-3428 518 0
-3429 519 0
-3430 520 0
c (variant_fields_00004_00008_00005=field_00005_00008)
-5867 647 0
-5868 648 0
-5869 649 0
-5870 650 0
-5871 651 0
-5872 652 0
-5873 653 0
-5874 654 0
-5875 655 0
-647 5867 0
-648 5868 0
-649 5869 0
-650 5870 0
-651 5871 0
-652 5872 0
-653 5873 0
-654 5874 0
-655 5875 0
c (field_00008_00005=variant_fields_00003_00008_00005)
-1007 4652 0
-1008 4653 0
-1009 4654 0
-1010 4655 0
-1011 4656 0
-1012 4657 0
-1013 4658 0
-1014 4659 0
-1015 4660 0
-4652 1007 0
-4653 1008 0
-4654 1009 0
-4655 1010 0
-4656 1011 0
-4657 1012 0
-4658 1013 0
-4659 1014 0
-4660 1015 0
c (field_00008_00005=variant_fields_00001_00008_00005)
-1007 2222 0
-1008 2223 0
-1009 2224 0
-1010 2225 0
-1011 2226 0
-1012 2227 0
-1013 2228 0
-1014 2229 0
-1015 2230 0
-2222 1007 0
-2223 1008 0
-2224 1009 0
-2225 1010 0
-2226 1011 0
-2227 1012 0
-2228 1013 0
-2229 1014 0
-2230 1015 0
c (field_00005_00008=variant_fields_00002_00008_00005)
-647 3437 0
-648 3438 0
-649 3439 0
-650 3440 0
-651 3441 0
-652 3442 0
-653 3443 0
-654 3444 0
-655 3445 0
-3437 647 0
-3438 648 0
-3439 649 0
-3440 650 0
-3441 651 0
-3442 652 0
-3443 653 0
-3444 654 0
-3445 655 0
c (field_00004_00008=variant_fields_00004_00008_00006)
-512 5882 0
-513 5883 0
-514 5884 0
-515 5885 0
-516 5886 0
-517 5887 0
-518 5888 0
-519 5889 0
-520 5890 0
-5882 512 0
-5883 513 0
-5884 514 0
-5885 515 0
-5886 516 0
-5887 517 0
-5888 518 0
-5889 519 0
-5890 520 0
c (field_00008_00004=variant_fields_00003_00008_00006)
-992 4667 0
-993 4668 0
-994 4669 0
-995 4670 0
-996 4671 0
-997 4672 0
-998 4673 0
-999 4674 0
-1000 4675 0
-4667 992 0
-4668 993 0
-4669 994 0
-4670 995 0
-4671 996 0
-4672 997 0
-4673 998 0
-4674 999 0
-4675 1000 0
c (field_00008_00006=variant_fields_00001_00008_00006)
-1022 2237 0
-1023 2238 0
-1024 2239 0
-1025 2240 0
-1026 2241 0
-1027 2242 0
-1028 2243 0
-1029 2244 0
-1030 2245 0
-2237 1022 0
-2238 1023 0
-2239 1024 0
-2240 1025 0
-2241 1026 0
-2242 1027 0
-2243 1028 0
-2244 1029 0
-2245 1030 0
c (variant_fields_00002_00008_00006=field_00006_00008)
-3452 782 0
-3453 783 0
-3454 784 0
-3455 785 0
-3456 786 0
-3457 787 0
-3458 788 0
-3459 789 0
-3460 790 0
-782 3452 0
-783 3453 0
-784 3454 0
-785 3455 0
-786 3456 0
-787 3457 0
-788 3458 0
-789 3459 0
-790 3460 0
c (field_00003_00008=variant_fields_00004_00008_00007)
-377 5897 0
-378 5898 0
-379 5899 0
-380 5900 0
-381 5901 0
-382 5902 0
-383 5903 0
-384 5904 0
-385 5905 0
-5897 377 0
-5898 378 0
-5899 379 0
-5900 380 0
-5901 381 0
-5902 382 0
-5903 383 0
-5904 384 0
-5905 385 0
c (field_00008_00003=variant_fields_00003_00008_00007)
-977 4682 0
-978 4683 0
-979 4684 0
-980 4685 0
-981 4686 0
-982 4687 0
-983 4688 0
-984 4689 0
-985 4690 0
-4682 977 0
-4683 978 0
-4684 979 0
-4685 980 0
-4686 981 0
-4687 982 0
-4688 983 0
-4689 984 0
-4690 985 0
c (field_00008_00007=variant_fields_00001_00008_00007)
-1037 2252 0
-1038 2253 0
-1039 2254 0
-1040 2255 0
-1041 2256 0
-1042 2257 0
-1043 2258 0
-1044 2259 0
-1045 2260 0
-2252 1037 0
-2253 1038 0
-2254 1039 0
-2255 1040 0
-2256 1041 0
-2257 1042 0
-2258 1043 0
-2259 1044 0
-2260 1045 0
c (variant_fields_00002_00008_00007=field_00007_00008)
-3467 917 0
-3468 918 0
-3469 919 0
-3470 920 0
-3471 921 0
-3472 922 0
-3473 923 0
-3474 924 0
-3475 925 0
-917 3467 0
-918 3468 0
-919 3469 0
-920 3470 0
-921 3471 0
-922 3472 0
-923 3473 0
-924 3474 0
-925 3475 0
c (variant_fields_00004_00008_00008=field_00002_00008)
-5912 242 0
-5913 243 0
-5914 244 0
-5915 245 0
-5916 246 0
-5917 247 0
-5918 248 0
-5919 249 0
-5920 250 0
-242 5912 0
-243 5913 0
-244 5914 0
-245 5915 0
-246 5916 0
-247 5917 0
-248 5918 0
-249 5919 0
-250 5920 0
c (field_00008_00002=variant_fields_00003_00008_00008)
-962 4697 0
-963 4698 0
-964 4699 0
-965 4700 0
-966 4701 0
-967 4702 0
-968 4703 0
-969 4704 0
-970 4705 0
-4697 962 0
-4698 963 0
-4699 964 0
-4700 965 0
-4701 966 0
-4702 967 0
-4703 968 0
-4704 969 0
-4705 970 0
c (field_00008_00008=variant_fields_00001_00008_00008)
-1052 2267 0
-1053 2268 0
-1054 2269 0
-1055 2270 0
-1056 2271 0
-1057 2272 0
-1058 2273 0
-1059 2274 0
-1060 2275 0
-2267 1052 0
-2268 1053 0
-2269 1054 0
-2270 1055 0
-2271 1056 0
-2272 1057 0
-2273 1058 0
-2274 1059 0
-2275 1060 0
c (field_00008_00008=variant_fields_00002_00008_00008)
-1052 3482 0
-1053 3483 0
-1054 3484 0
-1055 3485 0
-1056 3486 0
-1057 3487 0
-1058 3488 0
-1059 3489 0
-1060 3490 0
-3482 1052 0
-3483 1053 0
-3484 1054 0
-3485 1055 0
-3486 1056 0
-3487 1057 0
-3488 1058 0
-3489 1059 0
-3490 1060 0
c (variant_fields_00004_00008_00009=field_00001_00008)
-5927 107 0
-5928 108 0
-5929 109 0
-5930 110 0
-5931 111 0
-5932 112 0
-5933 113 0
-5934 114 0
-5935 115 0
-107 5927 0
-108 5928 0
-109 5929 0
-110 5930 0
-111 5931 0
-112 5932 0
-113 5933 0
-114 5934 0
-115 5935 0
c (field_00008_00001=variant_fields_00003_00008_00009)
-947 4712 0
-948 4713 0
-949 4714 0
-950 4715 0
-951 4716 0
-952 4717 0
-953 4718 0
-954 4719 0
-955 4720 0
-4712 947 0
-4713 948 0
-4714 949 0
-4715 950 0
-4716 951 0
-4717 952 0
-4718 953 0
-4719 954 0
-4720 955 0
c (field_00008_00009=variant_fields_00001_00008_00009)
-1067 2282 0
-1068 2283 0
-1069 2284 0
-1070 2285 0
-1071 2286 0
-1072 2287 0
-1073 2288 0
-1074 2289 0
-1075 2290 0
-2282 1067 0
-2283 1068 0
-2284 1069 0
-2285 1070 0
-2286 1071 0
-2287 1072 0
-2288 1073 0
-2289 1074 0
-2290 1075 0
c (field_00009_00008=variant_fields_00002_00008_00009)
-1187 3497 0
-1188 3498 0
-1189 3499 0
-1190 3500 0
-1191 3501 0
-1192 3502 0
-1193 3503 0
-1194 3504 0
-1195 3505 0
-3497 1187 0
-3498 1188 0
-3499 1189 0
-3500 1190 0
-3501 1191 0
-3502 1192 0
-3503 1193 0
-3504 1194 0
-3505 1195 0
c (field_00009_00009=variant_fields_00004_00009_00001)
-1202 5942 0
-1203 5943 0
-1204 5944 0
-1205 5945 0
-1206 5946 0
-1207 5947 0
-1208 5948 0
-1209 5949 0
-1210 5950 0
-5942 1202 0
-5943 1203 0
-5944 1204 0
-5945 1205 0
-5946 1206 0
-5947 1207 0
-5948 1208 0
-5949 1209 0
-5950 1210 0
c (field_00009_00009=variant_fields_00003_00009_00001)
-1202 4727 0
-1203 4728 0
-1204 4729 0
-1205 4730 0
-1206 4731 0
-1207 4732 0
-1208 4733 0
-1209 4734 0
-1210 4735 0
-4727 1202 0
-4728 1203 0
-4729 1204 0
-4730 1205 0
-4731 1206 0
-4732 1207 0
-4733 1208 0
-4734 1209 0
-4735 1210 0
c (field_00009_00001=variant_fields_00001_00009_00001)
-1082 2297 0
-1083 2298 0
-1084 2299 0
-1085 2300 0
-1086 2301 0
-1087 2302 0
-1088 2303 0
-1089 2304 0
-1090 2305 0
-2297 1082 0
-2298 1083 0
-2299 1084 0
-2300 1085 0
-2301 1086 0
-2302 1087 0
-2303 1088 0
-2304 1089 0
-2305 1090 0
c (field_00001_00009=variant_fields_00002_00009_00001)
-122 3512 0
-123 3513 0
-124 3514 0
-125 3515 0
-126 3516 0
-127 3517 0
-128 3518 0
-129 3519 0
-130 3520 0
-3512 122 0
-3513 123 0
-3514 124 0
-3515 125 0
-3516 126 0
-3517 127 0
-3518 128 0
-3519 129 0
-3520 130 0
c (field_00008_00009=variant_fields_00004_00009_00002)
-1067 5957 0
-1068 5958 0
-1069 5959 0
-1070 5960 0
-1071 5961 0
-1072 5962 0
-1073 5963 0
-1074 5964 0
-1075 5965 0
-5957 1067 0
-5958 1068 0
-5959 1069 0
-5960 1070 0
-5961 1071 0
-5962 1072 0
-5963 1073 0
-5964 1074 0
-5965 1075 0
c (field_00009_00008=variant_fields_00003_00009_00002)
-1187 4742 0
-1188 4743 0
-1189 4744 0
-1190 4745 0
-1191 4746 0
-1192 4747 0
-1193 4748 0
-1194 4749 0
-1195 4750 0
-4742 1187 0
-4743 1188 0
-4744 1189 0
-4745 1190 0
-4746 1191 0
-4747 1192 0
-4748 1193 0
-4749 1194 0
-4750 1195 0
c (field_00009_00002=variant_fields_00001_00009_00002)
-1097 2312 0
-1098 2313 0
-1099 2314 0
-1100 2315 0
-1101 2316 0
-1102 2317 0
-1103 2318 0
-1104 2319 0
-1105 2320 0
-2312 1097 0
-2313 1098 0
-2314 1099 0
-2315 1100 0
-2316 1101 0
-2317 1102 0
-2318 1103 0
-2319 1104 0
-2320 1105 0
c (variant_fields_00002_00009_00002=field_00002_00009)
-3527 257 0
-3528 258 0
-3529 259 0
-3530 260 0
-3531 261 0
-3532 262 0
-3533 263 0
-3534 264 0
-3535 265 0
-257 3527 0
-258 3528 0
-259 3529 0
-260 3530 0
-261 3531 0
-262 3532 0
-263 3533 0
-264 3534 0
-265 3535 0
c (variant_fields_00004_00009_00003=field_00007_00009)
-5972 932 0
-5973 933 0
-5974 934 0
-5975 935 0
-5976 936 0
-5977 937 0
-5978 938 0
-5979 939 0
-5980 940 0
-932 5972 0
-933 5973 0
-934 5974 0
-935 5975 0
-936 5976 0
-937 5977 0
-938 5978 0
-939 5979 0
-940 5980 0
c (field_00009_00007=variant_fields_00003_00009_00003)
-1172 4757 0
-1173 4758 0
-1174 4759 0
-1175 4760 0
-1176 4761 0
-1177 4762 0
-1178 4763 0
-1179 4764 0
-1180 4765 0
-4757 1172 0
-4758 1173 0
-4759 1174 0
-4760 1175 0
-4761 1176 0
-4762 1177 0
-4763 1178 0
-4764 1179 0
-4765 1180 0
c (field_00009_00003=variant_fields_00001_00009_00003)
-1112 2327 0
-1113 2328 0
-1114 2329 0
-1115 2330 0
-1116 2331 0
-1117 2332 0
-1118 2333 0
-1119 2334 0
-1120 2335 0
-2327 1112 0
-2328 1113 0
-2329 1114 0
-2330 1115 0
-2331 1116 0
-2332 1117 0
-2333 1118 0
-2334 1119 0
-2335 1120 0
c (field_00003_00009=variant_fields_00002_00009_00003)
-392 3542 0
-393 3543 0
-394 3544 0
-395 3545 0
-396 3546 0
-397 3547 0
-398 3548 0
-399 3549 0
-400 3550 0
-3542 392 0
-3543 393 0
-3544 394 0
-3545 395 0
-3546 396 0
-3547 397 0
-3548 398 0
-3549 399 0
-3550 400 0
c (variant_fields_00004_00009_00004=field_00006_00009)
-5987 797 0
-5988 798 0
-5989 799 0
-5990 800 0
-5991 801 0
-5992 802 0
-5993 803 0
-5994 804 0
-5995 805 0
-797 5987 0
-798 5988 0
-799 5989 0
-800 5990 0
-801 5991 0
-802 5992 0
-803 5993 0
-804 5994 0
-805 5995 0
c (field_00009_00006=variant_fields_00003_00009_00004)
-1157 4772 0
-1158 4773 0
-1159 4774 0
-1160 4775 0
-1161 4776 0
-1162 4777 0
-1163 4778 0
-1164 4779 0
-1165 4780 0
-4772 1157 0
-4773 1158 0
-4774 1159 0
-4775 1160 0
-4776 1161 0
-4777 1162 0
-4778 1163 0
-4779 1164 0
-4780 1165 0
c (field_00009_00004=variant_fields_00001_00009_00004)
-1127 2342 0
-1128 2343 0
-1129 2344 0
-1130 2345 0
-1131 2346 0
-1132 2347 0
-1133 2348 0
-1134 2349 0
-1135 2350 0
-2342 1127 0
-2343 1128 0
-2344 1129 0
-2345 1130 0
-2346 1131 0
-2347 1132 0
-2348 1133 0
-2349 1134 0
-2350 1135 0
c (field_00004_00009=variant_fields_00002_00009_00004)
-527 3557 0
-528 3558 0
-529 3559 0
-530 3560 0
-531 3561 0
-532 3562 0
-533 3563 0
-534 3564 0
-535 3565 0
-3557 527 0
-3558 528 0
-3559 529 0
-3560 530 0
-3561 531 0
-3562 532 0
-3563 533 0
-3564 534 0
-3565 535 0
c (field_00005_00009=variant_fields_00004_00009_00005)
-662 6002 0
-663 6003 0
-664 6004 0
-665 6005 0
-666 6006 0
-667 6007 0
-668 6008 0
-669 6009 0
-670 6010 0
-6002 662 0
-6003 663 0
-6004 664 0
-6005 665 0
-6006 666 0
-6007 667 0
-6008 668 0
-6009 669 0
-6010 670 0
c (field_00009_00005=variant_fields_00003_00009_00005)
-1142 4787 0
-1143 4788 0
-1144 4789 0
-1145 4790 0
-1146 4791 0
-1147 4792 0
-1148 4793 0
-1149 4794 0
-1150 4795 0
-4787 1142 0
-4788 1143 0
-4789 1144 0
-4790 1145 0
-4791 1146 0
-4792 1147 0
-4793 1148 0
-4794 1149 0
-4795 1150 0
c (field_00009_00005=variant_fields_00001_00009_00005)
-1142 2357 0
-1143 2358 0
-1144 2359 0
-1145 2360 0
-1146 2361 0
-1147 2362 0
-1148 2363 0
-1149 2364 0
-1150 2365 0
-2357 1142 0
-2358 1143 0
-2359 1144 0
-2360 1145 0
-2361 1146 0
-2362 1147 0
-2363 1148 0
-2364 1149 0
-2365 1150 0
c (field_00005_00009=variant_fields_00002_00009_00005)
-662 3572 0
-663 3573 0
-664 3574 0
-665 3575 0
-666 3576 0
-667 3577 0
-668 3578 0
-669 3579 0
-670 3580 0
-3572 662 0
-3573 663 0
-3574 664 0
-3575 665 0
-3576 666 0
-3577 667 0
-3578 668 0
-3579 669 0
-3580 670 0
c (field_00004_00009=variant_fields_00004_00009_00006)
-527 6017 0
-528 6018 0
-529 6019 0
-530 6020 0
-531 6021 0
-532 6022 0
-533 6023 0
-534 6024 0
-535 6025 0
-6017 527 0
-6018 528 0
-6019 529 0
-6020 530 0
-6021 531 0
-6022 532 0
-6023 533 0
-6024 534 0
-6025 535 0
c (field_00009_00004=variant_fields_00003_00009_00006)
-1127 4802 0
-1128 4803 0
-1129 4804 0
-1130 4805 0
-1131 4806 0
-1132 4807 0
-1133 4808 0
-1134 4809 0
-1135 4810 0
-4802 1127 0
-4803 1128 0
-4804 1129 0
-4805 1130 0
-4806 1131 0
-4807 1132 0
-4808 1133 0
-4809 1134 0
-4810 1135 0
c (field_00009_00006=variant_fields_00001_00009_00006)
-1157 2372 0
-1158 2373 0
-1159 2374 0
-1160 2375 0
-1161 2376 0
-1162 2377 0
-1163 2378 0
-1164 2379 0
-1165 2380 0
-2372 1157 0
-2373 1158 0
-2374 1159 0
-2375 1160 0
-2376 1161 0
-2377 1162 0
-2378 1163 0
-2379 1164 0
-2380 1165 0
c (field_00006_00009=variant_fields_00002_00009_00006)
-797 3587 0
-798 3588 0
-799 3589 0
-800 3590 0
-801 3591 0
-802 3592 0
-803 3593 0
-804 3594 0
-805 3595 0
-3587 797 0
-3588 798 0
-3589 799 0
-3590 800 0
-3591 801 0
-3592 802 0
-3593 803 0
-3594 804 0
-3595 805 0
c (field_00003_00009=variant_fields_00004_00009_00007)
-392 6032 0
-393 6033 0
-394 6034 0
-395 6035 0
-396 6036 0
-397 6037 0
-398 6038 0
-399 6039 0
-400 6040 0
-6032 392 0
-6033 393 0
-6034 394 0
-6035 395 0
-6036 396 0
-6037 397 0
-6038 398 0
-6039 399 0
-6040 400 0
c (field_00009_00003=variant_fields_00003_00009_00007)
-1112 4817 0
-1113 4818 0
-1114 4819 0
-1115 4820 0
-1116 4821 0
-1117 4822 0
-1118 4823 0
-1119 4824 0
-1120 4825 0
-4817 1112 0
-4818 1113 0
-4819 1114 0
-4820 1115 0
-4821 1116 0
-4822 1117 0
-4823 1118 0
-4824 1119 0
-4825 1120 0
c (field_00009_00007=variant_fields_00001_00009_00007)
-1172 2387 0
-1173 2388 0
-1174 2389 0
-1175 2390 0
-1176 2391 0
-1177 2392 0
-1178 2393 0
-1179 2394 0
-1180 2395 0
-2387 1172 0
-2388 1173 0
-2389 1174 0
-2390 1175 0
-2391 1176 0
-2392 1177 0
-2393 1178 0
-2394 1179 0
-2395 1180 0
c (variant_fields_00002_00009_00007=field_00007_00009)
-3602 932 0
-3603 933 0
-3604 934 0
-3605 935 0
-3606 936 0
-3607 937 0
-3608 938 0
-3609 939 0
-3610 940 0
-932 3602 0
-933 3603 0
-934 3604 0
-935 3605 0
-936 3606 0
-937 3607 0
-938 3608 0
-939 3609 0
-940 3610 0
c (variant_fields_00004_00009_00008=field_00002_00009)
-6047 257 0
-6048 258 0
-6049 259 0
-6050 260 0
-6051 261 0
-6052 262 0
-6053 263 0
-6054 264 0
-6055 265 0
-257 6047 0
-258 6048 0
-259 6049 0
-260 6050 0
-261 6051 0
-262 6052 0
-263 6053 0
-264 6054 0
-265 6055 0
c (field_00009_00002=variant_fields_00003_00009_00008)
-1097 4832 0
-1098 4833 0
-1099 4834 0
-1100 4835 0
-1101 4836 0
-1102 4837 0
-1103 4838 0
-1104 4839 0
-1105 4840 0
-4832 1097 0
-4833 1098 0
-4834 1099 0
-4835 1100 0
-4836 1101 0
-4837 1102 0
-4838 1103 0
-4839 1104 0
-4840 1105 0
c (field_00009_00008=variant_fields_00001_00009_00008)
-1187 2402 0
-1188 2403 0
-1189 2404 0
-1190 2405 0
-1191 2406 0
-1192 2407 0
-1193 2408 0
-1194 2409 0
-1195 2410 0
-2402 1187 0
-2403 1188 0
-2404 1189 0
-2405 1190 0
-2406 1191 0
-2407 1192 0
-2408 1193 0
-2409 1194 0
-2410 1195 0
c (field_00008_00009=variant_fields_00002_00009_00008)
-1067 3617 0
-1068 3618 0
-1069 3619 0
-1070 3620 0
-1071 3621 0
-1072 3622 0
-1073 3623 0
-1074 3624 0
-1075 3625 0
-3617 1067 0
-3618 1068 0
-3619 1069 0
-3620 1070 0
-3621 1071 0
-3622 1072 0
-3623 1073 0
-3624 1074 0
-3625 1075 0
c (variant_fields_00004_00009_00009=field_00001_00009)
-6062 122 0
-6063 123 0
-6064 124 0
-6065 125 0
-6066 126 0
-6067 127 0
-6068 128 0
-6069 129 0
-6070 130 0
-122 6062 0
-123 6063 0
-124 6064 0
-125 6065 0
-126 6066 0
-127 6067 0
-128 6068 0
-129 6069 0
-130 6070 0
c (field_00009_00001=variant_fields_00003_00009_00009)
-1082 4847 0
-1083 4848 0
-1084 4849 0
-1085 4850 0
-1086 4851 0
-1087 4852 0
-1088 4853 0
-1089 4854 0
-1090 4855 0
-4847 1082 0
-4848 1083 0
-4849 1084 0
-4850 1085 0
-4851 1086 0
-4852 1087 0
-4853 1088 0
-4854 1089 0
-4855 1090 0
c (field_00009_00009=variant_fields_00001_00009_00009)
-1202 2417 0
-1203 2418 0
-1204 2419 0
-1205 2420 0
-1206 2421 0
-1207 2422 0
-1208 2423 0
-1209 2424 0
-1210 2425 0
-2417 1202 0
-2418 1203 0
-2419 1204 0
-2420 1205 0
-2421 1206 0
-2422 1207 0
-2423 1208 0
-2424 1209 0
-2425 1210 0
c (field_00009_00009=variant_fields_00002_00009_00009)
-1202 3632 0
-1203 3633 0
-1204 3634 0
-1205 3635 0
-1206 3636 0
-1207 3637 0
-1208 3638 0
-1209 3639 0
-1210 3640 0
-3632 1202 0
-3633 1203 0
-3634 1204 0
-3635 1205 0
-3636 1206 0
-3637 1207 0
-3638 1208 0
-3639 1209 0
-3640 1210 0
c (SATLiteral(6105) -> SATLiteral(6276))
-6105 6276 0
c (SATLiteral(6107) -> SATLiteral(6413))
-6107 6413 0
c (SATLiteral(6109) -> SATLiteral(6550))
-6109 6550 0
c (SATLiteral(6111) -> SATLiteral(6687))
-6111 6687 0
c (SATLiteral(6114) -> SATLiteral(6824))
-6114 6824 0
c (SATLiteral(6116) -> SATLiteral(6961))
-6116 6961 0
c (SATLiteral(6118) -> SATLiteral(7098))
-6118 7098 0
c (SATLiteral(6119) -> SATLiteral(7235))
-6119 7235 0
c (SATLiteral(6123) -> SATLiteral(7372))
-6123 7372 0
c (SATLiteral(6125) -> SATLiteral(7509))
-6125 7509 0
c (SATLiteral(6127) -> SATLiteral(7646))
-6127 7646 0
c (SATLiteral(6129) -> SATLiteral(7783))
-6129 7783 0
c (SATLiteral(6132) -> SATLiteral(7920))
-6132 7920 0
c (SATLiteral(6134) -> SATLiteral(8057))
-6134 8057 0
c (SATLiteral(6137) -> SATLiteral(8194))
-6137 8194 0
c (SATLiteral(6077) -> SATLiteral(8195))
-6077 8195 0
c (SATLiteral(6077) -> SATLiteral(8196))
-6077 8196 0
c (SATLiteral(6077) -> SATLiteral(8197))
-6077 8197 0
c (SATLiteral(6077) -> SATLiteral(8198))
-6077 8198 0
c (SATLiteral(6077) -> SATLiteral(8199))
-6077 8199 0
c (SATLiteral(6077) -> SATLiteral(8200))
-6077 8200 0
c (SATLiteral(6077) -> SATLiteral(8201))
-6077 8201 0
c (SATLiteral(6077) -> SATLiteral(8202))
-6077 8202 0
c (SATLiteral(6077) -> SATLiteral(8203))
-6077 8203 0
c (SATLiteral(6078) -> SATLiteral(8204))
-6078 8204 0
c (SATLiteral(6078) -> SATLiteral(8205))
-6078 8205 0
c (SATLiteral(6078) -> SATLiteral(8206))
-6078 8206 0
c (SATLiteral(6078) -> SATLiteral(8207))
-6078 8207 0
c (SATLiteral(6078) -> SATLiteral(8208))
-6078 8208 0
c (SATLiteral(6078) -> SATLiteral(8209))
-6078 8209 0
c (SATLiteral(6078) -> SATLiteral(8210))
-6078 8210 0
c (SATLiteral(6078) -> SATLiteral(8211))
-6078 8211 0
c (SATLiteral(6078) -> SATLiteral(8212))
-6078 8212 0
c (SATLiteral(6079) -> SATLiteral(8213))
-6079 8213 0
c (SATLiteral(6079) -> SATLiteral(8214))
-6079 8214 0
c (SATLiteral(6079) -> SATLiteral(8215))
-6079 8215 0
c (SATLiteral(6079) -> SATLiteral(8216))
-6079 8216 0
c (SATLiteral(6079) -> SATLiteral(8217))
-6079 8217 0
c (SATLiteral(6079) -> SATLiteral(8218))
-6079 8218 0
c (SATLiteral(6079) -> SATLiteral(8219))
-6079 8219 0
c (SATLiteral(6079) -> SATLiteral(8220))
-6079 8220 0
c (SATLiteral(6079) -> SATLiteral(8221))
-6079 8221 0
c (SATLiteral(6080) -> SATLiteral(8222))
-6080 8222 0
c (SATLiteral(6080) -> SATLiteral(8223))
-6080 8223 0
c (SATLiteral(6080) -> SATLiteral(8224))
-6080 8224 0
c (SATLiteral(6080) -> SATLiteral(8225))
-6080 8225 0
c (SATLiteral(6080) -> SATLiteral(8226))
-6080 8226 0
c (SATLiteral(6080) -> SATLiteral(8227))
-6080 8227 0
c (SATLiteral(6080) -> SATLiteral(8228))
-6080 8228 0
c (SATLiteral(6080) -> SATLiteral(8229))
-6080 8229 0
c (SATLiteral(6080) -> SATLiteral(8230))
-6080 8230 0
c (SATLiteral(6081) -> SATLiteral(8231))
-6081 8231 0
c (SATLiteral(6081) -> SATLiteral(8232))
-6081 8232 0
c (SATLiteral(6081) -> SATLiteral(8233))
-6081 8233 0
c (SATLiteral(6081) -> SATLiteral(8234))
-6081 8234 0
c (SATLiteral(6081) -> SATLiteral(8235))
-6081 8235 0
c (SATLiteral(6081) -> SATLiteral(8236))
-6081 8236 0
c (SATLiteral(6081) -> SATLiteral(8237))
-6081 8237 0
c (SATLiteral(6081) -> SATLiteral(8238))
-6081 8238 0
c (SATLiteral(6081) -> SATLiteral(8239))
-6081 8239 0
c (SATLiteral(6082) -> SATLiteral(8240))
-6082 8240 0
c (SATLiteral(6082) -> SATLiteral(8241))
-6082 8241 0
c (SATLiteral(6082) -> SATLiteral(8242))
-6082 8242 0
c (SATLiteral(6082) -> SATLiteral(8243))
-6082 8243 0
c (SATLiteral(6082) -> SATLiteral(8244))
-6082 8244 0
c (SATLiteral(6082) -> SATLiteral(8245))
-6082 8245 0
c (SATLiteral(6082) -> SATLiteral(8246))
-6082 8246 0
c (SATLiteral(6082) -> SATLiteral(8247))
-6082 8247 0
c (SATLiteral(6082) -> SATLiteral(8248))
-6082 8248 0
c (SATLiteral(6083) -> SATLiteral(8249))
-6083 8249 0
c (SATLiteral(6083) -> SATLiteral(8250))
-6083 8250 0
c (SATLiteral(6083) -> SATLiteral(8251))
-6083 8251 0
c (SATLiteral(6083) -> SATLiteral(8252))
-6083 8252 0
c (SATLiteral(6083) -> SATLiteral(8253))
-6083 8253 0
c (SATLiteral(6083) -> SATLiteral(8254))
-6083 8254 0
c (SATLiteral(6083) -> SATLiteral(8255))
-6083 8255 0
c (SATLiteral(6083) -> SATLiteral(8256))
-6083 8256 0
c (SATLiteral(6083) -> SATLiteral(8257))
-6083 8257 0
c (SATLiteral(6084) -> SATLiteral(8258))
-6084 8258 0
c (SATLiteral(6084) -> SATLiteral(8259))
-6084 8259 0
c (SATLiteral(6084) -> SATLiteral(8260))
-6084 8260 0
c (SATLiteral(6084) -> SATLiteral(8261))
-6084 8261 0
c (SATLiteral(6084) -> SATLiteral(8262))
-6084 8262 0
c (SATLiteral(6084) -> SATLiteral(8263))
-6084 8263 0
c (SATLiteral(6084) -> SATLiteral(8264))
-6084 8264 0
c (SATLiteral(6084) -> SATLiteral(8265))
-6084 8265 0
c (SATLiteral(6084) -> SATLiteral(8266))
-6084 8266 0
c (SATLiteral(6085) -> SATLiteral(8267))
-6085 8267 0
c (SATLiteral(6085) -> SATLiteral(8268))
-6085 8268 0
c (SATLiteral(6085) -> SATLiteral(8269))
-6085 8269 0
c (SATLiteral(6085) -> SATLiteral(8270))
-6085 8270 0
c (SATLiteral(6085) -> SATLiteral(8271))
-6085 8271 0
c (SATLiteral(6085) -> SATLiteral(8272))
-6085 8272 0
c (SATLiteral(6085) -> SATLiteral(8273))
-6085 8273 0
c (SATLiteral(6085) -> SATLiteral(8274))
-6085 8274 0
c (SATLiteral(6085) -> SATLiteral(8275))
-6085 8275 0
c (SATLiteral(6086) -> SATLiteral(8276))
-6086 8276 0
c (SATLiteral(6086) -> SATLiteral(8277))
-6086 8277 0
c (SATLiteral(6086) -> SATLiteral(8278))
-6086 8278 0
c (SATLiteral(6086) -> SATLiteral(8279))
-6086 8279 0
c (SATLiteral(6086) -> SATLiteral(8280))
-6086 8280 0
c (SATLiteral(6086) -> SATLiteral(8281))
-6086 8281 0
c (SATLiteral(6086) -> SATLiteral(8282))
-6086 8282 0
c (SATLiteral(6086) -> SATLiteral(8283))
-6086 8283 0
c (SATLiteral(6086) -> SATLiteral(8284))
-6086 8284 0
c (SATLiteral(6087) -> SATLiteral(8285))
-6087 8285 0
c (SATLiteral(6087) -> SATLiteral(8286))
-6087 8286 0
c (SATLiteral(6087) -> SATLiteral(8287))
-6087 8287 0
c (SATLiteral(6087) -> SATLiteral(8288))
-6087 8288 0
c (SATLiteral(6087) -> SATLiteral(8289))
-6087 8289 0
c (SATLiteral(6087) -> SATLiteral(8290))
-6087 8290 0
c (SATLiteral(6087) -> SATLiteral(8291))
-6087 8291 0
c (SATLiteral(6087) -> SATLiteral(8292))
-6087 8292 0
c (SATLiteral(6087) -> SATLiteral(8293))
-6087 8293 0
c (SATLiteral(6088) -> SATLiteral(8294))
-6088 8294 0
c (SATLiteral(6088) -> SATLiteral(8295))
-6088 8295 0
c (SATLiteral(6088) -> SATLiteral(8296))
-6088 8296 0
c (SATLiteral(6088) -> SATLiteral(8297))
-6088 8297 0
c (SATLiteral(6088) -> SATLiteral(8298))
-6088 8298 0
c (SATLiteral(6088) -> SATLiteral(8299))
-6088 8299 0
c (SATLiteral(6088) -> SATLiteral(8300))
-6088 8300 0
c (SATLiteral(6088) -> SATLiteral(8301))
-6088 8301 0
c (SATLiteral(6088) -> SATLiteral(8302))
-6088 8302 0
c (SATLiteral(6089) -> SATLiteral(8303))
-6089 8303 0
c (SATLiteral(6089) -> SATLiteral(8304))
-6089 8304 0
c (SATLiteral(6089) -> SATLiteral(8305))
-6089 8305 0
c (SATLiteral(6089) -> SATLiteral(8306))
-6089 8306 0
c (SATLiteral(6089) -> SATLiteral(8307))
-6089 8307 0
c (SATLiteral(6089) -> SATLiteral(8308))
-6089 8308 0
c (SATLiteral(6089) -> SATLiteral(8309))
-6089 8309 0
c (SATLiteral(6089) -> SATLiteral(8310))
-6089 8310 0
c (SATLiteral(6089) -> SATLiteral(8311))
-6089 8311 0
c (SATLiteral(6090) -> SATLiteral(8312))
-6090 8312 0
c (SATLiteral(6090) -> SATLiteral(8313))
-6090 8313 0
c (SATLiteral(6090) -> SATLiteral(8314))
-6090 8314 0
c (SATLiteral(6090) -> SATLiteral(8315))
-6090 8315 0
c (SATLiteral(6090) -> SATLiteral(8316))
-6090 8316 0
c (SATLiteral(6090) -> SATLiteral(8317))
-6090 8317 0
c (SATLiteral(6090) -> SATLiteral(8318))
-6090 8318 0
c (SATLiteral(6090) -> SATLiteral(8319))
-6090 8319 0
c (SATLiteral(6090) -> SATLiteral(8320))
-6090 8320 0
c (SATLiteral(6091) -> SATLiteral(8321))
-6091 8321 0
c (SATLiteral(6091) -> SATLiteral(8322))
-6091 8322 0
c (SATLiteral(6091) -> SATLiteral(8323))
-6091 8323 0
c (SATLiteral(6091) -> SATLiteral(8324))
-6091 8324 0
c (SATLiteral(6091) -> SATLiteral(8325))
-6091 8325 0
c (SATLiteral(6091) -> SATLiteral(8326))
-6091 8326 0
c (SATLiteral(6091) -> SATLiteral(8327))
-6091 8327 0
c (SATLiteral(6091) -> SATLiteral(8328))
-6091 8328 0
c (SATLiteral(6091) -> SATLiteral(8329))
-6091 8329 0
c (SATLiteral(6092) -> SATLiteral(8330))
-6092 8330 0
c (SATLiteral(6092) -> SATLiteral(8331))
-6092 8331 0
c (SATLiteral(6092) -> SATLiteral(8332))
-6092 8332 0
c (SATLiteral(6092) -> SATLiteral(8333))
-6092 8333 0
c (SATLiteral(6092) -> SATLiteral(8334))
-6092 8334 0
c (SATLiteral(6092) -> SATLiteral(8335))
-6092 8335 0
c (SATLiteral(6092) -> SATLiteral(8336))
-6092 8336 0
c (SATLiteral(6092) -> SATLiteral(8337))
-6092 8337 0
c (SATLiteral(6092) -> SATLiteral(8338))
-6092 8338 0
c (SATLiteral(6093) -> SATLiteral(8339))
-6093 8339 0
c (SATLiteral(6093) -> SATLiteral(8340))
-6093 8340 0
c (SATLiteral(6093) -> SATLiteral(8341))
-6093 8341 0
c (SATLiteral(6093) -> SATLiteral(8342))
-6093 8342 0
c (SATLiteral(6093) -> SATLiteral(8343))
-6093 8343 0
c (SATLiteral(6093) -> SATLiteral(8344))
-6093 8344 0
c (SATLiteral(6093) -> SATLiteral(8345))
-6093 8345 0
c (SATLiteral(6093) -> SATLiteral(8346))
-6093 8346 0
c (SATLiteral(6093) -> SATLiteral(8347))
-6093 8347 0
c (SATLiteral(6094) -> SATLiteral(8348))
-6094 8348 0
c (SATLiteral(6094) -> SATLiteral(8349))
-6094 8349 0
c (SATLiteral(6094) -> SATLiteral(8350))
-6094 8350 0
c (SATLiteral(6094) -> SATLiteral(8351))
-6094 8351 0
c (SATLiteral(6094) -> SATLiteral(8352))
-6094 8352 0
c (SATLiteral(6094) -> SATLiteral(8353))
-6094 8353 0
c (SATLiteral(6094) -> SATLiteral(8354))
-6094 8354 0
c (SATLiteral(6094) -> SATLiteral(8355))
-6094 8355 0
c (SATLiteral(6094) -> SATLiteral(8356))
-6094 8356 0
c (SATLiteral(6095) -> SATLiteral(8357))
-6095 8357 0
c (SATLiteral(6095) -> SATLiteral(8358))
-6095 8358 0
c (SATLiteral(6095) -> SATLiteral(8359))
-6095 8359 0
c (SATLiteral(6095) -> SATLiteral(8360))
-6095 8360 0
c (SATLiteral(6095) -> SATLiteral(8361))
-6095 8361 0
c (SATLiteral(6095) -> SATLiteral(8362))
-6095 8362 0
c (SATLiteral(6095) -> SATLiteral(8363))
-6095 8363 0
c (SATLiteral(6095) -> SATLiteral(8364))
-6095 8364 0
c (SATLiteral(6095) -> SATLiteral(8365))
-6095 8365 0
c (SATLiteral(6096) -> SATLiteral(8366))
-6096 8366 0
c (SATLiteral(6096) -> SATLiteral(8367))
-6096 8367 0
c (SATLiteral(6096) -> SATLiteral(8368))
-6096 8368 0
c (SATLiteral(6096) -> SATLiteral(8369))
-6096 8369 0
c (SATLiteral(6096) -> SATLiteral(8370))
-6096 8370 0
c (SATLiteral(6096) -> SATLiteral(8371))
-6096 8371 0
c (SATLiteral(6096) -> SATLiteral(8372))
-6096 8372 0
c (SATLiteral(6096) -> SATLiteral(8373))
-6096 8373 0
c (SATLiteral(6096) -> SATLiteral(8374))
-6096 8374 0
c (SATLiteral(6097) -> SATLiteral(8375))
-6097 8375 0
c (SATLiteral(6097) -> SATLiteral(8376))
-6097 8376 0
c (SATLiteral(6097) -> SATLiteral(8377))
-6097 8377 0
c (SATLiteral(6097) -> SATLiteral(8378))
-6097 8378 0
c (SATLiteral(6097) -> SATLiteral(8379))
-6097 8379 0
c (SATLiteral(6097) -> SATLiteral(8380))
-6097 8380 0
c (SATLiteral(6097) -> SATLiteral(8381))
-6097 8381 0
c (SATLiteral(6097) -> SATLiteral(8382))
-6097 8382 0
c (SATLiteral(6097) -> SATLiteral(8383))
-6097 8383 0
c (SATLiteral(6098) -> SATLiteral(8384))
-6098 8384 0
c (SATLiteral(6098) -> SATLiteral(8385))
-6098 8385 0
c (SATLiteral(6098) -> SATLiteral(8386))
-6098 8386 0
c (SATLiteral(6098) -> SATLiteral(8387))
-6098 8387 0
c (SATLiteral(6098) -> SATLiteral(8388))
-6098 8388 0
c (SATLiteral(6098) -> SATLiteral(8389))
-6098 8389 0
c (SATLiteral(6098) -> SATLiteral(8390))
-6098 8390 0
c (SATLiteral(6098) -> SATLiteral(8391))
-6098 8391 0
c (SATLiteral(6098) -> SATLiteral(8392))
-6098 8392 0
c (SATLiteral(6099) -> SATLiteral(8393))
-6099 8393 0
c (SATLiteral(6099) -> SATLiteral(8394))
-6099 8394 0
c (SATLiteral(6099) -> SATLiteral(8395))
-6099 8395 0
c (SATLiteral(6099) -> SATLiteral(8396))
-6099 8396 0
c (SATLiteral(6099) -> SATLiteral(8397))
-6099 8397 0
c (SATLiteral(6099) -> SATLiteral(8398))
-6099 8398 0
c (SATLiteral(6099) -> SATLiteral(8399))
-6099 8399 0
c (SATLiteral(6099) -> SATLiteral(8400))
-6099 8400 0
c (SATLiteral(6099) -> SATLiteral(8401))
-6099 8401 0
c (SATLiteral(6100) -> SATLiteral(8402))
-6100 8402 0
c (SATLiteral(6100) -> SATLiteral(8403))
-6100 8403 0
c (SATLiteral(6100) -> SATLiteral(8404))
-6100 8404 0
c (SATLiteral(6100) -> SATLiteral(8405))
-6100 8405 0
c (SATLiteral(6100) -> SATLiteral(8406))
-6100 8406 0
c (SATLiteral(6100) -> SATLiteral(8407))
-6100 8407 0
c (SATLiteral(6100) -> SATLiteral(8408))
-6100 8408 0
c (SATLiteral(6100) -> SATLiteral(8409))
-6100 8409 0
c (SATLiteral(6100) -> SATLiteral(8410))
-6100 8410 0
c (SATLiteral(6101) -> SATLiteral(8411))
-6101 8411 0
c (SATLiteral(6101) -> SATLiteral(8412))
-6101 8412 0
c (SATLiteral(6101) -> SATLiteral(8413))
-6101 8413 0
c (SATLiteral(6101) -> SATLiteral(8414))
-6101 8414 0
c (SATLiteral(6101) -> SATLiteral(8415))
-6101 8415 0
c (SATLiteral(6101) -> SATLiteral(8416))
-6101 8416 0
c (SATLiteral(6101) -> SATLiteral(8417))
-6101 8417 0
c (SATLiteral(6101) -> SATLiteral(8418))
-6101 8418 0
c (SATLiteral(6101) -> SATLiteral(8419))
-6101 8419 0
c (SATLiteral(6102) -> SATLiteral(8420))
-6102 8420 0
c (SATLiteral(6102) -> SATLiteral(8421))
-6102 8421 0
c (SATLiteral(6102) -> SATLiteral(8422))
-6102 8422 0
c (SATLiteral(6102) -> SATLiteral(8423))
-6102 8423 0
c (SATLiteral(6102) -> SATLiteral(8424))
-6102 8424 0
c (SATLiteral(6102) -> SATLiteral(8425))
-6102 8425 0
c (SATLiteral(6102) -> SATLiteral(8426))
-6102 8426 0
c (SATLiteral(6102) -> SATLiteral(8427))
-6102 8427 0
c (SATLiteral(6102) -> SATLiteral(8428))
-6102 8428 0
c (SATLiteral(6103) -> SATLiteral(8429))
-6103 8429 0
c (SATLiteral(6103) -> SATLiteral(8430))
-6103 8430 0
c (SATLiteral(6103) -> SATLiteral(8431))
-6103 8431 0
c (SATLiteral(6103) -> SATLiteral(8432))
-6103 8432 0
c (SATLiteral(6103) -> SATLiteral(8433))
-6103 8433 0
c (SATLiteral(6103) -> SATLiteral(8434))
-6103 8434 0
c (SATLiteral(6103) -> SATLiteral(8435))
-6103 8435 0
c (SATLiteral(6103) -> SATLiteral(8436))
-6103 8436 0
c (SATLiteral(6103) -> SATLiteral(8437))
-6103 8437 0
c (( - aux378 + aux7 + shift(variant_fields_00001_00002_00001, -1))<=0)
6259 -8438 0
6260 -8439 0
6262 -8441 0
6264 -8443 0
6266 -8445 0
6268 -8447 0
6270 -8449 0
6272 -8451 0
6274 -8453 0
1352 -8438 0
1352 6259 -8439 0
1352 6260 -8441 0
1352 6262 -8443 0
1352 6264 -8445 0
1352 6266 -8447 0
1352 6268 -8449 0
1352 6270 -8451 0
1352 6272 -8453 0
1352 6274 -8455 0
1353 -8439 0
1353 6259 -8441 0
1353 6260 -8443 0
1353 6262 -8445 0
1353 6264 -8447 0
1353 6266 -8449 0
1353 6268 -8451 0
1353 6270 -8453 0
1353 6272 -8455 0
1353 6274 -8457 0
1355 -8441 0
1355 6259 -8443 0
1355 6260 -8445 0
1355 6262 -8447 0
1355 6264 -8449 0
1355 6266 -8451 0
1355 6268 -8453 0
1355 6270 -8455 0
1355 6272 -8457 0
1355 6274 -8459 0
1357 -8443 0
1357 6259 -8445 0
1357 6260 -8447 0
1357 6262 -8449 0
1357 6264 -8451 0
1357 6266 -8453 0
1357 6268 -8455 0
1357 6270 -8457 0
1357 6272 -8459 0
1357 6274 -8461 0
1359 -8445 0
1359 6259 -8447 0
1359 6260 -8449 0
1359 6262 -8451 0
1359 6264 -8453 0
1359 6266 -8455 0
1359 6268 -8457 0
1359 6270 -8459 0
1359 6272 -8461 0
1359 6274 -8463 0
1361 -8447 0
1361 6259 -8449 0
1361 6260 -8451 0
1361 6262 -8453 0
1361 6264 -8455 0
1361 6266 -8457 0
1361 6268 -8459 0
1361 6270 -8461 0
1361 6272 -8463 0
1361 6274 -8465 0
1363 -8449 0
1363 6259 -8451 0
1363 6260 -8453 0
1363 6262 -8455 0
1363 6264 -8457 0
1363 6266 -8459 0
1363 6268 -8461 0
1363 6270 -8463 0
1363 6272 -8465 0
1363 6274 -8467 0
1365 -8451 0
1365 6259 -8453 0
1365 6260 -8455 0
1365 6262 -8457 0
1365 6264 -8459 0
1365 6266 -8461 0
1365 6268 -8463 0
1365 6270 -8465 0
1365 6272 -8467 0
1365 6274 -8469 0
c (0<=( - aux378 + aux7 + shift(variant_fields_00001_00002_00001, -1)))
-6274 8469 0
-6272 8467 0
-6270 8465 0
-6268 8463 0
-6266 8461 0
-6264 8459 0
-6262 8457 0
-6260 8455 0
-6259 8453 0
-1365 8469 0
-1365 -6274 8467 0
-1365 -6272 8465 0
-1365 -6270 8463 0
-1365 -6268 8461 0
-1365 -6266 8459 0
-1365 -6264 8457 0
-1365 -6262 8455 0
-1365 -6260 8453 0
-1365 -6259 8451 0
-1363 8467 0
-1363 -6274 8465 0
-1363 -6272 8463 0
-1363 -6270 8461 0
-1363 -6268 8459 0
-1363 -6266 8457 0
-1363 -6264 8455 0
-1363 -6262 8453 0
-1363 -6260 8451 0
-1363 -6259 8449 0
-1361 8465 0
-1361 -6274 8463 0
-1361 -6272 8461 0
-1361 -6270 8459 0
-1361 -6268 8457 0
-1361 -6266 8455 0
-1361 -6264 8453 0
-1361 -6262 8451 0
-1361 -6260 8449 0
-1361 -6259 8447 0
-1359 8463 0
-1359 -6274 8461 0
-1359 -6272 8459 0
-1359 -6270 8457 0
-1359 -6268 8455 0
-1359 -6266 8453 0
-1359 -6264 8451 0
-1359 -6262 8449 0
-1359 -6260 8447 0
-1359 -6259 8445 0
-1357 8461 0
-1357 -6274 8459 0
-1357 -6272 8457 0
-1357 -6270 8455 0
-1357 -6268 8453 0
-1357 -6266 8451 0
-1357 -6264 8449 0
-1357 -6262 8447 0
-1357 -6260 8445 0
-1357 -6259 8443 0
-1355 8459 0
-1355 -6274 8457 0
-1355 -6272 8455 0
-1355 -6270 8453 0
-1355 -6268 8451 0
-1355 -6266 8449 0
-1355 -6264 8447 0
-1355 -6262 8445 0
-1355 -6260 8443 0
-1355 -6259 8441 0
-1353 8457 0
-1353 -6274 8455 0
-1353 -6272 8453 0
-1353 -6270 8451 0
-1353 -6268 8449 0
-1353 -6266 8447 0
-1353 -6264 8445 0
-1353 -6262 8443 0
-1353 -6260 8441 0
-1353 -6259 8439 0
-1352 8455 0
-1352 -6274 8453 0
-1352 -6272 8451 0
-1352 -6270 8449 0
-1352 -6268 8447 0
-1352 -6266 8445 0
-1352 -6264 8443 0
-1352 -6262 8441 0
-1352 -6260 8439 0
-1352 -6259 8438 0
c (( - aux379 + aux0 + aux6)<=0)
6242 -8471 0
6243 -8472 0
6245 -8474 0
6247 -8476 0
6249 -8478 0
6251 -8480 0
6253 -8482 0
6255 -8484 0
6257 -8486 0
6140 -8471 0
6140 6242 -8472 0
6140 6243 -8474 0
6140 6245 -8476 0
6140 6247 -8478 0
6140 6249 -8480 0
6140 6251 -8482 0
6140 6253 -8484 0
6140 6255 -8486 0
6140 6257 -8488 0
6141 -8472 0
6141 6242 -8474 0
6141 6243 -8476 0
6141 6245 -8478 0
6141 6247 -8480 0
6141 6249 -8482 0
6141 6251 -8484 0
6141 6253 -8486 0
6141 6255 -8488 0
6141 6257 -8490 0
6143 -8474 0
6143 6242 -8476 0
6143 6243 -8478 0
6143 6245 -8480 0
6143 6247 -8482 0
6143 6249 -8484 0
6143 6251 -8486 0
6143 6253 -8488 0
6143 6255 -8490 0
6143 6257 -8492 0
6145 -8476 0
6145 6242 -8478 0
6145 6243 -8480 0
6145 6245 -8482 0
6145 6247 -8484 0
6145 6249 -8486 0
6145 6251 -8488 0
6145 6253 -8490 0
6145 6255 -8492 0
6145 6257 -8494 0
6147 -8478 0
6147 6242 -8480 0
6147 6243 -8482 0
6147 6245 -8484 0
6147 6247 -8486 0
6147 6249 -8488 0
6147 6251 -8490 0
6147 6253 -8492 0
6147 6255 -8494 0
6147 6257 -8496 0
6149 -8480 0
6149 6242 -8482 0
6149 6243 -8484 0
6149 6245 -8486 0
6149 6247 -8488 0
6149 6249 -8490 0
6149 6251 -8492 0
6149 6253 -8494 0
6149 6255 -8496 0
6149 6257 -8498 0
6151 -8482 0
6151 6242 -8484 0
6151 6243 -8486 0
6151 6245 -8488 0
6151 6247 -8490 0
6151 6249 -8492 0
6151 6251 -8494 0
6151 6253 -8496 0
6151 6255 -8498 0
6151 6257 -8500 0
6153 -8484 0
6153 6242 -8486 0
6153 6243 -8488 0
6153 6245 -8490 0
6153 6247 -8492 0
6153 6249 -8494 0
6153 6251 -8496 0
6153 6253 -8498 0
6153 6255 -8500 0
6153 6257 -8502 0
6155 -8486 0
6155 6242 -8488 0
6155 6243 -8490 0
6155 6245 -8492 0
6155 6247 -8494 0
6155 6249 -8496 0
6155 6251 -8498 0
6155 6253 -8500 0
6155 6255 -8502 0
6155 6257 -8504 0
c (0<=( - aux379 + aux0 + aux6))
-6257 8504 0
-6255 8502 0
-6253 8500 0
-6251 8498 0
-6249 8496 0
-6247 8494 0
-6245 8492 0
-6243 8490 0
-6242 8488 0
-6155 8504 0
-6155 -6257 8502 0
-6155 -6255 8500 0
-6155 -6253 8498 0
-6155 -6251 8496 0
-6155 -6249 8494 0
-6155 -6247 8492 0
-6155 -6245 8490 0
-6155 -6243 8488 0
-6155 -6242 8486 0
-6153 8502 0
-6153 -6257 8500 0
-6153 -6255 8498 0
-6153 -6253 8496 0
-6153 -6251 8494 0
-6153 -6249 8492 0
-6153 -6247 8490 0
-6153 -6245 8488 0
-6153 -6243 8486 0
-6153 -6242 8484 0
-6151 8500 0
-6151 -6257 8498 0
-6151 -6255 8496 0
-6151 -6253 8494 0
-6151 -6251 8492 0
-6151 -6249 8490 0
-6151 -6247 8488 0
-6151 -6245 8486 0
-6151 -6243 8484 0
-6151 -6242 8482 0
-6149 8498 0
-6149 -6257 8496 0
-6149 -6255 8494 0
-6149 -6253 8492 0
-6149 -6251 8490 0
-6149 -6249 8488 0
-6149 -6247 8486 0
-6149 -6245 8484 0
-6149 -6243 8482 0
-6149 -6242 8480 0
-6147 8496 0
-6147 -6257 8494 0
-6147 -6255 8492 0
-6147 -6253 8490 0
-6147 -6251 8488 0
-6147 -6249 8486 0
-6147 -6247 8484 0
-6147 -6245 8482 0
-6147 -6243 8480 0
-6147 -6242 8478 0
-6145 8494 0
-6145 -6257 8492 0
-6145 -6255 8490 0
-6145 -6253 8488 0
-6145 -6251 8486 0
-6145 -6249 8484 0
-6145 -6247 8482 0
-6145 -6245 8480 0
-6145 -6243 8478 0
-6145 -6242 8476 0
-6143 8492 0
-6143 -6257 8490 0
-6143 -6255 8488 0
-6143 -6253 8486 0
-6143 -6251 8484 0
-6143 -6249 8482 0
-6143 -6247 8480 0
-6143 -6245 8478 0
-6143 -6243 8476 0
-6143 -6242 8474 0
-6141 8490 0
-6141 -6257 8488 0
-6141 -6255 8486 0
-6141 -6253 8484 0
-6141 -6251 8482 0
-6141 -6249 8480 0
-6141 -6247 8478 0
-6141 -6245 8476 0
-6141 -6243 8474 0
-6141 -6242 8472 0
-6140 8488 0
-6140 -6257 8486 0
-6140 -6255 8484 0
-6140 -6253 8482 0
-6140 -6251 8480 0
-6140 -6249 8478 0
-6140 -6247 8476 0
-6140 -6245 8474 0
-6140 -6243 8472 0
-6140 -6242 8471 0
c (( - aux380 + aux2 + aux5)<=0)
6225 -8506 0
6226 -8507 0
6228 -8509 0
6230 -8511 0
6232 -8513 0
6234 -8515 0
6236 -8517 0
6238 -8519 0
6240 -8521 0
6174 -8506 0
6174 6225 -8507 0
6174 6226 -8509 0
6174 6228 -8511 0
6174 6230 -8513 0
6174 6232 -8515 0
6174 6234 -8517 0
6174 6236 -8519 0
6174 6238 -8521 0
6174 6240 -8523 0
6175 -8507 0
6175 6225 -8509 0
6175 6226 -8511 0
6175 6228 -8513 0
6175 6230 -8515 0
6175 6232 -8517 0
6175 6234 -8519 0
6175 6236 -8521 0
6175 6238 -8523 0
6175 6240 -8525 0
6177 -8509 0
6177 6225 -8511 0
6177 6226 -8513 0
6177 6228 -8515 0
6177 6230 -8517 0
6177 6232 -8519 0
6177 6234 -8521 0
6177 6236 -8523 0
6177 6238 -8525 0
6177 6240 -8527 0
6179 -8511 0
6179 6225 -8513 0
6179 6226 -8515 0
6179 6228 -8517 0
6179 6230 -8519 0
6179 6232 -8521 0
6179 6234 -8523 0
6179 6236 -8525 0
6179 6238 -8527 0
6179 6240 -8529 0
6181 -8513 0
6181 6225 -8515 0
6181 6226 -8517 0
6181 6228 -8519 0
6181 6230 -8521 0
6181 6232 -8523 0
6181 6234 -8525 0
6181 6236 -8527 0
6181 6238 -8529 0
6181 6240 -8531 0
6183 -8515 0
6183 6225 -8517 0
6183 6226 -8519 0
6183 6228 -8521 0
6183 6230 -8523 0
6183 6232 -8525 0
6183 6234 -8527 0
6183 6236 -8529 0
6183 6238 -8531 0
6183 6240 -8533 0
6185 -8517 0
6185 6225 -8519 0
6185 6226 -8521 0
6185 6228 -8523 0
6185 6230 -8525 0
6185 6232 -8527 0
6185 6234 -8529 0
6185 6236 -8531 0
6185 6238 -8533 0
6185 6240 -8535 0
6187 -8519 0
6187 6225 -8521 0
6187 6226 -8523 0
6187 6228 -8525 0
6187 6230 -8527 0
6187 6232 -8529 0
6187 6234 -8531 0
6187 6236 -8533 0
6187 6238 -8535 0
6187 6240 -8537 0
6189 -8521 0
6189 6225 -8523 0
6189 6226 -8525 0
6189 6228 -8527 0
6189 6230 -8529 0
6189 6232 -8531 0
6189 6234 -8533 0
6189 6236 -8535 0
6189 6238 -8537 0
6189 6240 -8539 0
c (0<=( - aux380 + aux2 + aux5))
-6240 8539 0
-6238 8537 0
-6236 8535 0
-6234 8533 0
-6232 8531 0
-6230 8529 0
-6228 8527 0
-6226 8525 0
-6225 8523 0
-6189 8539 0
-6189 -6240 8537 0
-6189 -6238 8535 0
-6189 -6236 8533 0
-6189 -6234 8531 0
-6189 -6232 8529 0
-6189 -6230 8527 0
-6189 -6228 8525 0
-6189 -6226 8523 0
-6189 -6225 8521 0
-6187 8537 0
-6187 -6240 8535 0
-6187 -6238 8533 0
-6187 -6236 8531 0
-6187 -6234 8529 0
-6187 -6232 8527 0
-6187 -6230 8525 0
-6187 -6228 8523 0
-6187 -6226 8521 0
-6187 -6225 8519 0
-6185 8535 0
-6185 -6240 8533 0
-6185 -6238 8531 0
-6185 -6236 8529 0
-6185 -6234 8527 0
-6185 -6232 8525 0
-6185 -6230 8523 0
-6185 -6228 8521 0
-6185 -6226 8519 0
-6185 -6225 8517 0
-6183 8533 0
-6183 -6240 8531 0
-6183 -6238 8529 0
-6183 -6236 8527 0
-6183 -6234 8525 0
-6183 -6232 8523 0
-6183 -6230 8521 0
-6183 -6228 8519 0
-6183 -6226 8517 0
-6183 -6225 8515 0
-6181 8531 0
-6181 -6240 8529 0
-6181 -6238 8527 0
-6181 -6236 8525 0
-6181 -6234 8523 0
-6181 -6232 8521 0
-6181 -6230 8519 0
-6181 -6228 8517 0
-6181 -6226 8515 0
-6181 -6225 8513 0
-6179 8529 0
-6179 -6240 8527 0
-6179 -6238 8525 0
-6179 -6236 8523 0
-6179 -6234 8521 0
-6179 -6232 8519 0
-6179 -6230 8517 0
-6179 -6228 8515 0
-6179 -6226 8513 0
-6179 -6225 8511 0
-6177 8527 0
-6177 -6240 8525 0
-6177 -6238 8523 0
-6177 -6236 8521 0
-6177 -6234 8519 0
-6177 -6232 8517 0
-6177 -6230 8515 0
-6177 -6228 8513 0
-6177 -6226 8511 0
-6177 -6225 8509 0
-6175 8525 0
-6175 -6240 8523 0
-6175 -6238 8521 0
-6175 -6236 8519 0
-6175 -6234 8517 0
-6175 -6232 8515 0
-6175 -6230 8513 0
-6175 -6228 8511 0
-6175 -6226 8509 0
-6175 -6225 8507 0
-6174 8523 0
-6174 -6240 8521 0
-6174 -6238 8519 0
-6174 -6236 8517 0
-6174 -6234 8515 0
-6174 -6232 8513 0
-6174 -6230 8511 0
-6174 -6228 8509 0
-6174 -6226 8507 0
-6174 -6225 8506 0
c (( - aux381 + aux3 + aux4)<=0)
6208 -8541 0
6209 -8542 0
6211 -8544 0
6213 -8546 0
6215 -8548 0
6217 -8550 0
6219 -8552 0
6221 -8554 0
6223 -8556 0
6191 -8541 0
6191 6208 -8542 0
6191 6209 -8544 0
6191 6211 -8546 0
6191 6213 -8548 0
6191 6215 -8550 0
6191 6217 -8552 0
6191 6219 -8554 0
6191 6221 -8556 0
6191 6223 -8558 0
6192 -8542 0
6192 6208 -8544 0
6192 6209 -8546 0
6192 6211 -8548 0
6192 6213 -8550 0
6192 6215 -8552 0
6192 6217 -8554 0
6192 6219 -8556 0
6192 6221 -8558 0
6192 6223 -8560 0
6194 -8544 0
6194 6208 -8546 0
6194 6209 -8548 0
6194 6211 -8550 0
6194 6213 -8552 0
6194 6215 -8554 0
6194 6217 -8556 0
6194 6219 -8558 0
6194 6221 -8560 0
6194 6223 -8562 0
6196 -8546 0
6196 6208 -8548 0
6196 6209 -8550 0
6196 6211 -8552 0
6196 6213 -8554 0
6196 6215 -8556 0
6196 6217 -8558 0
6196 6219 -8560 0
6196 6221 -8562 0
6196 6223 -8564 0
6198 -8548 0
6198 6208 -8550 0
6198 6209 -8552 0
6198 6211 -8554 0
6198 6213 -8556 0
6198 6215 -8558 0
6198 6217 -8560 0
6198 6219 -8562 0
6198 6221 -8564 0
6198 6223 -8566 0
6200 -8550 0
6200 6208 -8552 0
6200 6209 -8554 0
6200 6211 -8556 0
6200 6213 -8558 0
6200 6215 -8560 0
6200 6217 -8562 0
6200 6219 -8564 0
6200 6221 -8566 0
6200 6223 -8568 0
6202 -8552 0
6202 6208 -8554 0
6202 6209 -8556 0
6202 6211 -8558 0
6202 6213 -8560 0
6202 6215 -8562 0
6202 6217 -8564 0
6202 6219 -8566 0
6202 6221 -8568 0
6202 6223 -8570 0
6204 -8554 0
6204 6208 -8556 0
6204 6209 -8558 0
6204 6211 -8560 0
6204 6213 -8562 0
6204 6215 -8564 0
6204 6217 -8566 0
6204 6219 -8568 0
6204 6221 -8570 0
6204 6223 -8572 0
6206 -8556 0
6206 6208 -8558 0
6206 6209 -8560 0
6206 6211 -8562 0
6206 6213 -8564 0
6206 6215 -8566 0
6206 6217 -8568 0
6206 6219 -8570 0
6206 6221 -8572 0
6206 6223 -8574 0
c (0<=( - aux381 + aux3 + aux4))
-6223 8574 0
-6221 8572 0
-6219 8570 0
-6217 8568 0
-6215 8566 0
-6213 8564 0
-6211 8562 0
-6209 8560 0
-6208 8558 0
-6206 8574 0
-6206 -6223 8572 0
-6206 -6221 8570 0
-6206 -6219 8568 0
-6206 -6217 8566 0
-6206 -6215 8564 0
-6206 -6213 8562 0
-6206 -6211 8560 0
-6206 -6209 8558 0
-6206 -6208 8556 0
-6204 8572 0
-6204 -6223 8570 0
-6204 -6221 8568 0
-6204 -6219 8566 0
-6204 -6217 8564 0
-6204 -6215 8562 0
-6204 -6213 8560 0
-6204 -6211 8558 0
-6204 -6209 8556 0
-6204 -6208 8554 0
-6202 8570 0
-6202 -6223 8568 0
-6202 -6221 8566 0
-6202 -6219 8564 0
-6202 -6217 8562 0
-6202 -6215 8560 0
-6202 -6213 8558 0
-6202 -6211 8556 0
-6202 -6209 8554 0
-6202 -6208 8552 0
-6200 8568 0
-6200 -6223 8566 0
-6200 -6221 8564 0
-6200 -6219 8562 0
-6200 -6217 8560 0
-6200 -6215 8558 0
-6200 -6213 8556 0
-6200 -6211 8554 0
-6200 -6209 8552 0
-6200 -6208 8550 0
-6198 8566 0
-6198 -6223 8564 0
-6198 -6221 8562 0
-6198 -6219 8560 0
-6198 -6217 8558 0
-6198 -6215 8556 0
-6198 -6213 8554 0
-6198 -6211 8552 0
-6198 -6209 8550 0
-6198 -6208 8548 0
-6196 8564 0
-6196 -6223 8562 0
-6196 -6221 8560 0
-6196 -6219 8558 0
-6196 -6217 8556 0
-6196 -6215 8554 0
-6196 -6213 8552 0
-6196 -6211 8550 0
-6196 -6209 8548 0
-6196 -6208 8546 0
-6194 8562 0
-6194 -6223 8560 0
-6194 -6221 8558 0
-6194 -6219 8556 0
-6194 -6217 8554 0
-6194 -6215 8552 0
-6194 -6213 8550 0
-6194 -6211 8548 0
-6194 -6209 8546 0
-6194 -6208 8544 0
-6192 8560 0
-6192 -6223 8558 0
-6192 -6221 8556 0
-6192 -6219 8554 0
-6192 -6217 8552 0
-6192 -6215 8550 0
-6192 -6213 8548 0
-6192 -6211 8546 0
-6192 -6209 8544 0
-6192 -6208 8542 0
-6191 8558 0
-6191 -6223 8556 0
-6191 -6221 8554 0
-6191 -6219 8552 0
-6191 -6217 8550 0
-6191 -6215 8548 0
-6191 -6213 8546 0
-6191 -6211 8544 0
-6191 -6209 8542 0
-6191 -6208 8541 0
c ((aux378 - aux382 + aux1)<=0)
8438 -8576 0
8439 -8577 0
8441 -8579 0
8443 -8581 0
8445 -8583 0
8447 -8585 0
8449 -8587 0
8451 -8589 0
8453 -8591 0
8455 -8593 0
8457 -8595 0
8459 -8597 0
8461 -8599 0
8463 -8601 0
8465 -8603 0
8467 -8605 0
8469 -8607 0
6157 -8576 0
6157 8438 -8577 0
6157 8439 -8579 0
6157 8441 -8581 0
6157 8443 -8583 0
6157 8445 -8585 0
6157 8447 -8587 0
6157 8449 -8589 0
6157 8451 -8591 0
6157 8453 -8593 0
6157 8455 -8595 0
6157 8457 -8597 0
6157 8459 -8599 0
6157 8461 -8601 0
6157 8463 -8603 0
6157 8465 -8605 0
6157 8467 -8607 0
6157 8469 -8609 0
6158 -8577 0
6158 8438 -8579 0
6158 8439 -8581 0
6158 8441 -8583 0
6158 8443 -8585 0
6158 8445 -8587 0
6158 8447 -8589 0
6158 8449 -8591 0
6158 8451 -8593 0
6158 8453 -8595 0
6158 8455 -8597 0
6158 8457 -8599 0
6158 8459 -8601 0
6158 8461 -8603 0
6158 8463 -8605 0
6158 8465 -8607 0
6158 8467 -8609 0
6158 8469 -8611 0
6160 -8579 0
6160 8438 -8581 0
6160 8439 -8583 0
6160 8441 -8585 0
6160 8443 -8587 0
6160 8445 -8589 0
6160 8447 -8591 0
6160 8449 -8593 0
6160 8451 -8595 0
6160 8453 -8597 0
6160 8455 -8599 0
6160 8457 -8601 0
6160 8459 -8603 0
6160 8461 -8605 0
6160 8463 -8607 0
6160 8465 -8609 0
6160 8467 -8611 0
6160 8469 -8613 0
6162 -8581 0
6162 8438 -8583 0
6162 8439 -8585 0
6162 8441 -8587 0
6162 8443 -8589 0
6162 8445 -8591 0
6162 8447 -8593 0
6162 8449 -8595 0
6162 8451 -8597 0
6162 8453 -8599 0
6162 8455 -8601 0
6162 8457 -8603 0
6162 8459 -8605 0
6162 8461 -8607 0
6162 8463 -8609 0
6162 8465 -8611 0
6162 8467 -8613 0
6162 8469 -8615 0
6164 -8583 0
6164 8438 -8585 0
6164 8439 -8587 0
6164 8441 -8589 0
6164 8443 -8591 0
6164 8445 -8593 0
6164 8447 -8595 0
6164 8449 -8597 0
6164 8451 -8599 0
6164 8453 -8601 0
6164 8455 -8603 0
6164 8457 -8605 0
6164 8459 -8607 0
6164 8461 -8609 0
6164 8463 -8611 0
6164 8465 -8613 0
6164 8467 -8615 0
6164 8469 -8617 0
6166 -8585 0
6166 8438 -8587 0
6166 8439 -8589 0
6166 8441 -8591 0
6166 8443 -8593 0
6166 8445 -8595 0
6166 8447 -8597 0
6166 8449 -8599 0
6166 8451 -8601 0
6166 8453 -8603 0
6166 8455 -8605 0
6166 8457 -8607 0
6166 8459 -8609 0
6166 8461 -8611 0
6166 8463 -8613 0
6166 8465 -8615 0
6166 8467 -8617 0
6166 8469 -8619 0
6168 -8587 0
6168 8438 -8589 0
6168 8439 -8591 0
6168 8441 -8593 0
6168 8443 -8595 0
6168 8445 -8597 0
6168 8447 -8599 0
6168 8449 -8601 0
6168 8451 -8603 0
6168 8453 -8605 0
6168 8455 -8607 0
6168 8457 -8609 0
6168 8459 -8611 0
6168 8461 -8613 0
6168 8463 -8615 0
6168 8465 -8617 0
6168 8467 -8619 0
6168 8469 -8621 0
6170 -8589 0
6170 8438 -8591 0
6170 8439 -8593 0
6170 8441 -8595 0
6170 8443 -8597 0
6170 8445 -8599 0
6170 8447 -8601 0
6170 8449 -8603 0
6170 8451 -8605 0
6170 8453 -8607 0
6170 8455 -8609 0
6170 8457 -8611 0
6170 8459 -8613 0
6170 8461 -8615 0
6170 8463 -8617 0
6170 8465 -8619 0
6170 8467 -8621 0
6170 8469 -8623 0
6172 -8591 0
6172 8438 -8593 0
6172 8439 -8595 0
6172 8441 -8597 0
6172 8443 -8599 0
6172 8445 -8601 0
6172 8447 -8603 0
6172 8449 -8605 0
6172 8451 -8607 0
6172 8453 -8609 0
6172 8455 -8611 0
6172 8457 -8613 0
6172 8459 -8615 0
6172 8461 -8617 0
6172 8463 -8619 0
6172 8465 -8621 0
6172 8467 -8623 0
6172 8469 -8625 0
c (0<=(aux378 - aux382 + aux1))
-8469 8625 0
-8467 8623 0
-8465 8621 0
-8463 8619 0
-8461 8617 0
-8459 8615 0
-8457 8613 0
-8455 8611 0
-8453 8609 0
-8451 8607 0
-8449 8605 0
-8447 8603 0
-8445 8601 0
-8443 8599 0
-8441 8597 0
-8439 8595 0
-8438 8593 0
-6172 8625 0
-6172 -8469 8623 0
-6172 -8467 8621 0
-6172 -8465 8619 0
-6172 -8463 8617 0
-6172 -8461 8615 0
-6172 -8459 8613 0
-6172 -8457 8611 0
-6172 -8455 8609 0
-6172 -8453 8607 0
-6172 -8451 8605 0
-6172 -8449 8603 0
-6172 -8447 8601 0
-6172 -8445 8599 0
-6172 -8443 8597 0
-6172 -8441 8595 0
-6172 -8439 8593 0
-6172 -8438 8591 0
-6170 8623 0
-6170 -8469 8621 0
-6170 -8467 8619 0
-6170 -8465 8617 0
-6170 -8463 8615 0
-6170 -8461 8613 0
-6170 -8459 8611 0
-6170 -8457 8609 0
-6170 -8455 8607 0
-6170 -8453 8605 0
-6170 -8451 8603 0
-6170 -8449 8601 0
-6170 -8447 8599 0
-6170 -8445 8597 0
-6170 -8443 8595 0
-6170 -8441 8593 0
-6170 -8439 8591 0
-6170 -8438 8589 0
-6168 8621 0
-6168 -8469 8619 0
-6168 -8467 8617 0
-6168 -8465 8615 0
-6168 -8463 8613 0
-6168 -8461 8611 0
-6168 -8459 8609 0
-6168 -8457 8607 0
-6168 -8455 8605 0
-6168 -8453 8603 0
-6168 -8451 8601 0
-6168 -8449 8599 0
-6168 -8447 8597 0
-6168 -8445 8595 0
-6168 -8443 8593 0
-6168 -8441 8591 0
-6168 -8439 8589 0
-6168 -8438 8587 0
-6166 8619 0
-6166 -8469 8617 0
-6166 -8467 8615 0
-6166 -8465 8613 0
-6166 -8463 8611 0
-6166 -8461 8609 0
-6166 -8459 8607 0
-6166 -8457 8605 0
-6166 -8455 8603 0
-6166 -8453 8601 0
-6166 -8451 8599 0
-6166 -8449 8597 0
-6166 -8447 8595 0
-6166 -8445 8593 0
-6166 -8443 8591 0
-6166 -8441 8589 0
-6166 -8439 8587 0
-6166 -8438 8585 0
-6164 8617 0
-6164 -8469 8615 0
-6164 -8467 8613 0
-6164 -8465 8611 0
-6164 -8463 8609 0
-6164 -8461 8607 0
-6164 -8459 8605 0
-6164 -8457 8603 0
-6164 -8455 8601 0
-6164 -8453 8599 0
-6164 -8451 8597 0
-6164 -8449 8595 0
-6164 -8447 8593 0
-6164 -8445 8591 0
-6164 -8443 8589 0
-6164 -8441 8587 0
-6164 -8439 8585 0
-6164 -8438 8583 0
-6162 8615 0
-6162 -8469 8613 0
-6162 -8467 8611 0
-6162 -8465 8609 0
-6162 -8463 8607 0
-6162 -8461 8605 0
-6162 -8459 8603 0
-6162 -8457 8601 0
-6162 -8455 8599 0
-6162 -8453 8597 0
-6162 -8451 8595 0
-6162 -8449 8593 0
-6162 -8447 8591 0
-6162 -8445 8589 0
-6162 -8443 8587 0
-6162 -8441 8585 0
-6162 -8439 8583 0
-6162 -8438 8581 0
-6160 8613 0
-6160 -8469 8611 0
-6160 -8467 8609 0
-6160 -8465 8607 0
-6160 -8463 8605 0
-6160 -8461 8603 0
-6160 -8459 8601 0
-6160 -8457 8599 0
-6160 -8455 8597 0
-6160 -8453 8595 0
-6160 -8451 8593 0
-6160 -8449 8591 0
-6160 -8447 8589 0
-6160 -8445 8587 0
-6160 -8443 8585 0
-6160 -8441 8583 0
-6160 -8439 8581 0
-6160 -8438 8579 0
-6158 8611 0
-6158 -8469 8609 0
-6158 -8467 8607 0
-6158 -8465 8605 0
-6158 -8463 8603 0
-6158 -8461 8601 0
-6158 -8459 8599 0
-6158 -8457 8597 0
-6158 -8455 8595 0
-6158 -8453 8593 0
-6158 -8451 8591 0
-6158 -8449 8589 0
-6158 -8447 8587 0
-6158 -8445 8585 0
-6158 -8443 8583 0
-6158 -8441 8581 0
-6158 -8439 8579 0
-6158 -8438 8577 0
-6157 8609 0
-6157 -8469 8607 0
-6157 -8467 8605 0
-6157 -8465 8603 0
-6157 -8463 8601 0
-6157 -8461 8599 0
-6157 -8459 8597 0
-6157 -8457 8595 0
-6157 -8455 8593 0
-6157 -8453 8591 0
-6157 -8451 8589 0
-6157 -8449 8587 0
-6157 -8447 8585 0
-6157 -8445 8583 0
-6157 -8443 8581 0
-6157 -8441 8579 0
-6157 -8439 8577 0
-6157 -8438 8576 0
c ((aux380 + aux381 - aux383)<=0)
8541 -8627 0
8542 -8628 0
8544 -8630 0
8546 -8632 0
8548 -8634 0
8550 -8636 0
8552 -8638 0
8554 -8640 0
8556 -8642 0
8558 -8644 0
8560 -8646 0
8562 -8648 0
8564 -8650 0
8566 -8652 0
8568 -8654 0
8570 -8656 0
8572 -8658 0
8574 -8660 0
8506 -8627 0
8506 8541 -8628 0
8506 8542 -8630 0
8506 8544 -8632 0
8506 8546 -8634 0
8506 8548 -8636 0
8506 8550 -8638 0
8506 8552 -8640 0
8506 8554 -8642 0
8506 8556 -8644 0
8506 8558 -8646 0
8506 8560 -8648 0
8506 8562 -8650 0
8506 8564 -8652 0
8506 8566 -8654 0
8506 8568 -8656 0
8506 8570 -8658 0
8506 8572 -8660 0
8506 8574 -8662 0
8507 -8628 0
8507 8541 -8630 0
8507 8542 -8632 0
8507 8544 -8634 0
8507 8546 -8636 0
8507 8548 -8638 0
8507 8550 -8640 0
8507 8552 -8642 0
8507 8554 -8644 0
8507 8556 -8646 0
8507 8558 -8648 0
8507 8560 -8650 0
8507 8562 -8652 0
8507 8564 -8654 0
8507 8566 -8656 0
8507 8568 -8658 0
8507 8570 -8660 0
8507 8572 -8662 0
8507 8574 -8664 0
8509 -8630 0
8509 8541 -8632 0
8509 8542 -8634 0
8509 8544 -8636 0
8509 8546 -8638 0
8509 8548 -8640 0
8509 8550 -8642 0
8509 8552 -8644 0
8509 8554 -8646 0
8509 8556 -8648 0
8509 8558 -8650 0
8509 8560 -8652 0
8509 8562 -8654 0
8509 8564 -8656 0
8509 8566 -8658 0
8509 8568 -8660 0
8509 8570 -8662 0
8509 8572 -8664 0
8509 8574 -8666 0
8511 -8632 0
8511 8541 -8634 0
8511 8542 -8636 0
8511 8544 -8638 0
8511 8546 -8640 0
8511 8548 -8642 0
8511 8550 -8644 0
8511 8552 -8646 0
8511 8554 -8648 0
8511 8556 -8650 0
8511 8558 -8652 0
8511 8560 -8654 0
8511 8562 -8656 0
8511 8564 -8658 0
8511 8566 -8660 0
8511 8568 -8662 0
8511 8570 -8664 0
8511 8572 -8666 0
8511 8574 -8668 0
8513 -8634 0
8513 8541 -8636 0
8513 8542 -8638 0
8513 8544 -8640 0
8513 8546 -8642 0
8513 8548 -8644 0
8513 8550 -8646 0
8513 8552 -8648 0
8513 8554 -8650 0
8513 8556 -8652 0
8513 8558 -8654 0
8513 8560 -8656 0
8513 8562 -8658 0
8513 8564 -8660 0
8513 8566 -8662 0
8513 8568 -8664 0
8513 8570 -8666 0
8513 8572 -8668 0
8513 8574 -8670 0
8515 -8636 0
8515 8541 -8638 0
8515 8542 -8640 0
8515 8544 -8642 0
8515 8546 -8644 0
8515 8548 -8646 0
8515 8550 -8648 0
8515 8552 -8650 0
8515 8554 -8652 0
8515 8556 -8654 0
8515 8558 -8656 0
8515 8560 -8658 0
8515 8562 -8660 0
8515 8564 -8662 0
8515 8566 -8664 0
8515 8568 -8666 0
8515 8570 -8668 0
8515 8572 -8670 0
8515 8574 -8672 0
8517 -8638 0
8517 8541 -8640 0
8517 8542 -8642 0
8517 8544 -8644 0
8517 8546 -8646 0
8517 8548 -8648 0
8517 8550 -8650 0
8517 8552 -8652 0
8517 8554 -8654 0
8517 8556 -8656 0
8517 8558 -8658 0
8517 8560 -8660 0
8517 8562 -8662 0
8517 8564 -8664 0
8517 8566 -8666 0
8517 8568 -8668 0
8517 8570 -8670 0
8517 8572 -8672 0
8517 8574 -8674 0
8519 -8640 0
8519 8541 -8642 0
8519 8542 -8644 0
8519 8544 -8646 0
8519 8546 -8648 0
8519 8548 -8650 0
8519 8550 -8652 0
8519 8552 -8654 0
8519 8554 -8656 0
8519 8556 -8658 0
8519 8558 -8660 0
8519 8560 -8662 0
8519 8562 -8664 0
8519 8564 -8666 0
8519 8566 -8668 0
8519 8568 -8670 0
8519 8570 -8672 0
8519 8572 -8674 0
8519 8574 -8676 0
8521 -8642 0
8521 8541 -8644 0
8521 8542 -8646 0
8521 8544 -8648 0
8521 8546 -8650 0
8521 8548 -8652 0
8521 8550 -8654 0
8521 8552 -8656 0
8521 8554 -8658 0
8521 8556 -8660 0
8521 8558 -8662 0
8521 8560 -8664 0
8521 8562 -8666 0
8521 8564 -8668 0
8521 8566 -8670 0
8521 8568 -8672 0
8521 8570 -8674 0
8521 8572 -8676 0
8521 8574 -8678 0
8523 -8644 0
8523 8541 -8646 0
8523 8542 -8648 0
8523 8544 -8650 0
8523 8546 -8652 0
8523 8548 -8654 0
8523 8550 -8656 0
8523 8552 -8658 0
8523 8554 -8660 0
8523 8556 -8662 0
8523 8558 -8664 0
8523 8560 -8666 0
8523 8562 -8668 0
8523 8564 -8670 0
8523 8566 -8672 0
8523 8568 -8674 0
8523 8570 -8676 0
8523 8572 -8678 0
8523 8574 -8680 0
8525 -8646 0
8525 8541 -8648 0
8525 8542 -8650 0
8525 8544 -8652 0
8525 8546 -8654 0
8525 8548 -8656 0
8525 8550 -8658 0
8525 8552 -8660 0
8525 8554 -8662 0
8525 8556 -8664 0
8525 8558 -8666 0
8525 8560 -8668 0
8525 8562 -8670 0
8525 8564 -8672 0
8525 8566 -8674 0
8525 8568 -8676 0
8525 8570 -8678 0
8525 8572 -8680 0
8525 8574 -8682 0
8527 -8648 0
8527 8541 -8650 0
8527 8542 -8652 0
8527 8544 -8654 0
8527 8546 -8656 0
8527 8548 -8658 0
8527 8550 -8660 0
8527 8552 -8662 0
8527 8554 -8664 0
8527 8556 -8666 0
8527 8558 -8668 0
8527 8560 -8670 0
8527 8562 -8672 0
8527 8564 -8674 0
8527 8566 -8676 0
8527 8568 -8678 0
8527 8570 -8680 0
8527 8572 -8682 0
8527 8574 -8684 0
8529 -8650 0
8529 8541 -8652 0
8529 8542 -8654 0
8529 8544 -8656 0
8529 8546 -8658 0
8529 8548 -8660 0
8529 8550 -8662 0
8529 8552 -8664 0
8529 8554 -8666 0
8529 8556 -8668 0
8529 8558 -8670 0
8529 8560 -8672 0
8529 8562 -8674 0
8529 8564 -8676 0
8529 8566 -8678 0
8529 8568 -8680 0
8529 8570 -8682 0
8529 8572 -8684 0
8529 8574 -8686 0
8531 -8652 0
8531 8541 -8654 0
8531 8542 -8656 0
8531 8544 -8658 0
8531 8546 -8660 0
8531 8548 -8662 0
8531 8550 -8664 0
8531 8552 -8666 0
8531 8554 -8668 0
8531 8556 -8670 0
8531 8558 -8672 0
8531 8560 -8674 0
8531 8562 -8676 0
8531 8564 -8678 0
8531 8566 -8680 0
8531 8568 -8682 0
8531 8570 -8684 0
8531 8572 -8686 0
8531 8574 -8688 0
8533 -8654 0
8533 8541 -8656 0
8533 8542 -8658 0
8533 8544 -8660 0
8533 8546 -8662 0
8533 8548 -8664 0
8533 8550 -8666 0
8533 8552 -8668 0
8533 8554 -8670 0
8533 8556 -8672 0
8533 8558 -8674 0
8533 8560 -8676 0
8533 8562 -8678 0
8533 8564 -8680 0
8533 8566 -8682 0
8533 8568 -8684 0
8533 8570 -8686 0
8533 8572 -8688 0
8533 8574 -8690 0
8535 -8656 0
8535 8541 -8658 0
8535 8542 -8660 0
8535 8544 -8662 0
8535 8546 -8664 0
8535 8548 -8666 0
8535 8550 -8668 0
8535 8552 -8670 0
8535 8554 -8672 0
8535 8556 -8674 0
8535 8558 -8676 0
8535 8560 -8678 0
8535 8562 -8680 0
8535 8564 -8682 0
8535 8566 -8684 0
8535 8568 -8686 0
8535 8570 -8688 0
8535 8572 -8690 0
8535 8574 -8692 0
8537 -8658 0
8537 8541 -8660 0
8537 8542 -8662 0
8537 8544 -8664 0
8537 8546 -8666 0
8537 8548 -8668 0
8537 8550 -8670 0
8537 8552 -8672 0
8537 8554 -8674 0
8537 8556 -8676 0
8537 8558 -8678 0
8537 8560 -8680 0
8537 8562 -8682 0
8537 8564 -8684 0
8537 8566 -8686 0
8537 8568 -8688 0
8537 8570 -8690 0
8537 8572 -8692 0
8537 8574 -8694 0
8539 -8660 0
8539 8541 -8662 0
8539 8542 -8664 0
8539 8544 -8666 0
8539 8546 -8668 0
8539 8548 -8670 0
8539 8550 -8672 0
8539 8552 -8674 0
8539 8554 -8676 0
8539 8556 -8678 0
8539 8558 -8680 0
8539 8560 -8682 0
8539 8562 -8684 0
8539 8564 -8686 0
8539 8566 -8688 0
8539 8568 -8690 0
8539 8570 -8692 0
8539 8572 -8694 0
8539 8574 -8696 0
c (0<=(aux380 + aux381 - aux383))
-8574 8696 0
-8572 8694 0
-8570 8692 0
-8568 8690 0
-8566 8688 0
-8564 8686 0
-8562 8684 0
-8560 8682 0
-8558 8680 0
-8556 8678 0
-8554 8676 0
-8552 8674 0
-8550 8672 0
-8548 8670 0
-8546 8668 0
-8544 8666 0
-8542 8664 0
-8541 8662 0
-8539 8696 0
-8539 -8574 8694 0
-8539 -8572 8692 0
-8539 -8570 8690 0
-8539 -8568 8688 0
-8539 -8566 8686 0
-8539 -8564 8684 0
-8539 -8562 8682 0
-8539 -8560 8680 0
-8539 -8558 8678 0
-8539 -8556 8676 0
-8539 -8554 8674 0
-8539 -8552 8672 0
-8539 -8550 8670 0
-8539 -8548 8668 0
-8539 -8546 8666 0
-8539 -8544 8664 0
-8539 -8542 8662 0
-8539 -8541 8660 0
-8537 8694 0
-8537 -8574 8692 0
-8537 -8572 8690 0
-8537 -8570 8688 0
-8537 -8568 8686 0
-8537 -8566 8684 0
-8537 -8564 8682 0
-8537 -8562 8680 0
-8537 -8560 8678 0
-8537 -8558 8676 0
-8537 -8556 8674 0
-8537 -8554 8672 0
-8537 -8552 8670 0
-8537 -8550 8668 0
-8537 -8548 8666 0
-8537 -8546 8664 0
-8537 -8544 8662 0
-8537 -8542 8660 0
-8537 -8541 8658 0
-8535 8692 0
-8535 -8574 8690 0
-8535 -8572 8688 0
-8535 -8570 8686 0
-8535 -8568 8684 0
-8535 -8566 8682 0
-8535 -8564 8680 0
-8535 -8562 8678 0
-8535 -8560 8676 0
-8535 -8558 8674 0
-8535 -8556 8672 0
-8535 -8554 8670 0
-8535 -8552 8668 0
-8535 -8550 8666 0
-8535 -8548 8664 0
-8535 -8546 8662 0
-8535 -8544 8660 0
-8535 -8542 8658 0
-8535 -8541 8656 0
-8533 8690 0
-8533 -8574 8688 0
-8533 -8572 8686 0
-8533 -8570 8684 0
-8533 -8568 8682 0
-8533 -8566 8680 0
-8533 -8564 8678 0
-8533 -8562 8676 0
-8533 -8560 8674 0
-8533 -8558 8672 0
-8533 -8556 8670 0
-8533 -8554 8668 0
-8533 -8552 8666 0
-8533 -8550 8664 0
-8533 -8548 8662 0
-8533 -8546 8660 0
-8533 -8544 8658 0
-8533 -8542 8656 0
-8533 -8541 8654 0
-8531 8688 0
-8531 -8574 8686 0
-8531 -8572 8684 0
-8531 -8570 8682 0
-8531 -8568 8680 0
-8531 -8566 8678 0
-8531 -8564 8676 0
-8531 -8562 8674 0
-8531 -8560 8672 0
-8531 -8558 8670 0
-8531 -8556 8668 0
-8531 -8554 8666 0
-8531 -8552 8664 0
-8531 -8550 8662 0
-8531 -8548 8660 0
-8531 -8546 8658 0
-8531 -8544 8656 0
-8531 -8542 8654 0
-8531 -8541 8652 0
-8529 8686 0
-8529 -8574 8684 0
-8529 -8572 8682 0
-8529 -8570 8680 0
-8529 -8568 8678 0
-8529 -8566 8676 0
-8529 -8564 8674 0
-8529 -8562 8672 0
-8529 -8560 8670 0
-8529 -8558 8668 0
-8529 -8556 8666 0
-8529 -8554 8664 0
-8529 -8552 8662 0
-8529 -8550 8660 0
-8529 -8548 8658 0
-8529 -8546 8656 0
-8529 -8544 8654 0
-8529 -8542 8652 0
-8529 -8541 8650 0
-8527 8684 0
-8527 -8574 8682 0
-8527 -8572 8680 0
-8527 -8570 8678 0
-8527 -8568 8676 0
-8527 -8566 8674 0
-8527 -8564 8672 0
-8527 -8562 8670 0
-8527 -8560 8668 0
-8527 -8558 8666 0
-8527 -8556 8664 0
-8527 -8554 8662 0
-8527 -8552 8660 0
-8527 -8550 8658 0
-8527 -8548 8656 0
-8527 -8546 8654 0
-8527 -8544 8652 0
-8527 -8542 8650 0
-8527 -8541 8648 0
-8525 8682 0
-8525 -8574 8680 0
-8525 -8572 8678 0
-8525 -8570 8676 0
-8525 -8568 8674 0
-8525 -8566 8672 0
-8525 -8564 8670 0
-8525 -8562 8668 0
-8525 -8560 8666 0
-8525 -8558 8664 0
-8525 -8556 8662 0
-8525 -8554 8660 0
-8525 -8552 8658 0
-8525 -8550 8656 0
-8525 -8548 8654 0
-8525 -8546 8652 0
-8525 -8544 8650 0
-8525 -8542 8648 0
-8525 -8541 8646 0
-8523 8680 0
-8523 -8574 8678 0
-8523 -8572 8676 0
-8523 -8570 8674 0
-8523 -8568 8672 0
-8523 -8566 8670 0
-8523 -8564 8668 0
-8523 -8562 8666 0
-8523 -8560 8664 0
-8523 -8558 8662 0
-8523 -8556 8660 0
-8523 -8554 8658 0
-8523 -8552 8656 0
-8523 -8550 8654 0
-8523 -8548 8652 0
-8523 -8546 8650 0
-8523 -8544 8648 0
-8523 -8542 8646 0
-8523 -8541 8644 0
-8521 8678 0
-8521 -8574 8676 0
-8521 -8572 8674 0
-8521 -8570 8672 0
-8521 -8568 8670 0
-8521 -8566 8668 0
-8521 -8564 8666 0
-8521 -8562 8664 0
-8521 -8560 8662 0
-8521 -8558 8660 0
-8521 -8556 8658 0
-8521 -8554 8656 0
-8521 -8552 8654 0
-8521 -8550 8652 0
-8521 -8548 8650 0
-8521 -8546 8648 0
-8521 -8544 8646 0
-8521 -8542 8644 0
-8521 -8541 8642 0
-8519 8676 0
-8519 -8574 8674 0
-8519 -8572 8672 0
-8519 -8570 8670 0
-8519 -8568 8668 0
-8519 -8566 8666 0
-8519 -8564 8664 0
-8519 -8562 8662 0
-8519 -8560 8660 0
-8519 -8558 8658 0
-8519 -8556 8656 0
-8519 -8554 8654 0
-8519 -8552 8652 0
-8519 -8550 8650 0
-8519 -8548 8648 0
-8519 -8546 8646 0
-8519 -8544 8644 0
-8519 -8542 8642 0
-8519 -8541 8640 0
-8517 8674 0
-8517 -8574 8672 0
-8517 -8572 8670 0
-8517 -8570 8668 0
-8517 -8568 8666 0
-8517 -8566 8664 0
-8517 -8564 8662 0
-8517 -8562 8660 0
-8517 -8560 8658 0
-8517 -8558 8656 0
-8517 -8556 8654 0
-8517 -8554 8652 0
-8517 -8552 8650 0
-8517 -8550 8648 0
-8517 -8548 8646 0
-8517 -8546 8644 0
-8517 -8544 8642 0
-8517 -8542 8640 0
-8517 -8541 8638 0
-8515 8672 0
-8515 -8574 8670 0
-8515 -8572 8668 0
-8515 -8570 8666 0
-8515 -8568 8664 0
-8515 -8566 8662 0
-8515 -8564 8660 0
-8515 -8562 8658 0
-8515 -8560 8656 0
-8515 -8558 8654 0
-8515 -8556 8652 0
-8515 -8554 8650 0
-8515 -8552 8648 0
-8515 -8550 8646 0
-8515 -8548 8644 0
-8515 -8546 8642 0
-8515 -8544 8640 0
-8515 -8542 8638 0
-8515 -8541 8636 0
-8513 8670 0
-8513 -8574 8668 0
-8513 -8572 8666 0
-8513 -8570 8664 0
-8513 -8568 8662 0
-8513 -8566 8660 0
-8513 -8564 8658 0
-8513 -8562 8656 0
-8513 -8560 8654 0
-8513 -8558 8652 0
-8513 -8556 8650 0
-8513 -8554 8648 0
-8513 -8552 8646 0
-8513 -8550 8644 0
-8513 -8548 8642 0
-8513 -8546 8640 0
-8513 -8544 8638 0
-8513 -8542 8636 0
-8513 -8541 8634 0
-8511 8668 0
-8511 -8574 8666 0
-8511 -8572 8664 0
-8511 -8570 8662 0
-8511 -8568 8660 0
-8511 -8566 8658 0
-8511 -8564 8656 0
-8511 -8562 8654 0
-8511 -8560 8652 0
-8511 -8558 8650 0
-8511 -8556 8648 0
-8511 -8554 8646 0
-8511 -8552 8644 0
-8511 -8550 8642 0
-8511 -8548 8640 0
-8511 -8546 8638 0
-8511 -8544 8636 0
-8511 -8542 8634 0
-8511 -8541 8632 0
-8509 8666 0
-8509 -8574 8664 0
-8509 -8572 8662 0
-8509 -8570 8660 0
-8509 -8568 8658 0
-8509 -8566 8656 0
-8509 -8564 8654 0
-8509 -8562 8652 0
-8509 -8560 8650 0
-8509 -8558 8648 0
-8509 -8556 8646 0
-8509 -8554 8644 0
-8509 -8552 8642 0
-8509 -8550 8640 0
-8509 -8548 8638 0
-8509 -8546 8636 0
-8509 -8544 8634 0
-8509 -8542 8632 0
-8509 -8541 8630 0
-8507 8664 0
-8507 -8574 8662 0
-8507 -8572 8660 0
-8507 -8570 8658 0
-8507 -8568 8656 0
-8507 -8566 8654 0
-8507 -8564 8652 0
-8507 -8562 8650 0
-8507 -8560 8648 0
-8507 -8558 8646 0
-8507 -8556 8644 0
-8507 -8554 8642 0
-8507 -8552 8640 0
-8507 -8550 8638 0
-8507 -8548 8636 0
-8507 -8546 8634 0
-8507 -8544 8632 0
-8507 -8542 8630 0
-8507 -8541 8628 0
-8506 8662 0
-8506 -8574 8660 0
-8506 -8572 8658 0
-8506 -8570 8656 0
-8506 -8568 8654 0
-8506 -8566 8652 0
-8506 -8564 8650 0
-8506 -8562 8648 0
-8506 -8560 8646 0
-8506 -8558 8644 0
-8506 -8556 8642 0
-8506 -8554 8640 0
-8506 -8552 8638 0
-8506 -8550 8636 0
-8506 -8548 8634 0
-8506 -8546 8632 0
-8506 -8544 8630 0
-8506 -8542 8628 0
-8506 -8541 8627 0
c (( - aux384 + aux12 + shift(variant_fields_00001_00004_00001, -1))<=0)
6328 -8698 0
6329 -8699 0
6331 -8701 0
6333 -8703 0
6335 -8705 0
6337 -8707 0
6339 -8709 0
6341 -8711 0
6343 -8713 0
1622 -8698 0
1622 6328 -8699 0
1622 6329 -8701 0
1622 6331 -8703 0
1622 6333 -8705 0
1622 6335 -8707 0
1622 6337 -8709 0
1622 6339 -8711 0
1622 6341 -8713 0
1622 6343 -8715 0
1623 -8699 0
1623 6328 -8701 0
1623 6329 -8703 0
1623 6331 -8705 0
1623 6333 -8707 0
1623 6335 -8709 0
1623 6337 -8711 0
1623 6339 -8713 0
1623 6341 -8715 0
1623 6343 -8717 0
1625 -8701 0
1625 6328 -8703 0
1625 6329 -8705 0
1625 6331 -8707 0
1625 6333 -8709 0
1625 6335 -8711 0
1625 6337 -8713 0
1625 6339 -8715 0
1625 6341 -8717 0
1625 6343 -8719 0
1627 -8703 0
1627 6328 -8705 0
1627 6329 -8707 0
1627 6331 -8709 0
1627 6333 -8711 0
1627 6335 -8713 0
1627 6337 -8715 0
1627 6339 -8717 0
1627 6341 -8719 0
1627 6343 -8721 0
1629 -8705 0
1629 6328 -8707 0
1629 6329 -8709 0
1629 6331 -8711 0
1629 6333 -8713 0
1629 6335 -8715 0
1629 6337 -8717 0
1629 6339 -8719 0
1629 6341 -8721 0
1629 6343 -8723 0
1631 -8707 0
1631 6328 -8709 0
1631 6329 -8711 0
1631 6331 -8713 0
1631 6333 -8715 0
1631 6335 -8717 0
1631 6337 -8719 0
1631 6339 -8721 0
1631 6341 -8723 0
1631 6343 -8725 0
1633 -8709 0
1633 6328 -8711 0
1633 6329 -8713 0
1633 6331 -8715 0
1633 6333 -8717 0
1633 6335 -8719 0
1633 6337 -8721 0
1633 6339 -8723 0
1633 6341 -8725 0
1633 6343 -8727 0
1635 -8711 0
1635 6328 -8713 0
1635 6329 -8715 0
1635 6331 -8717 0
1635 6333 -8719 0
1635 6335 -8721 0
1635 6337 -8723 0
1635 6339 -8725 0
1635 6341 -8727 0
1635 6343 -8729 0
c (0<=( - aux384 + aux12 + shift(variant_fields_00001_00004_00001, -1)))
-6343 8729 0
-6341 8727 0
-6339 8725 0
-6337 8723 0
-6335 8721 0
-6333 8719 0
-6331 8717 0
-6329 8715 0
-6328 8713 0
-1635 8729 0
-1635 -6343 8727 0
-1635 -6341 8725 0
-1635 -6339 8723 0
-1635 -6337 8721 0
-1635 -6335 8719 0
-1635 -6333 8717 0
-1635 -6331 8715 0
-1635 -6329 8713 0
-1635 -6328 8711 0
-1633 8727 0
-1633 -6343 8725 0
-1633 -6341 8723 0
-1633 -6339 8721 0
-1633 -6337 8719 0
-1633 -6335 8717 0
-1633 -6333 8715 0
-1633 -6331 8713 0
-1633 -6329 8711 0
-1633 -6328 8709 0
-1631 8725 0
-1631 -6343 8723 0
-1631 -6341 8721 0
-1631 -6339 8719 0
-1631 -6337 8717 0
-1631 -6335 8715 0
-1631 -6333 8713 0
-1631 -6331 8711 0
-1631 -6329 8709 0
-1631 -6328 8707 0
-1629 8723 0
-1629 -6343 8721 0
-1629 -6341 8719 0
-1629 -6339 8717 0
-1629 -6337 8715 0
-1629 -6335 8713 0
-1629 -6333 8711 0
-1629 -6331 8709 0
-1629 -6329 8707 0
-1629 -6328 8705 0
-1627 8721 0
-1627 -6343 8719 0
-1627 -6341 8717 0
-1627 -6339 8715 0
-1627 -6337 8713 0
-1627 -6335 8711 0
-1627 -6333 8709 0
-1627 -6331 8707 0
-1627 -6329 8705 0
-1627 -6328 8703 0
-1625 8719 0
-1625 -6343 8717 0
-1625 -6341 8715 0
-1625 -6339 8713 0
-1625 -6337 8711 0
-1625 -6335 8709 0
-1625 -6333 8707 0
-1625 -6331 8705 0
-1625 -6329 8703 0
-1625 -6328 8701 0
-1623 8717 0
-1623 -6343 8715 0
-1623 -6341 8713 0
-1623 -6339 8711 0
-1623 -6337 8709 0
-1623 -6335 8707 0
-1623 -6333 8705 0
-1623 -6331 8703 0
-1623 -6329 8701 0
-1623 -6328 8699 0
-1622 8715 0
-1622 -6343 8713 0
-1622 -6341 8711 0
-1622 -6339 8709 0
-1622 -6337 8707 0
-1622 -6335 8705 0
-1622 -6333 8703 0
-1622 -6331 8701 0
-1622 -6329 8699 0
-1622 -6328 8698 0
c (( - aux385 + aux9 + aux16)<=0)
6396 -8731 0
6397 -8732 0
6399 -8734 0
6401 -8736 0
6403 -8738 0
6405 -8740 0
6407 -8742 0
6409 -8744 0
6411 -8746 0
6277 -8731 0
6277 6396 -8732 0
6277 6397 -8734 0
6277 6399 -8736 0
6277 6401 -8738 0
6277 6403 -8740 0
6277 6405 -8742 0
6277 6407 -8744 0
6277 6409 -8746 0
6277 6411 -8748 0
6278 -8732 0
6278 6396 -8734 0
6278 6397 -8736 0
6278 6399 -8738 0
6278 6401 -8740 0
6278 6403 -8742 0
6278 6405 -8744 0
6278 6407 -8746 0
6278 6409 -8748 0
6278 6411 -8750 0
6280 -8734 0
6280 6396 -8736 0
6280 6397 -8738 0
6280 6399 -8740 0
6280 6401 -8742 0
6280 6403 -8744 0
6280 6405 -8746 0
6280 6407 -8748 0
6280 6409 -8750 0
6280 6411 -8752 0
6282 -8736 0
6282 6396 -8738 0
6282 6397 -8740 0
6282 6399 -8742 0
6282 6401 -8744 0
6282 6403 -8746 0
6282 6405 -8748 0
6282 6407 -8750 0
6282 6409 -8752 0
6282 6411 -8754 0
6284 -8738 0
6284 6396 -8740 0
6284 6397 -8742 0
6284 6399 -8744 0
6284 6401 -8746 0
6284 6403 -8748 0
6284 6405 -8750 0
6284 6407 -8752 0
6284 6409 -8754 0
6284 6411 -8756 0
6286 -8740 0
6286 6396 -8742 0
6286 6397 -8744 0
6286 6399 -8746 0
6286 6401 -8748 0
6286 6403 -8750 0
6286 6405 -8752 0
6286 6407 -8754 0
6286 6409 -8756 0
6286 6411 -8758 0
6288 -8742 0
6288 6396 -8744 0
6288 6397 -8746 0
6288 6399 -8748 0
6288 6401 -8750 0
6288 6403 -8752 0
6288 6405 -8754 0
6288 6407 -8756 0
6288 6409 -8758 0
6288 6411 -8760 0
6290 -8744 0
6290 6396 -8746 0
6290 6397 -8748 0
6290 6399 -8750 0
6290 6401 -8752 0
6290 6403 -8754 0
6290 6405 -8756 0
6290 6407 -8758 0
6290 6409 -8760 0
6290 6411 -8762 0
6292 -8746 0
6292 6396 -8748 0
6292 6397 -8750 0
6292 6399 -8752 0
6292 6401 -8754 0
6292 6403 -8756 0
6292 6405 -8758 0
6292 6407 -8760 0
6292 6409 -8762 0
6292 6411 -8764 0
c (0<=( - aux385 + aux9 + aux16))
-6411 8764 0
-6409 8762 0
-6407 8760 0
-6405 8758 0
-6403 8756 0
-6401 8754 0
-6399 8752 0
-6397 8750 0
-6396 8748 0
-6292 8764 0
-6292 -6411 8762 0
-6292 -6409 8760 0
-6292 -6407 8758 0
-6292 -6405 8756 0
-6292 -6403 8754 0
-6292 -6401 8752 0
-6292 -6399 8750 0
-6292 -6397 8748 0
-6292 -6396 8746 0
-6290 8762 0
-6290 -6411 8760 0
-6290 -6409 8758 0
-6290 -6407 8756 0
-6290 -6405 8754 0
-6290 -6403 8752 0
-6290 -6401 8750 0
-6290 -6399 8748 0
-6290 -6397 8746 0
-6290 -6396 8744 0
-6288 8760 0
-6288 -6411 8758 0
-6288 -6409 8756 0
-6288 -6407 8754 0
-6288 -6405 8752 0
-6288 -6403 8750 0
-6288 -6401 8748 0
-6288 -6399 8746 0
-6288 -6397 8744 0
-6288 -6396 8742 0
-6286 8758 0
-6286 -6411 8756 0
-6286 -6409 8754 0
-6286 -6407 8752 0
-6286 -6405 8750 0
-6286 -6403 8748 0
-6286 -6401 8746 0
-6286 -6399 8744 0
-6286 -6397 8742 0
-6286 -6396 8740 0
-6284 8756 0
-6284 -6411 8754 0
-6284 -6409 8752 0
-6284 -6407 8750 0
-6284 -6405 8748 0
-6284 -6403 8746 0
-6284 -6401 8744 0
-6284 -6399 8742 0
-6284 -6397 8740 0
-6284 -6396 8738 0
-6282 8754 0
-6282 -6411 8752 0
-6282 -6409 8750 0
-6282 -6407 8748 0
-6282 -6405 8746 0
-6282 -6403 8744 0
-6282 -6401 8742 0
-6282 -6399 8740 0
-6282 -6397 8738 0
-6282 -6396 8736 0
-6280 8752 0
-6280 -6411 8750 0
-6280 -6409 8748 0
-6280 -6407 8746 0
-6280 -6405 8744 0
-6280 -6403 8742 0
-6280 -6401 8740 0
-6280 -6399 8738 0
-6280 -6397 8736 0
-6280 -6396 8734 0
-6278 8750 0
-6278 -6411 8748 0
-6278 -6409 8746 0
-6278 -6407 8744 0
-6278 -6405 8742 0
-6278 -6403 8740 0
-6278 -6401 8738 0
-6278 -6399 8736 0
-6278 -6397 8734 0
-6278 -6396 8732 0
-6277 8748 0
-6277 -6411 8746 0
-6277 -6409 8744 0
-6277 -6407 8742 0
-6277 -6405 8740 0
-6277 -6403 8738 0
-6277 -6401 8736 0
-6277 -6399 8734 0
-6277 -6397 8732 0
-6277 -6396 8731 0
c (( - aux386 + aux10 + aux15)<=0)
6379 -8766 0
6380 -8767 0
6382 -8769 0
6384 -8771 0
6386 -8773 0
6388 -8775 0
6390 -8777 0
6392 -8779 0
6394 -8781 0
6294 -8766 0
6294 6379 -8767 0
6294 6380 -8769 0
6294 6382 -8771 0
6294 6384 -8773 0
6294 6386 -8775 0
6294 6388 -8777 0
6294 6390 -8779 0
6294 6392 -8781 0
6294 6394 -8783 0
6295 -8767 0
6295 6379 -8769 0
6295 6380 -8771 0
6295 6382 -8773 0
6295 6384 -8775 0
6295 6386 -8777 0
6295 6388 -8779 0
6295 6390 -8781 0
6295 6392 -8783 0
6295 6394 -8785 0
6297 -8769 0
6297 6379 -8771 0
6297 6380 -8773 0
6297 6382 -8775 0
6297 6384 -8777 0
6297 6386 -8779 0
6297 6388 -8781 0
6297 6390 -8783 0
6297 6392 -8785 0
6297 6394 -8787 0
6299 -8771 0
6299 6379 -8773 0
6299 6380 -8775 0
6299 6382 -8777 0
6299 6384 -8779 0
6299 6386 -8781 0
6299 6388 -8783 0
6299 6390 -8785 0
6299 6392 -8787 0
6299 6394 -8789 0
6301 -8773 0
6301 6379 -8775 0
6301 6380 -8777 0
6301 6382 -8779 0
6301 6384 -8781 0
6301 6386 -8783 0
6301 6388 -8785 0
6301 6390 -8787 0
6301 6392 -8789 0
6301 6394 -8791 0
6303 -8775 0
6303 6379 -8777 0
6303 6380 -8779 0
6303 6382 -8781 0
6303 6384 -8783 0
6303 6386 -8785 0
6303 6388 -8787 0
6303 6390 -8789 0
6303 6392 -8791 0
6303 6394 -8793 0
6305 -8777 0
6305 6379 -8779 0
6305 6380 -8781 0
6305 6382 -8783 0
6305 6384 -8785 0
6305 6386 -8787 0
6305 6388 -8789 0
6305 6390 -8791 0
6305 6392 -8793 0
6305 6394 -8795 0
6307 -8779 0
6307 6379 -8781 0
6307 6380 -8783 0
6307 6382 -8785 0
6307 6384 -8787 0
6307 6386 -8789 0
6307 6388 -8791 0
6307 6390 -8793 0
6307 6392 -8795 0
6307 6394 -8797 0
6309 -8781 0
6309 6379 -8783 0
6309 6380 -8785 0
6309 6382 -8787 0
6309 6384 -8789 0
6309 6386 -8791 0
6309 6388 -8793 0
6309 6390 -8795 0
6309 6392 -8797 0
6309 6394 -8799 0
c (0<=( - aux386 + aux10 + aux15))
-6394 8799 0
-6392 8797 0
-6390 8795 0
-6388 8793 0
-6386 8791 0
-6384 8789 0
-6382 8787 0
-6380 8785 0
-6379 8783 0
-6309 8799 0
-6309 -6394 8797 0
-6309 -6392 8795 0
-6309 -6390 8793 0
-6309 -6388 8791 0
-6309 -6386 8789 0
-6309 -6384 8787 0
-6309 -6382 8785 0
-6309 -6380 8783 0
-6309 -6379 8781 0
-6307 8797 0
-6307 -6394 8795 0
-6307 -6392 8793 0
-6307 -6390 8791 0
-6307 -6388 8789 0
-6307 -6386 8787 0
-6307 -6384 8785 0
-6307 -6382 8783 0
-6307 -6380 8781 0
-6307 -6379 8779 0
-6305 8795 0
-6305 -6394 8793 0
-6305 -6392 8791 0
-6305 -6390 8789 0
-6305 -6388 8787 0
-6305 -6386 8785 0
-6305 -6384 8783 0
-6305 -6382 8781 0
-6305 -6380 8779 0
-6305 -6379 8777 0
-6303 8793 0
-6303 -6394 8791 0
-6303 -6392 8789 0
-6303 -6390 8787 0
-6303 -6388 8785 0
-6303 -6386 8783 0
-6303 -6384 8781 0
-6303 -6382 8779 0
-6303 -6380 8777 0
-6303 -6379 8775 0
-6301 8791 0
-6301 -6394 8789 0
-6301 -6392 8787 0
-6301 -6390 8785 0
-6301 -6388 8783 0
-6301 -6386 8781 0
-6301 -6384 8779 0
-6301 -6382 8777 0
-6301 -6380 8775 0
-6301 -6379 8773 0
-6299 8789 0
-6299 -6394 8787 0
-6299 -6392 8785 0
-6299 -6390 8783 0
-6299 -6388 8781 0
-6299 -6386 8779 0
-6299 -6384 8777 0
-6299 -6382 8775 0
-6299 -6380 8773 0
-6299 -6379 8771 0
-6297 8787 0
-6297 -6394 8785 0
-6297 -6392 8783 0
-6297 -6390 8781 0
-6297 -6388 8779 0
-6297 -6386 8777 0
-6297 -6384 8775 0
-6297 -6382 8773 0
-6297 -6380 8771 0
-6297 -6379 8769 0
-6295 8785 0
-6295 -6394 8783 0
-6295 -6392 8781 0
-6295 -6390 8779 0
-6295 -6388 8777 0
-6295 -6386 8775 0
-6295 -6384 8773 0
-6295 -6382 8771 0
-6295 -6380 8769 0
-6295 -6379 8767 0
-6294 8783 0
-6294 -6394 8781 0
-6294 -6392 8779 0
-6294 -6390 8777 0
-6294 -6388 8775 0
-6294 -6386 8773 0
-6294 -6384 8771 0
-6294 -6382 8769 0
-6294 -6380 8767 0
-6294 -6379 8766 0
c (( - aux387 + aux13 + aux14)<=0)
6362 -8801 0
6363 -8802 0
6365 -8804 0
6367 -8806 0
6369 -8808 0
6371 -8810 0
6373 -8812 0
6375 -8814 0
6377 -8816 0
6345 -8801 0
6345 6362 -8802 0
6345 6363 -8804 0
6345 6365 -8806 0
6345 6367 -8808 0
6345 6369 -8810 0
6345 6371 -8812 0
6345 6373 -8814 0
6345 6375 -8816 0
6345 6377 -8818 0
6346 -8802 0
6346 6362 -8804 0
6346 6363 -8806 0
6346 6365 -8808 0
6346 6367 -8810 0
6346 6369 -8812 0
6346 6371 -8814 0
6346 6373 -8816 0
6346 6375 -8818 0
6346 6377 -8820 0
6348 -8804 0
6348 6362 -8806 0
6348 6363 -8808 0
6348 6365 -8810 0
6348 6367 -8812 0
6348 6369 -8814 0
6348 6371 -8816 0
6348 6373 -8818 0
6348 6375 -8820 0
6348 6377 -8822 0
6350 -8806 0
6350 6362 -8808 0
6350 6363 -8810 0
6350 6365 -8812 0
6350 6367 -8814 0
6350 6369 -8816 0
6350 6371 -8818 0
6350 6373 -8820 0
6350 6375 -8822 0
6350 6377 -8824 0
6352 -8808 0
6352 6362 -8810 0
6352 6363 -8812 0
6352 6365 -8814 0
6352 6367 -8816 0
6352 6369 -8818 0
6352 6371 -8820 0
6352 6373 -8822 0
6352 6375 -8824 0
6352 6377 -8826 0
6354 -8810 0
6354 6362 -8812 0
6354 6363 -8814 0
6354 6365 -8816 0
6354 6367 -8818 0
6354 6369 -8820 0
6354 6371 -8822 0
6354 6373 -8824 0
6354 6375 -8826 0
6354 6377 -8828 0
6356 -8812 0
6356 6362 -8814 0
6356 6363 -8816 0
6356 6365 -8818 0
6356 6367 -8820 0
6356 6369 -8822 0
6356 6371 -8824 0
6356 6373 -8826 0
6356 6375 -8828 0
6356 6377 -8830 0
6358 -8814 0
6358 6362 -8816 0
6358 6363 -8818 0
6358 6365 -8820 0
6358 6367 -8822 0
6358 6369 -8824 0
6358 6371 -8826 0
6358 6373 -8828 0
6358 6375 -8830 0
6358 6377 -8832 0
6360 -8816 0
6360 6362 -8818 0
6360 6363 -8820 0
6360 6365 -8822 0
6360 6367 -8824 0
6360 6369 -8826 0
6360 6371 -8828 0
6360 6373 -8830 0
6360 6375 -8832 0
6360 6377 -8834 0
c (0<=( - aux387 + aux13 + aux14))
-6377 8834 0
-6375 8832 0
-6373 8830 0
-6371 8828 0
-6369 8826 0
-6367 8824 0
-6365 8822 0
-6363 8820 0
-6362 8818 0
-6360 8834 0
-6360 -6377 8832 0
-6360 -6375 8830 0
-6360 -6373 8828 0
-6360 -6371 8826 0
-6360 -6369 8824 0
-6360 -6367 8822 0
-6360 -6365 8820 0
-6360 -6363 8818 0
-6360 -6362 8816 0
-6358 8832 0
-6358 -6377 8830 0
-6358 -6375 8828 0
-6358 -6373 8826 0
-6358 -6371 8824 0
-6358 -6369 8822 0
-6358 -6367 8820 0
-6358 -6365 8818 0
-6358 -6363 8816 0
-6358 -6362 8814 0
-6356 8830 0
-6356 -6377 8828 0
-6356 -6375 8826 0
-6356 -6373 8824 0
-6356 -6371 8822 0
-6356 -6369 8820 0
-6356 -6367 8818 0
-6356 -6365 8816 0
-6356 -6363 8814 0
-6356 -6362 8812 0
-6354 8828 0
-6354 -6377 8826 0
-6354 -6375 8824 0
-6354 -6373 8822 0
-6354 -6371 8820 0
-6354 -6369 8818 0
-6354 -6367 8816 0
-6354 -6365 8814 0
-6354 -6363 8812 0
-6354 -6362 8810 0
-6352 8826 0
-6352 -6377 8824 0
-6352 -6375 8822 0
-6352 -6373 8820 0
-6352 -6371 8818 0
-6352 -6369 8816 0
-6352 -6367 8814 0
-6352 -6365 8812 0
-6352 -6363 8810 0
-6352 -6362 8808 0
-6350 8824 0
-6350 -6377 8822 0
-6350 -6375 8820 0
-6350 -6373 8818 0
-6350 -6371 8816 0
-6350 -6369 8814 0
-6350 -6367 8812 0
-6350 -6365 8810 0
-6350 -6363 8808 0
-6350 -6362 8806 0
-6348 8822 0
-6348 -6377 8820 0
-6348 -6375 8818 0
-6348 -6373 8816 0
-6348 -6371 8814 0
-6348 -6369 8812 0
-6348 -6367 8810 0
-6348 -6365 8808 0
-6348 -6363 8806 0
-6348 -6362 8804 0
-6346 8820 0
-6346 -6377 8818 0
-6346 -6375 8816 0
-6346 -6373 8814 0
-6346 -6371 8812 0
-6346 -6369 8810 0
-6346 -6367 8808 0
-6346 -6365 8806 0
-6346 -6363 8804 0
-6346 -6362 8802 0
-6345 8818 0
-6345 -6377 8816 0
-6345 -6375 8814 0
-6345 -6373 8812 0
-6345 -6371 8810 0
-6345 -6369 8808 0
-6345 -6367 8806 0
-6345 -6365 8804 0
-6345 -6363 8802 0
-6345 -6362 8801 0
c ((aux384 - aux388 + aux11)<=0)
8698 -8836 0
8699 -8837 0
8701 -8839 0
8703 -8841 0
8705 -8843 0
8707 -8845 0
8709 -8847 0
8711 -8849 0
8713 -8851 0
8715 -8853 0
8717 -8855 0
8719 -8857 0
8721 -8859 0
8723 -8861 0
8725 -8863 0
8727 -8865 0
8729 -8867 0
6311 -8836 0
6311 8698 -8837 0
6311 8699 -8839 0
6311 8701 -8841 0
6311 8703 -8843 0
6311 8705 -8845 0
6311 8707 -8847 0
6311 8709 -8849 0
6311 8711 -8851 0
6311 8713 -8853 0
6311 8715 -8855 0
6311 8717 -8857 0
6311 8719 -8859 0
6311 8721 -8861 0
6311 8723 -8863 0
6311 8725 -8865 0
6311 8727 -8867 0
6311 8729 -8869 0
6312 -8837 0
6312 8698 -8839 0
6312 8699 -8841 0
6312 8701 -8843 0
6312 8703 -8845 0
6312 8705 -8847 0
6312 8707 -8849 0
6312 8709 -8851 0
6312 8711 -8853 0
6312 8713 -8855 0
6312 8715 -8857 0
6312 8717 -8859 0
6312 8719 -8861 0
6312 8721 -8863 0
6312 8723 -8865 0
6312 8725 -8867 0
6312 8727 -8869 0
6312 8729 -8871 0
6314 -8839 0
6314 8698 -8841 0
6314 8699 -8843 0
6314 8701 -8845 0
6314 8703 -8847 0
6314 8705 -8849 0
6314 8707 -8851 0
6314 8709 -8853 0
6314 8711 -8855 0
6314 8713 -8857 0
6314 8715 -8859 0
6314 8717 -8861 0
6314 8719 -8863 0
6314 8721 -8865 0
6314 8723 -8867 0
6314 8725 -8869 0
6314 8727 -8871 0
6314 8729 -8873 0
6316 -8841 0
6316 8698 -8843 0
6316 8699 -8845 0
6316 8701 -8847 0
6316 8703 -8849 0
6316 8705 -8851 0
6316 8707 -8853 0
6316 8709 -8855 0
6316 8711 -8857 0
6316 8713 -8859 0
6316 8715 -8861 0
6316 8717 -8863 0
6316 8719 -8865 0
6316 8721 -8867 0
6316 8723 -8869 0
6316 8725 -8871 0
6316 8727 -8873 0
6316 8729 -8875 0
6318 -8843 0
6318 8698 -8845 0
6318 8699 -8847 0
6318 8701 -8849 0
6318 8703 -8851 0
6318 8705 -8853 0
6318 8707 -8855 0
6318 8709 -8857 0
6318 8711 -8859 0
6318 8713 -8861 0
6318 8715 -8863 0
6318 8717 -8865 0
6318 8719 -8867 0
6318 8721 -8869 0
6318 8723 -8871 0
6318 8725 -8873 0
6318 8727 -8875 0
6318 8729 -8877 0
6320 -8845 0
6320 8698 -8847 0
6320 8699 -8849 0
6320 8701 -8851 0
6320 8703 -8853 0
6320 8705 -8855 0
6320 8707 -8857 0
6320 8709 -8859 0
6320 8711 -8861 0
6320 8713 -8863 0
6320 8715 -8865 0
6320 8717 -8867 0
6320 8719 -8869 0
6320 8721 -8871 0
6320 8723 -8873 0
6320 8725 -8875 0
6320 8727 -8877 0
6320 8729 -8879 0
6322 -8847 0
6322 8698 -8849 0
6322 8699 -8851 0
6322 8701 -8853 0
6322 8703 -8855 0
6322 8705 -8857 0
6322 8707 -8859 0
6322 8709 -8861 0
6322 8711 -8863 0
6322 8713 -8865 0
6322 8715 -8867 0
6322 8717 -8869 0
6322 8719 -8871 0
6322 8721 -8873 0
6322 8723 -8875 0
6322 8725 -8877 0
6322 8727 -8879 0
6322 8729 -8881 0
6324 -8849 0
6324 8698 -8851 0
6324 8699 -8853 0
6324 8701 -8855 0
6324 8703 -8857 0
6324 8705 -8859 0
6324 8707 -8861 0
6324 8709 -8863 0
6324 8711 -8865 0
6324 8713 -8867 0
6324 8715 -8869 0
6324 8717 -8871 0
6324 8719 -8873 0
6324 8721 -8875 0
6324 8723 -8877 0
6324 8725 -8879 0
6324 8727 -8881 0
6324 8729 -8883 0
6326 -8851 0
6326 8698 -8853 0
6326 8699 -8855 0
6326 8701 -8857 0
6326 8703 -8859 0
6326 8705 -8861 0
6326 8707 -8863 0
6326 8709 -8865 0
6326 8711 -8867 0
6326 8713 -8869 0
6326 8715 -8871 0
6326 8717 -8873 0
6326 8719 -8875 0
6326 8721 -8877 0
6326 8723 -8879 0
6326 8725 -8881 0
6326 8727 -8883 0
6326 8729 -8885 0
c (0<=(aux384 - aux388 + aux11))
-8729 8885 0
-8727 8883 0
-8725 8881 0
-8723 8879 0
-8721 8877 0
-8719 8875 0
-8717 8873 0
-8715 8871 0
-8713 8869 0
-8711 8867 0
-8709 8865 0
-8707 8863 0
-8705 8861 0
-8703 8859 0
-8701 8857 0
-8699 8855 0
-8698 8853 0
-6326 8885 0
-6326 -8729 8883 0
-6326 -8727 8881 0
-6326 -8725 8879 0
-6326 -8723 8877 0
-6326 -8721 8875 0
-6326 -8719 8873 0
-6326 -8717 8871 0
-6326 -8715 8869 0
-6326 -8713 8867 0
-6326 -8711 8865 0
-6326 -8709 8863 0
-6326 -8707 8861 0
-6326 -8705 8859 0
-6326 -8703 8857 0
-6326 -8701 8855 0
-6326 -8699 8853 0
-6326 -8698 8851 0
-6324 8883 0
-6324 -8729 8881 0
-6324 -8727 8879 0
-6324 -8725 8877 0
-6324 -8723 8875 0
-6324 -8721 8873 0
-6324 -8719 8871 0
-6324 -8717 8869 0
-6324 -8715 8867 0
-6324 -8713 8865 0
-6324 -8711 8863 0
-6324 -8709 8861 0
-6324 -8707 8859 0
-6324 -8705 8857 0
-6324 -8703 8855 0
-6324 -8701 8853 0
-6324 -8699 8851 0
-6324 -8698 8849 0
-6322 8881 0
-6322 -8729 8879 0
-6322 -8727 8877 0
-6322 -8725 8875 0
-6322 -8723 8873 0
-6322 -8721 8871 0
-6322 -8719 8869 0
-6322 -8717 8867 0
-6322 -8715 8865 0
-6322 -8713 8863 0
-6322 -8711 8861 0
-6322 -8709 8859 0
-6322 -8707 8857 0
-6322 -8705 8855 0
-6322 -8703 8853 0
-6322 -8701 8851 0
-6322 -8699 8849 0
-6322 -8698 8847 0
-6320 8879 0
-6320 -8729 8877 0
-6320 -8727 8875 0
-6320 -8725 8873 0
-6320 -8723 8871 0
-6320 -8721 8869 0
-6320 -8719 8867 0
-6320 -8717 8865 0
-6320 -8715 8863 0
-6320 -8713 8861 0
-6320 -8711 8859 0
-6320 -8709 8857 0
-6320 -8707 8855 0
-6320 -8705 8853 0
-6320 -8703 8851 0
-6320 -8701 8849 0
-6320 -8699 8847 0
-6320 -8698 8845 0
-6318 8877 0
-6318 -8729 8875 0
-6318 -8727 8873 0
-6318 -8725 8871 0
-6318 -8723 8869 0
-6318 -8721 8867 0
-6318 -8719 8865 0
-6318 -8717 8863 0
-6318 -8715 8861 0
-6318 -8713 8859 0
-6318 -8711 8857 0
-6318 -8709 8855 0
-6318 -8707 8853 0
-6318 -8705 8851 0
-6318 -8703 8849 0
-6318 -8701 8847 0
-6318 -8699 8845 0
-6318 -8698 8843 0
-6316 8875 0
-6316 -8729 8873 0
-6316 -8727 8871 0
-6316 -8725 8869 0
-6316 -8723 8867 0
-6316 -8721 8865 0
-6316 -8719 8863 0
-6316 -8717 8861 0
-6316 -8715 8859 0
-6316 -8713 8857 0
-6316 -8711 8855 0
-6316 -8709 8853 0
-6316 -8707 8851 0
-6316 -8705 8849 0
-6316 -8703 8847 0
-6316 -8701 8845 0
-6316 -8699 8843 0
-6316 -8698 8841 0
-6314 8873 0
-6314 -8729 8871 0
-6314 -8727 8869 0
-6314 -8725 8867 0
-6314 -8723 8865 0
-6314 -8721 8863 0
-6314 -8719 8861 0
-6314 -8717 8859 0
-6314 -8715 8857 0
-6314 -8713 8855 0
-6314 -8711 8853 0
-6314 -8709 8851 0
-6314 -8707 8849 0
-6314 -8705 8847 0
-6314 -8703 8845 0
-6314 -8701 8843 0
-6314 -8699 8841 0
-6314 -8698 8839 0
-6312 8871 0
-6312 -8729 8869 0
-6312 -8727 8867 0
-6312 -8725 8865 0
-6312 -8723 8863 0
-6312 -8721 8861 0
-6312 -8719 8859 0
-6312 -8717 8857 0
-6312 -8715 8855 0
-6312 -8713 8853 0
-6312 -8711 8851 0
-6312 -8709 8849 0
-6312 -8707 8847 0
-6312 -8705 8845 0
-6312 -8703 8843 0
-6312 -8701 8841 0
-6312 -8699 8839 0
-6312 -8698 8837 0
-6311 8869 0
-6311 -8729 8867 0
-6311 -8727 8865 0
-6311 -8725 8863 0
-6311 -8723 8861 0
-6311 -8721 8859 0
-6311 -8719 8857 0
-6311 -8717 8855 0
-6311 -8715 8853 0
-6311 -8713 8851 0
-6311 -8711 8849 0
-6311 -8709 8847 0
-6311 -8707 8845 0
-6311 -8705 8843 0
-6311 -8703 8841 0
-6311 -8701 8839 0
-6311 -8699 8837 0
-6311 -8698 8836 0
c ((aux386 + aux387 - aux389)<=0)
8801 -8887 0
8802 -8888 0
8804 -8890 0
8806 -8892 0
8808 -8894 0
8810 -8896 0
8812 -8898 0
8814 -8900 0
8816 -8902 0
8818 -8904 0
8820 -8906 0
8822 -8908 0
8824 -8910 0
8826 -8912 0
8828 -8914 0
8830 -8916 0
8832 -8918 0
8834 -8920 0
8766 -8887 0
8766 8801 -8888 0
8766 8802 -8890 0
8766 8804 -8892 0
8766 8806 -8894 0
8766 8808 -8896 0
8766 8810 -8898 0
8766 8812 -8900 0
8766 8814 -8902 0
8766 8816 -8904 0
8766 8818 -8906 0
8766 8820 -8908 0
8766 8822 -8910 0
8766 8824 -8912 0
8766 8826 -8914 0
8766 8828 -8916 0
8766 8830 -8918 0
8766 8832 -8920 0
8766 8834 -8922 0
8767 -8888 0
8767 8801 -8890 0
8767 8802 -8892 0
8767 8804 -8894 0
8767 8806 -8896 0
8767 8808 -8898 0
8767 8810 -8900 0
8767 8812 -8902 0
8767 8814 -8904 0
8767 8816 -8906 0
8767 8818 -8908 0
8767 8820 -8910 0
8767 8822 -8912 0
8767 8824 -8914 0
8767 8826 -8916 0
8767 8828 -8918 0
8767 8830 -8920 0
8767 8832 -8922 0
8767 8834 -8924 0
8769 -8890 0
8769 8801 -8892 0
8769 8802 -8894 0
8769 8804 -8896 0
8769 8806 -8898 0
8769 8808 -8900 0
8769 8810 -8902 0
8769 8812 -8904 0
8769 8814 -8906 0
8769 8816 -8908 0
8769 8818 -8910 0
8769 8820 -8912 0
8769 8822 -8914 0
8769 8824 -8916 0
8769 8826 -8918 0
8769 8828 -8920 0
8769 8830 -8922 0
8769 8832 -8924 0
8769 8834 -8926 0
8771 -8892 0
8771 8801 -8894 0
8771 8802 -8896 0
8771 8804 -8898 0
8771 8806 -8900 0
8771 8808 -8902 0
8771 8810 -8904 0
8771 8812 -8906 0
8771 8814 -8908 0
8771 8816 -8910 0
8771 8818 -8912 0
8771 8820 -8914 0
8771 8822 -8916 0
8771 8824 -8918 0
8771 8826 -8920 0
8771 8828 -8922 0
8771 8830 -8924 0
8771 8832 -8926 0
8771 8834 -8928 0
8773 -8894 0
8773 8801 -8896 0
8773 8802 -8898 0
8773 8804 -8900 0
8773 8806 -8902 0
8773 8808 -8904 0
8773 8810 -8906 0
8773 8812 -8908 0
8773 8814 -8910 0
8773 8816 -8912 0
8773 8818 -8914 0
8773 8820 -8916 0
8773 8822 -8918 0
8773 8824 -8920 0
8773 8826 -8922 0
8773 8828 -8924 0
8773 8830 -8926 0
8773 8832 -8928 0
8773 8834 -8930 0
8775 -8896 0
8775 8801 -8898 0
8775 8802 -8900 0
8775 8804 -8902 0
8775 8806 -8904 0
8775 8808 -8906 0
8775 8810 -8908 0
8775 8812 -8910 0
8775 8814 -8912 0
8775 8816 -8914 0
8775 8818 -8916 0
8775 8820 -8918 0
8775 8822 -8920 0
8775 8824 -8922 0
8775 8826 -8924 0
8775 8828 -8926 0
8775 8830 -8928 0
8775 8832 -8930 0
8775 8834 -8932 0
8777 -8898 0
8777 8801 -8900 0
8777 8802 -8902 0
8777 8804 -8904 0
8777 8806 -8906 0
8777 8808 -8908 0
8777 8810 -8910 0
8777 8812 -8912 0
8777 8814 -8914 0
8777 8816 -8916 0
8777 8818 -8918 0
8777 8820 -8920 0
8777 8822 -8922 0
8777 8824 -8924 0
8777 8826 -8926 0
8777 8828 -8928 0
8777 8830 -8930 0
8777 8832 -8932 0
8777 8834 -8934 0
8779 -8900 0
8779 8801 -8902 0
8779 8802 -8904 0
8779 8804 -8906 0
8779 8806 -8908 0
8779 8808 -8910 0
8779 8810 -8912 0
8779 8812 -8914 0
8779 8814 -8916 0
8779 8816 -8918 0
8779 8818 -8920 0
8779 8820 -8922 0
8779 8822 -8924 0
8779 8824 -8926 0
8779 8826 -8928 0
8779 8828 -8930 0
8779 8830 -8932 0
8779 8832 -8934 0
8779 8834 -8936 0
8781 -8902 0
8781 8801 -8904 0
8781 8802 -8906 0
8781 8804 -8908 0
8781 8806 -8910 0
8781 8808 -8912 0
8781 8810 -8914 0
8781 8812 -8916 0
8781 8814 -8918 0
8781 8816 -8920 0
8781 8818 -8922 0
8781 8820 -8924 0
8781 8822 -8926 0
8781 8824 -8928 0
8781 8826 -8930 0
8781 8828 -8932 0
8781 8830 -8934 0
8781 8832 -8936 0
8781 8834 -8938 0
8783 -8904 0
8783 8801 -8906 0
8783 8802 -8908 0
8783 8804 -8910 0
8783 8806 -8912 0
8783 8808 -8914 0
8783 8810 -8916 0
8783 8812 -8918 0
8783 8814 -8920 0
8783 8816 -8922 0
8783 8818 -8924 0
8783 8820 -8926 0
8783 8822 -8928 0
8783 8824 -8930 0
8783 8826 -8932 0
8783 8828 -8934 0
8783 8830 -8936 0
8783 8832 -8938 0
8783 8834 -8940 0
8785 -8906 0
8785 8801 -8908 0
8785 8802 -8910 0
8785 8804 -8912 0
8785 8806 -8914 0
8785 8808 -8916 0
8785 8810 -8918 0
8785 8812 -8920 0
8785 8814 -8922 0
8785 8816 -8924 0
8785 8818 -8926 0
8785 8820 -8928 0
8785 8822 -8930 0
8785 8824 -8932 0
8785 8826 -8934 0
8785 8828 -8936 0
8785 8830 -8938 0
8785 8832 -8940 0
8785 8834 -8942 0
8787 -8908 0
8787 8801 -8910 0
8787 8802 -8912 0
8787 8804 -8914 0
8787 8806 -8916 0
8787 8808 -8918 0
8787 8810 -8920 0
8787 8812 -8922 0
8787 8814 -8924 0
8787 8816 -8926 0
8787 8818 -8928 0
8787 8820 -8930 0
8787 8822 -8932 0
8787 8824 -8934 0
8787 8826 -8936 0
8787 8828 -8938 0
8787 8830 -8940 0
8787 8832 -8942 0
8787 8834 -8944 0
8789 -8910 0
8789 8801 -8912 0
8789 8802 -8914 0
8789 8804 -8916 0
8789 8806 -8918 0
8789 8808 -8920 0
8789 8810 -8922 0
8789 8812 -8924 0
8789 8814 -8926 0
8789 8816 -8928 0
8789 8818 -8930 0
8789 8820 -8932 0
8789 8822 -8934 0
8789 8824 -8936 0
8789 8826 -8938 0
8789 8828 -8940 0
8789 8830 -8942 0
8789 8832 -8944 0
8789 8834 -8946 0
8791 -8912 0
8791 8801 -8914 0
8791 8802 -8916 0
8791 8804 -8918 0
8791 8806 -8920 0
8791 8808 -8922 0
8791 8810 -8924 0
8791 8812 -8926 0
8791 8814 -8928 0
8791 8816 -8930 0
8791 8818 -8932 0
8791 8820 -8934 0
8791 8822 -8936 0
8791 8824 -8938 0
8791 8826 -8940 0
8791 8828 -8942 0
8791 8830 -8944 0
8791 8832 -8946 0
8791 8834 -8948 0
8793 -8914 0
8793 8801 -8916 0
8793 8802 -8918 0
8793 8804 -8920 0
8793 8806 -8922 0
8793 8808 -8924 0
8793 8810 -8926 0
8793 8812 -8928 0
8793 8814 -8930 0
8793 8816 -8932 0
8793 8818 -8934 0
8793 8820 -8936 0
8793 8822 -8938 0
8793 8824 -8940 0
8793 8826 -8942 0
8793 8828 -8944 0
8793 8830 -8946 0
8793 8832 -8948 0
8793 8834 -8950 0
8795 -8916 0
8795 8801 -8918 0
8795 8802 -8920 0
8795 8804 -8922 0
8795 8806 -8924 0
8795 8808 -8926 0
8795 8810 -8928 0
8795 8812 -8930 0
8795 8814 -8932 0
8795 8816 -8934 0
8795 8818 -8936 0
8795 8820 -8938 0
8795 8822 -8940 0
8795 8824 -8942 0
8795 8826 -8944 0
8795 8828 -8946 0
8795 8830 -8948 0
8795 8832 -8950 0
8795 8834 -8952 0
8797 -8918 0
8797 8801 -8920 0
8797 8802 -8922 0
8797 8804 -8924 0
8797 8806 -8926 0
8797 8808 -8928 0
8797 8810 -8930 0
8797 8812 -8932 0
8797 8814 -8934 0
8797 8816 -8936 0
8797 8818 -8938 0
8797 8820 -8940 0
8797 8822 -8942 0
8797 8824 -8944 0
8797 8826 -8946 0
8797 8828 -8948 0
8797 8830 -8950 0
8797 8832 -8952 0
8797 8834 -8954 0
8799 -8920 0
8799 8801 -8922 0
8799 8802 -8924 0
8799 8804 -8926 0
8799 8806 -8928 0
8799 8808 -8930 0
8799 8810 -8932 0
8799 8812 -8934 0
8799 8814 -8936 0
8799 8816 -8938 0
8799 8818 -8940 0
8799 8820 -8942 0
8799 8822 -8944 0
8799 8824 -8946 0
8799 8826 -8948 0
8799 8828 -8950 0
8799 8830 -8952 0
8799 8832 -8954 0
8799 8834 -8956 0
c (0<=(aux386 + aux387 - aux389))
-8834 8956 0
-8832 8954 0
-8830 8952 0
-8828 8950 0
-8826 8948 0
-8824 8946 0
-8822 8944 0
-8820 8942 0
-8818 8940 0
-8816 8938 0
-8814 8936 0
-8812 8934 0
-8810 8932 0
-8808 8930 0
-8806 8928 0
-8804 8926 0
-8802 8924 0
-8801 8922 0
-8799 8956 0
-8799 -8834 8954 0
-8799 -8832 8952 0
-8799 -8830 8950 0
-8799 -8828 8948 0
-8799 -8826 8946 0
-8799 -8824 8944 0
-8799 -8822 8942 0
-8799 -8820 8940 0
-8799 -8818 8938 0
-8799 -8816 8936 0
-8799 -8814 8934 0
-8799 -8812 8932 0
-8799 -8810 8930 0
-8799 -8808 8928 0
-8799 -8806 8926 0
-8799 -8804 8924 0
-8799 -8802 8922 0
-8799 -8801 8920 0
-8797 8954 0
-8797 -8834 8952 0
-8797 -8832 8950 0
-8797 -8830 8948 0
-8797 -8828 8946 0
-8797 -8826 8944 0
-8797 -8824 8942 0
-8797 -8822 8940 0
-8797 -8820 8938 0
-8797 -8818 8936 0
-8797 -8816 8934 0
-8797 -8814 8932 0
-8797 -8812 8930 0
-8797 -8810 8928 0
-8797 -8808 8926 0
-8797 -8806 8924 0
-8797 -8804 8922 0
-8797 -8802 8920 0
-8797 -8801 8918 0
-8795 8952 0
-8795 -8834 8950 0
-8795 -8832 8948 0
-8795 -8830 8946 0
-8795 -8828 8944 0
-8795 -8826 8942 0
-8795 -8824 8940 0
-8795 -8822 8938 0
-8795 -8820 8936 0
-8795 -8818 8934 0
-8795 -8816 8932 0
-8795 -8814 8930 0
-8795 -8812 8928 0
-8795 -8810 8926 0
-8795 -8808 8924 0
-8795 -8806 8922 0
-8795 -8804 8920 0
-8795 -8802 8918 0
-8795 -8801 8916 0
-8793 8950 0
-8793 -8834 8948 0
-8793 -8832 8946 0
-8793 -8830 8944 0
-8793 -8828 8942 0
-8793 -8826 8940 0
-8793 -8824 8938 0
-8793 -8822 8936 0
-8793 -8820 8934 0
-8793 -8818 8932 0
-8793 -8816 8930 0
-8793 -8814 8928 0
-8793 -8812 8926 0
-8793 -8810 8924 0
-8793 -8808 8922 0
-8793 -8806 8920 0
-8793 -8804 8918 0
-8793 -8802 8916 0
-8793 -8801 8914 0
-8791 8948 0
-8791 -8834 8946 0
-8791 -8832 8944 0
-8791 -8830 8942 0
-8791 -8828 8940 0
-8791 -8826 8938 0
-8791 -8824 8936 0
-8791 -8822 8934 0
-8791 -8820 8932 0
-8791 -8818 8930 0
-8791 -8816 8928 0
-8791 -8814 8926 0
-8791 -8812 8924 0
-8791 -8810 8922 0
-8791 -8808 8920 0
-8791 -8806 8918 0
-8791 -8804 8916 0
-8791 -8802 8914 0
-8791 -8801 8912 0
-8789 8946 0
-8789 -8834 8944 0
-8789 -8832 8942 0
-8789 -8830 8940 0
-8789 -8828 8938 0
-8789 -8826 8936 0
-8789 -8824 8934 0
-8789 -8822 8932 0
-8789 -8820 8930 0
-8789 -8818 8928 0
-8789 -8816 8926 0
-8789 -8814 8924 0
-8789 -8812 8922 0
-8789 -8810 8920 0
-8789 -8808 8918 0
-8789 -8806 8916 0
-8789 -8804 8914 0
-8789 -8802 8912 0
-8789 -8801 8910 0
-8787 8944 0
-8787 -8834 8942 0
-8787 -8832 8940 0
-8787 -8830 8938 0
-8787 -8828 8936 0
-8787 -8826 8934 0
-8787 -8824 8932 0
-8787 -8822 8930 0
-8787 -8820 8928 0
-8787 -8818 8926 0
-8787 -8816 8924 0
-8787 -8814 8922 0
-8787 -8812 8920 0
-8787 -8810 8918 0
-8787 -8808 8916 0
-8787 -8806 8914 0
-8787 -8804 8912 0
-8787 -8802 8910 0
-8787 -8801 8908 0
-8785 8942 0
-8785 -8834 8940 0
-8785 -8832 8938 0
-8785 -8830 8936 0
-8785 -8828 8934 0
-8785 -8826 8932 0
-8785 -8824 8930 0
-8785 -8822 8928 0
-8785 -8820 8926 0
-8785 -8818 8924 0
-8785 -8816 8922 0
-8785 -8814 8920 0
-8785 -8812 8918 0
-8785 -8810 8916 0
-8785 -8808 8914 0
-8785 -8806 8912 0
-8785 -8804 8910 0
-8785 -8802 8908 0
-8785 -8801 8906 0
-8783 8940 0
-8783 -8834 8938 0
-8783 -8832 8936 0
-8783 -8830 8934 0
-8783 -8828 8932 0
-8783 -8826 8930 0
-8783 -8824 8928 0
-8783 -8822 8926 0
-8783 -8820 8924 0
-8783 -8818 8922 0
-8783 -8816 8920 0
-8783 -8814 8918 0
-8783 -8812 8916 0
-8783 -8810 8914 0
-8783 -8808 8912 0
-8783 -8806 8910 0
-8783 -8804 8908 0
-8783 -8802 8906 0
-8783 -8801 8904 0
-8781 8938 0
-8781 -8834 8936 0
-8781 -8832 8934 0
-8781 -8830 8932 0
-8781 -8828 8930 0
-8781 -8826 8928 0
-8781 -8824 8926 0
-8781 -8822 8924 0
-8781 -8820 8922 0
-8781 -8818 8920 0
-8781 -8816 8918 0
-8781 -8814 8916 0
-8781 -8812 8914 0
-8781 -8810 8912 0
-8781 -8808 8910 0
-8781 -8806 8908 0
-8781 -8804 8906 0
-8781 -8802 8904 0
-8781 -8801 8902 0
-8779 8936 0
-8779 -8834 8934 0
-8779 -8832 8932 0
-8779 -8830 8930 0
-8779 -8828 8928 0
-8779 -8826 8926 0
-8779 -8824 8924 0
-8779 -8822 8922 0
-8779 -8820 8920 0
-8779 -8818 8918 0
-8779 -8816 8916 0
-8779 -8814 8914 0
-8779 -8812 8912 0
-8779 -8810 8910 0
-8779 -8808 8908 0
-8779 -8806 8906 0
-8779 -8804 8904 0
-8779 -8802 8902 0
-8779 -8801 8900 0
-8777 8934 0
-8777 -8834 8932 0
-8777 -8832 8930 0
-8777 -8830 8928 0
-8777 -8828 8926 0
-8777 -8826 8924 0
-8777 -8824 8922 0
-8777 -8822 8920 0
-8777 -8820 8918 0
-8777 -8818 8916 0
-8777 -8816 8914 0
-8777 -8814 8912 0
-8777 -8812 8910 0
-8777 -8810 8908 0
-8777 -8808 8906 0
-8777 -8806 8904 0
-8777 -8804 8902 0
-8777 -8802 8900 0
-8777 -8801 8898 0
-8775 8932 0
-8775 -8834 8930 0
-8775 -8832 8928 0
-8775 -8830 8926 0
-8775 -8828 8924 0
-8775 -8826 8922 0
-8775 -8824 8920 0
-8775 -8822 8918 0
-8775 -8820 8916 0
-8775 -8818 8914 0
-8775 -8816 8912 0
-8775 -8814 8910 0
-8775 -8812 8908 0
-8775 -8810 8906 0
-8775 -8808 8904 0
-8775 -8806 8902 0
-8775 -8804 8900 0
-8775 -8802 8898 0
-8775 -8801 8896 0
-8773 8930 0
-8773 -8834 8928 0
-8773 -8832 8926 0
-8773 -8830 8924 0
-8773 -8828 8922 0
-8773 -8826 8920 0
-8773 -8824 8918 0
-8773 -8822 8916 0
-8773 -8820 8914 0
-8773 -8818 8912 0
-8773 -8816 8910 0
-8773 -8814 8908 0
-8773 -8812 8906 0
-8773 -8810 8904 0
-8773 -8808 8902 0
-8773 -8806 8900 0
-8773 -8804 8898 0
-8773 -8802 8896 0
-8773 -8801 8894 0
-8771 8928 0
-8771 -8834 8926 0
-8771 -8832 8924 0
-8771 -8830 8922 0
-8771 -8828 8920 0
-8771 -8826 8918 0
-8771 -8824 8916 0
-8771 -8822 8914 0
-8771 -8820 8912 0
-8771 -8818 8910 0
-8771 -8816 8908 0
-8771 -8814 8906 0
-8771 -8812 8904 0
-8771 -8810 8902 0
-8771 -8808 8900 0
-8771 -8806 8898 0
-8771 -8804 8896 0
-8771 -8802 8894 0
-8771 -8801 8892 0
-8769 8926 0
-8769 -8834 8924 0
-8769 -8832 8922 0
-8769 -8830 8920 0
-8769 -8828 8918 0
-8769 -8826 8916 0
-8769 -8824 8914 0
-8769 -8822 8912 0
-8769 -8820 8910 0
-8769 -8818 8908 0
-8769 -8816 8906 0
-8769 -8814 8904 0
-8769 -8812 8902 0
-8769 -8810 8900 0
-8769 -8808 8898 0
-8769 -8806 8896 0
-8769 -8804 8894 0
-8769 -8802 8892 0
-8769 -8801 8890 0
-8767 8924 0
-8767 -8834 8922 0
-8767 -8832 8920 0
-8767 -8830 8918 0
-8767 -8828 8916 0
-8767 -8826 8914 0
-8767 -8824 8912 0
-8767 -8822 8910 0
-8767 -8820 8908 0
-8767 -8818 8906 0
-8767 -8816 8904 0
-8767 -8814 8902 0
-8767 -8812 8900 0
-8767 -8810 8898 0
-8767 -8808 8896 0
-8767 -8806 8894 0
-8767 -8804 8892 0
-8767 -8802 8890 0
-8767 -8801 8888 0
-8766 8922 0
-8766 -8834 8920 0
-8766 -8832 8918 0
-8766 -8830 8916 0
-8766 -8828 8914 0
-8766 -8826 8912 0
-8766 -8824 8910 0
-8766 -8822 8908 0
-8766 -8820 8906 0
-8766 -8818 8904 0
-8766 -8816 8902 0
-8766 -8814 8900 0
-8766 -8812 8898 0
-8766 -8810 8896 0
-8766 -8808 8894 0
-8766 -8806 8892 0
-8766 -8804 8890 0
-8766 -8802 8888 0
-8766 -8801 8887 0
c (( - aux390 + shift(variant_fields_00001_00006_00001, -1) + aux25)<=0)
6533 -8958 0
6534 -8959 0
6536 -8961 0
6538 -8963 0
6540 -8965 0
6542 -8967 0
6544 -8969 0
6546 -8971 0
6548 -8973 0
1892 -8958 0
1892 6533 -8959 0
1892 6534 -8961 0
1892 6536 -8963 0
1892 6538 -8965 0
1892 6540 -8967 0
1892 6542 -8969 0
1892 6544 -8971 0
1892 6546 -8973 0
1892 6548 -8975 0
1893 -8959 0
1893 6533 -8961 0
1893 6534 -8963 0
1893 6536 -8965 0
1893 6538 -8967 0
1893 6540 -8969 0
1893 6542 -8971 0
1893 6544 -8973 0
1893 6546 -8975 0
1893 6548 -8977 0
1895 -8961 0
1895 6533 -8963 0
1895 6534 -8965 0
1895 6536 -8967 0
1895 6538 -8969 0
1895 6540 -8971 0
1895 6542 -8973 0
1895 6544 -8975 0
1895 6546 -8977 0
1895 6548 -8979 0
1897 -8963 0
1897 6533 -8965 0
1897 6534 -8967 0
1897 6536 -8969 0
1897 6538 -8971 0
1897 6540 -8973 0
1897 6542 -8975 0
1897 6544 -8977 0
1897 6546 -8979 0
1897 6548 -8981 0
1899 -8965 0
1899 6533 -8967 0
1899 6534 -8969 0
1899 6536 -8971 0
1899 6538 -8973 0
1899 6540 -8975 0
1899 6542 -8977 0
1899 6544 -8979 0
1899 6546 -8981 0
1899 6548 -8983 0
1901 -8967 0
1901 6533 -8969 0
1901 6534 -8971 0
1901 6536 -8973 0
1901 6538 -8975 0
1901 6540 -8977 0
1901 6542 -8979 0
1901 6544 -8981 0
1901 6546 -8983 0
1901 6548 -8985 0
1903 -8969 0
1903 6533 -8971 0
1903 6534 -8973 0
1903 6536 -8975 0
1903 6538 -8977 0
1903 6540 -8979 0
1903 6542 -8981 0
1903 6544 -8983 0
1903 6546 -8985 0
1903 6548 -8987 0
1905 -8971 0
1905 6533 -8973 0
1905 6534 -8975 0
1905 6536 -8977 0
1905 6538 -8979 0
1905 6540 -8981 0
1905 6542 -8983 0
1905 6544 -8985 0
1905 6546 -8987 0
1905 6548 -8989 0
c (0<=( - aux390 + shift(variant_fields_00001_00006_00001, -1) + aux25))
-6548 8989 0
-6546 8987 0
-6544 8985 0
-6542 8983 0
-6540 8981 0
-6538 8979 0
-6536 8977 0
-6534 8975 0
-6533 8973 0
-1905 8989 0
-1905 -6548 8987 0
-1905 -6546 8985 0
-1905 -6544 8983 0
-1905 -6542 8981 0
-1905 -6540 8979 0
-1905 -6538 8977 0
-1905 -6536 8975 0
-1905 -6534 8973 0
-1905 -6533 8971 0
-1903 8987 0
-1903 -6548 8985 0
-1903 -6546 8983 0
-1903 -6544 8981 0
-1903 -6542 8979 0
-1903 -6540 8977 0
-1903 -6538 8975 0
-1903 -6536 8973 0
-1903 -6534 8971 0
-1903 -6533 8969 0
-1901 8985 0
-1901 -6548 8983 0
-1901 -6546 8981 0
-1901 -6544 8979 0
-1901 -6542 8977 0
-1901 -6540 8975 0
-1901 -6538 8973 0
-1901 -6536 8971 0
-1901 -6534 8969 0
-1901 -6533 8967 0
-1899 8983 0
-1899 -6548 8981 0
-1899 -6546 8979 0
-1899 -6544 8977 0
-1899 -6542 8975 0
-1899 -6540 8973 0
-1899 -6538 8971 0
-1899 -6536 8969 0
-1899 -6534 8967 0
-1899 -6533 8965 0
-1897 8981 0
-1897 -6548 8979 0
-1897 -6546 8977 0
-1897 -6544 8975 0
-1897 -6542 8973 0
-1897 -6540 8971 0
-1897 -6538 8969 0
-1897 -6536 8967 0
-1897 -6534 8965 0
-1897 -6533 8963 0
-1895 8979 0
-1895 -6548 8977 0
-1895 -6546 8975 0
-1895 -6544 8973 0
-1895 -6542 8971 0
-1895 -6540 8969 0
-1895 -6538 8967 0
-1895 -6536 8965 0
-1895 -6534 8963 0
-1895 -6533 8961 0
-1893 8977 0
-1893 -6548 8975 0
-1893 -6546 8973 0
-1893 -6544 8971 0
-1893 -6542 8969 0
-1893 -6540 8967 0
-1893 -6538 8965 0
-1893 -6536 8963 0
-1893 -6534 8961 0
-1893 -6533 8959 0
-1892 8975 0
-1892 -6548 8973 0
-1892 -6546 8971 0
-1892 -6544 8969 0
-1892 -6542 8967 0
-1892 -6540 8965 0
-1892 -6538 8963 0
-1892 -6536 8961 0
-1892 -6534 8959 0
-1892 -6533 8958 0
c (( - aux391 + aux18 + aux24)<=0)
6516 -8991 0
6517 -8992 0
6519 -8994 0
6521 -8996 0
6523 -8998 0
6525 -9000 0
6527 -9002 0
6529 -9004 0
6531 -9006 0
6414 -8991 0
6414 6516 -8992 0
6414 6517 -8994 0
6414 6519 -8996 0
6414 6521 -8998 0
6414 6523 -9000 0
6414 6525 -9002 0
6414 6527 -9004 0
6414 6529 -9006 0
6414 6531 -9008 0
6415 -8992 0
6415 6516 -8994 0
6415 6517 -8996 0
6415 6519 -8998 0
6415 6521 -9000 0
6415 6523 -9002 0
6415 6525 -9004 0
6415 6527 -9006 0
6415 6529 -9008 0
6415 6531 -9010 0
6417 -8994 0
6417 6516 -8996 0
6417 6517 -8998 0
6417 6519 -9000 0
6417 6521 -9002 0
6417 6523 -9004 0
6417 6525 -9006 0
6417 6527 -9008 0
6417 6529 -9010 0
6417 6531 -9012 0
6419 -8996 0
6419 6516 -8998 0
6419 6517 -9000 0
6419 6519 -9002 0
6419 6521 -9004 0
6419 6523 -9006 0
6419 6525 -9008 0
6419 6527 -9010 0
6419 6529 -9012 0
6419 6531 -9014 0
6421 -8998 0
6421 6516 -9000 0
6421 6517 -9002 0
6421 6519 -9004 0
6421 6521 -9006 0
6421 6523 -9008 0
6421 6525 -9010 0
6421 6527 -9012 0
6421 6529 -9014 0
6421 6531 -9016 0
6423 -9000 0
6423 6516 -9002 0
6423 6517 -9004 0
6423 6519 -9006 0
6423 6521 -9008 0
6423 6523 -9010 0
6423 6525 -9012 0
6423 6527 -9014 0
6423 6529 -9016 0
6423 6531 -9018 0
6425 -9002 0
6425 6516 -9004 0
6425 6517 -9006 0
6425 6519 -9008 0
6425 6521 -9010 0
6425 6523 -9012 0
6425 6525 -9014 0
6425 6527 -9016 0
6425 6529 -9018 0
6425 6531 -9020 0
6427 -9004 0
6427 6516 -9006 0
6427 6517 -9008 0
6427 6519 -9010 0
6427 6521 -9012 0
6427 6523 -9014 0
6427 6525 -9016 0
6427 6527 -9018 0
6427 6529 -9020 0
6427 6531 -9022 0
6429 -9006 0
6429 6516 -9008 0
6429 6517 -9010 0
6429 6519 -9012 0
6429 6521 -9014 0
6429 6523 -9016 0
6429 6525 -9018 0
6429 6527 -9020 0
6429 6529 -9022 0
6429 6531 -9024 0
c (0<=( - aux391 + aux18 + aux24))
-6531 9024 0
-6529 9022 0
-6527 9020 0
-6525 9018 0
-6523 9016 0
-6521 9014 0
-6519 9012 0
-6517 9010 0
-6516 9008 0
-6429 9024 0
-6429 -6531 9022 0
-6429 -6529 9020 0
-6429 -6527 9018 0
-6429 -6525 9016 0
-6429 -6523 9014 0
-6429 -6521 9012 0
-6429 -6519 9010 0
-6429 -6517 9008 0
-6429 -6516 9006 0
-6427 9022 0
-6427 -6531 9020 0
-6427 -6529 9018 0
-6427 -6527 9016 0
-6427 -6525 9014 0
-6427 -6523 9012 0
-6427 -6521 9010 0
-6427 -6519 9008 0
-6427 -6517 9006 0
-6427 -6516 9004 0
-6425 9020 0
-6425 -6531 9018 0
-6425 -6529 9016 0
-6425 -6527 9014 0
-6425 -6525 9012 0
-6425 -6523 9010 0
-6425 -6521 9008 0
-6425 -6519 9006 0
-6425 -6517 9004 0
-6425 -6516 9002 0
-6423 9018 0
-6423 -6531 9016 0
-6423 -6529 9014 0
-6423 -6527 9012 0
-6423 -6525 9010 0
-6423 -6523 9008 0
-6423 -6521 9006 0
-6423 -6519 9004 0
-6423 -6517 9002 0
-6423 -6516 9000 0
-6421 9016 0
-6421 -6531 9014 0
-6421 -6529 9012 0
-6421 -6527 9010 0
-6421 -6525 9008 0
-6421 -6523 9006 0
-6421 -6521 9004 0
-6421 -6519 9002 0
-6421 -6517 9000 0
-6421 -6516 8998 0
-6419 9014 0
-6419 -6531 9012 0
-6419 -6529 9010 0
-6419 -6527 9008 0
-6419 -6525 9006 0
-6419 -6523 9004 0
-6419 -6521 9002 0
-6419 -6519 9000 0
-6419 -6517 8998 0
-6419 -6516 8996 0
-6417 9012 0
-6417 -6531 9010 0
-6417 -6529 9008 0
-6417 -6527 9006 0
-6417 -6525 9004 0
-6417 -6523 9002 0
-6417 -6521 9000 0
-6417 -6519 8998 0
-6417 -6517 8996 0
-6417 -6516 8994 0
-6415 9010 0
-6415 -6531 9008 0
-6415 -6529 9006 0
-6415 -6527 9004 0
-6415 -6525 9002 0
-6415 -6523 9000 0
-6415 -6521 8998 0
-6415 -6519 8996 0
-6415 -6517 8994 0
-6415 -6516 8992 0
-6414 9008 0
-6414 -6531 9006 0
-6414 -6529 9004 0
-6414 -6527 9002 0
-6414 -6525 9000 0
-6414 -6523 8998 0
-6414 -6521 8996 0
-6414 -6519 8994 0
-6414 -6517 8992 0
-6414 -6516 8991 0
c (( - aux392 + aux20 + aux23)<=0)
6499 -9026 0
6500 -9027 0
6502 -9029 0
6504 -9031 0
6506 -9033 0
6508 -9035 0
6510 -9037 0
6512 -9039 0
6514 -9041 0
6448 -9026 0
6448 6499 -9027 0
6448 6500 -9029 0
6448 6502 -9031 0
6448 6504 -9033 0
6448 6506 -9035 0
6448 6508 -9037 0
6448 6510 -9039 0
6448 6512 -9041 0
6448 6514 -9043 0
6449 -9027 0
6449 6499 -9029 0
6449 6500 -9031 0
6449 6502 -9033 0
6449 6504 -9035 0
6449 6506 -9037 0
6449 6508 -9039 0
6449 6510 -9041 0
6449 6512 -9043 0
6449 6514 -9045 0
6451 -9029 0
6451 6499 -9031 0
6451 6500 -9033 0
6451 6502 -9035 0
6451 6504 -9037 0
6451 6506 -9039 0
6451 6508 -9041 0
6451 6510 -9043 0
6451 6512 -9045 0
6451 6514 -9047 0
6453 -9031 0
6453 6499 -9033 0
6453 6500 -9035 0
6453 6502 -9037 0
6453 6504 -9039 0
6453 6506 -9041 0
6453 6508 -9043 0
6453 6510 -9045 0
6453 6512 -9047 0
6453 6514 -9049 0
6455 -9033 0
6455 6499 -9035 0
6455 6500 -9037 0
6455 6502 -9039 0
6455 6504 -9041 0
6455 6506 -9043 0
6455 6508 -9045 0
6455 6510 -9047 0
6455 6512 -9049 0
6455 6514 -9051 0
6457 -9035 0
6457 6499 -9037 0
6457 6500 -9039 0
6457 6502 -9041 0
6457 6504 -9043 0
6457 6506 -9045 0
6457 6508 -9047 0
6457 6510 -9049 0
6457 6512 -9051 0
6457 6514 -9053 0
6459 -9037 0
6459 6499 -9039 0
6459 6500 -9041 0
6459 6502 -9043 0
6459 6504 -9045 0
6459 6506 -9047 0
6459 6508 -9049 0
6459 6510 -9051 0
6459 6512 -9053 0
6459 6514 -9055 0
6461 -9039 0
6461 6499 -9041 0
6461 6500 -9043 0
6461 6502 -9045 0
6461 6504 -9047 0
6461 6506 -9049 0
6461 6508 -9051 0
6461 6510 -9053 0
6461 6512 -9055 0
6461 6514 -9057 0
6463 -9041 0
6463 6499 -9043 0
6463 6500 -9045 0
6463 6502 -9047 0
6463 6504 -9049 0
6463 6506 -9051 0
6463 6508 -9053 0
6463 6510 -9055 0
6463 6512 -9057 0
6463 6514 -9059 0
c (0<=( - aux392 + aux20 + aux23))
-6514 9059 0
-6512 9057 0
-6510 9055 0
-6508 9053 0
-6506 9051 0
-6504 9049 0
-6502 9047 0
-6500 9045 0
-6499 9043 0
-6463 9059 0
-6463 -6514 9057 0
-6463 -6512 9055 0
-6463 -6510 9053 0
-6463 -6508 9051 0
-6463 -6506 9049 0
-6463 -6504 9047 0
-6463 -6502 9045 0
-6463 -6500 9043 0
-6463 -6499 9041 0
-6461 9057 0
-6461 -6514 9055 0
-6461 -6512 9053 0
-6461 -6510 9051 0
-6461 -6508 9049 0
-6461 -6506 9047 0
-6461 -6504 9045 0
-6461 -6502 9043 0
-6461 -6500 9041 0
-6461 -6499 9039 0
-6459 9055 0
-6459 -6514 9053 0
-6459 -6512 9051 0
-6459 -6510 9049 0
-6459 -6508 9047 0
-6459 -6506 9045 0
-6459 -6504 9043 0
-6459 -6502 9041 0
-6459 -6500 9039 0
-6459 -6499 9037 0
-6457 9053 0
-6457 -6514 9051 0
-6457 -6512 9049 0
-6457 -6510 9047 0
-6457 -6508 9045 0
-6457 -6506 9043 0
-6457 -6504 9041 0
-6457 -6502 9039 0
-6457 -6500 9037 0
-6457 -6499 9035 0
-6455 9051 0
-6455 -6514 9049 0
-6455 -6512 9047 0
-6455 -6510 9045 0
-6455 -6508 9043 0
-6455 -6506 9041 0
-6455 -6504 9039 0
-6455 -6502 9037 0
-6455 -6500 9035 0
-6455 -6499 9033 0
-6453 9049 0
-6453 -6514 9047 0
-6453 -6512 9045 0
-6453 -6510 9043 0
-6453 -6508 9041 0
-6453 -6506 9039 0
-6453 -6504 9037 0
-6453 -6502 9035 0
-6453 -6500 9033 0
-6453 -6499 9031 0
-6451 9047 0
-6451 -6514 9045 0
-6451 -6512 9043 0
-6451 -6510 9041 0
-6451 -6508 9039 0
-6451 -6506 9037 0
-6451 -6504 9035 0
-6451 -6502 9033 0
-6451 -6500 9031 0
-6451 -6499 9029 0
-6449 9045 0
-6449 -6514 9043 0
-6449 -6512 9041 0
-6449 -6510 9039 0
-6449 -6508 9037 0
-6449 -6506 9035 0
-6449 -6504 9033 0
-6449 -6502 9031 0
-6449 -6500 9029 0
-6449 -6499 9027 0
-6448 9043 0
-6448 -6514 9041 0
-6448 -6512 9039 0
-6448 -6510 9037 0
-6448 -6508 9035 0
-6448 -6506 9033 0
-6448 -6504 9031 0
-6448 -6502 9029 0
-6448 -6500 9027 0
-6448 -6499 9026 0
c (( - aux393 + aux21 + aux22)<=0)
6482 -9061 0
6483 -9062 0
6485 -9064 0
6487 -9066 0
6489 -9068 0
6491 -9070 0
6493 -9072 0
6495 -9074 0
6497 -9076 0
6465 -9061 0
6465 6482 -9062 0
6465 6483 -9064 0
6465 6485 -9066 0
6465 6487 -9068 0
6465 6489 -9070 0
6465 6491 -9072 0
6465 6493 -9074 0
6465 6495 -9076 0
6465 6497 -9078 0
6466 -9062 0
6466 6482 -9064 0
6466 6483 -9066 0
6466 6485 -9068 0
6466 6487 -9070 0
6466 6489 -9072 0
6466 6491 -9074 0
6466 6493 -9076 0
6466 6495 -9078 0
6466 6497 -9080 0
6468 -9064 0
6468 6482 -9066 0
6468 6483 -9068 0
6468 6485 -9070 0
6468 6487 -9072 0
6468 6489 -9074 0
6468 6491 -9076 0
6468 6493 -9078 0
6468 6495 -9080 0
6468 6497 -9082 0
6470 -9066 0
6470 6482 -9068 0
6470 6483 -9070 0
6470 6485 -9072 0
6470 6487 -9074 0
6470 6489 -9076 0
6470 6491 -9078 0
6470 6493 -9080 0
6470 6495 -9082 0
6470 6497 -9084 0
6472 -9068 0
6472 6482 -9070 0
6472 6483 -9072 0
6472 6485 -9074 0
6472 6487 -9076 0
6472 6489 -9078 0
6472 6491 -9080 0
6472 6493 -9082 0
6472 6495 -9084 0
6472 6497 -9086 0
6474 -9070 0
6474 6482 -9072 0
6474 6483 -9074 0
6474 6485 -9076 0
6474 6487 -9078 0
6474 6489 -9080 0
6474 6491 -9082 0
6474 6493 -9084 0
6474 6495 -9086 0
6474 6497 -9088 0
6476 -9072 0
6476 6482 -9074 0
6476 6483 -9076 0
6476 6485 -9078 0
6476 6487 -9080 0
6476 6489 -9082 0
6476 6491 -9084 0
6476 6493 -9086 0
6476 6495 -9088 0
6476 6497 -9090 0
6478 -9074 0
6478 6482 -9076 0
6478 6483 -9078 0
6478 6485 -9080 0
6478 6487 -9082 0
6478 6489 -9084 0
6478 6491 -9086 0
6478 6493 -9088 0
6478 6495 -9090 0
6478 6497 -9092 0
6480 -9076 0
6480 6482 -9078 0
6480 6483 -9080 0
6480 6485 -9082 0
6480 6487 -9084 0
6480 6489 -9086 0
6480 6491 -9088 0
6480 6493 -9090 0
6480 6495 -9092 0
6480 6497 -9094 0
c (0<=( - aux393 + aux21 + aux22))
-6497 9094 0
-6495 9092 0
-6493 9090 0
-6491 9088 0
-6489 9086 0
-6487 9084 0
-6485 9082 0
-6483 9080 0
-6482 9078 0
-6480 9094 0
-6480 -6497 9092 0
-6480 -6495 9090 0
-6480 -6493 9088 0
-6480 -6491 9086 0
-6480 -6489 9084 0
-6480 -6487 9082 0
-6480 -6485 9080 0
-6480 -6483 9078 0
-6480 -6482 9076 0
-6478 9092 0
-6478 -6497 9090 0
-6478 -6495 9088 0
-6478 -6493 9086 0
-6478 -6491 9084 0
-6478 -6489 9082 0
-6478 -6487 9080 0
-6478 -6485 9078 0
-6478 -6483 9076 0
-6478 -6482 9074 0
-6476 9090 0
-6476 -6497 9088 0
-6476 -6495 9086 0
-6476 -6493 9084 0
-6476 -6491 9082 0
-6476 -6489 9080 0
-6476 -6487 9078 0
-6476 -6485 9076 0
-6476 -6483 9074 0
-6476 -6482 9072 0
-6474 9088 0
-6474 -6497 9086 0
-6474 -6495 9084 0
-6474 -6493 9082 0
-6474 -6491 9080 0
-6474 -6489 9078 0
-6474 -6487 9076 0
-6474 -6485 9074 0
-6474 -6483 9072 0
-6474 -6482 9070 0
-6472 9086 0
-6472 -6497 9084 0
-6472 -6495 9082 0
-6472 -6493 9080 0
-6472 -6491 9078 0
-6472 -6489 9076 0
-6472 -6487 9074 0
-6472 -6485 9072 0
-6472 -6483 9070 0
-6472 -6482 9068 0
-6470 9084 0
-6470 -6497 9082 0
-6470 -6495 9080 0
-6470 -6493 9078 0
-6470 -6491 9076 0
-6470 -6489 9074 0
-6470 -6487 9072 0
-6470 -6485 9070 0
-6470 -6483 9068 0
-6470 -6482 9066 0
-6468 9082 0
-6468 -6497 9080 0
-6468 -6495 9078 0
-6468 -6493 9076 0
-6468 -6491 9074 0
-6468 -6489 9072 0
-6468 -6487 9070 0
-6468 -6485 9068 0
-6468 -6483 9066 0
-6468 -6482 9064 0
-6466 9080 0
-6466 -6497 9078 0
-6466 -6495 9076 0
-6466 -6493 9074 0
-6466 -6491 9072 0
-6466 -6489 9070 0
-6466 -6487 9068 0
-6466 -6485 9066 0
-6466 -6483 9064 0
-6466 -6482 9062 0
-6465 9078 0
-6465 -6497 9076 0
-6465 -6495 9074 0
-6465 -6493 9072 0
-6465 -6491 9070 0
-6465 -6489 9068 0
-6465 -6487 9066 0
-6465 -6485 9064 0
-6465 -6483 9062 0
-6465 -6482 9061 0
c ((aux390 - aux394 + aux19)<=0)
8958 -9096 0
8959 -9097 0
8961 -9099 0
8963 -9101 0
8965 -9103 0
8967 -9105 0
8969 -9107 0
8971 -9109 0
8973 -9111 0
8975 -9113 0
8977 -9115 0
8979 -9117 0
8981 -9119 0
8983 -9121 0
8985 -9123 0
8987 -9125 0
8989 -9127 0
6431 -9096 0
6431 8958 -9097 0
6431 8959 -9099 0
6431 8961 -9101 0
6431 8963 -9103 0
6431 8965 -9105 0
6431 8967 -9107 0
6431 8969 -9109 0
6431 8971 -9111 0
6431 8973 -9113 0
6431 8975 -9115 0
6431 8977 -9117 0
6431 8979 -9119 0
6431 8981 -9121 0
6431 8983 -9123 0
6431 8985 -9125 0
6431 8987 -9127 0
6431 8989 -9129 0
6432 -9097 0
6432 8958 -9099 0
6432 8959 -9101 0
6432 8961 -9103 0
6432 8963 -9105 0
6432 8965 -9107 0
6432 8967 -9109 0
6432 8969 -9111 0
6432 8971 -9113 0
6432 8973 -9115 0
6432 8975 -9117 0
6432 8977 -9119 0
6432 8979 -9121 0
6432 8981 -9123 0
6432 8983 -9125 0
6432 8985 -9127 0
6432 8987 -9129 0
6432 8989 -9131 0
6434 -9099 0
6434 8958 -9101 0
6434 8959 -9103 0
6434 8961 -9105 0
6434 8963 -9107 0
6434 8965 -9109 0
6434 8967 -9111 0
6434 8969 -9113 0
6434 8971 -9115 0
6434 8973 -9117 0
6434 8975 -9119 0
6434 8977 -9121 0
6434 8979 -9123 0
6434 8981 -9125 0
6434 8983 -9127 0
6434 8985 -9129 0
6434 8987 -9131 0
6434 8989 -9133 0
6436 -9101 0
6436 8958 -9103 0
6436 8959 -9105 0
6436 8961 -9107 0
6436 8963 -9109 0
6436 8965 -9111 0
6436 8967 -9113 0
6436 8969 -9115 0
6436 8971 -9117 0
6436 8973 -9119 0
6436 8975 -9121 0
6436 8977 -9123 0
6436 8979 -9125 0
6436 8981 -9127 0
6436 8983 -9129 0
6436 8985 -9131 0
6436 8987 -9133 0
6436 8989 -9135 0
6438 -9103 0
6438 8958 -9105 0
6438 8959 -9107 0
6438 8961 -9109 0
6438 8963 -9111 0
6438 8965 -9113 0
6438 8967 -9115 0
6438 8969 -9117 0
6438 8971 -9119 0
6438 8973 -9121 0
6438 8975 -9123 0
6438 8977 -9125 0
6438 8979 -9127 0
6438 8981 -9129 0
6438 8983 -9131 0
6438 8985 -9133 0
6438 8987 -9135 0
6438 8989 -9137 0
6440 -9105 0
6440 8958 -9107 0
6440 8959 -9109 0
6440 8961 -9111 0
6440 8963 -9113 0
6440 8965 -9115 0
6440 8967 -9117 0
6440 8969 -9119 0
6440 8971 -9121 0
6440 8973 -9123 0
6440 8975 -9125 0
6440 8977 -9127 0
6440 8979 -9129 0
6440 8981 -9131 0
6440 8983 -9133 0
6440 8985 -9135 0
6440 8987 -9137 0
6440 8989 -9139 0
6442 -9107 0
6442 8958 -9109 0
6442 8959 -9111 0
6442 8961 -9113 0
6442 8963 -9115 0
6442 8965 -9117 0
6442 8967 -9119 0
6442 8969 -9121 0
6442 8971 -9123 0
6442 8973 -9125 0
6442 8975 -9127 0
6442 8977 -9129 0
6442 8979 -9131 0
6442 8981 -9133 0
6442 8983 -9135 0
6442 8985 -9137 0
6442 8987 -9139 0
6442 8989 -9141 0
6444 -9109 0
6444 8958 -9111 0
6444 8959 -9113 0
6444 8961 -9115 0
6444 8963 -9117 0
6444 8965 -9119 0
6444 8967 -9121 0
6444 8969 -9123 0
6444 8971 -9125 0
6444 8973 -9127 0
6444 8975 -9129 0
6444 8977 -9131 0
6444 8979 -9133 0
6444 8981 -9135 0
6444 8983 -9137 0
6444 8985 -9139 0
6444 8987 -9141 0
6444 8989 -9143 0
6446 -9111 0
6446 8958 -9113 0
6446 8959 -9115 0
6446 8961 -9117 0
6446 8963 -9119 0
6446 8965 -9121 0
6446 8967 -9123 0
6446 8969 -9125 0
6446 8971 -9127 0
6446 8973 -9129 0
6446 8975 -9131 0
6446 8977 -9133 0
6446 8979 -9135 0
6446 8981 -9137 0
6446 8983 -9139 0
6446 8985 -9141 0
6446 8987 -9143 0
6446 8989 -9145 0
c (0<=(aux390 - aux394 + aux19))
-8989 9145 0
-8987 9143 0
-8985 9141 0
-8983 9139 0
-8981 9137 0
-8979 9135 0
-8977 9133 0
-8975 9131 0
-8973 9129 0
-8971 9127 0
-8969 9125 0
-8967 9123 0
-8965 9121 0
-8963 9119 0
-8961 9117 0
-8959 9115 0
-8958 9113 0
-6446 9145 0
-6446 -8989 9143 0
-6446 -8987 9141 0
-6446 -8985 9139 0
-6446 -8983 9137 0
-6446 -8981 9135 0
-6446 -8979 9133 0
-6446 -8977 9131 0
-6446 -8975 9129 0
-6446 -8973 9127 0
-6446 -8971 9125 0
-6446 -8969 9123 0
-6446 -8967 9121 0
-6446 -8965 9119 0
-6446 -8963 9117 0
-6446 -8961 9115 0
-6446 -8959 9113 0
-6446 -8958 9111 0
-6444 9143 0
-6444 -8989 9141 0
-6444 -8987 9139 0
-6444 -8985 9137 0
-6444 -8983 9135 0
-6444 -8981 9133 0
-6444 -8979 9131 0
-6444 -8977 9129 0
-6444 -8975 9127 0
-6444 -8973 9125 0
-6444 -8971 9123 0
-6444 -8969 9121 0
-6444 -8967 9119 0
-6444 -8965 9117 0
-6444 -8963 9115 0
-6444 -8961 9113 0
-6444 -8959 9111 0
-6444 -8958 9109 0
-6442 9141 0
-6442 -8989 9139 0
-6442 -8987 9137 0
-6442 -8985 9135 0
-6442 -8983 9133 0
-6442 -8981 9131 0
-6442 -8979 9129 0
-6442 -8977 9127 0
-6442 -8975 9125 0
-6442 -8973 9123 0
-6442 -8971 9121 0
-6442 -8969 9119 0
-6442 -8967 9117 0
-6442 -8965 9115 0
-6442 -8963 9113 0
-6442 -8961 9111 0
-6442 -8959 9109 0
-6442 -8958 9107 0
-6440 9139 0
-6440 -8989 9137 0
-6440 -8987 9135 0
-6440 -8985 9133 0
-6440 -8983 9131 0
-6440 -8981 9129 0
-6440 -8979 9127 0
-6440 -8977 9125 0
-6440 -8975 9123 0
-6440 -8973 9121 0
-6440 -8971 9119 0
-6440 -8969 9117 0
-6440 -8967 9115 0
-6440 -8965 9113 0
-6440 -8963 9111 0
-6440 -8961 9109 0
-6440 -8959 9107 0
-6440 -8958 9105 0
-6438 9137 0
-6438 -8989 9135 0
-6438 -8987 9133 0
-6438 -8985 9131 0
-6438 -8983 9129 0
-6438 -8981 9127 0
-6438 -8979 9125 0
-6438 -8977 9123 0
-6438 -8975 9121 0
-6438 -8973 9119 0
-6438 -8971 9117 0
-6438 -8969 9115 0
-6438 -8967 9113 0
-6438 -8965 9111 0
-6438 -8963 9109 0
-6438 -8961 9107 0
-6438 -8959 9105 0
-6438 -8958 9103 0
-6436 9135 0
-6436 -8989 9133 0
-6436 -8987 9131 0
-6436 -8985 9129 0
-6436 -8983 9127 0
-6436 -8981 9125 0
-6436 -8979 9123 0
-6436 -8977 9121 0
-6436 -8975 9119 0
-6436 -8973 9117 0
-6436 -8971 9115 0
-6436 -8969 9113 0
-6436 -8967 9111 0
-6436 -8965 9109 0
-6436 -8963 9107 0
-6436 -8961 9105 0
-6436 -8959 9103 0
-6436 -8958 9101 0
-6434 9133 0
-6434 -8989 9131 0
-6434 -8987 9129 0
-6434 -8985 9127 0
-6434 -8983 9125 0
-6434 -8981 9123 0
-6434 -8979 9121 0
-6434 -8977 9119 0
-6434 -8975 9117 0
-6434 -8973 9115 0
-6434 -8971 9113 0
-6434 -8969 9111 0
-6434 -8967 9109 0
-6434 -8965 9107 0
-6434 -8963 9105 0
-6434 -8961 9103 0
-6434 -8959 9101 0
-6434 -8958 9099 0
-6432 9131 0
-6432 -8989 9129 0
-6432 -8987 9127 0
-6432 -8985 9125 0
-6432 -8983 9123 0
-6432 -8981 9121 0
-6432 -8979 9119 0
-6432 -8977 9117 0
-6432 -8975 9115 0
-6432 -8973 9113 0
-6432 -8971 9111 0
-6432 -8969 9109 0
-6432 -8967 9107 0
-6432 -8965 9105 0
-6432 -8963 9103 0
-6432 -8961 9101 0
-6432 -8959 9099 0
-6432 -8958 9097 0
-6431 9129 0
-6431 -8989 9127 0
-6431 -8987 9125 0
-6431 -8985 9123 0
-6431 -8983 9121 0
-6431 -8981 9119 0
-6431 -8979 9117 0
-6431 -8977 9115 0
-6431 -8975 9113 0
-6431 -8973 9111 0
-6431 -8971 9109 0
-6431 -8969 9107 0
-6431 -8967 9105 0
-6431 -8965 9103 0
-6431 -8963 9101 0
-6431 -8961 9099 0
-6431 -8959 9097 0
-6431 -8958 9096 0
c ((aux392 + aux393 - aux395)<=0)
9061 -9147 0
9062 -9148 0
9064 -9150 0
9066 -9152 0
9068 -9154 0
9070 -9156 0
9072 -9158 0
9074 -9160 0
9076 -9162 0
9078 -9164 0
9080 -9166 0
9082 -9168 0
9084 -9170 0
9086 -9172 0
9088 -9174 0
9090 -9176 0
9092 -9178 0
9094 -9180 0
9026 -9147 0
9026 9061 -9148 0
9026 9062 -9150 0
9026 9064 -9152 0
9026 9066 -9154 0
9026 9068 -9156 0
9026 9070 -9158 0
9026 9072 -9160 0
9026 9074 -9162 0
9026 9076 -9164 0
9026 9078 -9166 0
9026 9080 -9168 0
9026 9082 -9170 0
9026 9084 -9172 0
9026 9086 -9174 0
9026 9088 -9176 0
9026 9090 -9178 0
9026 9092 -9180 0
9026 9094 -9182 0
9027 -9148 0
9027 9061 -9150 0
9027 9062 -9152 0
9027 9064 -9154 0
9027 9066 -9156 0
9027 9068 -9158 0
9027 9070 -9160 0
9027 9072 -9162 0
9027 9074 -9164 0
9027 9076 -9166 0
9027 9078 -9168 0
9027 9080 -9170 0
9027 9082 -9172 0
9027 9084 -9174 0
9027 9086 -9176 0
9027 9088 -9178 0
9027 9090 -9180 0
9027 9092 -9182 0
9027 9094 -9184 0
9029 -9150 0
9029 9061 -9152 0
9029 9062 -9154 0
9029 9064 -9156 0
9029 9066 -9158 0
9029 9068 -9160 0
9029 9070 -9162 0
9029 9072 -9164 0
9029 9074 -9166 0
9029 9076 -9168 0
9029 9078 -9170 0
9029 9080 -9172 0
9029 9082 -9174 0
9029 9084 -9176 0
9029 9086 -9178 0
9029 9088 -9180 0
9029 9090 -9182 0
9029 9092 -9184 0
9029 9094 -9186 0
9031 -9152 0
9031 9061 -9154 0
9031 9062 -9156 0
9031 9064 -9158 0
9031 9066 -9160 0
9031 9068 -9162 0
9031 9070 -9164 0
9031 9072 -9166 0
9031 9074 -9168 0
9031 9076 -9170 0
9031 9078 -9172 0
9031 9080 -9174 0
9031 9082 -9176 0
9031 9084 -9178 0
9031 9086 -9180 0
9031 9088 -9182 0
9031 9090 -9184 0
9031 9092 -9186 0
9031 9094 -9188 0
9033 -9154 0
9033 9061 -9156 0
9033 9062 -9158 0
9033 9064 -9160 0
9033 9066 -9162 0
9033 9068 -9164 0
9033 9070 -9166 0
9033 9072 -9168 0
9033 9074 -9170 0
9033 9076 -9172 0
9033 9078 -9174 0
9033 9080 -9176 0
9033 9082 -9178 0
9033 9084 -9180 0
9033 9086 -9182 0
9033 9088 -9184 0
9033 9090 -9186 0
9033 9092 -9188 0
9033 9094 -9190 0
9035 -9156 0
9035 9061 -9158 0
9035 9062 -9160 0
9035 9064 -9162 0
9035 9066 -9164 0
9035 9068 -9166 0
9035 9070 -9168 0
9035 9072 -9170 0
9035 9074 -9172 0
9035 9076 -9174 0
9035 9078 -9176 0
9035 9080 -9178 0
9035 9082 -9180 0
9035 9084 -9182 0
9035 9086 -9184 0
9035 9088 -9186 0
9035 9090 -9188 0
9035 9092 -9190 0
9035 9094 -9192 0
9037 -9158 0
9037 9061 -9160 0
9037 9062 -9162 0
9037 9064 -9164 0
9037 9066 -9166 0
9037 9068 -9168 0
9037 9070 -9170 0
9037 9072 -9172 0
9037 9074 -9174 0
9037 9076 -9176 0
9037 9078 -9178 0
9037 9080 -9180 0
9037 9082 -9182 0
9037 9084 -9184 0
9037 9086 -9186 0
9037 9088 -9188 0
9037 9090 -9190 0
9037 9092 -9192 0
9037 9094 -9194 0
9039 -9160 0
9039 9061 -9162 0
9039 9062 -9164 0
9039 9064 -9166 0
9039 9066 -9168 0
9039 9068 -9170 0
9039 9070 -9172 0
9039 9072 -9174 0
9039 9074 -9176 0
9039 9076 -9178 0
9039 9078 -9180 0
9039 9080 -9182 0
9039 9082 -9184 0
9039 9084 -9186 0
9039 9086 -9188 0
9039 9088 -9190 0
9039 9090 -9192 0
9039 9092 -9194 0
9039 9094 -9196 0
9041 -9162 0
9041 9061 -9164 0
9041 9062 -9166 0
9041 9064 -9168 0
9041 9066 -9170 0
9041 9068 -9172 0
9041 9070 -9174 0
9041 9072 -9176 0
9041 9074 -9178 0
9041 9076 -9180 0
9041 9078 -9182 0
9041 9080 -9184 0
9041 9082 -9186 0
9041 9084 -9188 0
9041 9086 -9190 0
9041 9088 -9192 0
9041 9090 -9194 0
9041 9092 -9196 0
9041 9094 -9198 0
9043 -9164 0
9043 9061 -9166 0
9043 9062 -9168 0
9043 9064 -9170 0
9043 9066 -9172 0
9043 9068 -9174 0
9043 9070 -9176 0
9043 9072 -9178 0
9043 9074 -9180 0
9043 9076 -9182 0
9043 9078 -9184 0
9043 9080 -9186 0
9043 9082 -9188 0
9043 9084 -9190 0
9043 9086 -9192 0
9043 9088 -9194 0
9043 9090 -9196 0
9043 9092 -9198 0
9043 9094 -9200 0
9045 -9166 0
9045 9061 -9168 0
9045 9062 -9170 0
9045 9064 -9172 0
9045 9066 -9174 0
9045 9068 -9176 0
9045 9070 -9178 0
9045 9072 -9180 0
9045 9074 -9182 0
9045 9076 -9184 0
9045 9078 -9186 0
9045 9080 -9188 0
9045 9082 -9190 0
9045 9084 -9192 0
9045 9086 -9194 0
9045 9088 -9196 0
9045 9090 -9198 0
9045 9092 -9200 0
9045 9094 -9202 0
9047 -9168 0
9047 9061 -9170 0
9047 9062 -9172 0
9047 9064 -9174 0
9047 9066 -9176 0
9047 9068 -9178 0
9047 9070 -9180 0
9047 9072 -9182 0
9047 9074 -9184 0
9047 9076 -9186 0
9047 9078 -9188 0
9047 9080 -9190 0
9047 9082 -9192 0
9047 9084 -9194 0
9047 9086 -9196 0
9047 9088 -9198 0
9047 9090 -9200 0
9047 9092 -9202 0
9047 9094 -9204 0
9049 -9170 0
9049 9061 -9172 0
9049 9062 -9174 0
9049 9064 -9176 0
9049 9066 -9178 0
9049 9068 -9180 0
9049 9070 -9182 0
9049 9072 -9184 0
9049 9074 -9186 0
9049 9076 -9188 0
9049 9078 -9190 0
9049 9080 -9192 0
9049 9082 -9194 0
9049 9084 -9196 0
9049 9086 -9198 0
9049 9088 -9200 0
9049 9090 -9202 0
9049 9092 -9204 0
9049 9094 -9206 0
9051 -9172 0
9051 9061 -9174 0
9051 9062 -9176 0
9051 9064 -9178 0
9051 9066 -9180 0
9051 9068 -9182 0
9051 9070 -9184 0
9051 9072 -9186 0
9051 9074 -9188 0
9051 9076 -9190 0
9051 9078 -9192 0
9051 9080 -9194 0
9051 9082 -9196 0
9051 9084 -9198 0
9051 9086 -9200 0
9051 9088 -9202 0
9051 9090 -9204 0
9051 9092 -9206 0
9051 9094 -9208 0
9053 -9174 0
9053 9061 -9176 0
9053 9062 -9178 0
9053 9064 -9180 0
9053 9066 -9182 0
9053 9068 -9184 0
9053 9070 -9186 0
9053 9072 -9188 0
9053 9074 -9190 0
9053 9076 -9192 0
9053 9078 -9194 0
9053 9080 -9196 0
9053 9082 -9198 0
9053 9084 -9200 0
9053 9086 -9202 0
9053 9088 -9204 0
9053 9090 -9206 0
9053 9092 -9208 0
9053 9094 -9210 0
9055 -9176 0
9055 9061 -9178 0
9055 9062 -9180 0
9055 9064 -9182 0
9055 9066 -9184 0
9055 9068 -9186 0
9055 9070 -9188 0
9055 9072 -9190 0
9055 9074 -9192 0
9055 9076 -9194 0
9055 9078 -9196 0
9055 9080 -9198 0
9055 9082 -9200 0
9055 9084 -9202 0
9055 9086 -9204 0
9055 9088 -9206 0
9055 9090 -9208 0
9055 9092 -9210 0
9055 9094 -9212 0
9057 -9178 0
9057 9061 -9180 0
9057 9062 -9182 0
9057 9064 -9184 0
9057 9066 -9186 0
9057 9068 -9188 0
9057 9070 -9190 0
9057 9072 -9192 0
9057 9074 -9194 0
9057 9076 -9196 0
9057 9078 -9198 0
9057 9080 -9200 0
9057 9082 -9202 0
9057 9084 -9204 0
9057 9086 -9206 0
9057 9088 -9208 0
9057 9090 -9210 0
9057 9092 -9212 0
9057 9094 -9214 0
9059 -9180 0
9059 9061 -9182 0
9059 9062 -9184 0
9059 9064 -9186 0
9059 9066 -9188 0
9059 9068 -9190 0
9059 9070 -9192 0
9059 9072 -9194 0
9059 9074 -9196 0
9059 9076 -9198 0
9059 9078 -9200 0
9059 9080 -9202 0
9059 9082 -9204 0
9059 9084 -9206 0
9059 9086 -9208 0
9059 9088 -9210 0
9059 9090 -9212 0
9059 9092 -9214 0
9059 9094 -9216 0
c (0<=(aux392 + aux393 - aux395))
-9094 9216 0
-9092 9214 0
-9090 9212 0
-9088 9210 0
-9086 9208 0
-9084 9206 0
-9082 9204 0
-9080 9202 0
-9078 9200 0
-9076 9198 0
-9074 9196 0
-9072 9194 0
-9070 9192 0
-9068 9190 0
-9066 9188 0
-9064 9186 0
-9062 9184 0
-9061 9182 0
-9059 9216 0
-9059 -9094 9214 0
-9059 -9092 9212 0
-9059 -9090 9210 0
-9059 -9088 9208 0
-9059 -9086 9206 0
-9059 -9084 9204 0
-9059 -9082 9202 0
-9059 -9080 9200 0
-9059 -9078 9198 0
-9059 -9076 9196 0
-9059 -9074 9194 0
-9059 -9072 9192 0
-9059 -9070 9190 0
-9059 -9068 9188 0
-9059 -9066 9186 0
-9059 -9064 9184 0
-9059 -9062 9182 0
-9059 -9061 9180 0
-9057 9214 0
-9057 -9094 9212 0
-9057 -9092 9210 0
-9057 -9090 9208 0
-9057 -9088 9206 0
-9057 -9086 9204 0
-9057 -9084 9202 0
-9057 -9082 9200 0
-9057 -9080 9198 0
-9057 -9078 9196 0
-9057 -9076 9194 0
-9057 -9074 9192 0
-9057 -9072 9190 0
-9057 -9070 9188 0
-9057 -9068 9186 0
-9057 -9066 9184 0
-9057 -9064 9182 0
-9057 -9062 9180 0
-9057 -9061 9178 0
-9055 9212 0
-9055 -9094 9210 0
-9055 -9092 9208 0
-9055 -9090 9206 0
-9055 -9088 9204 0
-9055 -9086 9202 0
-9055 -9084 9200 0
-9055 -9082 9198 0
-9055 -9080 9196 0
-9055 -9078 9194 0
-9055 -9076 9192 0
-9055 -9074 9190 0
-9055 -9072 9188 0
-9055 -9070 9186 0
-9055 -9068 9184 0
-9055 -9066 9182 0
-9055 -9064 9180 0
-9055 -9062 9178 0
-9055 -9061 9176 0
-9053 9210 0
-9053 -9094 9208 0
-9053 -9092 9206 0
-9053 -9090 9204 0
-9053 -9088 9202 0
-9053 -9086 9200 0
-9053 -9084 9198 0
-9053 -9082 9196 0
-9053 -9080 9194 0
-9053 -9078 9192 0
-9053 -9076 9190 0
-9053 -9074 9188 0
-9053 -9072 9186 0
-9053 -9070 9184 0
-9053 -9068 9182 0
-9053 -9066 9180 0
-9053 -9064 9178 0
-9053 -9062 9176 0
-9053 -9061 9174 0
-9051 9208 0
-9051 -9094 9206 0
-9051 -9092 9204 0
-9051 -9090 9202 0
-9051 -9088 9200 0
-9051 -9086 9198 0
-9051 -9084 9196 0
-9051 -9082 9194 0
-9051 -9080 9192 0
-9051 -9078 9190 0
-9051 -9076 9188 0
-9051 -9074 9186 0
-9051 -9072 9184 0
-9051 -9070 9182 0
-9051 -9068 9180 0
-9051 -9066 9178 0
-9051 -9064 9176 0
-9051 -9062 9174 0
-9051 -9061 9172 0
-9049 9206 0
-9049 -9094 9204 0
-9049 -9092 9202 0
-9049 -9090 9200 0
-9049 -9088 9198 0
-9049 -9086 9196 0
-9049 -9084 9194 0
-9049 -9082 9192 0
-9049 -9080 9190 0
-9049 -9078 9188 0
-9049 -9076 9186 0
-9049 -9074 9184 0
-9049 -9072 9182 0
-9049 -9070 9180 0
-9049 -9068 9178 0
-9049 -9066 9176 0
-9049 -9064 9174 0
-9049 -9062 9172 0
-9049 -9061 9170 0
-9047 9204 0
-9047 -9094 9202 0
-9047 -9092 9200 0
-9047 -9090 9198 0
-9047 -9088 9196 0
-9047 -9086 9194 0
-9047 -9084 9192 0
-9047 -9082 9190 0
-9047 -9080 9188 0
-9047 -9078 9186 0
-9047 -9076 9184 0
-9047 -9074 9182 0
-9047 -9072 9180 0
-9047 -9070 9178 0
-9047 -9068 9176 0
-9047 -9066 9174 0
-9047 -9064 9172 0
-9047 -9062 9170 0
-9047 -9061 9168 0
-9045 9202 0
-9045 -9094 9200 0
-9045 -9092 9198 0
-9045 -9090 9196 0
-9045 -9088 9194 0
-9045 -9086 9192 0
-9045 -9084 9190 0
-9045 -9082 9188 0
-9045 -9080 9186 0
-9045 -9078 9184 0
-9045 -9076 9182 0
-9045 -9074 9180 0
-9045 -9072 9178 0
-9045 -9070 9176 0
-9045 -9068 9174 0
-9045 -9066 9172 0
-9045 -9064 9170 0
-9045 -9062 9168 0
-9045 -9061 9166 0
-9043 9200 0
-9043 -9094 9198 0
-9043 -9092 9196 0
-9043 -9090 9194 0
-9043 -9088 9192 0
-9043 -9086 9190 0
-9043 -9084 9188 0
-9043 -9082 9186 0
-9043 -9080 9184 0
-9043 -9078 9182 0
-9043 -9076 9180 0
-9043 -9074 9178 0
-9043 -9072 9176 0
-9043 -9070 9174 0
-9043 -9068 9172 0
-9043 -9066 9170 0
-9043 -9064 9168 0
-9043 -9062 9166 0
-9043 -9061 9164 0
-9041 9198 0
-9041 -9094 9196 0
-9041 -9092 9194 0
-9041 -9090 9192 0
-9041 -9088 9190 0
-9041 -9086 9188 0
-9041 -9084 9186 0
-9041 -9082 9184 0
-9041 -9080 9182 0
-9041 -9078 9180 0
-9041 -9076 9178 0
-9041 -9074 9176 0
-9041 -9072 9174 0
-9041 -9070 9172 0
-9041 -9068 9170 0
-9041 -9066 9168 0
-9041 -9064 9166 0
-9041 -9062 9164 0
-9041 -9061 9162 0
-9039 9196 0
-9039 -9094 9194 0
-9039 -9092 9192 0
-9039 -9090 9190 0
-9039 -9088 9188 0
-9039 -9086 9186 0
-9039 -9084 9184 0
-9039 -9082 9182 0
-9039 -9080 9180 0
-9039 -9078 9178 0
-9039 -9076 9176 0
-9039 -9074 9174 0
-9039 -9072 9172 0
-9039 -9070 9170 0
-9039 -9068 9168 0
-9039 -9066 9166 0
-9039 -9064 9164 0
-9039 -9062 9162 0
-9039 -9061 9160 0
-9037 9194 0
-9037 -9094 9192 0
-9037 -9092 9190 0
-9037 -9090 9188 0
-9037 -9088 9186 0
-9037 -9086 9184 0
-9037 -9084 9182 0
-9037 -9082 9180 0
-9037 -9080 9178 0
-9037 -9078 9176 0
-9037 -9076 9174 0
-9037 -9074 9172 0
-9037 -9072 9170 0
-9037 -9070 9168 0
-9037 -9068 9166 0
-9037 -9066 9164 0
-9037 -9064 9162 0
-9037 -9062 9160 0
-9037 -9061 9158 0
-9035 9192 0
-9035 -9094 9190 0
-9035 -9092 9188 0
-9035 -9090 9186 0
-9035 -9088 9184 0
-9035 -9086 9182 0
-9035 -9084 9180 0
-9035 -9082 9178 0
-9035 -9080 9176 0
-9035 -9078 9174 0
-9035 -9076 9172 0
-9035 -9074 9170 0
-9035 -9072 9168 0
-9035 -9070 9166 0
-9035 -9068 9164 0
-9035 -9066 9162 0
-9035 -9064 9160 0
-9035 -9062 9158 0
-9035 -9061 9156 0
-9033 9190 0
-9033 -9094 9188 0
-9033 -9092 9186 0
-9033 -9090 9184 0
-9033 -9088 9182 0
-9033 -9086 9180 0
-9033 -9084 9178 0
-9033 -9082 9176 0
-9033 -9080 9174 0
-9033 -9078 9172 0
-9033 -9076 9170 0
-9033 -9074 9168 0
-9033 -9072 9166 0
-9033 -9070 9164 0
-9033 -9068 9162 0
-9033 -9066 9160 0
-9033 -9064 9158 0
-9033 -9062 9156 0
-9033 -9061 9154 0
-9031 9188 0
-9031 -9094 9186 0
-9031 -9092 9184 0
-9031 -9090 9182 0
-9031 -9088 9180 0
-9031 -9086 9178 0
-9031 -9084 9176 0
-9031 -9082 9174 0
-9031 -9080 9172 0
-9031 -9078 9170 0
-9031 -9076 9168 0
-9031 -9074 9166 0
-9031 -9072 9164 0
-9031 -9070 9162 0
-9031 -9068 9160 0
-9031 -9066 9158 0
-9031 -9064 9156 0
-9031 -9062 9154 0
-9031 -9061 9152 0
-9029 9186 0
-9029 -9094 9184 0
-9029 -9092 9182 0
-9029 -9090 9180 0
-9029 -9088 9178 0
-9029 -9086 9176 0
-9029 -9084 9174 0
-9029 -9082 9172 0
-9029 -9080 9170 0
-9029 -9078 9168 0
-9029 -9076 9166 0
-9029 -9074 9164 0
-9029 -9072 9162 0
-9029 -9070 9160 0
-9029 -9068 9158 0
-9029 -9066 9156 0
-9029 -9064 9154 0
-9029 -9062 9152 0
-9029 -9061 9150 0
-9027 9184 0
-9027 -9094 9182 0
-9027 -9092 9180 0
-9027 -9090 9178 0
-9027 -9088 9176 0
-9027 -9086 9174 0
-9027 -9084 9172 0
-9027 -9082 9170 0
-9027 -9080 9168 0
-9027 -9078 9166 0
-9027 -9076 9164 0
-9027 -9074 9162 0
-9027 -9072 9160 0
-9027 -9070 9158 0
-9027 -9068 9156 0
-9027 -9066 9154 0
-9027 -9064 9152 0
-9027 -9062 9150 0
-9027 -9061 9148 0
-9026 9182 0
-9026 -9094 9180 0
-9026 -9092 9178 0
-9026 -9090 9176 0
-9026 -9088 9174 0
-9026 -9086 9172 0
-9026 -9084 9170 0
-9026 -9082 9168 0
-9026 -9080 9166 0
-9026 -9078 9164 0
-9026 -9076 9162 0
-9026 -9074 9160 0
-9026 -9072 9158 0
-9026 -9070 9156 0
-9026 -9068 9154 0
-9026 -9066 9152 0
-9026 -9064 9150 0
-9026 -9062 9148 0
-9026 -9061 9147 0
c (( - aux396 + shift(variant_fields_00001_00008_00001, -1) + aux30)<=0)
6602 -9218 0
6603 -9219 0
6605 -9221 0
6607 -9223 0
6609 -9225 0
6611 -9227 0
6613 -9229 0
6615 -9231 0
6617 -9233 0
2162 -9218 0
2162 6602 -9219 0
2162 6603 -9221 0
2162 6605 -9223 0
2162 6607 -9225 0
2162 6609 -9227 0
2162 6611 -9229 0
2162 6613 -9231 0
2162 6615 -9233 0
2162 6617 -9235 0
2163 -9219 0
2163 6602 -9221 0
2163 6603 -9223 0
2163 6605 -9225 0
2163 6607 -9227 0
2163 6609 -9229 0
2163 6611 -9231 0
2163 6613 -9233 0
2163 6615 -9235 0
2163 6617 -9237 0
2165 -9221 0
2165 6602 -9223 0
2165 6603 -9225 0
2165 6605 -9227 0
2165 6607 -9229 0
2165 6609 -9231 0
2165 6611 -9233 0
2165 6613 -9235 0
2165 6615 -9237 0
2165 6617 -9239 0
2167 -9223 0
2167 6602 -9225 0
2167 6603 -9227 0
2167 6605 -9229 0
2167 6607 -9231 0
2167 6609 -9233 0
2167 6611 -9235 0
2167 6613 -9237 0
2167 6615 -9239 0
2167 6617 -9241 0
2169 -9225 0
2169 6602 -9227 0
2169 6603 -9229 0
2169 6605 -9231 0
2169 6607 -9233 0
2169 6609 -9235 0
2169 6611 -9237 0
2169 6613 -9239 0
2169 6615 -9241 0
2169 6617 -9243 0
2171 -9227 0
2171 6602 -9229 0
2171 6603 -9231 0
2171 6605 -9233 0
2171 6607 -9235 0
2171 6609 -9237 0
2171 6611 -9239 0
2171 6613 -9241 0
2171 6615 -9243 0
2171 6617 -9245 0
2173 -9229 0
2173 6602 -9231 0
2173 6603 -9233 0
2173 6605 -9235 0
2173 6607 -9237 0
2173 6609 -9239 0
2173 6611 -9241 0
2173 6613 -9243 0
2173 6615 -9245 0
2173 6617 -9247 0
2175 -9231 0
2175 6602 -9233 0
2175 6603 -9235 0
2175 6605 -9237 0
2175 6607 -9239 0
2175 6609 -9241 0
2175 6611 -9243 0
2175 6613 -9245 0
2175 6615 -9247 0
2175 6617 -9249 0
c (0<=( - aux396 + shift(variant_fields_00001_00008_00001, -1) + aux30))
-6617 9249 0
-6615 9247 0
-6613 9245 0
-6611 9243 0
-6609 9241 0
-6607 9239 0
-6605 9237 0
-6603 9235 0
-6602 9233 0
-2175 9249 0
-2175 -6617 9247 0
-2175 -6615 9245 0
-2175 -6613 9243 0
-2175 -6611 9241 0
-2175 -6609 9239 0
-2175 -6607 9237 0
-2175 -6605 9235 0
-2175 -6603 9233 0
-2175 -6602 9231 0
-2173 9247 0
-2173 -6617 9245 0
-2173 -6615 9243 0
-2173 -6613 9241 0
-2173 -6611 9239 0
-2173 -6609 9237 0
-2173 -6607 9235 0
-2173 -6605 9233 0
-2173 -6603 9231 0
-2173 -6602 9229 0
-2171 9245 0
-2171 -6617 9243 0
-2171 -6615 9241 0
-2171 -6613 9239 0
-2171 -6611 9237 0
-2171 -6609 9235 0
-2171 -6607 9233 0
-2171 -6605 9231 0
-2171 -6603 9229 0
-2171 -6602 9227 0
-2169 9243 0
-2169 -6617 9241 0
-2169 -6615 9239 0
-2169 -6613 9237 0
-2169 -6611 9235 0
-2169 -6609 9233 0
-2169 -6607 9231 0
-2169 -6605 9229 0
-2169 -6603 9227 0
-2169 -6602 9225 0
-2167 9241 0
-2167 -6617 9239 0
-2167 -6615 9237 0
-2167 -6613 9235 0
-2167 -6611 9233 0
-2167 -6609 9231 0
-2167 -6607 9229 0
-2167 -6605 9227 0
-2167 -6603 9225 0
-2167 -6602 9223 0
-2165 9239 0
-2165 -6617 9237 0
-2165 -6615 9235 0
-2165 -6613 9233 0
-2165 -6611 9231 0
-2165 -6609 9229 0
-2165 -6607 9227 0
-2165 -6605 9225 0
-2165 -6603 9223 0
-2165 -6602 9221 0
-2163 9237 0
-2163 -6617 9235 0
-2163 -6615 9233 0
-2163 -6613 9231 0
-2163 -6611 9229 0
-2163 -6609 9227 0
-2163 -6607 9225 0
-2163 -6605 9223 0
-2163 -6603 9221 0
-2163 -6602 9219 0
-2162 9235 0
-2162 -6617 9233 0
-2162 -6615 9231 0
-2162 -6613 9229 0
-2162 -6611 9227 0
-2162 -6609 9225 0
-2162 -6607 9223 0
-2162 -6605 9221 0
-2162 -6603 9219 0
-2162 -6602 9218 0
c (( - aux397 + aux27 + aux34)<=0)
6670 -9251 0
6671 -9252 0
6673 -9254 0
6675 -9256 0
6677 -9258 0
6679 -9260 0
6681 -9262 0
6683 -9264 0
6685 -9266 0
6551 -9251 0
6551 6670 -9252 0
6551 6671 -9254 0
6551 6673 -9256 0
6551 6675 -9258 0
6551 6677 -9260 0
6551 6679 -9262 0
6551 6681 -9264 0
6551 6683 -9266 0
6551 6685 -9268 0
6552 -9252 0
6552 6670 -9254 0
6552 6671 -9256 0
6552 6673 -9258 0
6552 6675 -9260 0
6552 6677 -9262 0
6552 6679 -9264 0
6552 6681 -9266 0
6552 6683 -9268 0
6552 6685 -9270 0
6554 -9254 0
6554 6670 -9256 0
6554 6671 -9258 0
6554 6673 -9260 0
6554 6675 -9262 0
6554 6677 -9264 0
6554 6679 -9266 0
6554 6681 -9268 0
6554 6683 -9270 0
6554 6685 -9272 0
6556 -9256 0
6556 6670 -9258 0
6556 6671 -9260 0
6556 6673 -9262 0
6556 6675 -9264 0
6556 6677 -9266 0
6556 6679 -9268 0
6556 6681 -9270 0
6556 6683 -9272 0
6556 6685 -9274 0
6558 -9258 0
6558 6670 -9260 0
6558 6671 -9262 0
6558 6673 -9264 0
6558 6675 -9266 0
6558 6677 -9268 0
6558 6679 -9270 0
6558 6681 -9272 0
6558 6683 -9274 0
6558 6685 -9276 0
6560 -9260 0
6560 6670 -9262 0
6560 6671 -9264 0
6560 6673 -9266 0
6560 6675 -9268 0
6560 6677 -9270 0
6560 6679 -9272 0
6560 6681 -9274 0
6560 6683 -9276 0
6560 6685 -9278 0
6562 -9262 0
6562 6670 -9264 0
6562 6671 -9266 0
6562 6673 -9268 0
6562 6675 -9270 0
6562 6677 -9272 0
6562 6679 -9274 0
6562 6681 -9276 0
6562 6683 -9278 0
6562 6685 -9280 0
6564 -9264 0
6564 6670 -9266 0
6564 6671 -9268 0
6564 6673 -9270 0
6564 6675 -9272 0
6564 6677 -9274 0
6564 6679 -9276 0
6564 6681 -9278 0
6564 6683 -9280 0
6564 6685 -9282 0
6566 -9266 0
6566 6670 -9268 0
6566 6671 -9270 0
6566 6673 -9272 0
6566 6675 -9274 0
6566 6677 -9276 0
6566 6679 -9278 0
6566 6681 -9280 0
6566 6683 -9282 0
6566 6685 -9284 0
c (0<=( - aux397 + aux27 + aux34))
-6685 9284 0
-6683 9282 0
-6681 9280 0
-6679 9278 0
-6677 9276 0
-6675 9274 0
-6673 9272 0
-6671 9270 0
-6670 9268 0
-6566 9284 0
-6566 -6685 9282 0
-6566 -6683 9280 0
-6566 -6681 9278 0
-6566 -6679 9276 0
-6566 -6677 9274 0
-6566 -6675 9272 0
-6566 -6673 9270 0
-6566 -6671 9268 0
-6566 -6670 9266 0
-6564 9282 0
-6564 -6685 9280 0
-6564 -6683 9278 0
-6564 -6681 9276 0
-6564 -6679 9274 0
-6564 -6677 9272 0
-6564 -6675 9270 0
-6564 -6673 9268 0
-6564 -6671 9266 0
-6564 -6670 9264 0
-6562 9280 0
-6562 -6685 9278 0
-6562 -6683 9276 0
-6562 -6681 9274 0
-6562 -6679 9272 0
-6562 -6677 9270 0
-6562 -6675 9268 0
-6562 -6673 9266 0
-6562 -6671 9264 0
-6562 -6670 9262 0
-6560 9278 0
-6560 -6685 9276 0
-6560 -6683 9274 0
-6560 -6681 9272 0
-6560 -6679 9270 0
-6560 -6677 9268 0
-6560 -6675 9266 0
-6560 -6673 9264 0
-6560 -6671 9262 0
-6560 -6670 9260 0
-6558 9276 0
-6558 -6685 9274 0
-6558 -6683 9272 0
-6558 -6681 9270 0
-6558 -6679 9268 0
-6558 -6677 9266 0
-6558 -6675 9264 0
-6558 -6673 9262 0
-6558 -6671 9260 0
-6558 -6670 9258 0
-6556 9274 0
-6556 -6685 9272 0
-6556 -6683 9270 0
-6556 -6681 9268 0
-6556 -6679 9266 0
-6556 -6677 9264 0
-6556 -6675 9262 0
-6556 -6673 9260 0
-6556 -6671 9258 0
-6556 -6670 9256 0
-6554 9272 0
-6554 -6685 9270 0
-6554 -6683 9268 0
-6554 -6681 9266 0
-6554 -6679 9264 0
-6554 -6677 9262 0
-6554 -6675 9260 0
-6554 -6673 9258 0
-6554 -6671 9256 0
-6554 -6670 9254 0
-6552 9270 0
-6552 -6685 9268 0
-6552 -6683 9266 0
-6552 -6681 9264 0
-6552 -6679 9262 0
-6552 -6677 9260 0
-6552 -6675 9258 0
-6552 -6673 9256 0
-6552 -6671 9254 0
-6552 -6670 9252 0
-6551 9268 0
-6551 -6685 9266 0
-6551 -6683 9264 0
-6551 -6681 9262 0
-6551 -6679 9260 0
-6551 -6677 9258 0
-6551 -6675 9256 0
-6551 -6673 9254 0
-6551 -6671 9252 0
-6551 -6670 9251 0
c (( - aux398 + aux28 + aux33)<=0)
6653 -9286 0
6654 -9287 0
6656 -9289 0
6658 -9291 0
6660 -9293 0
6662 -9295 0
6664 -9297 0
6666 -9299 0
6668 -9301 0
6568 -9286 0
6568 6653 -9287 0
6568 6654 -9289 0
6568 6656 -9291 0
6568 6658 -9293 0
6568 6660 -9295 0
6568 6662 -9297 0
6568 6664 -9299 0
6568 6666 -9301 0
6568 6668 -9303 0
6569 -9287 0
6569 6653 -9289 0
6569 6654 -9291 0
6569 6656 -9293 0
6569 6658 -9295 0
6569 6660 -9297 0
6569 6662 -9299 0
6569 6664 -9301 0
6569 6666 -9303 0
6569 6668 -9305 0
6571 -9289 0
6571 6653 -9291 0
6571 6654 -9293 0
6571 6656 -9295 0
6571 6658 -9297 0
6571 6660 -9299 0
6571 6662 -9301 0
6571 6664 -9303 0
6571 6666 -9305 0
6571 6668 -9307 0
6573 -9291 0
6573 6653 -9293 0
6573 6654 -9295 0
6573 6656 -9297 0
6573 6658 -9299 0
6573 6660 -9301 0
6573 6662 -9303 0
6573 6664 -9305 0
6573 6666 -9307 0
6573 6668 -9309 0
6575 -9293 0
6575 6653 -9295 0
6575 6654 -9297 0
6575 6656 -9299 0
6575 6658 -9301 0
6575 6660 -9303 0
6575 6662 -9305 0
6575 6664 -9307 0
6575 6666 -9309 0
6575 6668 -9311 0
6577 -9295 0
6577 6653 -9297 0
6577 6654 -9299 0
6577 6656 -9301 0
6577 6658 -9303 0
6577 6660 -9305 0
6577 6662 -9307 0
6577 6664 -9309 0
6577 6666 -9311 0
6577 6668 -9313 0
6579 -9297 0
6579 6653 -9299 0
6579 6654 -9301 0
6579 6656 -9303 0
6579 6658 -9305 0
6579 6660 -9307 0
6579 6662 -9309 0
6579 6664 -9311 0
6579 6666 -9313 0
6579 6668 -9315 0
6581 -9299 0
6581 6653 -9301 0
6581 6654 -9303 0
6581 6656 -9305 0
6581 6658 -9307 0
6581 6660 -9309 0
6581 6662 -9311 0
6581 6664 -9313 0
6581 6666 -9315 0
6581 6668 -9317 0
6583 -9301 0
6583 6653 -9303 0
6583 6654 -9305 0
6583 6656 -9307 0
6583 6658 -9309 0
6583 6660 -9311 0
6583 6662 -9313 0
6583 6664 -9315 0
6583 6666 -9317 0
6583 6668 -9319 0
c (0<=( - aux398 + aux28 + aux33))
-6668 9319 0
-6666 9317 0
-6664 9315 0
-6662 9313 0
-6660 9311 0
-6658 9309 0
-6656 9307 0
-6654 9305 0
-6653 9303 0
-6583 9319 0
-6583 -6668 9317 0
-6583 -6666 9315 0
-6583 -6664 9313 0
-6583 -6662 9311 0
-6583 -6660 9309 0
-6583 -6658 9307 0
-6583 -6656 9305 0
-6583 -6654 9303 0
-6583 -6653 9301 0
-6581 9317 0
-6581 -6668 9315 0
-6581 -6666 9313 0
-6581 -6664 9311 0
-6581 -6662 9309 0
-6581 -6660 9307 0
-6581 -6658 9305 0
-6581 -6656 9303 0
-6581 -6654 9301 0
-6581 -6653 9299 0
-6579 9315 0
-6579 -6668 9313 0
-6579 -6666 9311 0
-6579 -6664 9309 0
-6579 -6662 9307 0
-6579 -6660 9305 0
-6579 -6658 9303 0
-6579 -6656 9301 0
-6579 -6654 9299 0
-6579 -6653 9297 0
-6577 9313 0
-6577 -6668 9311 0
-6577 -6666 9309 0
-6577 -6664 9307 0
-6577 -6662 9305 0
-6577 -6660 9303 0
-6577 -6658 9301 0
-6577 -6656 9299 0
-6577 -6654 9297 0
-6577 -6653 9295 0
-6575 9311 0
-6575 -6668 9309 0
-6575 -6666 9307 0
-6575 -6664 9305 0
-6575 -6662 9303 0
-6575 -6660 9301 0
-6575 -6658 9299 0
-6575 -6656 9297 0
-6575 -6654 9295 0
-6575 -6653 9293 0
-6573 9309 0
-6573 -6668 9307 0
-6573 -6666 9305 0
-6573 -6664 9303 0
-6573 -6662 9301 0
-6573 -6660 9299 0
-6573 -6658 9297 0
-6573 -6656 9295 0
-6573 -6654 9293 0
-6573 -6653 9291 0
-6571 9307 0
-6571 -6668 9305 0
-6571 -6666 9303 0
-6571 -6664 9301 0
-6571 -6662 9299 0
-6571 -6660 9297 0
-6571 -6658 9295 0
-6571 -6656 9293 0
-6571 -6654 9291 0
-6571 -6653 9289 0
-6569 9305 0
-6569 -6668 9303 0
-6569 -6666 9301 0
-6569 -6664 9299 0
-6569 -6662 9297 0
-6569 -6660 9295 0
-6569 -6658 9293 0
-6569 -6656 9291 0
-6569 -6654 9289 0
-6569 -6653 9287 0
-6568 9303 0
-6568 -6668 9301 0
-6568 -6666 9299 0
-6568 -6664 9297 0
-6568 -6662 9295 0
-6568 -6660 9293 0
-6568 -6658 9291 0
-6568 -6656 9289 0
-6568 -6654 9287 0
-6568 -6653 9286 0
c (( - aux399 + aux31 + aux32)<=0)
6636 -9321 0
6637 -9322 0
6639 -9324 0
6641 -9326 0
6643 -9328 0
6645 -9330 0
6647 -9332 0
6649 -9334 0
6651 -9336 0
6619 -9321 0
6619 6636 -9322 0
6619 6637 -9324 0
6619 6639 -9326 0
6619 6641 -9328 0
6619 6643 -9330 0
6619 6645 -9332 0
6619 6647 -9334 0
6619 6649 -9336 0
6619 6651 -9338 0
6620 -9322 0
6620 6636 -9324 0
6620 6637 -9326 0
6620 6639 -9328 0
6620 6641 -9330 0
6620 6643 -9332 0
6620 6645 -9334 0
6620 6647 -9336 0
6620 6649 -9338 0
6620 6651 -9340 0
6622 -9324 0
6622 6636 -9326 0
6622 6637 -9328 0
6622 6639 -9330 0
6622 6641 -9332 0
6622 6643 -9334 0
6622 6645 -9336 0
6622 6647 -9338 0
6622 6649 -9340 0
6622 6651 -9342 0
6624 -9326 0
6624 6636 -9328 0
6624 6637 -9330 0
6624 6639 -9332 0
6624 6641 -9334 0
6624 6643 -9336 0
6624 6645 -9338 0
6624 6647 -9340 0
6624 6649 -9342 0
6624 6651 -9344 0
6626 -9328 0
6626 6636 -9330 0
6626 6637 -9332 0
6626 6639 -9334 0
6626 6641 -9336 0
6626 6643 -9338 0
6626 6645 -9340 0
6626 6647 -9342 0
6626 6649 -9344 0
6626 6651 -9346 0
6628 -9330 0
6628 6636 -9332 0
6628 6637 -9334 0
6628 6639 -9336 0
6628 6641 -9338 0
6628 6643 -9340 0
6628 6645 -9342 0
6628 6647 -9344 0
6628 6649 -9346 0
6628 6651 -9348 0
6630 -9332 0
6630 6636 -9334 0
6630 6637 -9336 0
6630 6639 -9338 0
6630 6641 -9340 0
6630 6643 -9342 0
6630 6645 -9344 0
6630 6647 -9346 0
6630 6649 -9348 0
6630 6651 -9350 0
6632 -9334 0
6632 6636 -9336 0
6632 6637 -9338 0
6632 6639 -9340 0
6632 6641 -9342 0
6632 6643 -9344 0
6632 6645 -9346 0
6632 6647 -9348 0
6632 6649 -9350 0
6632 6651 -9352 0
6634 -9336 0
6634 6636 -9338 0
6634 6637 -9340 0
6634 6639 -9342 0
6634 6641 -9344 0
6634 6643 -9346 0
6634 6645 -9348 0
6634 6647 -9350 0
6634 6649 -9352 0
6634 6651 -9354 0
c (0<=( - aux399 + aux31 + aux32))
-6651 9354 0
-6649 9352 0
-6647 9350 0
-6645 9348 0
-6643 9346 0
-6641 9344 0
-6639 9342 0
-6637 9340 0
-6636 9338 0
-6634 9354 0
-6634 -6651 9352 0
-6634 -6649 9350 0
-6634 -6647 9348 0
-6634 -6645 9346 0
-6634 -6643 9344 0
-6634 -6641 9342 0
-6634 -6639 9340 0
-6634 -6637 9338 0
-6634 -6636 9336 0
-6632 9352 0
-6632 -6651 9350 0
-6632 -6649 9348 0
-6632 -6647 9346 0
-6632 -6645 9344 0
-6632 -6643 9342 0
-6632 -6641 9340 0
-6632 -6639 9338 0
-6632 -6637 9336 0
-6632 -6636 9334 0
-6630 9350 0
-6630 -6651 9348 0
-6630 -6649 9346 0
-6630 -6647 9344 0
-6630 -6645 9342 0
-6630 -6643 9340 0
-6630 -6641 9338 0
-6630 -6639 9336 0
-6630 -6637 9334 0
-6630 -6636 9332 0
-6628 9348 0
-6628 -6651 9346 0
-6628 -6649 9344 0
-6628 -6647 9342 0
-6628 -6645 9340 0
-6628 -6643 9338 0
-6628 -6641 9336 0
-6628 -6639 9334 0
-6628 -6637 9332 0
-6628 -6636 9330 0
-6626 9346 0
-6626 -6651 9344 0
-6626 -6649 9342 0
-6626 -6647 9340 0
-6626 -6645 9338 0
-6626 -6643 9336 0
-6626 -6641 9334 0
-6626 -6639 9332 0
-6626 -6637 9330 0
-6626 -6636 9328 0
-6624 9344 0
-6624 -6651 9342 0
-6624 -6649 9340 0
-6624 -6647 9338 0
-6624 -6645 9336 0
-6624 -6643 9334 0
-6624 -6641 9332 0
-6624 -6639 9330 0
-6624 -6637 9328 0
-6624 -6636 9326 0
-6622 9342 0
-6622 -6651 9340 0
-6622 -6649 9338 0
-6622 -6647 9336 0
-6622 -6645 9334 0
-6622 -6643 9332 0
-6622 -6641 9330 0
-6622 -6639 9328 0
-6622 -6637 9326 0
-6622 -6636 9324 0
-6620 9340 0
-6620 -6651 9338 0
-6620 -6649 9336 0
-6620 -6647 9334 0
-6620 -6645 9332 0
-6620 -6643 9330 0
-6620 -6641 9328 0
-6620 -6639 9326 0
-6620 -6637 9324 0
-6620 -6636 9322 0
-6619 9338 0
-6619 -6651 9336 0
-6619 -6649 9334 0
-6619 -6647 9332 0
-6619 -6645 9330 0
-6619 -6643 9328 0
-6619 -6641 9326 0
-6619 -6639 9324 0
-6619 -6637 9322 0
-6619 -6636 9321 0
c ((aux396 - aux400 + aux29)<=0)
9218 -9356 0
9219 -9357 0
9221 -9359 0
9223 -9361 0
9225 -9363 0
9227 -9365 0
9229 -9367 0
9231 -9369 0
9233 -9371 0
9235 -9373 0
9237 -9375 0
9239 -9377 0
9241 -9379 0
9243 -9381 0
9245 -9383 0
9247 -9385 0
9249 -9387 0
6585 -9356 0
6585 9218 -9357 0
6585 9219 -9359 0
6585 9221 -9361 0
6585 9223 -9363 0
6585 9225 -9365 0
6585 9227 -9367 0
6585 9229 -9369 0
6585 9231 -9371 0
6585 9233 -9373 0
6585 9235 -9375 0
6585 9237 -9377 0
6585 9239 -9379 0
6585 9241 -9381 0
6585 9243 -9383 0
6585 9245 -9385 0
6585 9247 -9387 0
6585 9249 -9389 0
6586 -9357 0
6586 9218 -9359 0
6586 9219 -9361 0
6586 9221 -9363 0
6586 9223 -9365 0
6586 9225 -9367 0
6586 9227 -9369 0
6586 9229 -9371 0
6586 9231 -9373 0
6586 9233 -9375 0
6586 9235 -9377 0
6586 9237 -9379 0
6586 9239 -9381 0
6586 9241 -9383 0
6586 9243 -9385 0
6586 9245 -9387 0
6586 9247 -9389 0
6586 9249 -9391 0
6588 -9359 0
6588 9218 -9361 0
6588 9219 -9363 0
6588 9221 -9365 0
6588 9223 -9367 0
6588 9225 -9369 0
6588 9227 -9371 0
6588 9229 -9373 0
6588 9231 -9375 0
6588 9233 -9377 0
6588 9235 -9379 0
6588 9237 -9381 0
6588 9239 -9383 0
6588 9241 -9385 0
6588 9243 -9387 0
6588 9245 -9389 0
6588 9247 -9391 0
6588 9249 -9393 0
6590 -9361 0
6590 9218 -9363 0
6590 9219 -9365 0
6590 9221 -9367 0
6590 9223 -9369 0
6590 9225 -9371 0
6590 9227 -9373 0
6590 9229 -9375 0
6590 9231 -9377 0
6590 9233 -9379 0
6590 9235 -9381 0
6590 9237 -9383 0
6590 9239 -9385 0
6590 9241 -9387 0
6590 9243 -9389 0
6590 9245 -9391 0
6590 9247 -9393 0
6590 9249 -9395 0
6592 -9363 0
6592 9218 -9365 0
6592 9219 -9367 0
6592 9221 -9369 0
6592 9223 -9371 0
6592 9225 -9373 0
6592 9227 -9375 0
6592 9229 -9377 0
6592 9231 -9379 0
6592 9233 -9381 0
6592 9235 -9383 0
6592 9237 -9385 0
6592 9239 -9387 0
6592 9241 -9389 0
6592 9243 -9391 0
6592 9245 -9393 0
6592 9247 -9395 0
6592 9249 -9397 0
6594 -9365 0
6594 9218 -9367 0
6594 9219 -9369 0
6594 9221 -9371 0
6594 9223 -9373 0
6594 9225 -9375 0
6594 9227 -9377 0
6594 9229 -9379 0
6594 9231 -9381 0
6594 9233 -9383 0
6594 9235 -9385 0
6594 9237 -9387 0
6594 9239 -9389 0
6594 9241 -9391 0
6594 9243 -9393 0
6594 9245 -9395 0
6594 9247 -9397 0
6594 9249 -9399 0
6596 -9367 0
6596 9218 -9369 0
6596 9219 -9371 0
6596 9221 -9373 0
6596 9223 -9375 0
6596 9225 -9377 0
6596 9227 -9379 0
6596 9229 -9381 0
6596 9231 -9383 0
6596 9233 -9385 0
6596 9235 -9387 0
6596 9237 -9389 0
6596 9239 -9391 0
6596 9241 -9393 0
6596 9243 -9395 0
6596 9245 -9397 0
6596 9247 -9399 0
6596 9249 -9401 0
6598 -9369 0
6598 9218 -9371 0
6598 9219 -9373 0
6598 9221 -9375 0
6598 9223 -9377 0
6598 9225 -9379 0
6598 9227 -9381 0
6598 9229 -9383 0
6598 9231 -9385 0
6598 9233 -9387 0
6598 9235 -9389 0
6598 9237 -9391 0
6598 9239 -9393 0
6598 9241 -9395 0
6598 9243 -9397 0
6598 9245 -9399 0
6598 9247 -9401 0
6598 9249 -9403 0
6600 -9371 0
6600 9218 -9373 0
6600 9219 -9375 0
6600 9221 -9377 0
6600 9223 -9379 0
6600 9225 -9381 0
6600 9227 -9383 0
6600 9229 -9385 0
6600 9231 -9387 0
6600 9233 -9389 0
6600 9235 -9391 0
6600 9237 -9393 0
6600 9239 -9395 0
6600 9241 -9397 0
6600 9243 -9399 0
6600 9245 -9401 0
6600 9247 -9403 0
6600 9249 -9405 0
c (0<=(aux396 - aux400 + aux29))
-9249 9405 0
-9247 9403 0
-9245 9401 0
-9243 9399 0
-9241 9397 0
-9239 9395 0
-9237 9393 0
-9235 9391 0
-9233 9389 0
-9231 9387 0
-9229 9385 0
-9227 9383 0
-9225 9381 0
-9223 9379 0
-9221 9377 0
-9219 9375 0
-9218 9373 0
-6600 9405 0
-6600 -9249 9403 0
-6600 -9247 9401 0
-6600 -9245 9399 0
-6600 -9243 9397 0
-6600 -9241 9395 0
-6600 -9239 9393 0
-6600 -9237 9391 0
-6600 -9235 9389 0
-6600 -9233 9387 0
-6600 -9231 9385 0
-6600 -9229 9383 0
-6600 -9227 9381 0
-6600 -9225 9379 0
-6600 -9223 9377 0
-6600 -9221 9375 0
-6600 -9219 9373 0
-6600 -9218 9371 0
-6598 9403 0
-6598 -9249 9401 0
-6598 -9247 9399 0
-6598 -9245 9397 0
-6598 -9243 9395 0
-6598 -9241 9393 0
-6598 -9239 9391 0
-6598 -9237 9389 0
-6598 -9235 9387 0
-6598 -9233 9385 0
-6598 -9231 9383 0
-6598 -9229 9381 0
-6598 -9227 9379 0
-6598 -9225 9377 0
-6598 -9223 9375 0
-6598 -9221 9373 0
-6598 -9219 9371 0
-6598 -9218 9369 0
-6596 9401 0
-6596 -9249 9399 0
-6596 -9247 9397 0
-6596 -9245 9395 0
-6596 -9243 9393 0
-6596 -9241 9391 0
-6596 -9239 9389 0
-6596 -9237 9387 0
-6596 -9235 9385 0
-6596 -9233 9383 0
-6596 -9231 9381 0
-6596 -9229 9379 0
-6596 -9227 9377 0
-6596 -9225 9375 0
-6596 -9223 9373 0
-6596 -9221 9371 0
-6596 -9219 9369 0
-6596 -9218 9367 0
-6594 9399 0
-6594 -9249 9397 0
-6594 -9247 9395 0
-6594 -9245 9393 0
-6594 -9243 9391 0
-6594 -9241 9389 0
-6594 -9239 9387 0
-6594 -9237 9385 0
-6594 -9235 9383 0
-6594 -9233 9381 0
-6594 -9231 9379 0
-6594 -9229 9377 0
-6594 -9227 9375 0
-6594 -9225 9373 0
-6594 -9223 9371 0
-6594 -9221 9369 0
-6594 -9219 9367 0
-6594 -9218 9365 0
-6592 9397 0
-6592 -9249 9395 0
-6592 -9247 9393 0
-6592 -9245 9391 0
-6592 -9243 9389 0
-6592 -9241 9387 0
-6592 -9239 9385 0
-6592 -9237 9383 0
-6592 -9235 9381 0
-6592 -9233 9379 0
-6592 -9231 9377 0
-6592 -9229 9375 0
-6592 -9227 9373 0
-6592 -9225 9371 0
-6592 -9223 9369 0
-6592 -9221 9367 0
-6592 -9219 9365 0
-6592 -9218 9363 0
-6590 9395 0
-6590 -9249 9393 0
-6590 -9247 9391 0
-6590 -9245 9389 0
-6590 -9243 9387 0
-6590 -9241 9385 0
-6590 -9239 9383 0
-6590 -9237 9381 0
-6590 -9235 9379 0
-6590 -9233 9377 0
-6590 -9231 9375 0
-6590 -9229 9373 0
-6590 -9227 9371 0
-6590 -9225 9369 0
-6590 -9223 9367 0
-6590 -9221 9365 0
-6590 -9219 9363 0
-6590 -9218 9361 0
-6588 9393 0
-6588 -9249 9391 0
-6588 -9247 9389 0
-6588 -9245 9387 0
-6588 -9243 9385 0
-6588 -9241 9383 0
-6588 -9239 9381 0
-6588 -9237 9379 0
-6588 -9235 9377 0
-6588 -9233 9375 0
-6588 -9231 9373 0
-6588 -9229 9371 0
-6588 -9227 9369 0
-6588 -9225 9367 0
-6588 -9223 9365 0
-6588 -9221 9363 0
-6588 -9219 9361 0
-6588 -9218 9359 0
-6586 9391 0
-6586 -9249 9389 0
-6586 -9247 9387 0
-6586 -9245 9385 0
-6586 -9243 9383 0
-6586 -9241 9381 0
-6586 -9239 9379 0
-6586 -9237 9377 0
-6586 -9235 9375 0
-6586 -9233 9373 0
-6586 -9231 9371 0
-6586 -9229 9369 0
-6586 -9227 9367 0
-6586 -9225 9365 0
-6586 -9223 9363 0
-6586 -9221 9361 0
-6586 -9219 9359 0
-6586 -9218 9357 0
-6585 9389 0
-6585 -9249 9387 0
-6585 -9247 9385 0
-6585 -9245 9383 0
-6585 -9243 9381 0
-6585 -9241 9379 0
-6585 -9239 9377 0
-6585 -9237 9375 0
-6585 -9235 9373 0
-6585 -9233 9371 0
-6585 -9231 9369 0
-6585 -9229 9367 0
-6585 -9227 9365 0
-6585 -9225 9363 0
-6585 -9223 9361 0
-6585 -9221 9359 0
-6585 -9219 9357 0
-6585 -9218 9356 0
c ((aux398 + aux399 - aux401)<=0)
9321 -9407 0
9322 -9408 0
9324 -9410 0
9326 -9412 0
9328 -9414 0
9330 -9416 0
9332 -9418 0
9334 -9420 0
9336 -9422 0
9338 -9424 0
9340 -9426 0
9342 -9428 0
9344 -9430 0
9346 -9432 0
9348 -9434 0
9350 -9436 0
9352 -9438 0
9354 -9440 0
9286 -9407 0
9286 9321 -9408 0
9286 9322 -9410 0
9286 9324 -9412 0
9286 9326 -9414 0
9286 9328 -9416 0
9286 9330 -9418 0
9286 9332 -9420 0
9286 9334 -9422 0
9286 9336 -9424 0
9286 9338 -9426 0
9286 9340 -9428 0
9286 9342 -9430 0
9286 9344 -9432 0
9286 9346 -9434 0
9286 9348 -9436 0
9286 9350 -9438 0
9286 9352 -9440 0
9286 9354 -9442 0
9287 -9408 0
9287 9321 -9410 0
9287 9322 -9412 0
9287 9324 -9414 0
9287 9326 -9416 0
9287 9328 -9418 0
9287 9330 -9420 0
9287 9332 -9422 0
9287 9334 -9424 0
9287 9336 -9426 0
9287 9338 -9428 0
9287 9340 -9430 0
9287 9342 -9432 0
9287 9344 -9434 0
9287 9346 -9436 0
9287 9348 -9438 0
9287 9350 -9440 0
9287 9352 -9442 0
9287 9354 -9444 0
9289 -9410 0
9289 9321 -9412 0
9289 9322 -9414 0
9289 9324 -9416 0
9289 9326 -9418 0
9289 9328 -9420 0
9289 9330 -9422 0
9289 9332 -9424 0
9289 9334 -9426 0
9289 9336 -9428 0
9289 9338 -9430 0
9289 9340 -9432 0
9289 9342 -9434 0
9289 9344 -9436 0
9289 9346 -9438 0
9289 9348 -9440 0
9289 9350 -9442 0
9289 9352 -9444 0
9289 9354 -9446 0
9291 -9412 0
9291 9321 -9414 0
9291 9322 -9416 0
9291 9324 -9418 0
9291 9326 -9420 0
9291 9328 -9422 0
9291 9330 -9424 0
9291 9332 -9426 0
9291 9334 -9428 0
9291 9336 -9430 0
9291 9338 -9432 0
9291 9340 -9434 0
9291 9342 -9436 0
9291 9344 -9438 0
9291 9346 -9440 0
9291 9348 -9442 0
9291 9350 -9444 0
9291 9352 -9446 0
9291 9354 -9448 0
9293 -9414 0
9293 9321 -9416 0
9293 9322 -9418 0
9293 9324 -9420 0
9293 9326 -9422 0
9293 9328 -9424 0
9293 9330 -9426 0
9293 9332 -9428 0
9293 9334 -9430 0
9293 9336 -9432 0
9293 9338 -9434 0
9293 9340 -9436 0
9293 9342 -9438 0
9293 9344 -9440 0
9293 9346 -9442 0
9293 9348 -9444 0
9293 9350 -9446 0
9293 9352 -9448 0
9293 9354 -9450 0
9295 -9416 0
9295 9321 -9418 0
9295 9322 -9420 0
9295 9324 -9422 0
9295 9326 -9424 0
9295 9328 -9426 0
9295 9330 -9428 0
9295 9332 -9430 0
9295 9334 -9432 0
9295 9336 -9434 0
9295 9338 -9436 0
9295 9340 -9438 0
9295 9342 -9440 0
9295 9344 -9442 0
9295 9346 -9444 0
9295 9348 -9446 0
9295 9350 -9448 0
9295 9352 -9450 0
9295 9354 -9452 0
9297 -9418 0
9297 9321 -9420 0
9297 9322 -9422 0
9297 9324 -9424 0
9297 9326 -9426 0
9297 9328 -9428 0
9297 9330 -9430 0
9297 9332 -9432 0
9297 9334 -9434 0
9297 9336 -9436 0
9297 9338 -9438 0
9297 9340 -9440 0
9297 9342 -9442 0
9297 9344 -9444 0
9297 9346 -9446 0
9297 9348 -9448 0
9297 9350 -9450 0
9297 9352 -9452 0
9297 9354 -9454 0
9299 -9420 0
9299 9321 -9422 0
9299 9322 -9424 0
9299 9324 -9426 0
9299 9326 -9428 0
9299 9328 -9430 0
9299 9330 -9432 0
9299 9332 -9434 0
9299 9334 -9436 0
9299 9336 -9438 0
9299 9338 -9440 0
9299 9340 -9442 0
9299 9342 -9444 0
9299 9344 -9446 0
9299 9346 -9448 0
9299 9348 -9450 0
9299 9350 -9452 0
9299 9352 -9454 0
9299 9354 -9456 0
9301 -9422 0
9301 9321 -9424 0
9301 9322 -9426 0
9301 9324 -9428 0
9301 9326 -9430 0
9301 9328 -9432 0
9301 9330 -9434 0
9301 9332 -9436 0
9301 9334 -9438 0
9301 9336 -9440 0
9301 9338 -9442 0
9301 9340 -9444 0
9301 9342 -9446 0
9301 9344 -9448 0
9301 9346 -9450 0
9301 9348 -9452 0
9301 9350 -9454 0
9301 9352 -9456 0
9301 9354 -9458 0
9303 -9424 0
9303 9321 -9426 0
9303 9322 -9428 0
9303 9324 -9430 0
9303 9326 -9432 0
9303 9328 -9434 0
9303 9330 -9436 0
9303 9332 -9438 0
9303 9334 -9440 0
9303 9336 -9442 0
9303 9338 -9444 0
9303 9340 -9446 0
9303 9342 -9448 0
9303 9344 -9450 0
9303 9346 -9452 0
9303 9348 -9454 0
9303 9350 -9456 0
9303 9352 -9458 0
9303 9354 -9460 0
9305 -9426 0
9305 9321 -9428 0
9305 9322 -9430 0
9305 9324 -9432 0
9305 9326 -9434 0
9305 9328 -9436 0
9305 9330 -9438 0
9305 9332 -9440 0
9305 9334 -9442 0
9305 9336 -9444 0
9305 9338 -9446 0
9305 9340 -9448 0
9305 9342 -9450 0
9305 9344 -9452 0
9305 9346 -9454 0
9305 9348 -9456 0
9305 9350 -9458 0
9305 9352 -9460 0
9305 9354 -9462 0
9307 -9428 0
9307 9321 -9430 0
9307 9322 -9432 0
9307 9324 -9434 0
9307 9326 -9436 0
9307 9328 -9438 0
9307 9330 -9440 0
9307 9332 -9442 0
9307 9334 -9444 0
9307 9336 -9446 0
9307 9338 -9448 0
9307 9340 -9450 0
9307 9342 -9452 0
9307 9344 -9454 0
9307 9346 -9456 0
9307 9348 -9458 0
9307 9350 -9460 0
9307 9352 -9462 0
9307 9354 -9464 0
9309 -9430 0
9309 9321 -9432 0
9309 9322 -9434 0
9309 9324 -9436 0
9309 9326 -9438 0
9309 9328 -9440 0
9309 9330 -9442 0
9309 9332 -9444 0
9309 9334 -9446 0
9309 9336 -9448 0
9309 9338 -9450 0
9309 9340 -9452 0
9309 9342 -9454 0
9309 9344 -9456 0
9309 9346 -9458 0
9309 9348 -9460 0
9309 9350 -9462 0
9309 9352 -9464 0
9309 9354 -9466 0
9311 -9432 0
9311 9321 -9434 0
9311 9322 -9436 0
9311 9324 -9438 0
9311 9326 -9440 0
9311 9328 -9442 0
9311 9330 -9444 0
9311 9332 -9446 0
9311 9334 -9448 0
9311 9336 -9450 0
9311 9338 -9452 0
9311 9340 -9454 0
9311 9342 -9456 0
9311 9344 -9458 0
9311 9346 -9460 0
9311 9348 -9462 0
9311 9350 -9464 0
9311 9352 -9466 0
9311 9354 -9468 0
9313 -9434 0
9313 9321 -9436 0
9313 9322 -9438 0
9313 9324 -9440 0
9313 9326 -9442 0
9313 9328 -9444 0
9313 9330 -9446 0
9313 9332 -9448 0
9313 9334 -9450 0
9313 9336 -9452 0
9313 9338 -9454 0
9313 9340 -9456 0
9313 9342 -9458 0
9313 9344 -9460 0
9313 9346 -9462 0
9313 9348 -9464 0
9313 9350 -9466 0
9313 9352 -9468 0
9313 9354 -9470 0
9315 -9436 0
9315 9321 -9438 0
9315 9322 -9440 0
9315 9324 -9442 0
9315 9326 -9444 0
9315 9328 -9446 0
9315 9330 -9448 0
9315 9332 -9450 0
9315 9334 -9452 0
9315 9336 -9454 0
9315 9338 -9456 0
9315 9340 -9458 0
9315 9342 -9460 0
9315 9344 -9462 0
9315 9346 -9464 0
9315 9348 -9466 0
9315 9350 -9468 0
9315 9352 -9470 0
9315 9354 -9472 0
9317 -9438 0
9317 9321 -9440 0
9317 9322 -9442 0
9317 9324 -9444 0
9317 9326 -9446 0
9317 9328 -9448 0
9317 9330 -9450 0
9317 9332 -9452 0
9317 9334 -9454 0
9317 9336 -9456 0
9317 9338 -9458 0
9317 9340 -9460 0
9317 9342 -9462 0
9317 9344 -9464 0
9317 9346 -9466 0
9317 9348 -9468 0
9317 9350 -9470 0
9317 9352 -9472 0
9317 9354 -9474 0
9319 -9440 0
9319 9321 -9442 0
9319 9322 -9444 0
9319 9324 -9446 0
9319 9326 -9448 0
9319 9328 -9450 0
9319 9330 -9452 0
9319 9332 -9454 0
9319 9334 -9456 0
9319 9336 -9458 0
9319 9338 -9460 0
9319 9340 -9462 0
9319 9342 -9464 0
9319 9344 -9466 0
9319 9346 -9468 0
9319 9348 -9470 0
9319 9350 -9472 0
9319 9352 -9474 0
9319 9354 -9476 0
c (0<=(aux398 + aux399 - aux401))
-9354 9476 0
-9352 9474 0
-9350 9472 0
-9348 9470 0
-9346 9468 0
-9344 9466 0
-9342 9464 0
-9340 9462 0
-9338 9460 0
-9336 9458 0
-9334 9456 0
-9332 9454 0
-9330 9452 0
-9328 9450 0
-9326 9448 0
-9324 9446 0
-9322 9444 0
-9321 9442 0
-9319 9476 0
-9319 -9354 9474 0
-9319 -9352 9472 0
-9319 -9350 9470 0
-9319 -9348 9468 0
-9319 -9346 9466 0
-9319 -9344 9464 0
-9319 -9342 9462 0
-9319 -9340 9460 0
-9319 -9338 9458 0
-9319 -9336 9456 0
-9319 -9334 9454 0
-9319 -9332 9452 0
-9319 -9330 9450 0
-9319 -9328 9448 0
-9319 -9326 9446 0
-9319 -9324 9444 0
-9319 -9322 9442 0
-9319 -9321 9440 0
-9317 9474 0
-9317 -9354 9472 0
-9317 -9352 9470 0
-9317 -9350 9468 0
-9317 -9348 9466 0
-9317 -9346 9464 0
-9317 -9344 9462 0
-9317 -9342 9460 0
-9317 -9340 9458 0
-9317 -9338 9456 0
-9317 -9336 9454 0
-9317 -9334 9452 0
-9317 -9332 9450 0
-9317 -9330 9448 0
-9317 -9328 9446 0
-9317 -9326 9444 0
-9317 -9324 9442 0
-9317 -9322 9440 0
-9317 -9321 9438 0
-9315 9472 0
-9315 -9354 9470 0
-9315 -9352 9468 0
-9315 -9350 9466 0
-9315 -9348 9464 0
-9315 -9346 9462 0
-9315 -9344 9460 0
-9315 -9342 9458 0
-9315 -9340 9456 0
-9315 -9338 9454 0
-9315 -9336 9452 0
-9315 -9334 9450 0
-9315 -9332 9448 0
-9315 -9330 9446 0
-9315 -9328 9444 0
-9315 -9326 9442 0
-9315 -9324 9440 0
-9315 -9322 9438 0
-9315 -9321 9436 0
-9313 9470 0
-9313 -9354 9468 0
-9313 -9352 9466 0
-9313 -9350 9464 0
-9313 -9348 9462 0
-9313 -9346 9460 0
-9313 -9344 9458 0
-9313 -9342 9456 0
-9313 -9340 9454 0
-9313 -9338 9452 0
-9313 -9336 9450 0
-9313 -9334 9448 0
-9313 -9332 9446 0
-9313 -9330 9444 0
-9313 -9328 9442 0
-9313 -9326 9440 0
-9313 -9324 9438 0
-9313 -9322 9436 0
-9313 -9321 9434 0
-9311 9468 0
-9311 -9354 9466 0
-9311 -9352 9464 0
-9311 -9350 9462 0
-9311 -9348 9460 0
-9311 -9346 9458 0
-9311 -9344 9456 0
-9311 -9342 9454 0
-9311 -9340 9452 0
-9311 -9338 9450 0
-9311 -9336 9448 0
-9311 -9334 9446 0
-9311 -9332 9444 0
-9311 -9330 9442 0
-9311 -9328 9440 0
-9311 -9326 9438 0
-9311 -9324 9436 0
-9311 -9322 9434 0
-9311 -9321 9432 0
-9309 9466 0
-9309 -9354 9464 0
-9309 -9352 9462 0
-9309 -9350 9460 0
-9309 -9348 9458 0
-9309 -9346 9456 0
-9309 -9344 9454 0
-9309 -9342 9452 0
-9309 -9340 9450 0
-9309 -9338 9448 0
-9309 -9336 9446 0
-9309 -9334 9444 0
-9309 -9332 9442 0
-9309 -9330 9440 0
-9309 -9328 9438 0
-9309 -9326 9436 0
-9309 -9324 9434 0
-9309 -9322 9432 0
-9309 -9321 9430 0
-9307 9464 0
-9307 -9354 9462 0
-9307 -9352 9460 0
-9307 -9350 9458 0
-9307 -9348 9456 0
-9307 -9346 9454 0
-9307 -9344 9452 0
-9307 -9342 9450 0
-9307 -9340 9448 0
-9307 -9338 9446 0
-9307 -9336 9444 0
-9307 -9334 9442 0
-9307 -9332 9440 0
-9307 -9330 9438 0
-9307 -9328 9436 0
-9307 -9326 9434 0
-9307 -9324 9432 0
-9307 -9322 9430 0
-9307 -9321 9428 0
-9305 9462 0
-9305 -9354 9460 0
-9305 -9352 9458 0
-9305 -9350 9456 0
-9305 -9348 9454 0
-9305 -9346 9452 0
-9305 -9344 9450 0
-9305 -9342 9448 0
-9305 -9340 9446 0
-9305 -9338 9444 0
-9305 -9336 9442 0
-9305 -9334 9440 0
-9305 -9332 9438 0
-9305 -9330 9436 0
-9305 -9328 9434 0
-9305 -9326 9432 0
-9305 -9324 9430 0
-9305 -9322 9428 0
-9305 -9321 9426 0
-9303 9460 0
-9303 -9354 9458 0
-9303 -9352 9456 0
-9303 -9350 9454 0
-9303 -9348 9452 0
-9303 -9346 9450 0
-9303 -9344 9448 0
-9303 -9342 9446 0
-9303 -9340 9444 0
-9303 -9338 9442 0
-9303 -9336 9440 0
-9303 -9334 9438 0
-9303 -9332 9436 0
-9303 -9330 9434 0
-9303 -9328 9432 0
-9303 -9326 9430 0
-9303 -9324 9428 0
-9303 -9322 9426 0
-9303 -9321 9424 0
-9301 9458 0
-9301 -9354 9456 0
-9301 -9352 9454 0
-9301 -9350 9452 0
-9301 -9348 9450 0
-9301 -9346 9448 0
-9301 -9344 9446 0
-9301 -9342 9444 0
-9301 -9340 9442 0
-9301 -9338 9440 0
-9301 -9336 9438 0
-9301 -9334 9436 0
-9301 -9332 9434 0
-9301 -9330 9432 0
-9301 -9328 9430 0
-9301 -9326 9428 0
-9301 -9324 9426 0
-9301 -9322 9424 0
-9301 -9321 9422 0
-9299 9456 0
-9299 -9354 9454 0
-9299 -9352 9452 0
-9299 -9350 9450 0
-9299 -9348 9448 0
-9299 -9346 9446 0
-9299 -9344 9444 0
-9299 -9342 9442 0
-9299 -9340 9440 0
-9299 -9338 9438 0
-9299 -9336 9436 0
-9299 -9334 9434 0
-9299 -9332 9432 0
-9299 -9330 9430 0
-9299 -9328 9428 0
-9299 -9326 9426 0
-9299 -9324 9424 0
-9299 -9322 9422 0
-9299 -9321 9420 0
-9297 9454 0
-9297 -9354 9452 0
-9297 -9352 9450 0
-9297 -9350 9448 0
-9297 -9348 9446 0
-9297 -9346 9444 0
-9297 -9344 9442 0
-9297 -9342 9440 0
-9297 -9340 9438 0
-9297 -9338 9436 0
-9297 -9336 9434 0
-9297 -9334 9432 0
-9297 -9332 9430 0
-9297 -9330 9428 0
-9297 -9328 9426 0
-9297 -9326 9424 0
-9297 -9324 9422 0
-9297 -9322 9420 0
-9297 -9321 9418 0
-9295 9452 0
-9295 -9354 9450 0
-9295 -9352 9448 0
-9295 -9350 9446 0
-9295 -9348 9444 0
-9295 -9346 9442 0
-9295 -9344 9440 0
-9295 -9342 9438 0
-9295 -9340 9436 0
-9295 -9338 9434 0
-9295 -9336 9432 0
-9295 -9334 9430 0
-9295 -9332 9428 0
-9295 -9330 9426 0
-9295 -9328 9424 0
-9295 -9326 9422 0
-9295 -9324 9420 0
-9295 -9322 9418 0
-9295 -9321 9416 0
-9293 9450 0
-9293 -9354 9448 0
-9293 -9352 9446 0
-9293 -9350 9444 0
-9293 -9348 9442 0
-9293 -9346 9440 0
-9293 -9344 9438 0
-9293 -9342 9436 0
-9293 -9340 9434 0
-9293 -9338 9432 0
-9293 -9336 9430 0
-9293 -9334 9428 0
-9293 -9332 9426 0
-9293 -9330 9424 0
-9293 -9328 9422 0
-9293 -9326 9420 0
-9293 -9324 9418 0
-9293 -9322 9416 0
-9293 -9321 9414 0
-9291 9448 0
-9291 -9354 9446 0
-9291 -9352 9444 0
-9291 -9350 9442 0
-9291 -9348 9440 0
-9291 -9346 9438 0
-9291 -9344 9436 0
-9291 -9342 9434 0
-9291 -9340 9432 0
-9291 -9338 9430 0
-9291 -9336 9428 0
-9291 -9334 9426 0
-9291 -9332 9424 0
-9291 -9330 9422 0
-9291 -9328 9420 0
-9291 -9326 9418 0
-9291 -9324 9416 0
-9291 -9322 9414 0
-9291 -9321 9412 0
-9289 9446 0
-9289 -9354 9444 0
-9289 -9352 9442 0
-9289 -9350 9440 0
-9289 -9348 9438 0
-9289 -9346 9436 0
-9289 -9344 9434 0
-9289 -9342 9432 0
-9289 -9340 9430 0
-9289 -9338 9428 0
-9289 -9336 9426 0
-9289 -9334 9424 0
-9289 -9332 9422 0
-9289 -9330 9420 0
-9289 -9328 9418 0
-9289 -9326 9416 0
-9289 -9324 9414 0
-9289 -9322 9412 0
-9289 -9321 9410 0
-9287 9444 0
-9287 -9354 9442 0
-9287 -9352 9440 0
-9287 -9350 9438 0
-9287 -9348 9436 0
-9287 -9346 9434 0
-9287 -9344 9432 0
-9287 -9342 9430 0
-9287 -9340 9428 0
-9287 -9338 9426 0
-9287 -9336 9424 0
-9287 -9334 9422 0
-9287 -9332 9420 0
-9287 -9330 9418 0
-9287 -9328 9416 0
-9287 -9326 9414 0
-9287 -9324 9412 0
-9287 -9322 9410 0
-9287 -9321 9408 0
-9286 9442 0
-9286 -9354 9440 0
-9286 -9352 9438 0
-9286 -9350 9436 0
-9286 -9348 9434 0
-9286 -9346 9432 0
-9286 -9344 9430 0
-9286 -9342 9428 0
-9286 -9340 9426 0
-9286 -9338 9424 0
-9286 -9336 9422 0
-9286 -9334 9420 0
-9286 -9332 9418 0
-9286 -9330 9416 0
-9286 -9328 9414 0
-9286 -9326 9412 0
-9286 -9324 9410 0
-9286 -9322 9408 0
-9286 -9321 9407 0
c (( - aux402 + aux43 + shift(variant_fields_00002_00002_00001, -1))<=0)
6807 -9478 0
6808 -9479 0
6810 -9481 0
6812 -9483 0
6814 -9485 0
6816 -9487 0
6818 -9489 0
6820 -9491 0
6822 -9493 0
2567 -9478 0
2567 6807 -9479 0
2567 6808 -9481 0
2567 6810 -9483 0
2567 6812 -9485 0
2567 6814 -9487 0
2567 6816 -9489 0
2567 6818 -9491 0
2567 6820 -9493 0
2567 6822 -9495 0
2568 -9479 0
2568 6807 -9481 0
2568 6808 -9483 0
2568 6810 -9485 0
2568 6812 -9487 0
2568 6814 -9489 0
2568 6816 -9491 0
2568 6818 -9493 0
2568 6820 -9495 0
2568 6822 -9497 0
2570 -9481 0
2570 6807 -9483 0
2570 6808 -9485 0
2570 6810 -9487 0
2570 6812 -9489 0
2570 6814 -9491 0
2570 6816 -9493 0
2570 6818 -9495 0
2570 6820 -9497 0
2570 6822 -9499 0
2572 -9483 0
2572 6807 -9485 0
2572 6808 -9487 0
2572 6810 -9489 0
2572 6812 -9491 0
2572 6814 -9493 0
2572 6816 -9495 0
2572 6818 -9497 0
2572 6820 -9499 0
2572 6822 -9501 0
2574 -9485 0
2574 6807 -9487 0
2574 6808 -9489 0
2574 6810 -9491 0
2574 6812 -9493 0
2574 6814 -9495 0
2574 6816 -9497 0
2574 6818 -9499 0
2574 6820 -9501 0
2574 6822 -9503 0
2576 -9487 0
2576 6807 -9489 0
2576 6808 -9491 0
2576 6810 -9493 0
2576 6812 -9495 0
2576 6814 -9497 0
2576 6816 -9499 0
2576 6818 -9501 0
2576 6820 -9503 0
2576 6822 -9505 0
2578 -9489 0
2578 6807 -9491 0
2578 6808 -9493 0
2578 6810 -9495 0
2578 6812 -9497 0
2578 6814 -9499 0
2578 6816 -9501 0
2578 6818 -9503 0
2578 6820 -9505 0
2578 6822 -9507 0
2580 -9491 0
2580 6807 -9493 0
2580 6808 -9495 0
2580 6810 -9497 0
2580 6812 -9499 0
2580 6814 -9501 0
2580 6816 -9503 0
2580 6818 -9505 0
2580 6820 -9507 0
2580 6822 -9509 0
c (0<=( - aux402 + aux43 + shift(variant_fields_00002_00002_00001, -1)))
-6822 9509 0
-6820 9507 0
-6818 9505 0
-6816 9503 0
-6814 9501 0
-6812 9499 0
-6810 9497 0
-6808 9495 0
-6807 9493 0
-2580 9509 0
-2580 -6822 9507 0
-2580 -6820 9505 0
-2580 -6818 9503 0
-2580 -6816 9501 0
-2580 -6814 9499 0
-2580 -6812 9497 0
-2580 -6810 9495 0
-2580 -6808 9493 0
-2580 -6807 9491 0
-2578 9507 0
-2578 -6822 9505 0
-2578 -6820 9503 0
-2578 -6818 9501 0
-2578 -6816 9499 0
-2578 -6814 9497 0
-2578 -6812 9495 0
-2578 -6810 9493 0
-2578 -6808 9491 0
-2578 -6807 9489 0
-2576 9505 0
-2576 -6822 9503 0
-2576 -6820 9501 0
-2576 -6818 9499 0
-2576 -6816 9497 0
-2576 -6814 9495 0
-2576 -6812 9493 0
-2576 -6810 9491 0
-2576 -6808 9489 0
-2576 -6807 9487 0
-2574 9503 0
-2574 -6822 9501 0
-2574 -6820 9499 0
-2574 -6818 9497 0
-2574 -6816 9495 0
-2574 -6814 9493 0
-2574 -6812 9491 0
-2574 -6810 9489 0
-2574 -6808 9487 0
-2574 -6807 9485 0
-2572 9501 0
-2572 -6822 9499 0
-2572 -6820 9497 0
-2572 -6818 9495 0
-2572 -6816 9493 0
-2572 -6814 9491 0
-2572 -6812 9489 0
-2572 -6810 9487 0
-2572 -6808 9485 0
-2572 -6807 9483 0
-2570 9499 0
-2570 -6822 9497 0
-2570 -6820 9495 0
-2570 -6818 9493 0
-2570 -6816 9491 0
-2570 -6814 9489 0
-2570 -6812 9487 0
-2570 -6810 9485 0
-2570 -6808 9483 0
-2570 -6807 9481 0
-2568 9497 0
-2568 -6822 9495 0
-2568 -6820 9493 0
-2568 -6818 9491 0
-2568 -6816 9489 0
-2568 -6814 9487 0
-2568 -6812 9485 0
-2568 -6810 9483 0
-2568 -6808 9481 0
-2568 -6807 9479 0
-2567 9495 0
-2567 -6822 9493 0
-2567 -6820 9491 0
-2567 -6818 9489 0
-2567 -6816 9487 0
-2567 -6814 9485 0
-2567 -6812 9483 0
-2567 -6810 9481 0
-2567 -6808 9479 0
-2567 -6807 9478 0
c (( - aux403 + aux36 + aux42)<=0)
6790 -9511 0
6791 -9512 0
6793 -9514 0
6795 -9516 0
6797 -9518 0
6799 -9520 0
6801 -9522 0
6803 -9524 0
6805 -9526 0
6688 -9511 0
6688 6790 -9512 0
6688 6791 -9514 0
6688 6793 -9516 0
6688 6795 -9518 0
6688 6797 -9520 0
6688 6799 -9522 0
6688 6801 -9524 0
6688 6803 -9526 0
6688 6805 -9528 0
6689 -9512 0
6689 6790 -9514 0
6689 6791 -9516 0
6689 6793 -9518 0
6689 6795 -9520 0
6689 6797 -9522 0
6689 6799 -9524 0
6689 6801 -9526 0
6689 6803 -9528 0
6689 6805 -9530 0
6691 -9514 0
6691 6790 -9516 0
6691 6791 -9518 0
6691 6793 -9520 0
6691 6795 -9522 0
6691 6797 -9524 0
6691 6799 -9526 0
6691 6801 -9528 0
6691 6803 -9530 0
6691 6805 -9532 0
6693 -9516 0
6693 6790 -9518 0
6693 6791 -9520 0
6693 6793 -9522 0
6693 6795 -9524 0
6693 6797 -9526 0
6693 6799 -9528 0
6693 6801 -9530 0
6693 6803 -9532 0
6693 6805 -9534 0
6695 -9518 0
6695 6790 -9520 0
6695 6791 -9522 0
6695 6793 -9524 0
6695 6795 -9526 0
6695 6797 -9528 0
6695 6799 -9530 0
6695 6801 -9532 0
6695 6803 -9534 0
6695 6805 -9536 0
6697 -9520 0
6697 6790 -9522 0
6697 6791 -9524 0
6697 6793 -9526 0
6697 6795 -9528 0
6697 6797 -9530 0
6697 6799 -9532 0
6697 6801 -9534 0
6697 6803 -9536 0
6697 6805 -9538 0
6699 -9522 0
6699 6790 -9524 0
6699 6791 -9526 0
6699 6793 -9528 0
6699 6795 -9530 0
6699 6797 -9532 0
6699 6799 -9534 0
6699 6801 -9536 0
6699 6803 -9538 0
6699 6805 -9540 0
6701 -9524 0
6701 6790 -9526 0
6701 6791 -9528 0
6701 6793 -9530 0
6701 6795 -9532 0
6701 6797 -9534 0
6701 6799 -9536 0
6701 6801 -9538 0
6701 6803 -9540 0
6701 6805 -9542 0
6703 -9526 0
6703 6790 -9528 0
6703 6791 -9530 0
6703 6793 -9532 0
6703 6795 -9534 0
6703 6797 -9536 0
6703 6799 -9538 0
6703 6801 -9540 0
6703 6803 -9542 0
6703 6805 -9544 0
c (0<=( - aux403 + aux36 + aux42))
-6805 9544 0
-6803 9542 0
-6801 9540 0
-6799 9538 0
-6797 9536 0
-6795 9534 0
-6793 9532 0
-6791 9530 0
-6790 9528 0
-6703 9544 0
-6703 -6805 9542 0
-6703 -6803 9540 0
-6703 -6801 9538 0
-6703 -6799 9536 0
-6703 -6797 9534 0
-6703 -6795 9532 0
-6703 -6793 9530 0
-6703 -6791 9528 0
-6703 -6790 9526 0
-6701 9542 0
-6701 -6805 9540 0
-6701 -6803 9538 0
-6701 -6801 9536 0
-6701 -6799 9534 0
-6701 -6797 9532 0
-6701 -6795 9530 0
-6701 -6793 9528 0
-6701 -6791 9526 0
-6701 -6790 9524 0
-6699 9540 0
-6699 -6805 9538 0
-6699 -6803 9536 0
-6699 -6801 9534 0
-6699 -6799 9532 0
-6699 -6797 9530 0
-6699 -6795 9528 0
-6699 -6793 9526 0
-6699 -6791 9524 0
-6699 -6790 9522 0
-6697 9538 0
-6697 -6805 9536 0
-6697 -6803 9534 0
-6697 -6801 9532 0
-6697 -6799 9530 0
-6697 -6797 9528 0
-6697 -6795 9526 0
-6697 -6793 9524 0
-6697 -6791 9522 0
-6697 -6790 9520 0
-6695 9536 0
-6695 -6805 9534 0
-6695 -6803 9532 0
-6695 -6801 9530 0
-6695 -6799 9528 0
-6695 -6797 9526 0
-6695 -6795 9524 0
-6695 -6793 9522 0
-6695 -6791 9520 0
-6695 -6790 9518 0
-6693 9534 0
-6693 -6805 9532 0
-6693 -6803 9530 0
-6693 -6801 9528 0
-6693 -6799 9526 0
-6693 -6797 9524 0
-6693 -6795 9522 0
-6693 -6793 9520 0
-6693 -6791 9518 0
-6693 -6790 9516 0
-6691 9532 0
-6691 -6805 9530 0
-6691 -6803 9528 0
-6691 -6801 9526 0
-6691 -6799 9524 0
-6691 -6797 9522 0
-6691 -6795 9520 0
-6691 -6793 9518 0
-6691 -6791 9516 0
-6691 -6790 9514 0
-6689 9530 0
-6689 -6805 9528 0
-6689 -6803 9526 0
-6689 -6801 9524 0
-6689 -6799 9522 0
-6689 -6797 9520 0
-6689 -6795 9518 0
-6689 -6793 9516 0
-6689 -6791 9514 0
-6689 -6790 9512 0
-6688 9528 0
-6688 -6805 9526 0
-6688 -6803 9524 0
-6688 -6801 9522 0
-6688 -6799 9520 0
-6688 -6797 9518 0
-6688 -6795 9516 0
-6688 -6793 9514 0
-6688 -6791 9512 0
-6688 -6790 9511 0
c (( - aux404 + aux38 + aux41)<=0)
6773 -9546 0
6774 -9547 0
6776 -9549 0
6778 -9551 0
6780 -9553 0
6782 -9555 0
6784 -9557 0
6786 -9559 0
6788 -9561 0
6722 -9546 0
6722 6773 -9547 0
6722 6774 -9549 0
6722 6776 -9551 0
6722 6778 -9553 0
6722 6780 -9555 0
6722 6782 -9557 0
6722 6784 -9559 0
6722 6786 -9561 0
6722 6788 -9563 0
6723 -9547 0
6723 6773 -9549 0
6723 6774 -9551 0
6723 6776 -9553 0
6723 6778 -9555 0
6723 6780 -9557 0
6723 6782 -9559 0
6723 6784 -9561 0
6723 6786 -9563 0
6723 6788 -9565 0
6725 -9549 0
6725 6773 -9551 0
6725 6774 -9553 0
6725 6776 -9555 0
6725 6778 -9557 0
6725 6780 -9559 0
6725 6782 -9561 0
6725 6784 -9563 0
6725 6786 -9565 0
6725 6788 -9567 0
6727 -9551 0
6727 6773 -9553 0
6727 6774 -9555 0
6727 6776 -9557 0
6727 6778 -9559 0
6727 6780 -9561 0
6727 6782 -9563 0
6727 6784 -9565 0
6727 6786 -9567 0
6727 6788 -9569 0
6729 -9553 0
6729 6773 -9555 0
6729 6774 -9557 0
6729 6776 -9559 0
6729 6778 -9561 0
6729 6780 -9563 0
6729 6782 -9565 0
6729 6784 -9567 0
6729 6786 -9569 0
6729 6788 -9571 0
6731 -9555 0
6731 6773 -9557 0
6731 6774 -9559 0
6731 6776 -9561 0
6731 6778 -9563 0
6731 6780 -9565 0
6731 6782 -9567 0
6731 6784 -9569 0
6731 6786 -9571 0
6731 6788 -9573 0
6733 -9557 0
6733 6773 -9559 0
6733 6774 -9561 0
6733 6776 -9563 0
6733 6778 -9565 0
6733 6780 -9567 0
6733 6782 -9569 0
6733 6784 -9571 0
6733 6786 -9573 0
6733 6788 -9575 0
6735 -9559 0
6735 6773 -9561 0
6735 6774 -9563 0
6735 6776 -9565 0
6735 6778 -9567 0
6735 6780 -9569 0
6735 6782 -9571 0
6735 6784 -9573 0
6735 6786 -9575 0
6735 6788 -9577 0
6737 -9561 0
6737 6773 -9563 0
6737 6774 -9565 0
6737 6776 -9567 0
6737 6778 -9569 0
6737 6780 -9571 0
6737 6782 -9573 0
6737 6784 -9575 0
6737 6786 -9577 0
6737 6788 -9579 0
c (0<=( - aux404 + aux38 + aux41))
-6788 9579 0
-6786 9577 0
-6784 9575 0
-6782 9573 0
-6780 9571 0
-6778 9569 0
-6776 9567 0
-6774 9565 0
-6773 9563 0
-6737 9579 0
-6737 -6788 9577 0
-6737 -6786 9575 0
-6737 -6784 9573 0
-6737 -6782 9571 0
-6737 -6780 9569 0
-6737 -6778 9567 0
-6737 -6776 9565 0
-6737 -6774 9563 0
-6737 -6773 9561 0
-6735 9577 0
-6735 -6788 9575 0
-6735 -6786 9573 0
-6735 -6784 9571 0
-6735 -6782 9569 0
-6735 -6780 9567 0
-6735 -6778 9565 0
-6735 -6776 9563 0
-6735 -6774 9561 0
-6735 -6773 9559 0
-6733 9575 0
-6733 -6788 9573 0
-6733 -6786 9571 0
-6733 -6784 9569 0
-6733 -6782 9567 0
-6733 -6780 9565 0
-6733 -6778 9563 0
-6733 -6776 9561 0
-6733 -6774 9559 0
-6733 -6773 9557 0
-6731 9573 0
-6731 -6788 9571 0
-6731 -6786 9569 0
-6731 -6784 9567 0
-6731 -6782 9565 0
-6731 -6780 9563 0
-6731 -6778 9561 0
-6731 -6776 9559 0
-6731 -6774 9557 0
-6731 -6773 9555 0
-6729 9571 0
-6729 -6788 9569 0
-6729 -6786 9567 0
-6729 -6784 9565 0
-6729 -6782 9563 0
-6729 -6780 9561 0
-6729 -6778 9559 0
-6729 -6776 9557 0
-6729 -6774 9555 0
-6729 -6773 9553 0
-6727 9569 0
-6727 -6788 9567 0
-6727 -6786 9565 0
-6727 -6784 9563 0
-6727 -6782 9561 0
-6727 -6780 9559 0
-6727 -6778 9557 0
-6727 -6776 9555 0
-6727 -6774 9553 0
-6727 -6773 9551 0
-6725 9567 0
-6725 -6788 9565 0
-6725 -6786 9563 0
-6725 -6784 9561 0
-6725 -6782 9559 0
-6725 -6780 9557 0
-6725 -6778 9555 0
-6725 -6776 9553 0
-6725 -6774 9551 0
-6725 -6773 9549 0
-6723 9565 0
-6723 -6788 9563 0
-6723 -6786 9561 0
-6723 -6784 9559 0
-6723 -6782 9557 0
-6723 -6780 9555 0
-6723 -6778 9553 0
-6723 -6776 9551 0
-6723 -6774 9549 0
-6723 -6773 9547 0
-6722 9563 0
-6722 -6788 9561 0
-6722 -6786 9559 0
-6722 -6784 9557 0
-6722 -6782 9555 0
-6722 -6780 9553 0
-6722 -6778 9551 0
-6722 -6776 9549 0
-6722 -6774 9547 0
-6722 -6773 9546 0
c (( - aux405 + aux39 + aux40)<=0)
6756 -9581 0
6757 -9582 0
6759 -9584 0
6761 -9586 0
6763 -9588 0
6765 -9590 0
6767 -9592 0
6769 -9594 0
6771 -9596 0
6739 -9581 0
6739 6756 -9582 0
6739 6757 -9584 0
6739 6759 -9586 0
6739 6761 -9588 0
6739 6763 -9590 0
6739 6765 -9592 0
6739 6767 -9594 0
6739 6769 -9596 0
6739 6771 -9598 0
6740 -9582 0
6740 6756 -9584 0
6740 6757 -9586 0
6740 6759 -9588 0
6740 6761 -9590 0
6740 6763 -9592 0
6740 6765 -9594 0
6740 6767 -9596 0
6740 6769 -9598 0
6740 6771 -9600 0
6742 -9584 0
6742 6756 -9586 0
6742 6757 -9588 0
6742 6759 -9590 0
6742 6761 -9592 0
6742 6763 -9594 0
6742 6765 -9596 0
6742 6767 -9598 0
6742 6769 -9600 0
6742 6771 -9602 0
6744 -9586 0
6744 6756 -9588 0
6744 6757 -9590 0
6744 6759 -9592 0
6744 6761 -9594 0
6744 6763 -9596 0
6744 6765 -9598 0
6744 6767 -9600 0
6744 6769 -9602 0
6744 6771 -9604 0
6746 -9588 0
6746 6756 -9590 0
6746 6757 -9592 0
6746 6759 -9594 0
6746 6761 -9596 0
6746 6763 -9598 0
6746 6765 -9600 0
6746 6767 -9602 0
6746 6769 -9604 0
6746 6771 -9606 0
6748 -9590 0
6748 6756 -9592 0
6748 6757 -9594 0
6748 6759 -9596 0
6748 6761 -9598 0
6748 6763 -9600 0
6748 6765 -9602 0
6748 6767 -9604 0
6748 6769 -9606 0
6748 6771 -9608 0
6750 -9592 0
6750 6756 -9594 0
6750 6757 -9596 0
6750 6759 -9598 0
6750 6761 -9600 0
6750 6763 -9602 0
6750 6765 -9604 0
6750 6767 -9606 0
6750 6769 -9608 0
6750 6771 -9610 0
6752 -9594 0
6752 6756 -9596 0
6752 6757 -9598 0
6752 6759 -9600 0
6752 6761 -9602 0
6752 6763 -9604 0
6752 6765 -9606 0
6752 6767 -9608 0
6752 6769 -9610 0
6752 6771 -9612 0
6754 -9596 0
6754 6756 -9598 0
6754 6757 -9600 0
6754 6759 -9602 0
6754 6761 -9604 0
6754 6763 -9606 0
6754 6765 -9608 0
6754 6767 -9610 0
6754 6769 -9612 0
6754 6771 -9614 0
c (0<=( - aux405 + aux39 + aux40))
-6771 9614 0
-6769 9612 0
-6767 9610 0
-6765 9608 0
-6763 9606 0
-6761 9604 0
-6759 9602 0
-6757 9600 0
-6756 9598 0
-6754 9614 0
-6754 -6771 9612 0
-6754 -6769 9610 0
-6754 -6767 9608 0
-6754 -6765 9606 0
-6754 -6763 9604 0
-6754 -6761 9602 0
-6754 -6759 9600 0
-6754 -6757 9598 0
-6754 -6756 9596 0
-6752 9612 0
-6752 -6771 9610 0
-6752 -6769 9608 0
-6752 -6767 9606 0
-6752 -6765 9604 0
-6752 -6763 9602 0
-6752 -6761 9600 0
-6752 -6759 9598 0
-6752 -6757 9596 0
-6752 -6756 9594 0
-6750 9610 0
-6750 -6771 9608 0
-6750 -6769 9606 0
-6750 -6767 9604 0
-6750 -6765 9602 0
-6750 -6763 9600 0
-6750 -6761 9598 0
-6750 -6759 9596 0
-6750 -6757 9594 0
-6750 -6756 9592 0
-6748 9608 0
-6748 -6771 9606 0
-6748 -6769 9604 0
-6748 -6767 9602 0
-6748 -6765 9600 0
-6748 -6763 9598 0
-6748 -6761 9596 0
-6748 -6759 9594 0
-6748 -6757 9592 0
-6748 -6756 9590 0
-6746 9606 0
-6746 -6771 9604 0
-6746 -6769 9602 0
-6746 -6767 9600 0
-6746 -6765 9598 0
-6746 -6763 9596 0
-6746 -6761 9594 0
-6746 -6759 9592 0
-6746 -6757 9590 0
-6746 -6756 9588 0
-6744 9604 0
-6744 -6771 9602 0
-6744 -6769 9600 0
-6744 -6767 9598 0
-6744 -6765 9596 0
-6744 -6763 9594 0
-6744 -6761 9592 0
-6744 -6759 9590 0
-6744 -6757 9588 0
-6744 -6756 9586 0
-6742 9602 0
-6742 -6771 9600 0
-6742 -6769 9598 0
-6742 -6767 9596 0
-6742 -6765 9594 0
-6742 -6763 9592 0
-6742 -6761 9590 0
-6742 -6759 9588 0
-6742 -6757 9586 0
-6742 -6756 9584 0
-6740 9600 0
-6740 -6771 9598 0
-6740 -6769 9596 0
-6740 -6767 9594 0
-6740 -6765 9592 0
-6740 -6763 9590 0
-6740 -6761 9588 0
-6740 -6759 9586 0
-6740 -6757 9584 0
-6740 -6756 9582 0
-6739 9598 0
-6739 -6771 9596 0
-6739 -6769 9594 0
-6739 -6767 9592 0
-6739 -6765 9590 0
-6739 -6763 9588 0
-6739 -6761 9586 0
-6739 -6759 9584 0
-6739 -6757 9582 0
-6739 -6756 9581 0
c ((aux402 - aux406 + aux37)<=0)
9478 -9616 0
9479 -9617 0
9481 -9619 0
9483 -9621 0
9485 -9623 0
9487 -9625 0
9489 -9627 0
9491 -9629 0
9493 -9631 0
9495 -9633 0
9497 -9635 0
9499 -9637 0
9501 -9639 0
9503 -9641 0
9505 -9643 0
9507 -9645 0
9509 -9647 0
6705 -9616 0
6705 9478 -9617 0
6705 9479 -9619 0
6705 9481 -9621 0
6705 9483 -9623 0
6705 9485 -9625 0
6705 9487 -9627 0
6705 9489 -9629 0
6705 9491 -9631 0
6705 9493 -9633 0
6705 9495 -9635 0
6705 9497 -9637 0
6705 9499 -9639 0
6705 9501 -9641 0
6705 9503 -9643 0
6705 9505 -9645 0
6705 9507 -9647 0
6705 9509 -9649 0
6706 -9617 0
6706 9478 -9619 0
6706 9479 -9621 0
6706 9481 -9623 0
6706 9483 -9625 0
6706 9485 -9627 0
6706 9487 -9629 0
6706 9489 -9631 0
6706 9491 -9633 0
6706 9493 -9635 0
6706 9495 -9637 0
6706 9497 -9639 0
6706 9499 -9641 0
6706 9501 -9643 0
6706 9503 -9645 0
6706 9505 -9647 0
6706 9507 -9649 0
6706 9509 -9651 0
6708 -9619 0
6708 9478 -9621 0
6708 9479 -9623 0
6708 9481 -9625 0
6708 9483 -9627 0
6708 9485 -9629 0
6708 9487 -9631 0
6708 9489 -9633 0
6708 9491 -9635 0
6708 9493 -9637 0
6708 9495 -9639 0
6708 9497 -9641 0
6708 9499 -9643 0
6708 9501 -9645 0
6708 9503 -9647 0
6708 9505 -9649 0
6708 9507 -9651 0
6708 9509 -9653 0
6710 -9621 0
6710 9478 -9623 0
6710 9479 -9625 0
6710 9481 -9627 0
6710 9483 -9629 0
6710 9485 -9631 0
6710 9487 -9633 0
6710 9489 -9635 0
6710 9491 -9637 0
6710 9493 -9639 0
6710 9495 -9641 0
6710 9497 -9643 0
6710 9499 -9645 0
6710 9501 -9647 0
6710 9503 -9649 0
6710 9505 -9651 0
6710 9507 -9653 0
6710 9509 -9655 0
6712 -9623 0
6712 9478 -9625 0
6712 9479 -9627 0
6712 9481 -9629 0
6712 9483 -9631 0
6712 9485 -9633 0
6712 9487 -9635 0
6712 9489 -9637 0
6712 9491 -9639 0
6712 9493 -9641 0
6712 9495 -9643 0
6712 9497 -9645 0
6712 9499 -9647 0
6712 9501 -9649 0
6712 9503 -9651 0
6712 9505 -9653 0
6712 9507 -9655 0
6712 9509 -9657 0
6714 -9625 0
6714 9478 -9627 0
6714 9479 -9629 0
6714 9481 -9631 0
6714 9483 -9633 0
6714 9485 -9635 0
6714 9487 -9637 0
6714 9489 -9639 0
6714 9491 -9641 0
6714 9493 -9643 0
6714 9495 -9645 0
6714 9497 -9647 0
6714 9499 -9649 0
6714 9501 -9651 0
6714 9503 -9653 0
6714 9505 -9655 0
6714 9507 -9657 0
6714 9509 -9659 0
6716 -9627 0
6716 9478 -9629 0
6716 9479 -9631 0
6716 9481 -9633 0
6716 9483 -9635 0
6716 9485 -9637 0
6716 9487 -9639 0
6716 9489 -9641 0
6716 9491 -9643 0
6716 9493 -9645 0
6716 9495 -9647 0
6716 9497 -9649 0
6716 9499 -9651 0
6716 9501 -9653 0
6716 9503 -9655 0
6716 9505 -9657 0
6716 9507 -9659 0
6716 9509 -9661 0
6718 -9629 0
6718 9478 -9631 0
6718 9479 -9633 0
6718 9481 -9635 0
6718 9483 -9637 0
6718 9485 -9639 0
6718 9487 -9641 0
6718 9489 -9643 0
6718 9491 -9645 0
6718 9493 -9647 0
6718 9495 -9649 0
6718 9497 -9651 0
6718 9499 -9653 0
6718 9501 -9655 0
6718 9503 -9657 0
6718 9505 -9659 0
6718 9507 -9661 0
6718 9509 -9663 0
6720 -9631 0
6720 9478 -9633 0
6720 9479 -9635 0
6720 9481 -9637 0
6720 9483 -9639 0
6720 9485 -9641 0
6720 9487 -9643 0
6720 9489 -9645 0
6720 9491 -9647 0
6720 9493 -9649 0
6720 9495 -9651 0
6720 9497 -9653 0
6720 9499 -9655 0
6720 9501 -9657 0
6720 9503 -9659 0
6720 9505 -9661 0
6720 9507 -9663 0
6720 9509 -9665 0
c (0<=(aux402 - aux406 + aux37))
-9509 9665 0
-9507 9663 0
-9505 9661 0
-9503 9659 0
-9501 9657 0
-9499 9655 0
-9497 9653 0
-9495 9651 0
-9493 9649 0
-9491 9647 0
-9489 9645 0
-9487 9643 0
-9485 9641 0
-9483 9639 0
-9481 9637 0
-9479 9635 0
-9478 9633 0
-6720 9665 0
-6720 -9509 9663 0
-6720 -9507 9661 0
-6720 -9505 9659 0
-6720 -9503 9657 0
-6720 -9501 9655 0
-6720 -9499 9653 0
-6720 -9497 9651 0
-6720 -9495 9649 0
-6720 -9493 9647 0
-6720 -9491 9645 0
-6720 -9489 9643 0
-6720 -9487 9641 0
-6720 -9485 9639 0
-6720 -9483 9637 0
-6720 -9481 9635 0
-6720 -9479 9633 0
-6720 -9478 9631 0
-6718 9663 0
-6718 -9509 9661 0
-6718 -9507 9659 0
-6718 -9505 9657 0
-6718 -9503 9655 0
-6718 -9501 9653 0
-6718 -9499 9651 0
-6718 -9497 9649 0
-6718 -9495 9647 0
-6718 -9493 9645 0
-6718 -9491 9643 0
-6718 -9489 9641 0
-6718 -9487 9639 0
-6718 -9485 9637 0
-6718 -9483 9635 0
-6718 -9481 9633 0
-6718 -9479 9631 0
-6718 -9478 9629 0
-6716 9661 0
-6716 -9509 9659 0
-6716 -9507 9657 0
-6716 -9505 9655 0
-6716 -9503 9653 0
-6716 -9501 9651 0
-6716 -9499 9649 0
-6716 -9497 9647 0
-6716 -9495 9645 0
-6716 -9493 9643 0
-6716 -9491 9641 0
-6716 -9489 9639 0
-6716 -9487 9637 0
-6716 -9485 9635 0
-6716 -9483 9633 0
-6716 -9481 9631 0
-6716 -9479 9629 0
-6716 -9478 9627 0
-6714 9659 0
-6714 -9509 9657 0
-6714 -9507 9655 0
-6714 -9505 9653 0
-6714 -9503 9651 0
-6714 -9501 9649 0
-6714 -9499 9647 0
-6714 -9497 9645 0
-6714 -9495 9643 0
-6714 -9493 9641 0
-6714 -9491 9639 0
-6714 -9489 9637 0
-6714 -9487 9635 0
-6714 -9485 9633 0
-6714 -9483 9631 0
-6714 -9481 9629 0
-6714 -9479 9627 0
-6714 -9478 9625 0
-6712 9657 0
-6712 -9509 9655 0
-6712 -9507 9653 0
-6712 -9505 9651 0
-6712 -9503 9649 0
-6712 -9501 9647 0
-6712 -9499 9645 0
-6712 -9497 9643 0
-6712 -9495 9641 0
-6712 -9493 9639 0
-6712 -9491 9637 0
-6712 -9489 9635 0
-6712 -9487 9633 0
-6712 -9485 9631 0
-6712 -9483 9629 0
-6712 -9481 9627 0
-6712 -9479 9625 0
-6712 -9478 9623 0
-6710 9655 0
-6710 -9509 9653 0
-6710 -9507 9651 0
-6710 -9505 9649 0
-6710 -9503 9647 0
-6710 -9501 9645 0
-6710 -9499 9643 0
-6710 -9497 9641 0
-6710 -9495 9639 0
-6710 -9493 9637 0
-6710 -9491 9635 0
-6710 -9489 9633 0
-6710 -9487 9631 0
-6710 -9485 9629 0
-6710 -9483 9627 0
-6710 -9481 9625 0
-6710 -9479 9623 0
-6710 -9478 9621 0
-6708 9653 0
-6708 -9509 9651 0
-6708 -9507 9649 0
-6708 -9505 9647 0
-6708 -9503 9645 0
-6708 -9501 9643 0
-6708 -9499 9641 0
-6708 -9497 9639 0
-6708 -9495 9637 0
-6708 -9493 9635 0
-6708 -9491 9633 0
-6708 -9489 9631 0
-6708 -9487 9629 0
-6708 -9485 9627 0
-6708 -9483 9625 0
-6708 -9481 9623 0
-6708 -9479 9621 0
-6708 -9478 9619 0
-6706 9651 0
-6706 -9509 9649 0
-6706 -9507 9647 0
-6706 -9505 9645 0
-6706 -9503 9643 0
-6706 -9501 9641 0
-6706 -9499 9639 0
-6706 -9497 9637 0
-6706 -9495 9635 0
-6706 -9493 9633 0
-6706 -9491 9631 0
-6706 -9489 9629 0
-6706 -9487 9627 0
-6706 -9485 9625 0
-6706 -9483 9623 0
-6706 -9481 9621 0
-6706 -9479 9619 0
-6706 -9478 9617 0
-6705 9649 0
-6705 -9509 9647 0
-6705 -9507 9645 0
-6705 -9505 9643 0
-6705 -9503 9641 0
-6705 -9501 9639 0
-6705 -9499 9637 0
-6705 -9497 9635 0
-6705 -9495 9633 0
-6705 -9493 9631 0
-6705 -9491 9629 0
-6705 -9489 9627 0
-6705 -9487 9625 0
-6705 -9485 9623 0
-6705 -9483 9621 0
-6705 -9481 9619 0
-6705 -9479 9617 0
-6705 -9478 9616 0
c ((aux404 + aux405 - aux407)<=0)
9581 -9667 0
9582 -9668 0
9584 -9670 0
9586 -9672 0
9588 -9674 0
9590 -9676 0
9592 -9678 0
9594 -9680 0
9596 -9682 0
9598 -9684 0
9600 -9686 0
9602 -9688 0
9604 -9690 0
9606 -9692 0
9608 -9694 0
9610 -9696 0
9612 -9698 0
9614 -9700 0
9546 -9667 0
9546 9581 -9668 0
9546 9582 -9670 0
9546 9584 -9672 0
9546 9586 -9674 0
9546 9588 -9676 0
9546 9590 -9678 0
9546 9592 -9680 0
9546 9594 -9682 0
9546 9596 -9684 0
9546 9598 -9686 0
9546 9600 -9688 0
9546 9602 -9690 0
9546 9604 -9692 0
9546 9606 -9694 0
9546 9608 -9696 0
9546 9610 -9698 0
9546 9612 -9700 0
9546 9614 -9702 0
9547 -9668 0
9547 9581 -9670 0
9547 9582 -9672 0
9547 9584 -9674 0
9547 9586 -9676 0
9547 9588 -9678 0
9547 9590 -9680 0
9547 9592 -9682 0
9547 9594 -9684 0
9547 9596 -9686 0
9547 9598 -9688 0
9547 9600 -9690 0
9547 9602 -9692 0
9547 9604 -9694 0
9547 9606 -9696 0
9547 9608 -9698 0
9547 9610 -9700 0
9547 9612 -9702 0
9547 9614 -9704 0
9549 -9670 0
9549 9581 -9672 0
9549 9582 -9674 0
9549 9584 -9676 0
9549 9586 -9678 0
9549 9588 -9680 0
9549 9590 -9682 0
9549 9592 -9684 0
9549 9594 -9686 0
9549 9596 -9688 0
9549 9598 -9690 0
9549 9600 -9692 0
9549 9602 -9694 0
9549 9604 -9696 0
9549 9606 -9698 0
9549 9608 -9700 0
9549 9610 -9702 0
9549 9612 -9704 0
9549 9614 -9706 0
9551 -9672 0
9551 9581 -9674 0
9551 9582 -9676 0
9551 9584 -9678 0
9551 9586 -9680 0
9551 9588 -9682 0
9551 9590 -9684 0
9551 9592 -9686 0
9551 9594 -9688 0
9551 9596 -9690 0
9551 9598 -9692 0
9551 9600 -9694 0
9551 9602 -9696 0
9551 9604 -9698 0
9551 9606 -9700 0
9551 9608 -9702 0
9551 9610 -9704 0
9551 9612 -9706 0
9551 9614 -9708 0
9553 -9674 0
9553 9581 -9676 0
9553 9582 -9678 0
9553 9584 -9680 0
9553 9586 -9682 0
9553 9588 -9684 0
9553 9590 -9686 0
9553 9592 -9688 0
9553 9594 -9690 0
9553 9596 -9692 0
9553 9598 -9694 0
9553 9600 -9696 0
9553 9602 -9698 0
9553 9604 -9700 0
9553 9606 -9702 0
9553 9608 -9704 0
9553 9610 -9706 0
9553 9612 -9708 0
9553 9614 -9710 0
9555 -9676 0
9555 9581 -9678 0
9555 9582 -9680 0
9555 9584 -9682 0
9555 9586 -9684 0
9555 9588 -9686 0
9555 9590 -9688 0
9555 9592 -9690 0
9555 9594 -9692 0
9555 9596 -9694 0
9555 9598 -9696 0
9555 9600 -9698 0
9555 9602 -9700 0
9555 9604 -9702 0
9555 9606 -9704 0
9555 9608 -9706 0
9555 9610 -9708 0
9555 9612 -9710 0
9555 9614 -9712 0
9557 -9678 0
9557 9581 -9680 0
9557 9582 -9682 0
9557 9584 -9684 0
9557 9586 -9686 0
9557 9588 -9688 0
9557 9590 -9690 0
9557 9592 -9692 0
9557 9594 -9694 0
9557 9596 -9696 0
9557 9598 -9698 0
9557 9600 -9700 0
9557 9602 -9702 0
9557 9604 -9704 0
9557 9606 -9706 0
9557 9608 -9708 0
9557 9610 -9710 0
9557 9612 -9712 0
9557 9614 -9714 0
9559 -9680 0
9559 9581 -9682 0
9559 9582 -9684 0
9559 9584 -9686 0
9559 9586 -9688 0
9559 9588 -9690 0
9559 9590 -9692 0
9559 9592 -9694 0
9559 9594 -9696 0
9559 9596 -9698 0
9559 9598 -9700 0
9559 9600 -9702 0
9559 9602 -9704 0
9559 9604 -9706 0
9559 9606 -9708 0
9559 9608 -9710 0
9559 9610 -9712 0
9559 9612 -9714 0
9559 9614 -9716 0
9561 -9682 0
9561 9581 -9684 0
9561 9582 -9686 0
9561 9584 -9688 0
9561 9586 -9690 0
9561 9588 -9692 0
9561 9590 -9694 0
9561 9592 -9696 0
9561 9594 -9698 0
9561 9596 -9700 0
9561 9598 -9702 0
9561 9600 -9704 0
9561 9602 -9706 0
9561 9604 -9708 0
9561 9606 -9710 0
9561 9608 -9712 0
9561 9610 -9714 0
9561 9612 -9716 0
9561 9614 -9718 0
9563 -9684 0
9563 9581 -9686 0
9563 9582 -9688 0
9563 9584 -9690 0
9563 9586 -9692 0
9563 9588 -9694 0
9563 9590 -9696 0
9563 9592 -9698 0
9563 9594 -9700 0
9563 9596 -9702 0
9563 9598 -9704 0
9563 9600 -9706 0
9563 9602 -9708 0
9563 9604 -9710 0
9563 9606 -9712 0
9563 9608 -9714 0
9563 9610 -9716 0
9563 9612 -9718 0
9563 9614 -9720 0
9565 -9686 0
9565 9581 -9688 0
9565 9582 -9690 0
9565 9584 -9692 0
9565 9586 -9694 0
9565 9588 -9696 0
9565 9590 -9698 0
9565 9592 -9700 0
9565 9594 -9702 0
9565 9596 -9704 0
9565 9598 -9706 0
9565 9600 -9708 0
9565 9602 -9710 0
9565 9604 -9712 0
9565 9606 -9714 0
9565 9608 -9716 0
9565 9610 -9718 0
9565 9612 -9720 0
9565 9614 -9722 0
9567 -9688 0
9567 9581 -9690 0
9567 9582 -9692 0
9567 9584 -9694 0
9567 9586 -9696 0
9567 9588 -9698 0
9567 9590 -9700 0
9567 9592 -9702 0
9567 9594 -9704 0
9567 9596 -9706 0
9567 9598 -9708 0
9567 9600 -9710 0
9567 9602 -9712 0
9567 9604 -9714 0
9567 9606 -9716 0
9567 9608 -9718 0
9567 9610 -9720 0
9567 9612 -9722 0
9567 9614 -9724 0
9569 -9690 0
9569 9581 -9692 0
9569 9582 -9694 0
9569 9584 -9696 0
9569 9586 -9698 0
9569 9588 -9700 0
9569 9590 -9702 0
9569 9592 -9704 0
9569 9594 -9706 0
9569 9596 -9708 0
9569 9598 -9710 0
9569 9600 -9712 0
9569 9602 -9714 0
9569 9604 -9716 0
9569 9606 -9718 0
9569 9608 -9720 0
9569 9610 -9722 0
9569 9612 -9724 0
9569 9614 -9726 0
9571 -9692 0
9571 9581 -9694 0
9571 9582 -9696 0
9571 9584 -9698 0
9571 9586 -9700 0
9571 9588 -9702 0
9571 9590 -9704 0
9571 9592 -9706 0
9571 9594 -9708 0
9571 9596 -9710 0
9571 9598 -9712 0
9571 9600 -9714 0
9571 9602 -9716 0
9571 9604 -9718 0
9571 9606 -9720 0
9571 9608 -9722 0
9571 9610 -9724 0
9571 9612 -9726 0
9571 9614 -9728 0
9573 -9694 0
9573 9581 -9696 0
9573 9582 -9698 0
9573 9584 -9700 0
9573 9586 -9702 0
9573 9588 -9704 0
9573 9590 -9706 0
9573 9592 -9708 0
9573 9594 -9710 0
9573 9596 -9712 0
9573 9598 -9714 0
9573 9600 -9716 0
9573 9602 -9718 0
9573 9604 -9720 0
9573 9606 -9722 0
9573 9608 -9724 0
9573 9610 -9726 0
9573 9612 -9728 0
9573 9614 -9730 0
9575 -9696 0
9575 9581 -9698 0
9575 9582 -9700 0
9575 9584 -9702 0
9575 9586 -9704 0
9575 9588 -9706 0
9575 9590 -9708 0
9575 9592 -9710 0
9575 9594 -9712 0
9575 9596 -9714 0
9575 9598 -9716 0
9575 9600 -9718 0
9575 9602 -9720 0
9575 9604 -9722 0
9575 9606 -9724 0
9575 9608 -9726 0
9575 9610 -9728 0
9575 9612 -9730 0
9575 9614 -9732 0
9577 -9698 0
9577 9581 -9700 0
9577 9582 -9702 0
9577 9584 -9704 0
9577 9586 -9706 0
9577 9588 -9708 0
9577 9590 -9710 0
9577 9592 -9712 0
9577 9594 -9714 0
9577 9596 -9716 0
9577 9598 -9718 0
9577 9600 -9720 0
9577 9602 -9722 0
9577 9604 -9724 0
9577 9606 -9726 0
9577 9608 -9728 0
9577 9610 -9730 0
9577 9612 -9732 0
9577 9614 -9734 0
9579 -9700 0
9579 9581 -9702 0
9579 9582 -9704 0
9579 9584 -9706 0
9579 9586 -9708 0
9579 9588 -9710 0
9579 9590 -9712 0
9579 9592 -9714 0
9579 9594 -9716 0
9579 9596 -9718 0
9579 9598 -9720 0
9579 9600 -9722 0
9579 9602 -9724 0
9579 9604 -9726 0
9579 9606 -9728 0
9579 9608 -9730 0
9579 9610 -9732 0
9579 9612 -9734 0
9579 9614 -9736 0
c (0<=(aux404 + aux405 - aux407))
-9614 9736 0
-9612 9734 0
-9610 9732 0
-9608 9730 0
-9606 9728 0
-9604 9726 0
-9602 9724 0
-9600 9722 0
-9598 9720 0
-9596 9718 0
-9594 9716 0
-9592 9714 0
-9590 9712 0
-9588 9710 0
-9586 9708 0
-9584 9706 0
-9582 9704 0
-9581 9702 0
-9579 9736 0
-9579 -9614 9734 0
-9579 -9612 9732 0
-9579 -9610 9730 0
-9579 -9608 9728 0
-9579 -9606 9726 0
-9579 -9604 9724 0
-9579 -9602 9722 0
-9579 -9600 9720 0
-9579 -9598 9718 0
-9579 -9596 9716 0
-9579 -9594 9714 0
-9579 -9592 9712 0
-9579 -9590 9710 0
-9579 -9588 9708 0
-9579 -9586 9706 0
-9579 -9584 9704 0
-9579 -9582 9702 0
-9579 -9581 9700 0
-9577 9734 0
-9577 -9614 9732 0
-9577 -9612 9730 0
-9577 -9610 9728 0
-9577 -9608 9726 0
-9577 -9606 9724 0
-9577 -9604 9722 0
-9577 -9602 9720 0
-9577 -9600 9718 0
-9577 -9598 9716 0
-9577 -9596 9714 0
-9577 -9594 9712 0
-9577 -9592 9710 0
-9577 -9590 9708 0
-9577 -9588 9706 0
-9577 -9586 9704 0
-9577 -9584 9702 0
-9577 -9582 9700 0
-9577 -9581 9698 0
-9575 9732 0
-9575 -9614 9730 0
-9575 -9612 9728 0
-9575 -9610 9726 0
-9575 -9608 9724 0
-9575 -9606 9722 0
-9575 -9604 9720 0
-9575 -9602 9718 0
-9575 -9600 9716 0
-9575 -9598 9714 0
-9575 -9596 9712 0
-9575 -9594 9710 0
-9575 -9592 9708 0
-9575 -9590 9706 0
-9575 -9588 9704 0
-9575 -9586 9702 0
-9575 -9584 9700 0
-9575 -9582 9698 0
-9575 -9581 9696 0
-9573 9730 0
-9573 -9614 9728 0
-9573 -9612 9726 0
-9573 -9610 9724 0
-9573 -9608 9722 0
-9573 -9606 9720 0
-9573 -9604 9718 0
-9573 -9602 9716 0
-9573 -9600 9714 0
-9573 -9598 9712 0
-9573 -9596 9710 0
-9573 -9594 9708 0
-9573 -9592 9706 0
-9573 -9590 9704 0
-9573 -9588 9702 0
-9573 -9586 9700 0
-9573 -9584 9698 0
-9573 -9582 9696 0
-9573 -9581 9694 0
-9571 9728 0
-9571 -9614 9726 0
-9571 -9612 9724 0
-9571 -9610 9722 0
-9571 -9608 9720 0
-9571 -9606 9718 0
-9571 -9604 9716 0
-9571 -9602 9714 0
-9571 -9600 9712 0
-9571 -9598 9710 0
-9571 -9596 9708 0
-9571 -9594 9706 0
-9571 -9592 9704 0
-9571 -9590 9702 0
-9571 -9588 9700 0
-9571 -9586 9698 0
-9571 -9584 9696 0
-9571 -9582 9694 0
-9571 -9581 9692 0
-9569 9726 0
-9569 -9614 9724 0
-9569 -9612 9722 0
-9569 -9610 9720 0
-9569 -9608 9718 0
-9569 -9606 9716 0
-9569 -9604 9714 0
-9569 -9602 9712 0
-9569 -9600 9710 0
-9569 -9598 9708 0
-9569 -9596 9706 0
-9569 -9594 9704 0
-9569 -9592 9702 0
-9569 -9590 9700 0
-9569 -9588 9698 0
-9569 -9586 9696 0
-9569 -9584 9694 0
-9569 -9582 9692 0
-9569 -9581 9690 0
-9567 9724 0
-9567 -9614 9722 0
-9567 -9612 9720 0
-9567 -9610 9718 0
-9567 -9608 9716 0
-9567 -9606 9714 0
-9567 -9604 9712 0
-9567 -9602 9710 0
-9567 -9600 9708 0
-9567 -9598 9706 0
-9567 -9596 9704 0
-9567 -9594 9702 0
-9567 -9592 9700 0
-9567 -9590 9698 0
-9567 -9588 9696 0
-9567 -9586 9694 0
-9567 -9584 9692 0
-9567 -9582 9690 0
-9567 -9581 9688 0
-9565 9722 0
-9565 -9614 9720 0
-9565 -9612 9718 0
-9565 -9610 9716 0
-9565 -9608 9714 0
-9565 -9606 9712 0
-9565 -9604 9710 0
-9565 -9602 9708 0
-9565 -9600 9706 0
-9565 -9598 9704 0
-9565 -9596 9702 0
-9565 -9594 9700 0
-9565 -9592 9698 0
-9565 -9590 9696 0
-9565 -9588 9694 0
-9565 -9586 9692 0
-9565 -9584 9690 0
-9565 -9582 9688 0
-9565 -9581 9686 0
-9563 9720 0
-9563 -9614 9718 0
-9563 -9612 9716 0
-9563 -9610 9714 0
-9563 -9608 9712 0
-9563 -9606 9710 0
-9563 -9604 9708 0
-9563 -9602 9706 0
-9563 -9600 9704 0
-9563 -9598 9702 0
-9563 -9596 9700 0
-9563 -9594 9698 0
-9563 -9592 9696 0
-9563 -9590 9694 0
-9563 -9588 9692 0
-9563 -9586 9690 0
-9563 -9584 9688 0
-9563 -9582 9686 0
-9563 -9581 9684 0
-9561 9718 0
-9561 -9614 9716 0
-9561 -9612 9714 0
-9561 -9610 9712 0
-9561 -9608 9710 0
-9561 -9606 9708 0
-9561 -9604 9706 0
-9561 -9602 9704 0
-9561 -9600 9702 0
-9561 -9598 9700 0
-9561 -9596 9698 0
-9561 -9594 9696 0
-9561 -9592 9694 0
-9561 -9590 9692 0
-9561 -9588 9690 0
-9561 -9586 9688 0
-9561 -9584 9686 0
-9561 -9582 9684 0
-9561 -9581 9682 0
-9559 9716 0
-9559 -9614 9714 0
-9559 -9612 9712 0
-9559 -9610 9710 0
-9559 -9608 9708 0
-9559 -9606 9706 0
-9559 -9604 9704 0
-9559 -9602 9702 0
-9559 -9600 9700 0
-9559 -9598 9698 0
-9559 -9596 9696 0
-9559 -9594 9694 0
-9559 -9592 9692 0
-9559 -9590 9690 0
-9559 -9588 9688 0
-9559 -9586 9686 0
-9559 -9584 9684 0
-9559 -9582 9682 0
-9559 -9581 9680 0
-9557 9714 0
-9557 -9614 9712 0
-9557 -9612 9710 0
-9557 -9610 9708 0
-9557 -9608 9706 0
-9557 -9606 9704 0
-9557 -9604 9702 0
-9557 -9602 9700 0
-9557 -9600 9698 0
-9557 -9598 9696 0
-9557 -9596 9694 0
-9557 -9594 9692 0
-9557 -9592 9690 0
-9557 -9590 9688 0
-9557 -9588 9686 0
-9557 -9586 9684 0
-9557 -9584 9682 0
-9557 -9582 9680 0
-9557 -9581 9678 0
-9555 9712 0
-9555 -9614 9710 0
-9555 -9612 9708 0
-9555 -9610 9706 0
-9555 -9608 9704 0
-9555 -9606 9702 0
-9555 -9604 9700 0
-9555 -9602 9698 0
-9555 -9600 9696 0
-9555 -9598 9694 0
-9555 -9596 9692 0
-9555 -9594 9690 0
-9555 -9592 9688 0
-9555 -9590 9686 0
-9555 -9588 9684 0
-9555 -9586 9682 0
-9555 -9584 9680 0
-9555 -9582 9678 0
-9555 -9581 9676 0
-9553 9710 0
-9553 -9614 9708 0
-9553 -9612 9706 0
-9553 -9610 9704 0
-9553 -9608 9702 0
-9553 -9606 9700 0
-9553 -9604 9698 0
-9553 -9602 9696 0
-9553 -9600 9694 0
-9553 -9598 9692 0
-9553 -9596 9690 0
-9553 -9594 9688 0
-9553 -9592 9686 0
-9553 -9590 9684 0
-9553 -9588 9682 0
-9553 -9586 9680 0
-9553 -9584 9678 0
-9553 -9582 9676 0
-9553 -9581 9674 0
-9551 9708 0
-9551 -9614 9706 0
-9551 -9612 9704 0
-9551 -9610 9702 0
-9551 -9608 9700 0
-9551 -9606 9698 0
-9551 -9604 9696 0
-9551 -9602 9694 0
-9551 -9600 9692 0
-9551 -9598 9690 0
-9551 -9596 9688 0
-9551 -9594 9686 0
-9551 -9592 9684 0
-9551 -9590 9682 0
-9551 -9588 9680 0
-9551 -9586 9678 0
-9551 -9584 9676 0
-9551 -9582 9674 0
-9551 -9581 9672 0
-9549 9706 0
-9549 -9614 9704 0
-9549 -9612 9702 0
-9549 -9610 9700 0
-9549 -9608 9698 0
-9549 -9606 9696 0
-9549 -9604 9694 0
-9549 -9602 9692 0
-9549 -9600 9690 0
-9549 -9598 9688 0
-9549 -9596 9686 0
-9549 -9594 9684 0
-9549 -9592 9682 0
-9549 -9590 9680 0
-9549 -9588 9678 0
-9549 -9586 9676 0
-9549 -9584 9674 0
-9549 -9582 9672 0
-9549 -9581 9670 0
-9547 9704 0
-9547 -9614 9702 0
-9547 -9612 9700 0
-9547 -9610 9698 0
-9547 -9608 9696 0
-9547 -9606 9694 0
-9547 -9604 9692 0
-9547 -9602 9690 0
-9547 -9600 9688 0
-9547 -9598 9686 0
-9547 -9596 9684 0
-9547 -9594 9682 0
-9547 -9592 9680 0
-9547 -9590 9678 0
-9547 -9588 9676 0
-9547 -9586 9674 0
-9547 -9584 9672 0
-9547 -9582 9670 0
-9547 -9581 9668 0
-9546 9702 0
-9546 -9614 9700 0
-9546 -9612 9698 0
-9546 -9610 9696 0
-9546 -9608 9694 0
-9546 -9606 9692 0
-9546 -9604 9690 0
-9546 -9602 9688 0
-9546 -9600 9686 0
-9546 -9598 9684 0
-9546 -9596 9682 0
-9546 -9594 9680 0
-9546 -9592 9678 0
-9546 -9590 9676 0
-9546 -9588 9674 0
-9546 -9586 9672 0
-9546 -9584 9670 0
-9546 -9582 9668 0
-9546 -9581 9667 0
c (( - aux408 + shift(variant_fields_00002_00004_00001, -1) + aux48)<=0)
6876 -9738 0
6877 -9739 0
6879 -9741 0
6881 -9743 0
6883 -9745 0
6885 -9747 0
6887 -9749 0
6889 -9751 0
6891 -9753 0
2837 -9738 0
2837 6876 -9739 0
2837 6877 -9741 0
2837 6879 -9743 0
2837 6881 -9745 0
2837 6883 -9747 0
2837 6885 -9749 0
2837 6887 -9751 0
2837 6889 -9753 0
2837 6891 -9755 0
2838 -9739 0
2838 6876 -9741 0
2838 6877 -9743 0
2838 6879 -9745 0
2838 6881 -9747 0
2838 6883 -9749 0
2838 6885 -9751 0
2838 6887 -9753 0
2838 6889 -9755 0
2838 6891 -9757 0
2840 -9741 0
2840 6876 -9743 0
2840 6877 -9745 0
2840 6879 -9747 0
2840 6881 -9749 0
2840 6883 -9751 0
2840 6885 -9753 0
2840 6887 -9755 0
2840 6889 -9757 0
2840 6891 -9759 0
2842 -9743 0
2842 6876 -9745 0
2842 6877 -9747 0
2842 6879 -9749 0
2842 6881 -9751 0
2842 6883 -9753 0
2842 6885 -9755 0
2842 6887 -9757 0
2842 6889 -9759 0
2842 6891 -9761 0
2844 -9745 0
2844 6876 -9747 0
2844 6877 -9749 0
2844 6879 -9751 0
2844 6881 -9753 0
2844 6883 -9755 0
2844 6885 -9757 0
2844 6887 -9759 0
2844 6889 -9761 0
2844 6891 -9763 0
2846 -9747 0
2846 6876 -9749 0
2846 6877 -9751 0
2846 6879 -9753 0
2846 6881 -9755 0
2846 6883 -9757 0
2846 6885 -9759 0
2846 6887 -9761 0
2846 6889 -9763 0
2846 6891 -9765 0
2848 -9749 0
2848 6876 -9751 0
2848 6877 -9753 0
2848 6879 -9755 0
2848 6881 -9757 0
2848 6883 -9759 0
2848 6885 -9761 0
2848 6887 -9763 0
2848 6889 -9765 0
2848 6891 -9767 0
2850 -9751 0
2850 6876 -9753 0
2850 6877 -9755 0
2850 6879 -9757 0
2850 6881 -9759 0
2850 6883 -9761 0
2850 6885 -9763 0
2850 6887 -9765 0
2850 6889 -9767 0
2850 6891 -9769 0
c (0<=( - aux408 + shift(variant_fields_00002_00004_00001, -1) + aux48))
-6891 9769 0
-6889 9767 0
-6887 9765 0
-6885 9763 0
-6883 9761 0
-6881 9759 0
-6879 9757 0
-6877 9755 0
-6876 9753 0
-2850 9769 0
-2850 -6891 9767 0
-2850 -6889 9765 0
-2850 -6887 9763 0
-2850 -6885 9761 0
-2850 -6883 9759 0
-2850 -6881 9757 0
-2850 -6879 9755 0
-2850 -6877 9753 0
-2850 -6876 9751 0
-2848 9767 0
-2848 -6891 9765 0
-2848 -6889 9763 0
-2848 -6887 9761 0
-2848 -6885 9759 0
-2848 -6883 9757 0
-2848 -6881 9755 0
-2848 -6879 9753 0
-2848 -6877 9751 0
-2848 -6876 9749 0
-2846 9765 0
-2846 -6891 9763 0
-2846 -6889 9761 0
-2846 -6887 9759 0
-2846 -6885 9757 0
-2846 -6883 9755 0
-2846 -6881 9753 0
-2846 -6879 9751 0
-2846 -6877 9749 0
-2846 -6876 9747 0
-2844 9763 0
-2844 -6891 9761 0
-2844 -6889 9759 0
-2844 -6887 9757 0
-2844 -6885 9755 0
-2844 -6883 9753 0
-2844 -6881 9751 0
-2844 -6879 9749 0
-2844 -6877 9747 0
-2844 -6876 9745 0
-2842 9761 0
-2842 -6891 9759 0
-2842 -6889 9757 0
-2842 -6887 9755 0
-2842 -6885 9753 0
-2842 -6883 9751 0
-2842 -6881 9749 0
-2842 -6879 9747 0
-2842 -6877 9745 0
-2842 -6876 9743 0
-2840 9759 0
-2840 -6891 9757 0
-2840 -6889 9755 0
-2840 -6887 9753 0
-2840 -6885 9751 0
-2840 -6883 9749 0
-2840 -6881 9747 0
-2840 -6879 9745 0
-2840 -6877 9743 0
-2840 -6876 9741 0
-2838 9757 0
-2838 -6891 9755 0
-2838 -6889 9753 0
-2838 -6887 9751 0
-2838 -6885 9749 0
-2838 -6883 9747 0
-2838 -6881 9745 0
-2838 -6879 9743 0
-2838 -6877 9741 0
-2838 -6876 9739 0
-2837 9755 0
-2837 -6891 9753 0
-2837 -6889 9751 0
-2837 -6887 9749 0
-2837 -6885 9747 0
-2837 -6883 9745 0
-2837 -6881 9743 0
-2837 -6879 9741 0
-2837 -6877 9739 0
-2837 -6876 9738 0
c (( - aux409 + aux45 + aux52)<=0)
6944 -9771 0
6945 -9772 0
6947 -9774 0
6949 -9776 0
6951 -9778 0
6953 -9780 0
6955 -9782 0
6957 -9784 0
6959 -9786 0
6825 -9771 0
6825 6944 -9772 0
6825 6945 -9774 0
6825 6947 -9776 0
6825 6949 -9778 0
6825 6951 -9780 0
6825 6953 -9782 0
6825 6955 -9784 0
6825 6957 -9786 0
6825 6959 -9788 0
6826 -9772 0
6826 6944 -9774 0
6826 6945 -9776 0
6826 6947 -9778 0
6826 6949 -9780 0
6826 6951 -9782 0
6826 6953 -9784 0
6826 6955 -9786 0
6826 6957 -9788 0
6826 6959 -9790 0
6828 -9774 0
6828 6944 -9776 0
6828 6945 -9778 0
6828 6947 -9780 0
6828 6949 -9782 0
6828 6951 -9784 0
6828 6953 -9786 0
6828 6955 -9788 0
6828 6957 -9790 0
6828 6959 -9792 0
6830 -9776 0
6830 6944 -9778 0
6830 6945 -9780 0
6830 6947 -9782 0
6830 6949 -9784 0
6830 6951 -9786 0
6830 6953 -9788 0
6830 6955 -9790 0
6830 6957 -9792 0
6830 6959 -9794 0
6832 -9778 0
6832 6944 -9780 0
6832 6945 -9782 0
6832 6947 -9784 0
6832 6949 -9786 0
6832 6951 -9788 0
6832 6953 -9790 0
6832 6955 -9792 0
6832 6957 -9794 0
6832 6959 -9796 0
6834 -9780 0
6834 6944 -9782 0
6834 6945 -9784 0
6834 6947 -9786 0
6834 6949 -9788 0
6834 6951 -9790 0
6834 6953 -9792 0
6834 6955 -9794 0
6834 6957 -9796 0
6834 6959 -9798 0
6836 -9782 0
6836 6944 -9784 0
6836 6945 -9786 0
6836 6947 -9788 0
6836 6949 -9790 0
6836 6951 -9792 0
6836 6953 -9794 0
6836 6955 -9796 0
6836 6957 -9798 0
6836 6959 -9800 0
6838 -9784 0
6838 6944 -9786 0
6838 6945 -9788 0
6838 6947 -9790 0
6838 6949 -9792 0
6838 6951 -9794 0
6838 6953 -9796 0
6838 6955 -9798 0
6838 6957 -9800 0
6838 6959 -9802 0
6840 -9786 0
6840 6944 -9788 0
6840 6945 -9790 0
6840 6947 -9792 0
6840 6949 -9794 0
6840 6951 -9796 0
6840 6953 -9798 0
6840 6955 -9800 0
6840 6957 -9802 0
6840 6959 -9804 0
c (0<=( - aux409 + aux45 + aux52))
-6959 9804 0
-6957 9802 0
-6955 9800 0
-6953 9798 0
-6951 9796 0
-6949 9794 0
-6947 9792 0
-6945 9790 0
-6944 9788 0
-6840 9804 0
-6840 -6959 9802 0
-6840 -6957 9800 0
-6840 -6955 9798 0
-6840 -6953 9796 0
-6840 -6951 9794 0
-6840 -6949 9792 0
-6840 -6947 9790 0
-6840 -6945 9788 0
-6840 -6944 9786 0
-6838 9802 0
-6838 -6959 9800 0
-6838 -6957 9798 0
-6838 -6955 9796 0
-6838 -6953 9794 0
-6838 -6951 9792 0
-6838 -6949 9790 0
-6838 -6947 9788 0
-6838 -6945 9786 0
-6838 -6944 9784 0
-6836 9800 0
-6836 -6959 9798 0
-6836 -6957 9796 0
-6836 -6955 9794 0
-6836 -6953 9792 0
-6836 -6951 9790 0
-6836 -6949 9788 0
-6836 -6947 9786 0
-6836 -6945 9784 0
-6836 -6944 9782 0
-6834 9798 0
-6834 -6959 9796 0
-6834 -6957 9794 0
-6834 -6955 9792 0
-6834 -6953 9790 0
-6834 -6951 9788 0
-6834 -6949 9786 0
-6834 -6947 9784 0
-6834 -6945 9782 0
-6834 -6944 9780 0
-6832 9796 0
-6832 -6959 9794 0
-6832 -6957 9792 0
-6832 -6955 9790 0
-6832 -6953 9788 0
-6832 -6951 9786 0
-6832 -6949 9784 0
-6832 -6947 9782 0
-6832 -6945 9780 0
-6832 -6944 9778 0
-6830 9794 0
-6830 -6959 9792 0
-6830 -6957 9790 0
-6830 -6955 9788 0
-6830 -6953 9786 0
-6830 -6951 9784 0
-6830 -6949 9782 0
-6830 -6947 9780 0
-6830 -6945 9778 0
-6830 -6944 9776 0
-6828 9792 0
-6828 -6959 9790 0
-6828 -6957 9788 0
-6828 -6955 9786 0
-6828 -6953 9784 0
-6828 -6951 9782 0
-6828 -6949 9780 0
-6828 -6947 9778 0
-6828 -6945 9776 0
-6828 -6944 9774 0
-6826 9790 0
-6826 -6959 9788 0
-6826 -6957 9786 0
-6826 -6955 9784 0
-6826 -6953 9782 0
-6826 -6951 9780 0
-6826 -6949 9778 0
-6826 -6947 9776 0
-6826 -6945 9774 0
-6826 -6944 9772 0
-6825 9788 0
-6825 -6959 9786 0
-6825 -6957 9784 0
-6825 -6955 9782 0
-6825 -6953 9780 0
-6825 -6951 9778 0
-6825 -6949 9776 0
-6825 -6947 9774 0
-6825 -6945 9772 0
-6825 -6944 9771 0
c (( - aux410 + aux46 + aux51)<=0)
6927 -9806 0
6928 -9807 0
6930 -9809 0
6932 -9811 0
6934 -9813 0
6936 -9815 0
6938 -9817 0
6940 -9819 0
6942 -9821 0
6842 -9806 0
6842 6927 -9807 0
6842 6928 -9809 0
6842 6930 -9811 0
6842 6932 -9813 0
6842 6934 -9815 0
6842 6936 -9817 0
6842 6938 -9819 0
6842 6940 -9821 0
6842 6942 -9823 0
6843 -9807 0
6843 6927 -9809 0
6843 6928 -9811 0
6843 6930 -9813 0
6843 6932 -9815 0
6843 6934 -9817 0
6843 6936 -9819 0
6843 6938 -9821 0
6843 6940 -9823 0
6843 6942 -9825 0
6845 -9809 0
6845 6927 -9811 0
6845 6928 -9813 0
6845 6930 -9815 0
6845 6932 -9817 0
6845 6934 -9819 0
6845 6936 -9821 0
6845 6938 -9823 0
6845 6940 -9825 0
6845 6942 -9827 0
6847 -9811 0
6847 6927 -9813 0
6847 6928 -9815 0
6847 6930 -9817 0
6847 6932 -9819 0
6847 6934 -9821 0
6847 6936 -9823 0
6847 6938 -9825 0
6847 6940 -9827 0
6847 6942 -9829 0
6849 -9813 0
6849 6927 -9815 0
6849 6928 -9817 0
6849 6930 -9819 0
6849 6932 -9821 0
6849 6934 -9823 0
6849 6936 -9825 0
6849 6938 -9827 0
6849 6940 -9829 0
6849 6942 -9831 0
6851 -9815 0
6851 6927 -9817 0
6851 6928 -9819 0
6851 6930 -9821 0
6851 6932 -9823 0
6851 6934 -9825 0
6851 6936 -9827 0
6851 6938 -9829 0
6851 6940 -9831 0
6851 6942 -9833 0
6853 -9817 0
6853 6927 -9819 0
6853 6928 -9821 0
6853 6930 -9823 0
6853 6932 -9825 0
6853 6934 -9827 0
6853 6936 -9829 0
6853 6938 -9831 0
6853 6940 -9833 0
6853 6942 -9835 0
6855 -9819 0
6855 6927 -9821 0
6855 6928 -9823 0
6855 6930 -9825 0
6855 6932 -9827 0
6855 6934 -9829 0
6855 6936 -9831 0
6855 6938 -9833 0
6855 6940 -9835 0
6855 6942 -9837 0
6857 -9821 0
6857 6927 -9823 0
6857 6928 -9825 0
6857 6930 -9827 0
6857 6932 -9829 0
6857 6934 -9831 0
6857 6936 -9833 0
6857 6938 -9835 0
6857 6940 -9837 0
6857 6942 -9839 0
c (0<=( - aux410 + aux46 + aux51))
-6942 9839 0
-6940 9837 0
-6938 9835 0
-6936 9833 0
-6934 9831 0
-6932 9829 0
-6930 9827 0
-6928 9825 0
-6927 9823 0
-6857 9839 0
-6857 -6942 9837 0
-6857 -6940 9835 0
-6857 -6938 9833 0
-6857 -6936 9831 0
-6857 -6934 9829 0
-6857 -6932 9827 0
-6857 -6930 9825 0
-6857 -6928 9823 0
-6857 -6927 9821 0
-6855 9837 0
-6855 -6942 9835 0
-6855 -6940 9833 0
-6855 -6938 9831 0
-6855 -6936 9829 0
-6855 -6934 9827 0
-6855 -6932 9825 0
-6855 -6930 9823 0
-6855 -6928 9821 0
-6855 -6927 9819 0
-6853 9835 0
-6853 -6942 9833 0
-6853 -6940 9831 0
-6853 -6938 9829 0
-6853 -6936 9827 0
-6853 -6934 9825 0
-6853 -6932 9823 0
-6853 -6930 9821 0
-6853 -6928 9819 0
-6853 -6927 9817 0
-6851 9833 0
-6851 -6942 9831 0
-6851 -6940 9829 0
-6851 -6938 9827 0
-6851 -6936 9825 0
-6851 -6934 9823 0
-6851 -6932 9821 0
-6851 -6930 9819 0
-6851 -6928 9817 0
-6851 -6927 9815 0
-6849 9831 0
-6849 -6942 9829 0
-6849 -6940 9827 0
-6849 -6938 9825 0
-6849 -6936 9823 0
-6849 -6934 9821 0
-6849 -6932 9819 0
-6849 -6930 9817 0
-6849 -6928 9815 0
-6849 -6927 9813 0
-6847 9829 0
-6847 -6942 9827 0
-6847 -6940 9825 0
-6847 -6938 9823 0
-6847 -6936 9821 0
-6847 -6934 9819 0
-6847 -6932 9817 0
-6847 -6930 9815 0
-6847 -6928 9813 0
-6847 -6927 9811 0
-6845 9827 0
-6845 -6942 9825 0
-6845 -6940 9823 0
-6845 -6938 9821 0
-6845 -6936 9819 0
-6845 -6934 9817 0
-6845 -6932 9815 0
-6845 -6930 9813 0
-6845 -6928 9811 0
-6845 -6927 9809 0
-6843 9825 0
-6843 -6942 9823 0
-6843 -6940 9821 0
-6843 -6938 9819 0
-6843 -6936 9817 0
-6843 -6934 9815 0
-6843 -6932 9813 0
-6843 -6930 9811 0
-6843 -6928 9809 0
-6843 -6927 9807 0
-6842 9823 0
-6842 -6942 9821 0
-6842 -6940 9819 0
-6842 -6938 9817 0
-6842 -6936 9815 0
-6842 -6934 9813 0
-6842 -6932 9811 0
-6842 -6930 9809 0
-6842 -6928 9807 0
-6842 -6927 9806 0
c (( - aux411 + aux49 + aux50)<=0)
6910 -9841 0
6911 -9842 0
6913 -9844 0
6915 -9846 0
6917 -9848 0
6919 -9850 0
6921 -9852 0
6923 -9854 0
6925 -9856 0
6893 -9841 0
6893 6910 -9842 0
6893 6911 -9844 0
6893 6913 -9846 0
6893 6915 -9848 0
6893 6917 -9850 0
6893 6919 -9852 0
6893 6921 -9854 0
6893 6923 -9856 0
6893 6925 -9858 0
6894 -9842 0
6894 6910 -9844 0
6894 6911 -9846 0
6894 6913 -9848 0
6894 6915 -9850 0
6894 6917 -9852 0
6894 6919 -9854 0
6894 6921 -9856 0
6894 6923 -9858 0
6894 6925 -9860 0
6896 -9844 0
6896 6910 -9846 0
6896 6911 -9848 0
6896 6913 -9850 0
6896 6915 -9852 0
6896 6917 -9854 0
6896 6919 -9856 0
6896 6921 -9858 0
6896 6923 -9860 0
6896 6925 -9862 0
6898 -9846 0
6898 6910 -9848 0
6898 6911 -9850 0
6898 6913 -9852 0
6898 6915 -9854 0
6898 6917 -9856 0
6898 6919 -9858 0
6898 6921 -9860 0
6898 6923 -9862 0
6898 6925 -9864 0
6900 -9848 0
6900 6910 -9850 0
6900 6911 -9852 0
6900 6913 -9854 0
6900 6915 -9856 0
6900 6917 -9858 0
6900 6919 -9860 0
6900 6921 -9862 0
6900 6923 -9864 0
6900 6925 -9866 0
6902 -9850 0
6902 6910 -9852 0
6902 6911 -9854 0
6902 6913 -9856 0
6902 6915 -9858 0
6902 6917 -9860 0
6902 6919 -9862 0
6902 6921 -9864 0
6902 6923 -9866 0
6902 6925 -9868 0
6904 -9852 0
6904 6910 -9854 0
6904 6911 -9856 0
6904 6913 -9858 0
6904 6915 -9860 0
6904 6917 -9862 0
6904 6919 -9864 0
6904 6921 -9866 0
6904 6923 -9868 0
6904 6925 -9870 0
6906 -9854 0
6906 6910 -9856 0
6906 6911 -9858 0
6906 6913 -9860 0
6906 6915 -9862 0
6906 6917 -9864 0
6906 6919 -9866 0
6906 6921 -9868 0
6906 6923 -9870 0
6906 6925 -9872 0
6908 -9856 0
6908 6910 -9858 0
6908 6911 -9860 0
6908 6913 -9862 0
6908 6915 -9864 0
6908 6917 -9866 0
6908 6919 -9868 0
6908 6921 -9870 0
6908 6923 -9872 0
6908 6925 -9874 0
c (0<=( - aux411 + aux49 + aux50))
-6925 9874 0
-6923 9872 0
-6921 9870 0
-6919 9868 0
-6917 9866 0
-6915 9864 0
-6913 9862 0
-6911 9860 0
-6910 9858 0
-6908 9874 0
-6908 -6925 9872 0
-6908 -6923 9870 0
-6908 -6921 9868 0
-6908 -6919 9866 0
-6908 -6917 9864 0
-6908 -6915 9862 0
-6908 -6913 9860 0
-6908 -6911 9858 0
-6908 -6910 9856 0
-6906 9872 0
-6906 -6925 9870 0
-6906 -6923 9868 0
-6906 -6921 9866 0
-6906 -6919 9864 0
-6906 -6917 9862 0
-6906 -6915 9860 0
-6906 -6913 9858 0
-6906 -6911 9856 0
-6906 -6910 9854 0
-6904 9870 0
-6904 -6925 9868 0
-6904 -6923 9866 0
-6904 -6921 9864 0
-6904 -6919 9862 0
-6904 -6917 9860 0
-6904 -6915 9858 0
-6904 -6913 9856 0
-6904 -6911 9854 0
-6904 -6910 9852 0
-6902 9868 0
-6902 -6925 9866 0
-6902 -6923 9864 0
-6902 -6921 9862 0
-6902 -6919 9860 0
-6902 -6917 9858 0
-6902 -6915 9856 0
-6902 -6913 9854 0
-6902 -6911 9852 0
-6902 -6910 9850 0
-6900 9866 0
-6900 -6925 9864 0
-6900 -6923 9862 0
-6900 -6921 9860 0
-6900 -6919 9858 0
-6900 -6917 9856 0
-6900 -6915 9854 0
-6900 -6913 9852 0
-6900 -6911 9850 0
-6900 -6910 9848 0
-6898 9864 0
-6898 -6925 9862 0
-6898 -6923 9860 0
-6898 -6921 9858 0
-6898 -6919 9856 0
-6898 -6917 9854 0
-6898 -6915 9852 0
-6898 -6913 9850 0
-6898 -6911 9848 0
-6898 -6910 9846 0
-6896 9862 0
-6896 -6925 9860 0
-6896 -6923 9858 0
-6896 -6921 9856 0
-6896 -6919 9854 0
-6896 -6917 9852 0
-6896 -6915 9850 0
-6896 -6913 9848 0
-6896 -6911 9846 0
-6896 -6910 9844 0
-6894 9860 0
-6894 -6925 9858 0
-6894 -6923 9856 0
-6894 -6921 9854 0
-6894 -6919 9852 0
-6894 -6917 9850 0
-6894 -6915 9848 0
-6894 -6913 9846 0
-6894 -6911 9844 0
-6894 -6910 9842 0
-6893 9858 0
-6893 -6925 9856 0
-6893 -6923 9854 0
-6893 -6921 9852 0
-6893 -6919 9850 0
-6893 -6917 9848 0
-6893 -6915 9846 0
-6893 -6913 9844 0
-6893 -6911 9842 0
-6893 -6910 9841 0
c ((aux408 - aux412 + aux47)<=0)
9738 -9876 0
9739 -9877 0
9741 -9879 0
9743 -9881 0
9745 -9883 0
9747 -9885 0
9749 -9887 0
9751 -9889 0
9753 -9891 0
9755 -9893 0
9757 -9895 0
9759 -9897 0
9761 -9899 0
9763 -9901 0
9765 -9903 0
9767 -9905 0
9769 -9907 0
6859 -9876 0
6859 9738 -9877 0
6859 9739 -9879 0
6859 9741 -9881 0
6859 9743 -9883 0
6859 9745 -9885 0
6859 9747 -9887 0
6859 9749 -9889 0
6859 9751 -9891 0
6859 9753 -9893 0
6859 9755 -9895 0
6859 9757 -9897 0
6859 9759 -9899 0
6859 9761 -9901 0
6859 9763 -9903 0
6859 9765 -9905 0
6859 9767 -9907 0
6859 9769 -9909 0
6860 -9877 0
6860 9738 -9879 0
6860 9739 -9881 0
6860 9741 -9883 0
6860 9743 -9885 0
6860 9745 -9887 0
6860 9747 -9889 0
6860 9749 -9891 0
6860 9751 -9893 0
6860 9753 -9895 0
6860 9755 -9897 0
6860 9757 -9899 0
6860 9759 -9901 0
6860 9761 -9903 0
6860 9763 -9905 0
6860 9765 -9907 0
6860 9767 -9909 0
6860 9769 -9911 0
6862 -9879 0
6862 9738 -9881 0
6862 9739 -9883 0
6862 9741 -9885 0
6862 9743 -9887 0
6862 9745 -9889 0
6862 9747 -9891 0
6862 9749 -9893 0
6862 9751 -9895 0
6862 9753 -9897 0
6862 9755 -9899 0
6862 9757 -9901 0
6862 9759 -9903 0
6862 9761 -9905 0
6862 9763 -9907 0
6862 9765 -9909 0
6862 9767 -9911 0
6862 9769 -9913 0
6864 -9881 0
6864 9738 -9883 0
6864 9739 -9885 0
6864 9741 -9887 0
6864 9743 -9889 0
6864 9745 -9891 0
6864 9747 -9893 0
6864 9749 -9895 0
6864 9751 -9897 0
6864 9753 -9899 0
6864 9755 -9901 0
6864 9757 -9903 0
6864 9759 -9905 0
6864 9761 -9907 0
6864 9763 -9909 0
6864 9765 -9911 0
6864 9767 -9913 0
6864 9769 -9915 0
6866 -9883 0
6866 9738 -9885 0
6866 9739 -9887 0
6866 9741 -9889 0
6866 9743 -9891 0
6866 9745 -9893 0
6866 9747 -9895 0
6866 9749 -9897 0
6866 9751 -9899 0
6866 9753 -9901 0
6866 9755 -9903 0
6866 9757 -9905 0
6866 9759 -9907 0
6866 9761 -9909 0
6866 9763 -9911 0
6866 9765 -9913 0
6866 9767 -9915 0
6866 9769 -9917 0
6868 -9885 0
6868 9738 -9887 0
6868 9739 -9889 0
6868 9741 -9891 0
6868 9743 -9893 0
6868 9745 -9895 0
6868 9747 -9897 0
6868 9749 -9899 0
6868 9751 -9901 0
6868 9753 -9903 0
6868 9755 -9905 0
6868 9757 -9907 0
6868 9759 -9909 0
6868 9761 -9911 0
6868 9763 -9913 0
6868 9765 -9915 0
6868 9767 -9917 0
6868 9769 -9919 0
6870 -9887 0
6870 9738 -9889 0
6870 9739 -9891 0
6870 9741 -9893 0
6870 9743 -9895 0
6870 9745 -9897 0
6870 9747 -9899 0
6870 9749 -9901 0
6870 9751 -9903 0
6870 9753 -9905 0
6870 9755 -9907 0
6870 9757 -9909 0
6870 9759 -9911 0
6870 9761 -9913 0
6870 9763 -9915 0
6870 9765 -9917 0
6870 9767 -9919 0
6870 9769 -9921 0
6872 -9889 0
6872 9738 -9891 0
6872 9739 -9893 0
6872 9741 -9895 0
6872 9743 -9897 0
6872 9745 -9899 0
6872 9747 -9901 0
6872 9749 -9903 0
6872 9751 -9905 0
6872 9753 -9907 0
6872 9755 -9909 0
6872 9757 -9911 0
6872 9759 -9913 0
6872 9761 -9915 0
6872 9763 -9917 0
6872 9765 -9919 0
6872 9767 -9921 0
6872 9769 -9923 0
6874 -9891 0
6874 9738 -9893 0
6874 9739 -9895 0
6874 9741 -9897 0
6874 9743 -9899 0
6874 9745 -9901 0
6874 9747 -9903 0
6874 9749 -9905 0
6874 9751 -9907 0
6874 9753 -9909 0
6874 9755 -9911 0
6874 9757 -9913 0
6874 9759 -9915 0
6874 9761 -9917 0
6874 9763 -9919 0
6874 9765 -9921 0
6874 9767 -9923 0
6874 9769 -9925 0
c (0<=(aux408 - aux412 + aux47))
-9769 9925 0
-9767 9923 0
-9765 9921 0
-9763 9919 0
-9761 9917 0
-9759 9915 0
-9757 9913 0
-9755 9911 0
-9753 9909 0
-9751 9907 0
-9749 9905 0
-9747 9903 0
-9745 9901 0
-9743 9899 0
-9741 9897 0
-9739 9895 0
-9738 9893 0
-6874 9925 0
-6874 -9769 9923 0
-6874 -9767 9921 0
-6874 -9765 9919 0
-6874 -9763 9917 0
-6874 -9761 9915 0
-6874 -9759 9913 0
-6874 -9757 9911 0
-6874 -9755 9909 0
-6874 -9753 9907 0
-6874 -9751 9905 0
-6874 -9749 9903 0
-6874 -9747 9901 0
-6874 -9745 9899 0
-6874 -9743 9897 0
-6874 -9741 9895 0
-6874 -9739 9893 0
-6874 -9738 9891 0
-6872 9923 0
-6872 -9769 9921 0
-6872 -9767 9919 0
-6872 -9765 9917 0
-6872 -9763 9915 0
-6872 -9761 9913 0
-6872 -9759 9911 0
-6872 -9757 9909 0
-6872 -9755 9907 0
-6872 -9753 9905 0
-6872 -9751 9903 0
-6872 -9749 9901 0
-6872 -9747 9899 0
-6872 -9745 9897 0
-6872 -9743 9895 0
-6872 -9741 9893 0
-6872 -9739 9891 0
-6872 -9738 9889 0
-6870 9921 0
-6870 -9769 9919 0
-6870 -9767 9917 0
-6870 -9765 9915 0
-6870 -9763 9913 0
-6870 -9761 9911 0
-6870 -9759 9909 0
-6870 -9757 9907 0
-6870 -9755 9905 0
-6870 -9753 9903 0
-6870 -9751 9901 0
-6870 -9749 9899 0
-6870 -9747 9897 0
-6870 -9745 9895 0
-6870 -9743 9893 0
-6870 -9741 9891 0
-6870 -9739 9889 0
-6870 -9738 9887 0
-6868 9919 0
-6868 -9769 9917 0
-6868 -9767 9915 0
-6868 -9765 9913 0
-6868 -9763 9911 0
-6868 -9761 9909 0
-6868 -9759 9907 0
-6868 -9757 9905 0
-6868 -9755 9903 0
-6868 -9753 9901 0
-6868 -9751 9899 0
-6868 -9749 9897 0
-6868 -9747 9895 0
-6868 -9745 9893 0
-6868 -9743 9891 0
-6868 -9741 9889 0
-6868 -9739 9887 0
-6868 -9738 9885 0
-6866 9917 0
-6866 -9769 9915 0
-6866 -9767 9913 0
-6866 -9765 9911 0
-6866 -9763 9909 0
-6866 -9761 9907 0
-6866 -9759 9905 0
-6866 -9757 9903 0
-6866 -9755 9901 0
-6866 -9753 9899 0
-6866 -9751 9897 0
-6866 -9749 9895 0
-6866 -9747 9893 0
-6866 -9745 9891 0
-6866 -9743 9889 0
-6866 -9741 9887 0
-6866 -9739 9885 0
-6866 -9738 9883 0
-6864 9915 0
-6864 -9769 9913 0
-6864 -9767 9911 0
-6864 -9765 9909 0
-6864 -9763 9907 0
-6864 -9761 9905 0
-6864 -9759 9903 0
-6864 -9757 9901 0
-6864 -9755 9899 0
-6864 -9753 9897 0
-6864 -9751 9895 0
-6864 -9749 9893 0
-6864 -9747 9891 0
-6864 -9745 9889 0
-6864 -9743 9887 0
-6864 -9741 9885 0
-6864 -9739 9883 0
-6864 -9738 9881 0
-6862 9913 0
-6862 -9769 9911 0
-6862 -9767 9909 0
-6862 -9765 9907 0
-6862 -9763 9905 0
-6862 -9761 9903 0
-6862 -9759 9901 0
-6862 -9757 9899 0
-6862 -9755 9897 0
-6862 -9753 9895 0
-6862 -9751 9893 0
-6862 -9749 9891 0
-6862 -9747 9889 0
-6862 -9745 9887 0
-6862 -9743 9885 0
-6862 -9741 9883 0
-6862 -9739 9881 0
-6862 -9738 9879 0
-6860 9911 0
-6860 -9769 9909 0
-6860 -9767 9907 0
-6860 -9765 9905 0
-6860 -9763 9903 0
-6860 -9761 9901 0
-6860 -9759 9899 0
-6860 -9757 9897 0
-6860 -9755 9895 0
-6860 -9753 9893 0
-6860 -9751 9891 0
-6860 -9749 9889 0
-6860 -9747 9887 0
-6860 -9745 9885 0
-6860 -9743 9883 0
-6860 -9741 9881 0
-6860 -9739 9879 0
-6860 -9738 9877 0
-6859 9909 0
-6859 -9769 9907 0
-6859 -9767 9905 0
-6859 -9765 9903 0
-6859 -9763 9901 0
-6859 -9761 9899 0
-6859 -9759 9897 0
-6859 -9757 9895 0
-6859 -9755 9893 0
-6859 -9753 9891 0
-6859 -9751 9889 0
-6859 -9749 9887 0
-6859 -9747 9885 0
-6859 -9745 9883 0
-6859 -9743 9881 0
-6859 -9741 9879 0
-6859 -9739 9877 0
-6859 -9738 9876 0
c ((aux410 + aux411 - aux413)<=0)
9841 -9927 0
9842 -9928 0
9844 -9930 0
9846 -9932 0
9848 -9934 0
9850 -9936 0
9852 -9938 0
9854 -9940 0
9856 -9942 0
9858 -9944 0
9860 -9946 0
9862 -9948 0
9864 -9950 0
9866 -9952 0
9868 -9954 0
9870 -9956 0
9872 -9958 0
9874 -9960 0
9806 -9927 0
9806 9841 -9928 0
9806 9842 -9930 0
9806 9844 -9932 0
9806 9846 -9934 0
9806 9848 -9936 0
9806 9850 -9938 0
9806 9852 -9940 0
9806 9854 -9942 0
9806 9856 -9944 0
9806 9858 -9946 0
9806 9860 -9948 0
9806 9862 -9950 0
9806 9864 -9952 0
9806 9866 -9954 0
9806 9868 -9956 0
9806 9870 -9958 0
9806 9872 -9960 0
9806 9874 -9962 0
9807 -9928 0
9807 9841 -9930 0
9807 9842 -9932 0
9807 9844 -9934 0
9807 9846 -9936 0
9807 9848 -9938 0
9807 9850 -9940 0
9807 9852 -9942 0
9807 9854 -9944 0
9807 9856 -9946 0
9807 9858 -9948 0
9807 9860 -9950 0
9807 9862 -9952 0
9807 9864 -9954 0
9807 9866 -9956 0
9807 9868 -9958 0
9807 9870 -9960 0
9807 9872 -9962 0
9807 9874 -9964 0
9809 -9930 0
9809 9841 -9932 0
9809 9842 -9934 0
9809 9844 -9936 0
9809 9846 -9938 0
9809 9848 -9940 0
9809 9850 -9942 0
9809 9852 -9944 0
9809 9854 -9946 0
9809 9856 -9948 0
9809 9858 -9950 0
9809 9860 -9952 0
9809 9862 -9954 0
9809 9864 -9956 0
9809 9866 -9958 0
9809 9868 -9960 0
9809 9870 -9962 0
9809 9872 -9964 0
9809 9874 -9966 0
9811 -9932 0
9811 9841 -9934 0
9811 9842 -9936 0
9811 9844 -9938 0
9811 9846 -9940 0
9811 9848 -9942 0
9811 9850 -9944 0
9811 9852 -9946 0
9811 9854 -9948 0
9811 9856 -9950 0
9811 9858 -9952 0
9811 9860 -9954 0
9811 9862 -9956 0
9811 9864 -9958 0
9811 9866 -9960 0
9811 9868 -9962 0
9811 9870 -9964 0
9811 9872 -9966 0
9811 9874 -9968 0
9813 -9934 0
9813 9841 -9936 0
9813 9842 -9938 0
9813 9844 -9940 0
9813 9846 -9942 0
9813 9848 -9944 0
9813 9850 -9946 0
9813 9852 -9948 0
9813 9854 -9950 0
9813 9856 -9952 0
9813 9858 -9954 0
9813 9860 -9956 0
9813 9862 -9958 0
9813 9864 -9960 0
9813 9866 -9962 0
9813 9868 -9964 0
9813 9870 -9966 0
9813 9872 -9968 0
9813 9874 -9970 0
9815 -9936 0
9815 9841 -9938 0
9815 9842 -9940 0
9815 9844 -9942 0
9815 9846 -9944 0
9815 9848 -9946 0
9815 9850 -9948 0
9815 9852 -9950 0
9815 9854 -9952 0
9815 9856 -9954 0
9815 9858 -9956 0
9815 9860 -9958 0
9815 9862 -9960 0
9815 9864 -9962 0
9815 9866 -9964 0
9815 9868 -9966 0
9815 9870 -9968 0
9815 9872 -9970 0
9815 9874 -9972 0
9817 -9938 0
9817 9841 -9940 0
9817 9842 -9942 0
9817 9844 -9944 0
9817 9846 -9946 0
9817 9848 -9948 0
9817 9850 -9950 0
9817 9852 -9952 0
9817 9854 -9954 0
9817 9856 -9956 0
9817 9858 -9958 0
9817 9860 -9960 0
9817 9862 -9962 0
9817 9864 -9964 0
9817 9866 -9966 0
9817 9868 -9968 0
9817 9870 -9970 0
9817 9872 -9972 0
9817 9874 -9974 0
9819 -9940 0
9819 9841 -9942 0
9819 9842 -9944 0
9819 9844 -9946 0
9819 9846 -9948 0
9819 9848 -9950 0
9819 9850 -9952 0
9819 9852 -9954 0
9819 9854 -9956 0
9819 9856 -9958 0
9819 9858 -9960 0
9819 9860 -9962 0
9819 9862 -9964 0
9819 9864 -9966 0
9819 9866 -9968 0
9819 9868 -9970 0
9819 9870 -9972 0
9819 9872 -9974 0
9819 9874 -9976 0
9821 -9942 0
9821 9841 -9944 0
9821 9842 -9946 0
9821 9844 -9948 0
9821 9846 -9950 0
9821 9848 -9952 0
9821 9850 -9954 0
9821 9852 -9956 0
9821 9854 -9958 0
9821 9856 -9960 0
9821 9858 -9962 0
9821 9860 -9964 0
9821 9862 -9966 0
9821 9864 -9968 0
9821 9866 -9970 0
9821 9868 -9972 0
9821 9870 -9974 0
9821 9872 -9976 0
9821 9874 -9978 0
9823 -9944 0
9823 9841 -9946 0
9823 9842 -9948 0
9823 9844 -9950 0
9823 9846 -9952 0
9823 9848 -9954 0
9823 9850 -9956 0
9823 9852 -9958 0
9823 9854 -9960 0
9823 9856 -9962 0
9823 9858 -9964 0
9823 9860 -9966 0
9823 9862 -9968 0
9823 9864 -9970 0
9823 9866 -9972 0
9823 9868 -9974 0
9823 9870 -9976 0
9823 9872 -9978 0
9823 9874 -9980 0
9825 -9946 0
9825 9841 -9948 0
9825 9842 -9950 0
9825 9844 -9952 0
9825 9846 -9954 0
9825 9848 -9956 0
9825 9850 -9958 0
9825 9852 -9960 0
9825 9854 -9962 0
9825 9856 -9964 0
9825 9858 -9966 0
9825 9860 -9968 0
9825 9862 -9970 0
9825 9864 -9972 0
9825 9866 -9974 0
9825 9868 -9976 0
9825 9870 -9978 0
9825 9872 -9980 0
9825 9874 -9982 0
9827 -9948 0
9827 9841 -9950 0
9827 9842 -9952 0
9827 9844 -9954 0
9827 9846 -9956 0
9827 9848 -9958 0
9827 9850 -9960 0
9827 9852 -9962 0
9827 9854 -9964 0
9827 9856 -9966 0
9827 9858 -9968 0
9827 9860 -9970 0
9827 9862 -9972 0
9827 9864 -9974 0
9827 9866 -9976 0
9827 9868 -9978 0
9827 9870 -9980 0
9827 9872 -9982 0
9827 9874 -9984 0
9829 -9950 0
9829 9841 -9952 0
9829 9842 -9954 0
9829 9844 -9956 0
9829 9846 -9958 0
9829 9848 -9960 0
9829 9850 -9962 0
9829 9852 -9964 0
9829 9854 -9966 0
9829 9856 -9968 0
9829 9858 -9970 0
9829 9860 -9972 0
9829 9862 -9974 0
9829 9864 -9976 0
9829 9866 -9978 0
9829 9868 -9980 0
9829 9870 -9982 0
9829 9872 -9984 0
9829 9874 -9986 0
9831 -9952 0
9831 9841 -9954 0
9831 9842 -9956 0
9831 9844 -9958 0
9831 9846 -9960 0
9831 9848 -9962 0
9831 9850 -9964 0
9831 9852 -9966 0
9831 9854 -9968 0
9831 9856 -9970 0
9831 9858 -9972 0
9831 9860 -9974 0
9831 9862 -9976 0
9831 9864 -9978 0
9831 9866 -9980 0
9831 9868 -9982 0
9831 9870 -9984 0
9831 9872 -9986 0
9831 9874 -9988 0
9833 -9954 0
9833 9841 -9956 0
9833 9842 -9958 0
9833 9844 -9960 0
9833 9846 -9962 0
9833 9848 -9964 0
9833 9850 -9966 0
9833 9852 -9968 0
9833 9854 -9970 0
9833 9856 -9972 0
9833 9858 -9974 0
9833 9860 -9976 0
9833 9862 -9978 0
9833 9864 -9980 0
9833 9866 -9982 0
9833 9868 -9984 0
9833 9870 -9986 0
9833 9872 -9988 0
9833 9874 -9990 0
9835 -9956 0
9835 9841 -9958 0
9835 9842 -9960 0
9835 9844 -9962 0
9835 9846 -9964 0
9835 9848 -9966 0
9835 9850 -9968 0
9835 9852 -9970 0
9835 9854 -9972 0
9835 9856 -9974 0
9835 9858 -9976 0
9835 9860 -9978 0
9835 9862 -9980 0
9835 9864 -9982 0
9835 9866 -9984 0
9835 9868 -9986 0
9835 9870 -9988 0
9835 9872 -9990 0
9835 9874 -9992 0
9837 -9958 0
9837 9841 -9960 0
9837 9842 -9962 0
9837 9844 -9964 0
9837 9846 -9966 0
9837 9848 -9968 0
9837 9850 -9970 0
9837 9852 -9972 0
9837 9854 -9974 0
9837 9856 -9976 0
9837 9858 -9978 0
9837 9860 -9980 0
9837 9862 -9982 0
9837 9864 -9984 0
9837 9866 -9986 0
9837 9868 -9988 0
9837 9870 -9990 0
9837 9872 -9992 0
9837 9874 -9994 0
9839 -9960 0
9839 9841 -9962 0
9839 9842 -9964 0
9839 9844 -9966 0
9839 9846 -9968 0
9839 9848 -9970 0
9839 9850 -9972 0
9839 9852 -9974 0
9839 9854 -9976 0
9839 9856 -9978 0
9839 9858 -9980 0
9839 9860 -9982 0
9839 9862 -9984 0
9839 9864 -9986 0
9839 9866 -9988 0
9839 9868 -9990 0
9839 9870 -9992 0
9839 9872 -9994 0
9839 9874 -9996 0
c (0<=(aux410 + aux411 - aux413))
-9874 9996 0
-9872 9994 0
-9870 9992 0
-9868 9990 0
-9866 9988 0
-9864 9986 0
-9862 9984 0
-9860 9982 0
-9858 9980 0
-9856 9978 0
-9854 9976 0
-9852 9974 0
-9850 9972 0
-9848 9970 0
-9846 9968 0
-9844 9966 0
-9842 9964 0
-9841 9962 0
-9839 9996 0
-9839 -9874 9994 0
-9839 -9872 9992 0
-9839 -9870 9990 0
-9839 -9868 9988 0
-9839 -9866 9986 0
-9839 -9864 9984 0
-9839 -9862 9982 0
-9839 -9860 9980 0
-9839 -9858 9978 0
-9839 -9856 9976 0
-9839 -9854 9974 0
-9839 -9852 9972 0
-9839 -9850 9970 0
-9839 -9848 9968 0
-9839 -9846 9966 0
-9839 -9844 9964 0
-9839 -9842 9962 0
-9839 -9841 9960 0
-9837 9994 0
-9837 -9874 9992 0
-9837 -9872 9990 0
-9837 -9870 9988 0
-9837 -9868 9986 0
-9837 -9866 9984 0
-9837 -9864 9982 0
-9837 -9862 9980 0
-9837 -9860 9978 0
-9837 -9858 9976 0
-9837 -9856 9974 0
-9837 -9854 9972 0
-9837 -9852 9970 0
-9837 -9850 9968 0
-9837 -9848 9966 0
-9837 -9846 9964 0
-9837 -9844 9962 0
-9837 -9842 9960 0
-9837 -9841 9958 0
-9835 9992 0
-9835 -9874 9990 0
-9835 -9872 9988 0
-9835 -9870 9986 0
-9835 -9868 9984 0
-9835 -9866 9982 0
-9835 -9864 9980 0
-9835 -9862 9978 0
-9835 -9860 9976 0
-9835 -9858 9974 0
-9835 -9856 9972 0
-9835 -9854 9970 0
-9835 -9852 9968 0
-9835 -9850 9966 0
-9835 -9848 9964 0
-9835 -9846 9962 0
-9835 -9844 9960 0
-9835 -9842 9958 0
-9835 -9841 9956 0
-9833 9990 0
-9833 -9874 9988 0
-9833 -9872 9986 0
-9833 -9870 9984 0
-9833 -9868 9982 0
-9833 -9866 9980 0
-9833 -9864 9978 0
-9833 -9862 9976 0
-9833 -9860 9974 0
-9833 -9858 9972 0
-9833 -9856 9970 0
-9833 -9854 9968 0
-9833 -9852 9966 0
-9833 -9850 9964 0
-9833 -9848 9962 0
-9833 -9846 9960 0
-9833 -9844 9958 0
-9833 -9842 9956 0
-9833 -9841 9954 0
-9831 9988 0
-9831 -9874 9986 0
-9831 -9872 9984 0
-9831 -9870 9982 0
-9831 -9868 9980 0
-9831 -9866 9978 0
-9831 -9864 9976 0
-9831 -9862 9974 0
-9831 -9860 9972 0
-9831 -9858 9970 0
-9831 -9856 9968 0
-9831 -9854 9966 0
-9831 -9852 9964 0
-9831 -9850 9962 0
-9831 -9848 9960 0
-9831 -9846 9958 0
-9831 -9844 9956 0
-9831 -9842 9954 0
-9831 -9841 9952 0
-9829 9986 0
-9829 -9874 9984 0
-9829 -9872 9982 0
-9829 -9870 9980 0
-9829 -9868 9978 0
-9829 -9866 9976 0
-9829 -9864 9974 0
-9829 -9862 9972 0
-9829 -9860 9970 0
-9829 -9858 9968 0
-9829 -9856 9966 0
-9829 -9854 9964 0
-9829 -9852 9962 0
-9829 -9850 9960 0
-9829 -9848 9958 0
-9829 -9846 9956 0
-9829 -9844 9954 0
-9829 -9842 9952 0
-9829 -9841 9950 0
-9827 9984 0
-9827 -9874 9982 0
-9827 -9872 9980 0
-9827 -9870 9978 0
-9827 -9868 9976 0
-9827 -9866 9974 0
-9827 -9864 9972 0
-9827 -9862 9970 0
-9827 -9860 9968 0
-9827 -9858 9966 0
-9827 -9856 9964 0
-9827 -9854 9962 0
-9827 -9852 9960 0
-9827 -9850 9958 0
-9827 -9848 9956 0
-9827 -9846 9954 0
-9827 -9844 9952 0
-9827 -9842 9950 0
-9827 -9841 9948 0
-9825 9982 0
-9825 -9874 9980 0
-9825 -9872 9978 0
-9825 -9870 9976 0
-9825 -9868 9974 0
-9825 -9866 9972 0
-9825 -9864 9970 0
-9825 -9862 9968 0
-9825 -9860 9966 0
-9825 -9858 9964 0
-9825 -9856 9962 0
-9825 -9854 9960 0
-9825 -9852 9958 0
-9825 -9850 9956 0
-9825 -9848 9954 0
-9825 -9846 9952 0
-9825 -9844 9950 0
-9825 -9842 9948 0
-9825 -9841 9946 0
-9823 9980 0
-9823 -9874 9978 0
-9823 -9872 9976 0
-9823 -9870 9974 0
-9823 -9868 9972 0
-9823 -9866 9970 0
-9823 -9864 9968 0
-9823 -9862 9966 0
-9823 -9860 9964 0
-9823 -9858 9962 0
-9823 -9856 9960 0
-9823 -9854 9958 0
-9823 -9852 9956 0
-9823 -9850 9954 0
-9823 -9848 9952 0
-9823 -9846 9950 0
-9823 -9844 9948 0
-9823 -9842 9946 0
-9823 -9841 9944 0
-9821 9978 0
-9821 -9874 9976 0
-9821 -9872 9974 0
-9821 -9870 9972 0
-9821 -9868 9970 0
-9821 -9866 9968 0
-9821 -9864 9966 0
-9821 -9862 9964 0
-9821 -9860 9962 0
-9821 -9858 9960 0
-9821 -9856 9958 0
-9821 -9854 9956 0
-9821 -9852 9954 0
-9821 -9850 9952 0
-9821 -9848 9950 0
-9821 -9846 9948 0
-9821 -9844 9946 0
-9821 -9842 9944 0
-9821 -9841 9942 0
-9819 9976 0
-9819 -9874 9974 0
-9819 -9872 9972 0
-9819 -9870 9970 0
-9819 -9868 9968 0
-9819 -9866 9966 0
-9819 -9864 9964 0
-9819 -9862 9962 0
-9819 -9860 9960 0
-9819 -9858 9958 0
-9819 -9856 9956 0
-9819 -9854 9954 0
-9819 -9852 9952 0
-9819 -9850 9950 0
-9819 -9848 9948 0
-9819 -9846 9946 0
-9819 -9844 9944 0
-9819 -9842 9942 0
-9819 -9841 9940 0
-9817 9974 0
-9817 -9874 9972 0
-9817 -9872 9970 0
-9817 -9870 9968 0
-9817 -9868 9966 0
-9817 -9866 9964 0
-9817 -9864 9962 0
-9817 -9862 9960 0
-9817 -9860 9958 0
-9817 -9858 9956 0
-9817 -9856 9954 0
-9817 -9854 9952 0
-9817 -9852 9950 0
-9817 -9850 9948 0
-9817 -9848 9946 0
-9817 -9846 9944 0
-9817 -9844 9942 0
-9817 -9842 9940 0
-9817 -9841 9938 0
-9815 9972 0
-9815 -9874 9970 0
-9815 -9872 9968 0
-9815 -9870 9966 0
-9815 -9868 9964 0
-9815 -9866 9962 0
-9815 -9864 9960 0
-9815 -9862 9958 0
-9815 -9860 9956 0
-9815 -9858 9954 0
-9815 -9856 9952 0
-9815 -9854 9950 0
-9815 -9852 9948 0
-9815 -9850 9946 0
-9815 -9848 9944 0
-9815 -9846 9942 0
-9815 -9844 9940 0
-9815 -9842 9938 0
-9815 -9841 9936 0
-9813 9970 0
-9813 -9874 9968 0
-9813 -9872 9966 0
-9813 -9870 9964 0
-9813 -9868 9962 0
-9813 -9866 9960 0
-9813 -9864 9958 0
-9813 -9862 9956 0
-9813 -9860 9954 0
-9813 -9858 9952 0
-9813 -9856 9950 0
-9813 -9854 9948 0
-9813 -9852 9946 0
-9813 -9850 9944 0
-9813 -9848 9942 0
-9813 -9846 9940 0
-9813 -9844 9938 0
-9813 -9842 9936 0
-9813 -9841 9934 0
-9811 9968 0
-9811 -9874 9966 0
-9811 -9872 9964 0
-9811 -9870 9962 0
-9811 -9868 9960 0
-9811 -9866 9958 0
-9811 -9864 9956 0
-9811 -9862 9954 0
-9811 -9860 9952 0
-9811 -9858 9950 0
-9811 -9856 9948 0
-9811 -9854 9946 0
-9811 -9852 9944 0
-9811 -9850 9942 0
-9811 -9848 9940 0
-9811 -9846 9938 0
-9811 -9844 9936 0
-9811 -9842 9934 0
-9811 -9841 9932 0
-9809 9966 0
-9809 -9874 9964 0
-9809 -9872 9962 0
-9809 -9870 9960 0
-9809 -9868 9958 0
-9809 -9866 9956 0
-9809 -9864 9954 0
-9809 -9862 9952 0
-9809 -9860 9950 0
-9809 -9858 9948 0
-9809 -9856 9946 0
-9809 -9854 9944 0
-9809 -9852 9942 0
-9809 -9850 9940 0
-9809 -9848 9938 0
-9809 -9846 9936 0
-9809 -9844 9934 0
-9809 -9842 9932 0
-9809 -9841 9930 0
-9807 9964 0
-9807 -9874 9962 0
-9807 -9872 9960 0
-9807 -9870 9958 0
-9807 -9868 9956 0
-9807 -9866 9954 0
-9807 -9864 9952 0
-9807 -9862 9950 0
-9807 -9860 9948 0
-9807 -9858 9946 0
-9807 -9856 9944 0
-9807 -9854 9942 0
-9807 -9852 9940 0
-9807 -9850 9938 0
-9807 -9848 9936 0
-9807 -9846 9934 0
-9807 -9844 9932 0
-9807 -9842 9930 0
-9807 -9841 9928 0
-9806 9962 0
-9806 -9874 9960 0
-9806 -9872 9958 0
-9806 -9870 9956 0
-9806 -9868 9954 0
-9806 -9866 9952 0
-9806 -9864 9950 0
-9806 -9862 9948 0
-9806 -9860 9946 0
-9806 -9858 9944 0
-9806 -9856 9942 0
-9806 -9854 9940 0
-9806 -9852 9938 0
-9806 -9850 9936 0
-9806 -9848 9934 0
-9806 -9846 9932 0
-9806 -9844 9930 0
-9806 -9842 9928 0
-9806 -9841 9927 0
c (( - aux414 + shift(variant_fields_00002_00006_00001, -1) + aux61)<=0)
7081 -9998 0
7082 -9999 0
7084 -10001 0
7086 -10003 0
7088 -10005 0
7090 -10007 0
7092 -10009 0
7094 -10011 0
7096 -10013 0
3107 -9998 0
3107 7081 -9999 0
3107 7082 -10001 0
3107 7084 -10003 0
3107 7086 -10005 0
3107 7088 -10007 0
3107 7090 -10009 0
3107 7092 -10011 0
3107 7094 -10013 0
3107 7096 -10015 0
3108 -9999 0
3108 7081 -10001 0
3108 7082 -10003 0
3108 7084 -10005 0
3108 7086 -10007 0
3108 7088 -10009 0
3108 7090 -10011 0
3108 7092 -10013 0
3108 7094 -10015 0
3108 7096 -10017 0
3110 -10001 0
3110 7081 -10003 0
3110 7082 -10005 0
3110 7084 -10007 0
3110 7086 -10009 0
3110 7088 -10011 0
3110 7090 -10013 0
3110 7092 -10015 0
3110 7094 -10017 0
3110 7096 -10019 0
3112 -10003 0
3112 7081 -10005 0
3112 7082 -10007 0
3112 7084 -10009 0
3112 7086 -10011 0
3112 7088 -10013 0
3112 7090 -10015 0
3112 7092 -10017 0
3112 7094 -10019 0
3112 7096 -10021 0
3114 -10005 0
3114 7081 -10007 0
3114 7082 -10009 0
3114 7084 -10011 0
3114 7086 -10013 0
3114 7088 -10015 0
3114 7090 -10017 0
3114 7092 -10019 0
3114 7094 -10021 0
3114 7096 -10023 0
3116 -10007 0
3116 7081 -10009 0
3116 7082 -10011 0
3116 7084 -10013 0
3116 7086 -10015 0
3116 7088 -10017 0
3116 7090 -10019 0
3116 7092 -10021 0
3116 7094 -10023 0
3116 7096 -10025 0
3118 -10009 0
3118 7081 -10011 0
3118 7082 -10013 0
3118 7084 -10015 0
3118 7086 -10017 0
3118 7088 -10019 0
3118 7090 -10021 0
3118 7092 -10023 0
3118 7094 -10025 0
3118 7096 -10027 0
3120 -10011 0
3120 7081 -10013 0
3120 7082 -10015 0
3120 7084 -10017 0
3120 7086 -10019 0
3120 7088 -10021 0
3120 7090 -10023 0
3120 7092 -10025 0
3120 7094 -10027 0
3120 7096 -10029 0
c (0<=( - aux414 + shift(variant_fields_00002_00006_00001, -1) + aux61))
-7096 10029 0
-7094 10027 0
-7092 10025 0
-7090 10023 0
-7088 10021 0
-7086 10019 0
-7084 10017 0
-7082 10015 0
-7081 10013 0
-3120 10029 0
-3120 -7096 10027 0
-3120 -7094 10025 0
-3120 -7092 10023 0
-3120 -7090 10021 0
-3120 -7088 10019 0
-3120 -7086 10017 0
-3120 -7084 10015 0
-3120 -7082 10013 0
-3120 -7081 10011 0
-3118 10027 0
-3118 -7096 10025 0
-3118 -7094 10023 0
-3118 -7092 10021 0
-3118 -7090 10019 0
-3118 -7088 10017 0
-3118 -7086 10015 0
-3118 -7084 10013 0
-3118 -7082 10011 0
-3118 -7081 10009 0
-3116 10025 0
-3116 -7096 10023 0
-3116 -7094 10021 0
-3116 -7092 10019 0
-3116 -7090 10017 0
-3116 -7088 10015 0
-3116 -7086 10013 0
-3116 -7084 10011 0
-3116 -7082 10009 0
-3116 -7081 10007 0
-3114 10023 0
-3114 -7096 10021 0
-3114 -7094 10019 0
-3114 -7092 10017 0
-3114 -7090 10015 0
-3114 -7088 10013 0
-3114 -7086 10011 0
-3114 -7084 10009 0
-3114 -7082 10007 0
-3114 -7081 10005 0
-3112 10021 0
-3112 -7096 10019 0
-3112 -7094 10017 0
-3112 -7092 10015 0
-3112 -7090 10013 0
-3112 -7088 10011 0
-3112 -7086 10009 0
-3112 -7084 10007 0
-3112 -7082 10005 0
-3112 -7081 10003 0
-3110 10019 0
-3110 -7096 10017 0
-3110 -7094 10015 0
-3110 -7092 10013 0
-3110 -7090 10011 0
-3110 -7088 10009 0
-3110 -7086 10007 0
-3110 -7084 10005 0
-3110 -7082 10003 0
-3110 -7081 10001 0
-3108 10017 0
-3108 -7096 10015 0
-3108 -7094 10013 0
-3108 -7092 10011 0
-3108 -7090 10009 0
-3108 -7088 10007 0
-3108 -7086 10005 0
-3108 -7084 10003 0
-3108 -7082 10001 0
-3108 -7081 9999 0
-3107 10015 0
-3107 -7096 10013 0
-3107 -7094 10011 0
-3107 -7092 10009 0
-3107 -7090 10007 0
-3107 -7088 10005 0
-3107 -7086 10003 0
-3107 -7084 10001 0
-3107 -7082 9999 0
-3107 -7081 9998 0
c (( - aux415 + aux54 + aux60)<=0)
7064 -10031 0
7065 -10032 0
7067 -10034 0
7069 -10036 0
7071 -10038 0
7073 -10040 0
7075 -10042 0
7077 -10044 0
7079 -10046 0
6962 -10031 0
6962 7064 -10032 0
6962 7065 -10034 0
6962 7067 -10036 0
6962 7069 -10038 0
6962 7071 -10040 0
6962 7073 -10042 0
6962 7075 -10044 0
6962 7077 -10046 0
6962 7079 -10048 0
6963 -10032 0
6963 7064 -10034 0
6963 7065 -10036 0
6963 7067 -10038 0
6963 7069 -10040 0
6963 7071 -10042 0
6963 7073 -10044 0
6963 7075 -10046 0
6963 7077 -10048 0
6963 7079 -10050 0
6965 -10034 0
6965 7064 -10036 0
6965 7065 -10038 0
6965 7067 -10040 0
6965 7069 -10042 0
6965 7071 -10044 0
6965 7073 -10046 0
6965 7075 -10048 0
6965 7077 -10050 0
6965 7079 -10052 0
6967 -10036 0
6967 7064 -10038 0
6967 7065 -10040 0
6967 7067 -10042 0
6967 7069 -10044 0
6967 7071 -10046 0
6967 7073 -10048 0
6967 7075 -10050 0
6967 7077 -10052 0
6967 7079 -10054 0
6969 -10038 0
6969 7064 -10040 0
6969 7065 -10042 0
6969 7067 -10044 0
6969 7069 -10046 0
6969 7071 -10048 0
6969 7073 -10050 0
6969 7075 -10052 0
6969 7077 -10054 0
6969 7079 -10056 0
6971 -10040 0
6971 7064 -10042 0
6971 7065 -10044 0
6971 7067 -10046 0
6971 7069 -10048 0
6971 7071 -10050 0
6971 7073 -10052 0
6971 7075 -10054 0
6971 7077 -10056 0
6971 7079 -10058 0
6973 -10042 0
6973 7064 -10044 0
6973 7065 -10046 0
6973 7067 -10048 0
6973 7069 -10050 0
6973 7071 -10052 0
6973 7073 -10054 0
6973 7075 -10056 0
6973 7077 -10058 0
6973 7079 -10060 0
6975 -10044 0
6975 7064 -10046 0
6975 7065 -10048 0
6975 7067 -10050 0
6975 7069 -10052 0
6975 7071 -10054 0
6975 7073 -10056 0
6975 7075 -10058 0
6975 7077 -10060 0
6975 7079 -10062 0
6977 -10046 0
6977 7064 -10048 0
6977 7065 -10050 0
6977 7067 -10052 0
6977 7069 -10054 0
6977 7071 -10056 0
6977 7073 -10058 0
6977 7075 -10060 0
6977 7077 -10062 0
6977 7079 -10064 0
c (0<=( - aux415 + aux54 + aux60))
-7079 10064 0
-7077 10062 0
-7075 10060 0
-7073 10058 0
-7071 10056 0
-7069 10054 0
-7067 10052 0
-7065 10050 0
-7064 10048 0
-6977 10064 0
-6977 -7079 10062 0
-6977 -7077 10060 0
-6977 -7075 10058 0
-6977 -7073 10056 0
-6977 -7071 10054 0
-6977 -7069 10052 0
-6977 -7067 10050 0
-6977 -7065 10048 0
-6977 -7064 10046 0
-6975 10062 0
-6975 -7079 10060 0
-6975 -7077 10058 0
-6975 -7075 10056 0
-6975 -7073 10054 0
-6975 -7071 10052 0
-6975 -7069 10050 0
-6975 -7067 10048 0
-6975 -7065 10046 0
-6975 -7064 10044 0
-6973 10060 0
-6973 -7079 10058 0
-6973 -7077 10056 0
-6973 -7075 10054 0
-6973 -7073 10052 0
-6973 -7071 10050 0
-6973 -7069 10048 0
-6973 -7067 10046 0
-6973 -7065 10044 0
-6973 -7064 10042 0
-6971 10058 0
-6971 -7079 10056 0
-6971 -7077 10054 0
-6971 -7075 10052 0
-6971 -7073 10050 0
-6971 -7071 10048 0
-6971 -7069 10046 0
-6971 -7067 10044 0
-6971 -7065 10042 0
-6971 -7064 10040 0
-6969 10056 0
-6969 -7079 10054 0
-6969 -7077 10052 0
-6969 -7075 10050 0
-6969 -7073 10048 0
-6969 -7071 10046 0
-6969 -7069 10044 0
-6969 -7067 10042 0
-6969 -7065 10040 0
-6969 -7064 10038 0
-6967 10054 0
-6967 -7079 10052 0
-6967 -7077 10050 0
-6967 -7075 10048 0
-6967 -7073 10046 0
-6967 -7071 10044 0
-6967 -7069 10042 0
-6967 -7067 10040 0
-6967 -7065 10038 0
-6967 -7064 10036 0
-6965 10052 0
-6965 -7079 10050 0
-6965 -7077 10048 0
-6965 -7075 10046 0
-6965 -7073 10044 0
-6965 -7071 10042 0
-6965 -7069 10040 0
-6965 -7067 10038 0
-6965 -7065 10036 0
-6965 -7064 10034 0
-6963 10050 0
-6963 -7079 10048 0
-6963 -7077 10046 0
-6963 -7075 10044 0
-6963 -7073 10042 0
-6963 -7071 10040 0
-6963 -7069 10038 0
-6963 -7067 10036 0
-6963 -7065 10034 0
-6963 -7064 10032 0
-6962 10048 0
-6962 -7079 10046 0
-6962 -7077 10044 0
-6962 -7075 10042 0
-6962 -7073 10040 0
-6962 -7071 10038 0
-6962 -7069 10036 0
-6962 -7067 10034 0
-6962 -7065 10032 0
-6962 -7064 10031 0
c (( - aux416 + aux56 + aux59)<=0)
7047 -10066 0
7048 -10067 0
7050 -10069 0
7052 -10071 0
7054 -10073 0
7056 -10075 0
7058 -10077 0
7060 -10079 0
7062 -10081 0
6996 -10066 0
6996 7047 -10067 0
6996 7048 -10069 0
6996 7050 -10071 0
6996 7052 -10073 0
6996 7054 -10075 0
6996 7056 -10077 0
6996 7058 -10079 0
6996 7060 -10081 0
6996 7062 -10083 0
6997 -10067 0
6997 7047 -10069 0
6997 7048 -10071 0
6997 7050 -10073 0
6997 7052 -10075 0
6997 7054 -10077 0
6997 7056 -10079 0
6997 7058 -10081 0
6997 7060 -10083 0
6997 7062 -10085 0
6999 -10069 0
6999 7047 -10071 0
6999 7048 -10073 0
6999 7050 -10075 0
6999 7052 -10077 0
6999 7054 -10079 0
6999 7056 -10081 0
6999 7058 -10083 0
6999 7060 -10085 0
6999 7062 -10087 0
7001 -10071 0
7001 7047 -10073 0
7001 7048 -10075 0
7001 7050 -10077 0
7001 7052 -10079 0
7001 7054 -10081 0
7001 7056 -10083 0
7001 7058 -10085 0
7001 7060 -10087 0
7001 7062 -10089 0
7003 -10073 0
7003 7047 -10075 0
7003 7048 -10077 0
7003 7050 -10079 0
7003 7052 -10081 0
7003 7054 -10083 0
7003 7056 -10085 0
7003 7058 -10087 0
7003 7060 -10089 0
7003 7062 -10091 0
7005 -10075 0
7005 7047 -10077 0
7005 7048 -10079 0
7005 7050 -10081 0
7005 7052 -10083 0
7005 7054 -10085 0
7005 7056 -10087 0
7005 7058 -10089 0
7005 7060 -10091 0
7005 7062 -10093 0
7007 -10077 0
7007 7047 -10079 0
7007 7048 -10081 0
7007 7050 -10083 0
7007 7052 -10085 0
7007 7054 -10087 0
7007 7056 -10089 0
7007 7058 -10091 0
7007 7060 -10093 0
7007 7062 -10095 0
7009 -10079 0
7009 7047 -10081 0
7009 7048 -10083 0
7009 7050 -10085 0
7009 7052 -10087 0
7009 7054 -10089 0
7009 7056 -10091 0
7009 7058 -10093 0
7009 7060 -10095 0
7009 7062 -10097 0
7011 -10081 0
7011 7047 -10083 0
7011 7048 -10085 0
7011 7050 -10087 0
7011 7052 -10089 0
7011 7054 -10091 0
7011 7056 -10093 0
7011 7058 -10095 0
7011 7060 -10097 0
7011 7062 -10099 0
c (0<=( - aux416 + aux56 + aux59))
-7062 10099 0
-7060 10097 0
-7058 10095 0
-7056 10093 0
-7054 10091 0
-7052 10089 0
-7050 10087 0
-7048 10085 0
-7047 10083 0
-7011 10099 0
-7011 -7062 10097 0
-7011 -7060 10095 0
-7011 -7058 10093 0
-7011 -7056 10091 0
-7011 -7054 10089 0
-7011 -7052 10087 0
-7011 -7050 10085 0
-7011 -7048 10083 0
-7011 -7047 10081 0
-7009 10097 0
-7009 -7062 10095 0
-7009 -7060 10093 0
-7009 -7058 10091 0
-7009 -7056 10089 0
-7009 -7054 10087 0
-7009 -7052 10085 0
-7009 -7050 10083 0
-7009 -7048 10081 0
-7009 -7047 10079 0
-7007 10095 0
-7007 -7062 10093 0
-7007 -7060 10091 0
-7007 -7058 10089 0
-7007 -7056 10087 0
-7007 -7054 10085 0
-7007 -7052 10083 0
-7007 -7050 10081 0
-7007 -7048 10079 0
-7007 -7047 10077 0
-7005 10093 0
-7005 -7062 10091 0
-7005 -7060 10089 0
-7005 -7058 10087 0
-7005 -7056 10085 0
-7005 -7054 10083 0
-7005 -7052 10081 0
-7005 -7050 10079 0
-7005 -7048 10077 0
-7005 -7047 10075 0
-7003 10091 0
-7003 -7062 10089 0
-7003 -7060 10087 0
-7003 -7058 10085 0
-7003 -7056 10083 0
-7003 -7054 10081 0
-7003 -7052 10079 0
-7003 -7050 10077 0
-7003 -7048 10075 0
-7003 -7047 10073 0
-7001 10089 0
-7001 -7062 10087 0
-7001 -7060 10085 0
-7001 -7058 10083 0
-7001 -7056 10081 0
-7001 -7054 10079 0
-7001 -7052 10077 0
-7001 -7050 10075 0
-7001 -7048 10073 0
-7001 -7047 10071 0
-6999 10087 0
-6999 -7062 10085 0
-6999 -7060 10083 0
-6999 -7058 10081 0
-6999 -7056 10079 0
-6999 -7054 10077 0
-6999 -7052 10075 0
-6999 -7050 10073 0
-6999 -7048 10071 0
-6999 -7047 10069 0
-6997 10085 0
-6997 -7062 10083 0
-6997 -7060 10081 0
-6997 -7058 10079 0
-6997 -7056 10077 0
-6997 -7054 10075 0
-6997 -7052 10073 0
-6997 -7050 10071 0
-6997 -7048 10069 0
-6997 -7047 10067 0
-6996 10083 0
-6996 -7062 10081 0
-6996 -7060 10079 0
-6996 -7058 10077 0
-6996 -7056 10075 0
-6996 -7054 10073 0
-6996 -7052 10071 0
-6996 -7050 10069 0
-6996 -7048 10067 0
-6996 -7047 10066 0
c (( - aux417 + aux57 + aux58)<=0)
7030 -10101 0
7031 -10102 0
7033 -10104 0
7035 -10106 0
7037 -10108 0
7039 -10110 0
7041 -10112 0
7043 -10114 0
7045 -10116 0
7013 -10101 0
7013 7030 -10102 0
7013 7031 -10104 0
7013 7033 -10106 0
7013 7035 -10108 0
7013 7037 -10110 0
7013 7039 -10112 0
7013 7041 -10114 0
7013 7043 -10116 0
7013 7045 -10118 0
7014 -10102 0
7014 7030 -10104 0
7014 7031 -10106 0
7014 7033 -10108 0
7014 7035 -10110 0
7014 7037 -10112 0
7014 7039 -10114 0
7014 7041 -10116 0
7014 7043 -10118 0
7014 7045 -10120 0
7016 -10104 0
7016 7030 -10106 0
7016 7031 -10108 0
7016 7033 -10110 0
7016 7035 -10112 0
7016 7037 -10114 0
7016 7039 -10116 0
7016 7041 -10118 0
7016 7043 -10120 0
7016 7045 -10122 0
7018 -10106 0
7018 7030 -10108 0
7018 7031 -10110 0
7018 7033 -10112 0
7018 7035 -10114 0
7018 7037 -10116 0
7018 7039 -10118 0
7018 7041 -10120 0
7018 7043 -10122 0
7018 7045 -10124 0
7020 -10108 0
7020 7030 -10110 0
7020 7031 -10112 0
7020 7033 -10114 0
7020 7035 -10116 0
7020 7037 -10118 0
7020 7039 -10120 0
7020 7041 -10122 0
7020 7043 -10124 0
7020 7045 -10126 0
7022 -10110 0
7022 7030 -10112 0
7022 7031 -10114 0
7022 7033 -10116 0
7022 7035 -10118 0
7022 7037 -10120 0
7022 7039 -10122 0
7022 7041 -10124 0
7022 7043 -10126 0
7022 7045 -10128 0
7024 -10112 0
7024 7030 -10114 0
7024 7031 -10116 0
7024 7033 -10118 0
7024 7035 -10120 0
7024 7037 -10122 0
7024 7039 -10124 0
7024 7041 -10126 0
7024 7043 -10128 0
7024 7045 -10130 0
7026 -10114 0
7026 7030 -10116 0
7026 7031 -10118 0
7026 7033 -10120 0
7026 7035 -10122 0
7026 7037 -10124 0
7026 7039 -10126 0
7026 7041 -10128 0
7026 7043 -10130 0
7026 7045 -10132 0
7028 -10116 0
7028 7030 -10118 0
7028 7031 -10120 0
7028 7033 -10122 0
7028 7035 -10124 0
7028 7037 -10126 0
7028 7039 -10128 0
7028 7041 -10130 0
7028 7043 -10132 0
7028 7045 -10134 0
c (0<=( - aux417 + aux57 + aux58))
-7045 10134 0
-7043 10132 0
-7041 10130 0
-7039 10128 0
-7037 10126 0
-7035 10124 0
-7033 10122 0
-7031 10120 0
-7030 10118 0
-7028 10134 0
-7028 -7045 10132 0
-7028 -7043 10130 0
-7028 -7041 10128 0
-7028 -7039 10126 0
-7028 -7037 10124 0
-7028 -7035 10122 0
-7028 -7033 10120 0
-7028 -7031 10118 0
-7028 -7030 10116 0
-7026 10132 0
-7026 -7045 10130 0
-7026 -7043 10128 0
-7026 -7041 10126 0
-7026 -7039 10124 0
-7026 -7037 10122 0
-7026 -7035 10120 0
-7026 -7033 10118 0
-7026 -7031 10116 0
-7026 -7030 10114 0
-7024 10130 0
-7024 -7045 10128 0
-7024 -7043 10126 0
-7024 -7041 10124 0
-7024 -7039 10122 0
-7024 -7037 10120 0
-7024 -7035 10118 0
-7024 -7033 10116 0
-7024 -7031 10114 0
-7024 -7030 10112 0
-7022 10128 0
-7022 -7045 10126 0
-7022 -7043 10124 0
-7022 -7041 10122 0
-7022 -7039 10120 0
-7022 -7037 10118 0
-7022 -7035 10116 0
-7022 -7033 10114 0
-7022 -7031 10112 0
-7022 -7030 10110 0
-7020 10126 0
-7020 -7045 10124 0
-7020 -7043 10122 0
-7020 -7041 10120 0
-7020 -7039 10118 0
-7020 -7037 10116 0
-7020 -7035 10114 0
-7020 -7033 10112 0
-7020 -7031 10110 0
-7020 -7030 10108 0
-7018 10124 0
-7018 -7045 10122 0
-7018 -7043 10120 0
-7018 -7041 10118 0
-7018 -7039 10116 0
-7018 -7037 10114 0
-7018 -7035 10112 0
-7018 -7033 10110 0
-7018 -7031 10108 0
-7018 -7030 10106 0
-7016 10122 0
-7016 -7045 10120 0
-7016 -7043 10118 0
-7016 -7041 10116 0
-7016 -7039 10114 0
-7016 -7037 10112 0
-7016 -7035 10110 0
-7016 -7033 10108 0
-7016 -7031 10106 0
-7016 -7030 10104 0
-7014 10120 0
-7014 -7045 10118 0
-7014 -7043 10116 0
-7014 -7041 10114 0
-7014 -7039 10112 0
-7014 -7037 10110 0
-7014 -7035 10108 0
-7014 -7033 10106 0
-7014 -7031 10104 0
-7014 -7030 10102 0
-7013 10118 0
-7013 -7045 10116 0
-7013 -7043 10114 0
-7013 -7041 10112 0
-7013 -7039 10110 0
-7013 -7037 10108 0
-7013 -7035 10106 0
-7013 -7033 10104 0
-7013 -7031 10102 0
-7013 -7030 10101 0
c ((aux414 - aux418 + aux55)<=0)
9998 -10136 0
9999 -10137 0
10001 -10139 0
10003 -10141 0
10005 -10143 0
10007 -10145 0
10009 -10147 0
10011 -10149 0
10013 -10151 0
10015 -10153 0
10017 -10155 0
10019 -10157 0
10021 -10159 0
10023 -10161 0
10025 -10163 0
10027 -10165 0
10029 -10167 0
6979 -10136 0
6979 9998 -10137 0
6979 9999 -10139 0
6979 10001 -10141 0
6979 10003 -10143 0
6979 10005 -10145 0
6979 10007 -10147 0
6979 10009 -10149 0
6979 10011 -10151 0
6979 10013 -10153 0
6979 10015 -10155 0
6979 10017 -10157 0
6979 10019 -10159 0
6979 10021 -10161 0
6979 10023 -10163 0
6979 10025 -10165 0
6979 10027 -10167 0
6979 10029 -10169 0
6980 -10137 0
6980 9998 -10139 0
6980 9999 -10141 0
6980 10001 -10143 0
6980 10003 -10145 0
6980 10005 -10147 0
6980 10007 -10149 0
6980 10009 -10151 0
6980 10011 -10153 0
6980 10013 -10155 0
6980 10015 -10157 0
6980 10017 -10159 0
6980 10019 -10161 0
6980 10021 -10163 0
6980 10023 -10165 0
6980 10025 -10167 0
6980 10027 -10169 0
6980 10029 -10171 0
6982 -10139 0
6982 9998 -10141 0
6982 9999 -10143 0
6982 10001 -10145 0
6982 10003 -10147 0
6982 10005 -10149 0
6982 10007 -10151 0
6982 10009 -10153 0
6982 10011 -10155 0
6982 10013 -10157 0
6982 10015 -10159 0
6982 10017 -10161 0
6982 10019 -10163 0
6982 10021 -10165 0
6982 10023 -10167 0
6982 10025 -10169 0
6982 10027 -10171 0
6982 10029 -10173 0
6984 -10141 0
6984 9998 -10143 0
6984 9999 -10145 0
6984 10001 -10147 0
6984 10003 -10149 0
6984 10005 -10151 0
6984 10007 -10153 0
6984 10009 -10155 0
6984 10011 -10157 0
6984 10013 -10159 0
6984 10015 -10161 0
6984 10017 -10163 0
6984 10019 -10165 0
6984 10021 -10167 0
6984 10023 -10169 0
6984 10025 -10171 0
6984 10027 -10173 0
6984 10029 -10175 0
6986 -10143 0
6986 9998 -10145 0
6986 9999 -10147 0
6986 10001 -10149 0
6986 10003 -10151 0
6986 10005 -10153 0
6986 10007 -10155 0
6986 10009 -10157 0
6986 10011 -10159 0
6986 10013 -10161 0
6986 10015 -10163 0
6986 10017 -10165 0
6986 10019 -10167 0
6986 10021 -10169 0
6986 10023 -10171 0
6986 10025 -10173 0
6986 10027 -10175 0
6986 10029 -10177 0
6988 -10145 0
6988 9998 -10147 0
6988 9999 -10149 0
6988 10001 -10151 0
6988 10003 -10153 0
6988 10005 -10155 0
6988 10007 -10157 0
6988 10009 -10159 0
6988 10011 -10161 0
6988 10013 -10163 0
6988 10015 -10165 0
6988 10017 -10167 0
6988 10019 -10169 0
6988 10021 -10171 0
6988 10023 -10173 0
6988 10025 -10175 0
6988 10027 -10177 0
6988 10029 -10179 0
6990 -10147 0
6990 9998 -10149 0
6990 9999 -10151 0
6990 10001 -10153 0
6990 10003 -10155 0
6990 10005 -10157 0
6990 10007 -10159 0
6990 10009 -10161 0
6990 10011 -10163 0
6990 10013 -10165 0
6990 10015 -10167 0
6990 10017 -10169 0
6990 10019 -10171 0
6990 10021 -10173 0
6990 10023 -10175 0
6990 10025 -10177 0
6990 10027 -10179 0
6990 10029 -10181 0
6992 -10149 0
6992 9998 -10151 0
6992 9999 -10153 0
6992 10001 -10155 0
6992 10003 -10157 0
6992 10005 -10159 0
6992 10007 -10161 0
6992 10009 -10163 0
6992 10011 -10165 0
6992 10013 -10167 0
6992 10015 -10169 0
6992 10017 -10171 0
6992 10019 -10173 0
6992 10021 -10175 0
6992 10023 -10177 0
6992 10025 -10179 0
6992 10027 -10181 0
6992 10029 -10183 0
6994 -10151 0
6994 9998 -10153 0
6994 9999 -10155 0
6994 10001 -10157 0
6994 10003 -10159 0
6994 10005 -10161 0
6994 10007 -10163 0
6994 10009 -10165 0
6994 10011 -10167 0
6994 10013 -10169 0
6994 10015 -10171 0
6994 10017 -10173 0
6994 10019 -10175 0
6994 10021 -10177 0
6994 10023 -10179 0
6994 10025 -10181 0
6994 10027 -10183 0
6994 10029 -10185 0
c (0<=(aux414 - aux418 + aux55))
-10029 10185 0
-10027 10183 0
-10025 10181 0
-10023 10179 0
-10021 10177 0
-10019 10175 0
-10017 10173 0
-10015 10171 0
-10013 10169 0
-10011 10167 0
-10009 10165 0
-10007 10163 0
-10005 10161 0
-10003 10159 0
-10001 10157 0
-9999 10155 0
-9998 10153 0
-6994 10185 0
-6994 -10029 10183 0
-6994 -10027 10181 0
-6994 -10025 10179 0
-6994 -10023 10177 0
-6994 -10021 10175 0
-6994 -10019 10173 0
-6994 -10017 10171 0
-6994 -10015 10169 0
-6994 -10013 10167 0
-6994 -10011 10165 0
-6994 -10009 10163 0
-6994 -10007 10161 0
-6994 -10005 10159 0
-6994 -10003 10157 0
-6994 -10001 10155 0
-6994 -9999 10153 0
-6994 -9998 10151 0
-6992 10183 0
-6992 -10029 10181 0
-6992 -10027 10179 0
-6992 -10025 10177 0
-6992 -10023 10175 0
-6992 -10021 10173 0
-6992 -10019 10171 0
-6992 -10017 10169 0
-6992 -10015 10167 0
-6992 -10013 10165 0
-6992 -10011 10163 0
-6992 -10009 10161 0
-6992 -10007 10159 0
-6992 -10005 10157 0
-6992 -10003 10155 0
-6992 -10001 10153 0
-6992 -9999 10151 0
-6992 -9998 10149 0
-6990 10181 0
-6990 -10029 10179 0
-6990 -10027 10177 0
-6990 -10025 10175 0
-6990 -10023 10173 0
-6990 -10021 10171 0
-6990 -10019 10169 0
-6990 -10017 10167 0
-6990 -10015 10165 0
-6990 -10013 10163 0
-6990 -10011 10161 0
-6990 -10009 10159 0
-6990 -10007 10157 0
-6990 -10005 10155 0
-6990 -10003 10153 0
-6990 -10001 10151 0
-6990 -9999 10149 0
-6990 -9998 10147 0
-6988 10179 0
-6988 -10029 10177 0
-6988 -10027 10175 0
-6988 -10025 10173 0
-6988 -10023 10171 0
-6988 -10021 10169 0
-6988 -10019 10167 0
-6988 -10017 10165 0
-6988 -10015 10163 0
-6988 -10013 10161 0
-6988 -10011 10159 0
-6988 -10009 10157 0
-6988 -10007 10155 0
-6988 -10005 10153 0
-6988 -10003 10151 0
-6988 -10001 10149 0
-6988 -9999 10147 0
-6988 -9998 10145 0
-6986 10177 0
-6986 -10029 10175 0
-6986 -10027 10173 0
-6986 -10025 10171 0
-6986 -10023 10169 0
-6986 -10021 10167 0
-6986 -10019 10165 0
-6986 -10017 10163 0
-6986 -10015 10161 0
-6986 -10013 10159 0
-6986 -10011 10157 0
-6986 -10009 10155 0
-6986 -10007 10153 0
-6986 -10005 10151 0
-6986 -10003 10149 0
-6986 -10001 10147 0
-6986 -9999 10145 0
-6986 -9998 10143 0
-6984 10175 0
-6984 -10029 10173 0
-6984 -10027 10171 0
-6984 -10025 10169 0
-6984 -10023 10167 0
-6984 -10021 10165 0
-6984 -10019 10163 0
-6984 -10017 10161 0
-6984 -10015 10159 0
-6984 -10013 10157 0
-6984 -10011 10155 0
-6984 -10009 10153 0
-6984 -10007 10151 0
-6984 -10005 10149 0
-6984 -10003 10147 0
-6984 -10001 10145 0
-6984 -9999 10143 0
-6984 -9998 10141 0
-6982 10173 0
-6982 -10029 10171 0
-6982 -10027 10169 0
-6982 -10025 10167 0
-6982 -10023 10165 0
-6982 -10021 10163 0
-6982 -10019 10161 0
-6982 -10017 10159 0
-6982 -10015 10157 0
-6982 -10013 10155 0
-6982 -10011 10153 0
-6982 -10009 10151 0
-6982 -10007 10149 0
-6982 -10005 10147 0
-6982 -10003 10145 0
-6982 -10001 10143 0
-6982 -9999 10141 0
-6982 -9998 10139 0
-6980 10171 0
-6980 -10029 10169 0
-6980 -10027 10167 0
-6980 -10025 10165 0
-6980 -10023 10163 0
-6980 -10021 10161 0
-6980 -10019 10159 0
-6980 -10017 10157 0
-6980 -10015 10155 0
-6980 -10013 10153 0
-6980 -10011 10151 0
-6980 -10009 10149 0
-6980 -10007 10147 0
-6980 -10005 10145 0
-6980 -10003 10143 0
-6980 -10001 10141 0
-6980 -9999 10139 0
-6980 -9998 10137 0
-6979 10169 0
-6979 -10029 10167 0
-6979 -10027 10165 0
-6979 -10025 10163 0
-6979 -10023 10161 0
-6979 -10021 10159 0
-6979 -10019 10157 0
-6979 -10017 10155 0
-6979 -10015 10153 0
-6979 -10013 10151 0
-6979 -10011 10149 0
-6979 -10009 10147 0
-6979 -10007 10145 0
-6979 -10005 10143 0
-6979 -10003 10141 0
-6979 -10001 10139 0
-6979 -9999 10137 0
-6979 -9998 10136 0
c ((aux416 + aux417 - aux419)<=0)
10101 -10187 0
10102 -10188 0
10104 -10190 0
10106 -10192 0
10108 -10194 0
10110 -10196 0
10112 -10198 0
10114 -10200 0
10116 -10202 0
10118 -10204 0
10120 -10206 0
10122 -10208 0
10124 -10210 0
10126 -10212 0
10128 -10214 0
10130 -10216 0
10132 -10218 0
10134 -10220 0
10066 -10187 0
10066 10101 -10188 0
10066 10102 -10190 0
10066 10104 -10192 0
10066 10106 -10194 0
10066 10108 -10196 0
10066 10110 -10198 0
10066 10112 -10200 0
10066 10114 -10202 0
10066 10116 -10204 0
10066 10118 -10206 0
10066 10120 -10208 0
10066 10122 -10210 0
10066 10124 -10212 0
10066 10126 -10214 0
10066 10128 -10216 0
10066 10130 -10218 0
10066 10132 -10220 0
10066 10134 -10222 0
10067 -10188 0
10067 10101 -10190 0
10067 10102 -10192 0
10067 10104 -10194 0
10067 10106 -10196 0
10067 10108 -10198 0
10067 10110 -10200 0
10067 10112 -10202 0
10067 10114 -10204 0
10067 10116 -10206 0
10067 10118 -10208 0
10067 10120 -10210 0
10067 10122 -10212 0
10067 10124 -10214 0
10067 10126 -10216 0
10067 10128 -10218 0
10067 10130 -10220 0
10067 10132 -10222 0
10067 10134 -10224 0
10069 -10190 0
10069 10101 -10192 0
10069 10102 -10194 0
10069 10104 -10196 0
10069 10106 -10198 0
10069 10108 -10200 0
10069 10110 -10202 0
10069 10112 -10204 0
10069 10114 -10206 0
10069 10116 -10208 0
10069 10118 -10210 0
10069 10120 -10212 0
10069 10122 -10214 0
10069 10124 -10216 0
10069 10126 -10218 0
10069 10128 -10220 0
10069 10130 -10222 0
10069 10132 -10224 0
10069 10134 -10226 0
10071 -10192 0
10071 10101 -10194 0
10071 10102 -10196 0
10071 10104 -10198 0
10071 10106 -10200 0
10071 10108 -10202 0
10071 10110 -10204 0
10071 10112 -10206 0
10071 10114 -10208 0
10071 10116 -10210 0
10071 10118 -10212 0
10071 10120 -10214 0
10071 10122 -10216 0
10071 10124 -10218 0
10071 10126 -10220 0
10071 10128 -10222 0
10071 10130 -10224 0
10071 10132 -10226 0
10071 10134 -10228 0
10073 -10194 0
10073 10101 -10196 0
10073 10102 -10198 0
10073 10104 -10200 0
10073 10106 -10202 0
10073 10108 -10204 0
10073 10110 -10206 0
10073 10112 -10208 0
10073 10114 -10210 0
10073 10116 -10212 0
10073 10118 -10214 0
10073 10120 -10216 0
10073 10122 -10218 0
10073 10124 -10220 0
10073 10126 -10222 0
10073 10128 -10224 0
10073 10130 -10226 0
10073 10132 -10228 0
10073 10134 -10230 0
10075 -10196 0
10075 10101 -10198 0
10075 10102 -10200 0
10075 10104 -10202 0
10075 10106 -10204 0
10075 10108 -10206 0
10075 10110 -10208 0
10075 10112 -10210 0
10075 10114 -10212 0
10075 10116 -10214 0
10075 10118 -10216 0
10075 10120 -10218 0
10075 10122 -10220 0
10075 10124 -10222 0
10075 10126 -10224 0
10075 10128 -10226 0
10075 10130 -10228 0
10075 10132 -10230 0
10075 10134 -10232 0
10077 -10198 0
10077 10101 -10200 0
10077 10102 -10202 0
10077 10104 -10204 0
10077 10106 -10206 0
10077 10108 -10208 0
10077 10110 -10210 0
10077 10112 -10212 0
10077 10114 -10214 0
10077 10116 -10216 0
10077 10118 -10218 0
10077 10120 -10220 0
10077 10122 -10222 0
10077 10124 -10224 0
10077 10126 -10226 0
10077 10128 -10228 0
10077 10130 -10230 0
10077 10132 -10232 0
10077 10134 -10234 0
10079 -10200 0
10079 10101 -10202 0
10079 10102 -10204 0
10079 10104 -10206 0
10079 10106 -10208 0
10079 10108 -10210 0
10079 10110 -10212 0
10079 10112 -10214 0
10079 10114 -10216 0
10079 10116 -10218 0
10079 10118 -10220 0
10079 10120 -10222 0
10079 10122 -10224 0
10079 10124 -10226 0
10079 10126 -10228 0
10079 10128 -10230 0
10079 10130 -10232 0
10079 10132 -10234 0
10079 10134 -10236 0
10081 -10202 0
10081 10101 -10204 0
10081 10102 -10206 0
10081 10104 -10208 0
10081 10106 -10210 0
10081 10108 -10212 0
10081 10110 -10214 0
10081 10112 -10216 0
10081 10114 -10218 0
10081 10116 -10220 0
10081 10118 -10222 0
10081 10120 -10224 0
10081 10122 -10226 0
10081 10124 -10228 0
10081 10126 -10230 0
10081 10128 -10232 0
10081 10130 -10234 0
10081 10132 -10236 0
10081 10134 -10238 0
10083 -10204 0
10083 10101 -10206 0
10083 10102 -10208 0
10083 10104 -10210 0
10083 10106 -10212 0
10083 10108 -10214 0
10083 10110 -10216 0
10083 10112 -10218 0
10083 10114 -10220 0
10083 10116 -10222 0
10083 10118 -10224 0
10083 10120 -10226 0
10083 10122 -10228 0
10083 10124 -10230 0
10083 10126 -10232 0
10083 10128 -10234 0
10083 10130 -10236 0
10083 10132 -10238 0
10083 10134 -10240 0
10085 -10206 0
10085 10101 -10208 0
10085 10102 -10210 0
10085 10104 -10212 0
10085 10106 -10214 0
10085 10108 -10216 0
10085 10110 -10218 0
10085 10112 -10220 0
10085 10114 -10222 0
10085 10116 -10224 0
10085 10118 -10226 0
10085 10120 -10228 0
10085 10122 -10230 0
10085 10124 -10232 0
10085 10126 -10234 0
10085 10128 -10236 0
10085 10130 -10238 0
10085 10132 -10240 0
10085 10134 -10242 0
10087 -10208 0
10087 10101 -10210 0
10087 10102 -10212 0
10087 10104 -10214 0
10087 10106 -10216 0
10087 10108 -10218 0
10087 10110 -10220 0
10087 10112 -10222 0
10087 10114 -10224 0
10087 10116 -10226 0
10087 10118 -10228 0
10087 10120 -10230 0
10087 10122 -10232 0
10087 10124 -10234 0
10087 10126 -10236 0
10087 10128 -10238 0
10087 10130 -10240 0
10087 10132 -10242 0
10087 10134 -10244 0
10089 -10210 0
10089 10101 -10212 0
10089 10102 -10214 0
10089 10104 -10216 0
10089 10106 -10218 0
10089 10108 -10220 0
10089 10110 -10222 0
10089 10112 -10224 0
10089 10114 -10226 0
10089 10116 -10228 0
10089 10118 -10230 0
10089 10120 -10232 0
10089 10122 -10234 0
10089 10124 -10236 0
10089 10126 -10238 0
10089 10128 -10240 0
10089 10130 -10242 0
10089 10132 -10244 0
10089 10134 -10246 0
10091 -10212 0
10091 10101 -10214 0
10091 10102 -10216 0
10091 10104 -10218 0
10091 10106 -10220 0
10091 10108 -10222 0
10091 10110 -10224 0
10091 10112 -10226 0
10091 10114 -10228 0
10091 10116 -10230 0
10091 10118 -10232 0
10091 10120 -10234 0
10091 10122 -10236 0
10091 10124 -10238 0
10091 10126 -10240 0
10091 10128 -10242 0
10091 10130 -10244 0
10091 10132 -10246 0
10091 10134 -10248 0
10093 -10214 0
10093 10101 -10216 0
10093 10102 -10218 0
10093 10104 -10220 0
10093 10106 -10222 0
10093 10108 -10224 0
10093 10110 -10226 0
10093 10112 -10228 0
10093 10114 -10230 0
10093 10116 -10232 0
10093 10118 -10234 0
10093 10120 -10236 0
10093 10122 -10238 0
10093 10124 -10240 0
10093 10126 -10242 0
10093 10128 -10244 0
10093 10130 -10246 0
10093 10132 -10248 0
10093 10134 -10250 0
10095 -10216 0
10095 10101 -10218 0
10095 10102 -10220 0
10095 10104 -10222 0
10095 10106 -10224 0
10095 10108 -10226 0
10095 10110 -10228 0
10095 10112 -10230 0
10095 10114 -10232 0
10095 10116 -10234 0
10095 10118 -10236 0
10095 10120 -10238 0
10095 10122 -10240 0
10095 10124 -10242 0
10095 10126 -10244 0
10095 10128 -10246 0
10095 10130 -10248 0
10095 10132 -10250 0
10095 10134 -10252 0
10097 -10218 0
10097 10101 -10220 0
10097 10102 -10222 0
10097 10104 -10224 0
10097 10106 -10226 0
10097 10108 -10228 0
10097 10110 -10230 0
10097 10112 -10232 0
10097 10114 -10234 0
10097 10116 -10236 0
10097 10118 -10238 0
10097 10120 -10240 0
10097 10122 -10242 0
10097 10124 -10244 0
10097 10126 -10246 0
10097 10128 -10248 0
10097 10130 -10250 0
10097 10132 -10252 0
10097 10134 -10254 0
10099 -10220 0
10099 10101 -10222 0
10099 10102 -10224 0
10099 10104 -10226 0
10099 10106 -10228 0
10099 10108 -10230 0
10099 10110 -10232 0
10099 10112 -10234 0
10099 10114 -10236 0
10099 10116 -10238 0
10099 10118 -10240 0
10099 10120 -10242 0
10099 10122 -10244 0
10099 10124 -10246 0
10099 10126 -10248 0
10099 10128 -10250 0
10099 10130 -10252 0
10099 10132 -10254 0
10099 10134 -10256 0
c (0<=(aux416 + aux417 - aux419))
-10134 10256 0
-10132 10254 0
-10130 10252 0
-10128 10250 0
-10126 10248 0
-10124 10246 0
-10122 10244 0
-10120 10242 0
-10118 10240 0
-10116 10238 0
-10114 10236 0
-10112 10234 0
-10110 10232 0
-10108 10230 0
-10106 10228 0
-10104 10226 0
-10102 10224 0
-10101 10222 0
-10099 10256 0
-10099 -10134 10254 0
-10099 -10132 10252 0
-10099 -10130 10250 0
-10099 -10128 10248 0
-10099 -10126 10246 0
-10099 -10124 10244 0
-10099 -10122 10242 0
-10099 -10120 10240 0
-10099 -10118 10238 0
-10099 -10116 10236 0
-10099 -10114 10234 0
-10099 -10112 10232 0
-10099 -10110 10230 0
-10099 -10108 10228 0
-10099 -10106 10226 0
-10099 -10104 10224 0
-10099 -10102 10222 0
-10099 -10101 10220 0
-10097 10254 0
-10097 -10134 10252 0
-10097 -10132 10250 0
-10097 -10130 10248 0
-10097 -10128 10246 0
-10097 -10126 10244 0
-10097 -10124 10242 0
-10097 -10122 10240 0
-10097 -10120 10238 0
-10097 -10118 10236 0
-10097 -10116 10234 0
-10097 -10114 10232 0
-10097 -10112 10230 0
-10097 -10110 10228 0
-10097 -10108 10226 0
-10097 -10106 10224 0
-10097 -10104 10222 0
-10097 -10102 10220 0
-10097 -10101 10218 0
-10095 10252 0
-10095 -10134 10250 0
-10095 -10132 10248 0
-10095 -10130 10246 0
-10095 -10128 10244 0
-10095 -10126 10242 0
-10095 -10124 10240 0
-10095 -10122 10238 0
-10095 -10120 10236 0
-10095 -10118 10234 0
-10095 -10116 10232 0
-10095 -10114 10230 0
-10095 -10112 10228 0
-10095 -10110 10226 0
-10095 -10108 10224 0
-10095 -10106 10222 0
-10095 -10104 10220 0
-10095 -10102 10218 0
-10095 -10101 10216 0
-10093 10250 0
-10093 -10134 10248 0
-10093 -10132 10246 0
-10093 -10130 10244 0
-10093 -10128 10242 0
-10093 -10126 10240 0
-10093 -10124 10238 0
-10093 -10122 10236 0
-10093 -10120 10234 0
-10093 -10118 10232 0
-10093 -10116 10230 0
-10093 -10114 10228 0
-10093 -10112 10226 0
-10093 -10110 10224 0
-10093 -10108 10222 0
-10093 -10106 10220 0
-10093 -10104 10218 0
-10093 -10102 10216 0
-10093 -10101 10214 0
-10091 10248 0
-10091 -10134 10246 0
-10091 -10132 10244 0
-10091 -10130 10242 0
-10091 -10128 10240 0
-10091 -10126 10238 0
-10091 -10124 10236 0
-10091 -10122 10234 0
-10091 -10120 10232 0
-10091 -10118 10230 0
-10091 -10116 10228 0
-10091 -10114 10226 0
-10091 -10112 10224 0
-10091 -10110 10222 0
-10091 -10108 10220 0
-10091 -10106 10218 0
-10091 -10104 10216 0
-10091 -10102 10214 0
-10091 -10101 10212 0
-10089 10246 0
-10089 -10134 10244 0
-10089 -10132 10242 0
-10089 -10130 10240 0
-10089 -10128 10238 0
-10089 -10126 10236 0
-10089 -10124 10234 0
-10089 -10122 10232 0
-10089 -10120 10230 0
-10089 -10118 10228 0
-10089 -10116 10226 0
-10089 -10114 10224 0
-10089 -10112 10222 0
-10089 -10110 10220 0
-10089 -10108 10218 0
-10089 -10106 10216 0
-10089 -10104 10214 0
-10089 -10102 10212 0
-10089 -10101 10210 0
-10087 10244 0
-10087 -10134 10242 0
-10087 -10132 10240 0
-10087 -10130 10238 0
-10087 -10128 10236 0
-10087 -10126 10234 0
-10087 -10124 10232 0
-10087 -10122 10230 0
-10087 -10120 10228 0
-10087 -10118 10226 0
-10087 -10116 10224 0
-10087 -10114 10222 0
-10087 -10112 10220 0
-10087 -10110 10218 0
-10087 -10108 10216 0
-10087 -10106 10214 0
-10087 -10104 10212 0
-10087 -10102 10210 0
-10087 -10101 10208 0
-10085 10242 0
-10085 -10134 10240 0
-10085 -10132 10238 0
-10085 -10130 10236 0
-10085 -10128 10234 0
-10085 -10126 10232 0
-10085 -10124 10230 0
-10085 -10122 10228 0
-10085 -10120 10226 0
-10085 -10118 10224 0
-10085 -10116 10222 0
-10085 -10114 10220 0
-10085 -10112 10218 0
-10085 -10110 10216 0
-10085 -10108 10214 0
-10085 -10106 10212 0
-10085 -10104 10210 0
-10085 -10102 10208 0
-10085 -10101 10206 0
-10083 10240 0
-10083 -10134 10238 0
-10083 -10132 10236 0
-10083 -10130 10234 0
-10083 -10128 10232 0
-10083 -10126 10230 0
-10083 -10124 10228 0
-10083 -10122 10226 0
-10083 -10120 10224 0
-10083 -10118 10222 0
-10083 -10116 10220 0
-10083 -10114 10218 0
-10083 -10112 10216 0
-10083 -10110 10214 0
-10083 -10108 10212 0
-10083 -10106 10210 0
-10083 -10104 10208 0
-10083 -10102 10206 0
-10083 -10101 10204 0
-10081 10238 0
-10081 -10134 10236 0
-10081 -10132 10234 0
-10081 -10130 10232 0
-10081 -10128 10230 0
-10081 -10126 10228 0
-10081 -10124 10226 0
-10081 -10122 10224 0
-10081 -10120 10222 0
-10081 -10118 10220 0
-10081 -10116 10218 0
-10081 -10114 10216 0
-10081 -10112 10214 0
-10081 -10110 10212 0
-10081 -10108 10210 0
-10081 -10106 10208 0
-10081 -10104 10206 0
-10081 -10102 10204 0
-10081 -10101 10202 0
-10079 10236 0
-10079 -10134 10234 0
-10079 -10132 10232 0
-10079 -10130 10230 0
-10079 -10128 10228 0
-10079 -10126 10226 0
-10079 -10124 10224 0
-10079 -10122 10222 0
-10079 -10120 10220 0
-10079 -10118 10218 0
-10079 -10116 10216 0
-10079 -10114 10214 0
-10079 -10112 10212 0
-10079 -10110 10210 0
-10079 -10108 10208 0
-10079 -10106 10206 0
-10079 -10104 10204 0
-10079 -10102 10202 0
-10079 -10101 10200 0
-10077 10234 0
-10077 -10134 10232 0
-10077 -10132 10230 0
-10077 -10130 10228 0
-10077 -10128 10226 0
-10077 -10126 10224 0
-10077 -10124 10222 0
-10077 -10122 10220 0
-10077 -10120 10218 0
-10077 -10118 10216 0
-10077 -10116 10214 0
-10077 -10114 10212 0
-10077 -10112 10210 0
-10077 -10110 10208 0
-10077 -10108 10206 0
-10077 -10106 10204 0
-10077 -10104 10202 0
-10077 -10102 10200 0
-10077 -10101 10198 0
-10075 10232 0
-10075 -10134 10230 0
-10075 -10132 10228 0
-10075 -10130 10226 0
-10075 -10128 10224 0
-10075 -10126 10222 0
-10075 -10124 10220 0
-10075 -10122 10218 0
-10075 -10120 10216 0
-10075 -10118 10214 0
-10075 -10116 10212 0
-10075 -10114 10210 0
-10075 -10112 10208 0
-10075 -10110 10206 0
-10075 -10108 10204 0
-10075 -10106 10202 0
-10075 -10104 10200 0
-10075 -10102 10198 0
-10075 -10101 10196 0
-10073 10230 0
-10073 -10134 10228 0
-10073 -10132 10226 0
-10073 -10130 10224 0
-10073 -10128 10222 0
-10073 -10126 10220 0
-10073 -10124 10218 0
-10073 -10122 10216 0
-10073 -10120 10214 0
-10073 -10118 10212 0
-10073 -10116 10210 0
-10073 -10114 10208 0
-10073 -10112 10206 0
-10073 -10110 10204 0
-10073 -10108 10202 0
-10073 -10106 10200 0
-10073 -10104 10198 0
-10073 -10102 10196 0
-10073 -10101 10194 0
-10071 10228 0
-10071 -10134 10226 0
-10071 -10132 10224 0
-10071 -10130 10222 0
-10071 -10128 10220 0
-10071 -10126 10218 0
-10071 -10124 10216 0
-10071 -10122 10214 0
-10071 -10120 10212 0
-10071 -10118 10210 0
-10071 -10116 10208 0
-10071 -10114 10206 0
-10071 -10112 10204 0
-10071 -10110 10202 0
-10071 -10108 10200 0
-10071 -10106 10198 0
-10071 -10104 10196 0
-10071 -10102 10194 0
-10071 -10101 10192 0
-10069 10226 0
-10069 -10134 10224 0
-10069 -10132 10222 0
-10069 -10130 10220 0
-10069 -10128 10218 0
-10069 -10126 10216 0
-10069 -10124 10214 0
-10069 -10122 10212 0
-10069 -10120 10210 0
-10069 -10118 10208 0
-10069 -10116 10206 0
-10069 -10114 10204 0
-10069 -10112 10202 0
-10069 -10110 10200 0
-10069 -10108 10198 0
-10069 -10106 10196 0
-10069 -10104 10194 0
-10069 -10102 10192 0
-10069 -10101 10190 0
-10067 10224 0
-10067 -10134 10222 0
-10067 -10132 10220 0
-10067 -10130 10218 0
-10067 -10128 10216 0
-10067 -10126 10214 0
-10067 -10124 10212 0
-10067 -10122 10210 0
-10067 -10120 10208 0
-10067 -10118 10206 0
-10067 -10116 10204 0
-10067 -10114 10202 0
-10067 -10112 10200 0
-10067 -10110 10198 0
-10067 -10108 10196 0
-10067 -10106 10194 0
-10067 -10104 10192 0
-10067 -10102 10190 0
-10067 -10101 10188 0
-10066 10222 0
-10066 -10134 10220 0
-10066 -10132 10218 0
-10066 -10130 10216 0
-10066 -10128 10214 0
-10066 -10126 10212 0
-10066 -10124 10210 0
-10066 -10122 10208 0
-10066 -10120 10206 0
-10066 -10118 10204 0
-10066 -10116 10202 0
-10066 -10114 10200 0
-10066 -10112 10198 0
-10066 -10110 10196 0
-10066 -10108 10194 0
-10066 -10106 10192 0
-10066 -10104 10190 0
-10066 -10102 10188 0
-10066 -10101 10187 0
c (( - aux420 + aux70 + shift(variant_fields_00002_00007_00001, -1))<=0)
7218 -10258 0
7219 -10259 0
7221 -10261 0
7223 -10263 0
7225 -10265 0
7227 -10267 0
7229 -10269 0
7231 -10271 0
7233 -10273 0
3242 -10258 0
3242 7218 -10259 0
3242 7219 -10261 0
3242 7221 -10263 0
3242 7223 -10265 0
3242 7225 -10267 0
3242 7227 -10269 0
3242 7229 -10271 0
3242 7231 -10273 0
3242 7233 -10275 0
3243 -10259 0
3243 7218 -10261 0
3243 7219 -10263 0
3243 7221 -10265 0
3243 7223 -10267 0
3243 7225 -10269 0
3243 7227 -10271 0
3243 7229 -10273 0
3243 7231 -10275 0
3243 7233 -10277 0
3245 -10261 0
3245 7218 -10263 0
3245 7219 -10265 0
3245 7221 -10267 0
3245 7223 -10269 0
3245 7225 -10271 0
3245 7227 -10273 0
3245 7229 -10275 0
3245 7231 -10277 0
3245 7233 -10279 0
3247 -10263 0
3247 7218 -10265 0
3247 7219 -10267 0
3247 7221 -10269 0
3247 7223 -10271 0
3247 7225 -10273 0
3247 7227 -10275 0
3247 7229 -10277 0
3247 7231 -10279 0
3247 7233 -10281 0
3249 -10265 0
3249 7218 -10267 0
3249 7219 -10269 0
3249 7221 -10271 0
3249 7223 -10273 0
3249 7225 -10275 0
3249 7227 -10277 0
3249 7229 -10279 0
3249 7231 -10281 0
3249 7233 -10283 0
3251 -10267 0
3251 7218 -10269 0
3251 7219 -10271 0
3251 7221 -10273 0
3251 7223 -10275 0
3251 7225 -10277 0
3251 7227 -10279 0
3251 7229 -10281 0
3251 7231 -10283 0
3251 7233 -10285 0
3253 -10269 0
3253 7218 -10271 0
3253 7219 -10273 0
3253 7221 -10275 0
3253 7223 -10277 0
3253 7225 -10279 0
3253 7227 -10281 0
3253 7229 -10283 0
3253 7231 -10285 0
3253 7233 -10287 0
3255 -10271 0
3255 7218 -10273 0
3255 7219 -10275 0
3255 7221 -10277 0
3255 7223 -10279 0
3255 7225 -10281 0
3255 7227 -10283 0
3255 7229 -10285 0
3255 7231 -10287 0
3255 7233 -10289 0
c (0<=( - aux420 + aux70 + shift(variant_fields_00002_00007_00001, -1)))
-7233 10289 0
-7231 10287 0
-7229 10285 0
-7227 10283 0
-7225 10281 0
-7223 10279 0
-7221 10277 0
-7219 10275 0
-7218 10273 0
-3255 10289 0
-3255 -7233 10287 0
-3255 -7231 10285 0
-3255 -7229 10283 0
-3255 -7227 10281 0
-3255 -7225 10279 0
-3255 -7223 10277 0
-3255 -7221 10275 0
-3255 -7219 10273 0
-3255 -7218 10271 0
-3253 10287 0
-3253 -7233 10285 0
-3253 -7231 10283 0
-3253 -7229 10281 0
-3253 -7227 10279 0
-3253 -7225 10277 0
-3253 -7223 10275 0
-3253 -7221 10273 0
-3253 -7219 10271 0
-3253 -7218 10269 0
-3251 10285 0
-3251 -7233 10283 0
-3251 -7231 10281 0
-3251 -7229 10279 0
-3251 -7227 10277 0
-3251 -7225 10275 0
-3251 -7223 10273 0
-3251 -7221 10271 0
-3251 -7219 10269 0
-3251 -7218 10267 0
-3249 10283 0
-3249 -7233 10281 0
-3249 -7231 10279 0
-3249 -7229 10277 0
-3249 -7227 10275 0
-3249 -7225 10273 0
-3249 -7223 10271 0
-3249 -7221 10269 0
-3249 -7219 10267 0
-3249 -7218 10265 0
-3247 10281 0
-3247 -7233 10279 0
-3247 -7231 10277 0
-3247 -7229 10275 0
-3247 -7227 10273 0
-3247 -7225 10271 0
-3247 -7223 10269 0
-3247 -7221 10267 0
-3247 -7219 10265 0
-3247 -7218 10263 0
-3245 10279 0
-3245 -7233 10277 0
-3245 -7231 10275 0
-3245 -7229 10273 0
-3245 -7227 10271 0
-3245 -7225 10269 0
-3245 -7223 10267 0
-3245 -7221 10265 0
-3245 -7219 10263 0
-3245 -7218 10261 0
-3243 10277 0
-3243 -7233 10275 0
-3243 -7231 10273 0
-3243 -7229 10271 0
-3243 -7227 10269 0
-3243 -7225 10267 0
-3243 -7223 10265 0
-3243 -7221 10263 0
-3243 -7219 10261 0
-3243 -7218 10259 0
-3242 10275 0
-3242 -7233 10273 0
-3242 -7231 10271 0
-3242 -7229 10269 0
-3242 -7227 10267 0
-3242 -7225 10265 0
-3242 -7223 10263 0
-3242 -7221 10261 0
-3242 -7219 10259 0
-3242 -7218 10258 0
c (( - aux421 + aux63 + aux69)<=0)
7201 -10291 0
7202 -10292 0
7204 -10294 0
7206 -10296 0
7208 -10298 0
7210 -10300 0
7212 -10302 0
7214 -10304 0
7216 -10306 0
7099 -10291 0
7099 7201 -10292 0
7099 7202 -10294 0
7099 7204 -10296 0
7099 7206 -10298 0
7099 7208 -10300 0
7099 7210 -10302 0
7099 7212 -10304 0
7099 7214 -10306 0
7099 7216 -10308 0
7100 -10292 0
7100 7201 -10294 0
7100 7202 -10296 0
7100 7204 -10298 0
7100 7206 -10300 0
7100 7208 -10302 0
7100 7210 -10304 0
7100 7212 -10306 0
7100 7214 -10308 0
7100 7216 -10310 0
7102 -10294 0
7102 7201 -10296 0
7102 7202 -10298 0
7102 7204 -10300 0
7102 7206 -10302 0
7102 7208 -10304 0
7102 7210 -10306 0
7102 7212 -10308 0
7102 7214 -10310 0
7102 7216 -10312 0
7104 -10296 0
7104 7201 -10298 0
7104 7202 -10300 0
7104 7204 -10302 0
7104 7206 -10304 0
7104 7208 -10306 0
7104 7210 -10308 0
7104 7212 -10310 0
7104 7214 -10312 0
7104 7216 -10314 0
7106 -10298 0
7106 7201 -10300 0
7106 7202 -10302 0
7106 7204 -10304 0
7106 7206 -10306 0
7106 7208 -10308 0
7106 7210 -10310 0
7106 7212 -10312 0
7106 7214 -10314 0
7106 7216 -10316 0
7108 -10300 0
7108 7201 -10302 0
7108 7202 -10304 0
7108 7204 -10306 0
7108 7206 -10308 0
7108 7208 -10310 0
7108 7210 -10312 0
7108 7212 -10314 0
7108 7214 -10316 0
7108 7216 -10318 0
7110 -10302 0
7110 7201 -10304 0
7110 7202 -10306 0
7110 7204 -10308 0
7110 7206 -10310 0
7110 7208 -10312 0
7110 7210 -10314 0
7110 7212 -10316 0
7110 7214 -10318 0
7110 7216 -10320 0
7112 -10304 0
7112 7201 -10306 0
7112 7202 -10308 0
7112 7204 -10310 0
7112 7206 -10312 0
7112 7208 -10314 0
7112 7210 -10316 0
7112 7212 -10318 0
7112 7214 -10320 0
7112 7216 -10322 0
7114 -10306 0
7114 7201 -10308 0
7114 7202 -10310 0
7114 7204 -10312 0
7114 7206 -10314 0
7114 7208 -10316 0
7114 7210 -10318 0
7114 7212 -10320 0
7114 7214 -10322 0
7114 7216 -10324 0
c (0<=( - aux421 + aux63 + aux69))
-7216 10324 0
-7214 10322 0
-7212 10320 0
-7210 10318 0
-7208 10316 0
-7206 10314 0
-7204 10312 0
-7202 10310 0
-7201 10308 0
-7114 10324 0
-7114 -7216 10322 0
-7114 -7214 10320 0
-7114 -7212 10318 0
-7114 -7210 10316 0
-7114 -7208 10314 0
-7114 -7206 10312 0
-7114 -7204 10310 0
-7114 -7202 10308 0
-7114 -7201 10306 0
-7112 10322 0
-7112 -7216 10320 0
-7112 -7214 10318 0
-7112 -7212 10316 0
-7112 -7210 10314 0
-7112 -7208 10312 0
-7112 -7206 10310 0
-7112 -7204 10308 0
-7112 -7202 10306 0
-7112 -7201 10304 0
-7110 10320 0
-7110 -7216 10318 0
-7110 -7214 10316 0
-7110 -7212 10314 0
-7110 -7210 10312 0
-7110 -7208 10310 0
-7110 -7206 10308 0
-7110 -7204 10306 0
-7110 -7202 10304 0
-7110 -7201 10302 0
-7108 10318 0
-7108 -7216 10316 0
-7108 -7214 10314 0
-7108 -7212 10312 0
-7108 -7210 10310 0
-7108 -7208 10308 0
-7108 -7206 10306 0
-7108 -7204 10304 0
-7108 -7202 10302 0
-7108 -7201 10300 0
-7106 10316 0
-7106 -7216 10314 0
-7106 -7214 10312 0
-7106 -7212 10310 0
-7106 -7210 10308 0
-7106 -7208 10306 0
-7106 -7206 10304 0
-7106 -7204 10302 0
-7106 -7202 10300 0
-7106 -7201 10298 0
-7104 10314 0
-7104 -7216 10312 0
-7104 -7214 10310 0
-7104 -7212 10308 0
-7104 -7210 10306 0
-7104 -7208 10304 0
-7104 -7206 10302 0
-7104 -7204 10300 0
-7104 -7202 10298 0
-7104 -7201 10296 0
-7102 10312 0
-7102 -7216 10310 0
-7102 -7214 10308 0
-7102 -7212 10306 0
-7102 -7210 10304 0
-7102 -7208 10302 0
-7102 -7206 10300 0
-7102 -7204 10298 0
-7102 -7202 10296 0
-7102 -7201 10294 0
-7100 10310 0
-7100 -7216 10308 0
-7100 -7214 10306 0
-7100 -7212 10304 0
-7100 -7210 10302 0
-7100 -7208 10300 0
-7100 -7206 10298 0
-7100 -7204 10296 0
-7100 -7202 10294 0
-7100 -7201 10292 0
-7099 10308 0
-7099 -7216 10306 0
-7099 -7214 10304 0
-7099 -7212 10302 0
-7099 -7210 10300 0
-7099 -7208 10298 0
-7099 -7206 10296 0
-7099 -7204 10294 0
-7099 -7202 10292 0
-7099 -7201 10291 0
c (( - aux422 + aux65 + aux68)<=0)
7184 -10326 0
7185 -10327 0
7187 -10329 0
7189 -10331 0
7191 -10333 0
7193 -10335 0
7195 -10337 0
7197 -10339 0
7199 -10341 0
7133 -10326 0
7133 7184 -10327 0
7133 7185 -10329 0
7133 7187 -10331 0
7133 7189 -10333 0
7133 7191 -10335 0
7133 7193 -10337 0
7133 7195 -10339 0
7133 7197 -10341 0
7133 7199 -10343 0
7134 -10327 0
7134 7184 -10329 0
7134 7185 -10331 0
7134 7187 -10333 0
7134 7189 -10335 0
7134 7191 -10337 0
7134 7193 -10339 0
7134 7195 -10341 0
7134 7197 -10343 0
7134 7199 -10345 0
7136 -10329 0
7136 7184 -10331 0
7136 7185 -10333 0
7136 7187 -10335 0
7136 7189 -10337 0
7136 7191 -10339 0
7136 7193 -10341 0
7136 7195 -10343 0
7136 7197 -10345 0
7136 7199 -10347 0
7138 -10331 0
7138 7184 -10333 0
7138 7185 -10335 0
7138 7187 -10337 0
7138 7189 -10339 0
7138 7191 -10341 0
7138 7193 -10343 0
7138 7195 -10345 0
7138 7197 -10347 0
7138 7199 -10349 0
7140 -10333 0
7140 7184 -10335 0
7140 7185 -10337 0
7140 7187 -10339 0
7140 7189 -10341 0
7140 7191 -10343 0
7140 7193 -10345 0
7140 7195 -10347 0
7140 7197 -10349 0
7140 7199 -10351 0
7142 -10335 0
7142 7184 -10337 0
7142 7185 -10339 0
7142 7187 -10341 0
7142 7189 -10343 0
7142 7191 -10345 0
7142 7193 -10347 0
7142 7195 -10349 0
7142 7197 -10351 0
7142 7199 -10353 0
7144 -10337 0
7144 7184 -10339 0
7144 7185 -10341 0
7144 7187 -10343 0
7144 7189 -10345 0
7144 7191 -10347 0
7144 7193 -10349 0
7144 7195 -10351 0
7144 7197 -10353 0
7144 7199 -10355 0
7146 -10339 0
7146 7184 -10341 0
7146 7185 -10343 0
7146 7187 -10345 0
7146 7189 -10347 0
7146 7191 -10349 0
7146 7193 -10351 0
7146 7195 -10353 0
7146 7197 -10355 0
7146 7199 -10357 0
7148 -10341 0
7148 7184 -10343 0
7148 7185 -10345 0
7148 7187 -10347 0
7148 7189 -10349 0
7148 7191 -10351 0
7148 7193 -10353 0
7148 7195 -10355 0
7148 7197 -10357 0
7148 7199 -10359 0
c (0<=( - aux422 + aux65 + aux68))
-7199 10359 0
-7197 10357 0
-7195 10355 0
-7193 10353 0
-7191 10351 0
-7189 10349 0
-7187 10347 0
-7185 10345 0
-7184 10343 0
-7148 10359 0
-7148 -7199 10357 0
-7148 -7197 10355 0
-7148 -7195 10353 0
-7148 -7193 10351 0
-7148 -7191 10349 0
-7148 -7189 10347 0
-7148 -7187 10345 0
-7148 -7185 10343 0
-7148 -7184 10341 0
-7146 10357 0
-7146 -7199 10355 0
-7146 -7197 10353 0
-7146 -7195 10351 0
-7146 -7193 10349 0
-7146 -7191 10347 0
-7146 -7189 10345 0
-7146 -7187 10343 0
-7146 -7185 10341 0
-7146 -7184 10339 0
-7144 10355 0
-7144 -7199 10353 0
-7144 -7197 10351 0
-7144 -7195 10349 0
-7144 -7193 10347 0
-7144 -7191 10345 0
-7144 -7189 10343 0
-7144 -7187 10341 0
-7144 -7185 10339 0
-7144 -7184 10337 0
-7142 10353 0
-7142 -7199 10351 0
-7142 -7197 10349 0
-7142 -7195 10347 0
-7142 -7193 10345 0
-7142 -7191 10343 0
-7142 -7189 10341 0
-7142 -7187 10339 0
-7142 -7185 10337 0
-7142 -7184 10335 0
-7140 10351 0
-7140 -7199 10349 0
-7140 -7197 10347 0
-7140 -7195 10345 0
-7140 -7193 10343 0
-7140 -7191 10341 0
-7140 -7189 10339 0
-7140 -7187 10337 0
-7140 -7185 10335 0
-7140 -7184 10333 0
-7138 10349 0
-7138 -7199 10347 0
-7138 -7197 10345 0
-7138 -7195 10343 0
-7138 -7193 10341 0
-7138 -7191 10339 0
-7138 -7189 10337 0
-7138 -7187 10335 0
-7138 -7185 10333 0
-7138 -7184 10331 0
-7136 10347 0
-7136 -7199 10345 0
-7136 -7197 10343 0
-7136 -7195 10341 0
-7136 -7193 10339 0
-7136 -7191 10337 0
-7136 -7189 10335 0
-7136 -7187 10333 0
-7136 -7185 10331 0
-7136 -7184 10329 0
-7134 10345 0
-7134 -7199 10343 0
-7134 -7197 10341 0
-7134 -7195 10339 0
-7134 -7193 10337 0
-7134 -7191 10335 0
-7134 -7189 10333 0
-7134 -7187 10331 0
-7134 -7185 10329 0
-7134 -7184 10327 0
-7133 10343 0
-7133 -7199 10341 0
-7133 -7197 10339 0
-7133 -7195 10337 0
-7133 -7193 10335 0
-7133 -7191 10333 0
-7133 -7189 10331 0
-7133 -7187 10329 0
-7133 -7185 10327 0
-7133 -7184 10326 0
c (( - aux423 + aux66 + aux67)<=0)
7167 -10361 0
7168 -10362 0
7170 -10364 0
7172 -10366 0
7174 -10368 0
7176 -10370 0
7178 -10372 0
7180 -10374 0
7182 -10376 0
7150 -10361 0
7150 7167 -10362 0
7150 7168 -10364 0
7150 7170 -10366 0
7150 7172 -10368 0
7150 7174 -10370 0
7150 7176 -10372 0
7150 7178 -10374 0
7150 7180 -10376 0
7150 7182 -10378 0
7151 -10362 0
7151 7167 -10364 0
7151 7168 -10366 0
7151 7170 -10368 0
7151 7172 -10370 0
7151 7174 -10372 0
7151 7176 -10374 0
7151 7178 -10376 0
7151 7180 -10378 0
7151 7182 -10380 0
7153 -10364 0
7153 7167 -10366 0
7153 7168 -10368 0
7153 7170 -10370 0
7153 7172 -10372 0
7153 7174 -10374 0
7153 7176 -10376 0
7153 7178 -10378 0
7153 7180 -10380 0
7153 7182 -10382 0
7155 -10366 0
7155 7167 -10368 0
7155 7168 -10370 0
7155 7170 -10372 0
7155 7172 -10374 0
7155 7174 -10376 0
7155 7176 -10378 0
7155 7178 -10380 0
7155 7180 -10382 0
7155 7182 -10384 0
7157 -10368 0
7157 7167 -10370 0
7157 7168 -10372 0
7157 7170 -10374 0
7157 7172 -10376 0
7157 7174 -10378 0
7157 7176 -10380 0
7157 7178 -10382 0
7157 7180 -10384 0
7157 7182 -10386 0
7159 -10370 0
7159 7167 -10372 0
7159 7168 -10374 0
7159 7170 -10376 0
7159 7172 -10378 0
7159 7174 -10380 0
7159 7176 -10382 0
7159 7178 -10384 0
7159 7180 -10386 0
7159 7182 -10388 0
7161 -10372 0
7161 7167 -10374 0
7161 7168 -10376 0
7161 7170 -10378 0
7161 7172 -10380 0
7161 7174 -10382 0
7161 7176 -10384 0
7161 7178 -10386 0
7161 7180 -10388 0
7161 7182 -10390 0
7163 -10374 0
7163 7167 -10376 0
7163 7168 -10378 0
7163 7170 -10380 0
7163 7172 -10382 0
7163 7174 -10384 0
7163 7176 -10386 0
7163 7178 -10388 0
7163 7180 -10390 0
7163 7182 -10392 0
7165 -10376 0
7165 7167 -10378 0
7165 7168 -10380 0
7165 7170 -10382 0
7165 7172 -10384 0
7165 7174 -10386 0
7165 7176 -10388 0
7165 7178 -10390 0
7165 7180 -10392 0
7165 7182 -10394 0
c (0<=( - aux423 + aux66 + aux67))
-7182 10394 0
-7180 10392 0
-7178 10390 0
-7176 10388 0
-7174 10386 0
-7172 10384 0
-7170 10382 0
-7168 10380 0
-7167 10378 0
-7165 10394 0
-7165 -7182 10392 0
-7165 -7180 10390 0
-7165 -7178 10388 0
-7165 -7176 10386 0
-7165 -7174 10384 0
-7165 -7172 10382 0
-7165 -7170 10380 0
-7165 -7168 10378 0
-7165 -7167 10376 0
-7163 10392 0
-7163 -7182 10390 0
-7163 -7180 10388 0
-7163 -7178 10386 0
-7163 -7176 10384 0
-7163 -7174 10382 0
-7163 -7172 10380 0
-7163 -7170 10378 0
-7163 -7168 10376 0
-7163 -7167 10374 0
-7161 10390 0
-7161 -7182 10388 0
-7161 -7180 10386 0
-7161 -7178 10384 0
-7161 -7176 10382 0
-7161 -7174 10380 0
-7161 -7172 10378 0
-7161 -7170 10376 0
-7161 -7168 10374 0
-7161 -7167 10372 0
-7159 10388 0
-7159 -7182 10386 0
-7159 -7180 10384 0
-7159 -7178 10382 0
-7159 -7176 10380 0
-7159 -7174 10378 0
-7159 -7172 10376 0
-7159 -7170 10374 0
-7159 -7168 10372 0
-7159 -7167 10370 0
-7157 10386 0
-7157 -7182 10384 0
-7157 -7180 10382 0
-7157 -7178 10380 0
-7157 -7176 10378 0
-7157 -7174 10376 0
-7157 -7172 10374 0
-7157 -7170 10372 0
-7157 -7168 10370 0
-7157 -7167 10368 0
-7155 10384 0
-7155 -7182 10382 0
-7155 -7180 10380 0
-7155 -7178 10378 0
-7155 -7176 10376 0
-7155 -7174 10374 0
-7155 -7172 10372 0
-7155 -7170 10370 0
-7155 -7168 10368 0
-7155 -7167 10366 0
-7153 10382 0
-7153 -7182 10380 0
-7153 -7180 10378 0
-7153 -7178 10376 0
-7153 -7176 10374 0
-7153 -7174 10372 0
-7153 -7172 10370 0
-7153 -7170 10368 0
-7153 -7168 10366 0
-7153 -7167 10364 0
-7151 10380 0
-7151 -7182 10378 0
-7151 -7180 10376 0
-7151 -7178 10374 0
-7151 -7176 10372 0
-7151 -7174 10370 0
-7151 -7172 10368 0
-7151 -7170 10366 0
-7151 -7168 10364 0
-7151 -7167 10362 0
-7150 10378 0
-7150 -7182 10376 0
-7150 -7180 10374 0
-7150 -7178 10372 0
-7150 -7176 10370 0
-7150 -7174 10368 0
-7150 -7172 10366 0
-7150 -7170 10364 0
-7150 -7168 10362 0
-7150 -7167 10361 0
c ((aux420 - aux424 + aux64)<=0)
10258 -10396 0
10259 -10397 0
10261 -10399 0
10263 -10401 0
10265 -10403 0
10267 -10405 0
10269 -10407 0
10271 -10409 0
10273 -10411 0
10275 -10413 0
10277 -10415 0
10279 -10417 0
10281 -10419 0
10283 -10421 0
10285 -10423 0
10287 -10425 0
10289 -10427 0
7116 -10396 0
7116 10258 -10397 0
7116 10259 -10399 0
7116 10261 -10401 0
7116 10263 -10403 0
7116 10265 -10405 0
7116 10267 -10407 0
7116 10269 -10409 0
7116 10271 -10411 0
7116 10273 -10413 0
7116 10275 -10415 0
7116 10277 -10417 0
7116 10279 -10419 0
7116 10281 -10421 0
7116 10283 -10423 0
7116 10285 -10425 0
7116 10287 -10427 0
7116 10289 -10429 0
7117 -10397 0
7117 10258 -10399 0
7117 10259 -10401 0
7117 10261 -10403 0
7117 10263 -10405 0
7117 10265 -10407 0
7117 10267 -10409 0
7117 10269 -10411 0
7117 10271 -10413 0
7117 10273 -10415 0
7117 10275 -10417 0
7117 10277 -10419 0
7117 10279 -10421 0
7117 10281 -10423 0
7117 10283 -10425 0
7117 10285 -10427 0
7117 10287 -10429 0
7117 10289 -10431 0
7119 -10399 0
7119 10258 -10401 0
7119 10259 -10403 0
7119 10261 -10405 0
7119 10263 -10407 0
7119 10265 -10409 0
7119 10267 -10411 0
7119 10269 -10413 0
7119 10271 -10415 0
7119 10273 -10417 0
7119 10275 -10419 0
7119 10277 -10421 0
7119 10279 -10423 0
7119 10281 -10425 0
7119 10283 -10427 0
7119 10285 -10429 0
7119 10287 -10431 0
7119 10289 -10433 0
7121 -10401 0
7121 10258 -10403 0
7121 10259 -10405 0
7121 10261 -10407 0
7121 10263 -10409 0
7121 10265 -10411 0
7121 10267 -10413 0
7121 10269 -10415 0
7121 10271 -10417 0
7121 10273 -10419 0
7121 10275 -10421 0
7121 10277 -10423 0
7121 10279 -10425 0
7121 10281 -10427 0
7121 10283 -10429 0
7121 10285 -10431 0
7121 10287 -10433 0
7121 10289 -10435 0
7123 -10403 0
7123 10258 -10405 0
7123 10259 -10407 0
7123 10261 -10409 0
7123 10263 -10411 0
7123 10265 -10413 0
7123 10267 -10415 0
7123 10269 -10417 0
7123 10271 -10419 0
7123 10273 -10421 0
7123 10275 -10423 0
7123 10277 -10425 0
7123 10279 -10427 0
7123 10281 -10429 0
7123 10283 -10431 0
7123 10285 -10433 0
7123 10287 -10435 0
7123 10289 -10437 0
7125 -10405 0
7125 10258 -10407 0
7125 10259 -10409 0
7125 10261 -10411 0
7125 10263 -10413 0
7125 10265 -10415 0
7125 10267 -10417 0
7125 10269 -10419 0
7125 10271 -10421 0
7125 10273 -10423 0
7125 10275 -10425 0
7125 10277 -10427 0
7125 10279 -10429 0
7125 10281 -10431 0
7125 10283 -10433 0
7125 10285 -10435 0
7125 10287 -10437 0
7125 10289 -10439 0
7127 -10407 0
7127 10258 -10409 0
7127 10259 -10411 0
7127 10261 -10413 0
7127 10263 -10415 0
7127 10265 -10417 0
7127 10267 -10419 0
7127 10269 -10421 0
7127 10271 -10423 0
7127 10273 -10425 0
7127 10275 -10427 0
7127 10277 -10429 0
7127 10279 -10431 0
7127 10281 -10433 0
7127 10283 -10435 0
7127 10285 -10437 0
7127 10287 -10439 0
7127 10289 -10441 0
7129 -10409 0
7129 10258 -10411 0
7129 10259 -10413 0
7129 10261 -10415 0
7129 10263 -10417 0
7129 10265 -10419 0
7129 10267 -10421 0
7129 10269 -10423 0
7129 10271 -10425 0
7129 10273 -10427 0
7129 10275 -10429 0
7129 10277 -10431 0
7129 10279 -10433 0
7129 10281 -10435 0
7129 10283 -10437 0
7129 10285 -10439 0
7129 10287 -10441 0
7129 10289 -10443 0
7131 -10411 0
7131 10258 -10413 0
7131 10259 -10415 0
7131 10261 -10417 0
7131 10263 -10419 0
7131 10265 -10421 0
7131 10267 -10423 0
7131 10269 -10425 0
7131 10271 -10427 0
7131 10273 -10429 0
7131 10275 -10431 0
7131 10277 -10433 0
7131 10279 -10435 0
7131 10281 -10437 0
7131 10283 -10439 0
7131 10285 -10441 0
7131 10287 -10443 0
7131 10289 -10445 0
c (0<=(aux420 - aux424 + aux64))
-10289 10445 0
-10287 10443 0
-10285 10441 0
-10283 10439 0
-10281 10437 0
-10279 10435 0
-10277 10433 0
-10275 10431 0
-10273 10429 0
-10271 10427 0
-10269 10425 0
-10267 10423 0
-10265 10421 0
-10263 10419 0
-10261 10417 0
-10259 10415 0
-10258 10413 0
-7131 10445 0
-7131 -10289 10443 0
-7131 -10287 10441 0
-7131 -10285 10439 0
-7131 -10283 10437 0
-7131 -10281 10435 0
-7131 -10279 10433 0
-7131 -10277 10431 0
-7131 -10275 10429 0
-7131 -10273 10427 0
-7131 -10271 10425 0
-7131 -10269 10423 0
-7131 -10267 10421 0
-7131 -10265 10419 0
-7131 -10263 10417 0
-7131 -10261 10415 0
-7131 -10259 10413 0
-7131 -10258 10411 0
-7129 10443 0
-7129 -10289 10441 0
-7129 -10287 10439 0
-7129 -10285 10437 0
-7129 -10283 10435 0
-7129 -10281 10433 0
-7129 -10279 10431 0
-7129 -10277 10429 0
-7129 -10275 10427 0
-7129 -10273 10425 0
-7129 -10271 10423 0
-7129 -10269 10421 0
-7129 -10267 10419 0
-7129 -10265 10417 0
-7129 -10263 10415 0
-7129 -10261 10413 0
-7129 -10259 10411 0
-7129 -10258 10409 0
-7127 10441 0
-7127 -10289 10439 0
-7127 -10287 10437 0
-7127 -10285 10435 0
-7127 -10283 10433 0
-7127 -10281 10431 0
-7127 -10279 10429 0
-7127 -10277 10427 0
-7127 -10275 10425 0
-7127 -10273 10423 0
-7127 -10271 10421 0
-7127 -10269 10419 0
-7127 -10267 10417 0
-7127 -10265 10415 0
-7127 -10263 10413 0
-7127 -10261 10411 0
-7127 -10259 10409 0
-7127 -10258 10407 0
-7125 10439 0
-7125 -10289 10437 0
-7125 -10287 10435 0
-7125 -10285 10433 0
-7125 -10283 10431 0
-7125 -10281 10429 0
-7125 -10279 10427 0
-7125 -10277 10425 0
-7125 -10275 10423 0
-7125 -10273 10421 0
-7125 -10271 10419 0
-7125 -10269 10417 0
-7125 -10267 10415 0
-7125 -10265 10413 0
-7125 -10263 10411 0
-7125 -10261 10409 0
-7125 -10259 10407 0
-7125 -10258 10405 0
-7123 10437 0
-7123 -10289 10435 0
-7123 -10287 10433 0
-7123 -10285 10431 0
-7123 -10283 10429 0
-7123 -10281 10427 0
-7123 -10279 10425 0
-7123 -10277 10423 0
-7123 -10275 10421 0
-7123 -10273 10419 0
-7123 -10271 10417 0
-7123 -10269 10415 0
-7123 -10267 10413 0
-7123 -10265 10411 0
-7123 -10263 10409 0
-7123 -10261 10407 0
-7123 -10259 10405 0
-7123 -10258 10403 0
-7121 10435 0
-7121 -10289 10433 0
-7121 -10287 10431 0
-7121 -10285 10429 0
-7121 -10283 10427 0
-7121 -10281 10425 0
-7121 -10279 10423 0
-7121 -10277 10421 0
-7121 -10275 10419 0
-7121 -10273 10417 0
-7121 -10271 10415 0
-7121 -10269 10413 0
-7121 -10267 10411 0
-7121 -10265 10409 0
-7121 -10263 10407 0
-7121 -10261 10405 0
-7121 -10259 10403 0
-7121 -10258 10401 0
-7119 10433 0
-7119 -10289 10431 0
-7119 -10287 10429 0
-7119 -10285 10427 0
-7119 -10283 10425 0
-7119 -10281 10423 0
-7119 -10279 10421 0
-7119 -10277 10419 0
-7119 -10275 10417 0
-7119 -10273 10415 0
-7119 -10271 10413 0
-7119 -10269 10411 0
-7119 -10267 10409 0
-7119 -10265 10407 0
-7119 -10263 10405 0
-7119 -10261 10403 0
-7119 -10259 10401 0
-7119 -10258 10399 0
-7117 10431 0
-7117 -10289 10429 0
-7117 -10287 10427 0
-7117 -10285 10425 0
-7117 -10283 10423 0
-7117 -10281 10421 0
-7117 -10279 10419 0
-7117 -10277 10417 0
-7117 -10275 10415 0
-7117 -10273 10413 0
-7117 -10271 10411 0
-7117 -10269 10409 0
-7117 -10267 10407 0
-7117 -10265 10405 0
-7117 -10263 10403 0
-7117 -10261 10401 0
-7117 -10259 10399 0
-7117 -10258 10397 0
-7116 10429 0
-7116 -10289 10427 0
-7116 -10287 10425 0
-7116 -10285 10423 0
-7116 -10283 10421 0
-7116 -10281 10419 0
-7116 -10279 10417 0
-7116 -10277 10415 0
-7116 -10275 10413 0
-7116 -10273 10411 0
-7116 -10271 10409 0
-7116 -10269 10407 0
-7116 -10267 10405 0
-7116 -10265 10403 0
-7116 -10263 10401 0
-7116 -10261 10399 0
-7116 -10259 10397 0
-7116 -10258 10396 0
c ((aux422 + aux423 - aux425)<=0)
10361 -10447 0
10362 -10448 0
10364 -10450 0
10366 -10452 0
10368 -10454 0
10370 -10456 0
10372 -10458 0
10374 -10460 0
10376 -10462 0
10378 -10464 0
10380 -10466 0
10382 -10468 0
10384 -10470 0
10386 -10472 0
10388 -10474 0
10390 -10476 0
10392 -10478 0
10394 -10480 0
10326 -10447 0
10326 10361 -10448 0
10326 10362 -10450 0
10326 10364 -10452 0
10326 10366 -10454 0
10326 10368 -10456 0
10326 10370 -10458 0
10326 10372 -10460 0
10326 10374 -10462 0
10326 10376 -10464 0
10326 10378 -10466 0
10326 10380 -10468 0
10326 10382 -10470 0
10326 10384 -10472 0
10326 10386 -10474 0
10326 10388 -10476 0
10326 10390 -10478 0
10326 10392 -10480 0
10326 10394 -10482 0
10327 -10448 0
10327 10361 -10450 0
10327 10362 -10452 0
10327 10364 -10454 0
10327 10366 -10456 0
10327 10368 -10458 0
10327 10370 -10460 0
10327 10372 -10462 0
10327 10374 -10464 0
10327 10376 -10466 0
10327 10378 -10468 0
10327 10380 -10470 0
10327 10382 -10472 0
10327 10384 -10474 0
10327 10386 -10476 0
10327 10388 -10478 0
10327 10390 -10480 0
10327 10392 -10482 0
10327 10394 -10484 0
10329 -10450 0
10329 10361 -10452 0
10329 10362 -10454 0
10329 10364 -10456 0
10329 10366 -10458 0
10329 10368 -10460 0
10329 10370 -10462 0
10329 10372 -10464 0
10329 10374 -10466 0
10329 10376 -10468 0
10329 10378 -10470 0
10329 10380 -10472 0
10329 10382 -10474 0
10329 10384 -10476 0
10329 10386 -10478 0
10329 10388 -10480 0
10329 10390 -10482 0
10329 10392 -10484 0
10329 10394 -10486 0
10331 -10452 0
10331 10361 -10454 0
10331 10362 -10456 0
10331 10364 -10458 0
10331 10366 -10460 0
10331 10368 -10462 0
10331 10370 -10464 0
10331 10372 -10466 0
10331 10374 -10468 0
10331 10376 -10470 0
10331 10378 -10472 0
10331 10380 -10474 0
10331 10382 -10476 0
10331 10384 -10478 0
10331 10386 -10480 0
10331 10388 -10482 0
10331 10390 -10484 0
10331 10392 -10486 0
10331 10394 -10488 0
10333 -10454 0
10333 10361 -10456 0
10333 10362 -10458 0
10333 10364 -10460 0
10333 10366 -10462 0
10333 10368 -10464 0
10333 10370 -10466 0
10333 10372 -10468 0
10333 10374 -10470 0
10333 10376 -10472 0
10333 10378 -10474 0
10333 10380 -10476 0
10333 10382 -10478 0
10333 10384 -10480 0
10333 10386 -10482 0
10333 10388 -10484 0
10333 10390 -10486 0
10333 10392 -10488 0
10333 10394 -10490 0
10335 -10456 0
10335 10361 -10458 0
10335 10362 -10460 0
10335 10364 -10462 0
10335 10366 -10464 0
10335 10368 -10466 0
10335 10370 -10468 0
10335 10372 -10470 0
10335 10374 -10472 0
10335 10376 -10474 0
10335 10378 -10476 0
10335 10380 -10478 0
10335 10382 -10480 0
10335 10384 -10482 0
10335 10386 -10484 0
10335 10388 -10486 0
10335 10390 -10488 0
10335 10392 -10490 0
10335 10394 -10492 0
10337 -10458 0
10337 10361 -10460 0
10337 10362 -10462 0
10337 10364 -10464 0
10337 10366 -10466 0
10337 10368 -10468 0
10337 10370 -10470 0
10337 10372 -10472 0
10337 10374 -10474 0
10337 10376 -10476 0
10337 10378 -10478 0
10337 10380 -10480 0
10337 10382 -10482 0
10337 10384 -10484 0
10337 10386 -10486 0
10337 10388 -10488 0
10337 10390 -10490 0
10337 10392 -10492 0
10337 10394 -10494 0
10339 -10460 0
10339 10361 -10462 0
10339 10362 -10464 0
10339 10364 -10466 0
10339 10366 -10468 0
10339 10368 -10470 0
10339 10370 -10472 0
10339 10372 -10474 0
10339 10374 -10476 0
10339 10376 -10478 0
10339 10378 -10480 0
10339 10380 -10482 0
10339 10382 -10484 0
10339 10384 -10486 0
10339 10386 -10488 0
10339 10388 -10490 0
10339 10390 -10492 0
10339 10392 -10494 0
10339 10394 -10496 0
10341 -10462 0
10341 10361 -10464 0
10341 10362 -10466 0
10341 10364 -10468 0
10341 10366 -10470 0
10341 10368 -10472 0
10341 10370 -10474 0
10341 10372 -10476 0
10341 10374 -10478 0
10341 10376 -10480 0
10341 10378 -10482 0
10341 10380 -10484 0
10341 10382 -10486 0
10341 10384 -10488 0
10341 10386 -10490 0
10341 10388 -10492 0
10341 10390 -10494 0
10341 10392 -10496 0
10341 10394 -10498 0
10343 -10464 0
10343 10361 -10466 0
10343 10362 -10468 0
10343 10364 -10470 0
10343 10366 -10472 0
10343 10368 -10474 0
10343 10370 -10476 0
10343 10372 -10478 0
10343 10374 -10480 0
10343 10376 -10482 0
10343 10378 -10484 0
10343 10380 -10486 0
10343 10382 -10488 0
10343 10384 -10490 0
10343 10386 -10492 0
10343 10388 -10494 0
10343 10390 -10496 0
10343 10392 -10498 0
10343 10394 -10500 0
10345 -10466 0
10345 10361 -10468 0
10345 10362 -10470 0
10345 10364 -10472 0
10345 10366 -10474 0
10345 10368 -10476 0
10345 10370 -10478 0
10345 10372 -10480 0
10345 10374 -10482 0
10345 10376 -10484 0
10345 10378 -10486 0
10345 10380 -10488 0
10345 10382 -10490 0
10345 10384 -10492 0
10345 10386 -10494 0
10345 10388 -10496 0
10345 10390 -10498 0
10345 10392 -10500 0
10345 10394 -10502 0
10347 -10468 0
10347 10361 -10470 0
10347 10362 -10472 0
10347 10364 -10474 0
10347 10366 -10476 0
10347 10368 -10478 0
10347 10370 -10480 0
10347 10372 -10482 0
10347 10374 -10484 0
10347 10376 -10486 0
10347 10378 -10488 0
10347 10380 -10490 0
10347 10382 -10492 0
10347 10384 -10494 0
10347 10386 -10496 0
10347 10388 -10498 0
10347 10390 -10500 0
10347 10392 -10502 0
10347 10394 -10504 0
10349 -10470 0
10349 10361 -10472 0
10349 10362 -10474 0
10349 10364 -10476 0
10349 10366 -10478 0
10349 10368 -10480 0
10349 10370 -10482 0
10349 10372 -10484 0
10349 10374 -10486 0
10349 10376 -10488 0
10349 10378 -10490 0
10349 10380 -10492 0
10349 10382 -10494 0
10349 10384 -10496 0
10349 10386 -10498 0
10349 10388 -10500 0
10349 10390 -10502 0
10349 10392 -10504 0
10349 10394 -10506 0
10351 -10472 0
10351 10361 -10474 0
10351 10362 -10476 0
10351 10364 -10478 0
10351 10366 -10480 0
10351 10368 -10482 0
10351 10370 -10484 0
10351 10372 -10486 0
10351 10374 -10488 0
10351 10376 -10490 0
10351 10378 -10492 0
10351 10380 -10494 0
10351 10382 -10496 0
10351 10384 -10498 0
10351 10386 -10500 0
10351 10388 -10502 0
10351 10390 -10504 0
10351 10392 -10506 0
10351 10394 -10508 0
10353 -10474 0
10353 10361 -10476 0
10353 10362 -10478 0
10353 10364 -10480 0
10353 10366 -10482 0
10353 10368 -10484 0
10353 10370 -10486 0
10353 10372 -10488 0
10353 10374 -10490 0
10353 10376 -10492 0
10353 10378 -10494 0
10353 10380 -10496 0
10353 10382 -10498 0
10353 10384 -10500 0
10353 10386 -10502 0
10353 10388 -10504 0
10353 10390 -10506 0
10353 10392 -10508 0
10353 10394 -10510 0
10355 -10476 0
10355 10361 -10478 0
10355 10362 -10480 0
10355 10364 -10482 0
10355 10366 -10484 0
10355 10368 -10486 0
10355 10370 -10488 0
10355 10372 -10490 0
10355 10374 -10492 0
10355 10376 -10494 0
10355 10378 -10496 0
10355 10380 -10498 0
10355 10382 -10500 0
10355 10384 -10502 0
10355 10386 -10504 0
10355 10388 -10506 0
10355 10390 -10508 0
10355 10392 -10510 0
10355 10394 -10512 0
10357 -10478 0
10357 10361 -10480 0
10357 10362 -10482 0
10357 10364 -10484 0
10357 10366 -10486 0
10357 10368 -10488 0
10357 10370 -10490 0
10357 10372 -10492 0
10357 10374 -10494 0
10357 10376 -10496 0
10357 10378 -10498 0
10357 10380 -10500 0
10357 10382 -10502 0
10357 10384 -10504 0
10357 10386 -10506 0
10357 10388 -10508 0
10357 10390 -10510 0
10357 10392 -10512 0
10357 10394 -10514 0
10359 -10480 0
10359 10361 -10482 0
10359 10362 -10484 0
10359 10364 -10486 0
10359 10366 -10488 0
10359 10368 -10490 0
10359 10370 -10492 0
10359 10372 -10494 0
10359 10374 -10496 0
10359 10376 -10498 0
10359 10378 -10500 0
10359 10380 -10502 0
10359 10382 -10504 0
10359 10384 -10506 0
10359 10386 -10508 0
10359 10388 -10510 0
10359 10390 -10512 0
10359 10392 -10514 0
10359 10394 -10516 0
c (0<=(aux422 + aux423 - aux425))
-10394 10516 0
-10392 10514 0
-10390 10512 0
-10388 10510 0
-10386 10508 0
-10384 10506 0
-10382 10504 0
-10380 10502 0
-10378 10500 0
-10376 10498 0
-10374 10496 0
-10372 10494 0
-10370 10492 0
-10368 10490 0
-10366 10488 0
-10364 10486 0
-10362 10484 0
-10361 10482 0
-10359 10516 0
-10359 -10394 10514 0
-10359 -10392 10512 0
-10359 -10390 10510 0
-10359 -10388 10508 0
-10359 -10386 10506 0
-10359 -10384 10504 0
-10359 -10382 10502 0
-10359 -10380 10500 0
-10359 -10378 10498 0
-10359 -10376 10496 0
-10359 -10374 10494 0
-10359 -10372 10492 0
-10359 -10370 10490 0
-10359 -10368 10488 0
-10359 -10366 10486 0
-10359 -10364 10484 0
-10359 -10362 10482 0
-10359 -10361 10480 0
-10357 10514 0
-10357 -10394 10512 0
-10357 -10392 10510 0
-10357 -10390 10508 0
-10357 -10388 10506 0
-10357 -10386 10504 0
-10357 -10384 10502 0
-10357 -10382 10500 0
-10357 -10380 10498 0
-10357 -10378 10496 0
-10357 -10376 10494 0
-10357 -10374 10492 0
-10357 -10372 10490 0
-10357 -10370 10488 0
-10357 -10368 10486 0
-10357 -10366 10484 0
-10357 -10364 10482 0
-10357 -10362 10480 0
-10357 -10361 10478 0
-10355 10512 0
-10355 -10394 10510 0
-10355 -10392 10508 0
-10355 -10390 10506 0
-10355 -10388 10504 0
-10355 -10386 10502 0
-10355 -10384 10500 0
-10355 -10382 10498 0
-10355 -10380 10496 0
-10355 -10378 10494 0
-10355 -10376 10492 0
-10355 -10374 10490 0
-10355 -10372 10488 0
-10355 -10370 10486 0
-10355 -10368 10484 0
-10355 -10366 10482 0
-10355 -10364 10480 0
-10355 -10362 10478 0
-10355 -10361 10476 0
-10353 10510 0
-10353 -10394 10508 0
-10353 -10392 10506 0
-10353 -10390 10504 0
-10353 -10388 10502 0
-10353 -10386 10500 0
-10353 -10384 10498 0
-10353 -10382 10496 0
-10353 -10380 10494 0
-10353 -10378 10492 0
-10353 -10376 10490 0
-10353 -10374 10488 0
-10353 -10372 10486 0
-10353 -10370 10484 0
-10353 -10368 10482 0
-10353 -10366 10480 0
-10353 -10364 10478 0
-10353 -10362 10476 0
-10353 -10361 10474 0
-10351 10508 0
-10351 -10394 10506 0
-10351 -10392 10504 0
-10351 -10390 10502 0
-10351 -10388 10500 0
-10351 -10386 10498 0
-10351 -10384 10496 0
-10351 -10382 10494 0
-10351 -10380 10492 0
-10351 -10378 10490 0
-10351 -10376 10488 0
-10351 -10374 10486 0
-10351 -10372 10484 0
-10351 -10370 10482 0
-10351 -10368 10480 0
-10351 -10366 10478 0
-10351 -10364 10476 0
-10351 -10362 10474 0
-10351 -10361 10472 0
-10349 10506 0
-10349 -10394 10504 0
-10349 -10392 10502 0
-10349 -10390 10500 0
-10349 -10388 10498 0
-10349 -10386 10496 0
-10349 -10384 10494 0
-10349 -10382 10492 0
-10349 -10380 10490 0
-10349 -10378 10488 0
-10349 -10376 10486 0
-10349 -10374 10484 0
-10349 -10372 10482 0
-10349 -10370 10480 0
-10349 -10368 10478 0
-10349 -10366 10476 0
-10349 -10364 10474 0
-10349 -10362 10472 0
-10349 -10361 10470 0
-10347 10504 0
-10347 -10394 10502 0
-10347 -10392 10500 0
-10347 -10390 10498 0
-10347 -10388 10496 0
-10347 -10386 10494 0
-10347 -10384 10492 0
-10347 -10382 10490 0
-10347 -10380 10488 0
-10347 -10378 10486 0
-10347 -10376 10484 0
-10347 -10374 10482 0
-10347 -10372 10480 0
-10347 -10370 10478 0
-10347 -10368 10476 0
-10347 -10366 10474 0
-10347 -10364 10472 0
-10347 -10362 10470 0
-10347 -10361 10468 0
-10345 10502 0
-10345 -10394 10500 0
-10345 -10392 10498 0
-10345 -10390 10496 0
-10345 -10388 10494 0
-10345 -10386 10492 0
-10345 -10384 10490 0
-10345 -10382 10488 0
-10345 -10380 10486 0
-10345 -10378 10484 0
-10345 -10376 10482 0
-10345 -10374 10480 0
-10345 -10372 10478 0
-10345 -10370 10476 0
-10345 -10368 10474 0
-10345 -10366 10472 0
-10345 -10364 10470 0
-10345 -10362 10468 0
-10345 -10361 10466 0
-10343 10500 0
-10343 -10394 10498 0
-10343 -10392 10496 0
-10343 -10390 10494 0
-10343 -10388 10492 0
-10343 -10386 10490 0
-10343 -10384 10488 0
-10343 -10382 10486 0
-10343 -10380 10484 0
-10343 -10378 10482 0
-10343 -10376 10480 0
-10343 -10374 10478 0
-10343 -10372 10476 0
-10343 -10370 10474 0
-10343 -10368 10472 0
-10343 -10366 10470 0
-10343 -10364 10468 0
-10343 -10362 10466 0
-10343 -10361 10464 0
-10341 10498 0
-10341 -10394 10496 0
-10341 -10392 10494 0
-10341 -10390 10492 0
-10341 -10388 10490 0
-10341 -10386 10488 0
-10341 -10384 10486 0
-10341 -10382 10484 0
-10341 -10380 10482 0
-10341 -10378 10480 0
-10341 -10376 10478 0
-10341 -10374 10476 0
-10341 -10372 10474 0
-10341 -10370 10472 0
-10341 -10368 10470 0
-10341 -10366 10468 0
-10341 -10364 10466 0
-10341 -10362 10464 0
-10341 -10361 10462 0
-10339 10496 0
-10339 -10394 10494 0
-10339 -10392 10492 0
-10339 -10390 10490 0
-10339 -10388 10488 0
-10339 -10386 10486 0
-10339 -10384 10484 0
-10339 -10382 10482 0
-10339 -10380 10480 0
-10339 -10378 10478 0
-10339 -10376 10476 0
-10339 -10374 10474 0
-10339 -10372 10472 0
-10339 -10370 10470 0
-10339 -10368 10468 0
-10339 -10366 10466 0
-10339 -10364 10464 0
-10339 -10362 10462 0
-10339 -10361 10460 0
-10337 10494 0
-10337 -10394 10492 0
-10337 -10392 10490 0
-10337 -10390 10488 0
-10337 -10388 10486 0
-10337 -10386 10484 0
-10337 -10384 10482 0
-10337 -10382 10480 0
-10337 -10380 10478 0
-10337 -10378 10476 0
-10337 -10376 10474 0
-10337 -10374 10472 0
-10337 -10372 10470 0
-10337 -10370 10468 0
-10337 -10368 10466 0
-10337 -10366 10464 0
-10337 -10364 10462 0
-10337 -10362 10460 0
-10337 -10361 10458 0
-10335 10492 0
-10335 -10394 10490 0
-10335 -10392 10488 0
-10335 -10390 10486 0
-10335 -10388 10484 0
-10335 -10386 10482 0
-10335 -10384 10480 0
-10335 -10382 10478 0
-10335 -10380 10476 0
-10335 -10378 10474 0
-10335 -10376 10472 0
-10335 -10374 10470 0
-10335 -10372 10468 0
-10335 -10370 10466 0
-10335 -10368 10464 0
-10335 -10366 10462 0
-10335 -10364 10460 0
-10335 -10362 10458 0
-10335 -10361 10456 0
-10333 10490 0
-10333 -10394 10488 0
-10333 -10392 10486 0
-10333 -10390 10484 0
-10333 -10388 10482 0
-10333 -10386 10480 0
-10333 -10384 10478 0
-10333 -10382 10476 0
-10333 -10380 10474 0
-10333 -10378 10472 0
-10333 -10376 10470 0
-10333 -10374 10468 0
-10333 -10372 10466 0
-10333 -10370 10464 0
-10333 -10368 10462 0
-10333 -10366 10460 0
-10333 -10364 10458 0
-10333 -10362 10456 0
-10333 -10361 10454 0
-10331 10488 0
-10331 -10394 10486 0
-10331 -10392 10484 0
-10331 -10390 10482 0
-10331 -10388 10480 0
-10331 -10386 10478 0
-10331 -10384 10476 0
-10331 -10382 10474 0
-10331 -10380 10472 0
-10331 -10378 10470 0
-10331 -10376 10468 0
-10331 -10374 10466 0
-10331 -10372 10464 0
-10331 -10370 10462 0
-10331 -10368 10460 0
-10331 -10366 10458 0
-10331 -10364 10456 0
-10331 -10362 10454 0
-10331 -10361 10452 0
-10329 10486 0
-10329 -10394 10484 0
-10329 -10392 10482 0
-10329 -10390 10480 0
-10329 -10388 10478 0
-10329 -10386 10476 0
-10329 -10384 10474 0
-10329 -10382 10472 0
-10329 -10380 10470 0
-10329 -10378 10468 0
-10329 -10376 10466 0
-10329 -10374 10464 0
-10329 -10372 10462 0
-10329 -10370 10460 0
-10329 -10368 10458 0
-10329 -10366 10456 0
-10329 -10364 10454 0
-10329 -10362 10452 0
-10329 -10361 10450 0
-10327 10484 0
-10327 -10394 10482 0
-10327 -10392 10480 0
-10327 -10390 10478 0
-10327 -10388 10476 0
-10327 -10386 10474 0
-10327 -10384 10472 0
-10327 -10382 10470 0
-10327 -10380 10468 0
-10327 -10378 10466 0
-10327 -10376 10464 0
-10327 -10374 10462 0
-10327 -10372 10460 0
-10327 -10370 10458 0
-10327 -10368 10456 0
-10327 -10366 10454 0
-10327 -10364 10452 0
-10327 -10362 10450 0
-10327 -10361 10448 0
-10326 10482 0
-10326 -10394 10480 0
-10326 -10392 10478 0
-10326 -10390 10476 0
-10326 -10388 10474 0
-10326 -10386 10472 0
-10326 -10384 10470 0
-10326 -10382 10468 0
-10326 -10380 10466 0
-10326 -10378 10464 0
-10326 -10376 10462 0
-10326 -10374 10460 0
-10326 -10372 10458 0
-10326 -10370 10456 0
-10326 -10368 10454 0
-10326 -10366 10452 0
-10326 -10364 10450 0
-10326 -10362 10448 0
-10326 -10361 10447 0
c (( - aux426 + aux79 + shift(variant_fields_00003_00002_00001, -1))<=0)
7355 -10518 0
7356 -10519 0
7358 -10521 0
7360 -10523 0
7362 -10525 0
7364 -10527 0
7366 -10529 0
7368 -10531 0
7370 -10533 0
3782 -10518 0
3782 7355 -10519 0
3782 7356 -10521 0
3782 7358 -10523 0
3782 7360 -10525 0
3782 7362 -10527 0
3782 7364 -10529 0
3782 7366 -10531 0
3782 7368 -10533 0
3782 7370 -10535 0
3783 -10519 0
3783 7355 -10521 0
3783 7356 -10523 0
3783 7358 -10525 0
3783 7360 -10527 0
3783 7362 -10529 0
3783 7364 -10531 0
3783 7366 -10533 0
3783 7368 -10535 0
3783 7370 -10537 0
3785 -10521 0
3785 7355 -10523 0
3785 7356 -10525 0
3785 7358 -10527 0
3785 7360 -10529 0
3785 7362 -10531 0
3785 7364 -10533 0
3785 7366 -10535 0
3785 7368 -10537 0
3785 7370 -10539 0
3787 -10523 0
3787 7355 -10525 0
3787 7356 -10527 0
3787 7358 -10529 0
3787 7360 -10531 0
3787 7362 -10533 0
3787 7364 -10535 0
3787 7366 -10537 0
3787 7368 -10539 0
3787 7370 -10541 0
3789 -10525 0
3789 7355 -10527 0
3789 7356 -10529 0
3789 7358 -10531 0
3789 7360 -10533 0
3789 7362 -10535 0
3789 7364 -10537 0
3789 7366 -10539 0
3789 7368 -10541 0
3789 7370 -10543 0
3791 -10527 0
3791 7355 -10529 0
3791 7356 -10531 0
3791 7358 -10533 0
3791 7360 -10535 0
3791 7362 -10537 0
3791 7364 -10539 0
3791 7366 -10541 0
3791 7368 -10543 0
3791 7370 -10545 0
3793 -10529 0
3793 7355 -10531 0
3793 7356 -10533 0
3793 7358 -10535 0
3793 7360 -10537 0
3793 7362 -10539 0
3793 7364 -10541 0
3793 7366 -10543 0
3793 7368 -10545 0
3793 7370 -10547 0
3795 -10531 0
3795 7355 -10533 0
3795 7356 -10535 0
3795 7358 -10537 0
3795 7360 -10539 0
3795 7362 -10541 0
3795 7364 -10543 0
3795 7366 -10545 0
3795 7368 -10547 0
3795 7370 -10549 0
c (0<=( - aux426 + aux79 + shift(variant_fields_00003_00002_00001, -1)))
-7370 10549 0
-7368 10547 0
-7366 10545 0
-7364 10543 0
-7362 10541 0
-7360 10539 0
-7358 10537 0
-7356 10535 0
-7355 10533 0
-3795 10549 0
-3795 -7370 10547 0
-3795 -7368 10545 0
-3795 -7366 10543 0
-3795 -7364 10541 0
-3795 -7362 10539 0
-3795 -7360 10537 0
-3795 -7358 10535 0
-3795 -7356 10533 0
-3795 -7355 10531 0
-3793 10547 0
-3793 -7370 10545 0
-3793 -7368 10543 0
-3793 -7366 10541 0
-3793 -7364 10539 0
-3793 -7362 10537 0
-3793 -7360 10535 0
-3793 -7358 10533 0
-3793 -7356 10531 0
-3793 -7355 10529 0
-3791 10545 0
-3791 -7370 10543 0
-3791 -7368 10541 0
-3791 -7366 10539 0
-3791 -7364 10537 0
-3791 -7362 10535 0
-3791 -7360 10533 0
-3791 -7358 10531 0
-3791 -7356 10529 0
-3791 -7355 10527 0
-3789 10543 0
-3789 -7370 10541 0
-3789 -7368 10539 0
-3789 -7366 10537 0
-3789 -7364 10535 0
-3789 -7362 10533 0
-3789 -7360 10531 0
-3789 -7358 10529 0
-3789 -7356 10527 0
-3789 -7355 10525 0
-3787 10541 0
-3787 -7370 10539 0
-3787 -7368 10537 0
-3787 -7366 10535 0
-3787 -7364 10533 0
-3787 -7362 10531 0
-3787 -7360 10529 0
-3787 -7358 10527 0
-3787 -7356 10525 0
-3787 -7355 10523 0
-3785 10539 0
-3785 -7370 10537 0
-3785 -7368 10535 0
-3785 -7366 10533 0
-3785 -7364 10531 0
-3785 -7362 10529 0
-3785 -7360 10527 0
-3785 -7358 10525 0
-3785 -7356 10523 0
-3785 -7355 10521 0
-3783 10537 0
-3783 -7370 10535 0
-3783 -7368 10533 0
-3783 -7366 10531 0
-3783 -7364 10529 0
-3783 -7362 10527 0
-3783 -7360 10525 0
-3783 -7358 10523 0
-3783 -7356 10521 0
-3783 -7355 10519 0
-3782 10535 0
-3782 -7370 10533 0
-3782 -7368 10531 0
-3782 -7366 10529 0
-3782 -7364 10527 0
-3782 -7362 10525 0
-3782 -7360 10523 0
-3782 -7358 10521 0
-3782 -7356 10519 0
-3782 -7355 10518 0
c (( - aux427 + aux72 + aux78)<=0)
7338 -10551 0
7339 -10552 0
7341 -10554 0
7343 -10556 0
7345 -10558 0
7347 -10560 0
7349 -10562 0
7351 -10564 0
7353 -10566 0
7236 -10551 0
7236 7338 -10552 0
7236 7339 -10554 0
7236 7341 -10556 0
7236 7343 -10558 0
7236 7345 -10560 0
7236 7347 -10562 0
7236 7349 -10564 0
7236 7351 -10566 0
7236 7353 -10568 0
7237 -10552 0
7237 7338 -10554 0
7237 7339 -10556 0
7237 7341 -10558 0
7237 7343 -10560 0
7237 7345 -10562 0
7237 7347 -10564 0
7237 7349 -10566 0
7237 7351 -10568 0
7237 7353 -10570 0
7239 -10554 0
7239 7338 -10556 0
7239 7339 -10558 0
7239 7341 -10560 0
7239 7343 -10562 0
7239 7345 -10564 0
7239 7347 -10566 0
7239 7349 -10568 0
7239 7351 -10570 0
7239 7353 -10572 0
7241 -10556 0
7241 7338 -10558 0
7241 7339 -10560 0
7241 7341 -10562 0
7241 7343 -10564 0
7241 7345 -10566 0
7241 7347 -10568 0
7241 7349 -10570 0
7241 7351 -10572 0
7241 7353 -10574 0
7243 -10558 0
7243 7338 -10560 0
7243 7339 -10562 0
7243 7341 -10564 0
7243 7343 -10566 0
7243 7345 -10568 0
7243 7347 -10570 0
7243 7349 -10572 0
7243 7351 -10574 0
7243 7353 -10576 0
7245 -10560 0
7245 7338 -10562 0
7245 7339 -10564 0
7245 7341 -10566 0
7245 7343 -10568 0
7245 7345 -10570 0
7245 7347 -10572 0
7245 7349 -10574 0
7245 7351 -10576 0
7245 7353 -10578 0
7247 -10562 0
7247 7338 -10564 0
7247 7339 -10566 0
7247 7341 -10568 0
7247 7343 -10570 0
7247 7345 -10572 0
7247 7347 -10574 0
7247 7349 -10576 0
7247 7351 -10578 0
7247 7353 -10580 0
7249 -10564 0
7249 7338 -10566 0
7249 7339 -10568 0
7249 7341 -10570 0
7249 7343 -10572 0
7249 7345 -10574 0
7249 7347 -10576 0
7249 7349 -10578 0
7249 7351 -10580 0
7249 7353 -10582 0
7251 -10566 0
7251 7338 -10568 0
7251 7339 -10570 0
7251 7341 -10572 0
7251 7343 -10574 0
7251 7345 -10576 0
7251 7347 -10578 0
7251 7349 -10580 0
7251 7351 -10582 0
7251 7353 -10584 0
c (0<=( - aux427 + aux72 + aux78))
-7353 10584 0
-7351 10582 0
-7349 10580 0
-7347 10578 0
-7345 10576 0
-7343 10574 0
-7341 10572 0
-7339 10570 0
-7338 10568 0
-7251 10584 0
-7251 -7353 10582 0
-7251 -7351 10580 0
-7251 -7349 10578 0
-7251 -7347 10576 0
-7251 -7345 10574 0
-7251 -7343 10572 0
-7251 -7341 10570 0
-7251 -7339 10568 0
-7251 -7338 10566 0
-7249 10582 0
-7249 -7353 10580 0
-7249 -7351 10578 0
-7249 -7349 10576 0
-7249 -7347 10574 0
-7249 -7345 10572 0
-7249 -7343 10570 0
-7249 -7341 10568 0
-7249 -7339 10566 0
-7249 -7338 10564 0
-7247 10580 0
-7247 -7353 10578 0
-7247 -7351 10576 0
-7247 -7349 10574 0
-7247 -7347 10572 0
-7247 -7345 10570 0
-7247 -7343 10568 0
-7247 -7341 10566 0
-7247 -7339 10564 0
-7247 -7338 10562 0
-7245 10578 0
-7245 -7353 10576 0
-7245 -7351 10574 0
-7245 -7349 10572 0
-7245 -7347 10570 0
-7245 -7345 10568 0
-7245 -7343 10566 0
-7245 -7341 10564 0
-7245 -7339 10562 0
-7245 -7338 10560 0
-7243 10576 0
-7243 -7353 10574 0
-7243 -7351 10572 0
-7243 -7349 10570 0
-7243 -7347 10568 0
-7243 -7345 10566 0
-7243 -7343 10564 0
-7243 -7341 10562 0
-7243 -7339 10560 0
-7243 -7338 10558 0
-7241 10574 0
-7241 -7353 10572 0
-7241 -7351 10570 0
-7241 -7349 10568 0
-7241 -7347 10566 0
-7241 -7345 10564 0
-7241 -7343 10562 0
-7241 -7341 10560 0
-7241 -7339 10558 0
-7241 -7338 10556 0
-7239 10572 0
-7239 -7353 10570 0
-7239 -7351 10568 0
-7239 -7349 10566 0
-7239 -7347 10564 0
-7239 -7345 10562 0
-7239 -7343 10560 0
-7239 -7341 10558 0
-7239 -7339 10556 0
-7239 -7338 10554 0
-7237 10570 0
-7237 -7353 10568 0
-7237 -7351 10566 0
-7237 -7349 10564 0
-7237 -7347 10562 0
-7237 -7345 10560 0
-7237 -7343 10558 0
-7237 -7341 10556 0
-7237 -7339 10554 0
-7237 -7338 10552 0
-7236 10568 0
-7236 -7353 10566 0
-7236 -7351 10564 0
-7236 -7349 10562 0
-7236 -7347 10560 0
-7236 -7345 10558 0
-7236 -7343 10556 0
-7236 -7341 10554 0
-7236 -7339 10552 0
-7236 -7338 10551 0
c (( - aux428 + aux74 + aux77)<=0)
7321 -10586 0
7322 -10587 0
7324 -10589 0
7326 -10591 0
7328 -10593 0
7330 -10595 0
7332 -10597 0
7334 -10599 0
7336 -10601 0
7270 -10586 0
7270 7321 -10587 0
7270 7322 -10589 0
7270 7324 -10591 0
7270 7326 -10593 0
7270 7328 -10595 0
7270 7330 -10597 0
7270 7332 -10599 0
7270 7334 -10601 0
7270 7336 -10603 0
7271 -10587 0
7271 7321 -10589 0
7271 7322 -10591 0
7271 7324 -10593 0
7271 7326 -10595 0
7271 7328 -10597 0
7271 7330 -10599 0
7271 7332 -10601 0
7271 7334 -10603 0
7271 7336 -10605 0
7273 -10589 0
7273 7321 -10591 0
7273 7322 -10593 0
7273 7324 -10595 0
7273 7326 -10597 0
7273 7328 -10599 0
7273 7330 -10601 0
7273 7332 -10603 0
7273 7334 -10605 0
7273 7336 -10607 0
7275 -10591 0
7275 7321 -10593 0
7275 7322 -10595 0
7275 7324 -10597 0
7275 7326 -10599 0
7275 7328 -10601 0
7275 7330 -10603 0
7275 7332 -10605 0
7275 7334 -10607 0
7275 7336 -10609 0
7277 -10593 0
7277 7321 -10595 0
7277 7322 -10597 0
7277 7324 -10599 0
7277 7326 -10601 0
7277 7328 -10603 0
7277 7330 -10605 0
7277 7332 -10607 0
7277 7334 -10609 0
7277 7336 -10611 0
7279 -10595 0
7279 7321 -10597 0
7279 7322 -10599 0
7279 7324 -10601 0
7279 7326 -10603 0
7279 7328 -10605 0
7279 7330 -10607 0
7279 7332 -10609 0
7279 7334 -10611 0
7279 7336 -10613 0
7281 -10597 0
7281 7321 -10599 0
7281 7322 -10601 0
7281 7324 -10603 0
7281 7326 -10605 0
7281 7328 -10607 0
7281 7330 -10609 0
7281 7332 -10611 0
7281 7334 -10613 0
7281 7336 -10615 0
7283 -10599 0
7283 7321 -10601 0
7283 7322 -10603 0
7283 7324 -10605 0
7283 7326 -10607 0
7283 7328 -10609 0
7283 7330 -10611 0
7283 7332 -10613 0
7283 7334 -10615 0
7283 7336 -10617 0
7285 -10601 0
7285 7321 -10603 0
7285 7322 -10605 0
7285 7324 -10607 0
7285 7326 -10609 0
7285 7328 -10611 0
7285 7330 -10613 0
7285 7332 -10615 0
7285 7334 -10617 0
7285 7336 -10619 0
c (0<=( - aux428 + aux74 + aux77))
-7336 10619 0
-7334 10617 0
-7332 10615 0
-7330 10613 0
-7328 10611 0
-7326 10609 0
-7324 10607 0
-7322 10605 0
-7321 10603 0
-7285 10619 0
-7285 -7336 10617 0
-7285 -7334 10615 0
-7285 -7332 10613 0
-7285 -7330 10611 0
-7285 -7328 10609 0
-7285 -7326 10607 0
-7285 -7324 10605 0
-7285 -7322 10603 0
-7285 -7321 10601 0
-7283 10617 0
-7283 -7336 10615 0
-7283 -7334 10613 0
-7283 -7332 10611 0
-7283 -7330 10609 0
-7283 -7328 10607 0
-7283 -7326 10605 0
-7283 -7324 10603 0
-7283 -7322 10601 0
-7283 -7321 10599 0
-7281 10615 0
-7281 -7336 10613 0
-7281 -7334 10611 0
-7281 -7332 10609 0
-7281 -7330 10607 0
-7281 -7328 10605 0
-7281 -7326 10603 0
-7281 -7324 10601 0
-7281 -7322 10599 0
-7281 -7321 10597 0
-7279 10613 0
-7279 -7336 10611 0
-7279 -7334 10609 0
-7279 -7332 10607 0
-7279 -7330 10605 0
-7279 -7328 10603 0
-7279 -7326 10601 0
-7279 -7324 10599 0
-7279 -7322 10597 0
-7279 -7321 10595 0
-7277 10611 0
-7277 -7336 10609 0
-7277 -7334 10607 0
-7277 -7332 10605 0
-7277 -7330 10603 0
-7277 -7328 10601 0
-7277 -7326 10599 0
-7277 -7324 10597 0
-7277 -7322 10595 0
-7277 -7321 10593 0
-7275 10609 0
-7275 -7336 10607 0
-7275 -7334 10605 0
-7275 -7332 10603 0
-7275 -7330 10601 0
-7275 -7328 10599 0
-7275 -7326 10597 0
-7275 -7324 10595 0
-7275 -7322 10593 0
-7275 -7321 10591 0
-7273 10607 0
-7273 -7336 10605 0
-7273 -7334 10603 0
-7273 -7332 10601 0
-7273 -7330 10599 0
-7273 -7328 10597 0
-7273 -7326 10595 0
-7273 -7324 10593 0
-7273 -7322 10591 0
-7273 -7321 10589 0
-7271 10605 0
-7271 -7336 10603 0
-7271 -7334 10601 0
-7271 -7332 10599 0
-7271 -7330 10597 0
-7271 -7328 10595 0
-7271 -7326 10593 0
-7271 -7324 10591 0
-7271 -7322 10589 0
-7271 -7321 10587 0
-7270 10603 0
-7270 -7336 10601 0
-7270 -7334 10599 0
-7270 -7332 10597 0
-7270 -7330 10595 0
-7270 -7328 10593 0
-7270 -7326 10591 0
-7270 -7324 10589 0
-7270 -7322 10587 0
-7270 -7321 10586 0
c (( - aux429 + aux75 + aux76)<=0)
7304 -10621 0
7305 -10622 0
7307 -10624 0
7309 -10626 0
7311 -10628 0
7313 -10630 0
7315 -10632 0
7317 -10634 0
7319 -10636 0
7287 -10621 0
7287 7304 -10622 0
7287 7305 -10624 0
7287 7307 -10626 0
7287 7309 -10628 0
7287 7311 -10630 0
7287 7313 -10632 0
7287 7315 -10634 0
7287 7317 -10636 0
7287 7319 -10638 0
7288 -10622 0
7288 7304 -10624 0
7288 7305 -10626 0
7288 7307 -10628 0
7288 7309 -10630 0
7288 7311 -10632 0
7288 7313 -10634 0
7288 7315 -10636 0
7288 7317 -10638 0
7288 7319 -10640 0
7290 -10624 0
7290 7304 -10626 0
7290 7305 -10628 0
7290 7307 -10630 0
7290 7309 -10632 0
7290 7311 -10634 0
7290 7313 -10636 0
7290 7315 -10638 0
7290 7317 -10640 0
7290 7319 -10642 0
7292 -10626 0
7292 7304 -10628 0
7292 7305 -10630 0
7292 7307 -10632 0
7292 7309 -10634 0
7292 7311 -10636 0
7292 7313 -10638 0
7292 7315 -10640 0
7292 7317 -10642 0
7292 7319 -10644 0
7294 -10628 0
7294 7304 -10630 0
7294 7305 -10632 0
7294 7307 -10634 0
7294 7309 -10636 0
7294 7311 -10638 0
7294 7313 -10640 0
7294 7315 -10642 0
7294 7317 -10644 0
7294 7319 -10646 0
7296 -10630 0
7296 7304 -10632 0
7296 7305 -10634 0
7296 7307 -10636 0
7296 7309 -10638 0
7296 7311 -10640 0
7296 7313 -10642 0
7296 7315 -10644 0
7296 7317 -10646 0
7296 7319 -10648 0
7298 -10632 0
7298 7304 -10634 0
7298 7305 -10636 0
7298 7307 -10638 0
7298 7309 -10640 0
7298 7311 -10642 0
7298 7313 -10644 0
7298 7315 -10646 0
7298 7317 -10648 0
7298 7319 -10650 0
7300 -10634 0
7300 7304 -10636 0
7300 7305 -10638 0
7300 7307 -10640 0
7300 7309 -10642 0
7300 7311 -10644 0
7300 7313 -10646 0
7300 7315 -10648 0
7300 7317 -10650 0
7300 7319 -10652 0
7302 -10636 0
7302 7304 -10638 0
7302 7305 -10640 0
7302 7307 -10642 0
7302 7309 -10644 0
7302 7311 -10646 0
7302 7313 -10648 0
7302 7315 -10650 0
7302 7317 -10652 0
7302 7319 -10654 0
c (0<=( - aux429 + aux75 + aux76))
-7319 10654 0
-7317 10652 0
-7315 10650 0
-7313 10648 0
-7311 10646 0
-7309 10644 0
-7307 10642 0
-7305 10640 0
-7304 10638 0
-7302 10654 0
-7302 -7319 10652 0
-7302 -7317 10650 0
-7302 -7315 10648 0
-7302 -7313 10646 0
-7302 -7311 10644 0
-7302 -7309 10642 0
-7302 -7307 10640 0
-7302 -7305 10638 0
-7302 -7304 10636 0
-7300 10652 0
-7300 -7319 10650 0
-7300 -7317 10648 0
-7300 -7315 10646 0
-7300 -7313 10644 0
-7300 -7311 10642 0
-7300 -7309 10640 0
-7300 -7307 10638 0
-7300 -7305 10636 0
-7300 -7304 10634 0
-7298 10650 0
-7298 -7319 10648 0
-7298 -7317 10646 0
-7298 -7315 10644 0
-7298 -7313 10642 0
-7298 -7311 10640 0
-7298 -7309 10638 0
-7298 -7307 10636 0
-7298 -7305 10634 0
-7298 -7304 10632 0
-7296 10648 0
-7296 -7319 10646 0
-7296 -7317 10644 0
-7296 -7315 10642 0
-7296 -7313 10640 0
-7296 -7311 10638 0
-7296 -7309 10636 0
-7296 -7307 10634 0
-7296 -7305 10632 0
-7296 -7304 10630 0
-7294 10646 0
-7294 -7319 10644 0
-7294 -7317 10642 0
-7294 -7315 10640 0
-7294 -7313 10638 0
-7294 -7311 10636 0
-7294 -7309 10634 0
-7294 -7307 10632 0
-7294 -7305 10630 0
-7294 -7304 10628 0
-7292 10644 0
-7292 -7319 10642 0
-7292 -7317 10640 0
-7292 -7315 10638 0
-7292 -7313 10636 0
-7292 -7311 10634 0
-7292 -7309 10632 0
-7292 -7307 10630 0
-7292 -7305 10628 0
-7292 -7304 10626 0
-7290 10642 0
-7290 -7319 10640 0
-7290 -7317 10638 0
-7290 -7315 10636 0
-7290 -7313 10634 0
-7290 -7311 10632 0
-7290 -7309 10630 0
-7290 -7307 10628 0
-7290 -7305 10626 0
-7290 -7304 10624 0
-7288 10640 0
-7288 -7319 10638 0
-7288 -7317 10636 0
-7288 -7315 10634 0
-7288 -7313 10632 0
-7288 -7311 10630 0
-7288 -7309 10628 0
-7288 -7307 10626 0
-7288 -7305 10624 0
-7288 -7304 10622 0
-7287 10638 0
-7287 -7319 10636 0
-7287 -7317 10634 0
-7287 -7315 10632 0
-7287 -7313 10630 0
-7287 -7311 10628 0
-7287 -7309 10626 0
-7287 -7307 10624 0
-7287 -7305 10622 0
-7287 -7304 10621 0
c ((aux426 - aux430 + aux73)<=0)
10518 -10656 0
10519 -10657 0
10521 -10659 0
10523 -10661 0
10525 -10663 0
10527 -10665 0
10529 -10667 0
10531 -10669 0
10533 -10671 0
10535 -10673 0
10537 -10675 0
10539 -10677 0
10541 -10679 0
10543 -10681 0
10545 -10683 0
10547 -10685 0
10549 -10687 0
7253 -10656 0
7253 10518 -10657 0
7253 10519 -10659 0
7253 10521 -10661 0
7253 10523 -10663 0
7253 10525 -10665 0
7253 10527 -10667 0
7253 10529 -10669 0
7253 10531 -10671 0
7253 10533 -10673 0
7253 10535 -10675 0
7253 10537 -10677 0
7253 10539 -10679 0
7253 10541 -10681 0
7253 10543 -10683 0
7253 10545 -10685 0
7253 10547 -10687 0
7253 10549 -10689 0
7254 -10657 0
7254 10518 -10659 0
7254 10519 -10661 0
7254 10521 -10663 0
7254 10523 -10665 0
7254 10525 -10667 0
7254 10527 -10669 0
7254 10529 -10671 0
7254 10531 -10673 0
7254 10533 -10675 0
7254 10535 -10677 0
7254 10537 -10679 0
7254 10539 -10681 0
7254 10541 -10683 0
7254 10543 -10685 0
7254 10545 -10687 0
7254 10547 -10689 0
7254 10549 -10691 0
7256 -10659 0
7256 10518 -10661 0
7256 10519 -10663 0
7256 10521 -10665 0
7256 10523 -10667 0
7256 10525 -10669 0
7256 10527 -10671 0
7256 10529 -10673 0
7256 10531 -10675 0
7256 10533 -10677 0
7256 10535 -10679 0
7256 10537 -10681 0
7256 10539 -10683 0
7256 10541 -10685 0
7256 10543 -10687 0
7256 10545 -10689 0
7256 10547 -10691 0
7256 10549 -10693 0
7258 -10661 0
7258 10518 -10663 0
7258 10519 -10665 0
7258 10521 -10667 0
7258 10523 -10669 0
7258 10525 -10671 0
7258 10527 -10673 0
7258 10529 -10675 0
7258 10531 -10677 0
7258 10533 -10679 0
7258 10535 -10681 0
7258 10537 -10683 0
7258 10539 -10685 0
7258 10541 -10687 0
7258 10543 -10689 0
7258 10545 -10691 0
7258 10547 -10693 0
7258 10549 -10695 0
7260 -10663 0
7260 10518 -10665 0
7260 10519 -10667 0
7260 10521 -10669 0
7260 10523 -10671 0
7260 10525 -10673 0
7260 10527 -10675 0
7260 10529 -10677 0
7260 10531 -10679 0
7260 10533 -10681 0
7260 10535 -10683 0
7260 10537 -10685 0
7260 10539 -10687 0
7260 10541 -10689 0
7260 10543 -10691 0
7260 10545 -10693 0
7260 10547 -10695 0
7260 10549 -10697 0
7262 -10665 0
7262 10518 -10667 0
7262 10519 -10669 0
7262 10521 -10671 0
7262 10523 -10673 0
7262 10525 -10675 0
7262 10527 -10677 0
7262 10529 -10679 0
7262 10531 -10681 0
7262 10533 -10683 0
7262 10535 -10685 0
7262 10537 -10687 0
7262 10539 -10689 0
7262 10541 -10691 0
7262 10543 -10693 0
7262 10545 -10695 0
7262 10547 -10697 0
7262 10549 -10699 0
7264 -10667 0
7264 10518 -10669 0
7264 10519 -10671 0
7264 10521 -10673 0
7264 10523 -10675 0
7264 10525 -10677 0
7264 10527 -10679 0
7264 10529 -10681 0
7264 10531 -10683 0
7264 10533 -10685 0
7264 10535 -10687 0
7264 10537 -10689 0
7264 10539 -10691 0
7264 10541 -10693 0
7264 10543 -10695 0
7264 10545 -10697 0
7264 10547 -10699 0
7264 10549 -10701 0
7266 -10669 0
7266 10518 -10671 0
7266 10519 -10673 0
7266 10521 -10675 0
7266 10523 -10677 0
7266 10525 -10679 0
7266 10527 -10681 0
7266 10529 -10683 0
7266 10531 -10685 0
7266 10533 -10687 0
7266 10535 -10689 0
7266 10537 -10691 0
7266 10539 -10693 0
7266 10541 -10695 0
7266 10543 -10697 0
7266 10545 -10699 0
7266 10547 -10701 0
7266 10549 -10703 0
7268 -10671 0
7268 10518 -10673 0
7268 10519 -10675 0
7268 10521 -10677 0
7268 10523 -10679 0
7268 10525 -10681 0
7268 10527 -10683 0
7268 10529 -10685 0
7268 10531 -10687 0
7268 10533 -10689 0
7268 10535 -10691 0
7268 10537 -10693 0
7268 10539 -10695 0
7268 10541 -10697 0
7268 10543 -10699 0
7268 10545 -10701 0
7268 10547 -10703 0
7268 10549 -10705 0
c (0<=(aux426 - aux430 + aux73))
-10549 10705 0
-10547 10703 0
-10545 10701 0
-10543 10699 0
-10541 10697 0
-10539 10695 0
-10537 10693 0
-10535 10691 0
-10533 10689 0
-10531 10687 0
-10529 10685 0
-10527 10683 0
-10525 10681 0
-10523 10679 0
-10521 10677 0
-10519 10675 0
-10518 10673 0
-7268 10705 0
-7268 -10549 10703 0
-7268 -10547 10701 0
-7268 -10545 10699 0
-7268 -10543 10697 0
-7268 -10541 10695 0
-7268 -10539 10693 0
-7268 -10537 10691 0
-7268 -10535 10689 0
-7268 -10533 10687 0
-7268 -10531 10685 0
-7268 -10529 10683 0
-7268 -10527 10681 0
-7268 -10525 10679 0
-7268 -10523 10677 0
-7268 -10521 10675 0
-7268 -10519 10673 0
-7268 -10518 10671 0
-7266 10703 0
-7266 -10549 10701 0
-7266 -10547 10699 0
-7266 -10545 10697 0
-7266 -10543 10695 0
-7266 -10541 10693 0
-7266 -10539 10691 0
-7266 -10537 10689 0
-7266 -10535 10687 0
-7266 -10533 10685 0
-7266 -10531 10683 0
-7266 -10529 10681 0
-7266 -10527 10679 0
-7266 -10525 10677 0
-7266 -10523 10675 0
-7266 -10521 10673 0
-7266 -10519 10671 0
-7266 -10518 10669 0
-7264 10701 0
-7264 -10549 10699 0
-7264 -10547 10697 0
-7264 -10545 10695 0
-7264 -10543 10693 0
-7264 -10541 10691 0
-7264 -10539 10689 0
-7264 -10537 10687 0
-7264 -10535 10685 0
-7264 -10533 10683 0
-7264 -10531 10681 0
-7264 -10529 10679 0
-7264 -10527 10677 0
-7264 -10525 10675 0
-7264 -10523 10673 0
-7264 -10521 10671 0
-7264 -10519 10669 0
-7264 -10518 10667 0
-7262 10699 0
-7262 -10549 10697 0
-7262 -10547 10695 0
-7262 -10545 10693 0
-7262 -10543 10691 0
-7262 -10541 10689 0
-7262 -10539 10687 0
-7262 -10537 10685 0
-7262 -10535 10683 0
-7262 -10533 10681 0
-7262 -10531 10679 0
-7262 -10529 10677 0
-7262 -10527 10675 0
-7262 -10525 10673 0
-7262 -10523 10671 0
-7262 -10521 10669 0
-7262 -10519 10667 0
-7262 -10518 10665 0
-7260 10697 0
-7260 -10549 10695 0
-7260 -10547 10693 0
-7260 -10545 10691 0
-7260 -10543 10689 0
-7260 -10541 10687 0
-7260 -10539 10685 0
-7260 -10537 10683 0
-7260 -10535 10681 0
-7260 -10533 10679 0
-7260 -10531 10677 0
-7260 -10529 10675 0
-7260 -10527 10673 0
-7260 -10525 10671 0
-7260 -10523 10669 0
-7260 -10521 10667 0
-7260 -10519 10665 0
-7260 -10518 10663 0
-7258 10695 0
-7258 -10549 10693 0
-7258 -10547 10691 0
-7258 -10545 10689 0
-7258 -10543 10687 0
-7258 -10541 10685 0
-7258 -10539 10683 0
-7258 -10537 10681 0
-7258 -10535 10679 0
-7258 -10533 10677 0
-7258 -10531 10675 0
-7258 -10529 10673 0
-7258 -10527 10671 0
-7258 -10525 10669 0
-7258 -10523 10667 0
-7258 -10521 10665 0
-7258 -10519 10663 0
-7258 -10518 10661 0
-7256 10693 0
-7256 -10549 10691 0
-7256 -10547 10689 0
-7256 -10545 10687 0
-7256 -10543 10685 0
-7256 -10541 10683 0
-7256 -10539 10681 0
-7256 -10537 10679 0
-7256 -10535 10677 0
-7256 -10533 10675 0
-7256 -10531 10673 0
-7256 -10529 10671 0
-7256 -10527 10669 0
-7256 -10525 10667 0
-7256 -10523 10665 0
-7256 -10521 10663 0
-7256 -10519 10661 0
-7256 -10518 10659 0
-7254 10691 0
-7254 -10549 10689 0
-7254 -10547 10687 0
-7254 -10545 10685 0
-7254 -10543 10683 0
-7254 -10541 10681 0
-7254 -10539 10679 0
-7254 -10537 10677 0
-7254 -10535 10675 0
-7254 -10533 10673 0
-7254 -10531 10671 0
-7254 -10529 10669 0
-7254 -10527 10667 0
-7254 -10525 10665 0
-7254 -10523 10663 0
-7254 -10521 10661 0
-7254 -10519 10659 0
-7254 -10518 10657 0
-7253 10689 0
-7253 -10549 10687 0
-7253 -10547 10685 0
-7253 -10545 10683 0
-7253 -10543 10681 0
-7253 -10541 10679 0
-7253 -10539 10677 0
-7253 -10537 10675 0
-7253 -10535 10673 0
-7253 -10533 10671 0
-7253 -10531 10669 0
-7253 -10529 10667 0
-7253 -10527 10665 0
-7253 -10525 10663 0
-7253 -10523 10661 0
-7253 -10521 10659 0
-7253 -10519 10657 0
-7253 -10518 10656 0
c ((aux428 + aux429 - aux431)<=0)
10621 -10707 0
10622 -10708 0
10624 -10710 0
10626 -10712 0
10628 -10714 0
10630 -10716 0
10632 -10718 0
10634 -10720 0
10636 -10722 0
10638 -10724 0
10640 -10726 0
10642 -10728 0
10644 -10730 0
10646 -10732 0
10648 -10734 0
10650 -10736 0
10652 -10738 0
10654 -10740 0
10586 -10707 0
10586 10621 -10708 0
10586 10622 -10710 0
10586 10624 -10712 0
10586 10626 -10714 0
10586 10628 -10716 0
10586 10630 -10718 0
10586 10632 -10720 0
10586 10634 -10722 0
10586 10636 -10724 0
10586 10638 -10726 0
10586 10640 -10728 0
10586 10642 -10730 0
10586 10644 -10732 0
10586 10646 -10734 0
10586 10648 -10736 0
10586 10650 -10738 0
10586 10652 -10740 0
10586 10654 -10742 0
10587 -10708 0
10587 10621 -10710 0
10587 10622 -10712 0
10587 10624 -10714 0
10587 10626 -10716 0
10587 10628 -10718 0
10587 10630 -10720 0
10587 10632 -10722 0
10587 10634 -10724 0
10587 10636 -10726 0
10587 10638 -10728 0
10587 10640 -10730 0
10587 10642 -10732 0
10587 10644 -10734 0
10587 10646 -10736 0
10587 10648 -10738 0
10587 10650 -10740 0
10587 10652 -10742 0
10587 10654 -10744 0
10589 -10710 0
10589 10621 -10712 0
10589 10622 -10714 0
10589 10624 -10716 0
10589 10626 -10718 0
10589 10628 -10720 0
10589 10630 -10722 0
10589 10632 -10724 0
10589 10634 -10726 0
10589 10636 -10728 0
10589 10638 -10730 0
10589 10640 -10732 0
10589 10642 -10734 0
10589 10644 -10736 0
10589 10646 -10738 0
10589 10648 -10740 0
10589 10650 -10742 0
10589 10652 -10744 0
10589 10654 -10746 0
10591 -10712 0
10591 10621 -10714 0
10591 10622 -10716 0
10591 10624 -10718 0
10591 10626 -10720 0
10591 10628 -10722 0
10591 10630 -10724 0
10591 10632 -10726 0
10591 10634 -10728 0
10591 10636 -10730 0
10591 10638 -10732 0
10591 10640 -10734 0
10591 10642 -10736 0
10591 10644 -10738 0
10591 10646 -10740 0
10591 10648 -10742 0
10591 10650 -10744 0
10591 10652 -10746 0
10591 10654 -10748 0
10593 -10714 0
10593 10621 -10716 0
10593 10622 -10718 0
10593 10624 -10720 0
10593 10626 -10722 0
10593 10628 -10724 0
10593 10630 -10726 0
10593 10632 -10728 0
10593 10634 -10730 0
10593 10636 -10732 0
10593 10638 -10734 0
10593 10640 -10736 0
10593 10642 -10738 0
10593 10644 -10740 0
10593 10646 -10742 0
10593 10648 -10744 0
10593 10650 -10746 0
10593 10652 -10748 0
10593 10654 -10750 0
10595 -10716 0
10595 10621 -10718 0
10595 10622 -10720 0
10595 10624 -10722 0
10595 10626 -10724 0
10595 10628 -10726 0
10595 10630 -10728 0
10595 10632 -10730 0
10595 10634 -10732 0
10595 10636 -10734 0
10595 10638 -10736 0
10595 10640 -10738 0
10595 10642 -10740 0
10595 10644 -10742 0
10595 10646 -10744 0
10595 10648 -10746 0
10595 10650 -10748 0
10595 10652 -10750 0
10595 10654 -10752 0
10597 -10718 0
10597 10621 -10720 0
10597 10622 -10722 0
10597 10624 -10724 0
10597 10626 -10726 0
10597 10628 -10728 0
10597 10630 -10730 0
10597 10632 -10732 0
10597 10634 -10734 0
10597 10636 -10736 0
10597 10638 -10738 0
10597 10640 -10740 0
10597 10642 -10742 0
10597 10644 -10744 0
10597 10646 -10746 0
10597 10648 -10748 0
10597 10650 -10750 0
10597 10652 -10752 0
10597 10654 -10754 0
10599 -10720 0
10599 10621 -10722 0
10599 10622 -10724 0
10599 10624 -10726 0
10599 10626 -10728 0
10599 10628 -10730 0
10599 10630 -10732 0
10599 10632 -10734 0
10599 10634 -10736 0
10599 10636 -10738 0
10599 10638 -10740 0
10599 10640 -10742 0
10599 10642 -10744 0
10599 10644 -10746 0
10599 10646 -10748 0
10599 10648 -10750 0
10599 10650 -10752 0
10599 10652 -10754 0
10599 10654 -10756 0
10601 -10722 0
10601 10621 -10724 0
10601 10622 -10726 0
10601 10624 -10728 0
10601 10626 -10730 0
10601 10628 -10732 0
10601 10630 -10734 0
10601 10632 -10736 0
10601 10634 -10738 0
10601 10636 -10740 0
10601 10638 -10742 0
10601 10640 -10744 0
10601 10642 -10746 0
10601 10644 -10748 0
10601 10646 -10750 0
10601 10648 -10752 0
10601 10650 -10754 0
10601 10652 -10756 0
10601 10654 -10758 0
10603 -10724 0
10603 10621 -10726 0
10603 10622 -10728 0
10603 10624 -10730 0
10603 10626 -10732 0
10603 10628 -10734 0
10603 10630 -10736 0
10603 10632 -10738 0
10603 10634 -10740 0
10603 10636 -10742 0
10603 10638 -10744 0
10603 10640 -10746 0
10603 10642 -10748 0
10603 10644 -10750 0
10603 10646 -10752 0
10603 10648 -10754 0
10603 10650 -10756 0
10603 10652 -10758 0
10603 10654 -10760 0
10605 -10726 0
10605 10621 -10728 0
10605 10622 -10730 0
10605 10624 -10732 0
10605 10626 -10734 0
10605 10628 -10736 0
10605 10630 -10738 0
10605 10632 -10740 0
10605 10634 -10742 0
10605 10636 -10744 0
10605 10638 -10746 0
10605 10640 -10748 0
10605 10642 -10750 0
10605 10644 -10752 0
10605 10646 -10754 0
10605 10648 -10756 0
10605 10650 -10758 0
10605 10652 -10760 0
10605 10654 -10762 0
10607 -10728 0
10607 10621 -10730 0
10607 10622 -10732 0
10607 10624 -10734 0
10607 10626 -10736 0
10607 10628 -10738 0
10607 10630 -10740 0
10607 10632 -10742 0
10607 10634 -10744 0
10607 10636 -10746 0
10607 10638 -10748 0
10607 10640 -10750 0
10607 10642 -10752 0
10607 10644 -10754 0
10607 10646 -10756 0
10607 10648 -10758 0
10607 10650 -10760 0
10607 10652 -10762 0
10607 10654 -10764 0
10609 -10730 0
10609 10621 -10732 0
10609 10622 -10734 0
10609 10624 -10736 0
10609 10626 -10738 0
10609 10628 -10740 0
10609 10630 -10742 0
10609 10632 -10744 0
10609 10634 -10746 0
10609 10636 -10748 0
10609 10638 -10750 0
10609 10640 -10752 0
10609 10642 -10754 0
10609 10644 -10756 0
10609 10646 -10758 0
10609 10648 -10760 0
10609 10650 -10762 0
10609 10652 -10764 0
10609 10654 -10766 0
10611 -10732 0
10611 10621 -10734 0
10611 10622 -10736 0
10611 10624 -10738 0
10611 10626 -10740 0
10611 10628 -10742 0
10611 10630 -10744 0
10611 10632 -10746 0
10611 10634 -10748 0
10611 10636 -10750 0
10611 10638 -10752 0
10611 10640 -10754 0
10611 10642 -10756 0
10611 10644 -10758 0
10611 10646 -10760 0
10611 10648 -10762 0
10611 10650 -10764 0
10611 10652 -10766 0
10611 10654 -10768 0
10613 -10734 0
10613 10621 -10736 0
10613 10622 -10738 0
10613 10624 -10740 0
10613 10626 -10742 0
10613 10628 -10744 0
10613 10630 -10746 0
10613 10632 -10748 0
10613 10634 -10750 0
10613 10636 -10752 0
10613 10638 -10754 0
10613 10640 -10756 0
10613 10642 -10758 0
10613 10644 -10760 0
10613 10646 -10762 0
10613 10648 -10764 0
10613 10650 -10766 0
10613 10652 -10768 0
10613 10654 -10770 0
10615 -10736 0
10615 10621 -10738 0
10615 10622 -10740 0
10615 10624 -10742 0
10615 10626 -10744 0
10615 10628 -10746 0
10615 10630 -10748 0
10615 10632 -10750 0
10615 10634 -10752 0
10615 10636 -10754 0
10615 10638 -10756 0
10615 10640 -10758 0
10615 10642 -10760 0
10615 10644 -10762 0
10615 10646 -10764 0
10615 10648 -10766 0
10615 10650 -10768 0
10615 10652 -10770 0
10615 10654 -10772 0
10617 -10738 0
10617 10621 -10740 0
10617 10622 -10742 0
10617 10624 -10744 0
10617 10626 -10746 0
10617 10628 -10748 0
10617 10630 -10750 0
10617 10632 -10752 0
10617 10634 -10754 0
10617 10636 -10756 0
10617 10638 -10758 0
10617 10640 -10760 0
10617 10642 -10762 0
10617 10644 -10764 0
10617 10646 -10766 0
10617 10648 -10768 0
10617 10650 -10770 0
10617 10652 -10772 0
10617 10654 -10774 0
10619 -10740 0
10619 10621 -10742 0
10619 10622 -10744 0
10619 10624 -10746 0
10619 10626 -10748 0
10619 10628 -10750 0
10619 10630 -10752 0
10619 10632 -10754 0
10619 10634 -10756 0
10619 10636 -10758 0
10619 10638 -10760 0
10619 10640 -10762 0
10619 10642 -10764 0
10619 10644 -10766 0
10619 10646 -10768 0
10619 10648 -10770 0
10619 10650 -10772 0
10619 10652 -10774 0
10619 10654 -10776 0
c (0<=(aux428 + aux429 - aux431))
-10654 10776 0
-10652 10774 0
-10650 10772 0
-10648 10770 0
-10646 10768 0
-10644 10766 0
-10642 10764 0
-10640 10762 0
-10638 10760 0
-10636 10758 0
-10634 10756 0
-10632 10754 0
-10630 10752 0
-10628 10750 0
-10626 10748 0
-10624 10746 0
-10622 10744 0
-10621 10742 0
-10619 10776 0
-10619 -10654 10774 0
-10619 -10652 10772 0
-10619 -10650 10770 0
-10619 -10648 10768 0
-10619 -10646 10766 0
-10619 -10644 10764 0
-10619 -10642 10762 0
-10619 -10640 10760 0
-10619 -10638 10758 0
-10619 -10636 10756 0
-10619 -10634 10754 0
-10619 -10632 10752 0
-10619 -10630 10750 0
-10619 -10628 10748 0
-10619 -10626 10746 0
-10619 -10624 10744 0
-10619 -10622 10742 0
-10619 -10621 10740 0
-10617 10774 0
-10617 -10654 10772 0
-10617 -10652 10770 0
-10617 -10650 10768 0
-10617 -10648 10766 0
-10617 -10646 10764 0
-10617 -10644 10762 0
-10617 -10642 10760 0
-10617 -10640 10758 0
-10617 -10638 10756 0
-10617 -10636 10754 0
-10617 -10634 10752 0
-10617 -10632 10750 0
-10617 -10630 10748 0
-10617 -10628 10746 0
-10617 -10626 10744 0
-10617 -10624 10742 0
-10617 -10622 10740 0
-10617 -10621 10738 0
-10615 10772 0
-10615 -10654 10770 0
-10615 -10652 10768 0
-10615 -10650 10766 0
-10615 -10648 10764 0
-10615 -10646 10762 0
-10615 -10644 10760 0
-10615 -10642 10758 0
-10615 -10640 10756 0
-10615 -10638 10754 0
-10615 -10636 10752 0
-10615 -10634 10750 0
-10615 -10632 10748 0
-10615 -10630 10746 0
-10615 -10628 10744 0
-10615 -10626 10742 0
-10615 -10624 10740 0
-10615 -10622 10738 0
-10615 -10621 10736 0
-10613 10770 0
-10613 -10654 10768 0
-10613 -10652 10766 0
-10613 -10650 10764 0
-10613 -10648 10762 0
-10613 -10646 10760 0
-10613 -10644 10758 0
-10613 -10642 10756 0
-10613 -10640 10754 0
-10613 -10638 10752 0
-10613 -10636 10750 0
-10613 -10634 10748 0
-10613 -10632 10746 0
-10613 -10630 10744 0
-10613 -10628 10742 0
-10613 -10626 10740 0
-10613 -10624 10738 0
-10613 -10622 10736 0
-10613 -10621 10734 0
-10611 10768 0
-10611 -10654 10766 0
-10611 -10652 10764 0
-10611 -10650 10762 0
-10611 -10648 10760 0
-10611 -10646 10758 0
-10611 -10644 10756 0
-10611 -10642 10754 0
-10611 -10640 10752 0
-10611 -10638 10750 0
-10611 -10636 10748 0
-10611 -10634 10746 0
-10611 -10632 10744 0
-10611 -10630 10742 0
-10611 -10628 10740 0
-10611 -10626 10738 0
-10611 -10624 10736 0
-10611 -10622 10734 0
-10611 -10621 10732 0
-10609 10766 0
-10609 -10654 10764 0
-10609 -10652 10762 0
-10609 -10650 10760 0
-10609 -10648 10758 0
-10609 -10646 10756 0
-10609 -10644 10754 0
-10609 -10642 10752 0
-10609 -10640 10750 0
-10609 -10638 10748 0
-10609 -10636 10746 0
-10609 -10634 10744 0
-10609 -10632 10742 0
-10609 -10630 10740 0
-10609 -10628 10738 0
-10609 -10626 10736 0
-10609 -10624 10734 0
-10609 -10622 10732 0
-10609 -10621 10730 0
-10607 10764 0
-10607 -10654 10762 0
-10607 -10652 10760 0
-10607 -10650 10758 0
-10607 -10648 10756 0
-10607 -10646 10754 0
-10607 -10644 10752 0
-10607 -10642 10750 0
-10607 -10640 10748 0
-10607 -10638 10746 0
-10607 -10636 10744 0
-10607 -10634 10742 0
-10607 -10632 10740 0
-10607 -10630 10738 0
-10607 -10628 10736 0
-10607 -10626 10734 0
-10607 -10624 10732 0
-10607 -10622 10730 0
-10607 -10621 10728 0
-10605 10762 0
-10605 -10654 10760 0
-10605 -10652 10758 0
-10605 -10650 10756 0
-10605 -10648 10754 0
-10605 -10646 10752 0
-10605 -10644 10750 0
-10605 -10642 10748 0
-10605 -10640 10746 0
-10605 -10638 10744 0
-10605 -10636 10742 0
-10605 -10634 10740 0
-10605 -10632 10738 0
-10605 -10630 10736 0
-10605 -10628 10734 0
-10605 -10626 10732 0
-10605 -10624 10730 0
-10605 -10622 10728 0
-10605 -10621 10726 0
-10603 10760 0
-10603 -10654 10758 0
-10603 -10652 10756 0
-10603 -10650 10754 0
-10603 -10648 10752 0
-10603 -10646 10750 0
-10603 -10644 10748 0
-10603 -10642 10746 0
-10603 -10640 10744 0
-10603 -10638 10742 0
-10603 -10636 10740 0
-10603 -10634 10738 0
-10603 -10632 10736 0
-10603 -10630 10734 0
-10603 -10628 10732 0
-10603 -10626 10730 0
-10603 -10624 10728 0
-10603 -10622 10726 0
-10603 -10621 10724 0
-10601 10758 0
-10601 -10654 10756 0
-10601 -10652 10754 0
-10601 -10650 10752 0
-10601 -10648 10750 0
-10601 -10646 10748 0
-10601 -10644 10746 0
-10601 -10642 10744 0
-10601 -10640 10742 0
-10601 -10638 10740 0
-10601 -10636 10738 0
-10601 -10634 10736 0
-10601 -10632 10734 0
-10601 -10630 10732 0
-10601 -10628 10730 0
-10601 -10626 10728 0
-10601 -10624 10726 0
-10601 -10622 10724 0
-10601 -10621 10722 0
-10599 10756 0
-10599 -10654 10754 0
-10599 -10652 10752 0
-10599 -10650 10750 0
-10599 -10648 10748 0
-10599 -10646 10746 0
-10599 -10644 10744 0
-10599 -10642 10742 0
-10599 -10640 10740 0
-10599 -10638 10738 0
-10599 -10636 10736 0
-10599 -10634 10734 0
-10599 -10632 10732 0
-10599 -10630 10730 0
-10599 -10628 10728 0
-10599 -10626 10726 0
-10599 -10624 10724 0
-10599 -10622 10722 0
-10599 -10621 10720 0
-10597 10754 0
-10597 -10654 10752 0
-10597 -10652 10750 0
-10597 -10650 10748 0
-10597 -10648 10746 0
-10597 -10646 10744 0
-10597 -10644 10742 0
-10597 -10642 10740 0
-10597 -10640 10738 0
-10597 -10638 10736 0
-10597 -10636 10734 0
-10597 -10634 10732 0
-10597 -10632 10730 0
-10597 -10630 10728 0
-10597 -10628 10726 0
-10597 -10626 10724 0
-10597 -10624 10722 0
-10597 -10622 10720 0
-10597 -10621 10718 0
-10595 10752 0
-10595 -10654 10750 0
-10595 -10652 10748 0
-10595 -10650 10746 0
-10595 -10648 10744 0
-10595 -10646 10742 0
-10595 -10644 10740 0
-10595 -10642 10738 0
-10595 -10640 10736 0
-10595 -10638 10734 0
-10595 -10636 10732 0
-10595 -10634 10730 0
-10595 -10632 10728 0
-10595 -10630 10726 0
-10595 -10628 10724 0
-10595 -10626 10722 0
-10595 -10624 10720 0
-10595 -10622 10718 0
-10595 -10621 10716 0
-10593 10750 0
-10593 -10654 10748 0
-10593 -10652 10746 0
-10593 -10650 10744 0
-10593 -10648 10742 0
-10593 -10646 10740 0
-10593 -10644 10738 0
-10593 -10642 10736 0
-10593 -10640 10734 0
-10593 -10638 10732 0
-10593 -10636 10730 0
-10593 -10634 10728 0
-10593 -10632 10726 0
-10593 -10630 10724 0
-10593 -10628 10722 0
-10593 -10626 10720 0
-10593 -10624 10718 0
-10593 -10622 10716 0
-10593 -10621 10714 0
-10591 10748 0
-10591 -10654 10746 0
-10591 -10652 10744 0
-10591 -10650 10742 0
-10591 -10648 10740 0
-10591 -10646 10738 0
-10591 -10644 10736 0
-10591 -10642 10734 0
-10591 -10640 10732 0
-10591 -10638 10730 0
-10591 -10636 10728 0
-10591 -10634 10726 0
-10591 -10632 10724 0
-10591 -10630 10722 0
-10591 -10628 10720 0
-10591 -10626 10718 0
-10591 -10624 10716 0
-10591 -10622 10714 0
-10591 -10621 10712 0
-10589 10746 0
-10589 -10654 10744 0
-10589 -10652 10742 0
-10589 -10650 10740 0
-10589 -10648 10738 0
-10589 -10646 10736 0
-10589 -10644 10734 0
-10589 -10642 10732 0
-10589 -10640 10730 0
-10589 -10638 10728 0
-10589 -10636 10726 0
-10589 -10634 10724 0
-10589 -10632 10722 0
-10589 -10630 10720 0
-10589 -10628 10718 0
-10589 -10626 10716 0
-10589 -10624 10714 0
-10589 -10622 10712 0
-10589 -10621 10710 0
-10587 10744 0
-10587 -10654 10742 0
-10587 -10652 10740 0
-10587 -10650 10738 0
-10587 -10648 10736 0
-10587 -10646 10734 0
-10587 -10644 10732 0
-10587 -10642 10730 0
-10587 -10640 10728 0
-10587 -10638 10726 0
-10587 -10636 10724 0
-10587 -10634 10722 0
-10587 -10632 10720 0
-10587 -10630 10718 0
-10587 -10628 10716 0
-10587 -10626 10714 0
-10587 -10624 10712 0
-10587 -10622 10710 0
-10587 -10621 10708 0
-10586 10742 0
-10586 -10654 10740 0
-10586 -10652 10738 0
-10586 -10650 10736 0
-10586 -10648 10734 0
-10586 -10646 10732 0
-10586 -10644 10730 0
-10586 -10642 10728 0
-10586 -10640 10726 0
-10586 -10638 10724 0
-10586 -10636 10722 0
-10586 -10634 10720 0
-10586 -10632 10718 0
-10586 -10630 10716 0
-10586 -10628 10714 0
-10586 -10626 10712 0
-10586 -10624 10710 0
-10586 -10622 10708 0
-10586 -10621 10707 0
c (( - aux432 + shift(variant_fields_00003_00004_00001, -1) + aux84)<=0)
7424 -10778 0
7425 -10779 0
7427 -10781 0
7429 -10783 0
7431 -10785 0
7433 -10787 0
7435 -10789 0
7437 -10791 0
7439 -10793 0
4052 -10778 0
4052 7424 -10779 0
4052 7425 -10781 0
4052 7427 -10783 0
4052 7429 -10785 0
4052 7431 -10787 0
4052 7433 -10789 0
4052 7435 -10791 0
4052 7437 -10793 0
4052 7439 -10795 0
4053 -10779 0
4053 7424 -10781 0
4053 7425 -10783 0
4053 7427 -10785 0
4053 7429 -10787 0
4053 7431 -10789 0
4053 7433 -10791 0
4053 7435 -10793 0
4053 7437 -10795 0
4053 7439 -10797 0
4055 -10781 0
4055 7424 -10783 0
4055 7425 -10785 0
4055 7427 -10787 0
4055 7429 -10789 0
4055 7431 -10791 0
4055 7433 -10793 0
4055 7435 -10795 0
4055 7437 -10797 0
4055 7439 -10799 0
4057 -10783 0
4057 7424 -10785 0
4057 7425 -10787 0
4057 7427 -10789 0
4057 7429 -10791 0
4057 7431 -10793 0
4057 7433 -10795 0
4057 7435 -10797 0
4057 7437 -10799 0
4057 7439 -10801 0
4059 -10785 0
4059 7424 -10787 0
4059 7425 -10789 0
4059 7427 -10791 0
4059 7429 -10793 0
4059 7431 -10795 0
4059 7433 -10797 0
4059 7435 -10799 0
4059 7437 -10801 0
4059 7439 -10803 0
4061 -10787 0
4061 7424 -10789 0
4061 7425 -10791 0
4061 7427 -10793 0
4061 7429 -10795 0
4061 7431 -10797 0
4061 7433 -10799 0
4061 7435 -10801 0
4061 7437 -10803 0
4061 7439 -10805 0
4063 -10789 0
4063 7424 -10791 0
4063 7425 -10793 0
4063 7427 -10795 0
4063 7429 -10797 0
4063 7431 -10799 0
4063 7433 -10801 0
4063 7435 -10803 0
4063 7437 -10805 0
4063 7439 -10807 0
4065 -10791 0
4065 7424 -10793 0
4065 7425 -10795 0
4065 7427 -10797 0
4065 7429 -10799 0
4065 7431 -10801 0
4065 7433 -10803 0
4065 7435 -10805 0
4065 7437 -10807 0
4065 7439 -10809 0
c (0<=( - aux432 + shift(variant_fields_00003_00004_00001, -1) + aux84))
-7439 10809 0
-7437 10807 0
-7435 10805 0
-7433 10803 0
-7431 10801 0
-7429 10799 0
-7427 10797 0
-7425 10795 0
-7424 10793 0
-4065 10809 0
-4065 -7439 10807 0
-4065 -7437 10805 0
-4065 -7435 10803 0
-4065 -7433 10801 0
-4065 -7431 10799 0
-4065 -7429 10797 0
-4065 -7427 10795 0
-4065 -7425 10793 0
-4065 -7424 10791 0
-4063 10807 0
-4063 -7439 10805 0
-4063 -7437 10803 0
-4063 -7435 10801 0
-4063 -7433 10799 0
-4063 -7431 10797 0
-4063 -7429 10795 0
-4063 -7427 10793 0
-4063 -7425 10791 0
-4063 -7424 10789 0
-4061 10805 0
-4061 -7439 10803 0
-4061 -7437 10801 0
-4061 -7435 10799 0
-4061 -7433 10797 0
-4061 -7431 10795 0
-4061 -7429 10793 0
-4061 -7427 10791 0
-4061 -7425 10789 0
-4061 -7424 10787 0
-4059 10803 0
-4059 -7439 10801 0
-4059 -7437 10799 0
-4059 -7435 10797 0
-4059 -7433 10795 0
-4059 -7431 10793 0
-4059 -7429 10791 0
-4059 -7427 10789 0
-4059 -7425 10787 0
-4059 -7424 10785 0
-4057 10801 0
-4057 -7439 10799 0
-4057 -7437 10797 0
-4057 -7435 10795 0
-4057 -7433 10793 0
-4057 -7431 10791 0
-4057 -7429 10789 0
-4057 -7427 10787 0
-4057 -7425 10785 0
-4057 -7424 10783 0
-4055 10799 0
-4055 -7439 10797 0
-4055 -7437 10795 0
-4055 -7435 10793 0
-4055 -7433 10791 0
-4055 -7431 10789 0
-4055 -7429 10787 0
-4055 -7427 10785 0
-4055 -7425 10783 0
-4055 -7424 10781 0
-4053 10797 0
-4053 -7439 10795 0
-4053 -7437 10793 0
-4053 -7435 10791 0
-4053 -7433 10789 0
-4053 -7431 10787 0
-4053 -7429 10785 0
-4053 -7427 10783 0
-4053 -7425 10781 0
-4053 -7424 10779 0
-4052 10795 0
-4052 -7439 10793 0
-4052 -7437 10791 0
-4052 -7435 10789 0
-4052 -7433 10787 0
-4052 -7431 10785 0
-4052 -7429 10783 0
-4052 -7427 10781 0
-4052 -7425 10779 0
-4052 -7424 10778 0
c (( - aux433 + aux81 + aux88)<=0)
7492 -10811 0
7493 -10812 0
7495 -10814 0
7497 -10816 0
7499 -10818 0
7501 -10820 0
7503 -10822 0
7505 -10824 0
7507 -10826 0
7373 -10811 0
7373 7492 -10812 0
7373 7493 -10814 0
7373 7495 -10816 0
7373 7497 -10818 0
7373 7499 -10820 0
7373 7501 -10822 0
7373 7503 -10824 0
7373 7505 -10826 0
7373 7507 -10828 0
7374 -10812 0
7374 7492 -10814 0
7374 7493 -10816 0
7374 7495 -10818 0
7374 7497 -10820 0
7374 7499 -10822 0
7374 7501 -10824 0
7374 7503 -10826 0
7374 7505 -10828 0
7374 7507 -10830 0
7376 -10814 0
7376 7492 -10816 0
7376 7493 -10818 0
7376 7495 -10820 0
7376 7497 -10822 0
7376 7499 -10824 0
7376 7501 -10826 0
7376 7503 -10828 0
7376 7505 -10830 0
7376 7507 -10832 0
7378 -10816 0
7378 7492 -10818 0
7378 7493 -10820 0
7378 7495 -10822 0
7378 7497 -10824 0
7378 7499 -10826 0
7378 7501 -10828 0
7378 7503 -10830 0
7378 7505 -10832 0
7378 7507 -10834 0
7380 -10818 0
7380 7492 -10820 0
7380 7493 -10822 0
7380 7495 -10824 0
7380 7497 -10826 0
7380 7499 -10828 0
7380 7501 -10830 0
7380 7503 -10832 0
7380 7505 -10834 0
7380 7507 -10836 0
7382 -10820 0
7382 7492 -10822 0
7382 7493 -10824 0
7382 7495 -10826 0
7382 7497 -10828 0
7382 7499 -10830 0
7382 7501 -10832 0
7382 7503 -10834 0
7382 7505 -10836 0
7382 7507 -10838 0
7384 -10822 0
7384 7492 -10824 0
7384 7493 -10826 0
7384 7495 -10828 0
7384 7497 -10830 0
7384 7499 -10832 0
7384 7501 -10834 0
7384 7503 -10836 0
7384 7505 -10838 0
7384 7507 -10840 0
7386 -10824 0
7386 7492 -10826 0
7386 7493 -10828 0
7386 7495 -10830 0
7386 7497 -10832 0
7386 7499 -10834 0
7386 7501 -10836 0
7386 7503 -10838 0
7386 7505 -10840 0
7386 7507 -10842 0
7388 -10826 0
7388 7492 -10828 0
7388 7493 -10830 0
7388 7495 -10832 0
7388 7497 -10834 0
7388 7499 -10836 0
7388 7501 -10838 0
7388 7503 -10840 0
7388 7505 -10842 0
7388 7507 -10844 0
c (0<=( - aux433 + aux81 + aux88))
-7507 10844 0
-7505 10842 0
-7503 10840 0
-7501 10838 0
-7499 10836 0
-7497 10834 0
-7495 10832 0
-7493 10830 0
-7492 10828 0
-7388 10844 0
-7388 -7507 10842 0
-7388 -7505 10840 0
-7388 -7503 10838 0
-7388 -7501 10836 0
-7388 -7499 10834 0
-7388 -7497 10832 0
-7388 -7495 10830 0
-7388 -7493 10828 0
-7388 -7492 10826 0
-7386 10842 0
-7386 -7507 10840 0
-7386 -7505 10838 0
-7386 -7503 10836 0
-7386 -7501 10834 0
-7386 -7499 10832 0
-7386 -7497 10830 0
-7386 -7495 10828 0
-7386 -7493 10826 0
-7386 -7492 10824 0
-7384 10840 0
-7384 -7507 10838 0
-7384 -7505 10836 0
-7384 -7503 10834 0
-7384 -7501 10832 0
-7384 -7499 10830 0
-7384 -7497 10828 0
-7384 -7495 10826 0
-7384 -7493 10824 0
-7384 -7492 10822 0
-7382 10838 0
-7382 -7507 10836 0
-7382 -7505 10834 0
-7382 -7503 10832 0
-7382 -7501 10830 0
-7382 -7499 10828 0
-7382 -7497 10826 0
-7382 -7495 10824 0
-7382 -7493 10822 0
-7382 -7492 10820 0
-7380 10836 0
-7380 -7507 10834 0
-7380 -7505 10832 0
-7380 -7503 10830 0
-7380 -7501 10828 0
-7380 -7499 10826 0
-7380 -7497 10824 0
-7380 -7495 10822 0
-7380 -7493 10820 0
-7380 -7492 10818 0
-7378 10834 0
-7378 -7507 10832 0
-7378 -7505 10830 0
-7378 -7503 10828 0
-7378 -7501 10826 0
-7378 -7499 10824 0
-7378 -7497 10822 0
-7378 -7495 10820 0
-7378 -7493 10818 0
-7378 -7492 10816 0
-7376 10832 0
-7376 -7507 10830 0
-7376 -7505 10828 0
-7376 -7503 10826 0
-7376 -7501 10824 0
-7376 -7499 10822 0
-7376 -7497 10820 0
-7376 -7495 10818 0
-7376 -7493 10816 0
-7376 -7492 10814 0
-7374 10830 0
-7374 -7507 10828 0
-7374 -7505 10826 0
-7374 -7503 10824 0
-7374 -7501 10822 0
-7374 -7499 10820 0
-7374 -7497 10818 0
-7374 -7495 10816 0
-7374 -7493 10814 0
-7374 -7492 10812 0
-7373 10828 0
-7373 -7507 10826 0
-7373 -7505 10824 0
-7373 -7503 10822 0
-7373 -7501 10820 0
-7373 -7499 10818 0
-7373 -7497 10816 0
-7373 -7495 10814 0
-7373 -7493 10812 0
-7373 -7492 10811 0
c (( - aux434 + aux82 + aux87)<=0)
7475 -10846 0
7476 -10847 0
7478 -10849 0
7480 -10851 0
7482 -10853 0
7484 -10855 0
7486 -10857 0
7488 -10859 0
7490 -10861 0
7390 -10846 0
7390 7475 -10847 0
7390 7476 -10849 0
7390 7478 -10851 0
7390 7480 -10853 0
7390 7482 -10855 0
7390 7484 -10857 0
7390 7486 -10859 0
7390 7488 -10861 0
7390 7490 -10863 0
7391 -10847 0
7391 7475 -10849 0
7391 7476 -10851 0
7391 7478 -10853 0
7391 7480 -10855 0
7391 7482 -10857 0
7391 7484 -10859 0
7391 7486 -10861 0
7391 7488 -10863 0
7391 7490 -10865 0
7393 -10849 0
7393 7475 -10851 0
7393 7476 -10853 0
7393 7478 -10855 0
7393 7480 -10857 0
7393 7482 -10859 0
7393 7484 -10861 0
7393 7486 -10863 0
7393 7488 -10865 0
7393 7490 -10867 0
7395 -10851 0
7395 7475 -10853 0
7395 7476 -10855 0
7395 7478 -10857 0
7395 7480 -10859 0
7395 7482 -10861 0
7395 7484 -10863 0
7395 7486 -10865 0
7395 7488 -10867 0
7395 7490 -10869 0
7397 -10853 0
7397 7475 -10855 0
7397 7476 -10857 0
7397 7478 -10859 0
7397 7480 -10861 0
7397 7482 -10863 0
7397 7484 -10865 0
7397 7486 -10867 0
7397 7488 -10869 0
7397 7490 -10871 0
7399 -10855 0
7399 7475 -10857 0
7399 7476 -10859 0
7399 7478 -10861 0
7399 7480 -10863 0
7399 7482 -10865 0
7399 7484 -10867 0
7399 7486 -10869 0
7399 7488 -10871 0
7399 7490 -10873 0
7401 -10857 0
7401 7475 -10859 0
7401 7476 -10861 0
7401 7478 -10863 0
7401 7480 -10865 0
7401 7482 -10867 0
7401 7484 -10869 0
7401 7486 -10871 0
7401 7488 -10873 0
7401 7490 -10875 0
7403 -10859 0
7403 7475 -10861 0
7403 7476 -10863 0
7403 7478 -10865 0
7403 7480 -10867 0
7403 7482 -10869 0
7403 7484 -10871 0
7403 7486 -10873 0
7403 7488 -10875 0
7403 7490 -10877 0
7405 -10861 0
7405 7475 -10863 0
7405 7476 -10865 0
7405 7478 -10867 0
7405 7480 -10869 0
7405 7482 -10871 0
7405 7484 -10873 0
7405 7486 -10875 0
7405 7488 -10877 0
7405 7490 -10879 0
c (0<=( - aux434 + aux82 + aux87))
-7490 10879 0
-7488 10877 0
-7486 10875 0
-7484 10873 0
-7482 10871 0
-7480 10869 0
-7478 10867 0
-7476 10865 0
-7475 10863 0
-7405 10879 0
-7405 -7490 10877 0
-7405 -7488 10875 0
-7405 -7486 10873 0
-7405 -7484 10871 0
-7405 -7482 10869 0
-7405 -7480 10867 0
-7405 -7478 10865 0
-7405 -7476 10863 0
-7405 -7475 10861 0
-7403 10877 0
-7403 -7490 10875 0
-7403 -7488 10873 0
-7403 -7486 10871 0
-7403 -7484 10869 0
-7403 -7482 10867 0
-7403 -7480 10865 0
-7403 -7478 10863 0
-7403 -7476 10861 0
-7403 -7475 10859 0
-7401 10875 0
-7401 -7490 10873 0
-7401 -7488 10871 0
-7401 -7486 10869 0
-7401 -7484 10867 0
-7401 -7482 10865 0
-7401 -7480 10863 0
-7401 -7478 10861 0
-7401 -7476 10859 0
-7401 -7475 10857 0
-7399 10873 0
-7399 -7490 10871 0
-7399 -7488 10869 0
-7399 -7486 10867 0
-7399 -7484 10865 0
-7399 -7482 10863 0
-7399 -7480 10861 0
-7399 -7478 10859 0
-7399 -7476 10857 0
-7399 -7475 10855 0
-7397 10871 0
-7397 -7490 10869 0
-7397 -7488 10867 0
-7397 -7486 10865 0
-7397 -7484 10863 0
-7397 -7482 10861 0
-7397 -7480 10859 0
-7397 -7478 10857 0
-7397 -7476 10855 0
-7397 -7475 10853 0
-7395 10869 0
-7395 -7490 10867 0
-7395 -7488 10865 0
-7395 -7486 10863 0
-7395 -7484 10861 0
-7395 -7482 10859 0
-7395 -7480 10857 0
-7395 -7478 10855 0
-7395 -7476 10853 0
-7395 -7475 10851 0
-7393 10867 0
-7393 -7490 10865 0
-7393 -7488 10863 0
-7393 -7486 10861 0
-7393 -7484 10859 0
-7393 -7482 10857 0
-7393 -7480 10855 0
-7393 -7478 10853 0
-7393 -7476 10851 0
-7393 -7475 10849 0
-7391 10865 0
-7391 -7490 10863 0
-7391 -7488 10861 0
-7391 -7486 10859 0
-7391 -7484 10857 0
-7391 -7482 10855 0
-7391 -7480 10853 0
-7391 -7478 10851 0
-7391 -7476 10849 0
-7391 -7475 10847 0
-7390 10863 0
-7390 -7490 10861 0
-7390 -7488 10859 0
-7390 -7486 10857 0
-7390 -7484 10855 0
-7390 -7482 10853 0
-7390 -7480 10851 0
-7390 -7478 10849 0
-7390 -7476 10847 0
-7390 -7475 10846 0
c (( - aux435 + aux85 + aux86)<=0)
7458 -10881 0
7459 -10882 0
7461 -10884 0
7463 -10886 0
7465 -10888 0
7467 -10890 0
7469 -10892 0
7471 -10894 0
7473 -10896 0
7441 -10881 0
7441 7458 -10882 0
7441 7459 -10884 0
7441 7461 -10886 0
7441 7463 -10888 0
7441 7465 -10890 0
7441 7467 -10892 0
7441 7469 -10894 0
7441 7471 -10896 0
7441 7473 -10898 0
7442 -10882 0
7442 7458 -10884 0
7442 7459 -10886 0
7442 7461 -10888 0
7442 7463 -10890 0
7442 7465 -10892 0
7442 7467 -10894 0
7442 7469 -10896 0
7442 7471 -10898 0
7442 7473 -10900 0
7444 -10884 0
7444 7458 -10886 0
7444 7459 -10888 0
7444 7461 -10890 0
7444 7463 -10892 0
7444 7465 -10894 0
7444 7467 -10896 0
7444 7469 -10898 0
7444 7471 -10900 0
7444 7473 -10902 0
7446 -10886 0
7446 7458 -10888 0
7446 7459 -10890 0
7446 7461 -10892 0
7446 7463 -10894 0
7446 7465 -10896 0
7446 7467 -10898 0
7446 7469 -10900 0
7446 7471 -10902 0
7446 7473 -10904 0
7448 -10888 0
7448 7458 -10890 0
7448 7459 -10892 0
7448 7461 -10894 0
7448 7463 -10896 0
7448 7465 -10898 0
7448 7467 -10900 0
7448 7469 -10902 0
7448 7471 -10904 0
7448 7473 -10906 0
7450 -10890 0
7450 7458 -10892 0
7450 7459 -10894 0
7450 7461 -10896 0
7450 7463 -10898 0
7450 7465 -10900 0
7450 7467 -10902 0
7450 7469 -10904 0
7450 7471 -10906 0
7450 7473 -10908 0
7452 -10892 0
7452 7458 -10894 0
7452 7459 -10896 0
7452 7461 -10898 0
7452 7463 -10900 0
7452 7465 -10902 0
7452 7467 -10904 0
7452 7469 -10906 0
7452 7471 -10908 0
7452 7473 -10910 0
7454 -10894 0
7454 7458 -10896 0
7454 7459 -10898 0
7454 7461 -10900 0
7454 7463 -10902 0
7454 7465 -10904 0
7454 7467 -10906 0
7454 7469 -10908 0
7454 7471 -10910 0
7454 7473 -10912 0
7456 -10896 0
7456 7458 -10898 0
7456 7459 -10900 0
7456 7461 -10902 0
7456 7463 -10904 0
7456 7465 -10906 0
7456 7467 -10908 0
7456 7469 -10910 0
7456 7471 -10912 0
7456 7473 -10914 0
c (0<=( - aux435 + aux85 + aux86))
-7473 10914 0
-7471 10912 0
-7469 10910 0
-7467 10908 0
-7465 10906 0
-7463 10904 0
-7461 10902 0
-7459 10900 0
-7458 10898 0
-7456 10914 0
-7456 -7473 10912 0
-7456 -7471 10910 0
-7456 -7469 10908 0
-7456 -7467 10906 0
-7456 -7465 10904 0
-7456 -7463 10902 0
-7456 -7461 10900 0
-7456 -7459 10898 0
-7456 -7458 10896 0
-7454 10912 0
-7454 -7473 10910 0
-7454 -7471 10908 0
-7454 -7469 10906 0
-7454 -7467 10904 0
-7454 -7465 10902 0
-7454 -7463 10900 0
-7454 -7461 10898 0
-7454 -7459 10896 0
-7454 -7458 10894 0
-7452 10910 0
-7452 -7473 10908 0
-7452 -7471 10906 0
-7452 -7469 10904 0
-7452 -7467 10902 0
-7452 -7465 10900 0
-7452 -7463 10898 0
-7452 -7461 10896 0
-7452 -7459 10894 0
-7452 -7458 10892 0
-7450 10908 0
-7450 -7473 10906 0
-7450 -7471 10904 0
-7450 -7469 10902 0
-7450 -7467 10900 0
-7450 -7465 10898 0
-7450 -7463 10896 0
-7450 -7461 10894 0
-7450 -7459 10892 0
-7450 -7458 10890 0
-7448 10906 0
-7448 -7473 10904 0
-7448 -7471 10902 0
-7448 -7469 10900 0
-7448 -7467 10898 0
-7448 -7465 10896 0
-7448 -7463 10894 0
-7448 -7461 10892 0
-7448 -7459 10890 0
-7448 -7458 10888 0
-7446 10904 0
-7446 -7473 10902 0
-7446 -7471 10900 0
-7446 -7469 10898 0
-7446 -7467 10896 0
-7446 -7465 10894 0
-7446 -7463 10892 0
-7446 -7461 10890 0
-7446 -7459 10888 0
-7446 -7458 10886 0
-7444 10902 0
-7444 -7473 10900 0
-7444 -7471 10898 0
-7444 -7469 10896 0
-7444 -7467 10894 0
-7444 -7465 10892 0
-7444 -7463 10890 0
-7444 -7461 10888 0
-7444 -7459 10886 0
-7444 -7458 10884 0
-7442 10900 0
-7442 -7473 10898 0
-7442 -7471 10896 0
-7442 -7469 10894 0
-7442 -7467 10892 0
-7442 -7465 10890 0
-7442 -7463 10888 0
-7442 -7461 10886 0
-7442 -7459 10884 0
-7442 -7458 10882 0
-7441 10898 0
-7441 -7473 10896 0
-7441 -7471 10894 0
-7441 -7469 10892 0
-7441 -7467 10890 0
-7441 -7465 10888 0
-7441 -7463 10886 0
-7441 -7461 10884 0
-7441 -7459 10882 0
-7441 -7458 10881 0
c ((aux432 - aux436 + aux83)<=0)
10778 -10916 0
10779 -10917 0
10781 -10919 0
10783 -10921 0
10785 -10923 0
10787 -10925 0
10789 -10927 0
10791 -10929 0
10793 -10931 0
10795 -10933 0
10797 -10935 0
10799 -10937 0
10801 -10939 0
10803 -10941 0
10805 -10943 0
10807 -10945 0
10809 -10947 0
7407 -10916 0
7407 10778 -10917 0
7407 10779 -10919 0
7407 10781 -10921 0
7407 10783 -10923 0
7407 10785 -10925 0
7407 10787 -10927 0
7407 10789 -10929 0
7407 10791 -10931 0
7407 10793 -10933 0
7407 10795 -10935 0
7407 10797 -10937 0
7407 10799 -10939 0
7407 10801 -10941 0
7407 10803 -10943 0
7407 10805 -10945 0
7407 10807 -10947 0
7407 10809 -10949 0
7408 -10917 0
7408 10778 -10919 0
7408 10779 -10921 0
7408 10781 -10923 0
7408 10783 -10925 0
7408 10785 -10927 0
7408 10787 -10929 0
7408 10789 -10931 0
7408 10791 -10933 0
7408 10793 -10935 0
7408 10795 -10937 0
7408 10797 -10939 0
7408 10799 -10941 0
7408 10801 -10943 0
7408 10803 -10945 0
7408 10805 -10947 0
7408 10807 -10949 0
7408 10809 -10951 0
7410 -10919 0
7410 10778 -10921 0
7410 10779 -10923 0
7410 10781 -10925 0
7410 10783 -10927 0
7410 10785 -10929 0
7410 10787 -10931 0
7410 10789 -10933 0
7410 10791 -10935 0
7410 10793 -10937 0
7410 10795 -10939 0
7410 10797 -10941 0
7410 10799 -10943 0
7410 10801 -10945 0
7410 10803 -10947 0
7410 10805 -10949 0
7410 10807 -10951 0
7410 10809 -10953 0
7412 -10921 0
7412 10778 -10923 0
7412 10779 -10925 0
7412 10781 -10927 0
7412 10783 -10929 0
7412 10785 -10931 0
7412 10787 -10933 0
7412 10789 -10935 0
7412 10791 -10937 0
7412 10793 -10939 0
7412 10795 -10941 0
7412 10797 -10943 0
7412 10799 -10945 0
7412 10801 -10947 0
7412 10803 -10949 0
7412 10805 -10951 0
7412 10807 -10953 0
7412 10809 -10955 0
7414 -10923 0
7414 10778 -10925 0
7414 10779 -10927 0
7414 10781 -10929 0
7414 10783 -10931 0
7414 10785 -10933 0
7414 10787 -10935 0
7414 10789 -10937 0
7414 10791 -10939 0
7414 10793 -10941 0
7414 10795 -10943 0
7414 10797 -10945 0
7414 10799 -10947 0
7414 10801 -10949 0
7414 10803 -10951 0
7414 10805 -10953 0
7414 10807 -10955 0
7414 10809 -10957 0
7416 -10925 0
7416 10778 -10927 0
7416 10779 -10929 0
7416 10781 -10931 0
7416 10783 -10933 0
7416 10785 -10935 0
7416 10787 -10937 0
7416 10789 -10939 0
7416 10791 -10941 0
7416 10793 -10943 0
7416 10795 -10945 0
7416 10797 -10947 0
7416 10799 -10949 0
7416 10801 -10951 0
7416 10803 -10953 0
7416 10805 -10955 0
7416 10807 -10957 0
7416 10809 -10959 0
7418 -10927 0
7418 10778 -10929 0
7418 10779 -10931 0
7418 10781 -10933 0
7418 10783 -10935 0
7418 10785 -10937 0
7418 10787 -10939 0
7418 10789 -10941 0
7418 10791 -10943 0
7418 10793 -10945 0
7418 10795 -10947 0
7418 10797 -10949 0
7418 10799 -10951 0
7418 10801 -10953 0
7418 10803 -10955 0
7418 10805 -10957 0
7418 10807 -10959 0
7418 10809 -10961 0
7420 -10929 0
7420 10778 -10931 0
7420 10779 -10933 0
7420 10781 -10935 0
7420 10783 -10937 0
7420 10785 -10939 0
7420 10787 -10941 0
7420 10789 -10943 0
7420 10791 -10945 0
7420 10793 -10947 0
7420 10795 -10949 0
7420 10797 -10951 0
7420 10799 -10953 0
7420 10801 -10955 0
7420 10803 -10957 0
7420 10805 -10959 0
7420 10807 -10961 0
7420 10809 -10963 0
7422 -10931 0
7422 10778 -10933 0
7422 10779 -10935 0
7422 10781 -10937 0
7422 10783 -10939 0
7422 10785 -10941 0
7422 10787 -10943 0
7422 10789 -10945 0
7422 10791 -10947 0
7422 10793 -10949 0
7422 10795 -10951 0
7422 10797 -10953 0
7422 10799 -10955 0
7422 10801 -10957 0
7422 10803 -10959 0
7422 10805 -10961 0
7422 10807 -10963 0
7422 10809 -10965 0
c (0<=(aux432 - aux436 + aux83))
-10809 10965 0
-10807 10963 0
-10805 10961 0
-10803 10959 0
-10801 10957 0
-10799 10955 0
-10797 10953 0
-10795 10951 0
-10793 10949 0
-10791 10947 0
-10789 10945 0
-10787 10943 0
-10785 10941 0
-10783 10939 0
-10781 10937 0
-10779 10935 0
-10778 10933 0
-7422 10965 0
-7422 -10809 10963 0
-7422 -10807 10961 0
-7422 -10805 10959 0
-7422 -10803 10957 0
-7422 -10801 10955 0
-7422 -10799 10953 0
-7422 -10797 10951 0
-7422 -10795 10949 0
-7422 -10793 10947 0
-7422 -10791 10945 0
-7422 -10789 10943 0
-7422 -10787 10941 0
-7422 -10785 10939 0
-7422 -10783 10937 0
-7422 -10781 10935 0
-7422 -10779 10933 0
-7422 -10778 10931 0
-7420 10963 0
-7420 -10809 10961 0
-7420 -10807 10959 0
-7420 -10805 10957 0
-7420 -10803 10955 0
-7420 -10801 10953 0
-7420 -10799 10951 0
-7420 -10797 10949 0
-7420 -10795 10947 0
-7420 -10793 10945 0
-7420 -10791 10943 0
-7420 -10789 10941 0
-7420 -10787 10939 0
-7420 -10785 10937 0
-7420 -10783 10935 0
-7420 -10781 10933 0
-7420 -10779 10931 0
-7420 -10778 10929 0
-7418 10961 0
-7418 -10809 10959 0
-7418 -10807 10957 0
-7418 -10805 10955 0
-7418 -10803 10953 0
-7418 -10801 10951 0
-7418 -10799 10949 0
-7418 -10797 10947 0
-7418 -10795 10945 0
-7418 -10793 10943 0
-7418 -10791 10941 0
-7418 -10789 10939 0
-7418 -10787 10937 0
-7418 -10785 10935 0
-7418 -10783 10933 0
-7418 -10781 10931 0
-7418 -10779 10929 0
-7418 -10778 10927 0
-7416 10959 0
-7416 -10809 10957 0
-7416 -10807 10955 0
-7416 -10805 10953 0
-7416 -10803 10951 0
-7416 -10801 10949 0
-7416 -10799 10947 0
-7416 -10797 10945 0
-7416 -10795 10943 0
-7416 -10793 10941 0
-7416 -10791 10939 0
-7416 -10789 10937 0
-7416 -10787 10935 0
-7416 -10785 10933 0
-7416 -10783 10931 0
-7416 -10781 10929 0
-7416 -10779 10927 0
-7416 -10778 10925 0
-7414 10957 0
-7414 -10809 10955 0
-7414 -10807 10953 0
-7414 -10805 10951 0
-7414 -10803 10949 0
-7414 -10801 10947 0
-7414 -10799 10945 0
-7414 -10797 10943 0
-7414 -10795 10941 0
-7414 -10793 10939 0
-7414 -10791 10937 0
-7414 -10789 10935 0
-7414 -10787 10933 0
-7414 -10785 10931 0
-7414 -10783 10929 0
-7414 -10781 10927 0
-7414 -10779 10925 0
-7414 -10778 10923 0
-7412 10955 0
-7412 -10809 10953 0
-7412 -10807 10951 0
-7412 -10805 10949 0
-7412 -10803 10947 0
-7412 -10801 10945 0
-7412 -10799 10943 0
-7412 -10797 10941 0
-7412 -10795 10939 0
-7412 -10793 10937 0
-7412 -10791 10935 0
-7412 -10789 10933 0
-7412 -10787 10931 0
-7412 -10785 10929 0
-7412 -10783 10927 0
-7412 -10781 10925 0
-7412 -10779 10923 0
-7412 -10778 10921 0
-7410 10953 0
-7410 -10809 10951 0
-7410 -10807 10949 0
-7410 -10805 10947 0
-7410 -10803 10945 0
-7410 -10801 10943 0
-7410 -10799 10941 0
-7410 -10797 10939 0
-7410 -10795 10937 0
-7410 -10793 10935 0
-7410 -10791 10933 0
-7410 -10789 10931 0
-7410 -10787 10929 0
-7410 -10785 10927 0
-7410 -10783 10925 0
-7410 -10781 10923 0
-7410 -10779 10921 0
-7410 -10778 10919 0
-7408 10951 0
-7408 -10809 10949 0
-7408 -10807 10947 0
-7408 -10805 10945 0
-7408 -10803 10943 0
-7408 -10801 10941 0
-7408 -10799 10939 0
-7408 -10797 10937 0
-7408 -10795 10935 0
-7408 -10793 10933 0
-7408 -10791 10931 0
-7408 -10789 10929 0
-7408 -10787 10927 0
-7408 -10785 10925 0
-7408 -10783 10923 0
-7408 -10781 10921 0
-7408 -10779 10919 0
-7408 -10778 10917 0
-7407 10949 0
-7407 -10809 10947 0
-7407 -10807 10945 0
-7407 -10805 10943 0
-7407 -10803 10941 0
-7407 -10801 10939 0
-7407 -10799 10937 0
-7407 -10797 10935 0
-7407 -10795 10933 0
-7407 -10793 10931 0
-7407 -10791 10929 0
-7407 -10789 10927 0
-7407 -10787 10925 0
-7407 -10785 10923 0
-7407 -10783 10921 0
-7407 -10781 10919 0
-7407 -10779 10917 0
-7407 -10778 10916 0
c ((aux434 + aux435 - aux437)<=0)
10881 -10967 0
10882 -10968 0
10884 -10970 0
10886 -10972 0
10888 -10974 0
10890 -10976 0
10892 -10978 0
10894 -10980 0
10896 -10982 0
10898 -10984 0
10900 -10986 0
10902 -10988 0
10904 -10990 0
10906 -10992 0
10908 -10994 0
10910 -10996 0
10912 -10998 0
10914 -11000 0
10846 -10967 0
10846 10881 -10968 0
10846 10882 -10970 0
10846 10884 -10972 0
10846 10886 -10974 0
10846 10888 -10976 0
10846 10890 -10978 0
10846 10892 -10980 0
10846 10894 -10982 0
10846 10896 -10984 0
10846 10898 -10986 0
10846 10900 -10988 0
10846 10902 -10990 0
10846 10904 -10992 0
10846 10906 -10994 0
10846 10908 -10996 0
10846 10910 -10998 0
10846 10912 -11000 0
10846 10914 -11002 0
10847 -10968 0
10847 10881 -10970 0
10847 10882 -10972 0
10847 10884 -10974 0
10847 10886 -10976 0
10847 10888 -10978 0
10847 10890 -10980 0
10847 10892 -10982 0
10847 10894 -10984 0
10847 10896 -10986 0
10847 10898 -10988 0
10847 10900 -10990 0
10847 10902 -10992 0
10847 10904 -10994 0
10847 10906 -10996 0
10847 10908 -10998 0
10847 10910 -11000 0
10847 10912 -11002 0
10847 10914 -11004 0
10849 -10970 0
10849 10881 -10972 0
10849 10882 -10974 0
10849 10884 -10976 0
10849 10886 -10978 0
10849 10888 -10980 0
10849 10890 -10982 0
10849 10892 -10984 0
10849 10894 -10986 0
10849 10896 -10988 0
10849 10898 -10990 0
10849 10900 -10992 0
10849 10902 -10994 0
10849 10904 -10996 0
10849 10906 -10998 0
10849 10908 -11000 0
10849 10910 -11002 0
10849 10912 -11004 0
10849 10914 -11006 0
10851 -10972 0
10851 10881 -10974 0
10851 10882 -10976 0
10851 10884 -10978 0
10851 10886 -10980 0
10851 10888 -10982 0
10851 10890 -10984 0
10851 10892 -10986 0
10851 10894 -10988 0
10851 10896 -10990 0
10851 10898 -10992 0
10851 10900 -10994 0
10851 10902 -10996 0
10851 10904 -10998 0
10851 10906 -11000 0
10851 10908 -11002 0
10851 10910 -11004 0
10851 10912 -11006 0
10851 10914 -11008 0
10853 -10974 0
10853 10881 -10976 0
10853 10882 -10978 0
10853 10884 -10980 0
10853 10886 -10982 0
10853 10888 -10984 0
10853 10890 -10986 0
10853 10892 -10988 0
10853 10894 -10990 0
10853 10896 -10992 0
10853 10898 -10994 0
10853 10900 -10996 0
10853 10902 -10998 0
10853 10904 -11000 0
10853 10906 -11002 0
10853 10908 -11004 0
10853 10910 -11006 0
10853 10912 -11008 0
10853 10914 -11010 0
10855 -10976 0
10855 10881 -10978 0
10855 10882 -10980 0
10855 10884 -10982 0
10855 10886 -10984 0
10855 10888 -10986 0
10855 10890 -10988 0
10855 10892 -10990 0
10855 10894 -10992 0
10855 10896 -10994 0
10855 10898 -10996 0
10855 10900 -10998 0
10855 10902 -11000 0
10855 10904 -11002 0
10855 10906 -11004 0
10855 10908 -11006 0
10855 10910 -11008 0
10855 10912 -11010 0
10855 10914 -11012 0
10857 -10978 0
10857 10881 -10980 0
10857 10882 -10982 0
10857 10884 -10984 0
10857 10886 -10986 0
10857 10888 -10988 0
10857 10890 -10990 0
10857 10892 -10992 0
10857 10894 -10994 0
10857 10896 -10996 0
10857 10898 -10998 0
10857 10900 -11000 0
10857 10902 -11002 0
10857 10904 -11004 0
10857 10906 -11006 0
10857 10908 -11008 0
10857 10910 -11010 0
10857 10912 -11012 0
10857 10914 -11014 0
10859 -10980 0
10859 10881 -10982 0
10859 10882 -10984 0
10859 10884 -10986 0
10859 10886 -10988 0
10859 10888 -10990 0
10859 10890 -10992 0
10859 10892 -10994 0
10859 10894 -10996 0
10859 10896 -10998 0
10859 10898 -11000 0
10859 10900 -11002 0
10859 10902 -11004 0
10859 10904 -11006 0
10859 10906 -11008 0
10859 10908 -11010 0
10859 10910 -11012 0
10859 10912 -11014 0
10859 10914 -11016 0
10861 -10982 0
10861 10881 -10984 0
10861 10882 -10986 0
10861 10884 -10988 0
10861 10886 -10990 0
10861 10888 -10992 0
10861 10890 -10994 0
10861 10892 -10996 0
10861 10894 -10998 0
10861 10896 -11000 0
10861 10898 -11002 0
10861 10900 -11004 0
10861 10902 -11006 0
10861 10904 -11008 0
10861 10906 -11010 0
10861 10908 -11012 0
10861 10910 -11014 0
10861 10912 -11016 0
10861 10914 -11018 0
10863 -10984 0
10863 10881 -10986 0
10863 10882 -10988 0
10863 10884 -10990 0
10863 10886 -10992 0
10863 10888 -10994 0
10863 10890 -10996 0
10863 10892 -10998 0
10863 10894 -11000 0
10863 10896 -11002 0
10863 10898 -11004 0
10863 10900 -11006 0
10863 10902 -11008 0
10863 10904 -11010 0
10863 10906 -11012 0
10863 10908 -11014 0
10863 10910 -11016 0
10863 10912 -11018 0
10863 10914 -11020 0
10865 -10986 0
10865 10881 -10988 0
10865 10882 -10990 0
10865 10884 -10992 0
10865 10886 -10994 0
10865 10888 -10996 0
10865 10890 -10998 0
10865 10892 -11000 0
10865 10894 -11002 0
10865 10896 -11004 0
10865 10898 -11006 0
10865 10900 -11008 0
10865 10902 -11010 0
10865 10904 -11012 0
10865 10906 -11014 0
10865 10908 -11016 0
10865 10910 -11018 0
10865 10912 -11020 0
10865 10914 -11022 0
10867 -10988 0
10867 10881 -10990 0
10867 10882 -10992 0
10867 10884 -10994 0
10867 10886 -10996 0
10867 10888 -10998 0
10867 10890 -11000 0
10867 10892 -11002 0
10867 10894 -11004 0
10867 10896 -11006 0
10867 10898 -11008 0
10867 10900 -11010 0
10867 10902 -11012 0
10867 10904 -11014 0
10867 10906 -11016 0
10867 10908 -11018 0
10867 10910 -11020 0
10867 10912 -11022 0
10867 10914 -11024 0
10869 -10990 0
10869 10881 -10992 0
10869 10882 -10994 0
10869 10884 -10996 0
10869 10886 -10998 0
10869 10888 -11000 0
10869 10890 -11002 0
10869 10892 -11004 0
10869 10894 -11006 0
10869 10896 -11008 0
10869 10898 -11010 0
10869 10900 -11012 0
10869 10902 -11014 0
10869 10904 -11016 0
10869 10906 -11018 0
10869 10908 -11020 0
10869 10910 -11022 0
10869 10912 -11024 0
10869 10914 -11026 0
10871 -10992 0
10871 10881 -10994 0
10871 10882 -10996 0
10871 10884 -10998 0
10871 10886 -11000 0
10871 10888 -11002 0
10871 10890 -11004 0
10871 10892 -11006 0
10871 10894 -11008 0
10871 10896 -11010 0
10871 10898 -11012 0
10871 10900 -11014 0
10871 10902 -11016 0
10871 10904 -11018 0
10871 10906 -11020 0
10871 10908 -11022 0
10871 10910 -11024 0
10871 10912 -11026 0
10871 10914 -11028 0
10873 -10994 0
10873 10881 -10996 0
10873 10882 -10998 0
10873 10884 -11000 0
10873 10886 -11002 0
10873 10888 -11004 0
10873 10890 -11006 0
10873 10892 -11008 0
10873 10894 -11010 0
10873 10896 -11012 0
10873 10898 -11014 0
10873 10900 -11016 0
10873 10902 -11018 0
10873 10904 -11020 0
10873 10906 -11022 0
10873 10908 -11024 0
10873 10910 -11026 0
10873 10912 -11028 0
10873 10914 -11030 0
10875 -10996 0
10875 10881 -10998 0
10875 10882 -11000 0
10875 10884 -11002 0
10875 10886 -11004 0
10875 10888 -11006 0
10875 10890 -11008 0
10875 10892 -11010 0
10875 10894 -11012 0
10875 10896 -11014 0
10875 10898 -11016 0
10875 10900 -11018 0
10875 10902 -11020 0
10875 10904 -11022 0
10875 10906 -11024 0
10875 10908 -11026 0
10875 10910 -11028 0
10875 10912 -11030 0
10875 10914 -11032 0
10877 -10998 0
10877 10881 -11000 0
10877 10882 -11002 0
10877 10884 -11004 0
10877 10886 -11006 0
10877 10888 -11008 0
10877 10890 -11010 0
10877 10892 -11012 0
10877 10894 -11014 0
10877 10896 -11016 0
10877 10898 -11018 0
10877 10900 -11020 0
10877 10902 -11022 0
10877 10904 -11024 0
10877 10906 -11026 0
10877 10908 -11028 0
10877 10910 -11030 0
10877 10912 -11032 0
10877 10914 -11034 0
10879 -11000 0
10879 10881 -11002 0
10879 10882 -11004 0
10879 10884 -11006 0
10879 10886 -11008 0
10879 10888 -11010 0
10879 10890 -11012 0
10879 10892 -11014 0
10879 10894 -11016 0
10879 10896 -11018 0
10879 10898 -11020 0
10879 10900 -11022 0
10879 10902 -11024 0
10879 10904 -11026 0
10879 10906 -11028 0
10879 10908 -11030 0
10879 10910 -11032 0
10879 10912 -11034 0
10879 10914 -11036 0
c (0<=(aux434 + aux435 - aux437))
-10914 11036 0
-10912 11034 0
-10910 11032 0
-10908 11030 0
-10906 11028 0
-10904 11026 0
-10902 11024 0
-10900 11022 0
-10898 11020 0
-10896 11018 0
-10894 11016 0
-10892 11014 0
-10890 11012 0
-10888 11010 0
-10886 11008 0
-10884 11006 0
-10882 11004 0
-10881 11002 0
-10879 11036 0
-10879 -10914 11034 0
-10879 -10912 11032 0
-10879 -10910 11030 0
-10879 -10908 11028 0
-10879 -10906 11026 0
-10879 -10904 11024 0
-10879 -10902 11022 0
-10879 -10900 11020 0
-10879 -10898 11018 0
-10879 -10896 11016 0
-10879 -10894 11014 0
-10879 -10892 11012 0
-10879 -10890 11010 0
-10879 -10888 11008 0
-10879 -10886 11006 0
-10879 -10884 11004 0
-10879 -10882 11002 0
-10879 -10881 11000 0
-10877 11034 0
-10877 -10914 11032 0
-10877 -10912 11030 0
-10877 -10910 11028 0
-10877 -10908 11026 0
-10877 -10906 11024 0
-10877 -10904 11022 0
-10877 -10902 11020 0
-10877 -10900 11018 0
-10877 -10898 11016 0
-10877 -10896 11014 0
-10877 -10894 11012 0
-10877 -10892 11010 0
-10877 -10890 11008 0
-10877 -10888 11006 0
-10877 -10886 11004 0
-10877 -10884 11002 0
-10877 -10882 11000 0
-10877 -10881 10998 0
-10875 11032 0
-10875 -10914 11030 0
-10875 -10912 11028 0
-10875 -10910 11026 0
-10875 -10908 11024 0
-10875 -10906 11022 0
-10875 -10904 11020 0
-10875 -10902 11018 0
-10875 -10900 11016 0
-10875 -10898 11014 0
-10875 -10896 11012 0
-10875 -10894 11010 0
-10875 -10892 11008 0
-10875 -10890 11006 0
-10875 -10888 11004 0
-10875 -10886 11002 0
-10875 -10884 11000 0
-10875 -10882 10998 0
-10875 -10881 10996 0
-10873 11030 0
-10873 -10914 11028 0
-10873 -10912 11026 0
-10873 -10910 11024 0
-10873 -10908 11022 0
-10873 -10906 11020 0
-10873 -10904 11018 0
-10873 -10902 11016 0
-10873 -10900 11014 0
-10873 -10898 11012 0
-10873 -10896 11010 0
-10873 -10894 11008 0
-10873 -10892 11006 0
-10873 -10890 11004 0
-10873 -10888 11002 0
-10873 -10886 11000 0
-10873 -10884 10998 0
-10873 -10882 10996 0
-10873 -10881 10994 0
-10871 11028 0
-10871 -10914 11026 0
-10871 -10912 11024 0
-10871 -10910 11022 0
-10871 -10908 11020 0
-10871 -10906 11018 0
-10871 -10904 11016 0
-10871 -10902 11014 0
-10871 -10900 11012 0
-10871 -10898 11010 0
-10871 -10896 11008 0
-10871 -10894 11006 0
-10871 -10892 11004 0
-10871 -10890 11002 0
-10871 -10888 11000 0
-10871 -10886 10998 0
-10871 -10884 10996 0
-10871 -10882 10994 0
-10871 -10881 10992 0
-10869 11026 0
-10869 -10914 11024 0
-10869 -10912 11022 0
-10869 -10910 11020 0
-10869 -10908 11018 0
-10869 -10906 11016 0
-10869 -10904 11014 0
-10869 -10902 11012 0
-10869 -10900 11010 0
-10869 -10898 11008 0
-10869 -10896 11006 0
-10869 -10894 11004 0
-10869 -10892 11002 0
-10869 -10890 11000 0
-10869 -10888 10998 0
-10869 -10886 10996 0
-10869 -10884 10994 0
-10869 -10882 10992 0
-10869 -10881 10990 0
-10867 11024 0
-10867 -10914 11022 0
-10867 -10912 11020 0
-10867 -10910 11018 0
-10867 -10908 11016 0
-10867 -10906 11014 0
-10867 -10904 11012 0
-10867 -10902 11010 0
-10867 -10900 11008 0
-10867 -10898 11006 0
-10867 -10896 11004 0
-10867 -10894 11002 0
-10867 -10892 11000 0
-10867 -10890 10998 0
-10867 -10888 10996 0
-10867 -10886 10994 0
-10867 -10884 10992 0
-10867 -10882 10990 0
-10867 -10881 10988 0
-10865 11022 0
-10865 -10914 11020 0
-10865 -10912 11018 0
-10865 -10910 11016 0
-10865 -10908 11014 0
-10865 -10906 11012 0
-10865 -10904 11010 0
-10865 -10902 11008 0
-10865 -10900 11006 0
-10865 -10898 11004 0
-10865 -10896 11002 0
-10865 -10894 11000 0
-10865 -10892 10998 0
-10865 -10890 10996 0
-10865 -10888 10994 0
-10865 -10886 10992 0
-10865 -10884 10990 0
-10865 -10882 10988 0
-10865 -10881 10986 0
-10863 11020 0
-10863 -10914 11018 0
-10863 -10912 11016 0
-10863 -10910 11014 0
-10863 -10908 11012 0
-10863 -10906 11010 0
-10863 -10904 11008 0
-10863 -10902 11006 0
-10863 -10900 11004 0
-10863 -10898 11002 0
-10863 -10896 11000 0
-10863 -10894 10998 0
-10863 -10892 10996 0
-10863 -10890 10994 0
-10863 -10888 10992 0
-10863 -10886 10990 0
-10863 -10884 10988 0
-10863 -10882 10986 0
-10863 -10881 10984 0
-10861 11018 0
-10861 -10914 11016 0
-10861 -10912 11014 0
-10861 -10910 11012 0
-10861 -10908 11010 0
-10861 -10906 11008 0
-10861 -10904 11006 0
-10861 -10902 11004 0
-10861 -10900 11002 0
-10861 -10898 11000 0
-10861 -10896 10998 0
-10861 -10894 10996 0
-10861 -10892 10994 0
-10861 -10890 10992 0
-10861 -10888 10990 0
-10861 -10886 10988 0
-10861 -10884 10986 0
-10861 -10882 10984 0
-10861 -10881 10982 0
-10859 11016 0
-10859 -10914 11014 0
-10859 -10912 11012 0
-10859 -10910 11010 0
-10859 -10908 11008 0
-10859 -10906 11006 0
-10859 -10904 11004 0
-10859 -10902 11002 0
-10859 -10900 11000 0
-10859 -10898 10998 0
-10859 -10896 10996 0
-10859 -10894 10994 0
-10859 -10892 10992 0
-10859 -10890 10990 0
-10859 -10888 10988 0
-10859 -10886 10986 0
-10859 -10884 10984 0
-10859 -10882 10982 0
-10859 -10881 10980 0
-10857 11014 0
-10857 -10914 11012 0
-10857 -10912 11010 0
-10857 -10910 11008 0
-10857 -10908 11006 0
-10857 -10906 11004 0
-10857 -10904 11002 0
-10857 -10902 11000 0
-10857 -10900 10998 0
-10857 -10898 10996 0
-10857 -10896 10994 0
-10857 -10894 10992 0
-10857 -10892 10990 0
-10857 -10890 10988 0
-10857 -10888 10986 0
-10857 -10886 10984 0
-10857 -10884 10982 0
-10857 -10882 10980 0
-10857 -10881 10978 0
-10855 11012 0
-10855 -10914 11010 0
-10855 -10912 11008 0
-10855 -10910 11006 0
-10855 -10908 11004 0
-10855 -10906 11002 0
-10855 -10904 11000 0
-10855 -10902 10998 0
-10855 -10900 10996 0
-10855 -10898 10994 0
-10855 -10896 10992 0
-10855 -10894 10990 0
-10855 -10892 10988 0
-10855 -10890 10986 0
-10855 -10888 10984 0
-10855 -10886 10982 0
-10855 -10884 10980 0
-10855 -10882 10978 0
-10855 -10881 10976 0
-10853 11010 0
-10853 -10914 11008 0
-10853 -10912 11006 0
-10853 -10910 11004 0
-10853 -10908 11002 0
-10853 -10906 11000 0
-10853 -10904 10998 0
-10853 -10902 10996 0
-10853 -10900 10994 0
-10853 -10898 10992 0
-10853 -10896 10990 0
-10853 -10894 10988 0
-10853 -10892 10986 0
-10853 -10890 10984 0
-10853 -10888 10982 0
-10853 -10886 10980 0
-10853 -10884 10978 0
-10853 -10882 10976 0
-10853 -10881 10974 0
-10851 11008 0
-10851 -10914 11006 0
-10851 -10912 11004 0
-10851 -10910 11002 0
-10851 -10908 11000 0
-10851 -10906 10998 0
-10851 -10904 10996 0
-10851 -10902 10994 0
-10851 -10900 10992 0
-10851 -10898 10990 0
-10851 -10896 10988 0
-10851 -10894 10986 0
-10851 -10892 10984 0
-10851 -10890 10982 0
-10851 -10888 10980 0
-10851 -10886 10978 0
-10851 -10884 10976 0
-10851 -10882 10974 0
-10851 -10881 10972 0
-10849 11006 0
-10849 -10914 11004 0
-10849 -10912 11002 0
-10849 -10910 11000 0
-10849 -10908 10998 0
-10849 -10906 10996 0
-10849 -10904 10994 0
-10849 -10902 10992 0
-10849 -10900 10990 0
-10849 -10898 10988 0
-10849 -10896 10986 0
-10849 -10894 10984 0
-10849 -10892 10982 0
-10849 -10890 10980 0
-10849 -10888 10978 0
-10849 -10886 10976 0
-10849 -10884 10974 0
-10849 -10882 10972 0
-10849 -10881 10970 0
-10847 11004 0
-10847 -10914 11002 0
-10847 -10912 11000 0
-10847 -10910 10998 0
-10847 -10908 10996 0
-10847 -10906 10994 0
-10847 -10904 10992 0
-10847 -10902 10990 0
-10847 -10900 10988 0
-10847 -10898 10986 0
-10847 -10896 10984 0
-10847 -10894 10982 0
-10847 -10892 10980 0
-10847 -10890 10978 0
-10847 -10888 10976 0
-10847 -10886 10974 0
-10847 -10884 10972 0
-10847 -10882 10970 0
-10847 -10881 10968 0
-10846 11002 0
-10846 -10914 11000 0
-10846 -10912 10998 0
-10846 -10910 10996 0
-10846 -10908 10994 0
-10846 -10906 10992 0
-10846 -10904 10990 0
-10846 -10902 10988 0
-10846 -10900 10986 0
-10846 -10898 10984 0
-10846 -10896 10982 0
-10846 -10894 10980 0
-10846 -10892 10978 0
-10846 -10890 10976 0
-10846 -10888 10974 0
-10846 -10886 10972 0
-10846 -10884 10970 0
-10846 -10882 10968 0
-10846 -10881 10967 0
c (( - aux438 + shift(variant_fields_00003_00006_00001, -1) + aux97)<=0)
7629 -11038 0
7630 -11039 0
7632 -11041 0
7634 -11043 0
7636 -11045 0
7638 -11047 0
7640 -11049 0
7642 -11051 0
7644 -11053 0
4322 -11038 0
4322 7629 -11039 0
4322 7630 -11041 0
4322 7632 -11043 0
4322 7634 -11045 0
4322 7636 -11047 0
4322 7638 -11049 0
4322 7640 -11051 0
4322 7642 -11053 0
4322 7644 -11055 0
4323 -11039 0
4323 7629 -11041 0
4323 7630 -11043 0
4323 7632 -11045 0
4323 7634 -11047 0
4323 7636 -11049 0
4323 7638 -11051 0
4323 7640 -11053 0
4323 7642 -11055 0
4323 7644 -11057 0
4325 -11041 0
4325 7629 -11043 0
4325 7630 -11045 0
4325 7632 -11047 0
4325 7634 -11049 0
4325 7636 -11051 0
4325 7638 -11053 0
4325 7640 -11055 0
4325 7642 -11057 0
4325 7644 -11059 0
4327 -11043 0
4327 7629 -11045 0
4327 7630 -11047 0
4327 7632 -11049 0
4327 7634 -11051 0
4327 7636 -11053 0
4327 7638 -11055 0
4327 7640 -11057 0
4327 7642 -11059 0
4327 7644 -11061 0
4329 -11045 0
4329 7629 -11047 0
4329 7630 -11049 0
4329 7632 -11051 0
4329 7634 -11053 0
4329 7636 -11055 0
4329 7638 -11057 0
4329 7640 -11059 0
4329 7642 -11061 0
4329 7644 -11063 0
4331 -11047 0
4331 7629 -11049 0
4331 7630 -11051 0
4331 7632 -11053 0
4331 7634 -11055 0
4331 7636 -11057 0
4331 7638 -11059 0
4331 7640 -11061 0
4331 7642 -11063 0
4331 7644 -11065 0
4333 -11049 0
4333 7629 -11051 0
4333 7630 -11053 0
4333 7632 -11055 0
4333 7634 -11057 0
4333 7636 -11059 0
4333 7638 -11061 0
4333 7640 -11063 0
4333 7642 -11065 0
4333 7644 -11067 0
4335 -11051 0
4335 7629 -11053 0
4335 7630 -11055 0
4335 7632 -11057 0
4335 7634 -11059 0
4335 7636 -11061 0
4335 7638 -11063 0
4335 7640 -11065 0
4335 7642 -11067 0
4335 7644 -11069 0
c (0<=( - aux438 + shift(variant_fields_00003_00006_00001, -1) + aux97))
-7644 11069 0
-7642 11067 0
-7640 11065 0
-7638 11063 0
-7636 11061 0
-7634 11059 0
-7632 11057 0
-7630 11055 0
-7629 11053 0
-4335 11069 0
-4335 -7644 11067 0
-4335 -7642 11065 0
-4335 -7640 11063 0
-4335 -7638 11061 0
-4335 -7636 11059 0
-4335 -7634 11057 0
-4335 -7632 11055 0
-4335 -7630 11053 0
-4335 -7629 11051 0
-4333 11067 0
-4333 -7644 11065 0
-4333 -7642 11063 0
-4333 -7640 11061 0
-4333 -7638 11059 0
-4333 -7636 11057 0
-4333 -7634 11055 0
-4333 -7632 11053 0
-4333 -7630 11051 0
-4333 -7629 11049 0
-4331 11065 0
-4331 -7644 11063 0
-4331 -7642 11061 0
-4331 -7640 11059 0
-4331 -7638 11057 0
-4331 -7636 11055 0
-4331 -7634 11053 0
-4331 -7632 11051 0
-4331 -7630 11049 0
-4331 -7629 11047 0
-4329 11063 0
-4329 -7644 11061 0
-4329 -7642 11059 0
-4329 -7640 11057 0
-4329 -7638 11055 0
-4329 -7636 11053 0
-4329 -7634 11051 0
-4329 -7632 11049 0
-4329 -7630 11047 0
-4329 -7629 11045 0
-4327 11061 0
-4327 -7644 11059 0
-4327 -7642 11057 0
-4327 -7640 11055 0
-4327 -7638 11053 0
-4327 -7636 11051 0
-4327 -7634 11049 0
-4327 -7632 11047 0
-4327 -7630 11045 0
-4327 -7629 11043 0
-4325 11059 0
-4325 -7644 11057 0
-4325 -7642 11055 0
-4325 -7640 11053 0
-4325 -7638 11051 0
-4325 -7636 11049 0
-4325 -7634 11047 0
-4325 -7632 11045 0
-4325 -7630 11043 0
-4325 -7629 11041 0
-4323 11057 0
-4323 -7644 11055 0
-4323 -7642 11053 0
-4323 -7640 11051 0
-4323 -7638 11049 0
-4323 -7636 11047 0
-4323 -7634 11045 0
-4323 -7632 11043 0
-4323 -7630 11041 0
-4323 -7629 11039 0
-4322 11055 0
-4322 -7644 11053 0
-4322 -7642 11051 0
-4322 -7640 11049 0
-4322 -7638 11047 0
-4322 -7636 11045 0
-4322 -7634 11043 0
-4322 -7632 11041 0
-4322 -7630 11039 0
-4322 -7629 11038 0
c (( - aux439 + aux90 + aux96)<=0)
7612 -11071 0
7613 -11072 0
7615 -11074 0
7617 -11076 0
7619 -11078 0
7621 -11080 0
7623 -11082 0
7625 -11084 0
7627 -11086 0
7510 -11071 0
7510 7612 -11072 0
7510 7613 -11074 0
7510 7615 -11076 0
7510 7617 -11078 0
7510 7619 -11080 0
7510 7621 -11082 0
7510 7623 -11084 0
7510 7625 -11086 0
7510 7627 -11088 0
7511 -11072 0
7511 7612 -11074 0
7511 7613 -11076 0
7511 7615 -11078 0
7511 7617 -11080 0
7511 7619 -11082 0
7511 7621 -11084 0
7511 7623 -11086 0
7511 7625 -11088 0
7511 7627 -11090 0
7513 -11074 0
7513 7612 -11076 0
7513 7613 -11078 0
7513 7615 -11080 0
7513 7617 -11082 0
7513 7619 -11084 0
7513 7621 -11086 0
7513 7623 -11088 0
7513 7625 -11090 0
7513 7627 -11092 0
7515 -11076 0
7515 7612 -11078 0
7515 7613 -11080 0
7515 7615 -11082 0
7515 7617 -11084 0
7515 7619 -11086 0
7515 7621 -11088 0
7515 7623 -11090 0
7515 7625 -11092 0
7515 7627 -11094 0
7517 -11078 0
7517 7612 -11080 0
7517 7613 -11082 0
7517 7615 -11084 0
7517 7617 -11086 0
7517 7619 -11088 0
7517 7621 -11090 0
7517 7623 -11092 0
7517 7625 -11094 0
7517 7627 -11096 0
7519 -11080 0
7519 7612 -11082 0
7519 7613 -11084 0
7519 7615 -11086 0
7519 7617 -11088 0
7519 7619 -11090 0
7519 7621 -11092 0
7519 7623 -11094 0
7519 7625 -11096 0
7519 7627 -11098 0
7521 -11082 0
7521 7612 -11084 0
7521 7613 -11086 0
7521 7615 -11088 0
7521 7617 -11090 0
7521 7619 -11092 0
7521 7621 -11094 0
7521 7623 -11096 0
7521 7625 -11098 0
7521 7627 -11100 0
7523 -11084 0
7523 7612 -11086 0
7523 7613 -11088 0
7523 7615 -11090 0
7523 7617 -11092 0
7523 7619 -11094 0
7523 7621 -11096 0
7523 7623 -11098 0
7523 7625 -11100 0
7523 7627 -11102 0
7525 -11086 0
7525 7612 -11088 0
7525 7613 -11090 0
7525 7615 -11092 0
7525 7617 -11094 0
7525 7619 -11096 0
7525 7621 -11098 0
7525 7623 -11100 0
7525 7625 -11102 0
7525 7627 -11104 0
c (0<=( - aux439 + aux90 + aux96))
-7627 11104 0
-7625 11102 0
-7623 11100 0
-7621 11098 0
-7619 11096 0
-7617 11094 0
-7615 11092 0
-7613 11090 0
-7612 11088 0
-7525 11104 0
-7525 -7627 11102 0
-7525 -7625 11100 0
-7525 -7623 11098 0
-7525 -7621 11096 0
-7525 -7619 11094 0
-7525 -7617 11092 0
-7525 -7615 11090 0
-7525 -7613 11088 0
-7525 -7612 11086 0
-7523 11102 0
-7523 -7627 11100 0
-7523 -7625 11098 0
-7523 -7623 11096 0
-7523 -7621 11094 0
-7523 -7619 11092 0
-7523 -7617 11090 0
-7523 -7615 11088 0
-7523 -7613 11086 0
-7523 -7612 11084 0
-7521 11100 0
-7521 -7627 11098 0
-7521 -7625 11096 0
-7521 -7623 11094 0
-7521 -7621 11092 0
-7521 -7619 11090 0
-7521 -7617 11088 0
-7521 -7615 11086 0
-7521 -7613 11084 0
-7521 -7612 11082 0
-7519 11098 0
-7519 -7627 11096 0
-7519 -7625 11094 0
-7519 -7623 11092 0
-7519 -7621 11090 0
-7519 -7619 11088 0
-7519 -7617 11086 0
-7519 -7615 11084 0
-7519 -7613 11082 0
-7519 -7612 11080 0
-7517 11096 0
-7517 -7627 11094 0
-7517 -7625 11092 0
-7517 -7623 11090 0
-7517 -7621 11088 0
-7517 -7619 11086 0
-7517 -7617 11084 0
-7517 -7615 11082 0
-7517 -7613 11080 0
-7517 -7612 11078 0
-7515 11094 0
-7515 -7627 11092 0
-7515 -7625 11090 0
-7515 -7623 11088 0
-7515 -7621 11086 0
-7515 -7619 11084 0
-7515 -7617 11082 0
-7515 -7615 11080 0
-7515 -7613 11078 0
-7515 -7612 11076 0
-7513 11092 0
-7513 -7627 11090 0
-7513 -7625 11088 0
-7513 -7623 11086 0
-7513 -7621 11084 0
-7513 -7619 11082 0
-7513 -7617 11080 0
-7513 -7615 11078 0
-7513 -7613 11076 0
-7513 -7612 11074 0
-7511 11090 0
-7511 -7627 11088 0
-7511 -7625 11086 0
-7511 -7623 11084 0
-7511 -7621 11082 0
-7511 -7619 11080 0
-7511 -7617 11078 0
-7511 -7615 11076 0
-7511 -7613 11074 0
-7511 -7612 11072 0
-7510 11088 0
-7510 -7627 11086 0
-7510 -7625 11084 0
-7510 -7623 11082 0
-7510 -7621 11080 0
-7510 -7619 11078 0
-7510 -7617 11076 0
-7510 -7615 11074 0
-7510 -7613 11072 0
-7510 -7612 11071 0
c (( - aux440 + aux92 + aux95)<=0)
7595 -11106 0
7596 -11107 0
7598 -11109 0
7600 -11111 0
7602 -11113 0
7604 -11115 0
7606 -11117 0
7608 -11119 0
7610 -11121 0
7544 -11106 0
7544 7595 -11107 0
7544 7596 -11109 0
7544 7598 -11111 0
7544 7600 -11113 0
7544 7602 -11115 0
7544 7604 -11117 0
7544 7606 -11119 0
7544 7608 -11121 0
7544 7610 -11123 0
7545 -11107 0
7545 7595 -11109 0
7545 7596 -11111 0
7545 7598 -11113 0
7545 7600 -11115 0
7545 7602 -11117 0
7545 7604 -11119 0
7545 7606 -11121 0
7545 7608 -11123 0
7545 7610 -11125 0
7547 -11109 0
7547 7595 -11111 0
7547 7596 -11113 0
7547 7598 -11115 0
7547 7600 -11117 0
7547 7602 -11119 0
7547 7604 -11121 0
7547 7606 -11123 0
7547 7608 -11125 0
7547 7610 -11127 0
7549 -11111 0
7549 7595 -11113 0
7549 7596 -11115 0
7549 7598 -11117 0
7549 7600 -11119 0
7549 7602 -11121 0
7549 7604 -11123 0
7549 7606 -11125 0
7549 7608 -11127 0
7549 7610 -11129 0
7551 -11113 0
7551 7595 -11115 0
7551 7596 -11117 0
7551 7598 -11119 0
7551 7600 -11121 0
7551 7602 -11123 0
7551 7604 -11125 0
7551 7606 -11127 0
7551 7608 -11129 0
7551 7610 -11131 0
7553 -11115 0
7553 7595 -11117 0
7553 7596 -11119 0
7553 7598 -11121 0
7553 7600 -11123 0
7553 7602 -11125 0
7553 7604 -11127 0
7553 7606 -11129 0
7553 7608 -11131 0
7553 7610 -11133 0
7555 -11117 0
7555 7595 -11119 0
7555 7596 -11121 0
7555 7598 -11123 0
7555 7600 -11125 0
7555 7602 -11127 0
7555 7604 -11129 0
7555 7606 -11131 0
7555 7608 -11133 0
7555 7610 -11135 0
7557 -11119 0
7557 7595 -11121 0
7557 7596 -11123 0
7557 7598 -11125 0
7557 7600 -11127 0
7557 7602 -11129 0
7557 7604 -11131 0
7557 7606 -11133 0
7557 7608 -11135 0
7557 7610 -11137 0
7559 -11121 0
7559 7595 -11123 0
7559 7596 -11125 0
7559 7598 -11127 0
7559 7600 -11129 0
7559 7602 -11131 0
7559 7604 -11133 0
7559 7606 -11135 0
7559 7608 -11137 0
7559 7610 -11139 0
c (0<=( - aux440 + aux92 + aux95))
-7610 11139 0
-7608 11137 0
-7606 11135 0
-7604 11133 0
-7602 11131 0
-7600 11129 0
-7598 11127 0
-7596 11125 0
-7595 11123 0
-7559 11139 0
-7559 -7610 11137 0
-7559 -7608 11135 0
-7559 -7606 11133 0
-7559 -7604 11131 0
-7559 -7602 11129 0
-7559 -7600 11127 0
-7559 -7598 11125 0
-7559 -7596 11123 0
-7559 -7595 11121 0
-7557 11137 0
-7557 -7610 11135 0
-7557 -7608 11133 0
-7557 -7606 11131 0
-7557 -7604 11129 0
-7557 -7602 11127 0
-7557 -7600 11125 0
-7557 -7598 11123 0
-7557 -7596 11121 0
-7557 -7595 11119 0
-7555 11135 0
-7555 -7610 11133 0
-7555 -7608 11131 0
-7555 -7606 11129 0
-7555 -7604 11127 0
-7555 -7602 11125 0
-7555 -7600 11123 0
-7555 -7598 11121 0
-7555 -7596 11119 0
-7555 -7595 11117 0
-7553 11133 0
-7553 -7610 11131 0
-7553 -7608 11129 0
-7553 -7606 11127 0
-7553 -7604 11125 0
-7553 -7602 11123 0
-7553 -7600 11121 0
-7553 -7598 11119 0
-7553 -7596 11117 0
-7553 -7595 11115 0
-7551 11131 0
-7551 -7610 11129 0
-7551 -7608 11127 0
-7551 -7606 11125 0
-7551 -7604 11123 0
-7551 -7602 11121 0
-7551 -7600 11119 0
-7551 -7598 11117 0
-7551 -7596 11115 0
-7551 -7595 11113 0
-7549 11129 0
-7549 -7610 11127 0
-7549 -7608 11125 0
-7549 -7606 11123 0
-7549 -7604 11121 0
-7549 -7602 11119 0
-7549 -7600 11117 0
-7549 -7598 11115 0
-7549 -7596 11113 0
-7549 -7595 11111 0
-7547 11127 0
-7547 -7610 11125 0
-7547 -7608 11123 0
-7547 -7606 11121 0
-7547 -7604 11119 0
-7547 -7602 11117 0
-7547 -7600 11115 0
-7547 -7598 11113 0
-7547 -7596 11111 0
-7547 -7595 11109 0
-7545 11125 0
-7545 -7610 11123 0
-7545 -7608 11121 0
-7545 -7606 11119 0
-7545 -7604 11117 0
-7545 -7602 11115 0
-7545 -7600 11113 0
-7545 -7598 11111 0
-7545 -7596 11109 0
-7545 -7595 11107 0
-7544 11123 0
-7544 -7610 11121 0
-7544 -7608 11119 0
-7544 -7606 11117 0
-7544 -7604 11115 0
-7544 -7602 11113 0
-7544 -7600 11111 0
-7544 -7598 11109 0
-7544 -7596 11107 0
-7544 -7595 11106 0
c (( - aux441 + aux93 + aux94)<=0)
7578 -11141 0
7579 -11142 0
7581 -11144 0
7583 -11146 0
7585 -11148 0
7587 -11150 0
7589 -11152 0
7591 -11154 0
7593 -11156 0
7561 -11141 0
7561 7578 -11142 0
7561 7579 -11144 0
7561 7581 -11146 0
7561 7583 -11148 0
7561 7585 -11150 0
7561 7587 -11152 0
7561 7589 -11154 0
7561 7591 -11156 0
7561 7593 -11158 0
7562 -11142 0
7562 7578 -11144 0
7562 7579 -11146 0
7562 7581 -11148 0
7562 7583 -11150 0
7562 7585 -11152 0
7562 7587 -11154 0
7562 7589 -11156 0
7562 7591 -11158 0
7562 7593 -11160 0
7564 -11144 0
7564 7578 -11146 0
7564 7579 -11148 0
7564 7581 -11150 0
7564 7583 -11152 0
7564 7585 -11154 0
7564 7587 -11156 0
7564 7589 -11158 0
7564 7591 -11160 0
7564 7593 -11162 0
7566 -11146 0
7566 7578 -11148 0
7566 7579 -11150 0
7566 7581 -11152 0
7566 7583 -11154 0
7566 7585 -11156 0
7566 7587 -11158 0
7566 7589 -11160 0
7566 7591 -11162 0
7566 7593 -11164 0
7568 -11148 0
7568 7578 -11150 0
7568 7579 -11152 0
7568 7581 -11154 0
7568 7583 -11156 0
7568 7585 -11158 0
7568 7587 -11160 0
7568 7589 -11162 0
7568 7591 -11164 0
7568 7593 -11166 0
7570 -11150 0
7570 7578 -11152 0
7570 7579 -11154 0
7570 7581 -11156 0
7570 7583 -11158 0
7570 7585 -11160 0
7570 7587 -11162 0
7570 7589 -11164 0
7570 7591 -11166 0
7570 7593 -11168 0
7572 -11152 0
7572 7578 -11154 0
7572 7579 -11156 0
7572 7581 -11158 0
7572 7583 -11160 0
7572 7585 -11162 0
7572 7587 -11164 0
7572 7589 -11166 0
7572 7591 -11168 0
7572 7593 -11170 0
7574 -11154 0
7574 7578 -11156 0
7574 7579 -11158 0
7574 7581 -11160 0
7574 7583 -11162 0
7574 7585 -11164 0
7574 7587 -11166 0
7574 7589 -11168 0
7574 7591 -11170 0
7574 7593 -11172 0
7576 -11156 0
7576 7578 -11158 0
7576 7579 -11160 0
7576 7581 -11162 0
7576 7583 -11164 0
7576 7585 -11166 0
7576 7587 -11168 0
7576 7589 -11170 0
7576 7591 -11172 0
7576 7593 -11174 0
c (0<=( - aux441 + aux93 + aux94))
-7593 11174 0
-7591 11172 0
-7589 11170 0
-7587 11168 0
-7585 11166 0
-7583 11164 0
-7581 11162 0
-7579 11160 0
-7578 11158 0
-7576 11174 0
-7576 -7593 11172 0
-7576 -7591 11170 0
-7576 -7589 11168 0
-7576 -7587 11166 0
-7576 -7585 11164 0
-7576 -7583 11162 0
-7576 -7581 11160 0
-7576 -7579 11158 0
-7576 -7578 11156 0
-7574 11172 0
-7574 -7593 11170 0
-7574 -7591 11168 0
-7574 -7589 11166 0
-7574 -7587 11164 0
-7574 -7585 11162 0
-7574 -7583 11160 0
-7574 -7581 11158 0
-7574 -7579 11156 0
-7574 -7578 11154 0
-7572 11170 0
-7572 -7593 11168 0
-7572 -7591 11166 0
-7572 -7589 11164 0
-7572 -7587 11162 0
-7572 -7585 11160 0
-7572 -7583 11158 0
-7572 -7581 11156 0
-7572 -7579 11154 0
-7572 -7578 11152 0
-7570 11168 0
-7570 -7593 11166 0
-7570 -7591 11164 0
-7570 -7589 11162 0
-7570 -7587 11160 0
-7570 -7585 11158 0
-7570 -7583 11156 0
-7570 -7581 11154 0
-7570 -7579 11152 0
-7570 -7578 11150 0
-7568 11166 0
-7568 -7593 11164 0
-7568 -7591 11162 0
-7568 -7589 11160 0
-7568 -7587 11158 0
-7568 -7585 11156 0
-7568 -7583 11154 0
-7568 -7581 11152 0
-7568 -7579 11150 0
-7568 -7578 11148 0
-7566 11164 0
-7566 -7593 11162 0
-7566 -7591 11160 0
-7566 -7589 11158 0
-7566 -7587 11156 0
-7566 -7585 11154 0
-7566 -7583 11152 0
-7566 -7581 11150 0
-7566 -7579 11148 0
-7566 -7578 11146 0
-7564 11162 0
-7564 -7593 11160 0
-7564 -7591 11158 0
-7564 -7589 11156 0
-7564 -7587 11154 0
-7564 -7585 11152 0
-7564 -7583 11150 0
-7564 -7581 11148 0
-7564 -7579 11146 0
-7564 -7578 11144 0
-7562 11160 0
-7562 -7593 11158 0
-7562 -7591 11156 0
-7562 -7589 11154 0
-7562 -7587 11152 0
-7562 -7585 11150 0
-7562 -7583 11148 0
-7562 -7581 11146 0
-7562 -7579 11144 0
-7562 -7578 11142 0
-7561 11158 0
-7561 -7593 11156 0
-7561 -7591 11154 0
-7561 -7589 11152 0
-7561 -7587 11150 0
-7561 -7585 11148 0
-7561 -7583 11146 0
-7561 -7581 11144 0
-7561 -7579 11142 0
-7561 -7578 11141 0
c ((aux438 - aux442 + aux91)<=0)
11038 -11176 0
11039 -11177 0
11041 -11179 0
11043 -11181 0
11045 -11183 0
11047 -11185 0
11049 -11187 0
11051 -11189 0
11053 -11191 0
11055 -11193 0
11057 -11195 0
11059 -11197 0
11061 -11199 0
11063 -11201 0
11065 -11203 0
11067 -11205 0
11069 -11207 0
7527 -11176 0
7527 11038 -11177 0
7527 11039 -11179 0
7527 11041 -11181 0
7527 11043 -11183 0
7527 11045 -11185 0
7527 11047 -11187 0
7527 11049 -11189 0
7527 11051 -11191 0
7527 11053 -11193 0
7527 11055 -11195 0
7527 11057 -11197 0
7527 11059 -11199 0
7527 11061 -11201 0
7527 11063 -11203 0
7527 11065 -11205 0
7527 11067 -11207 0
7527 11069 -11209 0
7528 -11177 0
7528 11038 -11179 0
7528 11039 -11181 0
7528 11041 -11183 0
7528 11043 -11185 0
7528 11045 -11187 0
7528 11047 -11189 0
7528 11049 -11191 0
7528 11051 -11193 0
7528 11053 -11195 0
7528 11055 -11197 0
7528 11057 -11199 0
7528 11059 -11201 0
7528 11061 -11203 0
7528 11063 -11205 0
7528 11065 -11207 0
7528 11067 -11209 0
7528 11069 -11211 0
7530 -11179 0
7530 11038 -11181 0
7530 11039 -11183 0
7530 11041 -11185 0
7530 11043 -11187 0
7530 11045 -11189 0
7530 11047 -11191 0
7530 11049 -11193 0
7530 11051 -11195 0
7530 11053 -11197 0
7530 11055 -11199 0
7530 11057 -11201 0
7530 11059 -11203 0
7530 11061 -11205 0
7530 11063 -11207 0
7530 11065 -11209 0
7530 11067 -11211 0
7530 11069 -11213 0
7532 -11181 0
7532 11038 -11183 0
7532 11039 -11185 0
7532 11041 -11187 0
7532 11043 -11189 0
7532 11045 -11191 0
7532 11047 -11193 0
7532 11049 -11195 0
7532 11051 -11197 0
7532 11053 -11199 0
7532 11055 -11201 0
7532 11057 -11203 0
7532 11059 -11205 0
7532 11061 -11207 0
7532 11063 -11209 0
7532 11065 -11211 0
7532 11067 -11213 0
7532 11069 -11215 0
7534 -11183 0
7534 11038 -11185 0
7534 11039 -11187 0
7534 11041 -11189 0
7534 11043 -11191 0
7534 11045 -11193 0
7534 11047 -11195 0
7534 11049 -11197 0
7534 11051 -11199 0
7534 11053 -11201 0
7534 11055 -11203 0
7534 11057 -11205 0
7534 11059 -11207 0
7534 11061 -11209 0
7534 11063 -11211 0
7534 11065 -11213 0
7534 11067 -11215 0
7534 11069 -11217 0
7536 -11185 0
7536 11038 -11187 0
7536 11039 -11189 0
7536 11041 -11191 0
7536 11043 -11193 0
7536 11045 -11195 0
7536 11047 -11197 0
7536 11049 -11199 0
7536 11051 -11201 0
7536 11053 -11203 0
7536 11055 -11205 0
7536 11057 -11207 0
7536 11059 -11209 0
7536 11061 -11211 0
7536 11063 -11213 0
7536 11065 -11215 0
7536 11067 -11217 0
7536 11069 -11219 0
7538 -11187 0
7538 11038 -11189 0
7538 11039 -11191 0
7538 11041 -11193 0
7538 11043 -11195 0
7538 11045 -11197 0
7538 11047 -11199 0
7538 11049 -11201 0
7538 11051 -11203 0
7538 11053 -11205 0
7538 11055 -11207 0
7538 11057 -11209 0
7538 11059 -11211 0
7538 11061 -11213 0
7538 11063 -11215 0
7538 11065 -11217 0
7538 11067 -11219 0
7538 11069 -11221 0
7540 -11189 0
7540 11038 -11191 0
7540 11039 -11193 0
7540 11041 -11195 0
7540 11043 -11197 0
7540 11045 -11199 0
7540 11047 -11201 0
7540 11049 -11203 0
7540 11051 -11205 0
7540 11053 -11207 0
7540 11055 -11209 0
7540 11057 -11211 0
7540 11059 -11213 0
7540 11061 -11215 0
7540 11063 -11217 0
7540 11065 -11219 0
7540 11067 -11221 0
7540 11069 -11223 0
7542 -11191 0
7542 11038 -11193 0
7542 11039 -11195 0
7542 11041 -11197 0
7542 11043 -11199 0
7542 11045 -11201 0
7542 11047 -11203 0
7542 11049 -11205 0
7542 11051 -11207 0
7542 11053 -11209 0
7542 11055 -11211 0
7542 11057 -11213 0
7542 11059 -11215 0
7542 11061 -11217 0
7542 11063 -11219 0
7542 11065 -11221 0
7542 11067 -11223 0
7542 11069 -11225 0
c (0<=(aux438 - aux442 + aux91))
-11069 11225 0
-11067 11223 0
-11065 11221 0
-11063 11219 0
-11061 11217 0
-11059 11215 0
-11057 11213 0
-11055 11211 0
-11053 11209 0
-11051 11207 0
-11049 11205 0
-11047 11203 0
-11045 11201 0
-11043 11199 0
-11041 11197 0
-11039 11195 0
-11038 11193 0
-7542 11225 0
-7542 -11069 11223 0
-7542 -11067 11221 0
-7542 -11065 11219 0
-7542 -11063 11217 0
-7542 -11061 11215 0
-7542 -11059 11213 0
-7542 -11057 11211 0
-7542 -11055 11209 0
-7542 -11053 11207 0
-7542 -11051 11205 0
-7542 -11049 11203 0
-7542 -11047 11201 0
-7542 -11045 11199 0
-7542 -11043 11197 0
-7542 -11041 11195 0
-7542 -11039 11193 0
-7542 -11038 11191 0
-7540 11223 0
-7540 -11069 11221 0
-7540 -11067 11219 0
-7540 -11065 11217 0
-7540 -11063 11215 0
-7540 -11061 11213 0
-7540 -11059 11211 0
-7540 -11057 11209 0
-7540 -11055 11207 0
-7540 -11053 11205 0
-7540 -11051 11203 0
-7540 -11049 11201 0
-7540 -11047 11199 0
-7540 -11045 11197 0
-7540 -11043 11195 0
-7540 -11041 11193 0
-7540 -11039 11191 0
-7540 -11038 11189 0
-7538 11221 0
-7538 -11069 11219 0
-7538 -11067 11217 0
-7538 -11065 11215 0
-7538 -11063 11213 0
-7538 -11061 11211 0
-7538 -11059 11209 0
-7538 -11057 11207 0
-7538 -11055 11205 0
-7538 -11053 11203 0
-7538 -11051 11201 0
-7538 -11049 11199 0
-7538 -11047 11197 0
-7538 -11045 11195 0
-7538 -11043 11193 0
-7538 -11041 11191 0
-7538 -11039 11189 0
-7538 -11038 11187 0
-7536 11219 0
-7536 -11069 11217 0
-7536 -11067 11215 0
-7536 -11065 11213 0
-7536 -11063 11211 0
-7536 -11061 11209 0
-7536 -11059 11207 0
-7536 -11057 11205 0
-7536 -11055 11203 0
-7536 -11053 11201 0
-7536 -11051 11199 0
-7536 -11049 11197 0
-7536 -11047 11195 0
-7536 -11045 11193 0
-7536 -11043 11191 0
-7536 -11041 11189 0
-7536 -11039 11187 0
-7536 -11038 11185 0
-7534 11217 0
-7534 -11069 11215 0
-7534 -11067 11213 0
-7534 -11065 11211 0
-7534 -11063 11209 0
-7534 -11061 11207 0
-7534 -11059 11205 0
-7534 -11057 11203 0
-7534 -11055 11201 0
-7534 -11053 11199 0
-7534 -11051 11197 0
-7534 -11049 11195 0
-7534 -11047 11193 0
-7534 -11045 11191 0
-7534 -11043 11189 0
-7534 -11041 11187 0
-7534 -11039 11185 0
-7534 -11038 11183 0
-7532 11215 0
-7532 -11069 11213 0
-7532 -11067 11211 0
-7532 -11065 11209 0
-7532 -11063 11207 0
-7532 -11061 11205 0
-7532 -11059 11203 0
-7532 -11057 11201 0
-7532 -11055 11199 0
-7532 -11053 11197 0
-7532 -11051 11195 0
-7532 -11049 11193 0
-7532 -11047 11191 0
-7532 -11045 11189 0
-7532 -11043 11187 0
-7532 -11041 11185 0
-7532 -11039 11183 0
-7532 -11038 11181 0
-7530 11213 0
-7530 -11069 11211 0
-7530 -11067 11209 0
-7530 -11065 11207 0
-7530 -11063 11205 0
-7530 -11061 11203 0
-7530 -11059 11201 0
-7530 -11057 11199 0
-7530 -11055 11197 0
-7530 -11053 11195 0
-7530 -11051 11193 0
-7530 -11049 11191 0
-7530 -11047 11189 0
-7530 -11045 11187 0
-7530 -11043 11185 0
-7530 -11041 11183 0
-7530 -11039 11181 0
-7530 -11038 11179 0
-7528 11211 0
-7528 -11069 11209 0
-7528 -11067 11207 0
-7528 -11065 11205 0
-7528 -11063 11203 0
-7528 -11061 11201 0
-7528 -11059 11199 0
-7528 -11057 11197 0
-7528 -11055 11195 0
-7528 -11053 11193 0
-7528 -11051 11191 0
-7528 -11049 11189 0
-7528 -11047 11187 0
-7528 -11045 11185 0
-7528 -11043 11183 0
-7528 -11041 11181 0
-7528 -11039 11179 0
-7528 -11038 11177 0
-7527 11209 0
-7527 -11069 11207 0
-7527 -11067 11205 0
-7527 -11065 11203 0
-7527 -11063 11201 0
-7527 -11061 11199 0
-7527 -11059 11197 0
-7527 -11057 11195 0
-7527 -11055 11193 0
-7527 -11053 11191 0
-7527 -11051 11189 0
-7527 -11049 11187 0
-7527 -11047 11185 0
-7527 -11045 11183 0
-7527 -11043 11181 0
-7527 -11041 11179 0
-7527 -11039 11177 0
-7527 -11038 11176 0
c ((aux440 + aux441 - aux443)<=0)
11141 -11227 0
11142 -11228 0
11144 -11230 0
11146 -11232 0
11148 -11234 0
11150 -11236 0
11152 -11238 0
11154 -11240 0
11156 -11242 0
11158 -11244 0
11160 -11246 0
11162 -11248 0
11164 -11250 0
11166 -11252 0
11168 -11254 0
11170 -11256 0
11172 -11258 0
11174 -11260 0
11106 -11227 0
11106 11141 -11228 0
11106 11142 -11230 0
11106 11144 -11232 0
11106 11146 -11234 0
11106 11148 -11236 0
11106 11150 -11238 0
11106 11152 -11240 0
11106 11154 -11242 0
11106 11156 -11244 0
11106 11158 -11246 0
11106 11160 -11248 0
11106 11162 -11250 0
11106 11164 -11252 0
11106 11166 -11254 0
11106 11168 -11256 0
11106 11170 -11258 0
11106 11172 -11260 0
11106 11174 -11262 0
11107 -11228 0
11107 11141 -11230 0
11107 11142 -11232 0
11107 11144 -11234 0
11107 11146 -11236 0
11107 11148 -11238 0
11107 11150 -11240 0
11107 11152 -11242 0
11107 11154 -11244 0
11107 11156 -11246 0
11107 11158 -11248 0
11107 11160 -11250 0
11107 11162 -11252 0
11107 11164 -11254 0
11107 11166 -11256 0
11107 11168 -11258 0
11107 11170 -11260 0
11107 11172 -11262 0
11107 11174 -11264 0
11109 -11230 0
11109 11141 -11232 0
11109 11142 -11234 0
11109 11144 -11236 0
11109 11146 -11238 0
11109 11148 -11240 0
11109 11150 -11242 0
11109 11152 -11244 0
11109 11154 -11246 0
11109 11156 -11248 0
11109 11158 -11250 0
11109 11160 -11252 0
11109 11162 -11254 0
11109 11164 -11256 0
11109 11166 -11258 0
11109 11168 -11260 0
11109 11170 -11262 0
11109 11172 -11264 0
11109 11174 -11266 0
11111 -11232 0
11111 11141 -11234 0
11111 11142 -11236 0
11111 11144 -11238 0
11111 11146 -11240 0
11111 11148 -11242 0
11111 11150 -11244 0
11111 11152 -11246 0
11111 11154 -11248 0
11111 11156 -11250 0
11111 11158 -11252 0
11111 11160 -11254 0
11111 11162 -11256 0
11111 11164 -11258 0
11111 11166 -11260 0
11111 11168 -11262 0
11111 11170 -11264 0
11111 11172 -11266 0
11111 11174 -11268 0
11113 -11234 0
11113 11141 -11236 0
11113 11142 -11238 0
11113 11144 -11240 0
11113 11146 -11242 0
11113 11148 -11244 0
11113 11150 -11246 0
11113 11152 -11248 0
11113 11154 -11250 0
11113 11156 -11252 0
11113 11158 -11254 0
11113 11160 -11256 0
11113 11162 -11258 0
11113 11164 -11260 0
11113 11166 -11262 0
11113 11168 -11264 0
11113 11170 -11266 0
11113 11172 -11268 0
11113 11174 -11270 0
11115 -11236 0
11115 11141 -11238 0
11115 11142 -11240 0
11115 11144 -11242 0
11115 11146 -11244 0
11115 11148 -11246 0
11115 11150 -11248 0
11115 11152 -11250 0
11115 11154 -11252 0
11115 11156 -11254 0
11115 11158 -11256 0
11115 11160 -11258 0
11115 11162 -11260 0
11115 11164 -11262 0
11115 11166 -11264 0
11115 11168 -11266 0
11115 11170 -11268 0
11115 11172 -11270 0
11115 11174 -11272 0
11117 -11238 0
11117 11141 -11240 0
11117 11142 -11242 0
11117 11144 -11244 0
11117 11146 -11246 0
11117 11148 -11248 0
11117 11150 -11250 0
11117 11152 -11252 0
11117 11154 -11254 0
11117 11156 -11256 0
11117 11158 -11258 0
11117 11160 -11260 0
11117 11162 -11262 0
11117 11164 -11264 0
11117 11166 -11266 0
11117 11168 -11268 0
11117 11170 -11270 0
11117 11172 -11272 0
11117 11174 -11274 0
11119 -11240 0
11119 11141 -11242 0
11119 11142 -11244 0
11119 11144 -11246 0
11119 11146 -11248 0
11119 11148 -11250 0
11119 11150 -11252 0
11119 11152 -11254 0
11119 11154 -11256 0
11119 11156 -11258 0
11119 11158 -11260 0
11119 11160 -11262 0
11119 11162 -11264 0
11119 11164 -11266 0
11119 11166 -11268 0
11119 11168 -11270 0
11119 11170 -11272 0
11119 11172 -11274 0
11119 11174 -11276 0
11121 -11242 0
11121 11141 -11244 0
11121 11142 -11246 0
11121 11144 -11248 0
11121 11146 -11250 0
11121 11148 -11252 0
11121 11150 -11254 0
11121 11152 -11256 0
11121 11154 -11258 0
11121 11156 -11260 0
11121 11158 -11262 0
11121 11160 -11264 0
11121 11162 -11266 0
11121 11164 -11268 0
11121 11166 -11270 0
11121 11168 -11272 0
11121 11170 -11274 0
11121 11172 -11276 0
11121 11174 -11278 0
11123 -11244 0
11123 11141 -11246 0
11123 11142 -11248 0
11123 11144 -11250 0
11123 11146 -11252 0
11123 11148 -11254 0
11123 11150 -11256 0
11123 11152 -11258 0
11123 11154 -11260 0
11123 11156 -11262 0
11123 11158 -11264 0
11123 11160 -11266 0
11123 11162 -11268 0
11123 11164 -11270 0
11123 11166 -11272 0
11123 11168 -11274 0
11123 11170 -11276 0
11123 11172 -11278 0
11123 11174 -11280 0
11125 -11246 0
11125 11141 -11248 0
11125 11142 -11250 0
11125 11144 -11252 0
11125 11146 -11254 0
11125 11148 -11256 0
11125 11150 -11258 0
11125 11152 -11260 0
11125 11154 -11262 0
11125 11156 -11264 0
11125 11158 -11266 0
11125 11160 -11268 0
11125 11162 -11270 0
11125 11164 -11272 0
11125 11166 -11274 0
11125 11168 -11276 0
11125 11170 -11278 0
11125 11172 -11280 0
11125 11174 -11282 0
11127 -11248 0
11127 11141 -11250 0
11127 11142 -11252 0
11127 11144 -11254 0
11127 11146 -11256 0
11127 11148 -11258 0
11127 11150 -11260 0
11127 11152 -11262 0
11127 11154 -11264 0
11127 11156 -11266 0
11127 11158 -11268 0
11127 11160 -11270 0
11127 11162 -11272 0
11127 11164 -11274 0
11127 11166 -11276 0
11127 11168 -11278 0
11127 11170 -11280 0
11127 11172 -11282 0
11127 11174 -11284 0
11129 -11250 0
11129 11141 -11252 0
11129 11142 -11254 0
11129 11144 -11256 0
11129 11146 -11258 0
11129 11148 -11260 0
11129 11150 -11262 0
11129 11152 -11264 0
11129 11154 -11266 0
11129 11156 -11268 0
11129 11158 -11270 0
11129 11160 -11272 0
11129 11162 -11274 0
11129 11164 -11276 0
11129 11166 -11278 0
11129 11168 -11280 0
11129 11170 -11282 0
11129 11172 -11284 0
11129 11174 -11286 0
11131 -11252 0
11131 11141 -11254 0
11131 11142 -11256 0
11131 11144 -11258 0
11131 11146 -11260 0
11131 11148 -11262 0
11131 11150 -11264 0
11131 11152 -11266 0
11131 11154 -11268 0
11131 11156 -11270 0
11131 11158 -11272 0
11131 11160 -11274 0
11131 11162 -11276 0
11131 11164 -11278 0
11131 11166 -11280 0
11131 11168 -11282 0
11131 11170 -11284 0
11131 11172 -11286 0
11131 11174 -11288 0
11133 -11254 0
11133 11141 -11256 0
11133 11142 -11258 0
11133 11144 -11260 0
11133 11146 -11262 0
11133 11148 -11264 0
11133 11150 -11266 0
11133 11152 -11268 0
11133 11154 -11270 0
11133 11156 -11272 0
11133 11158 -11274 0
11133 11160 -11276 0
11133 11162 -11278 0
11133 11164 -11280 0
11133 11166 -11282 0
11133 11168 -11284 0
11133 11170 -11286 0
11133 11172 -11288 0
11133 11174 -11290 0
11135 -11256 0
11135 11141 -11258 0
11135 11142 -11260 0
11135 11144 -11262 0
11135 11146 -11264 0
11135 11148 -11266 0
11135 11150 -11268 0
11135 11152 -11270 0
11135 11154 -11272 0
11135 11156 -11274 0
11135 11158 -11276 0
11135 11160 -11278 0
11135 11162 -11280 0
11135 11164 -11282 0
11135 11166 -11284 0
11135 11168 -11286 0
11135 11170 -11288 0
11135 11172 -11290 0
11135 11174 -11292 0
11137 -11258 0
11137 11141 -11260 0
11137 11142 -11262 0
11137 11144 -11264 0
11137 11146 -11266 0
11137 11148 -11268 0
11137 11150 -11270 0
11137 11152 -11272 0
11137 11154 -11274 0
11137 11156 -11276 0
11137 11158 -11278 0
11137 11160 -11280 0
11137 11162 -11282 0
11137 11164 -11284 0
11137 11166 -11286 0
11137 11168 -11288 0
11137 11170 -11290 0
11137 11172 -11292 0
11137 11174 -11294 0
11139 -11260 0
11139 11141 -11262 0
11139 11142 -11264 0
11139 11144 -11266 0
11139 11146 -11268 0
11139 11148 -11270 0
11139 11150 -11272 0
11139 11152 -11274 0
11139 11154 -11276 0
11139 11156 -11278 0
11139 11158 -11280 0
11139 11160 -11282 0
11139 11162 -11284 0
11139 11164 -11286 0
11139 11166 -11288 0
11139 11168 -11290 0
11139 11170 -11292 0
11139 11172 -11294 0
11139 11174 -11296 0
c (0<=(aux440 + aux441 - aux443))
-11174 11296 0
-11172 11294 0
-11170 11292 0
-11168 11290 0
-11166 11288 0
-11164 11286 0
-11162 11284 0
-11160 11282 0
-11158 11280 0
-11156 11278 0
-11154 11276 0
-11152 11274 0
-11150 11272 0
-11148 11270 0
-11146 11268 0
-11144 11266 0
-11142 11264 0
-11141 11262 0
-11139 11296 0
-11139 -11174 11294 0
-11139 -11172 11292 0
-11139 -11170 11290 0
-11139 -11168 11288 0
-11139 -11166 11286 0
-11139 -11164 11284 0
-11139 -11162 11282 0
-11139 -11160 11280 0
-11139 -11158 11278 0
-11139 -11156 11276 0
-11139 -11154 11274 0
-11139 -11152 11272 0
-11139 -11150 11270 0
-11139 -11148 11268 0
-11139 -11146 11266 0
-11139 -11144 11264 0
-11139 -11142 11262 0
-11139 -11141 11260 0
-11137 11294 0
-11137 -11174 11292 0
-11137 -11172 11290 0
-11137 -11170 11288 0
-11137 -11168 11286 0
-11137 -11166 11284 0
-11137 -11164 11282 0
-11137 -11162 11280 0
-11137 -11160 11278 0
-11137 -11158 11276 0
-11137 -11156 11274 0
-11137 -11154 11272 0
-11137 -11152 11270 0
-11137 -11150 11268 0
-11137 -11148 11266 0
-11137 -11146 11264 0
-11137 -11144 11262 0
-11137 -11142 11260 0
-11137 -11141 11258 0
-11135 11292 0
-11135 -11174 11290 0
-11135 -11172 11288 0
-11135 -11170 11286 0
-11135 -11168 11284 0
-11135 -11166 11282 0
-11135 -11164 11280 0
-11135 -11162 11278 0
-11135 -11160 11276 0
-11135 -11158 11274 0
-11135 -11156 11272 0
-11135 -11154 11270 0
-11135 -11152 11268 0
-11135 -11150 11266 0
-11135 -11148 11264 0
-11135 -11146 11262 0
-11135 -11144 11260 0
-11135 -11142 11258 0
-11135 -11141 11256 0
-11133 11290 0
-11133 -11174 11288 0
-11133 -11172 11286 0
-11133 -11170 11284 0
-11133 -11168 11282 0
-11133 -11166 11280 0
-11133 -11164 11278 0
-11133 -11162 11276 0
-11133 -11160 11274 0
-11133 -11158 11272 0
-11133 -11156 11270 0
-11133 -11154 11268 0
-11133 -11152 11266 0
-11133 -11150 11264 0
-11133 -11148 11262 0
-11133 -11146 11260 0
-11133 -11144 11258 0
-11133 -11142 11256 0
-11133 -11141 11254 0
-11131 11288 0
-11131 -11174 11286 0
-11131 -11172 11284 0
-11131 -11170 11282 0
-11131 -11168 11280 0
-11131 -11166 11278 0
-11131 -11164 11276 0
-11131 -11162 11274 0
-11131 -11160 11272 0
-11131 -11158 11270 0
-11131 -11156 11268 0
-11131 -11154 11266 0
-11131 -11152 11264 0
-11131 -11150 11262 0
-11131 -11148 11260 0
-11131 -11146 11258 0
-11131 -11144 11256 0
-11131 -11142 11254 0
-11131 -11141 11252 0
-11129 11286 0
-11129 -11174 11284 0
-11129 -11172 11282 0
-11129 -11170 11280 0
-11129 -11168 11278 0
-11129 -11166 11276 0
-11129 -11164 11274 0
-11129 -11162 11272 0
-11129 -11160 11270 0
-11129 -11158 11268 0
-11129 -11156 11266 0
-11129 -11154 11264 0
-11129 -11152 11262 0
-11129 -11150 11260 0
-11129 -11148 11258 0
-11129 -11146 11256 0
-11129 -11144 11254 0
-11129 -11142 11252 0
-11129 -11141 11250 0
-11127 11284 0
-11127 -11174 11282 0
-11127 -11172 11280 0
-11127 -11170 11278 0
-11127 -11168 11276 0
-11127 -11166 11274 0
-11127 -11164 11272 0
-11127 -11162 11270 0
-11127 -11160 11268 0
-11127 -11158 11266 0
-11127 -11156 11264 0
-11127 -11154 11262 0
-11127 -11152 11260 0
-11127 -11150 11258 0
-11127 -11148 11256 0
-11127 -11146 11254 0
-11127 -11144 11252 0
-11127 -11142 11250 0
-11127 -11141 11248 0
-11125 11282 0
-11125 -11174 11280 0
-11125 -11172 11278 0
-11125 -11170 11276 0
-11125 -11168 11274 0
-11125 -11166 11272 0
-11125 -11164 11270 0
-11125 -11162 11268 0
-11125 -11160 11266 0
-11125 -11158 11264 0
-11125 -11156 11262 0
-11125 -11154 11260 0
-11125 -11152 11258 0
-11125 -11150 11256 0
-11125 -11148 11254 0
-11125 -11146 11252 0
-11125 -11144 11250 0
-11125 -11142 11248 0
-11125 -11141 11246 0
-11123 11280 0
-11123 -11174 11278 0
-11123 -11172 11276 0
-11123 -11170 11274 0
-11123 -11168 11272 0
-11123 -11166 11270 0
-11123 -11164 11268 0
-11123 -11162 11266 0
-11123 -11160 11264 0
-11123 -11158 11262 0
-11123 -11156 11260 0
-11123 -11154 11258 0
-11123 -11152 11256 0
-11123 -11150 11254 0
-11123 -11148 11252 0
-11123 -11146 11250 0
-11123 -11144 11248 0
-11123 -11142 11246 0
-11123 -11141 11244 0
-11121 11278 0
-11121 -11174 11276 0
-11121 -11172 11274 0
-11121 -11170 11272 0
-11121 -11168 11270 0
-11121 -11166 11268 0
-11121 -11164 11266 0
-11121 -11162 11264 0
-11121 -11160 11262 0
-11121 -11158 11260 0
-11121 -11156 11258 0
-11121 -11154 11256 0
-11121 -11152 11254 0
-11121 -11150 11252 0
-11121 -11148 11250 0
-11121 -11146 11248 0
-11121 -11144 11246 0
-11121 -11142 11244 0
-11121 -11141 11242 0
-11119 11276 0
-11119 -11174 11274 0
-11119 -11172 11272 0
-11119 -11170 11270 0
-11119 -11168 11268 0
-11119 -11166 11266 0
-11119 -11164 11264 0
-11119 -11162 11262 0
-11119 -11160 11260 0
-11119 -11158 11258 0
-11119 -11156 11256 0
-11119 -11154 11254 0
-11119 -11152 11252 0
-11119 -11150 11250 0
-11119 -11148 11248 0
-11119 -11146 11246 0
-11119 -11144 11244 0
-11119 -11142 11242 0
-11119 -11141 11240 0
-11117 11274 0
-11117 -11174 11272 0
-11117 -11172 11270 0
-11117 -11170 11268 0
-11117 -11168 11266 0
-11117 -11166 11264 0
-11117 -11164 11262 0
-11117 -11162 11260 0
-11117 -11160 11258 0
-11117 -11158 11256 0
-11117 -11156 11254 0
-11117 -11154 11252 0
-11117 -11152 11250 0
-11117 -11150 11248 0
-11117 -11148 11246 0
-11117 -11146 11244 0
-11117 -11144 11242 0
-11117 -11142 11240 0
-11117 -11141 11238 0
-11115 11272 0
-11115 -11174 11270 0
-11115 -11172 11268 0
-11115 -11170 11266 0
-11115 -11168 11264 0
-11115 -11166 11262 0
-11115 -11164 11260 0
-11115 -11162 11258 0
-11115 -11160 11256 0
-11115 -11158 11254 0
-11115 -11156 11252 0
-11115 -11154 11250 0
-11115 -11152 11248 0
-11115 -11150 11246 0
-11115 -11148 11244 0
-11115 -11146 11242 0
-11115 -11144 11240 0
-11115 -11142 11238 0
-11115 -11141 11236 0
-11113 11270 0
-11113 -11174 11268 0
-11113 -11172 11266 0
-11113 -11170 11264 0
-11113 -11168 11262 0
-11113 -11166 11260 0
-11113 -11164 11258 0
-11113 -11162 11256 0
-11113 -11160 11254 0
-11113 -11158 11252 0
-11113 -11156 11250 0
-11113 -11154 11248 0
-11113 -11152 11246 0
-11113 -11150 11244 0
-11113 -11148 11242 0
-11113 -11146 11240 0
-11113 -11144 11238 0
-11113 -11142 11236 0
-11113 -11141 11234 0
-11111 11268 0
-11111 -11174 11266 0
-11111 -11172 11264 0
-11111 -11170 11262 0
-11111 -11168 11260 0
-11111 -11166 11258 0
-11111 -11164 11256 0
-11111 -11162 11254 0
-11111 -11160 11252 0
-11111 -11158 11250 0
-11111 -11156 11248 0
-11111 -11154 11246 0
-11111 -11152 11244 0
-11111 -11150 11242 0
-11111 -11148 11240 0
-11111 -11146 11238 0
-11111 -11144 11236 0
-11111 -11142 11234 0
-11111 -11141 11232 0
-11109 11266 0
-11109 -11174 11264 0
-11109 -11172 11262 0
-11109 -11170 11260 0
-11109 -11168 11258 0
-11109 -11166 11256 0
-11109 -11164 11254 0
-11109 -11162 11252 0
-11109 -11160 11250 0
-11109 -11158 11248 0
-11109 -11156 11246 0
-11109 -11154 11244 0
-11109 -11152 11242 0
-11109 -11150 11240 0
-11109 -11148 11238 0
-11109 -11146 11236 0
-11109 -11144 11234 0
-11109 -11142 11232 0
-11109 -11141 11230 0
-11107 11264 0
-11107 -11174 11262 0
-11107 -11172 11260 0
-11107 -11170 11258 0
-11107 -11168 11256 0
-11107 -11166 11254 0
-11107 -11164 11252 0
-11107 -11162 11250 0
-11107 -11160 11248 0
-11107 -11158 11246 0
-11107 -11156 11244 0
-11107 -11154 11242 0
-11107 -11152 11240 0
-11107 -11150 11238 0
-11107 -11148 11236 0
-11107 -11146 11234 0
-11107 -11144 11232 0
-11107 -11142 11230 0
-11107 -11141 11228 0
-11106 11262 0
-11106 -11174 11260 0
-11106 -11172 11258 0
-11106 -11170 11256 0
-11106 -11168 11254 0
-11106 -11166 11252 0
-11106 -11164 11250 0
-11106 -11162 11248 0
-11106 -11160 11246 0
-11106 -11158 11244 0
-11106 -11156 11242 0
-11106 -11154 11240 0
-11106 -11152 11238 0
-11106 -11150 11236 0
-11106 -11148 11234 0
-11106 -11146 11232 0
-11106 -11144 11230 0
-11106 -11142 11228 0
-11106 -11141 11227 0
c (( - aux444 + aux99 + shift(variant_fields_00003_00008_00001, -1))<=0)
7647 -11298 0
7648 -11299 0
7650 -11301 0
7652 -11303 0
7654 -11305 0
7656 -11307 0
7658 -11309 0
7660 -11311 0
7662 -11313 0
4592 -11298 0
4592 7647 -11299 0
4592 7648 -11301 0
4592 7650 -11303 0
4592 7652 -11305 0
4592 7654 -11307 0
4592 7656 -11309 0
4592 7658 -11311 0
4592 7660 -11313 0
4592 7662 -11315 0
4593 -11299 0
4593 7647 -11301 0
4593 7648 -11303 0
4593 7650 -11305 0
4593 7652 -11307 0
4593 7654 -11309 0
4593 7656 -11311 0
4593 7658 -11313 0
4593 7660 -11315 0
4593 7662 -11317 0
4595 -11301 0
4595 7647 -11303 0
4595 7648 -11305 0
4595 7650 -11307 0
4595 7652 -11309 0
4595 7654 -11311 0
4595 7656 -11313 0
4595 7658 -11315 0
4595 7660 -11317 0
4595 7662 -11319 0
4597 -11303 0
4597 7647 -11305 0
4597 7648 -11307 0
4597 7650 -11309 0
4597 7652 -11311 0
4597 7654 -11313 0
4597 7656 -11315 0
4597 7658 -11317 0
4597 7660 -11319 0
4597 7662 -11321 0
4599 -11305 0
4599 7647 -11307 0
4599 7648 -11309 0
4599 7650 -11311 0
4599 7652 -11313 0
4599 7654 -11315 0
4599 7656 -11317 0
4599 7658 -11319 0
4599 7660 -11321 0
4599 7662 -11323 0
4601 -11307 0
4601 7647 -11309 0
4601 7648 -11311 0
4601 7650 -11313 0
4601 7652 -11315 0
4601 7654 -11317 0
4601 7656 -11319 0
4601 7658 -11321 0
4601 7660 -11323 0
4601 7662 -11325 0
4603 -11309 0
4603 7647 -11311 0
4603 7648 -11313 0
4603 7650 -11315 0
4603 7652 -11317 0
4603 7654 -11319 0
4603 7656 -11321 0
4603 7658 -11323 0
4603 7660 -11325 0
4603 7662 -11327 0
4605 -11311 0
4605 7647 -11313 0
4605 7648 -11315 0
4605 7650 -11317 0
4605 7652 -11319 0
4605 7654 -11321 0
4605 7656 -11323 0
4605 7658 -11325 0
4605 7660 -11327 0
4605 7662 -11329 0
c (0<=( - aux444 + aux99 + shift(variant_fields_00003_00008_00001, -1)))
-7662 11329 0
-7660 11327 0
-7658 11325 0
-7656 11323 0
-7654 11321 0
-7652 11319 0
-7650 11317 0
-7648 11315 0
-7647 11313 0
-4605 11329 0
-4605 -7662 11327 0
-4605 -7660 11325 0
-4605 -7658 11323 0
-4605 -7656 11321 0
-4605 -7654 11319 0
-4605 -7652 11317 0
-4605 -7650 11315 0
-4605 -7648 11313 0
-4605 -7647 11311 0
-4603 11327 0
-4603 -7662 11325 0
-4603 -7660 11323 0
-4603 -7658 11321 0
-4603 -7656 11319 0
-4603 -7654 11317 0
-4603 -7652 11315 0
-4603 -7650 11313 0
-4603 -7648 11311 0
-4603 -7647 11309 0
-4601 11325 0
-4601 -7662 11323 0
-4601 -7660 11321 0
-4601 -7658 11319 0
-4601 -7656 11317 0
-4601 -7654 11315 0
-4601 -7652 11313 0
-4601 -7650 11311 0
-4601 -7648 11309 0
-4601 -7647 11307 0
-4599 11323 0
-4599 -7662 11321 0
-4599 -7660 11319 0
-4599 -7658 11317 0
-4599 -7656 11315 0
-4599 -7654 11313 0
-4599 -7652 11311 0
-4599 -7650 11309 0
-4599 -7648 11307 0
-4599 -7647 11305 0
-4597 11321 0
-4597 -7662 11319 0
-4597 -7660 11317 0
-4597 -7658 11315 0
-4597 -7656 11313 0
-4597 -7654 11311 0
-4597 -7652 11309 0
-4597 -7650 11307 0
-4597 -7648 11305 0
-4597 -7647 11303 0
-4595 11319 0
-4595 -7662 11317 0
-4595 -7660 11315 0
-4595 -7658 11313 0
-4595 -7656 11311 0
-4595 -7654 11309 0
-4595 -7652 11307 0
-4595 -7650 11305 0
-4595 -7648 11303 0
-4595 -7647 11301 0
-4593 11317 0
-4593 -7662 11315 0
-4593 -7660 11313 0
-4593 -7658 11311 0
-4593 -7656 11309 0
-4593 -7654 11307 0
-4593 -7652 11305 0
-4593 -7650 11303 0
-4593 -7648 11301 0
-4593 -7647 11299 0
-4592 11315 0
-4592 -7662 11313 0
-4592 -7660 11311 0
-4592 -7658 11309 0
-4592 -7656 11307 0
-4592 -7654 11305 0
-4592 -7652 11303 0
-4592 -7650 11301 0
-4592 -7648 11299 0
-4592 -7647 11298 0
c ((aux100 + aux103 - aux445)<=0)
7715 -11331 0
7716 -11332 0
7718 -11334 0
7720 -11336 0
7722 -11338 0
7724 -11340 0
7726 -11342 0
7728 -11344 0
7730 -11346 0
7664 -11331 0
7664 7715 -11332 0
7664 7716 -11334 0
7664 7718 -11336 0
7664 7720 -11338 0
7664 7722 -11340 0
7664 7724 -11342 0
7664 7726 -11344 0
7664 7728 -11346 0
7664 7730 -11348 0
7665 -11332 0
7665 7715 -11334 0
7665 7716 -11336 0
7665 7718 -11338 0
7665 7720 -11340 0
7665 7722 -11342 0
7665 7724 -11344 0
7665 7726 -11346 0
7665 7728 -11348 0
7665 7730 -11350 0
7667 -11334 0
7667 7715 -11336 0
7667 7716 -11338 0
7667 7718 -11340 0
7667 7720 -11342 0
7667 7722 -11344 0
7667 7724 -11346 0
7667 7726 -11348 0
7667 7728 -11350 0
7667 7730 -11352 0
7669 -11336 0
7669 7715 -11338 0
7669 7716 -11340 0
7669 7718 -11342 0
7669 7720 -11344 0
7669 7722 -11346 0
7669 7724 -11348 0
7669 7726 -11350 0
7669 7728 -11352 0
7669 7730 -11354 0
7671 -11338 0
7671 7715 -11340 0
7671 7716 -11342 0
7671 7718 -11344 0
7671 7720 -11346 0
7671 7722 -11348 0
7671 7724 -11350 0
7671 7726 -11352 0
7671 7728 -11354 0
7671 7730 -11356 0
7673 -11340 0
7673 7715 -11342 0
7673 7716 -11344 0
7673 7718 -11346 0
7673 7720 -11348 0
7673 7722 -11350 0
7673 7724 -11352 0
7673 7726 -11354 0
7673 7728 -11356 0
7673 7730 -11358 0
7675 -11342 0
7675 7715 -11344 0
7675 7716 -11346 0
7675 7718 -11348 0
7675 7720 -11350 0
7675 7722 -11352 0
7675 7724 -11354 0
7675 7726 -11356 0
7675 7728 -11358 0
7675 7730 -11360 0
7677 -11344 0
7677 7715 -11346 0
7677 7716 -11348 0
7677 7718 -11350 0
7677 7720 -11352 0
7677 7722 -11354 0
7677 7724 -11356 0
7677 7726 -11358 0
7677 7728 -11360 0
7677 7730 -11362 0
7679 -11346 0
7679 7715 -11348 0
7679 7716 -11350 0
7679 7718 -11352 0
7679 7720 -11354 0
7679 7722 -11356 0
7679 7724 -11358 0
7679 7726 -11360 0
7679 7728 -11362 0
7679 7730 -11364 0
c (0<=(aux100 + aux103 - aux445))
-7730 11364 0
-7728 11362 0
-7726 11360 0
-7724 11358 0
-7722 11356 0
-7720 11354 0
-7718 11352 0
-7716 11350 0
-7715 11348 0
-7679 11364 0
-7679 -7730 11362 0
-7679 -7728 11360 0
-7679 -7726 11358 0
-7679 -7724 11356 0
-7679 -7722 11354 0
-7679 -7720 11352 0
-7679 -7718 11350 0
-7679 -7716 11348 0
-7679 -7715 11346 0
-7677 11362 0
-7677 -7730 11360 0
-7677 -7728 11358 0
-7677 -7726 11356 0
-7677 -7724 11354 0
-7677 -7722 11352 0
-7677 -7720 11350 0
-7677 -7718 11348 0
-7677 -7716 11346 0
-7677 -7715 11344 0
-7675 11360 0
-7675 -7730 11358 0
-7675 -7728 11356 0
-7675 -7726 11354 0
-7675 -7724 11352 0
-7675 -7722 11350 0
-7675 -7720 11348 0
-7675 -7718 11346 0
-7675 -7716 11344 0
-7675 -7715 11342 0
-7673 11358 0
-7673 -7730 11356 0
-7673 -7728 11354 0
-7673 -7726 11352 0
-7673 -7724 11350 0
-7673 -7722 11348 0
-7673 -7720 11346 0
-7673 -7718 11344 0
-7673 -7716 11342 0
-7673 -7715 11340 0
-7671 11356 0
-7671 -7730 11354 0
-7671 -7728 11352 0
-7671 -7726 11350 0
-7671 -7724 11348 0
-7671 -7722 11346 0
-7671 -7720 11344 0
-7671 -7718 11342 0
-7671 -7716 11340 0
-7671 -7715 11338 0
-7669 11354 0
-7669 -7730 11352 0
-7669 -7728 11350 0
-7669 -7726 11348 0
-7669 -7724 11346 0
-7669 -7722 11344 0
-7669 -7720 11342 0
-7669 -7718 11340 0
-7669 -7716 11338 0
-7669 -7715 11336 0
-7667 11352 0
-7667 -7730 11350 0
-7667 -7728 11348 0
-7667 -7726 11346 0
-7667 -7724 11344 0
-7667 -7722 11342 0
-7667 -7720 11340 0
-7667 -7718 11338 0
-7667 -7716 11336 0
-7667 -7715 11334 0
-7665 11350 0
-7665 -7730 11348 0
-7665 -7728 11346 0
-7665 -7726 11344 0
-7665 -7724 11342 0
-7665 -7722 11340 0
-7665 -7720 11338 0
-7665 -7718 11336 0
-7665 -7716 11334 0
-7665 -7715 11332 0
-7664 11348 0
-7664 -7730 11346 0
-7664 -7728 11344 0
-7664 -7726 11342 0
-7664 -7724 11340 0
-7664 -7722 11338 0
-7664 -7720 11336 0
-7664 -7718 11334 0
-7664 -7716 11332 0
-7664 -7715 11331 0
c ((aux101 + aux106 - aux446)<=0)
7766 -11366 0
7767 -11367 0
7769 -11369 0
7771 -11371 0
7773 -11373 0
7775 -11375 0
7777 -11377 0
7779 -11379 0
7781 -11381 0
7681 -11366 0
7681 7766 -11367 0
7681 7767 -11369 0
7681 7769 -11371 0
7681 7771 -11373 0
7681 7773 -11375 0
7681 7775 -11377 0
7681 7777 -11379 0
7681 7779 -11381 0
7681 7781 -11383 0
7682 -11367 0
7682 7766 -11369 0
7682 7767 -11371 0
7682 7769 -11373 0
7682 7771 -11375 0
7682 7773 -11377 0
7682 7775 -11379 0
7682 7777 -11381 0
7682 7779 -11383 0
7682 7781 -11385 0
7684 -11369 0
7684 7766 -11371 0
7684 7767 -11373 0
7684 7769 -11375 0
7684 7771 -11377 0
7684 7773 -11379 0
7684 7775 -11381 0
7684 7777 -11383 0
7684 7779 -11385 0
7684 7781 -11387 0
7686 -11371 0
7686 7766 -11373 0
7686 7767 -11375 0
7686 7769 -11377 0
7686 7771 -11379 0
7686 7773 -11381 0
7686 7775 -11383 0
7686 7777 -11385 0
7686 7779 -11387 0
7686 7781 -11389 0
7688 -11373 0
7688 7766 -11375 0
7688 7767 -11377 0
7688 7769 -11379 0
7688 7771 -11381 0
7688 7773 -11383 0
7688 7775 -11385 0
7688 7777 -11387 0
7688 7779 -11389 0
7688 7781 -11391 0
7690 -11375 0
7690 7766 -11377 0
7690 7767 -11379 0
7690 7769 -11381 0
7690 7771 -11383 0
7690 7773 -11385 0
7690 7775 -11387 0
7690 7777 -11389 0
7690 7779 -11391 0
7690 7781 -11393 0
7692 -11377 0
7692 7766 -11379 0
7692 7767 -11381 0
7692 7769 -11383 0
7692 7771 -11385 0
7692 7773 -11387 0
7692 7775 -11389 0
7692 7777 -11391 0
7692 7779 -11393 0
7692 7781 -11395 0
7694 -11379 0
7694 7766 -11381 0
7694 7767 -11383 0
7694 7769 -11385 0
7694 7771 -11387 0
7694 7773 -11389 0
7694 7775 -11391 0
7694 7777 -11393 0
7694 7779 -11395 0
7694 7781 -11397 0
7696 -11381 0
7696 7766 -11383 0
7696 7767 -11385 0
7696 7769 -11387 0
7696 7771 -11389 0
7696 7773 -11391 0
7696 7775 -11393 0
7696 7777 -11395 0
7696 7779 -11397 0
7696 7781 -11399 0
c (0<=(aux101 + aux106 - aux446))
-7781 11399 0
-7779 11397 0
-7777 11395 0
-7775 11393 0
-7773 11391 0
-7771 11389 0
-7769 11387 0
-7767 11385 0
-7766 11383 0
-7696 11399 0
-7696 -7781 11397 0
-7696 -7779 11395 0
-7696 -7777 11393 0
-7696 -7775 11391 0
-7696 -7773 11389 0
-7696 -7771 11387 0
-7696 -7769 11385 0
-7696 -7767 11383 0
-7696 -7766 11381 0
-7694 11397 0
-7694 -7781 11395 0
-7694 -7779 11393 0
-7694 -7777 11391 0
-7694 -7775 11389 0
-7694 -7773 11387 0
-7694 -7771 11385 0
-7694 -7769 11383 0
-7694 -7767 11381 0
-7694 -7766 11379 0
-7692 11395 0
-7692 -7781 11393 0
-7692 -7779 11391 0
-7692 -7777 11389 0
-7692 -7775 11387 0
-7692 -7773 11385 0
-7692 -7771 11383 0
-7692 -7769 11381 0
-7692 -7767 11379 0
-7692 -7766 11377 0
-7690 11393 0
-7690 -7781 11391 0
-7690 -7779 11389 0
-7690 -7777 11387 0
-7690 -7775 11385 0
-7690 -7773 11383 0
-7690 -7771 11381 0
-7690 -7769 11379 0
-7690 -7767 11377 0
-7690 -7766 11375 0
-7688 11391 0
-7688 -7781 11389 0
-7688 -7779 11387 0
-7688 -7777 11385 0
-7688 -7775 11383 0
-7688 -7773 11381 0
-7688 -7771 11379 0
-7688 -7769 11377 0
-7688 -7767 11375 0
-7688 -7766 11373 0
-7686 11389 0
-7686 -7781 11387 0
-7686 -7779 11385 0
-7686 -7777 11383 0
-7686 -7775 11381 0
-7686 -7773 11379 0
-7686 -7771 11377 0
-7686 -7769 11375 0
-7686 -7767 11373 0
-7686 -7766 11371 0
-7684 11387 0
-7684 -7781 11385 0
-7684 -7779 11383 0
-7684 -7777 11381 0
-7684 -7775 11379 0
-7684 -7773 11377 0
-7684 -7771 11375 0
-7684 -7769 11373 0
-7684 -7767 11371 0
-7684 -7766 11369 0
-7682 11385 0
-7682 -7781 11383 0
-7682 -7779 11381 0
-7682 -7777 11379 0
-7682 -7775 11377 0
-7682 -7773 11375 0
-7682 -7771 11373 0
-7682 -7769 11371 0
-7682 -7767 11369 0
-7682 -7766 11367 0
-7681 11383 0
-7681 -7781 11381 0
-7681 -7779 11379 0
-7681 -7777 11377 0
-7681 -7775 11375 0
-7681 -7773 11373 0
-7681 -7771 11371 0
-7681 -7769 11369 0
-7681 -7767 11367 0
-7681 -7766 11366 0
c ((aux104 + aux105 - aux447)<=0)
7749 -11401 0
7750 -11402 0
7752 -11404 0
7754 -11406 0
7756 -11408 0
7758 -11410 0
7760 -11412 0
7762 -11414 0
7764 -11416 0
7732 -11401 0
7732 7749 -11402 0
7732 7750 -11404 0
7732 7752 -11406 0
7732 7754 -11408 0
7732 7756 -11410 0
7732 7758 -11412 0
7732 7760 -11414 0
7732 7762 -11416 0
7732 7764 -11418 0
7733 -11402 0
7733 7749 -11404 0
7733 7750 -11406 0
7733 7752 -11408 0
7733 7754 -11410 0
7733 7756 -11412 0
7733 7758 -11414 0
7733 7760 -11416 0
7733 7762 -11418 0
7733 7764 -11420 0
7735 -11404 0
7735 7749 -11406 0
7735 7750 -11408 0
7735 7752 -11410 0
7735 7754 -11412 0
7735 7756 -11414 0
7735 7758 -11416 0
7735 7760 -11418 0
7735 7762 -11420 0
7735 7764 -11422 0
7737 -11406 0
7737 7749 -11408 0
7737 7750 -11410 0
7737 7752 -11412 0
7737 7754 -11414 0
7737 7756 -11416 0
7737 7758 -11418 0
7737 7760 -11420 0
7737 7762 -11422 0
7737 7764 -11424 0
7739 -11408 0
7739 7749 -11410 0
7739 7750 -11412 0
7739 7752 -11414 0
7739 7754 -11416 0
7739 7756 -11418 0
7739 7758 -11420 0
7739 7760 -11422 0
7739 7762 -11424 0
7739 7764 -11426 0
7741 -11410 0
7741 7749 -11412 0
7741 7750 -11414 0
7741 7752 -11416 0
7741 7754 -11418 0
7741 7756 -11420 0
7741 7758 -11422 0
7741 7760 -11424 0
7741 7762 -11426 0
7741 7764 -11428 0
7743 -11412 0
7743 7749 -11414 0
7743 7750 -11416 0
7743 7752 -11418 0
7743 7754 -11420 0
7743 7756 -11422 0
7743 7758 -11424 0
7743 7760 -11426 0
7743 7762 -11428 0
7743 7764 -11430 0
7745 -11414 0
7745 7749 -11416 0
7745 7750 -11418 0
7745 7752 -11420 0
7745 7754 -11422 0
7745 7756 -11424 0
7745 7758 -11426 0
7745 7760 -11428 0
7745 7762 -11430 0
7745 7764 -11432 0
7747 -11416 0
7747 7749 -11418 0
7747 7750 -11420 0
7747 7752 -11422 0
7747 7754 -11424 0
7747 7756 -11426 0
7747 7758 -11428 0
7747 7760 -11430 0
7747 7762 -11432 0
7747 7764 -11434 0
c (0<=(aux104 + aux105 - aux447))
-7764 11434 0
-7762 11432 0
-7760 11430 0
-7758 11428 0
-7756 11426 0
-7754 11424 0
-7752 11422 0
-7750 11420 0
-7749 11418 0
-7747 11434 0
-7747 -7764 11432 0
-7747 -7762 11430 0
-7747 -7760 11428 0
-7747 -7758 11426 0
-7747 -7756 11424 0
-7747 -7754 11422 0
-7747 -7752 11420 0
-7747 -7750 11418 0
-7747 -7749 11416 0
-7745 11432 0
-7745 -7764 11430 0
-7745 -7762 11428 0
-7745 -7760 11426 0
-7745 -7758 11424 0
-7745 -7756 11422 0
-7745 -7754 11420 0
-7745 -7752 11418 0
-7745 -7750 11416 0
-7745 -7749 11414 0
-7743 11430 0
-7743 -7764 11428 0
-7743 -7762 11426 0
-7743 -7760 11424 0
-7743 -7758 11422 0
-7743 -7756 11420 0
-7743 -7754 11418 0
-7743 -7752 11416 0
-7743 -7750 11414 0
-7743 -7749 11412 0
-7741 11428 0
-7741 -7764 11426 0
-7741 -7762 11424 0
-7741 -7760 11422 0
-7741 -7758 11420 0
-7741 -7756 11418 0
-7741 -7754 11416 0
-7741 -7752 11414 0
-7741 -7750 11412 0
-7741 -7749 11410 0
-7739 11426 0
-7739 -7764 11424 0
-7739 -7762 11422 0
-7739 -7760 11420 0
-7739 -7758 11418 0
-7739 -7756 11416 0
-7739 -7754 11414 0
-7739 -7752 11412 0
-7739 -7750 11410 0
-7739 -7749 11408 0
-7737 11424 0
-7737 -7764 11422 0
-7737 -7762 11420 0
-7737 -7760 11418 0
-7737 -7758 11416 0
-7737 -7756 11414 0
-7737 -7754 11412 0
-7737 -7752 11410 0
-7737 -7750 11408 0
-7737 -7749 11406 0
-7735 11422 0
-7735 -7764 11420 0
-7735 -7762 11418 0
-7735 -7760 11416 0
-7735 -7758 11414 0
-7735 -7756 11412 0
-7735 -7754 11410 0
-7735 -7752 11408 0
-7735 -7750 11406 0
-7735 -7749 11404 0
-7733 11420 0
-7733 -7764 11418 0
-7733 -7762 11416 0
-7733 -7760 11414 0
-7733 -7758 11412 0
-7733 -7756 11410 0
-7733 -7754 11408 0
-7733 -7752 11406 0
-7733 -7750 11404 0
-7733 -7749 11402 0
-7732 11418 0
-7732 -7764 11416 0
-7732 -7762 11414 0
-7732 -7760 11412 0
-7732 -7758 11410 0
-7732 -7756 11408 0
-7732 -7754 11406 0
-7732 -7752 11404 0
-7732 -7750 11402 0
-7732 -7749 11401 0
c ((aux102 + aux444 - aux448)<=0)
11298 -11436 0
11299 -11437 0
11301 -11439 0
11303 -11441 0
11305 -11443 0
11307 -11445 0
11309 -11447 0
11311 -11449 0
11313 -11451 0
11315 -11453 0
11317 -11455 0
11319 -11457 0
11321 -11459 0
11323 -11461 0
11325 -11463 0
11327 -11465 0
11329 -11467 0
7698 -11436 0
7698 11298 -11437 0
7698 11299 -11439 0
7698 11301 -11441 0
7698 11303 -11443 0
7698 11305 -11445 0
7698 11307 -11447 0
7698 11309 -11449 0
7698 11311 -11451 0
7698 11313 -11453 0
7698 11315 -11455 0
7698 11317 -11457 0
7698 11319 -11459 0
7698 11321 -11461 0
7698 11323 -11463 0
7698 11325 -11465 0
7698 11327 -11467 0
7698 11329 -11469 0
7699 -11437 0
7699 11298 -11439 0
7699 11299 -11441 0
7699 11301 -11443 0
7699 11303 -11445 0
7699 11305 -11447 0
7699 11307 -11449 0
7699 11309 -11451 0
7699 11311 -11453 0
7699 11313 -11455 0
7699 11315 -11457 0
7699 11317 -11459 0
7699 11319 -11461 0
7699 11321 -11463 0
7699 11323 -11465 0
7699 11325 -11467 0
7699 11327 -11469 0
7699 11329 -11471 0
7701 -11439 0
7701 11298 -11441 0
7701 11299 -11443 0
7701 11301 -11445 0
7701 11303 -11447 0
7701 11305 -11449 0
7701 11307 -11451 0
7701 11309 -11453 0
7701 11311 -11455 0
7701 11313 -11457 0
7701 11315 -11459 0
7701 11317 -11461 0
7701 11319 -11463 0
7701 11321 -11465 0
7701 11323 -11467 0
7701 11325 -11469 0
7701 11327 -11471 0
7701 11329 -11473 0
7703 -11441 0
7703 11298 -11443 0
7703 11299 -11445 0
7703 11301 -11447 0
7703 11303 -11449 0
7703 11305 -11451 0
7703 11307 -11453 0
7703 11309 -11455 0
7703 11311 -11457 0
7703 11313 -11459 0
7703 11315 -11461 0
7703 11317 -11463 0
7703 11319 -11465 0
7703 11321 -11467 0
7703 11323 -11469 0
7703 11325 -11471 0
7703 11327 -11473 0
7703 11329 -11475 0
7705 -11443 0
7705 11298 -11445 0
7705 11299 -11447 0
7705 11301 -11449 0
7705 11303 -11451 0
7705 11305 -11453 0
7705 11307 -11455 0
7705 11309 -11457 0
7705 11311 -11459 0
7705 11313 -11461 0
7705 11315 -11463 0
7705 11317 -11465 0
7705 11319 -11467 0
7705 11321 -11469 0
7705 11323 -11471 0
7705 11325 -11473 0
7705 11327 -11475 0
7705 11329 -11477 0
7707 -11445 0
7707 11298 -11447 0
7707 11299 -11449 0
7707 11301 -11451 0
7707 11303 -11453 0
7707 11305 -11455 0
7707 11307 -11457 0
7707 11309 -11459 0
7707 11311 -11461 0
7707 11313 -11463 0
7707 11315 -11465 0
7707 11317 -11467 0
7707 11319 -11469 0
7707 11321 -11471 0
7707 11323 -11473 0
7707 11325 -11475 0
7707 11327 -11477 0
7707 11329 -11479 0
7709 -11447 0
7709 11298 -11449 0
7709 11299 -11451 0
7709 11301 -11453 0
7709 11303 -11455 0
7709 11305 -11457 0
7709 11307 -11459 0
7709 11309 -11461 0
7709 11311 -11463 0
7709 11313 -11465 0
7709 11315 -11467 0
7709 11317 -11469 0
7709 11319 -11471 0
7709 11321 -11473 0
7709 11323 -11475 0
7709 11325 -11477 0
7709 11327 -11479 0
7709 11329 -11481 0
7711 -11449 0
7711 11298 -11451 0
7711 11299 -11453 0
7711 11301 -11455 0
7711 11303 -11457 0
7711 11305 -11459 0
7711 11307 -11461 0
7711 11309 -11463 0
7711 11311 -11465 0
7711 11313 -11467 0
7711 11315 -11469 0
7711 11317 -11471 0
7711 11319 -11473 0
7711 11321 -11475 0
7711 11323 -11477 0
7711 11325 -11479 0
7711 11327 -11481 0
7711 11329 -11483 0
7713 -11451 0
7713 11298 -11453 0
7713 11299 -11455 0
7713 11301 -11457 0
7713 11303 -11459 0
7713 11305 -11461 0
7713 11307 -11463 0
7713 11309 -11465 0
7713 11311 -11467 0
7713 11313 -11469 0
7713 11315 -11471 0
7713 11317 -11473 0
7713 11319 -11475 0
7713 11321 -11477 0
7713 11323 -11479 0
7713 11325 -11481 0
7713 11327 -11483 0
7713 11329 -11485 0
c (0<=(aux102 + aux444 - aux448))
-11329 11485 0
-11327 11483 0
-11325 11481 0
-11323 11479 0
-11321 11477 0
-11319 11475 0
-11317 11473 0
-11315 11471 0
-11313 11469 0
-11311 11467 0
-11309 11465 0
-11307 11463 0
-11305 11461 0
-11303 11459 0
-11301 11457 0
-11299 11455 0
-11298 11453 0
-7713 11485 0
-7713 -11329 11483 0
-7713 -11327 11481 0
-7713 -11325 11479 0
-7713 -11323 11477 0
-7713 -11321 11475 0
-7713 -11319 11473 0
-7713 -11317 11471 0
-7713 -11315 11469 0
-7713 -11313 11467 0
-7713 -11311 11465 0
-7713 -11309 11463 0
-7713 -11307 11461 0
-7713 -11305 11459 0
-7713 -11303 11457 0
-7713 -11301 11455 0
-7713 -11299 11453 0
-7713 -11298 11451 0
-7711 11483 0
-7711 -11329 11481 0
-7711 -11327 11479 0
-7711 -11325 11477 0
-7711 -11323 11475 0
-7711 -11321 11473 0
-7711 -11319 11471 0
-7711 -11317 11469 0
-7711 -11315 11467 0
-7711 -11313 11465 0
-7711 -11311 11463 0
-7711 -11309 11461 0
-7711 -11307 11459 0
-7711 -11305 11457 0
-7711 -11303 11455 0
-7711 -11301 11453 0
-7711 -11299 11451 0
-7711 -11298 11449 0
-7709 11481 0
-7709 -11329 11479 0
-7709 -11327 11477 0
-7709 -11325 11475 0
-7709 -11323 11473 0
-7709 -11321 11471 0
-7709 -11319 11469 0
-7709 -11317 11467 0
-7709 -11315 11465 0
-7709 -11313 11463 0
-7709 -11311 11461 0
-7709 -11309 11459 0
-7709 -11307 11457 0
-7709 -11305 11455 0
-7709 -11303 11453 0
-7709 -11301 11451 0
-7709 -11299 11449 0
-7709 -11298 11447 0
-7707 11479 0
-7707 -11329 11477 0
-7707 -11327 11475 0
-7707 -11325 11473 0
-7707 -11323 11471 0
-7707 -11321 11469 0
-7707 -11319 11467 0
-7707 -11317 11465 0
-7707 -11315 11463 0
-7707 -11313 11461 0
-7707 -11311 11459 0
-7707 -11309 11457 0
-7707 -11307 11455 0
-7707 -11305 11453 0
-7707 -11303 11451 0
-7707 -11301 11449 0
-7707 -11299 11447 0
-7707 -11298 11445 0
-7705 11477 0
-7705 -11329 11475 0
-7705 -11327 11473 0
-7705 -11325 11471 0
-7705 -11323 11469 0
-7705 -11321 11467 0
-7705 -11319 11465 0
-7705 -11317 11463 0
-7705 -11315 11461 0
-7705 -11313 11459 0
-7705 -11311 11457 0
-7705 -11309 11455 0
-7705 -11307 11453 0
-7705 -11305 11451 0
-7705 -11303 11449 0
-7705 -11301 11447 0
-7705 -11299 11445 0
-7705 -11298 11443 0
-7703 11475 0
-7703 -11329 11473 0
-7703 -11327 11471 0
-7703 -11325 11469 0
-7703 -11323 11467 0
-7703 -11321 11465 0
-7703 -11319 11463 0
-7703 -11317 11461 0
-7703 -11315 11459 0
-7703 -11313 11457 0
-7703 -11311 11455 0
-7703 -11309 11453 0
-7703 -11307 11451 0
-7703 -11305 11449 0
-7703 -11303 11447 0
-7703 -11301 11445 0
-7703 -11299 11443 0
-7703 -11298 11441 0
-7701 11473 0
-7701 -11329 11471 0
-7701 -11327 11469 0
-7701 -11325 11467 0
-7701 -11323 11465 0
-7701 -11321 11463 0
-7701 -11319 11461 0
-7701 -11317 11459 0
-7701 -11315 11457 0
-7701 -11313 11455 0
-7701 -11311 11453 0
-7701 -11309 11451 0
-7701 -11307 11449 0
-7701 -11305 11447 0
-7701 -11303 11445 0
-7701 -11301 11443 0
-7701 -11299 11441 0
-7701 -11298 11439 0
-7699 11471 0
-7699 -11329 11469 0
-7699 -11327 11467 0
-7699 -11325 11465 0
-7699 -11323 11463 0
-7699 -11321 11461 0
-7699 -11319 11459 0
-7699 -11317 11457 0
-7699 -11315 11455 0
-7699 -11313 11453 0
-7699 -11311 11451 0
-7699 -11309 11449 0
-7699 -11307 11447 0
-7699 -11305 11445 0
-7699 -11303 11443 0
-7699 -11301 11441 0
-7699 -11299 11439 0
-7699 -11298 11437 0
-7698 11469 0
-7698 -11329 11467 0
-7698 -11327 11465 0
-7698 -11325 11463 0
-7698 -11323 11461 0
-7698 -11321 11459 0
-7698 -11319 11457 0
-7698 -11317 11455 0
-7698 -11315 11453 0
-7698 -11313 11451 0
-7698 -11311 11449 0
-7698 -11309 11447 0
-7698 -11307 11445 0
-7698 -11305 11443 0
-7698 -11303 11441 0
-7698 -11301 11439 0
-7698 -11299 11437 0
-7698 -11298 11436 0
c ((aux446 + aux447 - aux449)<=0)
11401 -11487 0
11402 -11488 0
11404 -11490 0
11406 -11492 0
11408 -11494 0
11410 -11496 0
11412 -11498 0
11414 -11500 0
11416 -11502 0
11418 -11504 0
11420 -11506 0
11422 -11508 0
11424 -11510 0
11426 -11512 0
11428 -11514 0
11430 -11516 0
11432 -11518 0
11434 -11520 0
11366 -11487 0
11366 11401 -11488 0
11366 11402 -11490 0
11366 11404 -11492 0
11366 11406 -11494 0
11366 11408 -11496 0
11366 11410 -11498 0
11366 11412 -11500 0
11366 11414 -11502 0
11366 11416 -11504 0
11366 11418 -11506 0
11366 11420 -11508 0
11366 11422 -11510 0
11366 11424 -11512 0
11366 11426 -11514 0
11366 11428 -11516 0
11366 11430 -11518 0
11366 11432 -11520 0
11366 11434 -11522 0
11367 -11488 0
11367 11401 -11490 0
11367 11402 -11492 0
11367 11404 -11494 0
11367 11406 -11496 0
11367 11408 -11498 0
11367 11410 -11500 0
11367 11412 -11502 0
11367 11414 -11504 0
11367 11416 -11506 0
11367 11418 -11508 0
11367 11420 -11510 0
11367 11422 -11512 0
11367 11424 -11514 0
11367 11426 -11516 0
11367 11428 -11518 0
11367 11430 -11520 0
11367 11432 -11522 0
11367 11434 -11524 0
11369 -11490 0
11369 11401 -11492 0
11369 11402 -11494 0
11369 11404 -11496 0
11369 11406 -11498 0
11369 11408 -11500 0
11369 11410 -11502 0
11369 11412 -11504 0
11369 11414 -11506 0
11369 11416 -11508 0
11369 11418 -11510 0
11369 11420 -11512 0
11369 11422 -11514 0
11369 11424 -11516 0
11369 11426 -11518 0
11369 11428 -11520 0
11369 11430 -11522 0
11369 11432 -11524 0
11369 11434 -11526 0
11371 -11492 0
11371 11401 -11494 0
11371 11402 -11496 0
11371 11404 -11498 0
11371 11406 -11500 0
11371 11408 -11502 0
11371 11410 -11504 0
11371 11412 -11506 0
11371 11414 -11508 0
11371 11416 -11510 0
11371 11418 -11512 0
11371 11420 -11514 0
11371 11422 -11516 0
11371 11424 -11518 0
11371 11426 -11520 0
11371 11428 -11522 0
11371 11430 -11524 0
11371 11432 -11526 0
11371 11434 -11528 0
11373 -11494 0
11373 11401 -11496 0
11373 11402 -11498 0
11373 11404 -11500 0
11373 11406 -11502 0
11373 11408 -11504 0
11373 11410 -11506 0
11373 11412 -11508 0
11373 11414 -11510 0
11373 11416 -11512 0
11373 11418 -11514 0
11373 11420 -11516 0
11373 11422 -11518 0
11373 11424 -11520 0
11373 11426 -11522 0
11373 11428 -11524 0
11373 11430 -11526 0
11373 11432 -11528 0
11373 11434 -11530 0
11375 -11496 0
11375 11401 -11498 0
11375 11402 -11500 0
11375 11404 -11502 0
11375 11406 -11504 0
11375 11408 -11506 0
11375 11410 -11508 0
11375 11412 -11510 0
11375 11414 -11512 0
11375 11416 -11514 0
11375 11418 -11516 0
11375 11420 -11518 0
11375 11422 -11520 0
11375 11424 -11522 0
11375 11426 -11524 0
11375 11428 -11526 0
11375 11430 -11528 0
11375 11432 -11530 0
11375 11434 -11532 0
11377 -11498 0
11377 11401 -11500 0
11377 11402 -11502 0
11377 11404 -11504 0
11377 11406 -11506 0
11377 11408 -11508 0
11377 11410 -11510 0
11377 11412 -11512 0
11377 11414 -11514 0
11377 11416 -11516 0
11377 11418 -11518 0
11377 11420 -11520 0
11377 11422 -11522 0
11377 11424 -11524 0
11377 11426 -11526 0
11377 11428 -11528 0
11377 11430 -11530 0
11377 11432 -11532 0
11377 11434 -11534 0
11379 -11500 0
11379 11401 -11502 0
11379 11402 -11504 0
11379 11404 -11506 0
11379 11406 -11508 0
11379 11408 -11510 0
11379 11410 -11512 0
11379 11412 -11514 0
11379 11414 -11516 0
11379 11416 -11518 0
11379 11418 -11520 0
11379 11420 -11522 0
11379 11422 -11524 0
11379 11424 -11526 0
11379 11426 -11528 0
11379 11428 -11530 0
11379 11430 -11532 0
11379 11432 -11534 0
11379 11434 -11536 0
11381 -11502 0
11381 11401 -11504 0
11381 11402 -11506 0
11381 11404 -11508 0
11381 11406 -11510 0
11381 11408 -11512 0
11381 11410 -11514 0
11381 11412 -11516 0
11381 11414 -11518 0
11381 11416 -11520 0
11381 11418 -11522 0
11381 11420 -11524 0
11381 11422 -11526 0
11381 11424 -11528 0
11381 11426 -11530 0
11381 11428 -11532 0
11381 11430 -11534 0
11381 11432 -11536 0
11381 11434 -11538 0
11383 -11504 0
11383 11401 -11506 0
11383 11402 -11508 0
11383 11404 -11510 0
11383 11406 -11512 0
11383 11408 -11514 0
11383 11410 -11516 0
11383 11412 -11518 0
11383 11414 -11520 0
11383 11416 -11522 0
11383 11418 -11524 0
11383 11420 -11526 0
11383 11422 -11528 0
11383 11424 -11530 0
11383 11426 -11532 0
11383 11428 -11534 0
11383 11430 -11536 0
11383 11432 -11538 0
11383 11434 -11540 0
11385 -11506 0
11385 11401 -11508 0
11385 11402 -11510 0
11385 11404 -11512 0
11385 11406 -11514 0
11385 11408 -11516 0
11385 11410 -11518 0
11385 11412 -11520 0
11385 11414 -11522 0
11385 11416 -11524 0
11385 11418 -11526 0
11385 11420 -11528 0
11385 11422 -11530 0
11385 11424 -11532 0
11385 11426 -11534 0
11385 11428 -11536 0
11385 11430 -11538 0
11385 11432 -11540 0
11385 11434 -11542 0
11387 -11508 0
11387 11401 -11510 0
11387 11402 -11512 0
11387 11404 -11514 0
11387 11406 -11516 0
11387 11408 -11518 0
11387 11410 -11520 0
11387 11412 -11522 0
11387 11414 -11524 0
11387 11416 -11526 0
11387 11418 -11528 0
11387 11420 -11530 0
11387 11422 -11532 0
11387 11424 -11534 0
11387 11426 -11536 0
11387 11428 -11538 0
11387 11430 -11540 0
11387 11432 -11542 0
11387 11434 -11544 0
11389 -11510 0
11389 11401 -11512 0
11389 11402 -11514 0
11389 11404 -11516 0
11389 11406 -11518 0
11389 11408 -11520 0
11389 11410 -11522 0
11389 11412 -11524 0
11389 11414 -11526 0
11389 11416 -11528 0
11389 11418 -11530 0
11389 11420 -11532 0
11389 11422 -11534 0
11389 11424 -11536 0
11389 11426 -11538 0
11389 11428 -11540 0
11389 11430 -11542 0
11389 11432 -11544 0
11389 11434 -11546 0
11391 -11512 0
11391 11401 -11514 0
11391 11402 -11516 0
11391 11404 -11518 0
11391 11406 -11520 0
11391 11408 -11522 0
11391 11410 -11524 0
11391 11412 -11526 0
11391 11414 -11528 0
11391 11416 -11530 0
11391 11418 -11532 0
11391 11420 -11534 0
11391 11422 -11536 0
11391 11424 -11538 0
11391 11426 -11540 0
11391 11428 -11542 0
11391 11430 -11544 0
11391 11432 -11546 0
11391 11434 -11548 0
11393 -11514 0
11393 11401 -11516 0
11393 11402 -11518 0
11393 11404 -11520 0
11393 11406 -11522 0
11393 11408 -11524 0
11393 11410 -11526 0
11393 11412 -11528 0
11393 11414 -11530 0
11393 11416 -11532 0
11393 11418 -11534 0
11393 11420 -11536 0
11393 11422 -11538 0
11393 11424 -11540 0
11393 11426 -11542 0
11393 11428 -11544 0
11393 11430 -11546 0
11393 11432 -11548 0
11393 11434 -11550 0
11395 -11516 0
11395 11401 -11518 0
11395 11402 -11520 0
11395 11404 -11522 0
11395 11406 -11524 0
11395 11408 -11526 0
11395 11410 -11528 0
11395 11412 -11530 0
11395 11414 -11532 0
11395 11416 -11534 0
11395 11418 -11536 0
11395 11420 -11538 0
11395 11422 -11540 0
11395 11424 -11542 0
11395 11426 -11544 0
11395 11428 -11546 0
11395 11430 -11548 0
11395 11432 -11550 0
11395 11434 -11552 0
11397 -11518 0
11397 11401 -11520 0
11397 11402 -11522 0
11397 11404 -11524 0
11397 11406 -11526 0
11397 11408 -11528 0
11397 11410 -11530 0
11397 11412 -11532 0
11397 11414 -11534 0
11397 11416 -11536 0
11397 11418 -11538 0
11397 11420 -11540 0
11397 11422 -11542 0
11397 11424 -11544 0
11397 11426 -11546 0
11397 11428 -11548 0
11397 11430 -11550 0
11397 11432 -11552 0
11397 11434 -11554 0
11399 -11520 0
11399 11401 -11522 0
11399 11402 -11524 0
11399 11404 -11526 0
11399 11406 -11528 0
11399 11408 -11530 0
11399 11410 -11532 0
11399 11412 -11534 0
11399 11414 -11536 0
11399 11416 -11538 0
11399 11418 -11540 0
11399 11420 -11542 0
11399 11422 -11544 0
11399 11424 -11546 0
11399 11426 -11548 0
11399 11428 -11550 0
11399 11430 -11552 0
11399 11432 -11554 0
11399 11434 -11556 0
c (0<=(aux446 + aux447 - aux449))
-11434 11556 0
-11432 11554 0
-11430 11552 0
-11428 11550 0
-11426 11548 0
-11424 11546 0
-11422 11544 0
-11420 11542 0
-11418 11540 0
-11416 11538 0
-11414 11536 0
-11412 11534 0
-11410 11532 0
-11408 11530 0
-11406 11528 0
-11404 11526 0
-11402 11524 0
-11401 11522 0
-11399 11556 0
-11399 -11434 11554 0
-11399 -11432 11552 0
-11399 -11430 11550 0
-11399 -11428 11548 0
-11399 -11426 11546 0
-11399 -11424 11544 0
-11399 -11422 11542 0
-11399 -11420 11540 0
-11399 -11418 11538 0
-11399 -11416 11536 0
-11399 -11414 11534 0
-11399 -11412 11532 0
-11399 -11410 11530 0
-11399 -11408 11528 0
-11399 -11406 11526 0
-11399 -11404 11524 0
-11399 -11402 11522 0
-11399 -11401 11520 0
-11397 11554 0
-11397 -11434 11552 0
-11397 -11432 11550 0
-11397 -11430 11548 0
-11397 -11428 11546 0
-11397 -11426 11544 0
-11397 -11424 11542 0
-11397 -11422 11540 0
-11397 -11420 11538 0
-11397 -11418 11536 0
-11397 -11416 11534 0
-11397 -11414 11532 0
-11397 -11412 11530 0
-11397 -11410 11528 0
-11397 -11408 11526 0
-11397 -11406 11524 0
-11397 -11404 11522 0
-11397 -11402 11520 0
-11397 -11401 11518 0
-11395 11552 0
-11395 -11434 11550 0
-11395 -11432 11548 0
-11395 -11430 11546 0
-11395 -11428 11544 0
-11395 -11426 11542 0
-11395 -11424 11540 0
-11395 -11422 11538 0
-11395 -11420 11536 0
-11395 -11418 11534 0
-11395 -11416 11532 0
-11395 -11414 11530 0
-11395 -11412 11528 0
-11395 -11410 11526 0
-11395 -11408 11524 0
-11395 -11406 11522 0
-11395 -11404 11520 0
-11395 -11402 11518 0
-11395 -11401 11516 0
-11393 11550 0
-11393 -11434 11548 0
-11393 -11432 11546 0
-11393 -11430 11544 0
-11393 -11428 11542 0
-11393 -11426 11540 0
-11393 -11424 11538 0
-11393 -11422 11536 0
-11393 -11420 11534 0
-11393 -11418 11532 0
-11393 -11416 11530 0
-11393 -11414 11528 0
-11393 -11412 11526 0
-11393 -11410 11524 0
-11393 -11408 11522 0
-11393 -11406 11520 0
-11393 -11404 11518 0
-11393 -11402 11516 0
-11393 -11401 11514 0
-11391 11548 0
-11391 -11434 11546 0
-11391 -11432 11544 0
-11391 -11430 11542 0
-11391 -11428 11540 0
-11391 -11426 11538 0
-11391 -11424 11536 0
-11391 -11422 11534 0
-11391 -11420 11532 0
-11391 -11418 11530 0
-11391 -11416 11528 0
-11391 -11414 11526 0
-11391 -11412 11524 0
-11391 -11410 11522 0
-11391 -11408 11520 0
-11391 -11406 11518 0
-11391 -11404 11516 0
-11391 -11402 11514 0
-11391 -11401 11512 0
-11389 11546 0
-11389 -11434 11544 0
-11389 -11432 11542 0
-11389 -11430 11540 0
-11389 -11428 11538 0
-11389 -11426 11536 0
-11389 -11424 11534 0
-11389 -11422 11532 0
-11389 -11420 11530 0
-11389 -11418 11528 0
-11389 -11416 11526 0
-11389 -11414 11524 0
-11389 -11412 11522 0
-11389 -11410 11520 0
-11389 -11408 11518 0
-11389 -11406 11516 0
-11389 -11404 11514 0
-11389 -11402 11512 0
-11389 -11401 11510 0
-11387 11544 0
-11387 -11434 11542 0
-11387 -11432 11540 0
-11387 -11430 11538 0
-11387 -11428 11536 0
-11387 -11426 11534 0
-11387 -11424 11532 0
-11387 -11422 11530 0
-11387 -11420 11528 0
-11387 -11418 11526 0
-11387 -11416 11524 0
-11387 -11414 11522 0
-11387 -11412 11520 0
-11387 -11410 11518 0
-11387 -11408 11516 0
-11387 -11406 11514 0
-11387 -11404 11512 0
-11387 -11402 11510 0
-11387 -11401 11508 0
-11385 11542 0
-11385 -11434 11540 0
-11385 -11432 11538 0
-11385 -11430 11536 0
-11385 -11428 11534 0
-11385 -11426 11532 0
-11385 -11424 11530 0
-11385 -11422 11528 0
-11385 -11420 11526 0
-11385 -11418 11524 0
-11385 -11416 11522 0
-11385 -11414 11520 0
-11385 -11412 11518 0
-11385 -11410 11516 0
-11385 -11408 11514 0
-11385 -11406 11512 0
-11385 -11404 11510 0
-11385 -11402 11508 0
-11385 -11401 11506 0
-11383 11540 0
-11383 -11434 11538 0
-11383 -11432 11536 0
-11383 -11430 11534 0
-11383 -11428 11532 0
-11383 -11426 11530 0
-11383 -11424 11528 0
-11383 -11422 11526 0
-11383 -11420 11524 0
-11383 -11418 11522 0
-11383 -11416 11520 0
-11383 -11414 11518 0
-11383 -11412 11516 0
-11383 -11410 11514 0
-11383 -11408 11512 0
-11383 -11406 11510 0
-11383 -11404 11508 0
-11383 -11402 11506 0
-11383 -11401 11504 0
-11381 11538 0
-11381 -11434 11536 0
-11381 -11432 11534 0
-11381 -11430 11532 0
-11381 -11428 11530 0
-11381 -11426 11528 0
-11381 -11424 11526 0
-11381 -11422 11524 0
-11381 -11420 11522 0
-11381 -11418 11520 0
-11381 -11416 11518 0
-11381 -11414 11516 0
-11381 -11412 11514 0
-11381 -11410 11512 0
-11381 -11408 11510 0
-11381 -11406 11508 0
-11381 -11404 11506 0
-11381 -11402 11504 0
-11381 -11401 11502 0
-11379 11536 0
-11379 -11434 11534 0
-11379 -11432 11532 0
-11379 -11430 11530 0
-11379 -11428 11528 0
-11379 -11426 11526 0
-11379 -11424 11524 0
-11379 -11422 11522 0
-11379 -11420 11520 0
-11379 -11418 11518 0
-11379 -11416 11516 0
-11379 -11414 11514 0
-11379 -11412 11512 0
-11379 -11410 11510 0
-11379 -11408 11508 0
-11379 -11406 11506 0
-11379 -11404 11504 0
-11379 -11402 11502 0
-11379 -11401 11500 0
-11377 11534 0
-11377 -11434 11532 0
-11377 -11432 11530 0
-11377 -11430 11528 0
-11377 -11428 11526 0
-11377 -11426 11524 0
-11377 -11424 11522 0
-11377 -11422 11520 0
-11377 -11420 11518 0
-11377 -11418 11516 0
-11377 -11416 11514 0
-11377 -11414 11512 0
-11377 -11412 11510 0
-11377 -11410 11508 0
-11377 -11408 11506 0
-11377 -11406 11504 0
-11377 -11404 11502 0
-11377 -11402 11500 0
-11377 -11401 11498 0
-11375 11532 0
-11375 -11434 11530 0
-11375 -11432 11528 0
-11375 -11430 11526 0
-11375 -11428 11524 0
-11375 -11426 11522 0
-11375 -11424 11520 0
-11375 -11422 11518 0
-11375 -11420 11516 0
-11375 -11418 11514 0
-11375 -11416 11512 0
-11375 -11414 11510 0
-11375 -11412 11508 0
-11375 -11410 11506 0
-11375 -11408 11504 0
-11375 -11406 11502 0
-11375 -11404 11500 0
-11375 -11402 11498 0
-11375 -11401 11496 0
-11373 11530 0
-11373 -11434 11528 0
-11373 -11432 11526 0
-11373 -11430 11524 0
-11373 -11428 11522 0
-11373 -11426 11520 0
-11373 -11424 11518 0
-11373 -11422 11516 0
-11373 -11420 11514 0
-11373 -11418 11512 0
-11373 -11416 11510 0
-11373 -11414 11508 0
-11373 -11412 11506 0
-11373 -11410 11504 0
-11373 -11408 11502 0
-11373 -11406 11500 0
-11373 -11404 11498 0
-11373 -11402 11496 0
-11373 -11401 11494 0
-11371 11528 0
-11371 -11434 11526 0
-11371 -11432 11524 0
-11371 -11430 11522 0
-11371 -11428 11520 0
-11371 -11426 11518 0
-11371 -11424 11516 0
-11371 -11422 11514 0
-11371 -11420 11512 0
-11371 -11418 11510 0
-11371 -11416 11508 0
-11371 -11414 11506 0
-11371 -11412 11504 0
-11371 -11410 11502 0
-11371 -11408 11500 0
-11371 -11406 11498 0
-11371 -11404 11496 0
-11371 -11402 11494 0
-11371 -11401 11492 0
-11369 11526 0
-11369 -11434 11524 0
-11369 -11432 11522 0
-11369 -11430 11520 0
-11369 -11428 11518 0
-11369 -11426 11516 0
-11369 -11424 11514 0
-11369 -11422 11512 0
-11369 -11420 11510 0
-11369 -11418 11508 0
-11369 -11416 11506 0
-11369 -11414 11504 0
-11369 -11412 11502 0
-11369 -11410 11500 0
-11369 -11408 11498 0
-11369 -11406 11496 0
-11369 -11404 11494 0
-11369 -11402 11492 0
-11369 -11401 11490 0
-11367 11524 0
-11367 -11434 11522 0
-11367 -11432 11520 0
-11367 -11430 11518 0
-11367 -11428 11516 0
-11367 -11426 11514 0
-11367 -11424 11512 0
-11367 -11422 11510 0
-11367 -11420 11508 0
-11367 -11418 11506 0
-11367 -11416 11504 0
-11367 -11414 11502 0
-11367 -11412 11500 0
-11367 -11410 11498 0
-11367 -11408 11496 0
-11367 -11406 11494 0
-11367 -11404 11492 0
-11367 -11402 11490 0
-11367 -11401 11488 0
-11366 11522 0
-11366 -11434 11520 0
-11366 -11432 11518 0
-11366 -11430 11516 0
-11366 -11428 11514 0
-11366 -11426 11512 0
-11366 -11424 11510 0
-11366 -11422 11508 0
-11366 -11420 11506 0
-11366 -11418 11504 0
-11366 -11416 11502 0
-11366 -11414 11500 0
-11366 -11412 11498 0
-11366 -11410 11496 0
-11366 -11408 11494 0
-11366 -11406 11492 0
-11366 -11404 11490 0
-11366 -11402 11488 0
-11366 -11401 11487 0
c ((aux115 - aux450 + shift(variant_fields_00004_00002_00001, -1))<=0)
7903 -11558 0
7904 -11559 0
7906 -11561 0
7908 -11563 0
7910 -11565 0
7912 -11567 0
7914 -11569 0
7916 -11571 0
7918 -11573 0
4997 -11558 0
4997 7903 -11559 0
4997 7904 -11561 0
4997 7906 -11563 0
4997 7908 -11565 0
4997 7910 -11567 0
4997 7912 -11569 0
4997 7914 -11571 0
4997 7916 -11573 0
4997 7918 -11575 0
4998 -11559 0
4998 7903 -11561 0
4998 7904 -11563 0
4998 7906 -11565 0
4998 7908 -11567 0
4998 7910 -11569 0
4998 7912 -11571 0
4998 7914 -11573 0
4998 7916 -11575 0
4998 7918 -11577 0
5000 -11561 0
5000 7903 -11563 0
5000 7904 -11565 0
5000 7906 -11567 0
5000 7908 -11569 0
5000 7910 -11571 0
5000 7912 -11573 0
5000 7914 -11575 0
5000 7916 -11577 0
5000 7918 -11579 0
5002 -11563 0
5002 7903 -11565 0
5002 7904 -11567 0
5002 7906 -11569 0
5002 7908 -11571 0
5002 7910 -11573 0
5002 7912 -11575 0
5002 7914 -11577 0
5002 7916 -11579 0
5002 7918 -11581 0
5004 -11565 0
5004 7903 -11567 0
5004 7904 -11569 0
5004 7906 -11571 0
5004 7908 -11573 0
5004 7910 -11575 0
5004 7912 -11577 0
5004 7914 -11579 0
5004 7916 -11581 0
5004 7918 -11583 0
5006 -11567 0
5006 7903 -11569 0
5006 7904 -11571 0
5006 7906 -11573 0
5006 7908 -11575 0
5006 7910 -11577 0
5006 7912 -11579 0
5006 7914 -11581 0
5006 7916 -11583 0
5006 7918 -11585 0
5008 -11569 0
5008 7903 -11571 0
5008 7904 -11573 0
5008 7906 -11575 0
5008 7908 -11577 0
5008 7910 -11579 0
5008 7912 -11581 0
5008 7914 -11583 0
5008 7916 -11585 0
5008 7918 -11587 0
5010 -11571 0
5010 7903 -11573 0
5010 7904 -11575 0
5010 7906 -11577 0
5010 7908 -11579 0
5010 7910 -11581 0
5010 7912 -11583 0
5010 7914 -11585 0
5010 7916 -11587 0
5010 7918 -11589 0
c (0<=(aux115 - aux450 + shift(variant_fields_00004_00002_00001, -1)))
-7918 11589 0
-7916 11587 0
-7914 11585 0
-7912 11583 0
-7910 11581 0
-7908 11579 0
-7906 11577 0
-7904 11575 0
-7903 11573 0
-5010 11589 0
-5010 -7918 11587 0
-5010 -7916 11585 0
-5010 -7914 11583 0
-5010 -7912 11581 0
-5010 -7910 11579 0
-5010 -7908 11577 0
-5010 -7906 11575 0
-5010 -7904 11573 0
-5010 -7903 11571 0
-5008 11587 0
-5008 -7918 11585 0
-5008 -7916 11583 0
-5008 -7914 11581 0
-5008 -7912 11579 0
-5008 -7910 11577 0
-5008 -7908 11575 0
-5008 -7906 11573 0
-5008 -7904 11571 0
-5008 -7903 11569 0
-5006 11585 0
-5006 -7918 11583 0
-5006 -7916 11581 0
-5006 -7914 11579 0
-5006 -7912 11577 0
-5006 -7910 11575 0
-5006 -7908 11573 0
-5006 -7906 11571 0
-5006 -7904 11569 0
-5006 -7903 11567 0
-5004 11583 0
-5004 -7918 11581 0
-5004 -7916 11579 0
-5004 -7914 11577 0
-5004 -7912 11575 0
-5004 -7910 11573 0
-5004 -7908 11571 0
-5004 -7906 11569 0
-5004 -7904 11567 0
-5004 -7903 11565 0
-5002 11581 0
-5002 -7918 11579 0
-5002 -7916 11577 0
-5002 -7914 11575 0
-5002 -7912 11573 0
-5002 -7910 11571 0
-5002 -7908 11569 0
-5002 -7906 11567 0
-5002 -7904 11565 0
-5002 -7903 11563 0
-5000 11579 0
-5000 -7918 11577 0
-5000 -7916 11575 0
-5000 -7914 11573 0
-5000 -7912 11571 0
-5000 -7910 11569 0
-5000 -7908 11567 0
-5000 -7906 11565 0
-5000 -7904 11563 0
-5000 -7903 11561 0
-4998 11577 0
-4998 -7918 11575 0
-4998 -7916 11573 0
-4998 -7914 11571 0
-4998 -7912 11569 0
-4998 -7910 11567 0
-4998 -7908 11565 0
-4998 -7906 11563 0
-4998 -7904 11561 0
-4998 -7903 11559 0
-4997 11575 0
-4997 -7918 11573 0
-4997 -7916 11571 0
-4997 -7914 11569 0
-4997 -7912 11567 0
-4997 -7910 11565 0
-4997 -7908 11563 0
-4997 -7906 11561 0
-4997 -7904 11559 0
-4997 -7903 11558 0
c ((aux108 + aux114 - aux451)<=0)
7886 -11591 0
7887 -11592 0
7889 -11594 0
7891 -11596 0
7893 -11598 0
7895 -11600 0
7897 -11602 0
7899 -11604 0
7901 -11606 0
7784 -11591 0
7784 7886 -11592 0
7784 7887 -11594 0
7784 7889 -11596 0
7784 7891 -11598 0
7784 7893 -11600 0
7784 7895 -11602 0
7784 7897 -11604 0
7784 7899 -11606 0
7784 7901 -11608 0
7785 -11592 0
7785 7886 -11594 0
7785 7887 -11596 0
7785 7889 -11598 0
7785 7891 -11600 0
7785 7893 -11602 0
7785 7895 -11604 0
7785 7897 -11606 0
7785 7899 -11608 0
7785 7901 -11610 0
7787 -11594 0
7787 7886 -11596 0
7787 7887 -11598 0
7787 7889 -11600 0
7787 7891 -11602 0
7787 7893 -11604 0
7787 7895 -11606 0
7787 7897 -11608 0
7787 7899 -11610 0
7787 7901 -11612 0
7789 -11596 0
7789 7886 -11598 0
7789 7887 -11600 0
7789 7889 -11602 0
7789 7891 -11604 0
7789 7893 -11606 0
7789 7895 -11608 0
7789 7897 -11610 0
7789 7899 -11612 0
7789 7901 -11614 0
7791 -11598 0
7791 7886 -11600 0
7791 7887 -11602 0
7791 7889 -11604 0
7791 7891 -11606 0
7791 7893 -11608 0
7791 7895 -11610 0
7791 7897 -11612 0
7791 7899 -11614 0
7791 7901 -11616 0
7793 -11600 0
7793 7886 -11602 0
7793 7887 -11604 0
7793 7889 -11606 0
7793 7891 -11608 0
7793 7893 -11610 0
7793 7895 -11612 0
7793 7897 -11614 0
7793 7899 -11616 0
7793 7901 -11618 0
7795 -11602 0
7795 7886 -11604 0
7795 7887 -11606 0
7795 7889 -11608 0
7795 7891 -11610 0
7795 7893 -11612 0
7795 7895 -11614 0
7795 7897 -11616 0
7795 7899 -11618 0
7795 7901 -11620 0
7797 -11604 0
7797 7886 -11606 0
7797 7887 -11608 0
7797 7889 -11610 0
7797 7891 -11612 0
7797 7893 -11614 0
7797 7895 -11616 0
7797 7897 -11618 0
7797 7899 -11620 0
7797 7901 -11622 0
7799 -11606 0
7799 7886 -11608 0
7799 7887 -11610 0
7799 7889 -11612 0
7799 7891 -11614 0
7799 7893 -11616 0
7799 7895 -11618 0
7799 7897 -11620 0
7799 7899 -11622 0
7799 7901 -11624 0
c (0<=(aux108 + aux114 - aux451))
-7901 11624 0
-7899 11622 0
-7897 11620 0
-7895 11618 0
-7893 11616 0
-7891 11614 0
-7889 11612 0
-7887 11610 0
-7886 11608 0
-7799 11624 0
-7799 -7901 11622 0
-7799 -7899 11620 0
-7799 -7897 11618 0
-7799 -7895 11616 0
-7799 -7893 11614 0
-7799 -7891 11612 0
-7799 -7889 11610 0
-7799 -7887 11608 0
-7799 -7886 11606 0
-7797 11622 0
-7797 -7901 11620 0
-7797 -7899 11618 0
-7797 -7897 11616 0
-7797 -7895 11614 0
-7797 -7893 11612 0
-7797 -7891 11610 0
-7797 -7889 11608 0
-7797 -7887 11606 0
-7797 -7886 11604 0
-7795 11620 0
-7795 -7901 11618 0
-7795 -7899 11616 0
-7795 -7897 11614 0
-7795 -7895 11612 0
-7795 -7893 11610 0
-7795 -7891 11608 0
-7795 -7889 11606 0
-7795 -7887 11604 0
-7795 -7886 11602 0
-7793 11618 0
-7793 -7901 11616 0
-7793 -7899 11614 0
-7793 -7897 11612 0
-7793 -7895 11610 0
-7793 -7893 11608 0
-7793 -7891 11606 0
-7793 -7889 11604 0
-7793 -7887 11602 0
-7793 -7886 11600 0
-7791 11616 0
-7791 -7901 11614 0
-7791 -7899 11612 0
-7791 -7897 11610 0
-7791 -7895 11608 0
-7791 -7893 11606 0
-7791 -7891 11604 0
-7791 -7889 11602 0
-7791 -7887 11600 0
-7791 -7886 11598 0
-7789 11614 0
-7789 -7901 11612 0
-7789 -7899 11610 0
-7789 -7897 11608 0
-7789 -7895 11606 0
-7789 -7893 11604 0
-7789 -7891 11602 0
-7789 -7889 11600 0
-7789 -7887 11598 0
-7789 -7886 11596 0
-7787 11612 0
-7787 -7901 11610 0
-7787 -7899 11608 0
-7787 -7897 11606 0
-7787 -7895 11604 0
-7787 -7893 11602 0
-7787 -7891 11600 0
-7787 -7889 11598 0
-7787 -7887 11596 0
-7787 -7886 11594 0
-7785 11610 0
-7785 -7901 11608 0
-7785 -7899 11606 0
-7785 -7897 11604 0
-7785 -7895 11602 0
-7785 -7893 11600 0
-7785 -7891 11598 0
-7785 -7889 11596 0
-7785 -7887 11594 0
-7785 -7886 11592 0
-7784 11608 0
-7784 -7901 11606 0
-7784 -7899 11604 0
-7784 -7897 11602 0
-7784 -7895 11600 0
-7784 -7893 11598 0
-7784 -7891 11596 0
-7784 -7889 11594 0
-7784 -7887 11592 0
-7784 -7886 11591 0
c ((aux110 + aux113 - aux452)<=0)
7869 -11626 0
7870 -11627 0
7872 -11629 0
7874 -11631 0
7876 -11633 0
7878 -11635 0
7880 -11637 0
7882 -11639 0
7884 -11641 0
7818 -11626 0
7818 7869 -11627 0
7818 7870 -11629 0
7818 7872 -11631 0
7818 7874 -11633 0
7818 7876 -11635 0
7818 7878 -11637 0
7818 7880 -11639 0
7818 7882 -11641 0
7818 7884 -11643 0
7819 -11627 0
7819 7869 -11629 0
7819 7870 -11631 0
7819 7872 -11633 0
7819 7874 -11635 0
7819 7876 -11637 0
7819 7878 -11639 0
7819 7880 -11641 0
7819 7882 -11643 0
7819 7884 -11645 0
7821 -11629 0
7821 7869 -11631 0
7821 7870 -11633 0
7821 7872 -11635 0
7821 7874 -11637 0
7821 7876 -11639 0
7821 7878 -11641 0
7821 7880 -11643 0
7821 7882 -11645 0
7821 7884 -11647 0
7823 -11631 0
7823 7869 -11633 0
7823 7870 -11635 0
7823 7872 -11637 0
7823 7874 -11639 0
7823 7876 -11641 0
7823 7878 -11643 0
7823 7880 -11645 0
7823 7882 -11647 0
7823 7884 -11649 0
7825 -11633 0
7825 7869 -11635 0
7825 7870 -11637 0
7825 7872 -11639 0
7825 7874 -11641 0
7825 7876 -11643 0
7825 7878 -11645 0
7825 7880 -11647 0
7825 7882 -11649 0
7825 7884 -11651 0
7827 -11635 0
7827 7869 -11637 0
7827 7870 -11639 0
7827 7872 -11641 0
7827 7874 -11643 0
7827 7876 -11645 0
7827 7878 -11647 0
7827 7880 -11649 0
7827 7882 -11651 0
7827 7884 -11653 0
7829 -11637 0
7829 7869 -11639 0
7829 7870 -11641 0
7829 7872 -11643 0
7829 7874 -11645 0
7829 7876 -11647 0
7829 7878 -11649 0
7829 7880 -11651 0
7829 7882 -11653 0
7829 7884 -11655 0
7831 -11639 0
7831 7869 -11641 0
7831 7870 -11643 0
7831 7872 -11645 0
7831 7874 -11647 0
7831 7876 -11649 0
7831 7878 -11651 0
7831 7880 -11653 0
7831 7882 -11655 0
7831 7884 -11657 0
7833 -11641 0
7833 7869 -11643 0
7833 7870 -11645 0
7833 7872 -11647 0
7833 7874 -11649 0
7833 7876 -11651 0
7833 7878 -11653 0
7833 7880 -11655 0
7833 7882 -11657 0
7833 7884 -11659 0
c (0<=(aux110 + aux113 - aux452))
-7884 11659 0
-7882 11657 0
-7880 11655 0
-7878 11653 0
-7876 11651 0
-7874 11649 0
-7872 11647 0
-7870 11645 0
-7869 11643 0
-7833 11659 0
-7833 -7884 11657 0
-7833 -7882 11655 0
-7833 -7880 11653 0
-7833 -7878 11651 0
-7833 -7876 11649 0
-7833 -7874 11647 0
-7833 -7872 11645 0
-7833 -7870 11643 0
-7833 -7869 11641 0
-7831 11657 0
-7831 -7884 11655 0
-7831 -7882 11653 0
-7831 -7880 11651 0
-7831 -7878 11649 0
-7831 -7876 11647 0
-7831 -7874 11645 0
-7831 -7872 11643 0
-7831 -7870 11641 0
-7831 -7869 11639 0
-7829 11655 0
-7829 -7884 11653 0
-7829 -7882 11651 0
-7829 -7880 11649 0
-7829 -7878 11647 0
-7829 -7876 11645 0
-7829 -7874 11643 0
-7829 -7872 11641 0
-7829 -7870 11639 0
-7829 -7869 11637 0
-7827 11653 0
-7827 -7884 11651 0
-7827 -7882 11649 0
-7827 -7880 11647 0
-7827 -7878 11645 0
-7827 -7876 11643 0
-7827 -7874 11641 0
-7827 -7872 11639 0
-7827 -7870 11637 0
-7827 -7869 11635 0
-7825 11651 0
-7825 -7884 11649 0
-7825 -7882 11647 0
-7825 -7880 11645 0
-7825 -7878 11643 0
-7825 -7876 11641 0
-7825 -7874 11639 0
-7825 -7872 11637 0
-7825 -7870 11635 0
-7825 -7869 11633 0
-7823 11649 0
-7823 -7884 11647 0
-7823 -7882 11645 0
-7823 -7880 11643 0
-7823 -7878 11641 0
-7823 -7876 11639 0
-7823 -7874 11637 0
-7823 -7872 11635 0
-7823 -7870 11633 0
-7823 -7869 11631 0
-7821 11647 0
-7821 -7884 11645 0
-7821 -7882 11643 0
-7821 -7880 11641 0
-7821 -7878 11639 0
-7821 -7876 11637 0
-7821 -7874 11635 0
-7821 -7872 11633 0
-7821 -7870 11631 0
-7821 -7869 11629 0
-7819 11645 0
-7819 -7884 11643 0
-7819 -7882 11641 0
-7819 -7880 11639 0
-7819 -7878 11637 0
-7819 -7876 11635 0
-7819 -7874 11633 0
-7819 -7872 11631 0
-7819 -7870 11629 0
-7819 -7869 11627 0
-7818 11643 0
-7818 -7884 11641 0
-7818 -7882 11639 0
-7818 -7880 11637 0
-7818 -7878 11635 0
-7818 -7876 11633 0
-7818 -7874 11631 0
-7818 -7872 11629 0
-7818 -7870 11627 0
-7818 -7869 11626 0
c ((aux111 + aux112 - aux453)<=0)
7852 -11661 0
7853 -11662 0
7855 -11664 0
7857 -11666 0
7859 -11668 0
7861 -11670 0
7863 -11672 0
7865 -11674 0
7867 -11676 0
7835 -11661 0
7835 7852 -11662 0
7835 7853 -11664 0
7835 7855 -11666 0
7835 7857 -11668 0
7835 7859 -11670 0
7835 7861 -11672 0
7835 7863 -11674 0
7835 7865 -11676 0
7835 7867 -11678 0
7836 -11662 0
7836 7852 -11664 0
7836 7853 -11666 0
7836 7855 -11668 0
7836 7857 -11670 0
7836 7859 -11672 0
7836 7861 -11674 0
7836 7863 -11676 0
7836 7865 -11678 0
7836 7867 -11680 0
7838 -11664 0
7838 7852 -11666 0
7838 7853 -11668 0
7838 7855 -11670 0
7838 7857 -11672 0
7838 7859 -11674 0
7838 7861 -11676 0
7838 7863 -11678 0
7838 7865 -11680 0
7838 7867 -11682 0
7840 -11666 0
7840 7852 -11668 0
7840 7853 -11670 0
7840 7855 -11672 0
7840 7857 -11674 0
7840 7859 -11676 0
7840 7861 -11678 0
7840 7863 -11680 0
7840 7865 -11682 0
7840 7867 -11684 0
7842 -11668 0
7842 7852 -11670 0
7842 7853 -11672 0
7842 7855 -11674 0
7842 7857 -11676 0
7842 7859 -11678 0
7842 7861 -11680 0
7842 7863 -11682 0
7842 7865 -11684 0
7842 7867 -11686 0
7844 -11670 0
7844 7852 -11672 0
7844 7853 -11674 0
7844 7855 -11676 0
7844 7857 -11678 0
7844 7859 -11680 0
7844 7861 -11682 0
7844 7863 -11684 0
7844 7865 -11686 0
7844 7867 -11688 0
7846 -11672 0
7846 7852 -11674 0
7846 7853 -11676 0
7846 7855 -11678 0
7846 7857 -11680 0
7846 7859 -11682 0
7846 7861 -11684 0
7846 7863 -11686 0
7846 7865 -11688 0
7846 7867 -11690 0
7848 -11674 0
7848 7852 -11676 0
7848 7853 -11678 0
7848 7855 -11680 0
7848 7857 -11682 0
7848 7859 -11684 0
7848 7861 -11686 0
7848 7863 -11688 0
7848 7865 -11690 0
7848 7867 -11692 0
7850 -11676 0
7850 7852 -11678 0
7850 7853 -11680 0
7850 7855 -11682 0
7850 7857 -11684 0
7850 7859 -11686 0
7850 7861 -11688 0
7850 7863 -11690 0
7850 7865 -11692 0
7850 7867 -11694 0
c (0<=(aux111 + aux112 - aux453))
-7867 11694 0
-7865 11692 0
-7863 11690 0
-7861 11688 0
-7859 11686 0
-7857 11684 0
-7855 11682 0
-7853 11680 0
-7852 11678 0
-7850 11694 0
-7850 -7867 11692 0
-7850 -7865 11690 0
-7850 -7863 11688 0
-7850 -7861 11686 0
-7850 -7859 11684 0
-7850 -7857 11682 0
-7850 -7855 11680 0
-7850 -7853 11678 0
-7850 -7852 11676 0
-7848 11692 0
-7848 -7867 11690 0
-7848 -7865 11688 0
-7848 -7863 11686 0
-7848 -7861 11684 0
-7848 -7859 11682 0
-7848 -7857 11680 0
-7848 -7855 11678 0
-7848 -7853 11676 0
-7848 -7852 11674 0
-7846 11690 0
-7846 -7867 11688 0
-7846 -7865 11686 0
-7846 -7863 11684 0
-7846 -7861 11682 0
-7846 -7859 11680 0
-7846 -7857 11678 0
-7846 -7855 11676 0
-7846 -7853 11674 0
-7846 -7852 11672 0
-7844 11688 0
-7844 -7867 11686 0
-7844 -7865 11684 0
-7844 -7863 11682 0
-7844 -7861 11680 0
-7844 -7859 11678 0
-7844 -7857 11676 0
-7844 -7855 11674 0
-7844 -7853 11672 0
-7844 -7852 11670 0
-7842 11686 0
-7842 -7867 11684 0
-7842 -7865 11682 0
-7842 -7863 11680 0
-7842 -7861 11678 0
-7842 -7859 11676 0
-7842 -7857 11674 0
-7842 -7855 11672 0
-7842 -7853 11670 0
-7842 -7852 11668 0
-7840 11684 0
-7840 -7867 11682 0
-7840 -7865 11680 0
-7840 -7863 11678 0
-7840 -7861 11676 0
-7840 -7859 11674 0
-7840 -7857 11672 0
-7840 -7855 11670 0
-7840 -7853 11668 0
-7840 -7852 11666 0
-7838 11682 0
-7838 -7867 11680 0
-7838 -7865 11678 0
-7838 -7863 11676 0
-7838 -7861 11674 0
-7838 -7859 11672 0
-7838 -7857 11670 0
-7838 -7855 11668 0
-7838 -7853 11666 0
-7838 -7852 11664 0
-7836 11680 0
-7836 -7867 11678 0
-7836 -7865 11676 0
-7836 -7863 11674 0
-7836 -7861 11672 0
-7836 -7859 11670 0
-7836 -7857 11668 0
-7836 -7855 11666 0
-7836 -7853 11664 0
-7836 -7852 11662 0
-7835 11678 0
-7835 -7867 11676 0
-7835 -7865 11674 0
-7835 -7863 11672 0
-7835 -7861 11670 0
-7835 -7859 11668 0
-7835 -7857 11666 0
-7835 -7855 11664 0
-7835 -7853 11662 0
-7835 -7852 11661 0
c ((aux109 + aux450 - aux454)<=0)
11558 -11696 0
11559 -11697 0
11561 -11699 0
11563 -11701 0
11565 -11703 0
11567 -11705 0
11569 -11707 0
11571 -11709 0
11573 -11711 0
11575 -11713 0
11577 -11715 0
11579 -11717 0
11581 -11719 0
11583 -11721 0
11585 -11723 0
11587 -11725 0
11589 -11727 0
7801 -11696 0
7801 11558 -11697 0
7801 11559 -11699 0
7801 11561 -11701 0
7801 11563 -11703 0
7801 11565 -11705 0
7801 11567 -11707 0
7801 11569 -11709 0
7801 11571 -11711 0
7801 11573 -11713 0
7801 11575 -11715 0
7801 11577 -11717 0
7801 11579 -11719 0
7801 11581 -11721 0
7801 11583 -11723 0
7801 11585 -11725 0
7801 11587 -11727 0
7801 11589 -11729 0
7802 -11697 0
7802 11558 -11699 0
7802 11559 -11701 0
7802 11561 -11703 0
7802 11563 -11705 0
7802 11565 -11707 0
7802 11567 -11709 0
7802 11569 -11711 0
7802 11571 -11713 0
7802 11573 -11715 0
7802 11575 -11717 0
7802 11577 -11719 0
7802 11579 -11721 0
7802 11581 -11723 0
7802 11583 -11725 0
7802 11585 -11727 0
7802 11587 -11729 0
7802 11589 -11731 0
7804 -11699 0
7804 11558 -11701 0
7804 11559 -11703 0
7804 11561 -11705 0
7804 11563 -11707 0
7804 11565 -11709 0
7804 11567 -11711 0
7804 11569 -11713 0
7804 11571 -11715 0
7804 11573 -11717 0
7804 11575 -11719 0
7804 11577 -11721 0
7804 11579 -11723 0
7804 11581 -11725 0
7804 11583 -11727 0
7804 11585 -11729 0
7804 11587 -11731 0
7804 11589 -11733 0
7806 -11701 0
7806 11558 -11703 0
7806 11559 -11705 0
7806 11561 -11707 0
7806 11563 -11709 0
7806 11565 -11711 0
7806 11567 -11713 0
7806 11569 -11715 0
7806 11571 -11717 0
7806 11573 -11719 0
7806 11575 -11721 0
7806 11577 -11723 0
7806 11579 -11725 0
7806 11581 -11727 0
7806 11583 -11729 0
7806 11585 -11731 0
7806 11587 -11733 0
7806 11589 -11735 0
7808 -11703 0
7808 11558 -11705 0
7808 11559 -11707 0
7808 11561 -11709 0
7808 11563 -11711 0
7808 11565 -11713 0
7808 11567 -11715 0
7808 11569 -11717 0
7808 11571 -11719 0
7808 11573 -11721 0
7808 11575 -11723 0
7808 11577 -11725 0
7808 11579 -11727 0
7808 11581 -11729 0
7808 11583 -11731 0
7808 11585 -11733 0
7808 11587 -11735 0
7808 11589 -11737 0
7810 -11705 0
7810 11558 -11707 0
7810 11559 -11709 0
7810 11561 -11711 0
7810 11563 -11713 0
7810 11565 -11715 0
7810 11567 -11717 0
7810 11569 -11719 0
7810 11571 -11721 0
7810 11573 -11723 0
7810 11575 -11725 0
7810 11577 -11727 0
7810 11579 -11729 0
7810 11581 -11731 0
7810 11583 -11733 0
7810 11585 -11735 0
7810 11587 -11737 0
7810 11589 -11739 0
7812 -11707 0
7812 11558 -11709 0
7812 11559 -11711 0
7812 11561 -11713 0
7812 11563 -11715 0
7812 11565 -11717 0
7812 11567 -11719 0
7812 11569 -11721 0
7812 11571 -11723 0
7812 11573 -11725 0
7812 11575 -11727 0
7812 11577 -11729 0
7812 11579 -11731 0
7812 11581 -11733 0
7812 11583 -11735 0
7812 11585 -11737 0
7812 11587 -11739 0
7812 11589 -11741 0
7814 -11709 0
7814 11558 -11711 0
7814 11559 -11713 0
7814 11561 -11715 0
7814 11563 -11717 0
7814 11565 -11719 0
7814 11567 -11721 0
7814 11569 -11723 0
7814 11571 -11725 0
7814 11573 -11727 0
7814 11575 -11729 0
7814 11577 -11731 0
7814 11579 -11733 0
7814 11581 -11735 0
7814 11583 -11737 0
7814 11585 -11739 0
7814 11587 -11741 0
7814 11589 -11743 0
7816 -11711 0
7816 11558 -11713 0
7816 11559 -11715 0
7816 11561 -11717 0
7816 11563 -11719 0
7816 11565 -11721 0
7816 11567 -11723 0
7816 11569 -11725 0
7816 11571 -11727 0
7816 11573 -11729 0
7816 11575 -11731 0
7816 11577 -11733 0
7816 11579 -11735 0
7816 11581 -11737 0
7816 11583 -11739 0
7816 11585 -11741 0
7816 11587 -11743 0
7816 11589 -11745 0
c (0<=(aux109 + aux450 - aux454))
-11589 11745 0
-11587 11743 0
-11585 11741 0
-11583 11739 0
-11581 11737 0
-11579 11735 0
-11577 11733 0
-11575 11731 0
-11573 11729 0
-11571 11727 0
-11569 11725 0
-11567 11723 0
-11565 11721 0
-11563 11719 0
-11561 11717 0
-11559 11715 0
-11558 11713 0
-7816 11745 0
-7816 -11589 11743 0
-7816 -11587 11741 0
-7816 -11585 11739 0
-7816 -11583 11737 0
-7816 -11581 11735 0
-7816 -11579 11733 0
-7816 -11577 11731 0
-7816 -11575 11729 0
-7816 -11573 11727 0
-7816 -11571 11725 0
-7816 -11569 11723 0
-7816 -11567 11721 0
-7816 -11565 11719 0
-7816 -11563 11717 0
-7816 -11561 11715 0
-7816 -11559 11713 0
-7816 -11558 11711 0
-7814 11743 0
-7814 -11589 11741 0
-7814 -11587 11739 0
-7814 -11585 11737 0
-7814 -11583 11735 0
-7814 -11581 11733 0
-7814 -11579 11731 0
-7814 -11577 11729 0
-7814 -11575 11727 0
-7814 -11573 11725 0
-7814 -11571 11723 0
-7814 -11569 11721 0
-7814 -11567 11719 0
-7814 -11565 11717 0
-7814 -11563 11715 0
-7814 -11561 11713 0
-7814 -11559 11711 0
-7814 -11558 11709 0
-7812 11741 0
-7812 -11589 11739 0
-7812 -11587 11737 0
-7812 -11585 11735 0
-7812 -11583 11733 0
-7812 -11581 11731 0
-7812 -11579 11729 0
-7812 -11577 11727 0
-7812 -11575 11725 0
-7812 -11573 11723 0
-7812 -11571 11721 0
-7812 -11569 11719 0
-7812 -11567 11717 0
-7812 -11565 11715 0
-7812 -11563 11713 0
-7812 -11561 11711 0
-7812 -11559 11709 0
-7812 -11558 11707 0
-7810 11739 0
-7810 -11589 11737 0
-7810 -11587 11735 0
-7810 -11585 11733 0
-7810 -11583 11731 0
-7810 -11581 11729 0
-7810 -11579 11727 0
-7810 -11577 11725 0
-7810 -11575 11723 0
-7810 -11573 11721 0
-7810 -11571 11719 0
-7810 -11569 11717 0
-7810 -11567 11715 0
-7810 -11565 11713 0
-7810 -11563 11711 0
-7810 -11561 11709 0
-7810 -11559 11707 0
-7810 -11558 11705 0
-7808 11737 0
-7808 -11589 11735 0
-7808 -11587 11733 0
-7808 -11585 11731 0
-7808 -11583 11729 0
-7808 -11581 11727 0
-7808 -11579 11725 0
-7808 -11577 11723 0
-7808 -11575 11721 0
-7808 -11573 11719 0
-7808 -11571 11717 0
-7808 -11569 11715 0
-7808 -11567 11713 0
-7808 -11565 11711 0
-7808 -11563 11709 0
-7808 -11561 11707 0
-7808 -11559 11705 0
-7808 -11558 11703 0
-7806 11735 0
-7806 -11589 11733 0
-7806 -11587 11731 0
-7806 -11585 11729 0
-7806 -11583 11727 0
-7806 -11581 11725 0
-7806 -11579 11723 0
-7806 -11577 11721 0
-7806 -11575 11719 0
-7806 -11573 11717 0
-7806 -11571 11715 0
-7806 -11569 11713 0
-7806 -11567 11711 0
-7806 -11565 11709 0
-7806 -11563 11707 0
-7806 -11561 11705 0
-7806 -11559 11703 0
-7806 -11558 11701 0
-7804 11733 0
-7804 -11589 11731 0
-7804 -11587 11729 0
-7804 -11585 11727 0
-7804 -11583 11725 0
-7804 -11581 11723 0
-7804 -11579 11721 0
-7804 -11577 11719 0
-7804 -11575 11717 0
-7804 -11573 11715 0
-7804 -11571 11713 0
-7804 -11569 11711 0
-7804 -11567 11709 0
-7804 -11565 11707 0
-7804 -11563 11705 0
-7804 -11561 11703 0
-7804 -11559 11701 0
-7804 -11558 11699 0
-7802 11731 0
-7802 -11589 11729 0
-7802 -11587 11727 0
-7802 -11585 11725 0
-7802 -11583 11723 0
-7802 -11581 11721 0
-7802 -11579 11719 0
-7802 -11577 11717 0
-7802 -11575 11715 0
-7802 -11573 11713 0
-7802 -11571 11711 0
-7802 -11569 11709 0
-7802 -11567 11707 0
-7802 -11565 11705 0
-7802 -11563 11703 0
-7802 -11561 11701 0
-7802 -11559 11699 0
-7802 -11558 11697 0
-7801 11729 0
-7801 -11589 11727 0
-7801 -11587 11725 0
-7801 -11585 11723 0
-7801 -11583 11721 0
-7801 -11581 11719 0
-7801 -11579 11717 0
-7801 -11577 11715 0
-7801 -11575 11713 0
-7801 -11573 11711 0
-7801 -11571 11709 0
-7801 -11569 11707 0
-7801 -11567 11705 0
-7801 -11565 11703 0
-7801 -11563 11701 0
-7801 -11561 11699 0
-7801 -11559 11697 0
-7801 -11558 11696 0
c ((aux452 + aux453 - aux455)<=0)
11661 -11747 0
11662 -11748 0
11664 -11750 0
11666 -11752 0
11668 -11754 0
11670 -11756 0
11672 -11758 0
11674 -11760 0
11676 -11762 0
11678 -11764 0
11680 -11766 0
11682 -11768 0
11684 -11770 0
11686 -11772 0
11688 -11774 0
11690 -11776 0
11692 -11778 0
11694 -11780 0
11626 -11747 0
11626 11661 -11748 0
11626 11662 -11750 0
11626 11664 -11752 0
11626 11666 -11754 0
11626 11668 -11756 0
11626 11670 -11758 0
11626 11672 -11760 0
11626 11674 -11762 0
11626 11676 -11764 0
11626 11678 -11766 0
11626 11680 -11768 0
11626 11682 -11770 0
11626 11684 -11772 0
11626 11686 -11774 0
11626 11688 -11776 0
11626 11690 -11778 0
11626 11692 -11780 0
11626 11694 -11782 0
11627 -11748 0
11627 11661 -11750 0
11627 11662 -11752 0
11627 11664 -11754 0
11627 11666 -11756 0
11627 11668 -11758 0
11627 11670 -11760 0
11627 11672 -11762 0
11627 11674 -11764 0
11627 11676 -11766 0
11627 11678 -11768 0
11627 11680 -11770 0
11627 11682 -11772 0
11627 11684 -11774 0
11627 11686 -11776 0
11627 11688 -11778 0
11627 11690 -11780 0
11627 11692 -11782 0
11627 11694 -11784 0
11629 -11750 0
11629 11661 -11752 0
11629 11662 -11754 0
11629 11664 -11756 0
11629 11666 -11758 0
11629 11668 -11760 0
11629 11670 -11762 0
11629 11672 -11764 0
11629 11674 -11766 0
11629 11676 -11768 0
11629 11678 -11770 0
11629 11680 -11772 0
11629 11682 -11774 0
11629 11684 -11776 0
11629 11686 -11778 0
11629 11688 -11780 0
11629 11690 -11782 0
11629 11692 -11784 0
11629 11694 -11786 0
11631 -11752 0
11631 11661 -11754 0
11631 11662 -11756 0
11631 11664 -11758 0
11631 11666 -11760 0
11631 11668 -11762 0
11631 11670 -11764 0
11631 11672 -11766 0
11631 11674 -11768 0
11631 11676 -11770 0
11631 11678 -11772 0
11631 11680 -11774 0
11631 11682 -11776 0
11631 11684 -11778 0
11631 11686 -11780 0
11631 11688 -11782 0
11631 11690 -11784 0
11631 11692 -11786 0
11631 11694 -11788 0
11633 -11754 0
11633 11661 -11756 0
11633 11662 -11758 0
11633 11664 -11760 0
11633 11666 -11762 0
11633 11668 -11764 0
11633 11670 -11766 0
11633 11672 -11768 0
11633 11674 -11770 0
11633 11676 -11772 0
11633 11678 -11774 0
11633 11680 -11776 0
11633 11682 -11778 0
11633 11684 -11780 0
11633 11686 -11782 0
11633 11688 -11784 0
11633 11690 -11786 0
11633 11692 -11788 0
11633 11694 -11790 0
11635 -11756 0
11635 11661 -11758 0
11635 11662 -11760 0
11635 11664 -11762 0
11635 11666 -11764 0
11635 11668 -11766 0
11635 11670 -11768 0
11635 11672 -11770 0
11635 11674 -11772 0
11635 11676 -11774 0
11635 11678 -11776 0
11635 11680 -11778 0
11635 11682 -11780 0
11635 11684 -11782 0
11635 11686 -11784 0
11635 11688 -11786 0
11635 11690 -11788 0
11635 11692 -11790 0
11635 11694 -11792 0
11637 -11758 0
11637 11661 -11760 0
11637 11662 -11762 0
11637 11664 -11764 0
11637 11666 -11766 0
11637 11668 -11768 0
11637 11670 -11770 0
11637 11672 -11772 0
11637 11674 -11774 0
11637 11676 -11776 0
11637 11678 -11778 0
11637 11680 -11780 0
11637 11682 -11782 0
11637 11684 -11784 0
11637 11686 -11786 0
11637 11688 -11788 0
11637 11690 -11790 0
11637 11692 -11792 0
11637 11694 -11794 0
11639 -11760 0
11639 11661 -11762 0
11639 11662 -11764 0
11639 11664 -11766 0
11639 11666 -11768 0
11639 11668 -11770 0
11639 11670 -11772 0
11639 11672 -11774 0
11639 11674 -11776 0
11639 11676 -11778 0
11639 11678 -11780 0
11639 11680 -11782 0
11639 11682 -11784 0
11639 11684 -11786 0
11639 11686 -11788 0
11639 11688 -11790 0
11639 11690 -11792 0
11639 11692 -11794 0
11639 11694 -11796 0
11641 -11762 0
11641 11661 -11764 0
11641 11662 -11766 0
11641 11664 -11768 0
11641 11666 -11770 0
11641 11668 -11772 0
11641 11670 -11774 0
11641 11672 -11776 0
11641 11674 -11778 0
11641 11676 -11780 0
11641 11678 -11782 0
11641 11680 -11784 0
11641 11682 -11786 0
11641 11684 -11788 0
11641 11686 -11790 0
11641 11688 -11792 0
11641 11690 -11794 0
11641 11692 -11796 0
11641 11694 -11798 0
11643 -11764 0
11643 11661 -11766 0
11643 11662 -11768 0
11643 11664 -11770 0
11643 11666 -11772 0
11643 11668 -11774 0
11643 11670 -11776 0
11643 11672 -11778 0
11643 11674 -11780 0
11643 11676 -11782 0
11643 11678 -11784 0
11643 11680 -11786 0
11643 11682 -11788 0
11643 11684 -11790 0
11643 11686 -11792 0
11643 11688 -11794 0
11643 11690 -11796 0
11643 11692 -11798 0
11643 11694 -11800 0
11645 -11766 0
11645 11661 -11768 0
11645 11662 -11770 0
11645 11664 -11772 0
11645 11666 -11774 0
11645 11668 -11776 0
11645 11670 -11778 0
11645 11672 -11780 0
11645 11674 -11782 0
11645 11676 -11784 0
11645 11678 -11786 0
11645 11680 -11788 0
11645 11682 -11790 0
11645 11684 -11792 0
11645 11686 -11794 0
11645 11688 -11796 0
11645 11690 -11798 0
11645 11692 -11800 0
11645 11694 -11802 0
11647 -11768 0
11647 11661 -11770 0
11647 11662 -11772 0
11647 11664 -11774 0
11647 11666 -11776 0
11647 11668 -11778 0
11647 11670 -11780 0
11647 11672 -11782 0
11647 11674 -11784 0
11647 11676 -11786 0
11647 11678 -11788 0
11647 11680 -11790 0
11647 11682 -11792 0
11647 11684 -11794 0
11647 11686 -11796 0
11647 11688 -11798 0
11647 11690 -11800 0
11647 11692 -11802 0
11647 11694 -11804 0
11649 -11770 0
11649 11661 -11772 0
11649 11662 -11774 0
11649 11664 -11776 0
11649 11666 -11778 0
11649 11668 -11780 0
11649 11670 -11782 0
11649 11672 -11784 0
11649 11674 -11786 0
11649 11676 -11788 0
11649 11678 -11790 0
11649 11680 -11792 0
11649 11682 -11794 0
11649 11684 -11796 0
11649 11686 -11798 0
11649 11688 -11800 0
11649 11690 -11802 0
11649 11692 -11804 0
11649 11694 -11806 0
11651 -11772 0
11651 11661 -11774 0
11651 11662 -11776 0
11651 11664 -11778 0
11651 11666 -11780 0
11651 11668 -11782 0
11651 11670 -11784 0
11651 11672 -11786 0
11651 11674 -11788 0
11651 11676 -11790 0
11651 11678 -11792 0
11651 11680 -11794 0
11651 11682 -11796 0
11651 11684 -11798 0
11651 11686 -11800 0
11651 11688 -11802 0
11651 11690 -11804 0
11651 11692 -11806 0
11651 11694 -11808 0
11653 -11774 0
11653 11661 -11776 0
11653 11662 -11778 0
11653 11664 -11780 0
11653 11666 -11782 0
11653 11668 -11784 0
11653 11670 -11786 0
11653 11672 -11788 0
11653 11674 -11790 0
11653 11676 -11792 0
11653 11678 -11794 0
11653 11680 -11796 0
11653 11682 -11798 0
11653 11684 -11800 0
11653 11686 -11802 0
11653 11688 -11804 0
11653 11690 -11806 0
11653 11692 -11808 0
11653 11694 -11810 0
11655 -11776 0
11655 11661 -11778 0
11655 11662 -11780 0
11655 11664 -11782 0
11655 11666 -11784 0
11655 11668 -11786 0
11655 11670 -11788 0
11655 11672 -11790 0
11655 11674 -11792 0
11655 11676 -11794 0
11655 11678 -11796 0
11655 11680 -11798 0
11655 11682 -11800 0
11655 11684 -11802 0
11655 11686 -11804 0
11655 11688 -11806 0
11655 11690 -11808 0
11655 11692 -11810 0
11655 11694 -11812 0
11657 -11778 0
11657 11661 -11780 0
11657 11662 -11782 0
11657 11664 -11784 0
11657 11666 -11786 0
11657 11668 -11788 0
11657 11670 -11790 0
11657 11672 -11792 0
11657 11674 -11794 0
11657 11676 -11796 0
11657 11678 -11798 0
11657 11680 -11800 0
11657 11682 -11802 0
11657 11684 -11804 0
11657 11686 -11806 0
11657 11688 -11808 0
11657 11690 -11810 0
11657 11692 -11812 0
11657 11694 -11814 0
11659 -11780 0
11659 11661 -11782 0
11659 11662 -11784 0
11659 11664 -11786 0
11659 11666 -11788 0
11659 11668 -11790 0
11659 11670 -11792 0
11659 11672 -11794 0
11659 11674 -11796 0
11659 11676 -11798 0
11659 11678 -11800 0
11659 11680 -11802 0
11659 11682 -11804 0
11659 11684 -11806 0
11659 11686 -11808 0
11659 11688 -11810 0
11659 11690 -11812 0
11659 11692 -11814 0
11659 11694 -11816 0
c (0<=(aux452 + aux453 - aux455))
-11694 11816 0
-11692 11814 0
-11690 11812 0
-11688 11810 0
-11686 11808 0
-11684 11806 0
-11682 11804 0
-11680 11802 0
-11678 11800 0
-11676 11798 0
-11674 11796 0
-11672 11794 0
-11670 11792 0
-11668 11790 0
-11666 11788 0
-11664 11786 0
-11662 11784 0
-11661 11782 0
-11659 11816 0
-11659 -11694 11814 0
-11659 -11692 11812 0
-11659 -11690 11810 0
-11659 -11688 11808 0
-11659 -11686 11806 0
-11659 -11684 11804 0
-11659 -11682 11802 0
-11659 -11680 11800 0
-11659 -11678 11798 0
-11659 -11676 11796 0
-11659 -11674 11794 0
-11659 -11672 11792 0
-11659 -11670 11790 0
-11659 -11668 11788 0
-11659 -11666 11786 0
-11659 -11664 11784 0
-11659 -11662 11782 0
-11659 -11661 11780 0
-11657 11814 0
-11657 -11694 11812 0
-11657 -11692 11810 0
-11657 -11690 11808 0
-11657 -11688 11806 0
-11657 -11686 11804 0
-11657 -11684 11802 0
-11657 -11682 11800 0
-11657 -11680 11798 0
-11657 -11678 11796 0
-11657 -11676 11794 0
-11657 -11674 11792 0
-11657 -11672 11790 0
-11657 -11670 11788 0
-11657 -11668 11786 0
-11657 -11666 11784 0
-11657 -11664 11782 0
-11657 -11662 11780 0
-11657 -11661 11778 0
-11655 11812 0
-11655 -11694 11810 0
-11655 -11692 11808 0
-11655 -11690 11806 0
-11655 -11688 11804 0
-11655 -11686 11802 0
-11655 -11684 11800 0
-11655 -11682 11798 0
-11655 -11680 11796 0
-11655 -11678 11794 0
-11655 -11676 11792 0
-11655 -11674 11790 0
-11655 -11672 11788 0
-11655 -11670 11786 0
-11655 -11668 11784 0
-11655 -11666 11782 0
-11655 -11664 11780 0
-11655 -11662 11778 0
-11655 -11661 11776 0
-11653 11810 0
-11653 -11694 11808 0
-11653 -11692 11806 0
-11653 -11690 11804 0
-11653 -11688 11802 0
-11653 -11686 11800 0
-11653 -11684 11798 0
-11653 -11682 11796 0
-11653 -11680 11794 0
-11653 -11678 11792 0
-11653 -11676 11790 0
-11653 -11674 11788 0
-11653 -11672 11786 0
-11653 -11670 11784 0
-11653 -11668 11782 0
-11653 -11666 11780 0
-11653 -11664 11778 0
-11653 -11662 11776 0
-11653 -11661 11774 0
-11651 11808 0
-11651 -11694 11806 0
-11651 -11692 11804 0
-11651 -11690 11802 0
-11651 -11688 11800 0
-11651 -11686 11798 0
-11651 -11684 11796 0
-11651 -11682 11794 0
-11651 -11680 11792 0
-11651 -11678 11790 0
-11651 -11676 11788 0
-11651 -11674 11786 0
-11651 -11672 11784 0
-11651 -11670 11782 0
-11651 -11668 11780 0
-11651 -11666 11778 0
-11651 -11664 11776 0
-11651 -11662 11774 0
-11651 -11661 11772 0
-11649 11806 0
-11649 -11694 11804 0
-11649 -11692 11802 0
-11649 -11690 11800 0
-11649 -11688 11798 0
-11649 -11686 11796 0
-11649 -11684 11794 0
-11649 -11682 11792 0
-11649 -11680 11790 0
-11649 -11678 11788 0
-11649 -11676 11786 0
-11649 -11674 11784 0
-11649 -11672 11782 0
-11649 -11670 11780 0
-11649 -11668 11778 0
-11649 -11666 11776 0
-11649 -11664 11774 0
-11649 -11662 11772 0
-11649 -11661 11770 0
-11647 11804 0
-11647 -11694 11802 0
-11647 -11692 11800 0
-11647 -11690 11798 0
-11647 -11688 11796 0
-11647 -11686 11794 0
-11647 -11684 11792 0
-11647 -11682 11790 0
-11647 -11680 11788 0
-11647 -11678 11786 0
-11647 -11676 11784 0
-11647 -11674 11782 0
-11647 -11672 11780 0
-11647 -11670 11778 0
-11647 -11668 11776 0
-11647 -11666 11774 0
-11647 -11664 11772 0
-11647 -11662 11770 0
-11647 -11661 11768 0
-11645 11802 0
-11645 -11694 11800 0
-11645 -11692 11798 0
-11645 -11690 11796 0
-11645 -11688 11794 0
-11645 -11686 11792 0
-11645 -11684 11790 0
-11645 -11682 11788 0
-11645 -11680 11786 0
-11645 -11678 11784 0
-11645 -11676 11782 0
-11645 -11674 11780 0
-11645 -11672 11778 0
-11645 -11670 11776 0
-11645 -11668 11774 0
-11645 -11666 11772 0
-11645 -11664 11770 0
-11645 -11662 11768 0
-11645 -11661 11766 0
-11643 11800 0
-11643 -11694 11798 0
-11643 -11692 11796 0
-11643 -11690 11794 0
-11643 -11688 11792 0
-11643 -11686 11790 0
-11643 -11684 11788 0
-11643 -11682 11786 0
-11643 -11680 11784 0
-11643 -11678 11782 0
-11643 -11676 11780 0
-11643 -11674 11778 0
-11643 -11672 11776 0
-11643 -11670 11774 0
-11643 -11668 11772 0
-11643 -11666 11770 0
-11643 -11664 11768 0
-11643 -11662 11766 0
-11643 -11661 11764 0
-11641 11798 0
-11641 -11694 11796 0
-11641 -11692 11794 0
-11641 -11690 11792 0
-11641 -11688 11790 0
-11641 -11686 11788 0
-11641 -11684 11786 0
-11641 -11682 11784 0
-11641 -11680 11782 0
-11641 -11678 11780 0
-11641 -11676 11778 0
-11641 -11674 11776 0
-11641 -11672 11774 0
-11641 -11670 11772 0
-11641 -11668 11770 0
-11641 -11666 11768 0
-11641 -11664 11766 0
-11641 -11662 11764 0
-11641 -11661 11762 0
-11639 11796 0
-11639 -11694 11794 0
-11639 -11692 11792 0
-11639 -11690 11790 0
-11639 -11688 11788 0
-11639 -11686 11786 0
-11639 -11684 11784 0
-11639 -11682 11782 0
-11639 -11680 11780 0
-11639 -11678 11778 0
-11639 -11676 11776 0
-11639 -11674 11774 0
-11639 -11672 11772 0
-11639 -11670 11770 0
-11639 -11668 11768 0
-11639 -11666 11766 0
-11639 -11664 11764 0
-11639 -11662 11762 0
-11639 -11661 11760 0
-11637 11794 0
-11637 -11694 11792 0
-11637 -11692 11790 0
-11637 -11690 11788 0
-11637 -11688 11786 0
-11637 -11686 11784 0
-11637 -11684 11782 0
-11637 -11682 11780 0
-11637 -11680 11778 0
-11637 -11678 11776 0
-11637 -11676 11774 0
-11637 -11674 11772 0
-11637 -11672 11770 0
-11637 -11670 11768 0
-11637 -11668 11766 0
-11637 -11666 11764 0
-11637 -11664 11762 0
-11637 -11662 11760 0
-11637 -11661 11758 0
-11635 11792 0
-11635 -11694 11790 0
-11635 -11692 11788 0
-11635 -11690 11786 0
-11635 -11688 11784 0
-11635 -11686 11782 0
-11635 -11684 11780 0
-11635 -11682 11778 0
-11635 -11680 11776 0
-11635 -11678 11774 0
-11635 -11676 11772 0
-11635 -11674 11770 0
-11635 -11672 11768 0
-11635 -11670 11766 0
-11635 -11668 11764 0
-11635 -11666 11762 0
-11635 -11664 11760 0
-11635 -11662 11758 0
-11635 -11661 11756 0
-11633 11790 0
-11633 -11694 11788 0
-11633 -11692 11786 0
-11633 -11690 11784 0
-11633 -11688 11782 0
-11633 -11686 11780 0
-11633 -11684 11778 0
-11633 -11682 11776 0
-11633 -11680 11774 0
-11633 -11678 11772 0
-11633 -11676 11770 0
-11633 -11674 11768 0
-11633 -11672 11766 0
-11633 -11670 11764 0
-11633 -11668 11762 0
-11633 -11666 11760 0
-11633 -11664 11758 0
-11633 -11662 11756 0
-11633 -11661 11754 0
-11631 11788 0
-11631 -11694 11786 0
-11631 -11692 11784 0
-11631 -11690 11782 0
-11631 -11688 11780 0
-11631 -11686 11778 0
-11631 -11684 11776 0
-11631 -11682 11774 0
-11631 -11680 11772 0
-11631 -11678 11770 0
-11631 -11676 11768 0
-11631 -11674 11766 0
-11631 -11672 11764 0
-11631 -11670 11762 0
-11631 -11668 11760 0
-11631 -11666 11758 0
-11631 -11664 11756 0
-11631 -11662 11754 0
-11631 -11661 11752 0
-11629 11786 0
-11629 -11694 11784 0
-11629 -11692 11782 0
-11629 -11690 11780 0
-11629 -11688 11778 0
-11629 -11686 11776 0
-11629 -11684 11774 0
-11629 -11682 11772 0
-11629 -11680 11770 0
-11629 -11678 11768 0
-11629 -11676 11766 0
-11629 -11674 11764 0
-11629 -11672 11762 0
-11629 -11670 11760 0
-11629 -11668 11758 0
-11629 -11666 11756 0
-11629 -11664 11754 0
-11629 -11662 11752 0
-11629 -11661 11750 0
-11627 11784 0
-11627 -11694 11782 0
-11627 -11692 11780 0
-11627 -11690 11778 0
-11627 -11688 11776 0
-11627 -11686 11774 0
-11627 -11684 11772 0
-11627 -11682 11770 0
-11627 -11680 11768 0
-11627 -11678 11766 0
-11627 -11676 11764 0
-11627 -11674 11762 0
-11627 -11672 11760 0
-11627 -11670 11758 0
-11627 -11668 11756 0
-11627 -11666 11754 0
-11627 -11664 11752 0
-11627 -11662 11750 0
-11627 -11661 11748 0
-11626 11782 0
-11626 -11694 11780 0
-11626 -11692 11778 0
-11626 -11690 11776 0
-11626 -11688 11774 0
-11626 -11686 11772 0
-11626 -11684 11770 0
-11626 -11682 11768 0
-11626 -11680 11766 0
-11626 -11678 11764 0
-11626 -11676 11762 0
-11626 -11674 11760 0
-11626 -11672 11758 0
-11626 -11670 11756 0
-11626 -11668 11754 0
-11626 -11666 11752 0
-11626 -11664 11750 0
-11626 -11662 11748 0
-11626 -11661 11747 0
c ((aux120 - aux456 + shift(variant_fields_00004_00004_00001, -1))<=0)
7972 -11818 0
7973 -11819 0
7975 -11821 0
7977 -11823 0
7979 -11825 0
7981 -11827 0
7983 -11829 0
7985 -11831 0
7987 -11833 0
5267 -11818 0
5267 7972 -11819 0
5267 7973 -11821 0
5267 7975 -11823 0
5267 7977 -11825 0
5267 7979 -11827 0
5267 7981 -11829 0
5267 7983 -11831 0
5267 7985 -11833 0
5267 7987 -11835 0
5268 -11819 0
5268 7972 -11821 0
5268 7973 -11823 0
5268 7975 -11825 0
5268 7977 -11827 0
5268 7979 -11829 0
5268 7981 -11831 0
5268 7983 -11833 0
5268 7985 -11835 0
5268 7987 -11837 0
5270 -11821 0
5270 7972 -11823 0
5270 7973 -11825 0
5270 7975 -11827 0
5270 7977 -11829 0
5270 7979 -11831 0
5270 7981 -11833 0
5270 7983 -11835 0
5270 7985 -11837 0
5270 7987 -11839 0
5272 -11823 0
5272 7972 -11825 0
5272 7973 -11827 0
5272 7975 -11829 0
5272 7977 -11831 0
5272 7979 -11833 0
5272 7981 -11835 0
5272 7983 -11837 0
5272 7985 -11839 0
5272 7987 -11841 0
5274 -11825 0
5274 7972 -11827 0
5274 7973 -11829 0
5274 7975 -11831 0
5274 7977 -11833 0
5274 7979 -11835 0
5274 7981 -11837 0
5274 7983 -11839 0
5274 7985 -11841 0
5274 7987 -11843 0
5276 -11827 0
5276 7972 -11829 0
5276 7973 -11831 0
5276 7975 -11833 0
5276 7977 -11835 0
5276 7979 -11837 0
5276 7981 -11839 0
5276 7983 -11841 0
5276 7985 -11843 0
5276 7987 -11845 0
5278 -11829 0
5278 7972 -11831 0
5278 7973 -11833 0
5278 7975 -11835 0
5278 7977 -11837 0
5278 7979 -11839 0
5278 7981 -11841 0
5278 7983 -11843 0
5278 7985 -11845 0
5278 7987 -11847 0
5280 -11831 0
5280 7972 -11833 0
5280 7973 -11835 0
5280 7975 -11837 0
5280 7977 -11839 0
5280 7979 -11841 0
5280 7981 -11843 0
5280 7983 -11845 0
5280 7985 -11847 0
5280 7987 -11849 0
c (0<=(aux120 - aux456 + shift(variant_fields_00004_00004_00001, -1)))
-7987 11849 0
-7985 11847 0
-7983 11845 0
-7981 11843 0
-7979 11841 0
-7977 11839 0
-7975 11837 0
-7973 11835 0
-7972 11833 0
-5280 11849 0
-5280 -7987 11847 0
-5280 -7985 11845 0
-5280 -7983 11843 0
-5280 -7981 11841 0
-5280 -7979 11839 0
-5280 -7977 11837 0
-5280 -7975 11835 0
-5280 -7973 11833 0
-5280 -7972 11831 0
-5278 11847 0
-5278 -7987 11845 0
-5278 -7985 11843 0
-5278 -7983 11841 0
-5278 -7981 11839 0
-5278 -7979 11837 0
-5278 -7977 11835 0
-5278 -7975 11833 0
-5278 -7973 11831 0
-5278 -7972 11829 0
-5276 11845 0
-5276 -7987 11843 0
-5276 -7985 11841 0
-5276 -7983 11839 0
-5276 -7981 11837 0
-5276 -7979 11835 0
-5276 -7977 11833 0
-5276 -7975 11831 0
-5276 -7973 11829 0
-5276 -7972 11827 0
-5274 11843 0
-5274 -7987 11841 0
-5274 -7985 11839 0
-5274 -7983 11837 0
-5274 -7981 11835 0
-5274 -7979 11833 0
-5274 -7977 11831 0
-5274 -7975 11829 0
-5274 -7973 11827 0
-5274 -7972 11825 0
-5272 11841 0
-5272 -7987 11839 0
-5272 -7985 11837 0
-5272 -7983 11835 0
-5272 -7981 11833 0
-5272 -7979 11831 0
-5272 -7977 11829 0
-5272 -7975 11827 0
-5272 -7973 11825 0
-5272 -7972 11823 0
-5270 11839 0
-5270 -7987 11837 0
-5270 -7985 11835 0
-5270 -7983 11833 0
-5270 -7981 11831 0
-5270 -7979 11829 0
-5270 -7977 11827 0
-5270 -7975 11825 0
-5270 -7973 11823 0
-5270 -7972 11821 0
-5268 11837 0
-5268 -7987 11835 0
-5268 -7985 11833 0
-5268 -7983 11831 0
-5268 -7981 11829 0
-5268 -7979 11827 0
-5268 -7977 11825 0
-5268 -7975 11823 0
-5268 -7973 11821 0
-5268 -7972 11819 0
-5267 11835 0
-5267 -7987 11833 0
-5267 -7985 11831 0
-5267 -7983 11829 0
-5267 -7981 11827 0
-5267 -7979 11825 0
-5267 -7977 11823 0
-5267 -7975 11821 0
-5267 -7973 11819 0
-5267 -7972 11818 0
c ((aux117 + aux124 - aux457)<=0)
8040 -11851 0
8041 -11852 0
8043 -11854 0
8045 -11856 0
8047 -11858 0
8049 -11860 0
8051 -11862 0
8053 -11864 0
8055 -11866 0
7921 -11851 0
7921 8040 -11852 0
7921 8041 -11854 0
7921 8043 -11856 0
7921 8045 -11858 0
7921 8047 -11860 0
7921 8049 -11862 0
7921 8051 -11864 0
7921 8053 -11866 0
7921 8055 -11868 0
7922 -11852 0
7922 8040 -11854 0
7922 8041 -11856 0
7922 8043 -11858 0
7922 8045 -11860 0
7922 8047 -11862 0
7922 8049 -11864 0
7922 8051 -11866 0
7922 8053 -11868 0
7922 8055 -11870 0
7924 -11854 0
7924 8040 -11856 0
7924 8041 -11858 0
7924 8043 -11860 0
7924 8045 -11862 0
7924 8047 -11864 0
7924 8049 -11866 0
7924 8051 -11868 0
7924 8053 -11870 0
7924 8055 -11872 0
7926 -11856 0
7926 8040 -11858 0
7926 8041 -11860 0
7926 8043 -11862 0
7926 8045 -11864 0
7926 8047 -11866 0
7926 8049 -11868 0
7926 8051 -11870 0
7926 8053 -11872 0
7926 8055 -11874 0
7928 -11858 0
7928 8040 -11860 0
7928 8041 -11862 0
7928 8043 -11864 0
7928 8045 -11866 0
7928 8047 -11868 0
7928 8049 -11870 0
7928 8051 -11872 0
7928 8053 -11874 0
7928 8055 -11876 0
7930 -11860 0
7930 8040 -11862 0
7930 8041 -11864 0
7930 8043 -11866 0
7930 8045 -11868 0
7930 8047 -11870 0
7930 8049 -11872 0
7930 8051 -11874 0
7930 8053 -11876 0
7930 8055 -11878 0
7932 -11862 0
7932 8040 -11864 0
7932 8041 -11866 0
7932 8043 -11868 0
7932 8045 -11870 0
7932 8047 -11872 0
7932 8049 -11874 0
7932 8051 -11876 0
7932 8053 -11878 0
7932 8055 -11880 0
7934 -11864 0
7934 8040 -11866 0
7934 8041 -11868 0
7934 8043 -11870 0
7934 8045 -11872 0
7934 8047 -11874 0
7934 8049 -11876 0
7934 8051 -11878 0
7934 8053 -11880 0
7934 8055 -11882 0
7936 -11866 0
7936 8040 -11868 0
7936 8041 -11870 0
7936 8043 -11872 0
7936 8045 -11874 0
7936 8047 -11876 0
7936 8049 -11878 0
7936 8051 -11880 0
7936 8053 -11882 0
7936 8055 -11884 0
c (0<=(aux117 + aux124 - aux457))
-8055 11884 0
-8053 11882 0
-8051 11880 0
-8049 11878 0
-8047 11876 0
-8045 11874 0
-8043 11872 0
-8041 11870 0
-8040 11868 0
-7936 11884 0
-7936 -8055 11882 0
-7936 -8053 11880 0
-7936 -8051 11878 0
-7936 -8049 11876 0
-7936 -8047 11874 0
-7936 -8045 11872 0
-7936 -8043 11870 0
-7936 -8041 11868 0
-7936 -8040 11866 0
-7934 11882 0
-7934 -8055 11880 0
-7934 -8053 11878 0
-7934 -8051 11876 0
-7934 -8049 11874 0
-7934 -8047 11872 0
-7934 -8045 11870 0
-7934 -8043 11868 0
-7934 -8041 11866 0
-7934 -8040 11864 0
-7932 11880 0
-7932 -8055 11878 0
-7932 -8053 11876 0
-7932 -8051 11874 0
-7932 -8049 11872 0
-7932 -8047 11870 0
-7932 -8045 11868 0
-7932 -8043 11866 0
-7932 -8041 11864 0
-7932 -8040 11862 0
-7930 11878 0
-7930 -8055 11876 0
-7930 -8053 11874 0
-7930 -8051 11872 0
-7930 -8049 11870 0
-7930 -8047 11868 0
-7930 -8045 11866 0
-7930 -8043 11864 0
-7930 -8041 11862 0
-7930 -8040 11860 0
-7928 11876 0
-7928 -8055 11874 0
-7928 -8053 11872 0
-7928 -8051 11870 0
-7928 -8049 11868 0
-7928 -8047 11866 0
-7928 -8045 11864 0
-7928 -8043 11862 0
-7928 -8041 11860 0
-7928 -8040 11858 0
-7926 11874 0
-7926 -8055 11872 0
-7926 -8053 11870 0
-7926 -8051 11868 0
-7926 -8049 11866 0
-7926 -8047 11864 0
-7926 -8045 11862 0
-7926 -8043 11860 0
-7926 -8041 11858 0
-7926 -8040 11856 0
-7924 11872 0
-7924 -8055 11870 0
-7924 -8053 11868 0
-7924 -8051 11866 0
-7924 -8049 11864 0
-7924 -8047 11862 0
-7924 -8045 11860 0
-7924 -8043 11858 0
-7924 -8041 11856 0
-7924 -8040 11854 0
-7922 11870 0
-7922 -8055 11868 0
-7922 -8053 11866 0
-7922 -8051 11864 0
-7922 -8049 11862 0
-7922 -8047 11860 0
-7922 -8045 11858 0
-7922 -8043 11856 0
-7922 -8041 11854 0
-7922 -8040 11852 0
-7921 11868 0
-7921 -8055 11866 0
-7921 -8053 11864 0
-7921 -8051 11862 0
-7921 -8049 11860 0
-7921 -8047 11858 0
-7921 -8045 11856 0
-7921 -8043 11854 0
-7921 -8041 11852 0
-7921 -8040 11851 0
c ((aux118 + aux123 - aux458)<=0)
8023 -11886 0
8024 -11887 0
8026 -11889 0
8028 -11891 0
8030 -11893 0
8032 -11895 0
8034 -11897 0
8036 -11899 0
8038 -11901 0
7938 -11886 0
7938 8023 -11887 0
7938 8024 -11889 0
7938 8026 -11891 0
7938 8028 -11893 0
7938 8030 -11895 0
7938 8032 -11897 0
7938 8034 -11899 0
7938 8036 -11901 0
7938 8038 -11903 0
7939 -11887 0
7939 8023 -11889 0
7939 8024 -11891 0
7939 8026 -11893 0
7939 8028 -11895 0
7939 8030 -11897 0
7939 8032 -11899 0
7939 8034 -11901 0
7939 8036 -11903 0
7939 8038 -11905 0
7941 -11889 0
7941 8023 -11891 0
7941 8024 -11893 0
7941 8026 -11895 0
7941 8028 -11897 0
7941 8030 -11899 0
7941 8032 -11901 0
7941 8034 -11903 0
7941 8036 -11905 0
7941 8038 -11907 0
7943 -11891 0
7943 8023 -11893 0
7943 8024 -11895 0
7943 8026 -11897 0
7943 8028 -11899 0
7943 8030 -11901 0
7943 8032 -11903 0
7943 8034 -11905 0
7943 8036 -11907 0
7943 8038 -11909 0
7945 -11893 0
7945 8023 -11895 0
7945 8024 -11897 0
7945 8026 -11899 0
7945 8028 -11901 0
7945 8030 -11903 0
7945 8032 -11905 0
7945 8034 -11907 0
7945 8036 -11909 0
7945 8038 -11911 0
7947 -11895 0
7947 8023 -11897 0
7947 8024 -11899 0
7947 8026 -11901 0
7947 8028 -11903 0
7947 8030 -11905 0
7947 8032 -11907 0
7947 8034 -11909 0
7947 8036 -11911 0
7947 8038 -11913 0
7949 -11897 0
7949 8023 -11899 0
7949 8024 -11901 0
7949 8026 -11903 0
7949 8028 -11905 0
7949 8030 -11907 0
7949 8032 -11909 0
7949 8034 -11911 0
7949 8036 -11913 0
7949 8038 -11915 0
7951 -11899 0
7951 8023 -11901 0
7951 8024 -11903 0
7951 8026 -11905 0
7951 8028 -11907 0
7951 8030 -11909 0
7951 8032 -11911 0
7951 8034 -11913 0
7951 8036 -11915 0
7951 8038 -11917 0
7953 -11901 0
7953 8023 -11903 0
7953 8024 -11905 0
7953 8026 -11907 0
7953 8028 -11909 0
7953 8030 -11911 0
7953 8032 -11913 0
7953 8034 -11915 0
7953 8036 -11917 0
7953 8038 -11919 0
c (0<=(aux118 + aux123 - aux458))
-8038 11919 0
-8036 11917 0
-8034 11915 0
-8032 11913 0
-8030 11911 0
-8028 11909 0
-8026 11907 0
-8024 11905 0
-8023 11903 0
-7953 11919 0
-7953 -8038 11917 0
-7953 -8036 11915 0
-7953 -8034 11913 0
-7953 -8032 11911 0
-7953 -8030 11909 0
-7953 -8028 11907 0
-7953 -8026 11905 0
-7953 -8024 11903 0
-7953 -8023 11901 0
-7951 11917 0
-7951 -8038 11915 0
-7951 -8036 11913 0
-7951 -8034 11911 0
-7951 -8032 11909 0
-7951 -8030 11907 0
-7951 -8028 11905 0
-7951 -8026 11903 0
-7951 -8024 11901 0
-7951 -8023 11899 0
-7949 11915 0
-7949 -8038 11913 0
-7949 -8036 11911 0
-7949 -8034 11909 0
-7949 -8032 11907 0
-7949 -8030 11905 0
-7949 -8028 11903 0
-7949 -8026 11901 0
-7949 -8024 11899 0
-7949 -8023 11897 0
-7947 11913 0
-7947 -8038 11911 0
-7947 -8036 11909 0
-7947 -8034 11907 0
-7947 -8032 11905 0
-7947 -8030 11903 0
-7947 -8028 11901 0
-7947 -8026 11899 0
-7947 -8024 11897 0
-7947 -8023 11895 0
-7945 11911 0
-7945 -8038 11909 0
-7945 -8036 11907 0
-7945 -8034 11905 0
-7945 -8032 11903 0
-7945 -8030 11901 0
-7945 -8028 11899 0
-7945 -8026 11897 0
-7945 -8024 11895 0
-7945 -8023 11893 0
-7943 11909 0
-7943 -8038 11907 0
-7943 -8036 11905 0
-7943 -8034 11903 0
-7943 -8032 11901 0
-7943 -8030 11899 0
-7943 -8028 11897 0
-7943 -8026 11895 0
-7943 -8024 11893 0
-7943 -8023 11891 0
-7941 11907 0
-7941 -8038 11905 0
-7941 -8036 11903 0
-7941 -8034 11901 0
-7941 -8032 11899 0
-7941 -8030 11897 0
-7941 -8028 11895 0
-7941 -8026 11893 0
-7941 -8024 11891 0
-7941 -8023 11889 0
-7939 11905 0
-7939 -8038 11903 0
-7939 -8036 11901 0
-7939 -8034 11899 0
-7939 -8032 11897 0
-7939 -8030 11895 0
-7939 -8028 11893 0
-7939 -8026 11891 0
-7939 -8024 11889 0
-7939 -8023 11887 0
-7938 11903 0
-7938 -8038 11901 0
-7938 -8036 11899 0
-7938 -8034 11897 0
-7938 -8032 11895 0
-7938 -8030 11893 0
-7938 -8028 11891 0
-7938 -8026 11889 0
-7938 -8024 11887 0
-7938 -8023 11886 0
c ((aux121 + aux122 - aux459)<=0)
8006 -11921 0
8007 -11922 0
8009 -11924 0
8011 -11926 0
8013 -11928 0
8015 -11930 0
8017 -11932 0
8019 -11934 0
8021 -11936 0
7989 -11921 0
7989 8006 -11922 0
7989 8007 -11924 0
7989 8009 -11926 0
7989 8011 -11928 0
7989 8013 -11930 0
7989 8015 -11932 0
7989 8017 -11934 0
7989 8019 -11936 0
7989 8021 -11938 0
7990 -11922 0
7990 8006 -11924 0
7990 8007 -11926 0
7990 8009 -11928 0
7990 8011 -11930 0
7990 8013 -11932 0
7990 8015 -11934 0
7990 8017 -11936 0
7990 8019 -11938 0
7990 8021 -11940 0
7992 -11924 0
7992 8006 -11926 0
7992 8007 -11928 0
7992 8009 -11930 0
7992 8011 -11932 0
7992 8013 -11934 0
7992 8015 -11936 0
7992 8017 -11938 0
7992 8019 -11940 0
7992 8021 -11942 0
7994 -11926 0
7994 8006 -11928 0
7994 8007 -11930 0
7994 8009 -11932 0
7994 8011 -11934 0
7994 8013 -11936 0
7994 8015 -11938 0
7994 8017 -11940 0
7994 8019 -11942 0
7994 8021 -11944 0
7996 -11928 0
7996 8006 -11930 0
7996 8007 -11932 0
7996 8009 -11934 0
7996 8011 -11936 0
7996 8013 -11938 0
7996 8015 -11940 0
7996 8017 -11942 0
7996 8019 -11944 0
7996 8021 -11946 0
7998 -11930 0
7998 8006 -11932 0
7998 8007 -11934 0
7998 8009 -11936 0
7998 8011 -11938 0
7998 8013 -11940 0
7998 8015 -11942 0
7998 8017 -11944 0
7998 8019 -11946 0
7998 8021 -11948 0
8000 -11932 0
8000 8006 -11934 0
8000 8007 -11936 0
8000 8009 -11938 0
8000 8011 -11940 0
8000 8013 -11942 0
8000 8015 -11944 0
8000 8017 -11946 0
8000 8019 -11948 0
8000 8021 -11950 0
8002 -11934 0
8002 8006 -11936 0
8002 8007 -11938 0
8002 8009 -11940 0
8002 8011 -11942 0
8002 8013 -11944 0
8002 8015 -11946 0
8002 8017 -11948 0
8002 8019 -11950 0
8002 8021 -11952 0
8004 -11936 0
8004 8006 -11938 0
8004 8007 -11940 0
8004 8009 -11942 0
8004 8011 -11944 0
8004 8013 -11946 0
8004 8015 -11948 0
8004 8017 -11950 0
8004 8019 -11952 0
8004 8021 -11954 0
c (0<=(aux121 + aux122 - aux459))
-8021 11954 0
-8019 11952 0
-8017 11950 0
-8015 11948 0
-8013 11946 0
-8011 11944 0
-8009 11942 0
-8007 11940 0
-8006 11938 0
-8004 11954 0
-8004 -8021 11952 0
-8004 -8019 11950 0
-8004 -8017 11948 0
-8004 -8015 11946 0
-8004 -8013 11944 0
-8004 -8011 11942 0
-8004 -8009 11940 0
-8004 -8007 11938 0
-8004 -8006 11936 0
-8002 11952 0
-8002 -8021 11950 0
-8002 -8019 11948 0
-8002 -8017 11946 0
-8002 -8015 11944 0
-8002 -8013 11942 0
-8002 -8011 11940 0
-8002 -8009 11938 0
-8002 -8007 11936 0
-8002 -8006 11934 0
-8000 11950 0
-8000 -8021 11948 0
-8000 -8019 11946 0
-8000 -8017 11944 0
-8000 -8015 11942 0
-8000 -8013 11940 0
-8000 -8011 11938 0
-8000 -8009 11936 0
-8000 -8007 11934 0
-8000 -8006 11932 0
-7998 11948 0
-7998 -8021 11946 0
-7998 -8019 11944 0
-7998 -8017 11942 0
-7998 -8015 11940 0
-7998 -8013 11938 0
-7998 -8011 11936 0
-7998 -8009 11934 0
-7998 -8007 11932 0
-7998 -8006 11930 0
-7996 11946 0
-7996 -8021 11944 0
-7996 -8019 11942 0
-7996 -8017 11940 0
-7996 -8015 11938 0
-7996 -8013 11936 0
-7996 -8011 11934 0
-7996 -8009 11932 0
-7996 -8007 11930 0
-7996 -8006 11928 0
-7994 11944 0
-7994 -8021 11942 0
-7994 -8019 11940 0
-7994 -8017 11938 0
-7994 -8015 11936 0
-7994 -8013 11934 0
-7994 -8011 11932 0
-7994 -8009 11930 0
-7994 -8007 11928 0
-7994 -8006 11926 0
-7992 11942 0
-7992 -8021 11940 0
-7992 -8019 11938 0
-7992 -8017 11936 0
-7992 -8015 11934 0
-7992 -8013 11932 0
-7992 -8011 11930 0
-7992 -8009 11928 0
-7992 -8007 11926 0
-7992 -8006 11924 0
-7990 11940 0
-7990 -8021 11938 0
-7990 -8019 11936 0
-7990 -8017 11934 0
-7990 -8015 11932 0
-7990 -8013 11930 0
-7990 -8011 11928 0
-7990 -8009 11926 0
-7990 -8007 11924 0
-7990 -8006 11922 0
-7989 11938 0
-7989 -8021 11936 0
-7989 -8019 11934 0
-7989 -8017 11932 0
-7989 -8015 11930 0
-7989 -8013 11928 0
-7989 -8011 11926 0
-7989 -8009 11924 0
-7989 -8007 11922 0
-7989 -8006 11921 0
c ((aux119 + aux456 - aux460)<=0)
11818 -11956 0
11819 -11957 0
11821 -11959 0
11823 -11961 0
11825 -11963 0
11827 -11965 0
11829 -11967 0
11831 -11969 0
11833 -11971 0
11835 -11973 0
11837 -11975 0
11839 -11977 0
11841 -11979 0
11843 -11981 0
11845 -11983 0
11847 -11985 0
11849 -11987 0
7955 -11956 0
7955 11818 -11957 0
7955 11819 -11959 0
7955 11821 -11961 0
7955 11823 -11963 0
7955 11825 -11965 0
7955 11827 -11967 0
7955 11829 -11969 0
7955 11831 -11971 0
7955 11833 -11973 0
7955 11835 -11975 0
7955 11837 -11977 0
7955 11839 -11979 0
7955 11841 -11981 0
7955 11843 -11983 0
7955 11845 -11985 0
7955 11847 -11987 0
7955 11849 -11989 0
7956 -11957 0
7956 11818 -11959 0
7956 11819 -11961 0
7956 11821 -11963 0
7956 11823 -11965 0
7956 11825 -11967 0
7956 11827 -11969 0
7956 11829 -11971 0
7956 11831 -11973 0
7956 11833 -11975 0
7956 11835 -11977 0
7956 11837 -11979 0
7956 11839 -11981 0
7956 11841 -11983 0
7956 11843 -11985 0
7956 11845 -11987 0
7956 11847 -11989 0
7956 11849 -11991 0
7958 -11959 0
7958 11818 -11961 0
7958 11819 -11963 0
7958 11821 -11965 0
7958 11823 -11967 0
7958 11825 -11969 0
7958 11827 -11971 0
7958 11829 -11973 0
7958 11831 -11975 0
7958 11833 -11977 0
7958 11835 -11979 0
7958 11837 -11981 0
7958 11839 -11983 0
7958 11841 -11985 0
7958 11843 -11987 0
7958 11845 -11989 0
7958 11847 -11991 0
7958 11849 -11993 0
7960 -11961 0
7960 11818 -11963 0
7960 11819 -11965 0
7960 11821 -11967 0
7960 11823 -11969 0
7960 11825 -11971 0
7960 11827 -11973 0
7960 11829 -11975 0
7960 11831 -11977 0
7960 11833 -11979 0
7960 11835 -11981 0
7960 11837 -11983 0
7960 11839 -11985 0
7960 11841 -11987 0
7960 11843 -11989 0
7960 11845 -11991 0
7960 11847 -11993 0
7960 11849 -11995 0
7962 -11963 0
7962 11818 -11965 0
7962 11819 -11967 0
7962 11821 -11969 0
7962 11823 -11971 0
7962 11825 -11973 0
7962 11827 -11975 0
7962 11829 -11977 0
7962 11831 -11979 0
7962 11833 -11981 0
7962 11835 -11983 0
7962 11837 -11985 0
7962 11839 -11987 0
7962 11841 -11989 0
7962 11843 -11991 0
7962 11845 -11993 0
7962 11847 -11995 0
7962 11849 -11997 0
7964 -11965 0
7964 11818 -11967 0
7964 11819 -11969 0
7964 11821 -11971 0
7964 11823 -11973 0
7964 11825 -11975 0
7964 11827 -11977 0
7964 11829 -11979 0
7964 11831 -11981 0
7964 11833 -11983 0
7964 11835 -11985 0
7964 11837 -11987 0
7964 11839 -11989 0
7964 11841 -11991 0
7964 11843 -11993 0
7964 11845 -11995 0
7964 11847 -11997 0
7964 11849 -11999 0
7966 -11967 0
7966 11818 -11969 0
7966 11819 -11971 0
7966 11821 -11973 0
7966 11823 -11975 0
7966 11825 -11977 0
7966 11827 -11979 0
7966 11829 -11981 0
7966 11831 -11983 0
7966 11833 -11985 0
7966 11835 -11987 0
7966 11837 -11989 0
7966 11839 -11991 0
7966 11841 -11993 0
7966 11843 -11995 0
7966 11845 -11997 0
7966 11847 -11999 0
7966 11849 -12001 0
7968 -11969 0
7968 11818 -11971 0
7968 11819 -11973 0
7968 11821 -11975 0
7968 11823 -11977 0
7968 11825 -11979 0
7968 11827 -11981 0
7968 11829 -11983 0
7968 11831 -11985 0
7968 11833 -11987 0
7968 11835 -11989 0
7968 11837 -11991 0
7968 11839 -11993 0
7968 11841 -11995 0
7968 11843 -11997 0
7968 11845 -11999 0
7968 11847 -12001 0
7968 11849 -12003 0
7970 -11971 0
7970 11818 -11973 0
7970 11819 -11975 0
7970 11821 -11977 0
7970 11823 -11979 0
7970 11825 -11981 0
7970 11827 -11983 0
7970 11829 -11985 0
7970 11831 -11987 0
7970 11833 -11989 0
7970 11835 -11991 0
7970 11837 -11993 0
7970 11839 -11995 0
7970 11841 -11997 0
7970 11843 -11999 0
7970 11845 -12001 0
7970 11847 -12003 0
7970 11849 -12005 0
c (0<=(aux119 + aux456 - aux460))
-11849 12005 0
-11847 12003 0
-11845 12001 0
-11843 11999 0
-11841 11997 0
-11839 11995 0
-11837 11993 0
-11835 11991 0
-11833 11989 0
-11831 11987 0
-11829 11985 0
-11827 11983 0
-11825 11981 0
-11823 11979 0
-11821 11977 0
-11819 11975 0
-11818 11973 0
-7970 12005 0
-7970 -11849 12003 0
-7970 -11847 12001 0
-7970 -11845 11999 0
-7970 -11843 11997 0
-7970 -11841 11995 0
-7970 -11839 11993 0
-7970 -11837 11991 0
-7970 -11835 11989 0
-7970 -11833 11987 0
-7970 -11831 11985 0
-7970 -11829 11983 0
-7970 -11827 11981 0
-7970 -11825 11979 0
-7970 -11823 11977 0
-7970 -11821 11975 0
-7970 -11819 11973 0
-7970 -11818 11971 0
-7968 12003 0
-7968 -11849 12001 0
-7968 -11847 11999 0
-7968 -11845 11997 0
-7968 -11843 11995 0
-7968 -11841 11993 0
-7968 -11839 11991 0
-7968 -11837 11989 0
-7968 -11835 11987 0
-7968 -11833 11985 0
-7968 -11831 11983 0
-7968 -11829 11981 0
-7968 -11827 11979 0
-7968 -11825 11977 0
-7968 -11823 11975 0
-7968 -11821 11973 0
-7968 -11819 11971 0
-7968 -11818 11969 0
-7966 12001 0
-7966 -11849 11999 0
-7966 -11847 11997 0
-7966 -11845 11995 0
-7966 -11843 11993 0
-7966 -11841 11991 0
-7966 -11839 11989 0
-7966 -11837 11987 0
-7966 -11835 11985 0
-7966 -11833 11983 0
-7966 -11831 11981 0
-7966 -11829 11979 0
-7966 -11827 11977 0
-7966 -11825 11975 0
-7966 -11823 11973 0
-7966 -11821 11971 0
-7966 -11819 11969 0
-7966 -11818 11967 0
-7964 11999 0
-7964 -11849 11997 0
-7964 -11847 11995 0
-7964 -11845 11993 0
-7964 -11843 11991 0
-7964 -11841 11989 0
-7964 -11839 11987 0
-7964 -11837 11985 0
-7964 -11835 11983 0
-7964 -11833 11981 0
-7964 -11831 11979 0
-7964 -11829 11977 0
-7964 -11827 11975 0
-7964 -11825 11973 0
-7964 -11823 11971 0
-7964 -11821 11969 0
-7964 -11819 11967 0
-7964 -11818 11965 0
-7962 11997 0
-7962 -11849 11995 0
-7962 -11847 11993 0
-7962 -11845 11991 0
-7962 -11843 11989 0
-7962 -11841 11987 0
-7962 -11839 11985 0
-7962 -11837 11983 0
-7962 -11835 11981 0
-7962 -11833 11979 0
-7962 -11831 11977 0
-7962 -11829 11975 0
-7962 -11827 11973 0
-7962 -11825 11971 0
-7962 -11823 11969 0
-7962 -11821 11967 0
-7962 -11819 11965 0
-7962 -11818 11963 0
-7960 11995 0
-7960 -11849 11993 0
-7960 -11847 11991 0
-7960 -11845 11989 0
-7960 -11843 11987 0
-7960 -11841 11985 0
-7960 -11839 11983 0
-7960 -11837 11981 0
-7960 -11835 11979 0
-7960 -11833 11977 0
-7960 -11831 11975 0
-7960 -11829 11973 0
-7960 -11827 11971 0
-7960 -11825 11969 0
-7960 -11823 11967 0
-7960 -11821 11965 0
-7960 -11819 11963 0
-7960 -11818 11961 0
-7958 11993 0
-7958 -11849 11991 0
-7958 -11847 11989 0
-7958 -11845 11987 0
-7958 -11843 11985 0
-7958 -11841 11983 0
-7958 -11839 11981 0
-7958 -11837 11979 0
-7958 -11835 11977 0
-7958 -11833 11975 0
-7958 -11831 11973 0
-7958 -11829 11971 0
-7958 -11827 11969 0
-7958 -11825 11967 0
-7958 -11823 11965 0
-7958 -11821 11963 0
-7958 -11819 11961 0
-7958 -11818 11959 0
-7956 11991 0
-7956 -11849 11989 0
-7956 -11847 11987 0
-7956 -11845 11985 0
-7956 -11843 11983 0
-7956 -11841 11981 0
-7956 -11839 11979 0
-7956 -11837 11977 0
-7956 -11835 11975 0
-7956 -11833 11973 0
-7956 -11831 11971 0
-7956 -11829 11969 0
-7956 -11827 11967 0
-7956 -11825 11965 0
-7956 -11823 11963 0
-7956 -11821 11961 0
-7956 -11819 11959 0
-7956 -11818 11957 0
-7955 11989 0
-7955 -11849 11987 0
-7955 -11847 11985 0
-7955 -11845 11983 0
-7955 -11843 11981 0
-7955 -11841 11979 0
-7955 -11839 11977 0
-7955 -11837 11975 0
-7955 -11835 11973 0
-7955 -11833 11971 0
-7955 -11831 11969 0
-7955 -11829 11967 0
-7955 -11827 11965 0
-7955 -11825 11963 0
-7955 -11823 11961 0
-7955 -11821 11959 0
-7955 -11819 11957 0
-7955 -11818 11956 0
c ((aux458 + aux459 - aux461)<=0)
11921 -12007 0
11922 -12008 0
11924 -12010 0
11926 -12012 0
11928 -12014 0
11930 -12016 0
11932 -12018 0
11934 -12020 0
11936 -12022 0
11938 -12024 0
11940 -12026 0
11942 -12028 0
11944 -12030 0
11946 -12032 0
11948 -12034 0
11950 -12036 0
11952 -12038 0
11954 -12040 0
11886 -12007 0
11886 11921 -12008 0
11886 11922 -12010 0
11886 11924 -12012 0
11886 11926 -12014 0
11886 11928 -12016 0
11886 11930 -12018 0
11886 11932 -12020 0
11886 11934 -12022 0
11886 11936 -12024 0
11886 11938 -12026 0
11886 11940 -12028 0
11886 11942 -12030 0
11886 11944 -12032 0
11886 11946 -12034 0
11886 11948 -12036 0
11886 11950 -12038 0
11886 11952 -12040 0
11886 11954 -12042 0
11887 -12008 0
11887 11921 -12010 0
11887 11922 -12012 0
11887 11924 -12014 0
11887 11926 -12016 0
11887 11928 -12018 0
11887 11930 -12020 0
11887 11932 -12022 0
11887 11934 -12024 0
11887 11936 -12026 0
11887 11938 -12028 0
11887 11940 -12030 0
11887 11942 -12032 0
11887 11944 -12034 0
11887 11946 -12036 0
11887 11948 -12038 0
11887 11950 -12040 0
11887 11952 -12042 0
11887 11954 -12044 0
11889 -12010 0
11889 11921 -12012 0
11889 11922 -12014 0
11889 11924 -12016 0
11889 11926 -12018 0
11889 11928 -12020 0
11889 11930 -12022 0
11889 11932 -12024 0
11889 11934 -12026 0
11889 11936 -12028 0
11889 11938 -12030 0
11889 11940 -12032 0
11889 11942 -12034 0
11889 11944 -12036 0
11889 11946 -12038 0
11889 11948 -12040 0
11889 11950 -12042 0
11889 11952 -12044 0
11889 11954 -12046 0
11891 -12012 0
11891 11921 -12014 0
11891 11922 -12016 0
11891 11924 -12018 0
11891 11926 -12020 0
11891 11928 -12022 0
11891 11930 -12024 0
11891 11932 -12026 0
11891 11934 -12028 0
11891 11936 -12030 0
11891 11938 -12032 0
11891 11940 -12034 0
11891 11942 -12036 0
11891 11944 -12038 0
11891 11946 -12040 0
11891 11948 -12042 0
11891 11950 -12044 0
11891 11952 -12046 0
11891 11954 -12048 0
11893 -12014 0
11893 11921 -12016 0
11893 11922 -12018 0
11893 11924 -12020 0
11893 11926 -12022 0
11893 11928 -12024 0
11893 11930 -12026 0
11893 11932 -12028 0
11893 11934 -12030 0
11893 11936 -12032 0
11893 11938 -12034 0
11893 11940 -12036 0
11893 11942 -12038 0
11893 11944 -12040 0
11893 11946 -12042 0
11893 11948 -12044 0
11893 11950 -12046 0
11893 11952 -12048 0
11893 11954 -12050 0
11895 -12016 0
11895 11921 -12018 0
11895 11922 -12020 0
11895 11924 -12022 0
11895 11926 -12024 0
11895 11928 -12026 0
11895 11930 -12028 0
11895 11932 -12030 0
11895 11934 -12032 0
11895 11936 -12034 0
11895 11938 -12036 0
11895 11940 -12038 0
11895 11942 -12040 0
11895 11944 -12042 0
11895 11946 -12044 0
11895 11948 -12046 0
11895 11950 -12048 0
11895 11952 -12050 0
11895 11954 -12052 0
11897 -12018 0
11897 11921 -12020 0
11897 11922 -12022 0
11897 11924 -12024 0
11897 11926 -12026 0
11897 11928 -12028 0
11897 11930 -12030 0
11897 11932 -12032 0
11897 11934 -12034 0
11897 11936 -12036 0
11897 11938 -12038 0
11897 11940 -12040 0
11897 11942 -12042 0
11897 11944 -12044 0
11897 11946 -12046 0
11897 11948 -12048 0
11897 11950 -12050 0
11897 11952 -12052 0
11897 11954 -12054 0
11899 -12020 0
11899 11921 -12022 0
11899 11922 -12024 0
11899 11924 -12026 0
11899 11926 -12028 0
11899 11928 -12030 0
11899 11930 -12032 0
11899 11932 -12034 0
11899 11934 -12036 0
11899 11936 -12038 0
11899 11938 -12040 0
11899 11940 -12042 0
11899 11942 -12044 0
11899 11944 -12046 0
11899 11946 -12048 0
11899 11948 -12050 0
11899 11950 -12052 0
11899 11952 -12054 0
11899 11954 -12056 0
11901 -12022 0
11901 11921 -12024 0
11901 11922 -12026 0
11901 11924 -12028 0
11901 11926 -12030 0
11901 11928 -12032 0
11901 11930 -12034 0
11901 11932 -12036 0
11901 11934 -12038 0
11901 11936 -12040 0
11901 11938 -12042 0
11901 11940 -12044 0
11901 11942 -12046 0
11901 11944 -12048 0
11901 11946 -12050 0
11901 11948 -12052 0
11901 11950 -12054 0
11901 11952 -12056 0
11901 11954 -12058 0
11903 -12024 0
11903 11921 -12026 0
11903 11922 -12028 0
11903 11924 -12030 0
11903 11926 -12032 0
11903 11928 -12034 0
11903 11930 -12036 0
11903 11932 -12038 0
11903 11934 -12040 0
11903 11936 -12042 0
11903 11938 -12044 0
11903 11940 -12046 0
11903 11942 -12048 0
11903 11944 -12050 0
11903 11946 -12052 0
11903 11948 -12054 0
11903 11950 -12056 0
11903 11952 -12058 0
11903 11954 -12060 0
11905 -12026 0
11905 11921 -12028 0
11905 11922 -12030 0
11905 11924 -12032 0
11905 11926 -12034 0
11905 11928 -12036 0
11905 11930 -12038 0
11905 11932 -12040 0
11905 11934 -12042 0
11905 11936 -12044 0
11905 11938 -12046 0
11905 11940 -12048 0
11905 11942 -12050 0
11905 11944 -12052 0
11905 11946 -12054 0
11905 11948 -12056 0
11905 11950 -12058 0
11905 11952 -12060 0
11905 11954 -12062 0
11907 -12028 0
11907 11921 -12030 0
11907 11922 -12032 0
11907 11924 -12034 0
11907 11926 -12036 0
11907 11928 -12038 0
11907 11930 -12040 0
11907 11932 -12042 0
11907 11934 -12044 0
11907 11936 -12046 0
11907 11938 -12048 0
11907 11940 -12050 0
11907 11942 -12052 0
11907 11944 -12054 0
11907 11946 -12056 0
11907 11948 -12058 0
11907 11950 -12060 0
11907 11952 -12062 0
11907 11954 -12064 0
11909 -12030 0
11909 11921 -12032 0
11909 11922 -12034 0
11909 11924 -12036 0
11909 11926 -12038 0
11909 11928 -12040 0
11909 11930 -12042 0
11909 11932 -12044 0
11909 11934 -12046 0
11909 11936 -12048 0
11909 11938 -12050 0
11909 11940 -12052 0
11909 11942 -12054 0
11909 11944 -12056 0
11909 11946 -12058 0
11909 11948 -12060 0
11909 11950 -12062 0
11909 11952 -12064 0
11909 11954 -12066 0
11911 -12032 0
11911 11921 -12034 0
11911 11922 -12036 0
11911 11924 -12038 0
11911 11926 -12040 0
11911 11928 -12042 0
11911 11930 -12044 0
11911 11932 -12046 0
11911 11934 -12048 0
11911 11936 -12050 0
11911 11938 -12052 0
11911 11940 -12054 0
11911 11942 -12056 0
11911 11944 -12058 0
11911 11946 -12060 0
11911 11948 -12062 0
11911 11950 -12064 0
11911 11952 -12066 0
11911 11954 -12068 0
11913 -12034 0
11913 11921 -12036 0
11913 11922 -12038 0
11913 11924 -12040 0
11913 11926 -12042 0
11913 11928 -12044 0
11913 11930 -12046 0
11913 11932 -12048 0
11913 11934 -12050 0
11913 11936 -12052 0
11913 11938 -12054 0
11913 11940 -12056 0
11913 11942 -12058 0
11913 11944 -12060 0
11913 11946 -12062 0
11913 11948 -12064 0
11913 11950 -12066 0
11913 11952 -12068 0
11913 11954 -12070 0
11915 -12036 0
11915 11921 -12038 0
11915 11922 -12040 0
11915 11924 -12042 0
11915 11926 -12044 0
11915 11928 -12046 0
11915 11930 -12048 0
11915 11932 -12050 0
11915 11934 -12052 0
11915 11936 -12054 0
11915 11938 -12056 0
11915 11940 -12058 0
11915 11942 -12060 0
11915 11944 -12062 0
11915 11946 -12064 0
11915 11948 -12066 0
11915 11950 -12068 0
11915 11952 -12070 0
11915 11954 -12072 0
11917 -12038 0
11917 11921 -12040 0
11917 11922 -12042 0
11917 11924 -12044 0
11917 11926 -12046 0
11917 11928 -12048 0
11917 11930 -12050 0
11917 11932 -12052 0
11917 11934 -12054 0
11917 11936 -12056 0
11917 11938 -12058 0
11917 11940 -12060 0
11917 11942 -12062 0
11917 11944 -12064 0
11917 11946 -12066 0
11917 11948 -12068 0
11917 11950 -12070 0
11917 11952 -12072 0
11917 11954 -12074 0
11919 -12040 0
11919 11921 -12042 0
11919 11922 -12044 0
11919 11924 -12046 0
11919 11926 -12048 0
11919 11928 -12050 0
11919 11930 -12052 0
11919 11932 -12054 0
11919 11934 -12056 0
11919 11936 -12058 0
11919 11938 -12060 0
11919 11940 -12062 0
11919 11942 -12064 0
11919 11944 -12066 0
11919 11946 -12068 0
11919 11948 -12070 0
11919 11950 -12072 0
11919 11952 -12074 0
11919 11954 -12076 0
c (0<=(aux458 + aux459 - aux461))
-11954 12076 0
-11952 12074 0
-11950 12072 0
-11948 12070 0
-11946 12068 0
-11944 12066 0
-11942 12064 0
-11940 12062 0
-11938 12060 0
-11936 12058 0
-11934 12056 0
-11932 12054 0
-11930 12052 0
-11928 12050 0
-11926 12048 0
-11924 12046 0
-11922 12044 0
-11921 12042 0
-11919 12076 0
-11919 -11954 12074 0
-11919 -11952 12072 0
-11919 -11950 12070 0
-11919 -11948 12068 0
-11919 -11946 12066 0
-11919 -11944 12064 0
-11919 -11942 12062 0
-11919 -11940 12060 0
-11919 -11938 12058 0
-11919 -11936 12056 0
-11919 -11934 12054 0
-11919 -11932 12052 0
-11919 -11930 12050 0
-11919 -11928 12048 0
-11919 -11926 12046 0
-11919 -11924 12044 0
-11919 -11922 12042 0
-11919 -11921 12040 0
-11917 12074 0
-11917 -11954 12072 0
-11917 -11952 12070 0
-11917 -11950 12068 0
-11917 -11948 12066 0
-11917 -11946 12064 0
-11917 -11944 12062 0
-11917 -11942 12060 0
-11917 -11940 12058 0
-11917 -11938 12056 0
-11917 -11936 12054 0
-11917 -11934 12052 0
-11917 -11932 12050 0
-11917 -11930 12048 0
-11917 -11928 12046 0
-11917 -11926 12044 0
-11917 -11924 12042 0
-11917 -11922 12040 0
-11917 -11921 12038 0
-11915 12072 0
-11915 -11954 12070 0
-11915 -11952 12068 0
-11915 -11950 12066 0
-11915 -11948 12064 0
-11915 -11946 12062 0
-11915 -11944 12060 0
-11915 -11942 12058 0
-11915 -11940 12056 0
-11915 -11938 12054 0
-11915 -11936 12052 0
-11915 -11934 12050 0
-11915 -11932 12048 0
-11915 -11930 12046 0
-11915 -11928 12044 0
-11915 -11926 12042 0
-11915 -11924 12040 0
-11915 -11922 12038 0
-11915 -11921 12036 0
-11913 12070 0
-11913 -11954 12068 0
-11913 -11952 12066 0
-11913 -11950 12064 0
-11913 -11948 12062 0
-11913 -11946 12060 0
-11913 -11944 12058 0
-11913 -11942 12056 0
-11913 -11940 12054 0
-11913 -11938 12052 0
-11913 -11936 12050 0
-11913 -11934 12048 0
-11913 -11932 12046 0
-11913 -11930 12044 0
-11913 -11928 12042 0
-11913 -11926 12040 0
-11913 -11924 12038 0
-11913 -11922 12036 0
-11913 -11921 12034 0
-11911 12068 0
-11911 -11954 12066 0
-11911 -11952 12064 0
-11911 -11950 12062 0
-11911 -11948 12060 0
-11911 -11946 12058 0
-11911 -11944 12056 0
-11911 -11942 12054 0
-11911 -11940 12052 0
-11911 -11938 12050 0
-11911 -11936 12048 0
-11911 -11934 12046 0
-11911 -11932 12044 0
-11911 -11930 12042 0
-11911 -11928 12040 0
-11911 -11926 12038 0
-11911 -11924 12036 0
-11911 -11922 12034 0
-11911 -11921 12032 0
-11909 12066 0
-11909 -11954 12064 0
-11909 -11952 12062 0
-11909 -11950 12060 0
-11909 -11948 12058 0
-11909 -11946 12056 0
-11909 -11944 12054 0
-11909 -11942 12052 0
-11909 -11940 12050 0
-11909 -11938 12048 0
-11909 -11936 12046 0
-11909 -11934 12044 0
-11909 -11932 12042 0
-11909 -11930 12040 0
-11909 -11928 12038 0
-11909 -11926 12036 0
-11909 -11924 12034 0
-11909 -11922 12032 0
-11909 -11921 12030 0
-11907 12064 0
-11907 -11954 12062 0
-11907 -11952 12060 0
-11907 -11950 12058 0
-11907 -11948 12056 0
-11907 -11946 12054 0
-11907 -11944 12052 0
-11907 -11942 12050 0
-11907 -11940 12048 0
-11907 -11938 12046 0
-11907 -11936 12044 0
-11907 -11934 12042 0
-11907 -11932 12040 0
-11907 -11930 12038 0
-11907 -11928 12036 0
-11907 -11926 12034 0
-11907 -11924 12032 0
-11907 -11922 12030 0
-11907 -11921 12028 0
-11905 12062 0
-11905 -11954 12060 0
-11905 -11952 12058 0
-11905 -11950 12056 0
-11905 -11948 12054 0
-11905 -11946 12052 0
-11905 -11944 12050 0
-11905 -11942 12048 0
-11905 -11940 12046 0
-11905 -11938 12044 0
-11905 -11936 12042 0
-11905 -11934 12040 0
-11905 -11932 12038 0
-11905 -11930 12036 0
-11905 -11928 12034 0
-11905 -11926 12032 0
-11905 -11924 12030 0
-11905 -11922 12028 0
-11905 -11921 12026 0
-11903 12060 0
-11903 -11954 12058 0
-11903 -11952 12056 0
-11903 -11950 12054 0
-11903 -11948 12052 0
-11903 -11946 12050 0
-11903 -11944 12048 0
-11903 -11942 12046 0
-11903 -11940 12044 0
-11903 -11938 12042 0
-11903 -11936 12040 0
-11903 -11934 12038 0
-11903 -11932 12036 0
-11903 -11930 12034 0
-11903 -11928 12032 0
-11903 -11926 12030 0
-11903 -11924 12028 0
-11903 -11922 12026 0
-11903 -11921 12024 0
-11901 12058 0
-11901 -11954 12056 0
-11901 -11952 12054 0
-11901 -11950 12052 0
-11901 -11948 12050 0
-11901 -11946 12048 0
-11901 -11944 12046 0
-11901 -11942 12044 0
-11901 -11940 12042 0
-11901 -11938 12040 0
-11901 -11936 12038 0
-11901 -11934 12036 0
-11901 -11932 12034 0
-11901 -11930 12032 0
-11901 -11928 12030 0
-11901 -11926 12028 0
-11901 -11924 12026 0
-11901 -11922 12024 0
-11901 -11921 12022 0
-11899 12056 0
-11899 -11954 12054 0
-11899 -11952 12052 0
-11899 -11950 12050 0
-11899 -11948 12048 0
-11899 -11946 12046 0
-11899 -11944 12044 0
-11899 -11942 12042 0
-11899 -11940 12040 0
-11899 -11938 12038 0
-11899 -11936 12036 0
-11899 -11934 12034 0
-11899 -11932 12032 0
-11899 -11930 12030 0
-11899 -11928 12028 0
-11899 -11926 12026 0
-11899 -11924 12024 0
-11899 -11922 12022 0
-11899 -11921 12020 0
-11897 12054 0
-11897 -11954 12052 0
-11897 -11952 12050 0
-11897 -11950 12048 0
-11897 -11948 12046 0
-11897 -11946 12044 0
-11897 -11944 12042 0
-11897 -11942 12040 0
-11897 -11940 12038 0
-11897 -11938 12036 0
-11897 -11936 12034 0
-11897 -11934 12032 0
-11897 -11932 12030 0
-11897 -11930 12028 0
-11897 -11928 12026 0
-11897 -11926 12024 0
-11897 -11924 12022 0
-11897 -11922 12020 0
-11897 -11921 12018 0
-11895 12052 0
-11895 -11954 12050 0
-11895 -11952 12048 0
-11895 -11950 12046 0
-11895 -11948 12044 0
-11895 -11946 12042 0
-11895 -11944 12040 0
-11895 -11942 12038 0
-11895 -11940 12036 0
-11895 -11938 12034 0
-11895 -11936 12032 0
-11895 -11934 12030 0
-11895 -11932 12028 0
-11895 -11930 12026 0
-11895 -11928 12024 0
-11895 -11926 12022 0
-11895 -11924 12020 0
-11895 -11922 12018 0
-11895 -11921 12016 0
-11893 12050 0
-11893 -11954 12048 0
-11893 -11952 12046 0
-11893 -11950 12044 0
-11893 -11948 12042 0
-11893 -11946 12040 0
-11893 -11944 12038 0
-11893 -11942 12036 0
-11893 -11940 12034 0
-11893 -11938 12032 0
-11893 -11936 12030 0
-11893 -11934 12028 0
-11893 -11932 12026 0
-11893 -11930 12024 0
-11893 -11928 12022 0
-11893 -11926 12020 0
-11893 -11924 12018 0
-11893 -11922 12016 0
-11893 -11921 12014 0
-11891 12048 0
-11891 -11954 12046 0
-11891 -11952 12044 0
-11891 -11950 12042 0
-11891 -11948 12040 0
-11891 -11946 12038 0
-11891 -11944 12036 0
-11891 -11942 12034 0
-11891 -11940 12032 0
-11891 -11938 12030 0
-11891 -11936 12028 0
-11891 -11934 12026 0
-11891 -11932 12024 0
-11891 -11930 12022 0
-11891 -11928 12020 0
-11891 -11926 12018 0
-11891 -11924 12016 0
-11891 -11922 12014 0
-11891 -11921 12012 0
-11889 12046 0
-11889 -11954 12044 0
-11889 -11952 12042 0
-11889 -11950 12040 0
-11889 -11948 12038 0
-11889 -11946 12036 0
-11889 -11944 12034 0
-11889 -11942 12032 0
-11889 -11940 12030 0
-11889 -11938 12028 0
-11889 -11936 12026 0
-11889 -11934 12024 0
-11889 -11932 12022 0
-11889 -11930 12020 0
-11889 -11928 12018 0
-11889 -11926 12016 0
-11889 -11924 12014 0
-11889 -11922 12012 0
-11889 -11921 12010 0
-11887 12044 0
-11887 -11954 12042 0
-11887 -11952 12040 0
-11887 -11950 12038 0
-11887 -11948 12036 0
-11887 -11946 12034 0
-11887 -11944 12032 0
-11887 -11942 12030 0
-11887 -11940 12028 0
-11887 -11938 12026 0
-11887 -11936 12024 0
-11887 -11934 12022 0
-11887 -11932 12020 0
-11887 -11930 12018 0
-11887 -11928 12016 0
-11887 -11926 12014 0
-11887 -11924 12012 0
-11887 -11922 12010 0
-11887 -11921 12008 0
-11886 12042 0
-11886 -11954 12040 0
-11886 -11952 12038 0
-11886 -11950 12036 0
-11886 -11948 12034 0
-11886 -11946 12032 0
-11886 -11944 12030 0
-11886 -11942 12028 0
-11886 -11940 12026 0
-11886 -11938 12024 0
-11886 -11936 12022 0
-11886 -11934 12020 0
-11886 -11932 12018 0
-11886 -11930 12016 0
-11886 -11928 12014 0
-11886 -11926 12012 0
-11886 -11924 12010 0
-11886 -11922 12008 0
-11886 -11921 12007 0
c ((aux129 - aux462 + shift(variant_fields_00004_00007_00001, -1))<=0)
8109 -12078 0
8110 -12079 0
8112 -12081 0
8114 -12083 0
8116 -12085 0
8118 -12087 0
8120 -12089 0
8122 -12091 0
8124 -12093 0
5672 -12078 0
5672 8109 -12079 0
5672 8110 -12081 0
5672 8112 -12083 0
5672 8114 -12085 0
5672 8116 -12087 0
5672 8118 -12089 0
5672 8120 -12091 0
5672 8122 -12093 0
5672 8124 -12095 0
5673 -12079 0
5673 8109 -12081 0
5673 8110 -12083 0
5673 8112 -12085 0
5673 8114 -12087 0
5673 8116 -12089 0
5673 8118 -12091 0
5673 8120 -12093 0
5673 8122 -12095 0
5673 8124 -12097 0
5675 -12081 0
5675 8109 -12083 0
5675 8110 -12085 0
5675 8112 -12087 0
5675 8114 -12089 0
5675 8116 -12091 0
5675 8118 -12093 0
5675 8120 -12095 0
5675 8122 -12097 0
5675 8124 -12099 0
5677 -12083 0
5677 8109 -12085 0
5677 8110 -12087 0
5677 8112 -12089 0
5677 8114 -12091 0
5677 8116 -12093 0
5677 8118 -12095 0
5677 8120 -12097 0
5677 8122 -12099 0
5677 8124 -12101 0
5679 -12085 0
5679 8109 -12087 0
5679 8110 -12089 0
5679 8112 -12091 0
5679 8114 -12093 0
5679 8116 -12095 0
5679 8118 -12097 0
5679 8120 -12099 0
5679 8122 -12101 0
5679 8124 -12103 0
5681 -12087 0
5681 8109 -12089 0
5681 8110 -12091 0
5681 8112 -12093 0
5681 8114 -12095 0
5681 8116 -12097 0
5681 8118 -12099 0
5681 8120 -12101 0
5681 8122 -12103 0
5681 8124 -12105 0
5683 -12089 0
5683 8109 -12091 0
5683 8110 -12093 0
5683 8112 -12095 0
5683 8114 -12097 0
5683 8116 -12099 0
5683 8118 -12101 0
5683 8120 -12103 0
5683 8122 -12105 0
5683 8124 -12107 0
5685 -12091 0
5685 8109 -12093 0
5685 8110 -12095 0
5685 8112 -12097 0
5685 8114 -12099 0
5685 8116 -12101 0
5685 8118 -12103 0
5685 8120 -12105 0
5685 8122 -12107 0
5685 8124 -12109 0
c (0<=(aux129 - aux462 + shift(variant_fields_00004_00007_00001, -1)))
-8124 12109 0
-8122 12107 0
-8120 12105 0
-8118 12103 0
-8116 12101 0
-8114 12099 0
-8112 12097 0
-8110 12095 0
-8109 12093 0
-5685 12109 0
-5685 -8124 12107 0
-5685 -8122 12105 0
-5685 -8120 12103 0
-5685 -8118 12101 0
-5685 -8116 12099 0
-5685 -8114 12097 0
-5685 -8112 12095 0
-5685 -8110 12093 0
-5685 -8109 12091 0
-5683 12107 0
-5683 -8124 12105 0
-5683 -8122 12103 0
-5683 -8120 12101 0
-5683 -8118 12099 0
-5683 -8116 12097 0
-5683 -8114 12095 0
-5683 -8112 12093 0
-5683 -8110 12091 0
-5683 -8109 12089 0
-5681 12105 0
-5681 -8124 12103 0
-5681 -8122 12101 0
-5681 -8120 12099 0
-5681 -8118 12097 0
-5681 -8116 12095 0
-5681 -8114 12093 0
-5681 -8112 12091 0
-5681 -8110 12089 0
-5681 -8109 12087 0
-5679 12103 0
-5679 -8124 12101 0
-5679 -8122 12099 0
-5679 -8120 12097 0
-5679 -8118 12095 0
-5679 -8116 12093 0
-5679 -8114 12091 0
-5679 -8112 12089 0
-5679 -8110 12087 0
-5679 -8109 12085 0
-5677 12101 0
-5677 -8124 12099 0
-5677 -8122 12097 0
-5677 -8120 12095 0
-5677 -8118 12093 0
-5677 -8116 12091 0
-5677 -8114 12089 0
-5677 -8112 12087 0
-5677 -8110 12085 0
-5677 -8109 12083 0
-5675 12099 0
-5675 -8124 12097 0
-5675 -8122 12095 0
-5675 -8120 12093 0
-5675 -8118 12091 0
-5675 -8116 12089 0
-5675 -8114 12087 0
-5675 -8112 12085 0
-5675 -8110 12083 0
-5675 -8109 12081 0
-5673 12097 0
-5673 -8124 12095 0
-5673 -8122 12093 0
-5673 -8120 12091 0
-5673 -8118 12089 0
-5673 -8116 12087 0
-5673 -8114 12085 0
-5673 -8112 12083 0
-5673 -8110 12081 0
-5673 -8109 12079 0
-5672 12095 0
-5672 -8124 12093 0
-5672 -8122 12091 0
-5672 -8120 12089 0
-5672 -8118 12087 0
-5672 -8116 12085 0
-5672 -8114 12083 0
-5672 -8112 12081 0
-5672 -8110 12079 0
-5672 -8109 12078 0
c ((aux126 + aux133 - aux463)<=0)
8177 -12111 0
8178 -12112 0
8180 -12114 0
8182 -12116 0
8184 -12118 0
8186 -12120 0
8188 -12122 0
8190 -12124 0
8192 -12126 0
8058 -12111 0
8058 8177 -12112 0
8058 8178 -12114 0
8058 8180 -12116 0
8058 8182 -12118 0
8058 8184 -12120 0
8058 8186 -12122 0
8058 8188 -12124 0
8058 8190 -12126 0
8058 8192 -12128 0
8059 -12112 0
8059 8177 -12114 0
8059 8178 -12116 0
8059 8180 -12118 0
8059 8182 -12120 0
8059 8184 -12122 0
8059 8186 -12124 0
8059 8188 -12126 0
8059 8190 -12128 0
8059 8192 -12130 0
8061 -12114 0
8061 8177 -12116 0
8061 8178 -12118 0
8061 8180 -12120 0
8061 8182 -12122 0
8061 8184 -12124 0
8061 8186 -12126 0
8061 8188 -12128 0
8061 8190 -12130 0
8061 8192 -12132 0
8063 -12116 0
8063 8177 -12118 0
8063 8178 -12120 0
8063 8180 -12122 0
8063 8182 -12124 0
8063 8184 -12126 0
8063 8186 -12128 0
8063 8188 -12130 0
8063 8190 -12132 0
8063 8192 -12134 0
8065 -12118 0
8065 8177 -12120 0
8065 8178 -12122 0
8065 8180 -12124 0
8065 8182 -12126 0
8065 8184 -12128 0
8065 8186 -12130 0
8065 8188 -12132 0
8065 8190 -12134 0
8065 8192 -12136 0
8067 -12120 0
8067 8177 -12122 0
8067 8178 -12124 0
8067 8180 -12126 0
8067 8182 -12128 0
8067 8184 -12130 0
8067 8186 -12132 0
8067 8188 -12134 0
8067 8190 -12136 0
8067 8192 -12138 0
8069 -12122 0
8069 8177 -12124 0
8069 8178 -12126 0
8069 8180 -12128 0
8069 8182 -12130 0
8069 8184 -12132 0
8069 8186 -12134 0
8069 8188 -12136 0
8069 8190 -12138 0
8069 8192 -12140 0
8071 -12124 0
8071 8177 -12126 0
8071 8178 -12128 0
8071 8180 -12130 0
8071 8182 -12132 0
8071 8184 -12134 0
8071 8186 -12136 0
8071 8188 -12138 0
8071 8190 -12140 0
8071 8192 -12142 0
8073 -12126 0
8073 8177 -12128 0
8073 8178 -12130 0
8073 8180 -12132 0
8073 8182 -12134 0
8073 8184 -12136 0
8073 8186 -12138 0
8073 8188 -12140 0
8073 8190 -12142 0
8073 8192 -12144 0
c (0<=(aux126 + aux133 - aux463))
-8192 12144 0
-8190 12142 0
-8188 12140 0
-8186 12138 0
-8184 12136 0
-8182 12134 0
-8180 12132 0
-8178 12130 0
-8177 12128 0
-8073 12144 0
-8073 -8192 12142 0
-8073 -8190 12140 0
-8073 -8188 12138 0
-8073 -8186 12136 0
-8073 -8184 12134 0
-8073 -8182 12132 0
-8073 -8180 12130 0
-8073 -8178 12128 0
-8073 -8177 12126 0
-8071 12142 0
-8071 -8192 12140 0
-8071 -8190 12138 0
-8071 -8188 12136 0
-8071 -8186 12134 0
-8071 -8184 12132 0
-8071 -8182 12130 0
-8071 -8180 12128 0
-8071 -8178 12126 0
-8071 -8177 12124 0
-8069 12140 0
-8069 -8192 12138 0
-8069 -8190 12136 0
-8069 -8188 12134 0
-8069 -8186 12132 0
-8069 -8184 12130 0
-8069 -8182 12128 0
-8069 -8180 12126 0
-8069 -8178 12124 0
-8069 -8177 12122 0
-8067 12138 0
-8067 -8192 12136 0
-8067 -8190 12134 0
-8067 -8188 12132 0
-8067 -8186 12130 0
-8067 -8184 12128 0
-8067 -8182 12126 0
-8067 -8180 12124 0
-8067 -8178 12122 0
-8067 -8177 12120 0
-8065 12136 0
-8065 -8192 12134 0
-8065 -8190 12132 0
-8065 -8188 12130 0
-8065 -8186 12128 0
-8065 -8184 12126 0
-8065 -8182 12124 0
-8065 -8180 12122 0
-8065 -8178 12120 0
-8065 -8177 12118 0
-8063 12134 0
-8063 -8192 12132 0
-8063 -8190 12130 0
-8063 -8188 12128 0
-8063 -8186 12126 0
-8063 -8184 12124 0
-8063 -8182 12122 0
-8063 -8180 12120 0
-8063 -8178 12118 0
-8063 -8177 12116 0
-8061 12132 0
-8061 -8192 12130 0
-8061 -8190 12128 0
-8061 -8188 12126 0
-8061 -8186 12124 0
-8061 -8184 12122 0
-8061 -8182 12120 0
-8061 -8180 12118 0
-8061 -8178 12116 0
-8061 -8177 12114 0
-8059 12130 0
-8059 -8192 12128 0
-8059 -8190 12126 0
-8059 -8188 12124 0
-8059 -8186 12122 0
-8059 -8184 12120 0
-8059 -8182 12118 0
-8059 -8180 12116 0
-8059 -8178 12114 0
-8059 -8177 12112 0
-8058 12128 0
-8058 -8192 12126 0
-8058 -8190 12124 0
-8058 -8188 12122 0
-8058 -8186 12120 0
-8058 -8184 12118 0
-8058 -8182 12116 0
-8058 -8180 12114 0
-8058 -8178 12112 0
-8058 -8177 12111 0
c ((aux127 + aux132 - aux464)<=0)
8160 -12146 0
8161 -12147 0
8163 -12149 0
8165 -12151 0
8167 -12153 0
8169 -12155 0
8171 -12157 0
8173 -12159 0
8175 -12161 0
8075 -12146 0
8075 8160 -12147 0
8075 8161 -12149 0
8075 8163 -12151 0
8075 8165 -12153 0
8075 8167 -12155 0
8075 8169 -12157 0
8075 8171 -12159 0
8075 8173 -12161 0
8075 8175 -12163 0
8076 -12147 0
8076 8160 -12149 0
8076 8161 -12151 0
8076 8163 -12153 0
8076 8165 -12155 0
8076 8167 -12157 0
8076 8169 -12159 0
8076 8171 -12161 0
8076 8173 -12163 0
8076 8175 -12165 0
8078 -12149 0
8078 8160 -12151 0
8078 8161 -12153 0
8078 8163 -12155 0
8078 8165 -12157 0
8078 8167 -12159 0
8078 8169 -12161 0
8078 8171 -12163 0
8078 8173 -12165 0
8078 8175 -12167 0
8080 -12151 0
8080 8160 -12153 0
8080 8161 -12155 0
8080 8163 -12157 0
8080 8165 -12159 0
8080 8167 -12161 0
8080 8169 -12163 0
8080 8171 -12165 0
8080 8173 -12167 0
8080 8175 -12169 0
8082 -12153 0
8082 8160 -12155 0
8082 8161 -12157 0
8082 8163 -12159 0
8082 8165 -12161 0
8082 8167 -12163 0
8082 8169 -12165 0
8082 8171 -12167 0
8082 8173 -12169 0
8082 8175 -12171 0
8084 -12155 0
8084 8160 -12157 0
8084 8161 -12159 0
8084 8163 -12161 0
8084 8165 -12163 0
8084 8167 -12165 0
8084 8169 -12167 0
8084 8171 -12169 0
8084 8173 -12171 0
8084 8175 -12173 0
8086 -12157 0
8086 8160 -12159 0
8086 8161 -12161 0
8086 8163 -12163 0
8086 8165 -12165 0
8086 8167 -12167 0
8086 8169 -12169 0
8086 8171 -12171 0
8086 8173 -12173 0
8086 8175 -12175 0
8088 -12159 0
8088 8160 -12161 0
8088 8161 -12163 0
8088 8163 -12165 0
8088 8165 -12167 0
8088 8167 -12169 0
8088 8169 -12171 0
8088 8171 -12173 0
8088 8173 -12175 0
8088 8175 -12177 0
8090 -12161 0
8090 8160 -12163 0
8090 8161 -12165 0
8090 8163 -12167 0
8090 8165 -12169 0
8090 8167 -12171 0
8090 8169 -12173 0
8090 8171 -12175 0
8090 8173 -12177 0
8090 8175 -12179 0
c (0<=(aux127 + aux132 - aux464))
-8175 12179 0
-8173 12177 0
-8171 12175 0
-8169 12173 0
-8167 12171 0
-8165 12169 0
-8163 12167 0
-8161 12165 0
-8160 12163 0
-8090 12179 0
-8090 -8175 12177 0
-8090 -8173 12175 0
-8090 -8171 12173 0
-8090 -8169 12171 0
-8090 -8167 12169 0
-8090 -8165 12167 0
-8090 -8163 12165 0
-8090 -8161 12163 0
-8090 -8160 12161 0
-8088 12177 0
-8088 -8175 12175 0
-8088 -8173 12173 0
-8088 -8171 12171 0
-8088 -8169 12169 0
-8088 -8167 12167 0
-8088 -8165 12165 0
-8088 -8163 12163 0
-8088 -8161 12161 0
-8088 -8160 12159 0
-8086 12175 0
-8086 -8175 12173 0
-8086 -8173 12171 0
-8086 -8171 12169 0
-8086 -8169 12167 0
-8086 -8167 12165 0
-8086 -8165 12163 0
-8086 -8163 12161 0
-8086 -8161 12159 0
-8086 -8160 12157 0
-8084 12173 0
-8084 -8175 12171 0
-8084 -8173 12169 0
-8084 -8171 12167 0
-8084 -8169 12165 0
-8084 -8167 12163 0
-8084 -8165 12161 0
-8084 -8163 12159 0
-8084 -8161 12157 0
-8084 -8160 12155 0
-8082 12171 0
-8082 -8175 12169 0
-8082 -8173 12167 0
-8082 -8171 12165 0
-8082 -8169 12163 0
-8082 -8167 12161 0
-8082 -8165 12159 0
-8082 -8163 12157 0
-8082 -8161 12155 0
-8082 -8160 12153 0
-8080 12169 0
-8080 -8175 12167 0
-8080 -8173 12165 0
-8080 -8171 12163 0
-8080 -8169 12161 0
-8080 -8167 12159 0
-8080 -8165 12157 0
-8080 -8163 12155 0
-8080 -8161 12153 0
-8080 -8160 12151 0
-8078 12167 0
-8078 -8175 12165 0
-8078 -8173 12163 0
-8078 -8171 12161 0
-8078 -8169 12159 0
-8078 -8167 12157 0
-8078 -8165 12155 0
-8078 -8163 12153 0
-8078 -8161 12151 0
-8078 -8160 12149 0
-8076 12165 0
-8076 -8175 12163 0
-8076 -8173 12161 0
-8076 -8171 12159 0
-8076 -8169 12157 0
-8076 -8167 12155 0
-8076 -8165 12153 0
-8076 -8163 12151 0
-8076 -8161 12149 0
-8076 -8160 12147 0
-8075 12163 0
-8075 -8175 12161 0
-8075 -8173 12159 0
-8075 -8171 12157 0
-8075 -8169 12155 0
-8075 -8167 12153 0
-8075 -8165 12151 0
-8075 -8163 12149 0
-8075 -8161 12147 0
-8075 -8160 12146 0
c ((aux130 + aux131 - aux465)<=0)
8143 -12181 0
8144 -12182 0
8146 -12184 0
8148 -12186 0
8150 -12188 0
8152 -12190 0
8154 -12192 0
8156 -12194 0
8158 -12196 0
8126 -12181 0
8126 8143 -12182 0
8126 8144 -12184 0
8126 8146 -12186 0
8126 8148 -12188 0
8126 8150 -12190 0
8126 8152 -12192 0
8126 8154 -12194 0
8126 8156 -12196 0
8126 8158 -12198 0
8127 -12182 0
8127 8143 -12184 0
8127 8144 -12186 0
8127 8146 -12188 0
8127 8148 -12190 0
8127 8150 -12192 0
8127 8152 -12194 0
8127 8154 -12196 0
8127 8156 -12198 0
8127 8158 -12200 0
8129 -12184 0
8129 8143 -12186 0
8129 8144 -12188 0
8129 8146 -12190 0
8129 8148 -12192 0
8129 8150 -12194 0
8129 8152 -12196 0
8129 8154 -12198 0
8129 8156 -12200 0
8129 8158 -12202 0
8131 -12186 0
8131 8143 -12188 0
8131 8144 -12190 0
8131 8146 -12192 0
8131 8148 -12194 0
8131 8150 -12196 0
8131 8152 -12198 0
8131 8154 -12200 0
8131 8156 -12202 0
8131 8158 -12204 0
8133 -12188 0
8133 8143 -12190 0
8133 8144 -12192 0
8133 8146 -12194 0
8133 8148 -12196 0
8133 8150 -12198 0
8133 8152 -12200 0
8133 8154 -12202 0
8133 8156 -12204 0
8133 8158 -12206 0
8135 -12190 0
8135 8143 -12192 0
8135 8144 -12194 0
8135 8146 -12196 0
8135 8148 -12198 0
8135 8150 -12200 0
8135 8152 -12202 0
8135 8154 -12204 0
8135 8156 -12206 0
8135 8158 -12208 0
8137 -12192 0
8137 8143 -12194 0
8137 8144 -12196 0
8137 8146 -12198 0
8137 8148 -12200 0
8137 8150 -12202 0
8137 8152 -12204 0
8137 8154 -12206 0
8137 8156 -12208 0
8137 8158 -12210 0
8139 -12194 0
8139 8143 -12196 0
8139 8144 -12198 0
8139 8146 -12200 0
8139 8148 -12202 0
8139 8150 -12204 0
8139 8152 -12206 0
8139 8154 -12208 0
8139 8156 -12210 0
8139 8158 -12212 0
8141 -12196 0
8141 8143 -12198 0
8141 8144 -12200 0
8141 8146 -12202 0
8141 8148 -12204 0
8141 8150 -12206 0
8141 8152 -12208 0
8141 8154 -12210 0
8141 8156 -12212 0
8141 8158 -12214 0
c (0<=(aux130 + aux131 - aux465))
-8158 12214 0
-8156 12212 0
-8154 12210 0
-8152 12208 0
-8150 12206 0
-8148 12204 0
-8146 12202 0
-8144 12200 0
-8143 12198 0
-8141 12214 0
-8141 -8158 12212 0
-8141 -8156 12210 0
-8141 -8154 12208 0
-8141 -8152 12206 0
-8141 -8150 12204 0
-8141 -8148 12202 0
-8141 -8146 12200 0
-8141 -8144 12198 0
-8141 -8143 12196 0
-8139 12212 0
-8139 -8158 12210 0
-8139 -8156 12208 0
-8139 -8154 12206 0
-8139 -8152 12204 0
-8139 -8150 12202 0
-8139 -8148 12200 0
-8139 -8146 12198 0
-8139 -8144 12196 0
-8139 -8143 12194 0
-8137 12210 0
-8137 -8158 12208 0
-8137 -8156 12206 0
-8137 -8154 12204 0
-8137 -8152 12202 0
-8137 -8150 12200 0
-8137 -8148 12198 0
-8137 -8146 12196 0
-8137 -8144 12194 0
-8137 -8143 12192 0
-8135 12208 0
-8135 -8158 12206 0
-8135 -8156 12204 0
-8135 -8154 12202 0
-8135 -8152 12200 0
-8135 -8150 12198 0
-8135 -8148 12196 0
-8135 -8146 12194 0
-8135 -8144 12192 0
-8135 -8143 12190 0
-8133 12206 0
-8133 -8158 12204 0
-8133 -8156 12202 0
-8133 -8154 12200 0
-8133 -8152 12198 0
-8133 -8150 12196 0
-8133 -8148 12194 0
-8133 -8146 12192 0
-8133 -8144 12190 0
-8133 -8143 12188 0
-8131 12204 0
-8131 -8158 12202 0
-8131 -8156 12200 0
-8131 -8154 12198 0
-8131 -8152 12196 0
-8131 -8150 12194 0
-8131 -8148 12192 0
-8131 -8146 12190 0
-8131 -8144 12188 0
-8131 -8143 12186 0
-8129 12202 0
-8129 -8158 12200 0
-8129 -8156 12198 0
-8129 -8154 12196 0
-8129 -8152 12194 0
-8129 -8150 12192 0
-8129 -8148 12190 0
-8129 -8146 12188 0
-8129 -8144 12186 0
-8129 -8143 12184 0
-8127 12200 0
-8127 -8158 12198 0
-8127 -8156 12196 0
-8127 -8154 12194 0
-8127 -8152 12192 0
-8127 -8150 12190 0
-8127 -8148 12188 0
-8127 -8146 12186 0
-8127 -8144 12184 0
-8127 -8143 12182 0
-8126 12198 0
-8126 -8158 12196 0
-8126 -8156 12194 0
-8126 -8154 12192 0
-8126 -8152 12190 0
-8126 -8150 12188 0
-8126 -8148 12186 0
-8126 -8146 12184 0
-8126 -8144 12182 0
-8126 -8143 12181 0
c ((aux128 + aux462 - aux466)<=0)
12078 -12216 0
12079 -12217 0
12081 -12219 0
12083 -12221 0
12085 -12223 0
12087 -12225 0
12089 -12227 0
12091 -12229 0
12093 -12231 0
12095 -12233 0
12097 -12235 0
12099 -12237 0
12101 -12239 0
12103 -12241 0
12105 -12243 0
12107 -12245 0
12109 -12247 0
8092 -12216 0
8092 12078 -12217 0
8092 12079 -12219 0
8092 12081 -12221 0
8092 12083 -12223 0
8092 12085 -12225 0
8092 12087 -12227 0
8092 12089 -12229 0
8092 12091 -12231 0
8092 12093 -12233 0
8092 12095 -12235 0
8092 12097 -12237 0
8092 12099 -12239 0
8092 12101 -12241 0
8092 12103 -12243 0
8092 12105 -12245 0
8092 12107 -12247 0
8092 12109 -12249 0
8093 -12217 0
8093 12078 -12219 0
8093 12079 -12221 0
8093 12081 -12223 0
8093 12083 -12225 0
8093 12085 -12227 0
8093 12087 -12229 0
8093 12089 -12231 0
8093 12091 -12233 0
8093 12093 -12235 0
8093 12095 -12237 0
8093 12097 -12239 0
8093 12099 -12241 0
8093 12101 -12243 0
8093 12103 -12245 0
8093 12105 -12247 0
8093 12107 -12249 0
8093 12109 -12251 0
8095 -12219 0
8095 12078 -12221 0
8095 12079 -12223 0
8095 12081 -12225 0
8095 12083 -12227 0
8095 12085 -12229 0
8095 12087 -12231 0
8095 12089 -12233 0
8095 12091 -12235 0
8095 12093 -12237 0
8095 12095 -12239 0
8095 12097 -12241 0
8095 12099 -12243 0
8095 12101 -12245 0
8095 12103 -12247 0
8095 12105 -12249 0
8095 12107 -12251 0
8095 12109 -12253 0
8097 -12221 0
8097 12078 -12223 0
8097 12079 -12225 0
8097 12081 -12227 0
8097 12083 -12229 0
8097 12085 -12231 0
8097 12087 -12233 0
8097 12089 -12235 0
8097 12091 -12237 0
8097 12093 -12239 0
8097 12095 -12241 0
8097 12097 -12243 0
8097 12099 -12245 0
8097 12101 -12247 0
8097 12103 -12249 0
8097 12105 -12251 0
8097 12107 -12253 0
8097 12109 -12255 0
8099 -12223 0
8099 12078 -12225 0
8099 12079 -12227 0
8099 12081 -12229 0
8099 12083 -12231 0
8099 12085 -12233 0
8099 12087 -12235 0
8099 12089 -12237 0
8099 12091 -12239 0
8099 12093 -12241 0
8099 12095 -12243 0
8099 12097 -12245 0
8099 12099 -12247 0
8099 12101 -12249 0
8099 12103 -12251 0
8099 12105 -12253 0
8099 12107 -12255 0
8099 12109 -12257 0
8101 -12225 0
8101 12078 -12227 0
8101 12079 -12229 0
8101 12081 -12231 0
8101 12083 -12233 0
8101 12085 -12235 0
8101 12087 -12237 0
8101 12089 -12239 0
8101 12091 -12241 0
8101 12093 -12243 0
8101 12095 -12245 0
8101 12097 -12247 0
8101 12099 -12249 0
8101 12101 -12251 0
8101 12103 -12253 0
8101 12105 -12255 0
8101 12107 -12257 0
8101 12109 -12259 0
8103 -12227 0
8103 12078 -12229 0
8103 12079 -12231 0
8103 12081 -12233 0
8103 12083 -12235 0
8103 12085 -12237 0
8103 12087 -12239 0
8103 12089 -12241 0
8103 12091 -12243 0
8103 12093 -12245 0
8103 12095 -12247 0
8103 12097 -12249 0
8103 12099 -12251 0
8103 12101 -12253 0
8103 12103 -12255 0
8103 12105 -12257 0
8103 12107 -12259 0
8103 12109 -12261 0
8105 -12229 0
8105 12078 -12231 0
8105 12079 -12233 0
8105 12081 -12235 0
8105 12083 -12237 0
8105 12085 -12239 0
8105 12087 -12241 0
8105 12089 -12243 0
8105 12091 -12245 0
8105 12093 -12247 0
8105 12095 -12249 0
8105 12097 -12251 0
8105 12099 -12253 0
8105 12101 -12255 0
8105 12103 -12257 0
8105 12105 -12259 0
8105 12107 -12261 0
8105 12109 -12263 0
8107 -12231 0
8107 12078 -12233 0
8107 12079 -12235 0
8107 12081 -12237 0
8107 12083 -12239 0
8107 12085 -12241 0
8107 12087 -12243 0
8107 12089 -12245 0
8107 12091 -12247 0
8107 12093 -12249 0
8107 12095 -12251 0
8107 12097 -12253 0
8107 12099 -12255 0
8107 12101 -12257 0
8107 12103 -12259 0
8107 12105 -12261 0
8107 12107 -12263 0
8107 12109 -12265 0
c (0<=(aux128 + aux462 - aux466))
-12109 12265 0
-12107 12263 0
-12105 12261 0
-12103 12259 0
-12101 12257 0
-12099 12255 0
-12097 12253 0
-12095 12251 0
-12093 12249 0
-12091 12247 0
-12089 12245 0
-12087 12243 0
-12085 12241 0
-12083 12239 0
-12081 12237 0
-12079 12235 0
-12078 12233 0
-8107 12265 0
-8107 -12109 12263 0
-8107 -12107 12261 0
-8107 -12105 12259 0
-8107 -12103 12257 0
-8107 -12101 12255 0
-8107 -12099 12253 0
-8107 -12097 12251 0
-8107 -12095 12249 0
-8107 -12093 12247 0
-8107 -12091 12245 0
-8107 -12089 12243 0
-8107 -12087 12241 0
-8107 -12085 12239 0
-8107 -12083 12237 0
-8107 -12081 12235 0
-8107 -12079 12233 0
-8107 -12078 12231 0
-8105 12263 0
-8105 -12109 12261 0
-8105 -12107 12259 0
-8105 -12105 12257 0
-8105 -12103 12255 0
-8105 -12101 12253 0
-8105 -12099 12251 0
-8105 -12097 12249 0
-8105 -12095 12247 0
-8105 -12093 12245 0
-8105 -12091 12243 0
-8105 -12089 12241 0
-8105 -12087 12239 0
-8105 -12085 12237 0
-8105 -12083 12235 0
-8105 -12081 12233 0
-8105 -12079 12231 0
-8105 -12078 12229 0
-8103 12261 0
-8103 -12109 12259 0
-8103 -12107 12257 0
-8103 -12105 12255 0
-8103 -12103 12253 0
-8103 -12101 12251 0
-8103 -12099 12249 0
-8103 -12097 12247 0
-8103 -12095 12245 0
-8103 -12093 12243 0
-8103 -12091 12241 0
-8103 -12089 12239 0
-8103 -12087 12237 0
-8103 -12085 12235 0
-8103 -12083 12233 0
-8103 -12081 12231 0
-8103 -12079 12229 0
-8103 -12078 12227 0
-8101 12259 0
-8101 -12109 12257 0
-8101 -12107 12255 0
-8101 -12105 12253 0
-8101 -12103 12251 0
-8101 -12101 12249 0
-8101 -12099 12247 0
-8101 -12097 12245 0
-8101 -12095 12243 0
-8101 -12093 12241 0
-8101 -12091 12239 0
-8101 -12089 12237 0
-8101 -12087 12235 0
-8101 -12085 12233 0
-8101 -12083 12231 0
-8101 -12081 12229 0
-8101 -12079 12227 0
-8101 -12078 12225 0
-8099 12257 0
-8099 -12109 12255 0
-8099 -12107 12253 0
-8099 -12105 12251 0
-8099 -12103 12249 0
-8099 -12101 12247 0
-8099 -12099 12245 0
-8099 -12097 12243 0
-8099 -12095 12241 0
-8099 -12093 12239 0
-8099 -12091 12237 0
-8099 -12089 12235 0
-8099 -12087 12233 0
-8099 -12085 12231 0
-8099 -12083 12229 0
-8099 -12081 12227 0
-8099 -12079 12225 0
-8099 -12078 12223 0
-8097 12255 0
-8097 -12109 12253 0
-8097 -12107 12251 0
-8097 -12105 12249 0
-8097 -12103 12247 0
-8097 -12101 12245 0
-8097 -12099 12243 0
-8097 -12097 12241 0
-8097 -12095 12239 0
-8097 -12093 12237 0
-8097 -12091 12235 0
-8097 -12089 12233 0
-8097 -12087 12231 0
-8097 -12085 12229 0
-8097 -12083 12227 0
-8097 -12081 12225 0
-8097 -12079 12223 0
-8097 -12078 12221 0
-8095 12253 0
-8095 -12109 12251 0
-8095 -12107 12249 0
-8095 -12105 12247 0
-8095 -12103 12245 0
-8095 -12101 12243 0
-8095 -12099 12241 0
-8095 -12097 12239 0
-8095 -12095 12237 0
-8095 -12093 12235 0
-8095 -12091 12233 0
-8095 -12089 12231 0
-8095 -12087 12229 0
-8095 -12085 12227 0
-8095 -12083 12225 0
-8095 -12081 12223 0
-8095 -12079 12221 0
-8095 -12078 12219 0
-8093 12251 0
-8093 -12109 12249 0
-8093 -12107 12247 0
-8093 -12105 12245 0
-8093 -12103 12243 0
-8093 -12101 12241 0
-8093 -12099 12239 0
-8093 -12097 12237 0
-8093 -12095 12235 0
-8093 -12093 12233 0
-8093 -12091 12231 0
-8093 -12089 12229 0
-8093 -12087 12227 0
-8093 -12085 12225 0
-8093 -12083 12223 0
-8093 -12081 12221 0
-8093 -12079 12219 0
-8093 -12078 12217 0
-8092 12249 0
-8092 -12109 12247 0
-8092 -12107 12245 0
-8092 -12105 12243 0
-8092 -12103 12241 0
-8092 -12101 12239 0
-8092 -12099 12237 0
-8092 -12097 12235 0
-8092 -12095 12233 0
-8092 -12093 12231 0
-8092 -12091 12229 0
-8092 -12089 12227 0
-8092 -12087 12225 0
-8092 -12085 12223 0
-8092 -12083 12221 0
-8092 -12081 12219 0
-8092 -12079 12217 0
-8092 -12078 12216 0
c ((aux464 + aux465 - aux467)<=0)
12181 -12267 0
12182 -12268 0
12184 -12270 0
12186 -12272 0
12188 -12274 0
12190 -12276 0
12192 -12278 0
12194 -12280 0
12196 -12282 0
12198 -12284 0
12200 -12286 0
12202 -12288 0
12204 -12290 0
12206 -12292 0
12208 -12294 0
12210 -12296 0
12212 -12298 0
12214 -12300 0
12146 -12267 0
12146 12181 -12268 0
12146 12182 -12270 0
12146 12184 -12272 0
12146 12186 -12274 0
12146 12188 -12276 0
12146 12190 -12278 0
12146 12192 -12280 0
12146 12194 -12282 0
12146 12196 -12284 0
12146 12198 -12286 0
12146 12200 -12288 0
12146 12202 -12290 0
12146 12204 -12292 0
12146 12206 -12294 0
12146 12208 -12296 0
12146 12210 -12298 0
12146 12212 -12300 0
12146 12214 -12302 0
12147 -12268 0
12147 12181 -12270 0
12147 12182 -12272 0
12147 12184 -12274 0
12147 12186 -12276 0
12147 12188 -12278 0
12147 12190 -12280 0
12147 12192 -12282 0
12147 12194 -12284 0
12147 12196 -12286 0
12147 12198 -12288 0
12147 12200 -12290 0
12147 12202 -12292 0
12147 12204 -12294 0
12147 12206 -12296 0
12147 12208 -12298 0
12147 12210 -12300 0
12147 12212 -12302 0
12147 12214 -12304 0
12149 -12270 0
12149 12181 -12272 0
12149 12182 -12274 0
12149 12184 -12276 0
12149 12186 -12278 0
12149 12188 -12280 0
12149 12190 -12282 0
12149 12192 -12284 0
12149 12194 -12286 0
12149 12196 -12288 0
12149 12198 -12290 0
12149 12200 -12292 0
12149 12202 -12294 0
12149 12204 -12296 0
12149 12206 -12298 0
12149 12208 -12300 0
12149 12210 -12302 0
12149 12212 -12304 0
12149 12214 -12306 0
12151 -12272 0
12151 12181 -12274 0
12151 12182 -12276 0
12151 12184 -12278 0
12151 12186 -12280 0
12151 12188 -12282 0
12151 12190 -12284 0
12151 12192 -12286 0
12151 12194 -12288 0
12151 12196 -12290 0
12151 12198 -12292 0
12151 12200 -12294 0
12151 12202 -12296 0
12151 12204 -12298 0
12151 12206 -12300 0
12151 12208 -12302 0
12151 12210 -12304 0
12151 12212 -12306 0
12151 12214 -12308 0
12153 -12274 0
12153 12181 -12276 0
12153 12182 -12278 0
12153 12184 -12280 0
12153 12186 -12282 0
12153 12188 -12284 0
12153 12190 -12286 0
12153 12192 -12288 0
12153 12194 -12290 0
12153 12196 -12292 0
12153 12198 -12294 0
12153 12200 -12296 0
12153 12202 -12298 0
12153 12204 -12300 0
12153 12206 -12302 0
12153 12208 -12304 0
12153 12210 -12306 0
12153 12212 -12308 0
12153 12214 -12310 0
12155 -12276 0
12155 12181 -12278 0
12155 12182 -12280 0
12155 12184 -12282 0
12155 12186 -12284 0
12155 12188 -12286 0
12155 12190 -12288 0
12155 12192 -12290 0
12155 12194 -12292 0
12155 12196 -12294 0
12155 12198 -12296 0
12155 12200 -12298 0
12155 12202 -12300 0
12155 12204 -12302 0
12155 12206 -12304 0
12155 12208 -12306 0
12155 12210 -12308 0
12155 12212 -12310 0
12155 12214 -12312 0
12157 -12278 0
12157 12181 -12280 0
12157 12182 -12282 0
12157 12184 -12284 0
12157 12186 -12286 0
12157 12188 -12288 0
12157 12190 -12290 0
12157 12192 -12292 0
12157 12194 -12294 0
12157 12196 -12296 0
12157 12198 -12298 0
12157 12200 -12300 0
12157 12202 -12302 0
12157 12204 -12304 0
12157 12206 -12306 0
12157 12208 -12308 0
12157 12210 -12310 0
12157 12212 -12312 0
12157 12214 -12314 0
12159 -12280 0
12159 12181 -12282 0
12159 12182 -12284 0
12159 12184 -12286 0
12159 12186 -12288 0
12159 12188 -12290 0
12159 12190 -12292 0
12159 12192 -12294 0
12159 12194 -12296 0
12159 12196 -12298 0
12159 12198 -12300 0
12159 12200 -12302 0
12159 12202 -12304 0
12159 12204 -12306 0
12159 12206 -12308 0
12159 12208 -12310 0
12159 12210 -12312 0
12159 12212 -12314 0
12159 12214 -12316 0
12161 -12282 0
12161 12181 -12284 0
12161 12182 -12286 0
12161 12184 -12288 0
12161 12186 -12290 0
12161 12188 -12292 0
12161 12190 -12294 0
12161 12192 -12296 0
12161 12194 -12298 0
12161 12196 -12300 0
12161 12198 -12302 0
12161 12200 -12304 0
12161 12202 -12306 0
12161 12204 -12308 0
12161 12206 -12310 0
12161 12208 -12312 0
12161 12210 -12314 0
12161 12212 -12316 0
12161 12214 -12318 0
12163 -12284 0
12163 12181 -12286 0
12163 12182 -12288 0
12163 12184 -12290 0
12163 12186 -12292 0
12163 12188 -12294 0
12163 12190 -12296 0
12163 12192 -12298 0
12163 12194 -12300 0
12163 12196 -12302 0
12163 12198 -12304 0
12163 12200 -12306 0
12163 12202 -12308 0
12163 12204 -12310 0
12163 12206 -12312 0
12163 12208 -12314 0
12163 12210 -12316 0
12163 12212 -12318 0
12163 12214 -12320 0
12165 -12286 0
12165 12181 -12288 0
12165 12182 -12290 0
12165 12184 -12292 0
12165 12186 -12294 0
12165 12188 -12296 0
12165 12190 -12298 0
12165 12192 -12300 0
12165 12194 -12302 0
12165 12196 -12304 0
12165 12198 -12306 0
12165 12200 -12308 0
12165 12202 -12310 0
12165 12204 -12312 0
12165 12206 -12314 0
12165 12208 -12316 0
12165 12210 -12318 0
12165 12212 -12320 0
12165 12214 -12322 0
12167 -12288 0
12167 12181 -12290 0
12167 12182 -12292 0
12167 12184 -12294 0
12167 12186 -12296 0
12167 12188 -12298 0
12167 12190 -12300 0
12167 12192 -12302 0
12167 12194 -12304 0
12167 12196 -12306 0
12167 12198 -12308 0
12167 12200 -12310 0
12167 12202 -12312 0
12167 12204 -12314 0
12167 12206 -12316 0
12167 12208 -12318 0
12167 12210 -12320 0
12167 12212 -12322 0
12167 12214 -12324 0
12169 -12290 0
12169 12181 -12292 0
12169 12182 -12294 0
12169 12184 -12296 0
12169 12186 -12298 0
12169 12188 -12300 0
12169 12190 -12302 0
12169 12192 -12304 0
12169 12194 -12306 0
12169 12196 -12308 0
12169 12198 -12310 0
12169 12200 -12312 0
12169 12202 -12314 0
12169 12204 -12316 0
12169 12206 -12318 0
12169 12208 -12320 0
12169 12210 -12322 0
12169 12212 -12324 0
12169 12214 -12326 0
12171 -12292 0
12171 12181 -12294 0
12171 12182 -12296 0
12171 12184 -12298 0
12171 12186 -12300 0
12171 12188 -12302 0
12171 12190 -12304 0
12171 12192 -12306 0
12171 12194 -12308 0
12171 12196 -12310 0
12171 12198 -12312 0
12171 12200 -12314 0
12171 12202 -12316 0
12171 12204 -12318 0
12171 12206 -12320 0
12171 12208 -12322 0
12171 12210 -12324 0
12171 12212 -12326 0
12171 12214 -12328 0
12173 -12294 0
12173 12181 -12296 0
12173 12182 -12298 0
12173 12184 -12300 0
12173 12186 -12302 0
12173 12188 -12304 0
12173 12190 -12306 0
12173 12192 -12308 0
12173 12194 -12310 0
12173 12196 -12312 0
12173 12198 -12314 0
12173 12200 -12316 0
12173 12202 -12318 0
12173 12204 -12320 0
12173 12206 -12322 0
12173 12208 -12324 0
12173 12210 -12326 0
12173 12212 -12328 0
12173 12214 -12330 0
12175 -12296 0
12175 12181 -12298 0
12175 12182 -12300 0
12175 12184 -12302 0
12175 12186 -12304 0
12175 12188 -12306 0
12175 12190 -12308 0
12175 12192 -12310 0
12175 12194 -12312 0
12175 12196 -12314 0
12175 12198 -12316 0
12175 12200 -12318 0
12175 12202 -12320 0
12175 12204 -12322 0
12175 12206 -12324 0
12175 12208 -12326 0
12175 12210 -12328 0
12175 12212 -12330 0
12175 12214 -12332 0
12177 -12298 0
12177 12181 -12300 0
12177 12182 -12302 0
12177 12184 -12304 0
12177 12186 -12306 0
12177 12188 -12308 0
12177 12190 -12310 0
12177 12192 -12312 0
12177 12194 -12314 0
12177 12196 -12316 0
12177 12198 -12318 0
12177 12200 -12320 0
12177 12202 -12322 0
12177 12204 -12324 0
12177 12206 -12326 0
12177 12208 -12328 0
12177 12210 -12330 0
12177 12212 -12332 0
12177 12214 -12334 0
12179 -12300 0
12179 12181 -12302 0
12179 12182 -12304 0
12179 12184 -12306 0
12179 12186 -12308 0
12179 12188 -12310 0
12179 12190 -12312 0
12179 12192 -12314 0
12179 12194 -12316 0
12179 12196 -12318 0
12179 12198 -12320 0
12179 12200 -12322 0
12179 12202 -12324 0
12179 12204 -12326 0
12179 12206 -12328 0
12179 12208 -12330 0
12179 12210 -12332 0
12179 12212 -12334 0
12179 12214 -12336 0
c (0<=(aux464 + aux465 - aux467))
-12214 12336 0
-12212 12334 0
-12210 12332 0
-12208 12330 0
-12206 12328 0
-12204 12326 0
-12202 12324 0
-12200 12322 0
-12198 12320 0
-12196 12318 0
-12194 12316 0
-12192 12314 0
-12190 12312 0
-12188 12310 0
-12186 12308 0
-12184 12306 0
-12182 12304 0
-12181 12302 0
-12179 12336 0
-12179 -12214 12334 0
-12179 -12212 12332 0
-12179 -12210 12330 0
-12179 -12208 12328 0
-12179 -12206 12326 0
-12179 -12204 12324 0
-12179 -12202 12322 0
-12179 -12200 12320 0
-12179 -12198 12318 0
-12179 -12196 12316 0
-12179 -12194 12314 0
-12179 -12192 12312 0
-12179 -12190 12310 0
-12179 -12188 12308 0
-12179 -12186 12306 0
-12179 -12184 12304 0
-12179 -12182 12302 0
-12179 -12181 12300 0
-12177 12334 0
-12177 -12214 12332 0
-12177 -12212 12330 0
-12177 -12210 12328 0
-12177 -12208 12326 0
-12177 -12206 12324 0
-12177 -12204 12322 0
-12177 -12202 12320 0
-12177 -12200 12318 0
-12177 -12198 12316 0
-12177 -12196 12314 0
-12177 -12194 12312 0
-12177 -12192 12310 0
-12177 -12190 12308 0
-12177 -12188 12306 0
-12177 -12186 12304 0
-12177 -12184 12302 0
-12177 -12182 12300 0
-12177 -12181 12298 0
-12175 12332 0
-12175 -12214 12330 0
-12175 -12212 12328 0
-12175 -12210 12326 0
-12175 -12208 12324 0
-12175 -12206 12322 0
-12175 -12204 12320 0
-12175 -12202 12318 0
-12175 -12200 12316 0
-12175 -12198 12314 0
-12175 -12196 12312 0
-12175 -12194 12310 0
-12175 -12192 12308 0
-12175 -12190 12306 0
-12175 -12188 12304 0
-12175 -12186 12302 0
-12175 -12184 12300 0
-12175 -12182 12298 0
-12175 -12181 12296 0
-12173 12330 0
-12173 -12214 12328 0
-12173 -12212 12326 0
-12173 -12210 12324 0
-12173 -12208 12322 0
-12173 -12206 12320 0
-12173 -12204 12318 0
-12173 -12202 12316 0
-12173 -12200 12314 0
-12173 -12198 12312 0
-12173 -12196 12310 0
-12173 -12194 12308 0
-12173 -12192 12306 0
-12173 -12190 12304 0
-12173 -12188 12302 0
-12173 -12186 12300 0
-12173 -12184 12298 0
-12173 -12182 12296 0
-12173 -12181 12294 0
-12171 12328 0
-12171 -12214 12326 0
-12171 -12212 12324 0
-12171 -12210 12322 0
-12171 -12208 12320 0
-12171 -12206 12318 0
-12171 -12204 12316 0
-12171 -12202 12314 0
-12171 -12200 12312 0
-12171 -12198 12310 0
-12171 -12196 12308 0
-12171 -12194 12306 0
-12171 -12192 12304 0
-12171 -12190 12302 0
-12171 -12188 12300 0
-12171 -12186 12298 0
-12171 -12184 12296 0
-12171 -12182 12294 0
-12171 -12181 12292 0
-12169 12326 0
-12169 -12214 12324 0
-12169 -12212 12322 0
-12169 -12210 12320 0
-12169 -12208 12318 0
-12169 -12206 12316 0
-12169 -12204 12314 0
-12169 -12202 12312 0
-12169 -12200 12310 0
-12169 -12198 12308 0
-12169 -12196 12306 0
-12169 -12194 12304 0
-12169 -12192 12302 0
-12169 -12190 12300 0
-12169 -12188 12298 0
-12169 -12186 12296 0
-12169 -12184 12294 0
-12169 -12182 12292 0
-12169 -12181 12290 0
-12167 12324 0
-12167 -12214 12322 0
-12167 -12212 12320 0
-12167 -12210 12318 0
-12167 -12208 12316 0
-12167 -12206 12314 0
-12167 -12204 12312 0
-12167 -12202 12310 0
-12167 -12200 12308 0
-12167 -12198 12306 0
-12167 -12196 12304 0
-12167 -12194 12302 0
-12167 -12192 12300 0
-12167 -12190 12298 0
-12167 -12188 12296 0
-12167 -12186 12294 0
-12167 -12184 12292 0
-12167 -12182 12290 0
-12167 -12181 12288 0
-12165 12322 0
-12165 -12214 12320 0
-12165 -12212 12318 0
-12165 -12210 12316 0
-12165 -12208 12314 0
-12165 -12206 12312 0
-12165 -12204 12310 0
-12165 -12202 12308 0
-12165 -12200 12306 0
-12165 -12198 12304 0
-12165 -12196 12302 0
-12165 -12194 12300 0
-12165 -12192 12298 0
-12165 -12190 12296 0
-12165 -12188 12294 0
-12165 -12186 12292 0
-12165 -12184 12290 0
-12165 -12182 12288 0
-12165 -12181 12286 0
-12163 12320 0
-12163 -12214 12318 0
-12163 -12212 12316 0
-12163 -12210 12314 0
-12163 -12208 12312 0
-12163 -12206 12310 0
-12163 -12204 12308 0
-12163 -12202 12306 0
-12163 -12200 12304 0
-12163 -12198 12302 0
-12163 -12196 12300 0
-12163 -12194 12298 0
-12163 -12192 12296 0
-12163 -12190 12294 0
-12163 -12188 12292 0
-12163 -12186 12290 0
-12163 -12184 12288 0
-12163 -12182 12286 0
-12163 -12181 12284 0
-12161 12318 0
-12161 -12214 12316 0
-12161 -12212 12314 0
-12161 -12210 12312 0
-12161 -12208 12310 0
-12161 -12206 12308 0
-12161 -12204 12306 0
-12161 -12202 12304 0
-12161 -12200 12302 0
-12161 -12198 12300 0
-12161 -12196 12298 0
-12161 -12194 12296 0
-12161 -12192 12294 0
-12161 -12190 12292 0
-12161 -12188 12290 0
-12161 -12186 12288 0
-12161 -12184 12286 0
-12161 -12182 12284 0
-12161 -12181 12282 0
-12159 12316 0
-12159 -12214 12314 0
-12159 -12212 12312 0
-12159 -12210 12310 0
-12159 -12208 12308 0
-12159 -12206 12306 0
-12159 -12204 12304 0
-12159 -12202 12302 0
-12159 -12200 12300 0
-12159 -12198 12298 0
-12159 -12196 12296 0
-12159 -12194 12294 0
-12159 -12192 12292 0
-12159 -12190 12290 0
-12159 -12188 12288 0
-12159 -12186 12286 0
-12159 -12184 12284 0
-12159 -12182 12282 0
-12159 -12181 12280 0
-12157 12314 0
-12157 -12214 12312 0
-12157 -12212 12310 0
-12157 -12210 12308 0
-12157 -12208 12306 0
-12157 -12206 12304 0
-12157 -12204 12302 0
-12157 -12202 12300 0
-12157 -12200 12298 0
-12157 -12198 12296 0
-12157 -12196 12294 0
-12157 -12194 12292 0
-12157 -12192 12290 0
-12157 -12190 12288 0
-12157 -12188 12286 0
-12157 -12186 12284 0
-12157 -12184 12282 0
-12157 -12182 12280 0
-12157 -12181 12278 0
-12155 12312 0
-12155 -12214 12310 0
-12155 -12212 12308 0
-12155 -12210 12306 0
-12155 -12208 12304 0
-12155 -12206 12302 0
-12155 -12204 12300 0
-12155 -12202 12298 0
-12155 -12200 12296 0
-12155 -12198 12294 0
-12155 -12196 12292 0
-12155 -12194 12290 0
-12155 -12192 12288 0
-12155 -12190 12286 0
-12155 -12188 12284 0
-12155 -12186 12282 0
-12155 -12184 12280 0
-12155 -12182 12278 0
-12155 -12181 12276 0
-12153 12310 0
-12153 -12214 12308 0
-12153 -12212 12306 0
-12153 -12210 12304 0
-12153 -12208 12302 0
-12153 -12206 12300 0
-12153 -12204 12298 0
-12153 -12202 12296 0
-12153 -12200 12294 0
-12153 -12198 12292 0
-12153 -12196 12290 0
-12153 -12194 12288 0
-12153 -12192 12286 0
-12153 -12190 12284 0
-12153 -12188 12282 0
-12153 -12186 12280 0
-12153 -12184 12278 0
-12153 -12182 12276 0
-12153 -12181 12274 0
-12151 12308 0
-12151 -12214 12306 0
-12151 -12212 12304 0
-12151 -12210 12302 0
-12151 -12208 12300 0
-12151 -12206 12298 0
-12151 -12204 12296 0
-12151 -12202 12294 0
-12151 -12200 12292 0
-12151 -12198 12290 0
-12151 -12196 12288 0
-12151 -12194 12286 0
-12151 -12192 12284 0
-12151 -12190 12282 0
-12151 -12188 12280 0
-12151 -12186 12278 0
-12151 -12184 12276 0
-12151 -12182 12274 0
-12151 -12181 12272 0
-12149 12306 0
-12149 -12214 12304 0
-12149 -12212 12302 0
-12149 -12210 12300 0
-12149 -12208 12298 0
-12149 -12206 12296 0
-12149 -12204 12294 0
-12149 -12202 12292 0
-12149 -12200 12290 0
-12149 -12198 12288 0
-12149 -12196 12286 0
-12149 -12194 12284 0
-12149 -12192 12282 0
-12149 -12190 12280 0
-12149 -12188 12278 0
-12149 -12186 12276 0
-12149 -12184 12274 0
-12149 -12182 12272 0
-12149 -12181 12270 0
-12147 12304 0
-12147 -12214 12302 0
-12147 -12212 12300 0
-12147 -12210 12298 0
-12147 -12208 12296 0
-12147 -12206 12294 0
-12147 -12204 12292 0
-12147 -12202 12290 0
-12147 -12200 12288 0
-12147 -12198 12286 0
-12147 -12196 12284 0
-12147 -12194 12282 0
-12147 -12192 12280 0
-12147 -12190 12278 0
-12147 -12188 12276 0
-12147 -12186 12274 0
-12147 -12184 12272 0
-12147 -12182 12270 0
-12147 -12181 12268 0
-12146 12302 0
-12146 -12214 12300 0
-12146 -12212 12298 0
-12146 -12210 12296 0
-12146 -12208 12294 0
-12146 -12206 12292 0
-12146 -12204 12290 0
-12146 -12202 12288 0
-12146 -12200 12286 0
-12146 -12198 12284 0
-12146 -12196 12282 0
-12146 -12194 12280 0
-12146 -12192 12278 0
-12146 -12190 12276 0
-12146 -12188 12274 0
-12146 -12186 12272 0
-12146 -12184 12270 0
-12146 -12182 12268 0
-12146 -12181 12267 0
c ((SATLiteral(407) - aux468 + SATLiteral(677))<=0)
-677 -12338 0
-407 -12338 0
-407 -677 -12339 0
c (0<=(SATLiteral(407) - aux468 + SATLiteral(677)))
677 12339 0
407 12339 0
407 677 12338 0
c ((SATLiteral(1082) - aux469 + SATLiteral(2))<=0)
-2 -12341 0
-1082 -12341 0
-1082 -2 -12342 0
c (0<=(SATLiteral(1082) - aux469 + SATLiteral(2)))
2 12342 0
1082 12342 0
1082 2 12341 0
c (( - aux470 + SATLiteral(812) + SATLiteral(947))<=0)
-947 -12344 0
-812 -12344 0
-812 -947 -12345 0
c (0<=( - aux470 + SATLiteral(812) + SATLiteral(947)))
947 12345 0
812 12345 0
812 947 12344 0
c (( - aux471 + SATLiteral(542) + SATLiteral(272))<=0)
-272 -12347 0
-542 -12347 0
-542 -272 -12348 0
c (0<=( - aux471 + SATLiteral(542) + SATLiteral(272)))
272 12348 0
542 12348 0
542 272 12347 0
c ((aux471 - aux472 + SATLiteral(137))<=0)
12347 -12350 0
12348 -12351 0
-137 -12350 0
-137 12347 -12351 0
-137 12348 -12353 0
c (0<=(aux471 - aux472 + SATLiteral(137)))
-12348 12353 0
-12347 12351 0
137 12353 0
137 -12348 12351 0
137 -12347 12350 0
c ((aux468 + aux470 - aux473)<=0)
12344 -12355 0
12345 -12356 0
12338 -12355 0
12338 12344 -12356 0
12338 12345 -12358 0
12339 -12356 0
12339 12344 -12358 0
12339 12345 -12360 0
c (0<=(aux468 + aux470 - aux473))
-12345 12360 0
-12344 12358 0
-12339 12360 0
-12339 -12345 12358 0
-12339 -12344 12356 0
-12338 12358 0
-12338 -12345 12356 0
-12338 -12344 12355 0
c ((SATLiteral(408) - aux474 + SATLiteral(678))<=0)
-678 -12362 0
-408 -12362 0
-408 -678 -12363 0
c (0<=(SATLiteral(408) - aux474 + SATLiteral(678)))
678 12363 0
408 12363 0
408 678 12362 0
c ((SATLiteral(1083) - aux475 + SATLiteral(3))<=0)
-3 -12365 0
-1083 -12365 0
-1083 -3 -12366 0
c (0<=(SATLiteral(1083) - aux475 + SATLiteral(3)))
3 12366 0
1083 12366 0
1083 3 12365 0
c (( - aux476 + SATLiteral(813) + SATLiteral(948))<=0)
-948 -12368 0
-813 -12368 0
-813 -948 -12369 0
c (0<=( - aux476 + SATLiteral(813) + SATLiteral(948)))
948 12369 0
813 12369 0
813 948 12368 0
c (( - aux477 + SATLiteral(543) + SATLiteral(273))<=0)
-273 -12371 0
-543 -12371 0
-543 -273 -12372 0
c (0<=( - aux477 + SATLiteral(543) + SATLiteral(273)))
273 12372 0
543 12372 0
543 273 12371 0
c ((aux477 - aux478 + SATLiteral(138))<=0)
12371 -12374 0
12372 -12375 0
-138 -12374 0
-138 12371 -12375 0
-138 12372 -12377 0
c (0<=(aux477 - aux478 + SATLiteral(138)))
-12372 12377 0
-12371 12375 0
138 12377 0
138 -12372 12375 0
138 -12371 12374 0
c ((aux474 + aux476 - aux479)<=0)
12368 -12379 0
12369 -12380 0
12362 -12379 0
12362 12368 -12380 0
12362 12369 -12382 0
12363 -12380 0
12363 12368 -12382 0
12363 12369 -12384 0
c (0<=(aux474 + aux476 - aux479))
-12369 12384 0
-12368 12382 0
-12363 12384 0
-12363 -12369 12382 0
-12363 -12368 12380 0
-12362 12382 0
-12362 -12369 12380 0
-12362 -12368 12379 0
c ((SATLiteral(409) - aux480 + SATLiteral(679))<=0)
-679 -12386 0
-409 -12386 0
-409 -679 -12387 0
c (0<=(SATLiteral(409) - aux480 + SATLiteral(679)))
679 12387 0
409 12387 0
409 679 12386 0
c ((SATLiteral(1084) - aux481 + SATLiteral(4))<=0)
-4 -12389 0
-1084 -12389 0
-1084 -4 -12390 0
c (0<=(SATLiteral(1084) - aux481 + SATLiteral(4)))
4 12390 0
1084 12390 0
1084 4 12389 0
c (( - aux482 + SATLiteral(814) + SATLiteral(949))<=0)
-949 -12392 0
-814 -12392 0
-814 -949 -12393 0
c (0<=( - aux482 + SATLiteral(814) + SATLiteral(949)))
949 12393 0
814 12393 0
814 949 12392 0
c (( - aux483 + SATLiteral(544) + SATLiteral(274))<=0)
-274 -12395 0
-544 -12395 0
-544 -274 -12396 0
c (0<=( - aux483 + SATLiteral(544) + SATLiteral(274)))
274 12396 0
544 12396 0
544 274 12395 0
c ((aux483 - aux484 + SATLiteral(139))<=0)
12395 -12398 0
12396 -12399 0
-139 -12398 0
-139 12395 -12399 0
-139 12396 -12401 0
c (0<=(aux483 - aux484 + SATLiteral(139)))
-12396 12401 0
-12395 12399 0
139 12401 0
139 -12396 12399 0
139 -12395 12398 0
c ((aux480 + aux482 - aux485)<=0)
12392 -12403 0
12393 -12404 0
12386 -12403 0
12386 12392 -12404 0
12386 12393 -12406 0
12387 -12404 0
12387 12392 -12406 0
12387 12393 -12408 0
c (0<=(aux480 + aux482 - aux485))
-12393 12408 0
-12392 12406 0
-12387 12408 0
-12387 -12393 12406 0
-12387 -12392 12404 0
-12386 12406 0
-12386 -12393 12404 0
-12386 -12392 12403 0
c ((SATLiteral(410) - aux486 + SATLiteral(680))<=0)
-680 -12410 0
-410 -12410 0
-410 -680 -12411 0
c (0<=(SATLiteral(410) - aux486 + SATLiteral(680)))
680 12411 0
410 12411 0
410 680 12410 0
c ((SATLiteral(1085) - aux487 + SATLiteral(5))<=0)
-5 -12413 0
-1085 -12413 0
-1085 -5 -12414 0
c (0<=(SATLiteral(1085) - aux487 + SATLiteral(5)))
5 12414 0
1085 12414 0
1085 5 12413 0
c (( - aux488 + SATLiteral(815) + SATLiteral(950))<=0)
-950 -12416 0
-815 -12416 0
-815 -950 -12417 0
c (0<=( - aux488 + SATLiteral(815) + SATLiteral(950)))
950 12417 0
815 12417 0
815 950 12416 0
c (( - aux489 + SATLiteral(545) + SATLiteral(275))<=0)
-275 -12419 0
-545 -12419 0
-545 -275 -12420 0
c (0<=( - aux489 + SATLiteral(545) + SATLiteral(275)))
275 12420 0
545 12420 0
545 275 12419 0
c ((aux489 - aux490 + SATLiteral(140))<=0)
12419 -12422 0
12420 -12423 0
-140 -12422 0
-140 12419 -12423 0
-140 12420 -12425 0
c (0<=(aux489 - aux490 + SATLiteral(140)))
-12420 12425 0
-12419 12423 0
140 12425 0
140 -12420 12423 0
140 -12419 12422 0
c ((aux486 + aux488 - aux491)<=0)
12416 -12427 0
12417 -12428 0
12410 -12427 0
12410 12416 -12428 0
12410 12417 -12430 0
12411 -12428 0
12411 12416 -12430 0
12411 12417 -12432 0
c (0<=(aux486 + aux488 - aux491))
-12417 12432 0
-12416 12430 0
-12411 12432 0
-12411 -12417 12430 0
-12411 -12416 12428 0
-12410 12430 0
-12410 -12417 12428 0
-12410 -12416 12427 0
c ((SATLiteral(411) - aux492 + SATLiteral(681))<=0)
-681 -12434 0
-411 -12434 0
-411 -681 -12435 0
c (0<=(SATLiteral(411) - aux492 + SATLiteral(681)))
681 12435 0
411 12435 0
411 681 12434 0
c ((SATLiteral(1086) - aux493 + SATLiteral(6))<=0)
-6 -12437 0
-1086 -12437 0
-1086 -6 -12438 0
c (0<=(SATLiteral(1086) - aux493 + SATLiteral(6)))
6 12438 0
1086 12438 0
1086 6 12437 0
c (( - aux494 + SATLiteral(816) + SATLiteral(951))<=0)
-951 -12440 0
-816 -12440 0
-816 -951 -12441 0
c (0<=( - aux494 + SATLiteral(816) + SATLiteral(951)))
951 12441 0
816 12441 0
816 951 12440 0
c (( - aux495 + SATLiteral(546) + SATLiteral(276))<=0)
-276 -12443 0
-546 -12443 0
-546 -276 -12444 0
c (0<=( - aux495 + SATLiteral(546) + SATLiteral(276)))
276 12444 0
546 12444 0
546 276 12443 0
c ((aux495 - aux496 + SATLiteral(141))<=0)
12443 -12446 0
12444 -12447 0
-141 -12446 0
-141 12443 -12447 0
-141 12444 -12449 0
c (0<=(aux495 - aux496 + SATLiteral(141)))
-12444 12449 0
-12443 12447 0
141 12449 0
141 -12444 12447 0
141 -12443 12446 0
c ((aux492 + aux494 - aux497)<=0)
12440 -12451 0
12441 -12452 0
12434 -12451 0
12434 12440 -12452 0
12434 12441 -12454 0
12435 -12452 0
12435 12440 -12454 0
12435 12441 -12456 0
c (0<=(aux492 + aux494 - aux497))
-12441 12456 0
-12440 12454 0
-12435 12456 0
-12435 -12441 12454 0
-12435 -12440 12452 0
-12434 12454 0
-12434 -12441 12452 0
-12434 -12440 12451 0
c ((SATLiteral(412) - aux498 + SATLiteral(682))<=0)
-682 -12458 0
-412 -12458 0
-412 -682 -12459 0
c (0<=(SATLiteral(412) - aux498 + SATLiteral(682)))
682 12459 0
412 12459 0
412 682 12458 0
c ((SATLiteral(1087) - aux499 + SATLiteral(7))<=0)
-7 -12461 0
-1087 -12461 0
-1087 -7 -12462 0
c (0<=(SATLiteral(1087) - aux499 + SATLiteral(7)))
7 12462 0
1087 12462 0
1087 7 12461 0
c (( - aux500 + SATLiteral(817) + SATLiteral(952))<=0)
-952 -12464 0
-817 -12464 0
-817 -952 -12465 0
c (0<=( - aux500 + SATLiteral(817) + SATLiteral(952)))
952 12465 0
817 12465 0
817 952 12464 0
c (( - aux501 + SATLiteral(547) + SATLiteral(277))<=0)
-277 -12467 0
-547 -12467 0
-547 -277 -12468 0
c (0<=( - aux501 + SATLiteral(547) + SATLiteral(277)))
277 12468 0
547 12468 0
547 277 12467 0
c ((aux501 - aux502 + SATLiteral(142))<=0)
12467 -12470 0
12468 -12471 0
-142 -12470 0
-142 12467 -12471 0
-142 12468 -12473 0
c (0<=(aux501 - aux502 + SATLiteral(142)))
-12468 12473 0
-12467 12471 0
142 12473 0
142 -12468 12471 0
142 -12467 12470 0
c ((aux498 + aux500 - aux503)<=0)
12464 -12475 0
12465 -12476 0
12458 -12475 0
12458 12464 -12476 0
12458 12465 -12478 0
12459 -12476 0
12459 12464 -12478 0
12459 12465 -12480 0
c (0<=(aux498 + aux500 - aux503))
-12465 12480 0
-12464 12478 0
-12459 12480 0
-12459 -12465 12478 0
-12459 -12464 12476 0
-12458 12478 0
-12458 -12465 12476 0
-12458 -12464 12475 0
c ((SATLiteral(413) - aux504 + SATLiteral(683))<=0)
-683 -12482 0
-413 -12482 0
-413 -683 -12483 0
c (0<=(SATLiteral(413) - aux504 + SATLiteral(683)))
683 12483 0
413 12483 0
413 683 12482 0
c ((SATLiteral(1088) - aux505 + SATLiteral(8))<=0)
-8 -12485 0
-1088 -12485 0
-1088 -8 -12486 0
c (0<=(SATLiteral(1088) - aux505 + SATLiteral(8)))
8 12486 0
1088 12486 0
1088 8 12485 0
c (( - aux506 + SATLiteral(818) + SATLiteral(953))<=0)
-953 -12488 0
-818 -12488 0
-818 -953 -12489 0
c (0<=( - aux506 + SATLiteral(818) + SATLiteral(953)))
953 12489 0
818 12489 0
818 953 12488 0
c (( - aux507 + SATLiteral(548) + SATLiteral(278))<=0)
-278 -12491 0
-548 -12491 0
-548 -278 -12492 0
c (0<=( - aux507 + SATLiteral(548) + SATLiteral(278)))
278 12492 0
548 12492 0
548 278 12491 0
c ((aux507 - aux508 + SATLiteral(143))<=0)
12491 -12494 0
12492 -12495 0
-143 -12494 0
-143 12491 -12495 0
-143 12492 -12497 0
c (0<=(aux507 - aux508 + SATLiteral(143)))
-12492 12497 0
-12491 12495 0
143 12497 0
143 -12492 12495 0
143 -12491 12494 0
c ((aux504 + aux506 - aux509)<=0)
12488 -12499 0
12489 -12500 0
12482 -12499 0
12482 12488 -12500 0
12482 12489 -12502 0
12483 -12500 0
12483 12488 -12502 0
12483 12489 -12504 0
c (0<=(aux504 + aux506 - aux509))
-12489 12504 0
-12488 12502 0
-12483 12504 0
-12483 -12489 12502 0
-12483 -12488 12500 0
-12482 12502 0
-12482 -12489 12500 0
-12482 -12488 12499 0
c ((SATLiteral(414) - aux510 + SATLiteral(684))<=0)
-684 -12506 0
-414 -12506 0
-414 -684 -12507 0
c (0<=(SATLiteral(414) - aux510 + SATLiteral(684)))
684 12507 0
414 12507 0
414 684 12506 0
c ((SATLiteral(1089) - aux511 + SATLiteral(9))<=0)
-9 -12509 0
-1089 -12509 0
-1089 -9 -12510 0
c (0<=(SATLiteral(1089) - aux511 + SATLiteral(9)))
9 12510 0
1089 12510 0
1089 9 12509 0
c (( - aux512 + SATLiteral(819) + SATLiteral(954))<=0)
-954 -12512 0
-819 -12512 0
-819 -954 -12513 0
c (0<=( - aux512 + SATLiteral(819) + SATLiteral(954)))
954 12513 0
819 12513 0
819 954 12512 0
c (( - aux513 + SATLiteral(549) + SATLiteral(279))<=0)
-279 -12515 0
-549 -12515 0
-549 -279 -12516 0
c (0<=( - aux513 + SATLiteral(549) + SATLiteral(279)))
279 12516 0
549 12516 0
549 279 12515 0
c ((aux513 - aux514 + SATLiteral(144))<=0)
12515 -12518 0
12516 -12519 0
-144 -12518 0
-144 12515 -12519 0
-144 12516 -12521 0
c (0<=(aux513 - aux514 + SATLiteral(144)))
-12516 12521 0
-12515 12519 0
144 12521 0
144 -12516 12519 0
144 -12515 12518 0
c ((aux510 + aux512 - aux515)<=0)
12512 -12523 0
12513 -12524 0
12506 -12523 0
12506 12512 -12524 0
12506 12513 -12526 0
12507 -12524 0
12507 12512 -12526 0
12507 12513 -12528 0
c (0<=(aux510 + aux512 - aux515))
-12513 12528 0
-12512 12526 0
-12507 12528 0
-12507 -12513 12526 0
-12507 -12512 12524 0
-12506 12526 0
-12506 -12513 12524 0
-12506 -12512 12523 0
c ((SATLiteral(415) - aux516 + SATLiteral(685))<=0)
-685 -12530 0
-415 -12530 0
-415 -685 -12531 0
c (0<=(SATLiteral(415) - aux516 + SATLiteral(685)))
685 12531 0
415 12531 0
415 685 12530 0
c ((SATLiteral(1090) - aux517 + SATLiteral(10))<=0)
-10 -12533 0
-1090 -12533 0
-1090 -10 -12534 0
c (0<=(SATLiteral(1090) - aux517 + SATLiteral(10)))
10 12534 0
1090 12534 0
1090 10 12533 0
c (( - aux518 + SATLiteral(820) + SATLiteral(955))<=0)
-955 -12536 0
-820 -12536 0
-820 -955 -12537 0
c (0<=( - aux518 + SATLiteral(820) + SATLiteral(955)))
955 12537 0
820 12537 0
820 955 12536 0
c (( - aux519 + SATLiteral(550) + SATLiteral(280))<=0)
-280 -12539 0
-550 -12539 0
-550 -280 -12540 0
c (0<=( - aux519 + SATLiteral(550) + SATLiteral(280)))
280 12540 0
550 12540 0
550 280 12539 0
c ((aux519 - aux520 + SATLiteral(145))<=0)
12539 -12542 0
12540 -12543 0
-145 -12542 0
-145 12539 -12543 0
-145 12540 -12545 0
c (0<=(aux519 - aux520 + SATLiteral(145)))
-12540 12545 0
-12539 12543 0
145 12545 0
145 -12540 12543 0
145 -12539 12542 0
c ((aux516 + aux518 - aux521)<=0)
12536 -12547 0
12537 -12548 0
12530 -12547 0
12530 12536 -12548 0
12530 12537 -12550 0
12531 -12548 0
12531 12536 -12550 0
12531 12537 -12552 0
c (0<=(aux516 + aux518 - aux521))
-12537 12552 0
-12536 12550 0
-12531 12552 0
-12531 -12537 12550 0
-12531 -12536 12548 0
-12530 12550 0
-12530 -12537 12548 0
-12530 -12536 12547 0
c ((SATLiteral(422) - aux522 + SATLiteral(692))<=0)
-692 -12554 0
-422 -12554 0
-422 -692 -12555 0
c (0<=(SATLiteral(422) - aux522 + SATLiteral(692)))
692 12555 0
422 12555 0
422 692 12554 0
c ((SATLiteral(1097) - aux523 + SATLiteral(17))<=0)
-17 -12557 0
-1097 -12557 0
-1097 -17 -12558 0
c (0<=(SATLiteral(1097) - aux523 + SATLiteral(17)))
17 12558 0
1097 12558 0
1097 17 12557 0
c (( - aux524 + SATLiteral(827) + SATLiteral(962))<=0)
-962 -12560 0
-827 -12560 0
-827 -962 -12561 0
c (0<=( - aux524 + SATLiteral(827) + SATLiteral(962)))
962 12561 0
827 12561 0
827 962 12560 0
c (( - aux525 + SATLiteral(557) + SATLiteral(287))<=0)
-287 -12563 0
-557 -12563 0
-557 -287 -12564 0
c (0<=( - aux525 + SATLiteral(557) + SATLiteral(287)))
287 12564 0
557 12564 0
557 287 12563 0
c ((aux525 - aux526 + SATLiteral(152))<=0)
12563 -12566 0
12564 -12567 0
-152 -12566 0
-152 12563 -12567 0
-152 12564 -12569 0
c (0<=(aux525 - aux526 + SATLiteral(152)))
-12564 12569 0
-12563 12567 0
152 12569 0
152 -12564 12567 0
152 -12563 12566 0
c ((aux522 + aux524 - aux527)<=0)
12560 -12571 0
12561 -12572 0
12554 -12571 0
12554 12560 -12572 0
12554 12561 -12574 0
12555 -12572 0
12555 12560 -12574 0
12555 12561 -12576 0
c (0<=(aux522 + aux524 - aux527))
-12561 12576 0
-12560 12574 0
-12555 12576 0
-12555 -12561 12574 0
-12555 -12560 12572 0
-12554 12574 0
-12554 -12561 12572 0
-12554 -12560 12571 0
c ((SATLiteral(423) - aux528 + SATLiteral(693))<=0)
-693 -12578 0
-423 -12578 0
-423 -693 -12579 0
c (0<=(SATLiteral(423) - aux528 + SATLiteral(693)))
693 12579 0
423 12579 0
423 693 12578 0
c ((SATLiteral(1098) - aux529 + SATLiteral(18))<=0)
-18 -12581 0
-1098 -12581 0
-1098 -18 -12582 0
c (0<=(SATLiteral(1098) - aux529 + SATLiteral(18)))
18 12582 0
1098 12582 0
1098 18 12581 0
c (( - aux530 + SATLiteral(828) + SATLiteral(963))<=0)
-963 -12584 0
-828 -12584 0
-828 -963 -12585 0
c (0<=( - aux530 + SATLiteral(828) + SATLiteral(963)))
963 12585 0
828 12585 0
828 963 12584 0
c (( - aux531 + SATLiteral(558) + SATLiteral(288))<=0)
-288 -12587 0
-558 -12587 0
-558 -288 -12588 0
c (0<=( - aux531 + SATLiteral(558) + SATLiteral(288)))
288 12588 0
558 12588 0
558 288 12587 0
c ((aux531 - aux532 + SATLiteral(153))<=0)
12587 -12590 0
12588 -12591 0
-153 -12590 0
-153 12587 -12591 0
-153 12588 -12593 0
c (0<=(aux531 - aux532 + SATLiteral(153)))
-12588 12593 0
-12587 12591 0
153 12593 0
153 -12588 12591 0
153 -12587 12590 0
c ((aux528 + aux530 - aux533)<=0)
12584 -12595 0
12585 -12596 0
12578 -12595 0
12578 12584 -12596 0
12578 12585 -12598 0
12579 -12596 0
12579 12584 -12598 0
12579 12585 -12600 0
c (0<=(aux528 + aux530 - aux533))
-12585 12600 0
-12584 12598 0
-12579 12600 0
-12579 -12585 12598 0
-12579 -12584 12596 0
-12578 12598 0
-12578 -12585 12596 0
-12578 -12584 12595 0
c ((SATLiteral(424) - aux534 + SATLiteral(694))<=0)
-694 -12602 0
-424 -12602 0
-424 -694 -12603 0
c (0<=(SATLiteral(424) - aux534 + SATLiteral(694)))
694 12603 0
424 12603 0
424 694 12602 0
c ((SATLiteral(1099) - aux535 + SATLiteral(19))<=0)
-19 -12605 0
-1099 -12605 0
-1099 -19 -12606 0
c (0<=(SATLiteral(1099) - aux535 + SATLiteral(19)))
19 12606 0
1099 12606 0
1099 19 12605 0
c (( - aux536 + SATLiteral(829) + SATLiteral(964))<=0)
-964 -12608 0
-829 -12608 0
-829 -964 -12609 0
c (0<=( - aux536 + SATLiteral(829) + SATLiteral(964)))
964 12609 0
829 12609 0
829 964 12608 0
c (( - aux537 + SATLiteral(559) + SATLiteral(289))<=0)
-289 -12611 0
-559 -12611 0
-559 -289 -12612 0
c (0<=( - aux537 + SATLiteral(559) + SATLiteral(289)))
289 12612 0
559 12612 0
559 289 12611 0
c ((aux537 - aux538 + SATLiteral(154))<=0)
12611 -12614 0
12612 -12615 0
-154 -12614 0
-154 12611 -12615 0
-154 12612 -12617 0
c (0<=(aux537 - aux538 + SATLiteral(154)))
-12612 12617 0
-12611 12615 0
154 12617 0
154 -12612 12615 0
154 -12611 12614 0
c ((aux534 + aux536 - aux539)<=0)
12608 -12619 0
12609 -12620 0
12602 -12619 0
12602 12608 -12620 0
12602 12609 -12622 0
12603 -12620 0
12603 12608 -12622 0
12603 12609 -12624 0
c (0<=(aux534 + aux536 - aux539))
-12609 12624 0
-12608 12622 0
-12603 12624 0
-12603 -12609 12622 0
-12603 -12608 12620 0
-12602 12622 0
-12602 -12609 12620 0
-12602 -12608 12619 0
c ((SATLiteral(425) - aux540 + SATLiteral(695))<=0)
-695 -12626 0
-425 -12626 0
-425 -695 -12627 0
c (0<=(SATLiteral(425) - aux540 + SATLiteral(695)))
695 12627 0
425 12627 0
425 695 12626 0
c ((SATLiteral(1100) - aux541 + SATLiteral(20))<=0)
-20 -12629 0
-1100 -12629 0
-1100 -20 -12630 0
c (0<=(SATLiteral(1100) - aux541 + SATLiteral(20)))
20 12630 0
1100 12630 0
1100 20 12629 0
c (( - aux542 + SATLiteral(830) + SATLiteral(965))<=0)
-965 -12632 0
-830 -12632 0
-830 -965 -12633 0
c (0<=( - aux542 + SATLiteral(830) + SATLiteral(965)))
965 12633 0
830 12633 0
830 965 12632 0
c (( - aux543 + SATLiteral(560) + SATLiteral(290))<=0)
-290 -12635 0
-560 -12635 0
-560 -290 -12636 0
c (0<=( - aux543 + SATLiteral(560) + SATLiteral(290)))
290 12636 0
560 12636 0
560 290 12635 0
c ((aux543 - aux544 + SATLiteral(155))<=0)
12635 -12638 0
12636 -12639 0
-155 -12638 0
-155 12635 -12639 0
-155 12636 -12641 0
c (0<=(aux543 - aux544 + SATLiteral(155)))
-12636 12641 0
-12635 12639 0
155 12641 0
155 -12636 12639 0
155 -12635 12638 0
c ((aux540 + aux542 - aux545)<=0)
12632 -12643 0
12633 -12644 0
12626 -12643 0
12626 12632 -12644 0
12626 12633 -12646 0
12627 -12644 0
12627 12632 -12646 0
12627 12633 -12648 0
c (0<=(aux540 + aux542 - aux545))
-12633 12648 0
-12632 12646 0
-12627 12648 0
-12627 -12633 12646 0
-12627 -12632 12644 0
-12626 12646 0
-12626 -12633 12644 0
-12626 -12632 12643 0
c ((SATLiteral(426) - aux546 + SATLiteral(696))<=0)
-696 -12650 0
-426 -12650 0
-426 -696 -12651 0
c (0<=(SATLiteral(426) - aux546 + SATLiteral(696)))
696 12651 0
426 12651 0
426 696 12650 0
c ((SATLiteral(1101) - aux547 + SATLiteral(21))<=0)
-21 -12653 0
-1101 -12653 0
-1101 -21 -12654 0
c (0<=(SATLiteral(1101) - aux547 + SATLiteral(21)))
21 12654 0
1101 12654 0
1101 21 12653 0
c (( - aux548 + SATLiteral(831) + SATLiteral(966))<=0)
-966 -12656 0
-831 -12656 0
-831 -966 -12657 0
c (0<=( - aux548 + SATLiteral(831) + SATLiteral(966)))
966 12657 0
831 12657 0
831 966 12656 0
c (( - aux549 + SATLiteral(561) + SATLiteral(291))<=0)
-291 -12659 0
-561 -12659 0
-561 -291 -12660 0
c (0<=( - aux549 + SATLiteral(561) + SATLiteral(291)))
291 12660 0
561 12660 0
561 291 12659 0
c ((aux549 - aux550 + SATLiteral(156))<=0)
12659 -12662 0
12660 -12663 0
-156 -12662 0
-156 12659 -12663 0
-156 12660 -12665 0
c (0<=(aux549 - aux550 + SATLiteral(156)))
-12660 12665 0
-12659 12663 0
156 12665 0
156 -12660 12663 0
156 -12659 12662 0
c ((aux546 + aux548 - aux551)<=0)
12656 -12667 0
12657 -12668 0
12650 -12667 0
12650 12656 -12668 0
12650 12657 -12670 0
12651 -12668 0
12651 12656 -12670 0
12651 12657 -12672 0
c (0<=(aux546 + aux548 - aux551))
-12657 12672 0
-12656 12670 0
-12651 12672 0
-12651 -12657 12670 0
-12651 -12656 12668 0
-12650 12670 0
-12650 -12657 12668 0
-12650 -12656 12667 0
c ((SATLiteral(427) - aux552 + SATLiteral(697))<=0)
-697 -12674 0
-427 -12674 0
-427 -697 -12675 0
c (0<=(SATLiteral(427) - aux552 + SATLiteral(697)))
697 12675 0
427 12675 0
427 697 12674 0
c ((SATLiteral(1102) - aux553 + SATLiteral(22))<=0)
-22 -12677 0
-1102 -12677 0
-1102 -22 -12678 0
c (0<=(SATLiteral(1102) - aux553 + SATLiteral(22)))
22 12678 0
1102 12678 0
1102 22 12677 0
c (( - aux554 + SATLiteral(832) + SATLiteral(967))<=0)
-967 -12680 0
-832 -12680 0
-832 -967 -12681 0
c (0<=( - aux554 + SATLiteral(832) + SATLiteral(967)))
967 12681 0
832 12681 0
832 967 12680 0
c (( - aux555 + SATLiteral(562) + SATLiteral(292))<=0)
-292 -12683 0
-562 -12683 0
-562 -292 -12684 0
c (0<=( - aux555 + SATLiteral(562) + SATLiteral(292)))
292 12684 0
562 12684 0
562 292 12683 0
c ((aux555 - aux556 + SATLiteral(157))<=0)
12683 -12686 0
12684 -12687 0
-157 -12686 0
-157 12683 -12687 0
-157 12684 -12689 0
c (0<=(aux555 - aux556 + SATLiteral(157)))
-12684 12689 0
-12683 12687 0
157 12689 0
157 -12684 12687 0
157 -12683 12686 0
c ((aux552 + aux554 - aux557)<=0)
12680 -12691 0
12681 -12692 0
12674 -12691 0
12674 12680 -12692 0
12674 12681 -12694 0
12675 -12692 0
12675 12680 -12694 0
12675 12681 -12696 0
c (0<=(aux552 + aux554 - aux557))
-12681 12696 0
-12680 12694 0
-12675 12696 0
-12675 -12681 12694 0
-12675 -12680 12692 0
-12674 12694 0
-12674 -12681 12692 0
-12674 -12680 12691 0
c ((SATLiteral(428) - aux558 + SATLiteral(698))<=0)
-698 -12698 0
-428 -12698 0
-428 -698 -12699 0
c (0<=(SATLiteral(428) - aux558 + SATLiteral(698)))
698 12699 0
428 12699 0
428 698 12698 0
c ((SATLiteral(1103) - aux559 + SATLiteral(23))<=0)
-23 -12701 0
-1103 -12701 0
-1103 -23 -12702 0
c (0<=(SATLiteral(1103) - aux559 + SATLiteral(23)))
23 12702 0
1103 12702 0
1103 23 12701 0
c (( - aux560 + SATLiteral(833) + SATLiteral(968))<=0)
-968 -12704 0
-833 -12704 0
-833 -968 -12705 0
c (0<=( - aux560 + SATLiteral(833) + SATLiteral(968)))
968 12705 0
833 12705 0
833 968 12704 0
c (( - aux561 + SATLiteral(563) + SATLiteral(293))<=0)
-293 -12707 0
-563 -12707 0
-563 -293 -12708 0
c (0<=( - aux561 + SATLiteral(563) + SATLiteral(293)))
293 12708 0
563 12708 0
563 293 12707 0
c ((aux561 - aux562 + SATLiteral(158))<=0)
12707 -12710 0
12708 -12711 0
-158 -12710 0
-158 12707 -12711 0
-158 12708 -12713 0
c (0<=(aux561 - aux562 + SATLiteral(158)))
-12708 12713 0
-12707 12711 0
158 12713 0
158 -12708 12711 0
158 -12707 12710 0
c ((aux558 + aux560 - aux563)<=0)
12704 -12715 0
12705 -12716 0
12698 -12715 0
12698 12704 -12716 0
12698 12705 -12718 0
12699 -12716 0
12699 12704 -12718 0
12699 12705 -12720 0
c (0<=(aux558 + aux560 - aux563))
-12705 12720 0
-12704 12718 0
-12699 12720 0
-12699 -12705 12718 0
-12699 -12704 12716 0
-12698 12718 0
-12698 -12705 12716 0
-12698 -12704 12715 0
c ((SATLiteral(429) - aux564 + SATLiteral(699))<=0)
-699 -12722 0
-429 -12722 0
-429 -699 -12723 0
c (0<=(SATLiteral(429) - aux564 + SATLiteral(699)))
699 12723 0
429 12723 0
429 699 12722 0
c ((SATLiteral(1104) - aux565 + SATLiteral(24))<=0)
-24 -12725 0
-1104 -12725 0
-1104 -24 -12726 0
c (0<=(SATLiteral(1104) - aux565 + SATLiteral(24)))
24 12726 0
1104 12726 0
1104 24 12725 0
c (( - aux566 + SATLiteral(834) + SATLiteral(969))<=0)
-969 -12728 0
-834 -12728 0
-834 -969 -12729 0
c (0<=( - aux566 + SATLiteral(834) + SATLiteral(969)))
969 12729 0
834 12729 0
834 969 12728 0
c (( - aux567 + SATLiteral(564) + SATLiteral(294))<=0)
-294 -12731 0
-564 -12731 0
-564 -294 -12732 0
c (0<=( - aux567 + SATLiteral(564) + SATLiteral(294)))
294 12732 0
564 12732 0
564 294 12731 0
c ((aux567 - aux568 + SATLiteral(159))<=0)
12731 -12734 0
12732 -12735 0
-159 -12734 0
-159 12731 -12735 0
-159 12732 -12737 0
c (0<=(aux567 - aux568 + SATLiteral(159)))
-12732 12737 0
-12731 12735 0
159 12737 0
159 -12732 12735 0
159 -12731 12734 0
c ((aux564 + aux566 - aux569)<=0)
12728 -12739 0
12729 -12740 0
12722 -12739 0
12722 12728 -12740 0
12722 12729 -12742 0
12723 -12740 0
12723 12728 -12742 0
12723 12729 -12744 0
c (0<=(aux564 + aux566 - aux569))
-12729 12744 0
-12728 12742 0
-12723 12744 0
-12723 -12729 12742 0
-12723 -12728 12740 0
-12722 12742 0
-12722 -12729 12740 0
-12722 -12728 12739 0
c ((SATLiteral(430) - aux570 + SATLiteral(700))<=0)
-700 -12746 0
-430 -12746 0
-430 -700 -12747 0
c (0<=(SATLiteral(430) - aux570 + SATLiteral(700)))
700 12747 0
430 12747 0
430 700 12746 0
c ((SATLiteral(1105) - aux571 + SATLiteral(25))<=0)
-25 -12749 0
-1105 -12749 0
-1105 -25 -12750 0
c (0<=(SATLiteral(1105) - aux571 + SATLiteral(25)))
25 12750 0
1105 12750 0
1105 25 12749 0
c (( - aux572 + SATLiteral(835) + SATLiteral(970))<=0)
-970 -12752 0
-835 -12752 0
-835 -970 -12753 0
c (0<=( - aux572 + SATLiteral(835) + SATLiteral(970)))
970 12753 0
835 12753 0
835 970 12752 0
c (( - aux573 + SATLiteral(565) + SATLiteral(295))<=0)
-295 -12755 0
-565 -12755 0
-565 -295 -12756 0
c (0<=( - aux573 + SATLiteral(565) + SATLiteral(295)))
295 12756 0
565 12756 0
565 295 12755 0
c ((aux573 - aux574 + SATLiteral(160))<=0)
12755 -12758 0
12756 -12759 0
-160 -12758 0
-160 12755 -12759 0
-160 12756 -12761 0
c (0<=(aux573 - aux574 + SATLiteral(160)))
-12756 12761 0
-12755 12759 0
160 12761 0
160 -12756 12759 0
160 -12755 12758 0
c ((aux570 + aux572 - aux575)<=0)
12752 -12763 0
12753 -12764 0
12746 -12763 0
12746 12752 -12764 0
12746 12753 -12766 0
12747 -12764 0
12747 12752 -12766 0
12747 12753 -12768 0
c (0<=(aux570 + aux572 - aux575))
-12753 12768 0
-12752 12766 0
-12747 12768 0
-12747 -12753 12766 0
-12747 -12752 12764 0
-12746 12766 0
-12746 -12753 12764 0
-12746 -12752 12763 0
c ((SATLiteral(437) - aux576 + SATLiteral(707))<=0)
-707 -12770 0
-437 -12770 0
-437 -707 -12771 0
c (0<=(SATLiteral(437) - aux576 + SATLiteral(707)))
707 12771 0
437 12771 0
437 707 12770 0
c ((SATLiteral(1112) - aux577 + SATLiteral(32))<=0)
-32 -12773 0
-1112 -12773 0
-1112 -32 -12774 0
c (0<=(SATLiteral(1112) - aux577 + SATLiteral(32)))
32 12774 0
1112 12774 0
1112 32 12773 0
c (( - aux578 + SATLiteral(842) + SATLiteral(977))<=0)
-977 -12776 0
-842 -12776 0
-842 -977 -12777 0
c (0<=( - aux578 + SATLiteral(842) + SATLiteral(977)))
977 12777 0
842 12777 0
842 977 12776 0
c (( - aux579 + SATLiteral(572) + SATLiteral(302))<=0)
-302 -12779 0
-572 -12779 0
-572 -302 -12780 0
c (0<=( - aux579 + SATLiteral(572) + SATLiteral(302)))
302 12780 0
572 12780 0
572 302 12779 0
c ((aux579 - aux580 + SATLiteral(167))<=0)
12779 -12782 0
12780 -12783 0
-167 -12782 0
-167 12779 -12783 0
-167 12780 -12785 0
c (0<=(aux579 - aux580 + SATLiteral(167)))
-12780 12785 0
-12779 12783 0
167 12785 0
167 -12780 12783 0
167 -12779 12782 0
c ((aux576 + aux578 - aux581)<=0)
12776 -12787 0
12777 -12788 0
12770 -12787 0
12770 12776 -12788 0
12770 12777 -12790 0
12771 -12788 0
12771 12776 -12790 0
12771 12777 -12792 0
c (0<=(aux576 + aux578 - aux581))
-12777 12792 0
-12776 12790 0
-12771 12792 0
-12771 -12777 12790 0
-12771 -12776 12788 0
-12770 12790 0
-12770 -12777 12788 0
-12770 -12776 12787 0
c ((SATLiteral(438) - aux582 + SATLiteral(708))<=0)
-708 -12794 0
-438 -12794 0
-438 -708 -12795 0
c (0<=(SATLiteral(438) - aux582 + SATLiteral(708)))
708 12795 0
438 12795 0
438 708 12794 0
c ((SATLiteral(1113) - aux583 + SATLiteral(33))<=0)
-33 -12797 0
-1113 -12797 0
-1113 -33 -12798 0
c (0<=(SATLiteral(1113) - aux583 + SATLiteral(33)))
33 12798 0
1113 12798 0
1113 33 12797 0
c (( - aux584 + SATLiteral(843) + SATLiteral(978))<=0)
-978 -12800 0
-843 -12800 0
-843 -978 -12801 0
c (0<=( - aux584 + SATLiteral(843) + SATLiteral(978)))
978 12801 0
843 12801 0
843 978 12800 0
c (( - aux585 + SATLiteral(573) + SATLiteral(303))<=0)
-303 -12803 0
-573 -12803 0
-573 -303 -12804 0
c (0<=( - aux585 + SATLiteral(573) + SATLiteral(303)))
303 12804 0
573 12804 0
573 303 12803 0
c ((aux585 - aux586 + SATLiteral(168))<=0)
12803 -12806 0
12804 -12807 0
-168 -12806 0
-168 12803 -12807 0
-168 12804 -12809 0
c (0<=(aux585 - aux586 + SATLiteral(168)))
-12804 12809 0
-12803 12807 0
168 12809 0
168 -12804 12807 0
168 -12803 12806 0
c ((aux582 + aux584 - aux587)<=0)
12800 -12811 0
12801 -12812 0
12794 -12811 0
12794 12800 -12812 0
12794 12801 -12814 0
12795 -12812 0
12795 12800 -12814 0
12795 12801 -12816 0
c (0<=(aux582 + aux584 - aux587))
-12801 12816 0
-12800 12814 0
-12795 12816 0
-12795 -12801 12814 0
-12795 -12800 12812 0
-12794 12814 0
-12794 -12801 12812 0
-12794 -12800 12811 0
c ((SATLiteral(439) - aux588 + SATLiteral(709))<=0)
-709 -12818 0
-439 -12818 0
-439 -709 -12819 0
c (0<=(SATLiteral(439) - aux588 + SATLiteral(709)))
709 12819 0
439 12819 0
439 709 12818 0
c ((SATLiteral(1114) - aux589 + SATLiteral(34))<=0)
-34 -12821 0
-1114 -12821 0
-1114 -34 -12822 0
c (0<=(SATLiteral(1114) - aux589 + SATLiteral(34)))
34 12822 0
1114 12822 0
1114 34 12821 0
c (( - aux590 + SATLiteral(844) + SATLiteral(979))<=0)
-979 -12824 0
-844 -12824 0
-844 -979 -12825 0
c (0<=( - aux590 + SATLiteral(844) + SATLiteral(979)))
979 12825 0
844 12825 0
844 979 12824 0
c (( - aux591 + SATLiteral(574) + SATLiteral(304))<=0)
-304 -12827 0
-574 -12827 0
-574 -304 -12828 0
c (0<=( - aux591 + SATLiteral(574) + SATLiteral(304)))
304 12828 0
574 12828 0
574 304 12827 0
c ((aux591 - aux592 + SATLiteral(169))<=0)
12827 -12830 0
12828 -12831 0
-169 -12830 0
-169 12827 -12831 0
-169 12828 -12833 0
c (0<=(aux591 - aux592 + SATLiteral(169)))
-12828 12833 0
-12827 12831 0
169 12833 0
169 -12828 12831 0
169 -12827 12830 0
c ((aux588 + aux590 - aux593)<=0)
12824 -12835 0
12825 -12836 0
12818 -12835 0
12818 12824 -12836 0
12818 12825 -12838 0
12819 -12836 0
12819 12824 -12838 0
12819 12825 -12840 0
c (0<=(aux588 + aux590 - aux593))
-12825 12840 0
-12824 12838 0
-12819 12840 0
-12819 -12825 12838 0
-12819 -12824 12836 0
-12818 12838 0
-12818 -12825 12836 0
-12818 -12824 12835 0
c ((SATLiteral(440) - aux594 + SATLiteral(710))<=0)
-710 -12842 0
-440 -12842 0
-440 -710 -12843 0
c (0<=(SATLiteral(440) - aux594 + SATLiteral(710)))
710 12843 0
440 12843 0
440 710 12842 0
c ((SATLiteral(1115) - aux595 + SATLiteral(35))<=0)
-35 -12845 0
-1115 -12845 0
-1115 -35 -12846 0
c (0<=(SATLiteral(1115) - aux595 + SATLiteral(35)))
35 12846 0
1115 12846 0
1115 35 12845 0
c (( - aux596 + SATLiteral(845) + SATLiteral(980))<=0)
-980 -12848 0
-845 -12848 0
-845 -980 -12849 0
c (0<=( - aux596 + SATLiteral(845) + SATLiteral(980)))
980 12849 0
845 12849 0
845 980 12848 0
c (( - aux597 + SATLiteral(575) + SATLiteral(305))<=0)
-305 -12851 0
-575 -12851 0
-575 -305 -12852 0
c (0<=( - aux597 + SATLiteral(575) + SATLiteral(305)))
305 12852 0
575 12852 0
575 305 12851 0
c ((aux597 - aux598 + SATLiteral(170))<=0)
12851 -12854 0
12852 -12855 0
-170 -12854 0
-170 12851 -12855 0
-170 12852 -12857 0
c (0<=(aux597 - aux598 + SATLiteral(170)))
-12852 12857 0
-12851 12855 0
170 12857 0
170 -12852 12855 0
170 -12851 12854 0
c ((aux594 + aux596 - aux599)<=0)
12848 -12859 0
12849 -12860 0
12842 -12859 0
12842 12848 -12860 0
12842 12849 -12862 0
12843 -12860 0
12843 12848 -12862 0
12843 12849 -12864 0
c (0<=(aux594 + aux596 - aux599))
-12849 12864 0
-12848 12862 0
-12843 12864 0
-12843 -12849 12862 0
-12843 -12848 12860 0
-12842 12862 0
-12842 -12849 12860 0
-12842 -12848 12859 0
c ((SATLiteral(441) - aux600 + SATLiteral(711))<=0)
-711 -12866 0
-441 -12866 0
-441 -711 -12867 0
c (0<=(SATLiteral(441) - aux600 + SATLiteral(711)))
711 12867 0
441 12867 0
441 711 12866 0
c ((SATLiteral(1116) - aux601 + SATLiteral(36))<=0)
-36 -12869 0
-1116 -12869 0
-1116 -36 -12870 0
c (0<=(SATLiteral(1116) - aux601 + SATLiteral(36)))
36 12870 0
1116 12870 0
1116 36 12869 0
c (( - aux602 + SATLiteral(846) + SATLiteral(981))<=0)
-981 -12872 0
-846 -12872 0
-846 -981 -12873 0
c (0<=( - aux602 + SATLiteral(846) + SATLiteral(981)))
981 12873 0
846 12873 0
846 981 12872 0
c (( - aux603 + SATLiteral(576) + SATLiteral(306))<=0)
-306 -12875 0
-576 -12875 0
-576 -306 -12876 0
c (0<=( - aux603 + SATLiteral(576) + SATLiteral(306)))
306 12876 0
576 12876 0
576 306 12875 0
c ((aux603 - aux604 + SATLiteral(171))<=0)
12875 -12878 0
12876 -12879 0
-171 -12878 0
-171 12875 -12879 0
-171 12876 -12881 0
c (0<=(aux603 - aux604 + SATLiteral(171)))
-12876 12881 0
-12875 12879 0
171 12881 0
171 -12876 12879 0
171 -12875 12878 0
c ((aux600 + aux602 - aux605)<=0)
12872 -12883 0
12873 -12884 0
12866 -12883 0
12866 12872 -12884 0
12866 12873 -12886 0
12867 -12884 0
12867 12872 -12886 0
12867 12873 -12888 0
c (0<=(aux600 + aux602 - aux605))
-12873 12888 0
-12872 12886 0
-12867 12888 0
-12867 -12873 12886 0
-12867 -12872 12884 0
-12866 12886 0
-12866 -12873 12884 0
-12866 -12872 12883 0
c ((SATLiteral(442) - aux606 + SATLiteral(712))<=0)
-712 -12890 0
-442 -12890 0
-442 -712 -12891 0
c (0<=(SATLiteral(442) - aux606 + SATLiteral(712)))
712 12891 0
442 12891 0
442 712 12890 0
c ((SATLiteral(1117) - aux607 + SATLiteral(37))<=0)
-37 -12893 0
-1117 -12893 0
-1117 -37 -12894 0
c (0<=(SATLiteral(1117) - aux607 + SATLiteral(37)))
37 12894 0
1117 12894 0
1117 37 12893 0
c (( - aux608 + SATLiteral(847) + SATLiteral(982))<=0)
-982 -12896 0
-847 -12896 0
-847 -982 -12897 0
c (0<=( - aux608 + SATLiteral(847) + SATLiteral(982)))
982 12897 0
847 12897 0
847 982 12896 0
c (( - aux609 + SATLiteral(577) + SATLiteral(307))<=0)
-307 -12899 0
-577 -12899 0
-577 -307 -12900 0
c (0<=( - aux609 + SATLiteral(577) + SATLiteral(307)))
307 12900 0
577 12900 0
577 307 12899 0
c ((aux609 - aux610 + SATLiteral(172))<=0)
12899 -12902 0
12900 -12903 0
-172 -12902 0
-172 12899 -12903 0
-172 12900 -12905 0
c (0<=(aux609 - aux610 + SATLiteral(172)))
-12900 12905 0
-12899 12903 0
172 12905 0
172 -12900 12903 0
172 -12899 12902 0
c ((aux606 + aux608 - aux611)<=0)
12896 -12907 0
12897 -12908 0
12890 -12907 0
12890 12896 -12908 0
12890 12897 -12910 0
12891 -12908 0
12891 12896 -12910 0
12891 12897 -12912 0
c (0<=(aux606 + aux608 - aux611))
-12897 12912 0
-12896 12910 0
-12891 12912 0
-12891 -12897 12910 0
-12891 -12896 12908 0
-12890 12910 0
-12890 -12897 12908 0
-12890 -12896 12907 0
c ((SATLiteral(443) - aux612 + SATLiteral(713))<=0)
-713 -12914 0
-443 -12914 0
-443 -713 -12915 0
c (0<=(SATLiteral(443) - aux612 + SATLiteral(713)))
713 12915 0
443 12915 0
443 713 12914 0
c ((SATLiteral(1118) - aux613 + SATLiteral(38))<=0)
-38 -12917 0
-1118 -12917 0
-1118 -38 -12918 0
c (0<=(SATLiteral(1118) - aux613 + SATLiteral(38)))
38 12918 0
1118 12918 0
1118 38 12917 0
c (( - aux614 + SATLiteral(848) + SATLiteral(983))<=0)
-983 -12920 0
-848 -12920 0
-848 -983 -12921 0
c (0<=( - aux614 + SATLiteral(848) + SATLiteral(983)))
983 12921 0
848 12921 0
848 983 12920 0
c (( - aux615 + SATLiteral(578) + SATLiteral(308))<=0)
-308 -12923 0
-578 -12923 0
-578 -308 -12924 0
c (0<=( - aux615 + SATLiteral(578) + SATLiteral(308)))
308 12924 0
578 12924 0
578 308 12923 0
c ((aux615 - aux616 + SATLiteral(173))<=0)
12923 -12926 0
12924 -12927 0
-173 -12926 0
-173 12923 -12927 0
-173 12924 -12929 0
c (0<=(aux615 - aux616 + SATLiteral(173)))
-12924 12929 0
-12923 12927 0
173 12929 0
173 -12924 12927 0
173 -12923 12926 0
c ((aux612 + aux614 - aux617)<=0)
12920 -12931 0
12921 -12932 0
12914 -12931 0
12914 12920 -12932 0
12914 12921 -12934 0
12915 -12932 0
12915 12920 -12934 0
12915 12921 -12936 0
c (0<=(aux612 + aux614 - aux617))
-12921 12936 0
-12920 12934 0
-12915 12936 0
-12915 -12921 12934 0
-12915 -12920 12932 0
-12914 12934 0
-12914 -12921 12932 0
-12914 -12920 12931 0
c ((SATLiteral(444) - aux618 + SATLiteral(714))<=0)
-714 -12938 0
-444 -12938 0
-444 -714 -12939 0
c (0<=(SATLiteral(444) - aux618 + SATLiteral(714)))
714 12939 0
444 12939 0
444 714 12938 0
c ((SATLiteral(1119) - aux619 + SATLiteral(39))<=0)
-39 -12941 0
-1119 -12941 0
-1119 -39 -12942 0
c (0<=(SATLiteral(1119) - aux619 + SATLiteral(39)))
39 12942 0
1119 12942 0
1119 39 12941 0
c (( - aux620 + SATLiteral(849) + SATLiteral(984))<=0)
-984 -12944 0
-849 -12944 0
-849 -984 -12945 0
c (0<=( - aux620 + SATLiteral(849) + SATLiteral(984)))
984 12945 0
849 12945 0
849 984 12944 0
c (( - aux621 + SATLiteral(579) + SATLiteral(309))<=0)
-309 -12947 0
-579 -12947 0
-579 -309 -12948 0
c (0<=( - aux621 + SATLiteral(579) + SATLiteral(309)))
309 12948 0
579 12948 0
579 309 12947 0
c ((aux621 - aux622 + SATLiteral(174))<=0)
12947 -12950 0
12948 -12951 0
-174 -12950 0
-174 12947 -12951 0
-174 12948 -12953 0
c (0<=(aux621 - aux622 + SATLiteral(174)))
-12948 12953 0
-12947 12951 0
174 12953 0
174 -12948 12951 0
174 -12947 12950 0
c ((aux618 + aux620 - aux623)<=0)
12944 -12955 0
12945 -12956 0
12938 -12955 0
12938 12944 -12956 0
12938 12945 -12958 0
12939 -12956 0
12939 12944 -12958 0
12939 12945 -12960 0
c (0<=(aux618 + aux620 - aux623))
-12945 12960 0
-12944 12958 0
-12939 12960 0
-12939 -12945 12958 0
-12939 -12944 12956 0
-12938 12958 0
-12938 -12945 12956 0
-12938 -12944 12955 0
c ((SATLiteral(445) - aux624 + SATLiteral(715))<=0)
-715 -12962 0
-445 -12962 0
-445 -715 -12963 0
c (0<=(SATLiteral(445) - aux624 + SATLiteral(715)))
715 12963 0
445 12963 0
445 715 12962 0
c ((SATLiteral(1120) - aux625 + SATLiteral(40))<=0)
-40 -12965 0
-1120 -12965 0
-1120 -40 -12966 0
c (0<=(SATLiteral(1120) - aux625 + SATLiteral(40)))
40 12966 0
1120 12966 0
1120 40 12965 0
c (( - aux626 + SATLiteral(850) + SATLiteral(985))<=0)
-985 -12968 0
-850 -12968 0
-850 -985 -12969 0
c (0<=( - aux626 + SATLiteral(850) + SATLiteral(985)))
985 12969 0
850 12969 0
850 985 12968 0
c (( - aux627 + SATLiteral(580) + SATLiteral(310))<=0)
-310 -12971 0
-580 -12971 0
-580 -310 -12972 0
c (0<=( - aux627 + SATLiteral(580) + SATLiteral(310)))
310 12972 0
580 12972 0
580 310 12971 0
c ((aux627 - aux628 + SATLiteral(175))<=0)
12971 -12974 0
12972 -12975 0
-175 -12974 0
-175 12971 -12975 0
-175 12972 -12977 0
c (0<=(aux627 - aux628 + SATLiteral(175)))
-12972 12977 0
-12971 12975 0
175 12977 0
175 -12972 12975 0
175 -12971 12974 0
c ((aux624 + aux626 - aux629)<=0)
12968 -12979 0
12969 -12980 0
12962 -12979 0
12962 12968 -12980 0
12962 12969 -12982 0
12963 -12980 0
12963 12968 -12982 0
12963 12969 -12984 0
c (0<=(aux624 + aux626 - aux629))
-12969 12984 0
-12968 12982 0
-12963 12984 0
-12963 -12969 12982 0
-12963 -12968 12980 0
-12962 12982 0
-12962 -12969 12980 0
-12962 -12968 12979 0
c ((SATLiteral(452) - aux630 + SATLiteral(722))<=0)
-722 -12986 0
-452 -12986 0
-452 -722 -12987 0
c (0<=(SATLiteral(452) - aux630 + SATLiteral(722)))
722 12987 0
452 12987 0
452 722 12986 0
c ((SATLiteral(1127) - aux631 + SATLiteral(47))<=0)
-47 -12989 0
-1127 -12989 0
-1127 -47 -12990 0
c (0<=(SATLiteral(1127) - aux631 + SATLiteral(47)))
47 12990 0
1127 12990 0
1127 47 12989 0
c (( - aux632 + SATLiteral(857) + SATLiteral(992))<=0)
-992 -12992 0
-857 -12992 0
-857 -992 -12993 0
c (0<=( - aux632 + SATLiteral(857) + SATLiteral(992)))
992 12993 0
857 12993 0
857 992 12992 0
c (( - aux633 + SATLiteral(587) + SATLiteral(317))<=0)
-317 -12995 0
-587 -12995 0
-587 -317 -12996 0
c (0<=( - aux633 + SATLiteral(587) + SATLiteral(317)))
317 12996 0
587 12996 0
587 317 12995 0
c ((aux633 - aux634 + SATLiteral(182))<=0)
12995 -12998 0
12996 -12999 0
-182 -12998 0
-182 12995 -12999 0
-182 12996 -13001 0
c (0<=(aux633 - aux634 + SATLiteral(182)))
-12996 13001 0
-12995 12999 0
182 13001 0
182 -12996 12999 0
182 -12995 12998 0
c ((aux630 + aux632 - aux635)<=0)
12992 -13003 0
12993 -13004 0
12986 -13003 0
12986 12992 -13004 0
12986 12993 -13006 0
12987 -13004 0
12987 12992 -13006 0
12987 12993 -13008 0
c (0<=(aux630 + aux632 - aux635))
-12993 13008 0
-12992 13006 0
-12987 13008 0
-12987 -12993 13006 0
-12987 -12992 13004 0
-12986 13006 0
-12986 -12993 13004 0
-12986 -12992 13003 0
c ((SATLiteral(453) - aux636 + SATLiteral(723))<=0)
-723 -13010 0
-453 -13010 0
-453 -723 -13011 0
c (0<=(SATLiteral(453) - aux636 + SATLiteral(723)))
723 13011 0
453 13011 0
453 723 13010 0
c ((SATLiteral(1128) - aux637 + SATLiteral(48))<=0)
-48 -13013 0
-1128 -13013 0
-1128 -48 -13014 0
c (0<=(SATLiteral(1128) - aux637 + SATLiteral(48)))
48 13014 0
1128 13014 0
1128 48 13013 0
c (( - aux638 + SATLiteral(858) + SATLiteral(993))<=0)
-993 -13016 0
-858 -13016 0
-858 -993 -13017 0
c (0<=( - aux638 + SATLiteral(858) + SATLiteral(993)))
993 13017 0
858 13017 0
858 993 13016 0
c (( - aux639 + SATLiteral(588) + SATLiteral(318))<=0)
-318 -13019 0
-588 -13019 0
-588 -318 -13020 0
c (0<=( - aux639 + SATLiteral(588) + SATLiteral(318)))
318 13020 0
588 13020 0
588 318 13019 0
c ((aux639 - aux640 + SATLiteral(183))<=0)
13019 -13022 0
13020 -13023 0
-183 -13022 0
-183 13019 -13023 0
-183 13020 -13025 0
c (0<=(aux639 - aux640 + SATLiteral(183)))
-13020 13025 0
-13019 13023 0
183 13025 0
183 -13020 13023 0
183 -13019 13022 0
c ((aux636 + aux638 - aux641)<=0)
13016 -13027 0
13017 -13028 0
13010 -13027 0
13010 13016 -13028 0
13010 13017 -13030 0
13011 -13028 0
13011 13016 -13030 0
13011 13017 -13032 0
c (0<=(aux636 + aux638 - aux641))
-13017 13032 0
-13016 13030 0
-13011 13032 0
-13011 -13017 13030 0
-13011 -13016 13028 0
-13010 13030 0
-13010 -13017 13028 0
-13010 -13016 13027 0
c ((SATLiteral(454) - aux642 + SATLiteral(724))<=0)
-724 -13034 0
-454 -13034 0
-454 -724 -13035 0
c (0<=(SATLiteral(454) - aux642 + SATLiteral(724)))
724 13035 0
454 13035 0
454 724 13034 0
c ((SATLiteral(1129) - aux643 + SATLiteral(49))<=0)
-49 -13037 0
-1129 -13037 0
-1129 -49 -13038 0
c (0<=(SATLiteral(1129) - aux643 + SATLiteral(49)))
49 13038 0
1129 13038 0
1129 49 13037 0
c (( - aux644 + SATLiteral(859) + SATLiteral(994))<=0)
-994 -13040 0
-859 -13040 0
-859 -994 -13041 0
c (0<=( - aux644 + SATLiteral(859) + SATLiteral(994)))
994 13041 0
859 13041 0
859 994 13040 0
c (( - aux645 + SATLiteral(589) + SATLiteral(319))<=0)
-319 -13043 0
-589 -13043 0
-589 -319 -13044 0
c (0<=( - aux645 + SATLiteral(589) + SATLiteral(319)))
319 13044 0
589 13044 0
589 319 13043 0
c ((aux645 - aux646 + SATLiteral(184))<=0)
13043 -13046 0
13044 -13047 0
-184 -13046 0
-184 13043 -13047 0
-184 13044 -13049 0
c (0<=(aux645 - aux646 + SATLiteral(184)))
-13044 13049 0
-13043 13047 0
184 13049 0
184 -13044 13047 0
184 -13043 13046 0
c ((aux642 + aux644 - aux647)<=0)
13040 -13051 0
13041 -13052 0
13034 -13051 0
13034 13040 -13052 0
13034 13041 -13054 0
13035 -13052 0
13035 13040 -13054 0
13035 13041 -13056 0
c (0<=(aux642 + aux644 - aux647))
-13041 13056 0
-13040 13054 0
-13035 13056 0
-13035 -13041 13054 0
-13035 -13040 13052 0
-13034 13054 0
-13034 -13041 13052 0
-13034 -13040 13051 0
c ((SATLiteral(455) - aux648 + SATLiteral(725))<=0)
-725 -13058 0
-455 -13058 0
-455 -725 -13059 0
c (0<=(SATLiteral(455) - aux648 + SATLiteral(725)))
725 13059 0
455 13059 0
455 725 13058 0
c ((SATLiteral(1130) - aux649 + SATLiteral(50))<=0)
-50 -13061 0
-1130 -13061 0
-1130 -50 -13062 0
c (0<=(SATLiteral(1130) - aux649 + SATLiteral(50)))
50 13062 0
1130 13062 0
1130 50 13061 0
c (( - aux650 + SATLiteral(860) + SATLiteral(995))<=0)
-995 -13064 0
-860 -13064 0
-860 -995 -13065 0
c (0<=( - aux650 + SATLiteral(860) + SATLiteral(995)))
995 13065 0
860 13065 0
860 995 13064 0
c (( - aux651 + SATLiteral(590) + SATLiteral(320))<=0)
-320 -13067 0
-590 -13067 0
-590 -320 -13068 0
c (0<=( - aux651 + SATLiteral(590) + SATLiteral(320)))
320 13068 0
590 13068 0
590 320 13067 0
c ((aux651 - aux652 + SATLiteral(185))<=0)
13067 -13070 0
13068 -13071 0
-185 -13070 0
-185 13067 -13071 0
-185 13068 -13073 0
c (0<=(aux651 - aux652 + SATLiteral(185)))
-13068 13073 0
-13067 13071 0
185 13073 0
185 -13068 13071 0
185 -13067 13070 0
c ((aux648 + aux650 - aux653)<=0)
13064 -13075 0
13065 -13076 0
13058 -13075 0
13058 13064 -13076 0
13058 13065 -13078 0
13059 -13076 0
13059 13064 -13078 0
13059 13065 -13080 0
c (0<=(aux648 + aux650 - aux653))
-13065 13080 0
-13064 13078 0
-13059 13080 0
-13059 -13065 13078 0
-13059 -13064 13076 0
-13058 13078 0
-13058 -13065 13076 0
-13058 -13064 13075 0
c ((SATLiteral(456) - aux654 + SATLiteral(726))<=0)
-726 -13082 0
-456 -13082 0
-456 -726 -13083 0
c (0<=(SATLiteral(456) - aux654 + SATLiteral(726)))
726 13083 0
456 13083 0
456 726 13082 0
c ((SATLiteral(1131) - aux655 + SATLiteral(51))<=0)
-51 -13085 0
-1131 -13085 0
-1131 -51 -13086 0
c (0<=(SATLiteral(1131) - aux655 + SATLiteral(51)))
51 13086 0
1131 13086 0
1131 51 13085 0
c (( - aux656 + SATLiteral(861) + SATLiteral(996))<=0)
-996 -13088 0
-861 -13088 0
-861 -996 -13089 0
c (0<=( - aux656 + SATLiteral(861) + SATLiteral(996)))
996 13089 0
861 13089 0
861 996 13088 0
c (( - aux657 + SATLiteral(591) + SATLiteral(321))<=0)
-321 -13091 0
-591 -13091 0
-591 -321 -13092 0
c (0<=( - aux657 + SATLiteral(591) + SATLiteral(321)))
321 13092 0
591 13092 0
591 321 13091 0
c ((aux657 - aux658 + SATLiteral(186))<=0)
13091 -13094 0
13092 -13095 0
-186 -13094 0
-186 13091 -13095 0
-186 13092 -13097 0
c (0<=(aux657 - aux658 + SATLiteral(186)))
-13092 13097 0
-13091 13095 0
186 13097 0
186 -13092 13095 0
186 -13091 13094 0
c ((aux654 + aux656 - aux659)<=0)
13088 -13099 0
13089 -13100 0
13082 -13099 0
13082 13088 -13100 0
13082 13089 -13102 0
13083 -13100 0
13083 13088 -13102 0
13083 13089 -13104 0
c (0<=(aux654 + aux656 - aux659))
-13089 13104 0
-13088 13102 0
-13083 13104 0
-13083 -13089 13102 0
-13083 -13088 13100 0
-13082 13102 0
-13082 -13089 13100 0
-13082 -13088 13099 0
c ((SATLiteral(457) - aux660 + SATLiteral(727))<=0)
-727 -13106 0
-457 -13106 0
-457 -727 -13107 0
c (0<=(SATLiteral(457) - aux660 + SATLiteral(727)))
727 13107 0
457 13107 0
457 727 13106 0
c ((SATLiteral(1132) - aux661 + SATLiteral(52))<=0)
-52 -13109 0
-1132 -13109 0
-1132 -52 -13110 0
c (0<=(SATLiteral(1132) - aux661 + SATLiteral(52)))
52 13110 0
1132 13110 0
1132 52 13109 0
c (( - aux662 + SATLiteral(862) + SATLiteral(997))<=0)
-997 -13112 0
-862 -13112 0
-862 -997 -13113 0
c (0<=( - aux662 + SATLiteral(862) + SATLiteral(997)))
997 13113 0
862 13113 0
862 997 13112 0
c (( - aux663 + SATLiteral(592) + SATLiteral(322))<=0)
-322 -13115 0
-592 -13115 0
-592 -322 -13116 0
c (0<=( - aux663 + SATLiteral(592) + SATLiteral(322)))
322 13116 0
592 13116 0
592 322 13115 0
c ((aux663 - aux664 + SATLiteral(187))<=0)
13115 -13118 0
13116 -13119 0
-187 -13118 0
-187 13115 -13119 0
-187 13116 -13121 0
c (0<=(aux663 - aux664 + SATLiteral(187)))
-13116 13121 0
-13115 13119 0
187 13121 0
187 -13116 13119 0
187 -13115 13118 0
c ((aux660 + aux662 - aux665)<=0)
13112 -13123 0
13113 -13124 0
13106 -13123 0
13106 13112 -13124 0
13106 13113 -13126 0
13107 -13124 0
13107 13112 -13126 0
13107 13113 -13128 0
c (0<=(aux660 + aux662 - aux665))
-13113 13128 0
-13112 13126 0
-13107 13128 0
-13107 -13113 13126 0
-13107 -13112 13124 0
-13106 13126 0
-13106 -13113 13124 0
-13106 -13112 13123 0
c ((SATLiteral(458) - aux666 + SATLiteral(728))<=0)
-728 -13130 0
-458 -13130 0
-458 -728 -13131 0
c (0<=(SATLiteral(458) - aux666 + SATLiteral(728)))
728 13131 0
458 13131 0
458 728 13130 0
c ((SATLiteral(1133) - aux667 + SATLiteral(53))<=0)
-53 -13133 0
-1133 -13133 0
-1133 -53 -13134 0
c (0<=(SATLiteral(1133) - aux667 + SATLiteral(53)))
53 13134 0
1133 13134 0
1133 53 13133 0
c (( - aux668 + SATLiteral(863) + SATLiteral(998))<=0)
-998 -13136 0
-863 -13136 0
-863 -998 -13137 0
c (0<=( - aux668 + SATLiteral(863) + SATLiteral(998)))
998 13137 0
863 13137 0
863 998 13136 0
c (( - aux669 + SATLiteral(593) + SATLiteral(323))<=0)
-323 -13139 0
-593 -13139 0
-593 -323 -13140 0
c (0<=( - aux669 + SATLiteral(593) + SATLiteral(323)))
323 13140 0
593 13140 0
593 323 13139 0
c ((aux669 - aux670 + SATLiteral(188))<=0)
13139 -13142 0
13140 -13143 0
-188 -13142 0
-188 13139 -13143 0
-188 13140 -13145 0
c (0<=(aux669 - aux670 + SATLiteral(188)))
-13140 13145 0
-13139 13143 0
188 13145 0
188 -13140 13143 0
188 -13139 13142 0
c ((aux666 + aux668 - aux671)<=0)
13136 -13147 0
13137 -13148 0
13130 -13147 0
13130 13136 -13148 0
13130 13137 -13150 0
13131 -13148 0
13131 13136 -13150 0
13131 13137 -13152 0
c (0<=(aux666 + aux668 - aux671))
-13137 13152 0
-13136 13150 0
-13131 13152 0
-13131 -13137 13150 0
-13131 -13136 13148 0
-13130 13150 0
-13130 -13137 13148 0
-13130 -13136 13147 0
c ((SATLiteral(459) - aux672 + SATLiteral(729))<=0)
-729 -13154 0
-459 -13154 0
-459 -729 -13155 0
c (0<=(SATLiteral(459) - aux672 + SATLiteral(729)))
729 13155 0
459 13155 0
459 729 13154 0
c ((SATLiteral(1134) - aux673 + SATLiteral(54))<=0)
-54 -13157 0
-1134 -13157 0
-1134 -54 -13158 0
c (0<=(SATLiteral(1134) - aux673 + SATLiteral(54)))
54 13158 0
1134 13158 0
1134 54 13157 0
c (( - aux674 + SATLiteral(864) + SATLiteral(999))<=0)
-999 -13160 0
-864 -13160 0
-864 -999 -13161 0
c (0<=( - aux674 + SATLiteral(864) + SATLiteral(999)))
999 13161 0
864 13161 0
864 999 13160 0
c (( - aux675 + SATLiteral(594) + SATLiteral(324))<=0)
-324 -13163 0
-594 -13163 0
-594 -324 -13164 0
c (0<=( - aux675 + SATLiteral(594) + SATLiteral(324)))
324 13164 0
594 13164 0
594 324 13163 0
c ((aux675 - aux676 + SATLiteral(189))<=0)
13163 -13166 0
13164 -13167 0
-189 -13166 0
-189 13163 -13167 0
-189 13164 -13169 0
c (0<=(aux675 - aux676 + SATLiteral(189)))
-13164 13169 0
-13163 13167 0
189 13169 0
189 -13164 13167 0
189 -13163 13166 0
c ((aux672 + aux674 - aux677)<=0)
13160 -13171 0
13161 -13172 0
13154 -13171 0
13154 13160 -13172 0
13154 13161 -13174 0
13155 -13172 0
13155 13160 -13174 0
13155 13161 -13176 0
c (0<=(aux672 + aux674 - aux677))
-13161 13176 0
-13160 13174 0
-13155 13176 0
-13155 -13161 13174 0
-13155 -13160 13172 0
-13154 13174 0
-13154 -13161 13172 0
-13154 -13160 13171 0
c ((SATLiteral(460) - aux678 + SATLiteral(730))<=0)
-730 -13178 0
-460 -13178 0
-460 -730 -13179 0
c (0<=(SATLiteral(460) - aux678 + SATLiteral(730)))
730 13179 0
460 13179 0
460 730 13178 0
c ((SATLiteral(1135) - aux679 + SATLiteral(55))<=0)
-55 -13181 0
-1135 -13181 0
-1135 -55 -13182 0
c (0<=(SATLiteral(1135) - aux679 + SATLiteral(55)))
55 13182 0
1135 13182 0
1135 55 13181 0
c (( - aux680 + SATLiteral(865) + SATLiteral(1000))<=0)
-1000 -13184 0
-865 -13184 0
-865 -1000 -13185 0
c (0<=( - aux680 + SATLiteral(865) + SATLiteral(1000)))
1000 13185 0
865 13185 0
865 1000 13184 0
c (( - aux681 + SATLiteral(595) + SATLiteral(325))<=0)
-325 -13187 0
-595 -13187 0
-595 -325 -13188 0
c (0<=( - aux681 + SATLiteral(595) + SATLiteral(325)))
325 13188 0
595 13188 0
595 325 13187 0
c ((aux681 - aux682 + SATLiteral(190))<=0)
13187 -13190 0
13188 -13191 0
-190 -13190 0
-190 13187 -13191 0
-190 13188 -13193 0
c (0<=(aux681 - aux682 + SATLiteral(190)))
-13188 13193 0
-13187 13191 0
190 13193 0
190 -13188 13191 0
190 -13187 13190 0
c ((aux678 + aux680 - aux683)<=0)
13184 -13195 0
13185 -13196 0
13178 -13195 0
13178 13184 -13196 0
13178 13185 -13198 0
13179 -13196 0
13179 13184 -13198 0
13179 13185 -13200 0
c (0<=(aux678 + aux680 - aux683))
-13185 13200 0
-13184 13198 0
-13179 13200 0
-13179 -13185 13198 0
-13179 -13184 13196 0
-13178 13198 0
-13178 -13185 13196 0
-13178 -13184 13195 0
c ((SATLiteral(467) - aux684 + SATLiteral(737))<=0)
-737 -13202 0
-467 -13202 0
-467 -737 -13203 0
c (0<=(SATLiteral(467) - aux684 + SATLiteral(737)))
737 13203 0
467 13203 0
467 737 13202 0
c ((SATLiteral(1142) - aux685 + SATLiteral(62))<=0)
-62 -13205 0
-1142 -13205 0
-1142 -62 -13206 0
c (0<=(SATLiteral(1142) - aux685 + SATLiteral(62)))
62 13206 0
1142 13206 0
1142 62 13205 0
c (( - aux686 + SATLiteral(872) + SATLiteral(1007))<=0)
-1007 -13208 0
-872 -13208 0
-872 -1007 -13209 0
c (0<=( - aux686 + SATLiteral(872) + SATLiteral(1007)))
1007 13209 0
872 13209 0
872 1007 13208 0
c (( - aux687 + SATLiteral(602) + SATLiteral(332))<=0)
-332 -13211 0
-602 -13211 0
-602 -332 -13212 0
c (0<=( - aux687 + SATLiteral(602) + SATLiteral(332)))
332 13212 0
602 13212 0
602 332 13211 0
c ((aux687 - aux688 + SATLiteral(197))<=0)
13211 -13214 0
13212 -13215 0
-197 -13214 0
-197 13211 -13215 0
-197 13212 -13217 0
c (0<=(aux687 - aux688 + SATLiteral(197)))
-13212 13217 0
-13211 13215 0
197 13217 0
197 -13212 13215 0
197 -13211 13214 0
c ((aux684 + aux686 - aux689)<=0)
13208 -13219 0
13209 -13220 0
13202 -13219 0
13202 13208 -13220 0
13202 13209 -13222 0
13203 -13220 0
13203 13208 -13222 0
13203 13209 -13224 0
c (0<=(aux684 + aux686 - aux689))
-13209 13224 0
-13208 13222 0
-13203 13224 0
-13203 -13209 13222 0
-13203 -13208 13220 0
-13202 13222 0
-13202 -13209 13220 0
-13202 -13208 13219 0
c ((SATLiteral(468) - aux690 + SATLiteral(738))<=0)
-738 -13226 0
-468 -13226 0
-468 -738 -13227 0
c (0<=(SATLiteral(468) - aux690 + SATLiteral(738)))
738 13227 0
468 13227 0
468 738 13226 0
c ((SATLiteral(1143) - aux691 + SATLiteral(63))<=0)
-63 -13229 0
-1143 -13229 0
-1143 -63 -13230 0
c (0<=(SATLiteral(1143) - aux691 + SATLiteral(63)))
63 13230 0
1143 13230 0
1143 63 13229 0
c (( - aux692 + SATLiteral(873) + SATLiteral(1008))<=0)
-1008 -13232 0
-873 -13232 0
-873 -1008 -13233 0
c (0<=( - aux692 + SATLiteral(873) + SATLiteral(1008)))
1008 13233 0
873 13233 0
873 1008 13232 0
c (( - aux693 + SATLiteral(603) + SATLiteral(333))<=0)
-333 -13235 0
-603 -13235 0
-603 -333 -13236 0
c (0<=( - aux693 + SATLiteral(603) + SATLiteral(333)))
333 13236 0
603 13236 0
603 333 13235 0
c ((aux693 - aux694 + SATLiteral(198))<=0)
13235 -13238 0
13236 -13239 0
-198 -13238 0
-198 13235 -13239 0
-198 13236 -13241 0
c (0<=(aux693 - aux694 + SATLiteral(198)))
-13236 13241 0
-13235 13239 0
198 13241 0
198 -13236 13239 0
198 -13235 13238 0
c ((aux690 + aux692 - aux695)<=0)
13232 -13243 0
13233 -13244 0
13226 -13243 0
13226 13232 -13244 0
13226 13233 -13246 0
13227 -13244 0
13227 13232 -13246 0
13227 13233 -13248 0
c (0<=(aux690 + aux692 - aux695))
-13233 13248 0
-13232 13246 0
-13227 13248 0
-13227 -13233 13246 0
-13227 -13232 13244 0
-13226 13246 0
-13226 -13233 13244 0
-13226 -13232 13243 0
c ((SATLiteral(469) - aux696 + SATLiteral(739))<=0)
-739 -13250 0
-469 -13250 0
-469 -739 -13251 0
c (0<=(SATLiteral(469) - aux696 + SATLiteral(739)))
739 13251 0
469 13251 0
469 739 13250 0
c ((SATLiteral(1144) - aux697 + SATLiteral(64))<=0)
-64 -13253 0
-1144 -13253 0
-1144 -64 -13254 0
c (0<=(SATLiteral(1144) - aux697 + SATLiteral(64)))
64 13254 0
1144 13254 0
1144 64 13253 0
c (( - aux698 + SATLiteral(874) + SATLiteral(1009))<=0)
-1009 -13256 0
-874 -13256 0
-874 -1009 -13257 0
c (0<=( - aux698 + SATLiteral(874) + SATLiteral(1009)))
1009 13257 0
874 13257 0
874 1009 13256 0
c (( - aux699 + SATLiteral(604) + SATLiteral(334))<=0)
-334 -13259 0
-604 -13259 0
-604 -334 -13260 0
c (0<=( - aux699 + SATLiteral(604) + SATLiteral(334)))
334 13260 0
604 13260 0
604 334 13259 0
c ((aux699 - aux700 + SATLiteral(199))<=0)
13259 -13262 0
13260 -13263 0
-199 -13262 0
-199 13259 -13263 0
-199 13260 -13265 0
c (0<=(aux699 - aux700 + SATLiteral(199)))
-13260 13265 0
-13259 13263 0
199 13265 0
199 -13260 13263 0
199 -13259 13262 0
c ((aux696 + aux698 - aux701)<=0)
13256 -13267 0
13257 -13268 0
13250 -13267 0
13250 13256 -13268 0
13250 13257 -13270 0
13251 -13268 0
13251 13256 -13270 0
13251 13257 -13272 0
c (0<=(aux696 + aux698 - aux701))
-13257 13272 0
-13256 13270 0
-13251 13272 0
-13251 -13257 13270 0
-13251 -13256 13268 0
-13250 13270 0
-13250 -13257 13268 0
-13250 -13256 13267 0
c ((SATLiteral(470) - aux702 + SATLiteral(740))<=0)
-740 -13274 0
-470 -13274 0
-470 -740 -13275 0
c (0<=(SATLiteral(470) - aux702 + SATLiteral(740)))
740 13275 0
470 13275 0
470 740 13274 0
c ((SATLiteral(1145) - aux703 + SATLiteral(65))<=0)
-65 -13277 0
-1145 -13277 0
-1145 -65 -13278 0
c (0<=(SATLiteral(1145) - aux703 + SATLiteral(65)))
65 13278 0
1145 13278 0
1145 65 13277 0
c (( - aux704 + SATLiteral(875) + SATLiteral(1010))<=0)
-1010 -13280 0
-875 -13280 0
-875 -1010 -13281 0
c (0<=( - aux704 + SATLiteral(875) + SATLiteral(1010)))
1010 13281 0
875 13281 0
875 1010 13280 0
c (( - aux705 + SATLiteral(605) + SATLiteral(335))<=0)
-335 -13283 0
-605 -13283 0
-605 -335 -13284 0
c (0<=( - aux705 + SATLiteral(605) + SATLiteral(335)))
335 13284 0
605 13284 0
605 335 13283 0
c ((aux705 - aux706 + SATLiteral(200))<=0)
13283 -13286 0
13284 -13287 0
-200 -13286 0
-200 13283 -13287 0
-200 13284 -13289 0
c (0<=(aux705 - aux706 + SATLiteral(200)))
-13284 13289 0
-13283 13287 0
200 13289 0
200 -13284 13287 0
200 -13283 13286 0
c ((aux702 + aux704 - aux707)<=0)
13280 -13291 0
13281 -13292 0
13274 -13291 0
13274 13280 -13292 0
13274 13281 -13294 0
13275 -13292 0
13275 13280 -13294 0
13275 13281 -13296 0
c (0<=(aux702 + aux704 - aux707))
-13281 13296 0
-13280 13294 0
-13275 13296 0
-13275 -13281 13294 0
-13275 -13280 13292 0
-13274 13294 0
-13274 -13281 13292 0
-13274 -13280 13291 0
c ((SATLiteral(471) - aux708 + SATLiteral(741))<=0)
-741 -13298 0
-471 -13298 0
-471 -741 -13299 0
c (0<=(SATLiteral(471) - aux708 + SATLiteral(741)))
741 13299 0
471 13299 0
471 741 13298 0
c ((SATLiteral(1146) - aux709 + SATLiteral(66))<=0)
-66 -13301 0
-1146 -13301 0
-1146 -66 -13302 0
c (0<=(SATLiteral(1146) - aux709 + SATLiteral(66)))
66 13302 0
1146 13302 0
1146 66 13301 0
c (( - aux710 + SATLiteral(876) + SATLiteral(1011))<=0)
-1011 -13304 0
-876 -13304 0
-876 -1011 -13305 0
c (0<=( - aux710 + SATLiteral(876) + SATLiteral(1011)))
1011 13305 0
876 13305 0
876 1011 13304 0
c (( - aux711 + SATLiteral(606) + SATLiteral(336))<=0)
-336 -13307 0
-606 -13307 0
-606 -336 -13308 0
c (0<=( - aux711 + SATLiteral(606) + SATLiteral(336)))
336 13308 0
606 13308 0
606 336 13307 0
c ((aux711 - aux712 + SATLiteral(201))<=0)
13307 -13310 0
13308 -13311 0
-201 -13310 0
-201 13307 -13311 0
-201 13308 -13313 0
c (0<=(aux711 - aux712 + SATLiteral(201)))
-13308 13313 0
-13307 13311 0
201 13313 0
201 -13308 13311 0
201 -13307 13310 0
c ((aux708 + aux710 - aux713)<=0)
13304 -13315 0
13305 -13316 0
13298 -13315 0
13298 13304 -13316 0
13298 13305 -13318 0
13299 -13316 0
13299 13304 -13318 0
13299 13305 -13320 0
c (0<=(aux708 + aux710 - aux713))
-13305 13320 0
-13304 13318 0
-13299 13320 0
-13299 -13305 13318 0
-13299 -13304 13316 0
-13298 13318 0
-13298 -13305 13316 0
-13298 -13304 13315 0
c ((SATLiteral(472) - aux714 + SATLiteral(742))<=0)
-742 -13322 0
-472 -13322 0
-472 -742 -13323 0
c (0<=(SATLiteral(472) - aux714 + SATLiteral(742)))
742 13323 0
472 13323 0
472 742 13322 0
c ((SATLiteral(1147) - aux715 + SATLiteral(67))<=0)
-67 -13325 0
-1147 -13325 0
-1147 -67 -13326 0
c (0<=(SATLiteral(1147) - aux715 + SATLiteral(67)))
67 13326 0
1147 13326 0
1147 67 13325 0
c (( - aux716 + SATLiteral(877) + SATLiteral(1012))<=0)
-1012 -13328 0
-877 -13328 0
-877 -1012 -13329 0
c (0<=( - aux716 + SATLiteral(877) + SATLiteral(1012)))
1012 13329 0
877 13329 0
877 1012 13328 0
c (( - aux717 + SATLiteral(607) + SATLiteral(337))<=0)
-337 -13331 0
-607 -13331 0
-607 -337 -13332 0
c (0<=( - aux717 + SATLiteral(607) + SATLiteral(337)))
337 13332 0
607 13332 0
607 337 13331 0
c ((aux717 - aux718 + SATLiteral(202))<=0)
13331 -13334 0
13332 -13335 0
-202 -13334 0
-202 13331 -13335 0
-202 13332 -13337 0
c (0<=(aux717 - aux718 + SATLiteral(202)))
-13332 13337 0
-13331 13335 0
202 13337 0
202 -13332 13335 0
202 -13331 13334 0
c ((aux714 + aux716 - aux719)<=0)
13328 -13339 0
13329 -13340 0
13322 -13339 0
13322 13328 -13340 0
13322 13329 -13342 0
13323 -13340 0
13323 13328 -13342 0
13323 13329 -13344 0
c (0<=(aux714 + aux716 - aux719))
-13329 13344 0
-13328 13342 0
-13323 13344 0
-13323 -13329 13342 0
-13323 -13328 13340 0
-13322 13342 0
-13322 -13329 13340 0
-13322 -13328 13339 0
c ((SATLiteral(473) - aux720 + SATLiteral(743))<=0)
-743 -13346 0
-473 -13346 0
-473 -743 -13347 0
c (0<=(SATLiteral(473) - aux720 + SATLiteral(743)))
743 13347 0
473 13347 0
473 743 13346 0
c ((SATLiteral(1148) - aux721 + SATLiteral(68))<=0)
-68 -13349 0
-1148 -13349 0
-1148 -68 -13350 0
c (0<=(SATLiteral(1148) - aux721 + SATLiteral(68)))
68 13350 0
1148 13350 0
1148 68 13349 0
c (( - aux722 + SATLiteral(878) + SATLiteral(1013))<=0)
-1013 -13352 0
-878 -13352 0
-878 -1013 -13353 0
c (0<=( - aux722 + SATLiteral(878) + SATLiteral(1013)))
1013 13353 0
878 13353 0
878 1013 13352 0
c (( - aux723 + SATLiteral(608) + SATLiteral(338))<=0)
-338 -13355 0
-608 -13355 0
-608 -338 -13356 0
c (0<=( - aux723 + SATLiteral(608) + SATLiteral(338)))
338 13356 0
608 13356 0
608 338 13355 0
c ((aux723 - aux724 + SATLiteral(203))<=0)
13355 -13358 0
13356 -13359 0
-203 -13358 0
-203 13355 -13359 0
-203 13356 -13361 0
c (0<=(aux723 - aux724 + SATLiteral(203)))
-13356 13361 0
-13355 13359 0
203 13361 0
203 -13356 13359 0
203 -13355 13358 0
c ((aux720 + aux722 - aux725)<=0)
13352 -13363 0
13353 -13364 0
13346 -13363 0
13346 13352 -13364 0
13346 13353 -13366 0
13347 -13364 0
13347 13352 -13366 0
13347 13353 -13368 0
c (0<=(aux720 + aux722 - aux725))
-13353 13368 0
-13352 13366 0
-13347 13368 0
-13347 -13353 13366 0
-13347 -13352 13364 0
-13346 13366 0
-13346 -13353 13364 0
-13346 -13352 13363 0
c ((SATLiteral(474) - aux726 + SATLiteral(744))<=0)
-744 -13370 0
-474 -13370 0
-474 -744 -13371 0
c (0<=(SATLiteral(474) - aux726 + SATLiteral(744)))
744 13371 0
474 13371 0
474 744 13370 0
c ((SATLiteral(1149) - aux727 + SATLiteral(69))<=0)
-69 -13373 0
-1149 -13373 0
-1149 -69 -13374 0
c (0<=(SATLiteral(1149) - aux727 + SATLiteral(69)))
69 13374 0
1149 13374 0
1149 69 13373 0
c (( - aux728 + SATLiteral(879) + SATLiteral(1014))<=0)
-1014 -13376 0
-879 -13376 0
-879 -1014 -13377 0
c (0<=( - aux728 + SATLiteral(879) + SATLiteral(1014)))
1014 13377 0
879 13377 0
879 1014 13376 0
c (( - aux729 + SATLiteral(609) + SATLiteral(339))<=0)
-339 -13379 0
-609 -13379 0
-609 -339 -13380 0
c (0<=( - aux729 + SATLiteral(609) + SATLiteral(339)))
339 13380 0
609 13380 0
609 339 13379 0
c ((aux729 - aux730 + SATLiteral(204))<=0)
13379 -13382 0
13380 -13383 0
-204 -13382 0
-204 13379 -13383 0
-204 13380 -13385 0
c (0<=(aux729 - aux730 + SATLiteral(204)))
-13380 13385 0
-13379 13383 0
204 13385 0
204 -13380 13383 0
204 -13379 13382 0
c ((aux726 + aux728 - aux731)<=0)
13376 -13387 0
13377 -13388 0
13370 -13387 0
13370 13376 -13388 0
13370 13377 -13390 0
13371 -13388 0
13371 13376 -13390 0
13371 13377 -13392 0
c (0<=(aux726 + aux728 - aux731))
-13377 13392 0
-13376 13390 0
-13371 13392 0
-13371 -13377 13390 0
-13371 -13376 13388 0
-13370 13390 0
-13370 -13377 13388 0
-13370 -13376 13387 0
c ((SATLiteral(475) - aux732 + SATLiteral(745))<=0)
-745 -13394 0
-475 -13394 0
-475 -745 -13395 0
c (0<=(SATLiteral(475) - aux732 + SATLiteral(745)))
745 13395 0
475 13395 0
475 745 13394 0
c ((SATLiteral(1150) - aux733 + SATLiteral(70))<=0)
-70 -13397 0
-1150 -13397 0
-1150 -70 -13398 0
c (0<=(SATLiteral(1150) - aux733 + SATLiteral(70)))
70 13398 0
1150 13398 0
1150 70 13397 0
c (( - aux734 + SATLiteral(880) + SATLiteral(1015))<=0)
-1015 -13400 0
-880 -13400 0
-880 -1015 -13401 0
c (0<=( - aux734 + SATLiteral(880) + SATLiteral(1015)))
1015 13401 0
880 13401 0
880 1015 13400 0
c (( - aux735 + SATLiteral(610) + SATLiteral(340))<=0)
-340 -13403 0
-610 -13403 0
-610 -340 -13404 0
c (0<=( - aux735 + SATLiteral(610) + SATLiteral(340)))
340 13404 0
610 13404 0
610 340 13403 0
c ((aux735 - aux736 + SATLiteral(205))<=0)
13403 -13406 0
13404 -13407 0
-205 -13406 0
-205 13403 -13407 0
-205 13404 -13409 0
c (0<=(aux735 - aux736 + SATLiteral(205)))
-13404 13409 0
-13403 13407 0
205 13409 0
205 -13404 13407 0
205 -13403 13406 0
c ((aux732 + aux734 - aux737)<=0)
13400 -13411 0
13401 -13412 0
13394 -13411 0
13394 13400 -13412 0
13394 13401 -13414 0
13395 -13412 0
13395 13400 -13414 0
13395 13401 -13416 0
c (0<=(aux732 + aux734 - aux737))
-13401 13416 0
-13400 13414 0
-13395 13416 0
-13395 -13401 13414 0
-13395 -13400 13412 0
-13394 13414 0
-13394 -13401 13412 0
-13394 -13400 13411 0
c ((SATLiteral(482) - aux738 + SATLiteral(752))<=0)
-752 -13418 0
-482 -13418 0
-482 -752 -13419 0
c (0<=(SATLiteral(482) - aux738 + SATLiteral(752)))
752 13419 0
482 13419 0
482 752 13418 0
c ((SATLiteral(1157) - aux739 + SATLiteral(77))<=0)
-77 -13421 0
-1157 -13421 0
-1157 -77 -13422 0
c (0<=(SATLiteral(1157) - aux739 + SATLiteral(77)))
77 13422 0
1157 13422 0
1157 77 13421 0
c (( - aux740 + SATLiteral(887) + SATLiteral(1022))<=0)
-1022 -13424 0
-887 -13424 0
-887 -1022 -13425 0
c (0<=( - aux740 + SATLiteral(887) + SATLiteral(1022)))
1022 13425 0
887 13425 0
887 1022 13424 0
c (( - aux741 + SATLiteral(617) + SATLiteral(347))<=0)
-347 -13427 0
-617 -13427 0
-617 -347 -13428 0
c (0<=( - aux741 + SATLiteral(617) + SATLiteral(347)))
347 13428 0
617 13428 0
617 347 13427 0
c ((aux741 - aux742 + SATLiteral(212))<=0)
13427 -13430 0
13428 -13431 0
-212 -13430 0
-212 13427 -13431 0
-212 13428 -13433 0
c (0<=(aux741 - aux742 + SATLiteral(212)))
-13428 13433 0
-13427 13431 0
212 13433 0
212 -13428 13431 0
212 -13427 13430 0
c ((aux738 + aux740 - aux743)<=0)
13424 -13435 0
13425 -13436 0
13418 -13435 0
13418 13424 -13436 0
13418 13425 -13438 0
13419 -13436 0
13419 13424 -13438 0
13419 13425 -13440 0
c (0<=(aux738 + aux740 - aux743))
-13425 13440 0
-13424 13438 0
-13419 13440 0
-13419 -13425 13438 0
-13419 -13424 13436 0
-13418 13438 0
-13418 -13425 13436 0
-13418 -13424 13435 0
c ((SATLiteral(483) - aux744 + SATLiteral(753))<=0)
-753 -13442 0
-483 -13442 0
-483 -753 -13443 0
c (0<=(SATLiteral(483) - aux744 + SATLiteral(753)))
753 13443 0
483 13443 0
483 753 13442 0
c ((SATLiteral(1158) - aux745 + SATLiteral(78))<=0)
-78 -13445 0
-1158 -13445 0
-1158 -78 -13446 0
c (0<=(SATLiteral(1158) - aux745 + SATLiteral(78)))
78 13446 0
1158 13446 0
1158 78 13445 0
c (( - aux746 + SATLiteral(888) + SATLiteral(1023))<=0)
-1023 -13448 0
-888 -13448 0
-888 -1023 -13449 0
c (0<=( - aux746 + SATLiteral(888) + SATLiteral(1023)))
1023 13449 0
888 13449 0
888 1023 13448 0
c (( - aux747 + SATLiteral(618) + SATLiteral(348))<=0)
-348 -13451 0
-618 -13451 0
-618 -348 -13452 0
c (0<=( - aux747 + SATLiteral(618) + SATLiteral(348)))
348 13452 0
618 13452 0
618 348 13451 0
c ((aux747 - aux748 + SATLiteral(213))<=0)
13451 -13454 0
13452 -13455 0
-213 -13454 0
-213 13451 -13455 0
-213 13452 -13457 0
c (0<=(aux747 - aux748 + SATLiteral(213)))
-13452 13457 0
-13451 13455 0
213 13457 0
213 -13452 13455 0
213 -13451 13454 0
c ((aux744 + aux746 - aux749)<=0)
13448 -13459 0
13449 -13460 0
13442 -13459 0
13442 13448 -13460 0
13442 13449 -13462 0
13443 -13460 0
13443 13448 -13462 0
13443 13449 -13464 0
c (0<=(aux744 + aux746 - aux749))
-13449 13464 0
-13448 13462 0
-13443 13464 0
-13443 -13449 13462 0
-13443 -13448 13460 0
-13442 13462 0
-13442 -13449 13460 0
-13442 -13448 13459 0
c ((SATLiteral(484) - aux750 + SATLiteral(754))<=0)
-754 -13466 0
-484 -13466 0
-484 -754 -13467 0
c (0<=(SATLiteral(484) - aux750 + SATLiteral(754)))
754 13467 0
484 13467 0
484 754 13466 0
c ((SATLiteral(1159) - aux751 + SATLiteral(79))<=0)
-79 -13469 0
-1159 -13469 0
-1159 -79 -13470 0
c (0<=(SATLiteral(1159) - aux751 + SATLiteral(79)))
79 13470 0
1159 13470 0
1159 79 13469 0
c (( - aux752 + SATLiteral(889) + SATLiteral(1024))<=0)
-1024 -13472 0
-889 -13472 0
-889 -1024 -13473 0
c (0<=( - aux752 + SATLiteral(889) + SATLiteral(1024)))
1024 13473 0
889 13473 0
889 1024 13472 0
c (( - aux753 + SATLiteral(619) + SATLiteral(349))<=0)
-349 -13475 0
-619 -13475 0
-619 -349 -13476 0
c (0<=( - aux753 + SATLiteral(619) + SATLiteral(349)))
349 13476 0
619 13476 0
619 349 13475 0
c ((aux753 - aux754 + SATLiteral(214))<=0)
13475 -13478 0
13476 -13479 0
-214 -13478 0
-214 13475 -13479 0
-214 13476 -13481 0
c (0<=(aux753 - aux754 + SATLiteral(214)))
-13476 13481 0
-13475 13479 0
214 13481 0
214 -13476 13479 0
214 -13475 13478 0
c ((aux750 + aux752 - aux755)<=0)
13472 -13483 0
13473 -13484 0
13466 -13483 0
13466 13472 -13484 0
13466 13473 -13486 0
13467 -13484 0
13467 13472 -13486 0
13467 13473 -13488 0
c (0<=(aux750 + aux752 - aux755))
-13473 13488 0
-13472 13486 0
-13467 13488 0
-13467 -13473 13486 0
-13467 -13472 13484 0
-13466 13486 0
-13466 -13473 13484 0
-13466 -13472 13483 0
c ((SATLiteral(485) - aux756 + SATLiteral(755))<=0)
-755 -13490 0
-485 -13490 0
-485 -755 -13491 0
c (0<=(SATLiteral(485) - aux756 + SATLiteral(755)))
755 13491 0
485 13491 0
485 755 13490 0
c ((SATLiteral(1160) - aux757 + SATLiteral(80))<=0)
-80 -13493 0
-1160 -13493 0
-1160 -80 -13494 0
c (0<=(SATLiteral(1160) - aux757 + SATLiteral(80)))
80 13494 0
1160 13494 0
1160 80 13493 0
c (( - aux758 + SATLiteral(890) + SATLiteral(1025))<=0)
-1025 -13496 0
-890 -13496 0
-890 -1025 -13497 0
c (0<=( - aux758 + SATLiteral(890) + SATLiteral(1025)))
1025 13497 0
890 13497 0
890 1025 13496 0
c (( - aux759 + SATLiteral(620) + SATLiteral(350))<=0)
-350 -13499 0
-620 -13499 0
-620 -350 -13500 0
c (0<=( - aux759 + SATLiteral(620) + SATLiteral(350)))
350 13500 0
620 13500 0
620 350 13499 0
c ((aux759 - aux760 + SATLiteral(215))<=0)
13499 -13502 0
13500 -13503 0
-215 -13502 0
-215 13499 -13503 0
-215 13500 -13505 0
c (0<=(aux759 - aux760 + SATLiteral(215)))
-13500 13505 0
-13499 13503 0
215 13505 0
215 -13500 13503 0
215 -13499 13502 0
c ((aux756 + aux758 - aux761)<=0)
13496 -13507 0
13497 -13508 0
13490 -13507 0
13490 13496 -13508 0
13490 13497 -13510 0
13491 -13508 0
13491 13496 -13510 0
13491 13497 -13512 0
c (0<=(aux756 + aux758 - aux761))
-13497 13512 0
-13496 13510 0
-13491 13512 0
-13491 -13497 13510 0
-13491 -13496 13508 0
-13490 13510 0
-13490 -13497 13508 0
-13490 -13496 13507 0
c ((SATLiteral(486) - aux762 + SATLiteral(756))<=0)
-756 -13514 0
-486 -13514 0
-486 -756 -13515 0
c (0<=(SATLiteral(486) - aux762 + SATLiteral(756)))
756 13515 0
486 13515 0
486 756 13514 0
c ((SATLiteral(1161) - aux763 + SATLiteral(81))<=0)
-81 -13517 0
-1161 -13517 0
-1161 -81 -13518 0
c (0<=(SATLiteral(1161) - aux763 + SATLiteral(81)))
81 13518 0
1161 13518 0
1161 81 13517 0
c (( - aux764 + SATLiteral(891) + SATLiteral(1026))<=0)
-1026 -13520 0
-891 -13520 0
-891 -1026 -13521 0
c (0<=( - aux764 + SATLiteral(891) + SATLiteral(1026)))
1026 13521 0
891 13521 0
891 1026 13520 0
c (( - aux765 + SATLiteral(621) + SATLiteral(351))<=0)
-351 -13523 0
-621 -13523 0
-621 -351 -13524 0
c (0<=( - aux765 + SATLiteral(621) + SATLiteral(351)))
351 13524 0
621 13524 0
621 351 13523 0
c ((aux765 - aux766 + SATLiteral(216))<=0)
13523 -13526 0
13524 -13527 0
-216 -13526 0
-216 13523 -13527 0
-216 13524 -13529 0
c (0<=(aux765 - aux766 + SATLiteral(216)))
-13524 13529 0
-13523 13527 0
216 13529 0
216 -13524 13527 0
216 -13523 13526 0
c ((aux762 + aux764 - aux767)<=0)
13520 -13531 0
13521 -13532 0
13514 -13531 0
13514 13520 -13532 0
13514 13521 -13534 0
13515 -13532 0
13515 13520 -13534 0
13515 13521 -13536 0
c (0<=(aux762 + aux764 - aux767))
-13521 13536 0
-13520 13534 0
-13515 13536 0
-13515 -13521 13534 0
-13515 -13520 13532 0
-13514 13534 0
-13514 -13521 13532 0
-13514 -13520 13531 0
c ((SATLiteral(487) - aux768 + SATLiteral(757))<=0)
-757 -13538 0
-487 -13538 0
-487 -757 -13539 0
c (0<=(SATLiteral(487) - aux768 + SATLiteral(757)))
757 13539 0
487 13539 0
487 757 13538 0
c ((SATLiteral(1162) - aux769 + SATLiteral(82))<=0)
-82 -13541 0
-1162 -13541 0
-1162 -82 -13542 0
c (0<=(SATLiteral(1162) - aux769 + SATLiteral(82)))
82 13542 0
1162 13542 0
1162 82 13541 0
c (( - aux770 + SATLiteral(892) + SATLiteral(1027))<=0)
-1027 -13544 0
-892 -13544 0
-892 -1027 -13545 0
c (0<=( - aux770 + SATLiteral(892) + SATLiteral(1027)))
1027 13545 0
892 13545 0
892 1027 13544 0
c (( - aux771 + SATLiteral(622) + SATLiteral(352))<=0)
-352 -13547 0
-622 -13547 0
-622 -352 -13548 0
c (0<=( - aux771 + SATLiteral(622) + SATLiteral(352)))
352 13548 0
622 13548 0
622 352 13547 0
c ((aux771 - aux772 + SATLiteral(217))<=0)
13547 -13550 0
13548 -13551 0
-217 -13550 0
-217 13547 -13551 0
-217 13548 -13553 0
c (0<=(aux771 - aux772 + SATLiteral(217)))
-13548 13553 0
-13547 13551 0
217 13553 0
217 -13548 13551 0
217 -13547 13550 0
c ((aux768 + aux770 - aux773)<=0)
13544 -13555 0
13545 -13556 0
13538 -13555 0
13538 13544 -13556 0
13538 13545 -13558 0
13539 -13556 0
13539 13544 -13558 0
13539 13545 -13560 0
c (0<=(aux768 + aux770 - aux773))
-13545 13560 0
-13544 13558 0
-13539 13560 0
-13539 -13545 13558 0
-13539 -13544 13556 0
-13538 13558 0
-13538 -13545 13556 0
-13538 -13544 13555 0
c ((SATLiteral(488) - aux774 + SATLiteral(758))<=0)
-758 -13562 0
-488 -13562 0
-488 -758 -13563 0
c (0<=(SATLiteral(488) - aux774 + SATLiteral(758)))
758 13563 0
488 13563 0
488 758 13562 0
c ((SATLiteral(1163) - aux775 + SATLiteral(83))<=0)
-83 -13565 0
-1163 -13565 0
-1163 -83 -13566 0
c (0<=(SATLiteral(1163) - aux775 + SATLiteral(83)))
83 13566 0
1163 13566 0
1163 83 13565 0
c (( - aux776 + SATLiteral(893) + SATLiteral(1028))<=0)
-1028 -13568 0
-893 -13568 0
-893 -1028 -13569 0
c (0<=( - aux776 + SATLiteral(893) + SATLiteral(1028)))
1028 13569 0
893 13569 0
893 1028 13568 0
c (( - aux777 + SATLiteral(623) + SATLiteral(353))<=0)
-353 -13571 0
-623 -13571 0
-623 -353 -13572 0
c (0<=( - aux777 + SATLiteral(623) + SATLiteral(353)))
353 13572 0
623 13572 0
623 353 13571 0
c ((aux777 - aux778 + SATLiteral(218))<=0)
13571 -13574 0
13572 -13575 0
-218 -13574 0
-218 13571 -13575 0
-218 13572 -13577 0
c (0<=(aux777 - aux778 + SATLiteral(218)))
-13572 13577 0
-13571 13575 0
218 13577 0
218 -13572 13575 0
218 -13571 13574 0
c ((aux774 + aux776 - aux779)<=0)
13568 -13579 0
13569 -13580 0
13562 -13579 0
13562 13568 -13580 0
13562 13569 -13582 0
13563 -13580 0
13563 13568 -13582 0
13563 13569 -13584 0
c (0<=(aux774 + aux776 - aux779))
-13569 13584 0
-13568 13582 0
-13563 13584 0
-13563 -13569 13582 0
-13563 -13568 13580 0
-13562 13582 0
-13562 -13569 13580 0
-13562 -13568 13579 0
c ((SATLiteral(489) - aux780 + SATLiteral(759))<=0)
-759 -13586 0
-489 -13586 0
-489 -759 -13587 0
c (0<=(SATLiteral(489) - aux780 + SATLiteral(759)))
759 13587 0
489 13587 0
489 759 13586 0
c ((SATLiteral(1164) - aux781 + SATLiteral(84))<=0)
-84 -13589 0
-1164 -13589 0
-1164 -84 -13590 0
c (0<=(SATLiteral(1164) - aux781 + SATLiteral(84)))
84 13590 0
1164 13590 0
1164 84 13589 0
c (( - aux782 + SATLiteral(894) + SATLiteral(1029))<=0)
-1029 -13592 0
-894 -13592 0
-894 -1029 -13593 0
c (0<=( - aux782 + SATLiteral(894) + SATLiteral(1029)))
1029 13593 0
894 13593 0
894 1029 13592 0
c (( - aux783 + SATLiteral(624) + SATLiteral(354))<=0)
-354 -13595 0
-624 -13595 0
-624 -354 -13596 0
c (0<=( - aux783 + SATLiteral(624) + SATLiteral(354)))
354 13596 0
624 13596 0
624 354 13595 0
c ((aux783 - aux784 + SATLiteral(219))<=0)
13595 -13598 0
13596 -13599 0
-219 -13598 0
-219 13595 -13599 0
-219 13596 -13601 0
c (0<=(aux783 - aux784 + SATLiteral(219)))
-13596 13601 0
-13595 13599 0
219 13601 0
219 -13596 13599 0
219 -13595 13598 0
c ((aux780 + aux782 - aux785)<=0)
13592 -13603 0
13593 -13604 0
13586 -13603 0
13586 13592 -13604 0
13586 13593 -13606 0
13587 -13604 0
13587 13592 -13606 0
13587 13593 -13608 0
c (0<=(aux780 + aux782 - aux785))
-13593 13608 0
-13592 13606 0
-13587 13608 0
-13587 -13593 13606 0
-13587 -13592 13604 0
-13586 13606 0
-13586 -13593 13604 0
-13586 -13592 13603 0
c ((SATLiteral(490) - aux786 + SATLiteral(760))<=0)
-760 -13610 0
-490 -13610 0
-490 -760 -13611 0
c (0<=(SATLiteral(490) - aux786 + SATLiteral(760)))
760 13611 0
490 13611 0
490 760 13610 0
c ((SATLiteral(1165) - aux787 + SATLiteral(85))<=0)
-85 -13613 0
-1165 -13613 0
-1165 -85 -13614 0
c (0<=(SATLiteral(1165) - aux787 + SATLiteral(85)))
85 13614 0
1165 13614 0
1165 85 13613 0
c (( - aux788 + SATLiteral(895) + SATLiteral(1030))<=0)
-1030 -13616 0
-895 -13616 0
-895 -1030 -13617 0
c (0<=( - aux788 + SATLiteral(895) + SATLiteral(1030)))
1030 13617 0
895 13617 0
895 1030 13616 0
c (( - aux789 + SATLiteral(625) + SATLiteral(355))<=0)
-355 -13619 0
-625 -13619 0
-625 -355 -13620 0
c (0<=( - aux789 + SATLiteral(625) + SATLiteral(355)))
355 13620 0
625 13620 0
625 355 13619 0
c ((aux789 - aux790 + SATLiteral(220))<=0)
13619 -13622 0
13620 -13623 0
-220 -13622 0
-220 13619 -13623 0
-220 13620 -13625 0
c (0<=(aux789 - aux790 + SATLiteral(220)))
-13620 13625 0
-13619 13623 0
220 13625 0
220 -13620 13623 0
220 -13619 13622 0
c ((aux786 + aux788 - aux791)<=0)
13616 -13627 0
13617 -13628 0
13610 -13627 0
13610 13616 -13628 0
13610 13617 -13630 0
13611 -13628 0
13611 13616 -13630 0
13611 13617 -13632 0
c (0<=(aux786 + aux788 - aux791))
-13617 13632 0
-13616 13630 0
-13611 13632 0
-13611 -13617 13630 0
-13611 -13616 13628 0
-13610 13630 0
-13610 -13617 13628 0
-13610 -13616 13627 0
c ((SATLiteral(497) - aux792 + SATLiteral(767))<=0)
-767 -13634 0
-497 -13634 0
-497 -767 -13635 0
c (0<=(SATLiteral(497) - aux792 + SATLiteral(767)))
767 13635 0
497 13635 0
497 767 13634 0
c ((SATLiteral(1172) - aux793 + SATLiteral(92))<=0)
-92 -13637 0
-1172 -13637 0
-1172 -92 -13638 0
c (0<=(SATLiteral(1172) - aux793 + SATLiteral(92)))
92 13638 0
1172 13638 0
1172 92 13637 0
c (( - aux794 + SATLiteral(902) + SATLiteral(1037))<=0)
-1037 -13640 0
-902 -13640 0
-902 -1037 -13641 0
c (0<=( - aux794 + SATLiteral(902) + SATLiteral(1037)))
1037 13641 0
902 13641 0
902 1037 13640 0
c (( - aux795 + SATLiteral(632) + SATLiteral(362))<=0)
-362 -13643 0
-632 -13643 0
-632 -362 -13644 0
c (0<=( - aux795 + SATLiteral(632) + SATLiteral(362)))
362 13644 0
632 13644 0
632 362 13643 0
c ((aux795 - aux796 + SATLiteral(227))<=0)
13643 -13646 0
13644 -13647 0
-227 -13646 0
-227 13643 -13647 0
-227 13644 -13649 0
c (0<=(aux795 - aux796 + SATLiteral(227)))
-13644 13649 0
-13643 13647 0
227 13649 0
227 -13644 13647 0
227 -13643 13646 0
c ((aux792 + aux794 - aux797)<=0)
13640 -13651 0
13641 -13652 0
13634 -13651 0
13634 13640 -13652 0
13634 13641 -13654 0
13635 -13652 0
13635 13640 -13654 0
13635 13641 -13656 0
c (0<=(aux792 + aux794 - aux797))
-13641 13656 0
-13640 13654 0
-13635 13656 0
-13635 -13641 13654 0
-13635 -13640 13652 0
-13634 13654 0
-13634 -13641 13652 0
-13634 -13640 13651 0
c ((SATLiteral(498) - aux798 + SATLiteral(768))<=0)
-768 -13658 0
-498 -13658 0
-498 -768 -13659 0
c (0<=(SATLiteral(498) - aux798 + SATLiteral(768)))
768 13659 0
498 13659 0
498 768 13658 0
c ((SATLiteral(1173) - aux799 + SATLiteral(93))<=0)
-93 -13661 0
-1173 -13661 0
-1173 -93 -13662 0
c (0<=(SATLiteral(1173) - aux799 + SATLiteral(93)))
93 13662 0
1173 13662 0
1173 93 13661 0
c (( - aux800 + SATLiteral(903) + SATLiteral(1038))<=0)
-1038 -13664 0
-903 -13664 0
-903 -1038 -13665 0
c (0<=( - aux800 + SATLiteral(903) + SATLiteral(1038)))
1038 13665 0
903 13665 0
903 1038 13664 0
c (( - aux801 + SATLiteral(633) + SATLiteral(363))<=0)
-363 -13667 0
-633 -13667 0
-633 -363 -13668 0
c (0<=( - aux801 + SATLiteral(633) + SATLiteral(363)))
363 13668 0
633 13668 0
633 363 13667 0
c ((aux801 - aux802 + SATLiteral(228))<=0)
13667 -13670 0
13668 -13671 0
-228 -13670 0
-228 13667 -13671 0
-228 13668 -13673 0
c (0<=(aux801 - aux802 + SATLiteral(228)))
-13668 13673 0
-13667 13671 0
228 13673 0
228 -13668 13671 0
228 -13667 13670 0
c ((aux798 + aux800 - aux803)<=0)
13664 -13675 0
13665 -13676 0
13658 -13675 0
13658 13664 -13676 0
13658 13665 -13678 0
13659 -13676 0
13659 13664 -13678 0
13659 13665 -13680 0
c (0<=(aux798 + aux800 - aux803))
-13665 13680 0
-13664 13678 0
-13659 13680 0
-13659 -13665 13678 0
-13659 -13664 13676 0
-13658 13678 0
-13658 -13665 13676 0
-13658 -13664 13675 0
c ((SATLiteral(499) - aux804 + SATLiteral(769))<=0)
-769 -13682 0
-499 -13682 0
-499 -769 -13683 0
c (0<=(SATLiteral(499) - aux804 + SATLiteral(769)))
769 13683 0
499 13683 0
499 769 13682 0
c ((SATLiteral(1174) - aux805 + SATLiteral(94))<=0)
-94 -13685 0
-1174 -13685 0
-1174 -94 -13686 0
c (0<=(SATLiteral(1174) - aux805 + SATLiteral(94)))
94 13686 0
1174 13686 0
1174 94 13685 0
c (( - aux806 + SATLiteral(904) + SATLiteral(1039))<=0)
-1039 -13688 0
-904 -13688 0
-904 -1039 -13689 0
c (0<=( - aux806 + SATLiteral(904) + SATLiteral(1039)))
1039 13689 0
904 13689 0
904 1039 13688 0
c (( - aux807 + SATLiteral(634) + SATLiteral(364))<=0)
-364 -13691 0
-634 -13691 0
-634 -364 -13692 0
c (0<=( - aux807 + SATLiteral(634) + SATLiteral(364)))
364 13692 0
634 13692 0
634 364 13691 0
c ((aux807 - aux808 + SATLiteral(229))<=0)
13691 -13694 0
13692 -13695 0
-229 -13694 0
-229 13691 -13695 0
-229 13692 -13697 0
c (0<=(aux807 - aux808 + SATLiteral(229)))
-13692 13697 0
-13691 13695 0
229 13697 0
229 -13692 13695 0
229 -13691 13694 0
c ((aux804 + aux806 - aux809)<=0)
13688 -13699 0
13689 -13700 0
13682 -13699 0
13682 13688 -13700 0
13682 13689 -13702 0
13683 -13700 0
13683 13688 -13702 0
13683 13689 -13704 0
c (0<=(aux804 + aux806 - aux809))
-13689 13704 0
-13688 13702 0
-13683 13704 0
-13683 -13689 13702 0
-13683 -13688 13700 0
-13682 13702 0
-13682 -13689 13700 0
-13682 -13688 13699 0
c ((SATLiteral(500) - aux810 + SATLiteral(770))<=0)
-770 -13706 0
-500 -13706 0
-500 -770 -13707 0
c (0<=(SATLiteral(500) - aux810 + SATLiteral(770)))
770 13707 0
500 13707 0
500 770 13706 0
c ((SATLiteral(1175) - aux811 + SATLiteral(95))<=0)
-95 -13709 0
-1175 -13709 0
-1175 -95 -13710 0
c (0<=(SATLiteral(1175) - aux811 + SATLiteral(95)))
95 13710 0
1175 13710 0
1175 95 13709 0
c (( - aux812 + SATLiteral(905) + SATLiteral(1040))<=0)
-1040 -13712 0
-905 -13712 0
-905 -1040 -13713 0
c (0<=( - aux812 + SATLiteral(905) + SATLiteral(1040)))
1040 13713 0
905 13713 0
905 1040 13712 0
c (( - aux813 + SATLiteral(635) + SATLiteral(365))<=0)
-365 -13715 0
-635 -13715 0
-635 -365 -13716 0
c (0<=( - aux813 + SATLiteral(635) + SATLiteral(365)))
365 13716 0
635 13716 0
635 365 13715 0
c ((aux813 - aux814 + SATLiteral(230))<=0)
13715 -13718 0
13716 -13719 0
-230 -13718 0
-230 13715 -13719 0
-230 13716 -13721 0
c (0<=(aux813 - aux814 + SATLiteral(230)))
-13716 13721 0
-13715 13719 0
230 13721 0
230 -13716 13719 0
230 -13715 13718 0
c ((aux810 + aux812 - aux815)<=0)
13712 -13723 0
13713 -13724 0
13706 -13723 0
13706 13712 -13724 0
13706 13713 -13726 0
13707 -13724 0
13707 13712 -13726 0
13707 13713 -13728 0
c (0<=(aux810 + aux812 - aux815))
-13713 13728 0
-13712 13726 0
-13707 13728 0
-13707 -13713 13726 0
-13707 -13712 13724 0
-13706 13726 0
-13706 -13713 13724 0
-13706 -13712 13723 0
c ((SATLiteral(501) - aux816 + SATLiteral(771))<=0)
-771 -13730 0
-501 -13730 0
-501 -771 -13731 0
c (0<=(SATLiteral(501) - aux816 + SATLiteral(771)))
771 13731 0
501 13731 0
501 771 13730 0
c ((SATLiteral(1176) - aux817 + SATLiteral(96))<=0)
-96 -13733 0
-1176 -13733 0
-1176 -96 -13734 0
c (0<=(SATLiteral(1176) - aux817 + SATLiteral(96)))
96 13734 0
1176 13734 0
1176 96 13733 0
c (( - aux818 + SATLiteral(906) + SATLiteral(1041))<=0)
-1041 -13736 0
-906 -13736 0
-906 -1041 -13737 0
c (0<=( - aux818 + SATLiteral(906) + SATLiteral(1041)))
1041 13737 0
906 13737 0
906 1041 13736 0
c (( - aux819 + SATLiteral(636) + SATLiteral(366))<=0)
-366 -13739 0
-636 -13739 0
-636 -366 -13740 0
c (0<=( - aux819 + SATLiteral(636) + SATLiteral(366)))
366 13740 0
636 13740 0
636 366 13739 0
c ((aux819 - aux820 + SATLiteral(231))<=0)
13739 -13742 0
13740 -13743 0
-231 -13742 0
-231 13739 -13743 0
-231 13740 -13745 0
c (0<=(aux819 - aux820 + SATLiteral(231)))
-13740 13745 0
-13739 13743 0
231 13745 0
231 -13740 13743 0
231 -13739 13742 0
c ((aux816 + aux818 - aux821)<=0)
13736 -13747 0
13737 -13748 0
13730 -13747 0
13730 13736 -13748 0
13730 13737 -13750 0
13731 -13748 0
13731 13736 -13750 0
13731 13737 -13752 0
c (0<=(aux816 + aux818 - aux821))
-13737 13752 0
-13736 13750 0
-13731 13752 0
-13731 -13737 13750 0
-13731 -13736 13748 0
-13730 13750 0
-13730 -13737 13748 0
-13730 -13736 13747 0
c ((SATLiteral(502) - aux822 + SATLiteral(772))<=0)
-772 -13754 0
-502 -13754 0
-502 -772 -13755 0
c (0<=(SATLiteral(502) - aux822 + SATLiteral(772)))
772 13755 0
502 13755 0
502 772 13754 0
c ((SATLiteral(1177) - aux823 + SATLiteral(97))<=0)
-97 -13757 0
-1177 -13757 0
-1177 -97 -13758 0
c (0<=(SATLiteral(1177) - aux823 + SATLiteral(97)))
97 13758 0
1177 13758 0
1177 97 13757 0
c (( - aux824 + SATLiteral(907) + SATLiteral(1042))<=0)
-1042 -13760 0
-907 -13760 0
-907 -1042 -13761 0
c (0<=( - aux824 + SATLiteral(907) + SATLiteral(1042)))
1042 13761 0
907 13761 0
907 1042 13760 0
c (( - aux825 + SATLiteral(637) + SATLiteral(367))<=0)
-367 -13763 0
-637 -13763 0
-637 -367 -13764 0
c (0<=( - aux825 + SATLiteral(637) + SATLiteral(367)))
367 13764 0
637 13764 0
637 367 13763 0
c ((aux825 - aux826 + SATLiteral(232))<=0)
13763 -13766 0
13764 -13767 0
-232 -13766 0
-232 13763 -13767 0
-232 13764 -13769 0
c (0<=(aux825 - aux826 + SATLiteral(232)))
-13764 13769 0
-13763 13767 0
232 13769 0
232 -13764 13767 0
232 -13763 13766 0
c ((aux822 + aux824 - aux827)<=0)
13760 -13771 0
13761 -13772 0
13754 -13771 0
13754 13760 -13772 0
13754 13761 -13774 0
13755 -13772 0
13755 13760 -13774 0
13755 13761 -13776 0
c (0<=(aux822 + aux824 - aux827))
-13761 13776 0
-13760 13774 0
-13755 13776 0
-13755 -13761 13774 0
-13755 -13760 13772 0
-13754 13774 0
-13754 -13761 13772 0
-13754 -13760 13771 0
c ((SATLiteral(503) - aux828 + SATLiteral(773))<=0)
-773 -13778 0
-503 -13778 0
-503 -773 -13779 0
c (0<=(SATLiteral(503) - aux828 + SATLiteral(773)))
773 13779 0
503 13779 0
503 773 13778 0
c ((SATLiteral(1178) - aux829 + SATLiteral(98))<=0)
-98 -13781 0
-1178 -13781 0
-1178 -98 -13782 0
c (0<=(SATLiteral(1178) - aux829 + SATLiteral(98)))
98 13782 0
1178 13782 0
1178 98 13781 0
c (( - aux830 + SATLiteral(908) + SATLiteral(1043))<=0)
-1043 -13784 0
-908 -13784 0
-908 -1043 -13785 0
c (0<=( - aux830 + SATLiteral(908) + SATLiteral(1043)))
1043 13785 0
908 13785 0
908 1043 13784 0
c (( - aux831 + SATLiteral(638) + SATLiteral(368))<=0)
-368 -13787 0
-638 -13787 0
-638 -368 -13788 0
c (0<=( - aux831 + SATLiteral(638) + SATLiteral(368)))
368 13788 0
638 13788 0
638 368 13787 0
c ((aux831 - aux832 + SATLiteral(233))<=0)
13787 -13790 0
13788 -13791 0
-233 -13790 0
-233 13787 -13791 0
-233 13788 -13793 0
c (0<=(aux831 - aux832 + SATLiteral(233)))
-13788 13793 0
-13787 13791 0
233 13793 0
233 -13788 13791 0
233 -13787 13790 0
c ((aux828 + aux830 - aux833)<=0)
13784 -13795 0
13785 -13796 0
13778 -13795 0
13778 13784 -13796 0
13778 13785 -13798 0
13779 -13796 0
13779 13784 -13798 0
13779 13785 -13800 0
c (0<=(aux828 + aux830 - aux833))
-13785 13800 0
-13784 13798 0
-13779 13800 0
-13779 -13785 13798 0
-13779 -13784 13796 0
-13778 13798 0
-13778 -13785 13796 0
-13778 -13784 13795 0
c ((SATLiteral(504) - aux834 + SATLiteral(774))<=0)
-774 -13802 0
-504 -13802 0
-504 -774 -13803 0
c (0<=(SATLiteral(504) - aux834 + SATLiteral(774)))
774 13803 0
504 13803 0
504 774 13802 0
c ((SATLiteral(1179) - aux835 + SATLiteral(99))<=0)
-99 -13805 0
-1179 -13805 0
-1179 -99 -13806 0
c (0<=(SATLiteral(1179) - aux835 + SATLiteral(99)))
99 13806 0
1179 13806 0
1179 99 13805 0
c (( - aux836 + SATLiteral(909) + SATLiteral(1044))<=0)
-1044 -13808 0
-909 -13808 0
-909 -1044 -13809 0
c (0<=( - aux836 + SATLiteral(909) + SATLiteral(1044)))
1044 13809 0
909 13809 0
909 1044 13808 0
c (( - aux837 + SATLiteral(639) + SATLiteral(369))<=0)
-369 -13811 0
-639 -13811 0
-639 -369 -13812 0
c (0<=( - aux837 + SATLiteral(639) + SATLiteral(369)))
369 13812 0
639 13812 0
639 369 13811 0
c ((aux837 - aux838 + SATLiteral(234))<=0)
13811 -13814 0
13812 -13815 0
-234 -13814 0
-234 13811 -13815 0
-234 13812 -13817 0
c (0<=(aux837 - aux838 + SATLiteral(234)))
-13812 13817 0
-13811 13815 0
234 13817 0
234 -13812 13815 0
234 -13811 13814 0
c ((aux834 + aux836 - aux839)<=0)
13808 -13819 0
13809 -13820 0
13802 -13819 0
13802 13808 -13820 0
13802 13809 -13822 0
13803 -13820 0
13803 13808 -13822 0
13803 13809 -13824 0
c (0<=(aux834 + aux836 - aux839))
-13809 13824 0
-13808 13822 0
-13803 13824 0
-13803 -13809 13822 0
-13803 -13808 13820 0
-13802 13822 0
-13802 -13809 13820 0
-13802 -13808 13819 0
c ((SATLiteral(505) - aux840 + SATLiteral(775))<=0)
-775 -13826 0
-505 -13826 0
-505 -775 -13827 0
c (0<=(SATLiteral(505) - aux840 + SATLiteral(775)))
775 13827 0
505 13827 0
505 775 13826 0
c ((SATLiteral(1180) - aux841 + SATLiteral(100))<=0)
-100 -13829 0
-1180 -13829 0
-1180 -100 -13830 0
c (0<=(SATLiteral(1180) - aux841 + SATLiteral(100)))
100 13830 0
1180 13830 0
1180 100 13829 0
c (( - aux842 + SATLiteral(910) + SATLiteral(1045))<=0)
-1045 -13832 0
-910 -13832 0
-910 -1045 -13833 0
c (0<=( - aux842 + SATLiteral(910) + SATLiteral(1045)))
1045 13833 0
910 13833 0
910 1045 13832 0
c (( - aux843 + SATLiteral(640) + SATLiteral(370))<=0)
-370 -13835 0
-640 -13835 0
-640 -370 -13836 0
c (0<=( - aux843 + SATLiteral(640) + SATLiteral(370)))
370 13836 0
640 13836 0
640 370 13835 0
c ((aux843 - aux844 + SATLiteral(235))<=0)
13835 -13838 0
13836 -13839 0
-235 -13838 0
-235 13835 -13839 0
-235 13836 -13841 0
c (0<=(aux843 - aux844 + SATLiteral(235)))
-13836 13841 0
-13835 13839 0
235 13841 0
235 -13836 13839 0
235 -13835 13838 0
c ((aux840 + aux842 - aux845)<=0)
13832 -13843 0
13833 -13844 0
13826 -13843 0
13826 13832 -13844 0
13826 13833 -13846 0
13827 -13844 0
13827 13832 -13846 0
13827 13833 -13848 0
c (0<=(aux840 + aux842 - aux845))
-13833 13848 0
-13832 13846 0
-13827 13848 0
-13827 -13833 13846 0
-13827 -13832 13844 0
-13826 13846 0
-13826 -13833 13844 0
-13826 -13832 13843 0
c ((SATLiteral(512) - aux846 + SATLiteral(782))<=0)
-782 -13850 0
-512 -13850 0
-512 -782 -13851 0
c (0<=(SATLiteral(512) - aux846 + SATLiteral(782)))
782 13851 0
512 13851 0
512 782 13850 0
c ((SATLiteral(1187) - aux847 + SATLiteral(107))<=0)
-107 -13853 0
-1187 -13853 0
-1187 -107 -13854 0
c (0<=(SATLiteral(1187) - aux847 + SATLiteral(107)))
107 13854 0
1187 13854 0
1187 107 13853 0
c (( - aux848 + SATLiteral(917) + SATLiteral(1052))<=0)
-1052 -13856 0
-917 -13856 0
-917 -1052 -13857 0
c (0<=( - aux848 + SATLiteral(917) + SATLiteral(1052)))
1052 13857 0
917 13857 0
917 1052 13856 0
c (( - aux849 + SATLiteral(647) + SATLiteral(377))<=0)
-377 -13859 0
-647 -13859 0
-647 -377 -13860 0
c (0<=( - aux849 + SATLiteral(647) + SATLiteral(377)))
377 13860 0
647 13860 0
647 377 13859 0
c ((aux849 - aux850 + SATLiteral(242))<=0)
13859 -13862 0
13860 -13863 0
-242 -13862 0
-242 13859 -13863 0
-242 13860 -13865 0
c (0<=(aux849 - aux850 + SATLiteral(242)))
-13860 13865 0
-13859 13863 0
242 13865 0
242 -13860 13863 0
242 -13859 13862 0
c ((aux846 + aux848 - aux851)<=0)
13856 -13867 0
13857 -13868 0
13850 -13867 0
13850 13856 -13868 0
13850 13857 -13870 0
13851 -13868 0
13851 13856 -13870 0
13851 13857 -13872 0
c (0<=(aux846 + aux848 - aux851))
-13857 13872 0
-13856 13870 0
-13851 13872 0
-13851 -13857 13870 0
-13851 -13856 13868 0
-13850 13870 0
-13850 -13857 13868 0
-13850 -13856 13867 0
c ((SATLiteral(513) - aux852 + SATLiteral(783))<=0)
-783 -13874 0
-513 -13874 0
-513 -783 -13875 0
c (0<=(SATLiteral(513) - aux852 + SATLiteral(783)))
783 13875 0
513 13875 0
513 783 13874 0
c ((SATLiteral(1188) - aux853 + SATLiteral(108))<=0)
-108 -13877 0
-1188 -13877 0
-1188 -108 -13878 0
c (0<=(SATLiteral(1188) - aux853 + SATLiteral(108)))
108 13878 0
1188 13878 0
1188 108 13877 0
c (( - aux854 + SATLiteral(918) + SATLiteral(1053))<=0)
-1053 -13880 0
-918 -13880 0
-918 -1053 -13881 0
c (0<=( - aux854 + SATLiteral(918) + SATLiteral(1053)))
1053 13881 0
918 13881 0
918 1053 13880 0
c (( - aux855 + SATLiteral(648) + SATLiteral(378))<=0)
-378 -13883 0
-648 -13883 0
-648 -378 -13884 0
c (0<=( - aux855 + SATLiteral(648) + SATLiteral(378)))
378 13884 0
648 13884 0
648 378 13883 0
c ((aux855 - aux856 + SATLiteral(243))<=0)
13883 -13886 0
13884 -13887 0
-243 -13886 0
-243 13883 -13887 0
-243 13884 -13889 0
c (0<=(aux855 - aux856 + SATLiteral(243)))
-13884 13889 0
-13883 13887 0
243 13889 0
243 -13884 13887 0
243 -13883 13886 0
c ((aux852 + aux854 - aux857)<=0)
13880 -13891 0
13881 -13892 0
13874 -13891 0
13874 13880 -13892 0
13874 13881 -13894 0
13875 -13892 0
13875 13880 -13894 0
13875 13881 -13896 0
c (0<=(aux852 + aux854 - aux857))
-13881 13896 0
-13880 13894 0
-13875 13896 0
-13875 -13881 13894 0
-13875 -13880 13892 0
-13874 13894 0
-13874 -13881 13892 0
-13874 -13880 13891 0
c ((SATLiteral(514) - aux858 + SATLiteral(784))<=0)
-784 -13898 0
-514 -13898 0
-514 -784 -13899 0
c (0<=(SATLiteral(514) - aux858 + SATLiteral(784)))
784 13899 0
514 13899 0
514 784 13898 0
c ((SATLiteral(1189) - aux859 + SATLiteral(109))<=0)
-109 -13901 0
-1189 -13901 0
-1189 -109 -13902 0
c (0<=(SATLiteral(1189) - aux859 + SATLiteral(109)))
109 13902 0
1189 13902 0
1189 109 13901 0
c (( - aux860 + SATLiteral(919) + SATLiteral(1054))<=0)
-1054 -13904 0
-919 -13904 0
-919 -1054 -13905 0
c (0<=( - aux860 + SATLiteral(919) + SATLiteral(1054)))
1054 13905 0
919 13905 0
919 1054 13904 0
c (( - aux861 + SATLiteral(649) + SATLiteral(379))<=0)
-379 -13907 0
-649 -13907 0
-649 -379 -13908 0
c (0<=( - aux861 + SATLiteral(649) + SATLiteral(379)))
379 13908 0
649 13908 0
649 379 13907 0
c ((aux861 - aux862 + SATLiteral(244))<=0)
13907 -13910 0
13908 -13911 0
-244 -13910 0
-244 13907 -13911 0
-244 13908 -13913 0
c (0<=(aux861 - aux862 + SATLiteral(244)))
-13908 13913 0
-13907 13911 0
244 13913 0
244 -13908 13911 0
244 -13907 13910 0
c ((aux858 + aux860 - aux863)<=0)
13904 -13915 0
13905 -13916 0
13898 -13915 0
13898 13904 -13916 0
13898 13905 -13918 0
13899 -13916 0
13899 13904 -13918 0
13899 13905 -13920 0
c (0<=(aux858 + aux860 - aux863))
-13905 13920 0
-13904 13918 0
-13899 13920 0
-13899 -13905 13918 0
-13899 -13904 13916 0
-13898 13918 0
-13898 -13905 13916 0
-13898 -13904 13915 0
c ((SATLiteral(515) - aux864 + SATLiteral(785))<=0)
-785 -13922 0
-515 -13922 0
-515 -785 -13923 0
c (0<=(SATLiteral(515) - aux864 + SATLiteral(785)))
785 13923 0
515 13923 0
515 785 13922 0
c ((SATLiteral(1190) - aux865 + SATLiteral(110))<=0)
-110 -13925 0
-1190 -13925 0
-1190 -110 -13926 0
c (0<=(SATLiteral(1190) - aux865 + SATLiteral(110)))
110 13926 0
1190 13926 0
1190 110 13925 0
c (( - aux866 + SATLiteral(920) + SATLiteral(1055))<=0)
-1055 -13928 0
-920 -13928 0
-920 -1055 -13929 0
c (0<=( - aux866 + SATLiteral(920) + SATLiteral(1055)))
1055 13929 0
920 13929 0
920 1055 13928 0
c (( - aux867 + SATLiteral(650) + SATLiteral(380))<=0)
-380 -13931 0
-650 -13931 0
-650 -380 -13932 0
c (0<=( - aux867 + SATLiteral(650) + SATLiteral(380)))
380 13932 0
650 13932 0
650 380 13931 0
c ((aux867 - aux868 + SATLiteral(245))<=0)
13931 -13934 0
13932 -13935 0
-245 -13934 0
-245 13931 -13935 0
-245 13932 -13937 0
c (0<=(aux867 - aux868 + SATLiteral(245)))
-13932 13937 0
-13931 13935 0
245 13937 0
245 -13932 13935 0
245 -13931 13934 0
c ((aux864 + aux866 - aux869)<=0)
13928 -13939 0
13929 -13940 0
13922 -13939 0
13922 13928 -13940 0
13922 13929 -13942 0
13923 -13940 0
13923 13928 -13942 0
13923 13929 -13944 0
c (0<=(aux864 + aux866 - aux869))
-13929 13944 0
-13928 13942 0
-13923 13944 0
-13923 -13929 13942 0
-13923 -13928 13940 0
-13922 13942 0
-13922 -13929 13940 0
-13922 -13928 13939 0
c ((SATLiteral(516) - aux870 + SATLiteral(786))<=0)
-786 -13946 0
-516 -13946 0
-516 -786 -13947 0
c (0<=(SATLiteral(516) - aux870 + SATLiteral(786)))
786 13947 0
516 13947 0
516 786 13946 0
c ((SATLiteral(1191) - aux871 + SATLiteral(111))<=0)
-111 -13949 0
-1191 -13949 0
-1191 -111 -13950 0
c (0<=(SATLiteral(1191) - aux871 + SATLiteral(111)))
111 13950 0
1191 13950 0
1191 111 13949 0
c (( - aux872 + SATLiteral(921) + SATLiteral(1056))<=0)
-1056 -13952 0
-921 -13952 0
-921 -1056 -13953 0
c (0<=( - aux872 + SATLiteral(921) + SATLiteral(1056)))
1056 13953 0
921 13953 0
921 1056 13952 0
c (( - aux873 + SATLiteral(651) + SATLiteral(381))<=0)
-381 -13955 0
-651 -13955 0
-651 -381 -13956 0
c (0<=( - aux873 + SATLiteral(651) + SATLiteral(381)))
381 13956 0
651 13956 0
651 381 13955 0
c ((aux873 - aux874 + SATLiteral(246))<=0)
13955 -13958 0
13956 -13959 0
-246 -13958 0
-246 13955 -13959 0
-246 13956 -13961 0
c (0<=(aux873 - aux874 + SATLiteral(246)))
-13956 13961 0
-13955 13959 0
246 13961 0
246 -13956 13959 0
246 -13955 13958 0
c ((aux870 + aux872 - aux875)<=0)
13952 -13963 0
13953 -13964 0
13946 -13963 0
13946 13952 -13964 0
13946 13953 -13966 0
13947 -13964 0
13947 13952 -13966 0
13947 13953 -13968 0
c (0<=(aux870 + aux872 - aux875))
-13953 13968 0
-13952 13966 0
-13947 13968 0
-13947 -13953 13966 0
-13947 -13952 13964 0
-13946 13966 0
-13946 -13953 13964 0
-13946 -13952 13963 0
c ((SATLiteral(517) - aux876 + SATLiteral(787))<=0)
-787 -13970 0
-517 -13970 0
-517 -787 -13971 0
c (0<=(SATLiteral(517) - aux876 + SATLiteral(787)))
787 13971 0
517 13971 0
517 787 13970 0
c ((SATLiteral(1192) - aux877 + SATLiteral(112))<=0)
-112 -13973 0
-1192 -13973 0
-1192 -112 -13974 0
c (0<=(SATLiteral(1192) - aux877 + SATLiteral(112)))
112 13974 0
1192 13974 0
1192 112 13973 0
c (( - aux878 + SATLiteral(922) + SATLiteral(1057))<=0)
-1057 -13976 0
-922 -13976 0
-922 -1057 -13977 0
c (0<=( - aux878 + SATLiteral(922) + SATLiteral(1057)))
1057 13977 0
922 13977 0
922 1057 13976 0
c (( - aux879 + SATLiteral(652) + SATLiteral(382))<=0)
-382 -13979 0
-652 -13979 0
-652 -382 -13980 0
c (0<=( - aux879 + SATLiteral(652) + SATLiteral(382)))
382 13980 0
652 13980 0
652 382 13979 0
c ((aux879 - aux880 + SATLiteral(247))<=0)
13979 -13982 0
13980 -13983 0
-247 -13982 0
-247 13979 -13983 0
-247 13980 -13985 0
c (0<=(aux879 - aux880 + SATLiteral(247)))
-13980 13985 0
-13979 13983 0
247 13985 0
247 -13980 13983 0
247 -13979 13982 0
c ((aux876 + aux878 - aux881)<=0)
13976 -13987 0
13977 -13988 0
13970 -13987 0
13970 13976 -13988 0
13970 13977 -13990 0
13971 -13988 0
13971 13976 -13990 0
13971 13977 -13992 0
c (0<=(aux876 + aux878 - aux881))
-13977 13992 0
-13976 13990 0
-13971 13992 0
-13971 -13977 13990 0
-13971 -13976 13988 0
-13970 13990 0
-13970 -13977 13988 0
-13970 -13976 13987 0
c ((SATLiteral(518) - aux882 + SATLiteral(788))<=0)
-788 -13994 0
-518 -13994 0
-518 -788 -13995 0
c (0<=(SATLiteral(518) - aux882 + SATLiteral(788)))
788 13995 0
518 13995 0
518 788 13994 0
c ((SATLiteral(1193) - aux883 + SATLiteral(113))<=0)
-113 -13997 0
-1193 -13997 0
-1193 -113 -13998 0
c (0<=(SATLiteral(1193) - aux883 + SATLiteral(113)))
113 13998 0
1193 13998 0
1193 113 13997 0
c (( - aux884 + SATLiteral(923) + SATLiteral(1058))<=0)
-1058 -14000 0
-923 -14000 0
-923 -1058 -14001 0
c (0<=( - aux884 + SATLiteral(923) + SATLiteral(1058)))
1058 14001 0
923 14001 0
923 1058 14000 0
c (( - aux885 + SATLiteral(653) + SATLiteral(383))<=0)
-383 -14003 0
-653 -14003 0
-653 -383 -14004 0
c (0<=( - aux885 + SATLiteral(653) + SATLiteral(383)))
383 14004 0
653 14004 0
653 383 14003 0
c ((aux885 - aux886 + SATLiteral(248))<=0)
14003 -14006 0
14004 -14007 0
-248 -14006 0
-248 14003 -14007 0
-248 14004 -14009 0
c (0<=(aux885 - aux886 + SATLiteral(248)))
-14004 14009 0
-14003 14007 0
248 14009 0
248 -14004 14007 0
248 -14003 14006 0
c ((aux882 + aux884 - aux887)<=0)
14000 -14011 0
14001 -14012 0
13994 -14011 0
13994 14000 -14012 0
13994 14001 -14014 0
13995 -14012 0
13995 14000 -14014 0
13995 14001 -14016 0
c (0<=(aux882 + aux884 - aux887))
-14001 14016 0
-14000 14014 0
-13995 14016 0
-13995 -14001 14014 0
-13995 -14000 14012 0
-13994 14014 0
-13994 -14001 14012 0
-13994 -14000 14011 0
c ((SATLiteral(519) - aux888 + SATLiteral(789))<=0)
-789 -14018 0
-519 -14018 0
-519 -789 -14019 0
c (0<=(SATLiteral(519) - aux888 + SATLiteral(789)))
789 14019 0
519 14019 0
519 789 14018 0
c ((SATLiteral(1194) - aux889 + SATLiteral(114))<=0)
-114 -14021 0
-1194 -14021 0
-1194 -114 -14022 0
c (0<=(SATLiteral(1194) - aux889 + SATLiteral(114)))
114 14022 0
1194 14022 0
1194 114 14021 0
c (( - aux890 + SATLiteral(924) + SATLiteral(1059))<=0)
-1059 -14024 0
-924 -14024 0
-924 -1059 -14025 0
c (0<=( - aux890 + SATLiteral(924) + SATLiteral(1059)))
1059 14025 0
924 14025 0
924 1059 14024 0
c (( - aux891 + SATLiteral(654) + SATLiteral(384))<=0)
-384 -14027 0
-654 -14027 0
-654 -384 -14028 0
c (0<=( - aux891 + SATLiteral(654) + SATLiteral(384)))
384 14028 0
654 14028 0
654 384 14027 0
c ((aux891 - aux892 + SATLiteral(249))<=0)
14027 -14030 0
14028 -14031 0
-249 -14030 0
-249 14027 -14031 0
-249 14028 -14033 0
c (0<=(aux891 - aux892 + SATLiteral(249)))
-14028 14033 0
-14027 14031 0
249 14033 0
249 -14028 14031 0
249 -14027 14030 0
c ((aux888 + aux890 - aux893)<=0)
14024 -14035 0
14025 -14036 0
14018 -14035 0
14018 14024 -14036 0
14018 14025 -14038 0
14019 -14036 0
14019 14024 -14038 0
14019 14025 -14040 0
c (0<=(aux888 + aux890 - aux893))
-14025 14040 0
-14024 14038 0
-14019 14040 0
-14019 -14025 14038 0
-14019 -14024 14036 0
-14018 14038 0
-14018 -14025 14036 0
-14018 -14024 14035 0
c ((SATLiteral(520) - aux894 + SATLiteral(790))<=0)
-790 -14042 0
-520 -14042 0
-520 -790 -14043 0
c (0<=(SATLiteral(520) - aux894 + SATLiteral(790)))
790 14043 0
520 14043 0
520 790 14042 0
c ((SATLiteral(1195) - aux895 + SATLiteral(115))<=0)
-115 -14045 0
-1195 -14045 0
-1195 -115 -14046 0
c (0<=(SATLiteral(1195) - aux895 + SATLiteral(115)))
115 14046 0
1195 14046 0
1195 115 14045 0
c (( - aux896 + SATLiteral(925) + SATLiteral(1060))<=0)
-1060 -14048 0
-925 -14048 0
-925 -1060 -14049 0
c (0<=( - aux896 + SATLiteral(925) + SATLiteral(1060)))
1060 14049 0
925 14049 0
925 1060 14048 0
c (( - aux897 + SATLiteral(655) + SATLiteral(385))<=0)
-385 -14051 0
-655 -14051 0
-655 -385 -14052 0
c (0<=( - aux897 + SATLiteral(655) + SATLiteral(385)))
385 14052 0
655 14052 0
655 385 14051 0
c ((aux897 - aux898 + SATLiteral(250))<=0)
14051 -14054 0
14052 -14055 0
-250 -14054 0
-250 14051 -14055 0
-250 14052 -14057 0
c (0<=(aux897 - aux898 + SATLiteral(250)))
-14052 14057 0
-14051 14055 0
250 14057 0
250 -14052 14055 0
250 -14051 14054 0
c ((aux894 + aux896 - aux899)<=0)
14048 -14059 0
14049 -14060 0
14042 -14059 0
14042 14048 -14060 0
14042 14049 -14062 0
14043 -14060 0
14043 14048 -14062 0
14043 14049 -14064 0
c (0<=(aux894 + aux896 - aux899))
-14049 14064 0
-14048 14062 0
-14043 14064 0
-14043 -14049 14062 0
-14043 -14048 14060 0
-14042 14062 0
-14042 -14049 14060 0
-14042 -14048 14059 0
c ((SATLiteral(527) - aux900 + SATLiteral(797))<=0)
-797 -14066 0
-527 -14066 0
-527 -797 -14067 0
c (0<=(SATLiteral(527) - aux900 + SATLiteral(797)))
797 14067 0
527 14067 0
527 797 14066 0
c ((SATLiteral(1202) - aux901 + SATLiteral(122))<=0)
-122 -14069 0
-1202 -14069 0
-1202 -122 -14070 0
c (0<=(SATLiteral(1202) - aux901 + SATLiteral(122)))
122 14070 0
1202 14070 0
1202 122 14069 0
c (( - aux902 + SATLiteral(932) + SATLiteral(1067))<=0)
-1067 -14072 0
-932 -14072 0
-932 -1067 -14073 0
c (0<=( - aux902 + SATLiteral(932) + SATLiteral(1067)))
1067 14073 0
932 14073 0
932 1067 14072 0
c (( - aux903 + SATLiteral(662) + SATLiteral(392))<=0)
-392 -14075 0
-662 -14075 0
-662 -392 -14076 0
c (0<=( - aux903 + SATLiteral(662) + SATLiteral(392)))
392 14076 0
662 14076 0
662 392 14075 0
c ((aux903 - aux904 + SATLiteral(257))<=0)
14075 -14078 0
14076 -14079 0
-257 -14078 0
-257 14075 -14079 0
-257 14076 -14081 0
c (0<=(aux903 - aux904 + SATLiteral(257)))
-14076 14081 0
-14075 14079 0
257 14081 0
257 -14076 14079 0
257 -14075 14078 0
c ((aux900 + aux902 - aux905)<=0)
14072 -14083 0
14073 -14084 0
14066 -14083 0
14066 14072 -14084 0
14066 14073 -14086 0
14067 -14084 0
14067 14072 -14086 0
14067 14073 -14088 0
c (0<=(aux900 + aux902 - aux905))
-14073 14088 0
-14072 14086 0
-14067 14088 0
-14067 -14073 14086 0
-14067 -14072 14084 0
-14066 14086 0
-14066 -14073 14084 0
-14066 -14072 14083 0
c ((SATLiteral(528) - aux906 + SATLiteral(798))<=0)
-798 -14090 0
-528 -14090 0
-528 -798 -14091 0
c (0<=(SATLiteral(528) - aux906 + SATLiteral(798)))
798 14091 0
528 14091 0
528 798 14090 0
c ((SATLiteral(1203) - aux907 + SATLiteral(123))<=0)
-123 -14093 0
-1203 -14093 0
-1203 -123 -14094 0
c (0<=(SATLiteral(1203) - aux907 + SATLiteral(123)))
123 14094 0
1203 14094 0
1203 123 14093 0
c (( - aux908 + SATLiteral(933) + SATLiteral(1068))<=0)
-1068 -14096 0
-933 -14096 0
-933 -1068 -14097 0
c (0<=( - aux908 + SATLiteral(933) + SATLiteral(1068)))
1068 14097 0
933 14097 0
933 1068 14096 0
c (( - aux909 + SATLiteral(663) + SATLiteral(393))<=0)
-393 -14099 0
-663 -14099 0
-663 -393 -14100 0
c (0<=( - aux909 + SATLiteral(663) + SATLiteral(393)))
393 14100 0
663 14100 0
663 393 14099 0
c ((aux909 - aux910 + SATLiteral(258))<=0)
14099 -14102 0
14100 -14103 0
-258 -14102 0
-258 14099 -14103 0
-258 14100 -14105 0
c (0<=(aux909 - aux910 + SATLiteral(258)))
-14100 14105 0
-14099 14103 0
258 14105 0
258 -14100 14103 0
258 -14099 14102 0
c ((aux906 + aux908 - aux911)<=0)
14096 -14107 0
14097 -14108 0
14090 -14107 0
14090 14096 -14108 0
14090 14097 -14110 0
14091 -14108 0
14091 14096 -14110 0
14091 14097 -14112 0
c (0<=(aux906 + aux908 - aux911))
-14097 14112 0
-14096 14110 0
-14091 14112 0
-14091 -14097 14110 0
-14091 -14096 14108 0
-14090 14110 0
-14090 -14097 14108 0
-14090 -14096 14107 0
c ((SATLiteral(529) - aux912 + SATLiteral(799))<=0)
-799 -14114 0
-529 -14114 0
-529 -799 -14115 0
c (0<=(SATLiteral(529) - aux912 + SATLiteral(799)))
799 14115 0
529 14115 0
529 799 14114 0
c ((SATLiteral(1204) - aux913 + SATLiteral(124))<=0)
-124 -14117 0
-1204 -14117 0
-1204 -124 -14118 0
c (0<=(SATLiteral(1204) - aux913 + SATLiteral(124)))
124 14118 0
1204 14118 0
1204 124 14117 0
c (( - aux914 + SATLiteral(934) + SATLiteral(1069))<=0)
-1069 -14120 0
-934 -14120 0
-934 -1069 -14121 0
c (0<=( - aux914 + SATLiteral(934) + SATLiteral(1069)))
1069 14121 0
934 14121 0
934 1069 14120 0
c (( - aux915 + SATLiteral(664) + SATLiteral(394))<=0)
-394 -14123 0
-664 -14123 0
-664 -394 -14124 0
c (0<=( - aux915 + SATLiteral(664) + SATLiteral(394)))
394 14124 0
664 14124 0
664 394 14123 0
c ((aux915 - aux916 + SATLiteral(259))<=0)
14123 -14126 0
14124 -14127 0
-259 -14126 0
-259 14123 -14127 0
-259 14124 -14129 0
c (0<=(aux915 - aux916 + SATLiteral(259)))
-14124 14129 0
-14123 14127 0
259 14129 0
259 -14124 14127 0
259 -14123 14126 0
c ((aux912 + aux914 - aux917)<=0)
14120 -14131 0
14121 -14132 0
14114 -14131 0
14114 14120 -14132 0
14114 14121 -14134 0
14115 -14132 0
14115 14120 -14134 0
14115 14121 -14136 0
c (0<=(aux912 + aux914 - aux917))
-14121 14136 0
-14120 14134 0
-14115 14136 0
-14115 -14121 14134 0
-14115 -14120 14132 0
-14114 14134 0
-14114 -14121 14132 0
-14114 -14120 14131 0
c ((SATLiteral(530) - aux918 + SATLiteral(800))<=0)
-800 -14138 0
-530 -14138 0
-530 -800 -14139 0
c (0<=(SATLiteral(530) - aux918 + SATLiteral(800)))
800 14139 0
530 14139 0
530 800 14138 0
c ((SATLiteral(1205) - aux919 + SATLiteral(125))<=0)
-125 -14141 0
-1205 -14141 0
-1205 -125 -14142 0
c (0<=(SATLiteral(1205) - aux919 + SATLiteral(125)))
125 14142 0
1205 14142 0
1205 125 14141 0
c (( - aux920 + SATLiteral(935) + SATLiteral(1070))<=0)
-1070 -14144 0
-935 -14144 0
-935 -1070 -14145 0
c (0<=( - aux920 + SATLiteral(935) + SATLiteral(1070)))
1070 14145 0
935 14145 0
935 1070 14144 0
c (( - aux921 + SATLiteral(665) + SATLiteral(395))<=0)
-395 -14147 0
-665 -14147 0
-665 -395 -14148 0
c (0<=( - aux921 + SATLiteral(665) + SATLiteral(395)))
395 14148 0
665 14148 0
665 395 14147 0
c ((aux921 - aux922 + SATLiteral(260))<=0)
14147 -14150 0
14148 -14151 0
-260 -14150 0
-260 14147 -14151 0
-260 14148 -14153 0
c (0<=(aux921 - aux922 + SATLiteral(260)))
-14148 14153 0
-14147 14151 0
260 14153 0
260 -14148 14151 0
260 -14147 14150 0
c ((aux918 + aux920 - aux923)<=0)
14144 -14155 0
14145 -14156 0
14138 -14155 0
14138 14144 -14156 0
14138 14145 -14158 0
14139 -14156 0
14139 14144 -14158 0
14139 14145 -14160 0
c (0<=(aux918 + aux920 - aux923))
-14145 14160 0
-14144 14158 0
-14139 14160 0
-14139 -14145 14158 0
-14139 -14144 14156 0
-14138 14158 0
-14138 -14145 14156 0
-14138 -14144 14155 0
c ((SATLiteral(531) - aux924 + SATLiteral(801))<=0)
-801 -14162 0
-531 -14162 0
-531 -801 -14163 0
c (0<=(SATLiteral(531) - aux924 + SATLiteral(801)))
801 14163 0
531 14163 0
531 801 14162 0
c ((SATLiteral(1206) - aux925 + SATLiteral(126))<=0)
-126 -14165 0
-1206 -14165 0
-1206 -126 -14166 0
c (0<=(SATLiteral(1206) - aux925 + SATLiteral(126)))
126 14166 0
1206 14166 0
1206 126 14165 0
c (( - aux926 + SATLiteral(936) + SATLiteral(1071))<=0)
-1071 -14168 0
-936 -14168 0
-936 -1071 -14169 0
c (0<=( - aux926 + SATLiteral(936) + SATLiteral(1071)))
1071 14169 0
936 14169 0
936 1071 14168 0
c (( - aux927 + SATLiteral(666) + SATLiteral(396))<=0)
-396 -14171 0
-666 -14171 0
-666 -396 -14172 0
c (0<=( - aux927 + SATLiteral(666) + SATLiteral(396)))
396 14172 0
666 14172 0
666 396 14171 0
c ((aux927 - aux928 + SATLiteral(261))<=0)
14171 -14174 0
14172 -14175 0
-261 -14174 0
-261 14171 -14175 0
-261 14172 -14177 0
c (0<=(aux927 - aux928 + SATLiteral(261)))
-14172 14177 0
-14171 14175 0
261 14177 0
261 -14172 14175 0
261 -14171 14174 0
c ((aux924 + aux926 - aux929)<=0)
14168 -14179 0
14169 -14180 0
14162 -14179 0
14162 14168 -14180 0
14162 14169 -14182 0
14163 -14180 0
14163 14168 -14182 0
14163 14169 -14184 0
c (0<=(aux924 + aux926 - aux929))
-14169 14184 0
-14168 14182 0
-14163 14184 0
-14163 -14169 14182 0
-14163 -14168 14180 0
-14162 14182 0
-14162 -14169 14180 0
-14162 -14168 14179 0
c ((SATLiteral(532) - aux930 + SATLiteral(802))<=0)
-802 -14186 0
-532 -14186 0
-532 -802 -14187 0
c (0<=(SATLiteral(532) - aux930 + SATLiteral(802)))
802 14187 0
532 14187 0
532 802 14186 0
c ((SATLiteral(1207) - aux931 + SATLiteral(127))<=0)
-127 -14189 0
-1207 -14189 0
-1207 -127 -14190 0
c (0<=(SATLiteral(1207) - aux931 + SATLiteral(127)))
127 14190 0
1207 14190 0
1207 127 14189 0
c (( - aux932 + SATLiteral(937) + SATLiteral(1072))<=0)
-1072 -14192 0
-937 -14192 0
-937 -1072 -14193 0
c (0<=( - aux932 + SATLiteral(937) + SATLiteral(1072)))
1072 14193 0
937 14193 0
937 1072 14192 0
c (( - aux933 + SATLiteral(667) + SATLiteral(397))<=0)
-397 -14195 0
-667 -14195 0
-667 -397 -14196 0
c (0<=( - aux933 + SATLiteral(667) + SATLiteral(397)))
397 14196 0
667 14196 0
667 397 14195 0
c ((aux933 - aux934 + SATLiteral(262))<=0)
14195 -14198 0
14196 -14199 0
-262 -14198 0
-262 14195 -14199 0
-262 14196 -14201 0
c (0<=(aux933 - aux934 + SATLiteral(262)))
-14196 14201 0
-14195 14199 0
262 14201 0
262 -14196 14199 0
262 -14195 14198 0
c ((aux930 + aux932 - aux935)<=0)
14192 -14203 0
14193 -14204 0
14186 -14203 0
14186 14192 -14204 0
14186 14193 -14206 0
14187 -14204 0
14187 14192 -14206 0
14187 14193 -14208 0
c (0<=(aux930 + aux932 - aux935))
-14193 14208 0
-14192 14206 0
-14187 14208 0
-14187 -14193 14206 0
-14187 -14192 14204 0
-14186 14206 0
-14186 -14193 14204 0
-14186 -14192 14203 0
c ((SATLiteral(533) - aux936 + SATLiteral(803))<=0)
-803 -14210 0
-533 -14210 0
-533 -803 -14211 0
c (0<=(SATLiteral(533) - aux936 + SATLiteral(803)))
803 14211 0
533 14211 0
533 803 14210 0
c ((SATLiteral(1208) - aux937 + SATLiteral(128))<=0)
-128 -14213 0
-1208 -14213 0
-1208 -128 -14214 0
c (0<=(SATLiteral(1208) - aux937 + SATLiteral(128)))
128 14214 0
1208 14214 0
1208 128 14213 0
c (( - aux938 + SATLiteral(938) + SATLiteral(1073))<=0)
-1073 -14216 0
-938 -14216 0
-938 -1073 -14217 0
c (0<=( - aux938 + SATLiteral(938) + SATLiteral(1073)))
1073 14217 0
938 14217 0
938 1073 14216 0
c (( - aux939 + SATLiteral(668) + SATLiteral(398))<=0)
-398 -14219 0
-668 -14219 0
-668 -398 -14220 0
c (0<=( - aux939 + SATLiteral(668) + SATLiteral(398)))
398 14220 0
668 14220 0
668 398 14219 0
c ((aux939 - aux940 + SATLiteral(263))<=0)
14219 -14222 0
14220 -14223 0
-263 -14222 0
-263 14219 -14223 0
-263 14220 -14225 0
c (0<=(aux939 - aux940 + SATLiteral(263)))
-14220 14225 0
-14219 14223 0
263 14225 0
263 -14220 14223 0
263 -14219 14222 0
c ((aux936 + aux938 - aux941)<=0)
14216 -14227 0
14217 -14228 0
14210 -14227 0
14210 14216 -14228 0
14210 14217 -14230 0
14211 -14228 0
14211 14216 -14230 0
14211 14217 -14232 0
c (0<=(aux936 + aux938 - aux941))
-14217 14232 0
-14216 14230 0
-14211 14232 0
-14211 -14217 14230 0
-14211 -14216 14228 0
-14210 14230 0
-14210 -14217 14228 0
-14210 -14216 14227 0
c ((SATLiteral(534) - aux942 + SATLiteral(804))<=0)
-804 -14234 0
-534 -14234 0
-534 -804 -14235 0
c (0<=(SATLiteral(534) - aux942 + SATLiteral(804)))
804 14235 0
534 14235 0
534 804 14234 0
c ((SATLiteral(1209) - aux943 + SATLiteral(129))<=0)
-129 -14237 0
-1209 -14237 0
-1209 -129 -14238 0
c (0<=(SATLiteral(1209) - aux943 + SATLiteral(129)))
129 14238 0
1209 14238 0
1209 129 14237 0
c (( - aux944 + SATLiteral(939) + SATLiteral(1074))<=0)
-1074 -14240 0
-939 -14240 0
-939 -1074 -14241 0
c (0<=( - aux944 + SATLiteral(939) + SATLiteral(1074)))
1074 14241 0
939 14241 0
939 1074 14240 0
c (( - aux945 + SATLiteral(669) + SATLiteral(399))<=0)
-399 -14243 0
-669 -14243 0
-669 -399 -14244 0
c (0<=( - aux945 + SATLiteral(669) + SATLiteral(399)))
399 14244 0
669 14244 0
669 399 14243 0
c ((aux945 - aux946 + SATLiteral(264))<=0)
14243 -14246 0
14244 -14247 0
-264 -14246 0
-264 14243 -14247 0
-264 14244 -14249 0
c (0<=(aux945 - aux946 + SATLiteral(264)))
-14244 14249 0
-14243 14247 0
264 14249 0
264 -14244 14247 0
264 -14243 14246 0
c ((aux942 + aux944 - aux947)<=0)
14240 -14251 0
14241 -14252 0
14234 -14251 0
14234 14240 -14252 0
14234 14241 -14254 0
14235 -14252 0
14235 14240 -14254 0
14235 14241 -14256 0
c (0<=(aux942 + aux944 - aux947))
-14241 14256 0
-14240 14254 0
-14235 14256 0
-14235 -14241 14254 0
-14235 -14240 14252 0
-14234 14254 0
-14234 -14241 14252 0
-14234 -14240 14251 0
c ((SATLiteral(535) - aux948 + SATLiteral(805))<=0)
-805 -14258 0
-535 -14258 0
-535 -805 -14259 0
c (0<=(SATLiteral(535) - aux948 + SATLiteral(805)))
805 14259 0
535 14259 0
535 805 14258 0
c ((SATLiteral(1210) - aux949 + SATLiteral(130))<=0)
-130 -14261 0
-1210 -14261 0
-1210 -130 -14262 0
c (0<=(SATLiteral(1210) - aux949 + SATLiteral(130)))
130 14262 0
1210 14262 0
1210 130 14261 0
c (( - aux950 + SATLiteral(940) + SATLiteral(1075))<=0)
-1075 -14264 0
-940 -14264 0
-940 -1075 -14265 0
c (0<=( - aux950 + SATLiteral(940) + SATLiteral(1075)))
1075 14265 0
940 14265 0
940 1075 14264 0
c (( - aux951 + SATLiteral(670) + SATLiteral(400))<=0)
-400 -14267 0
-670 -14267 0
-670 -400 -14268 0
c (0<=( - aux951 + SATLiteral(670) + SATLiteral(400)))
400 14268 0
670 14268 0
670 400 14267 0
c ((aux951 - aux952 + SATLiteral(265))<=0)
14267 -14270 0
14268 -14271 0
-265 -14270 0
-265 14267 -14271 0
-265 14268 -14273 0
c (0<=(aux951 - aux952 + SATLiteral(265)))
-14268 14273 0
-14267 14271 0
265 14273 0
265 -14268 14271 0
265 -14267 14270 0
c ((aux948 + aux950 - aux953)<=0)
14264 -14275 0
14265 -14276 0
14258 -14275 0
14258 14264 -14276 0
14258 14265 -14278 0
14259 -14276 0
14259 14264 -14278 0
14259 14265 -14280 0
c (0<=(aux948 + aux950 - aux953))
-14265 14280 0
-14264 14278 0
-14259 14280 0
-14259 -14265 14278 0
-14259 -14264 14276 0
-14258 14278 0
-14258 -14265 14276 0
-14258 -14264 14275 0
c (( - aux954 + SATLiteral(2) + SATLiteral(122))<=0)
-122 -14282 0
-2 -14282 0
-2 -122 -14283 0
c (0<=( - aux954 + SATLiteral(2) + SATLiteral(122)))
122 14283 0
2 14283 0
2 122 14282 0
c (( - aux955 + SATLiteral(17) + SATLiteral(107))<=0)
-107 -14285 0
-17 -14285 0
-17 -107 -14286 0
c (0<=( - aux955 + SATLiteral(17) + SATLiteral(107)))
107 14286 0
17 14286 0
17 107 14285 0
c (( - aux956 + SATLiteral(47) + SATLiteral(92))<=0)
-92 -14288 0
-47 -14288 0
-47 -92 -14289 0
c (0<=( - aux956 + SATLiteral(47) + SATLiteral(92)))
92 14289 0
47 14289 0
47 92 14288 0
c (( - aux957 + SATLiteral(62) + SATLiteral(77))<=0)
-77 -14291 0
-62 -14291 0
-62 -77 -14292 0
c (0<=( - aux957 + SATLiteral(62) + SATLiteral(77)))
77 14292 0
62 14292 0
62 77 14291 0
c ((aux957 - aux958 + SATLiteral(32))<=0)
14291 -14294 0
14292 -14295 0
-32 -14294 0
-32 14291 -14295 0
-32 14292 -14297 0
c (0<=(aux957 - aux958 + SATLiteral(32)))
-14292 14297 0
-14291 14295 0
32 14297 0
32 -14292 14295 0
32 -14291 14294 0
c ((aux954 + aux956 - aux959)<=0)
14288 -14299 0
14289 -14300 0
14282 -14299 0
14282 14288 -14300 0
14282 14289 -14302 0
14283 -14300 0
14283 14288 -14302 0
14283 14289 -14304 0
c (0<=(aux954 + aux956 - aux959))
-14289 14304 0
-14288 14302 0
-14283 14304 0
-14283 -14289 14302 0
-14283 -14288 14300 0
-14282 14302 0
-14282 -14289 14300 0
-14282 -14288 14299 0
c (( - aux960 + SATLiteral(3) + SATLiteral(123))<=0)
-123 -14306 0
-3 -14306 0
-3 -123 -14307 0
c (0<=( - aux960 + SATLiteral(3) + SATLiteral(123)))
123 14307 0
3 14307 0
3 123 14306 0
c (( - aux961 + SATLiteral(18) + SATLiteral(108))<=0)
-108 -14309 0
-18 -14309 0
-18 -108 -14310 0
c (0<=( - aux961 + SATLiteral(18) + SATLiteral(108)))
108 14310 0
18 14310 0
18 108 14309 0
c (( - aux962 + SATLiteral(48) + SATLiteral(93))<=0)
-93 -14312 0
-48 -14312 0
-48 -93 -14313 0
c (0<=( - aux962 + SATLiteral(48) + SATLiteral(93)))
93 14313 0
48 14313 0
48 93 14312 0
c (( - aux963 + SATLiteral(63) + SATLiteral(78))<=0)
-78 -14315 0
-63 -14315 0
-63 -78 -14316 0
c (0<=( - aux963 + SATLiteral(63) + SATLiteral(78)))
78 14316 0
63 14316 0
63 78 14315 0
c ((aux963 - aux964 + SATLiteral(33))<=0)
14315 -14318 0
14316 -14319 0
-33 -14318 0
-33 14315 -14319 0
-33 14316 -14321 0
c (0<=(aux963 - aux964 + SATLiteral(33)))
-14316 14321 0
-14315 14319 0
33 14321 0
33 -14316 14319 0
33 -14315 14318 0
c ((aux960 + aux962 - aux965)<=0)
14312 -14323 0
14313 -14324 0
14306 -14323 0
14306 14312 -14324 0
14306 14313 -14326 0
14307 -14324 0
14307 14312 -14326 0
14307 14313 -14328 0
c (0<=(aux960 + aux962 - aux965))
-14313 14328 0
-14312 14326 0
-14307 14328 0
-14307 -14313 14326 0
-14307 -14312 14324 0
-14306 14326 0
-14306 -14313 14324 0
-14306 -14312 14323 0
c (( - aux966 + SATLiteral(4) + SATLiteral(124))<=0)
-124 -14330 0
-4 -14330 0
-4 -124 -14331 0
c (0<=( - aux966 + SATLiteral(4) + SATLiteral(124)))
124 14331 0
4 14331 0
4 124 14330 0
c (( - aux967 + SATLiteral(19) + SATLiteral(109))<=0)
-109 -14333 0
-19 -14333 0
-19 -109 -14334 0
c (0<=( - aux967 + SATLiteral(19) + SATLiteral(109)))
109 14334 0
19 14334 0
19 109 14333 0
c (( - aux968 + SATLiteral(49) + SATLiteral(94))<=0)
-94 -14336 0
-49 -14336 0
-49 -94 -14337 0
c (0<=( - aux968 + SATLiteral(49) + SATLiteral(94)))
94 14337 0
49 14337 0
49 94 14336 0
c (( - aux969 + SATLiteral(64) + SATLiteral(79))<=0)
-79 -14339 0
-64 -14339 0
-64 -79 -14340 0
c (0<=( - aux969 + SATLiteral(64) + SATLiteral(79)))
79 14340 0
64 14340 0
64 79 14339 0
c ((aux969 - aux970 + SATLiteral(34))<=0)
14339 -14342 0
14340 -14343 0
-34 -14342 0
-34 14339 -14343 0
-34 14340 -14345 0
c (0<=(aux969 - aux970 + SATLiteral(34)))
-14340 14345 0
-14339 14343 0
34 14345 0
34 -14340 14343 0
34 -14339 14342 0
c ((aux966 + aux968 - aux971)<=0)
14336 -14347 0
14337 -14348 0
14330 -14347 0
14330 14336 -14348 0
14330 14337 -14350 0
14331 -14348 0
14331 14336 -14350 0
14331 14337 -14352 0
c (0<=(aux966 + aux968 - aux971))
-14337 14352 0
-14336 14350 0
-14331 14352 0
-14331 -14337 14350 0
-14331 -14336 14348 0
-14330 14350 0
-14330 -14337 14348 0
-14330 -14336 14347 0
c (( - aux972 + SATLiteral(5) + SATLiteral(125))<=0)
-125 -14354 0
-5 -14354 0
-5 -125 -14355 0
c (0<=( - aux972 + SATLiteral(5) + SATLiteral(125)))
125 14355 0
5 14355 0
5 125 14354 0
c (( - aux973 + SATLiteral(20) + SATLiteral(110))<=0)
-110 -14357 0
-20 -14357 0
-20 -110 -14358 0
c (0<=( - aux973 + SATLiteral(20) + SATLiteral(110)))
110 14358 0
20 14358 0
20 110 14357 0
c (( - aux974 + SATLiteral(50) + SATLiteral(95))<=0)
-95 -14360 0
-50 -14360 0
-50 -95 -14361 0
c (0<=( - aux974 + SATLiteral(50) + SATLiteral(95)))
95 14361 0
50 14361 0
50 95 14360 0
c (( - aux975 + SATLiteral(65) + SATLiteral(80))<=0)
-80 -14363 0
-65 -14363 0
-65 -80 -14364 0
c (0<=( - aux975 + SATLiteral(65) + SATLiteral(80)))
80 14364 0
65 14364 0
65 80 14363 0
c ((aux975 - aux976 + SATLiteral(35))<=0)
14363 -14366 0
14364 -14367 0
-35 -14366 0
-35 14363 -14367 0
-35 14364 -14369 0
c (0<=(aux975 - aux976 + SATLiteral(35)))
-14364 14369 0
-14363 14367 0
35 14369 0
35 -14364 14367 0
35 -14363 14366 0
c ((aux972 + aux974 - aux977)<=0)
14360 -14371 0
14361 -14372 0
14354 -14371 0
14354 14360 -14372 0
14354 14361 -14374 0
14355 -14372 0
14355 14360 -14374 0
14355 14361 -14376 0
c (0<=(aux972 + aux974 - aux977))
-14361 14376 0
-14360 14374 0
-14355 14376 0
-14355 -14361 14374 0
-14355 -14360 14372 0
-14354 14374 0
-14354 -14361 14372 0
-14354 -14360 14371 0
c (( - aux978 + SATLiteral(6) + SATLiteral(126))<=0)
-126 -14378 0
-6 -14378 0
-6 -126 -14379 0
c (0<=( - aux978 + SATLiteral(6) + SATLiteral(126)))
126 14379 0
6 14379 0
6 126 14378 0
c (( - aux979 + SATLiteral(21) + SATLiteral(111))<=0)
-111 -14381 0
-21 -14381 0
-21 -111 -14382 0
c (0<=( - aux979 + SATLiteral(21) + SATLiteral(111)))
111 14382 0
21 14382 0
21 111 14381 0
c (( - aux980 + SATLiteral(51) + SATLiteral(96))<=0)
-96 -14384 0
-51 -14384 0
-51 -96 -14385 0
c (0<=( - aux980 + SATLiteral(51) + SATLiteral(96)))
96 14385 0
51 14385 0
51 96 14384 0
c (( - aux981 + SATLiteral(66) + SATLiteral(81))<=0)
-81 -14387 0
-66 -14387 0
-66 -81 -14388 0
c (0<=( - aux981 + SATLiteral(66) + SATLiteral(81)))
81 14388 0
66 14388 0
66 81 14387 0
c ((aux981 - aux982 + SATLiteral(36))<=0)
14387 -14390 0
14388 -14391 0
-36 -14390 0
-36 14387 -14391 0
-36 14388 -14393 0
c (0<=(aux981 - aux982 + SATLiteral(36)))
-14388 14393 0
-14387 14391 0
36 14393 0
36 -14388 14391 0
36 -14387 14390 0
c ((aux978 + aux980 - aux983)<=0)
14384 -14395 0
14385 -14396 0
14378 -14395 0
14378 14384 -14396 0
14378 14385 -14398 0
14379 -14396 0
14379 14384 -14398 0
14379 14385 -14400 0
c (0<=(aux978 + aux980 - aux983))
-14385 14400 0
-14384 14398 0
-14379 14400 0
-14379 -14385 14398 0
-14379 -14384 14396 0
-14378 14398 0
-14378 -14385 14396 0
-14378 -14384 14395 0
c (( - aux984 + SATLiteral(7) + SATLiteral(127))<=0)
-127 -14402 0
-7 -14402 0
-7 -127 -14403 0
c (0<=( - aux984 + SATLiteral(7) + SATLiteral(127)))
127 14403 0
7 14403 0
7 127 14402 0
c (( - aux985 + SATLiteral(22) + SATLiteral(112))<=0)
-112 -14405 0
-22 -14405 0
-22 -112 -14406 0
c (0<=( - aux985 + SATLiteral(22) + SATLiteral(112)))
112 14406 0
22 14406 0
22 112 14405 0
c (( - aux986 + SATLiteral(52) + SATLiteral(97))<=0)
-97 -14408 0
-52 -14408 0
-52 -97 -14409 0
c (0<=( - aux986 + SATLiteral(52) + SATLiteral(97)))
97 14409 0
52 14409 0
52 97 14408 0
c (( - aux987 + SATLiteral(67) + SATLiteral(82))<=0)
-82 -14411 0
-67 -14411 0
-67 -82 -14412 0
c (0<=( - aux987 + SATLiteral(67) + SATLiteral(82)))
82 14412 0
67 14412 0
67 82 14411 0
c ((aux987 - aux988 + SATLiteral(37))<=0)
14411 -14414 0
14412 -14415 0
-37 -14414 0
-37 14411 -14415 0
-37 14412 -14417 0
c (0<=(aux987 - aux988 + SATLiteral(37)))
-14412 14417 0
-14411 14415 0
37 14417 0
37 -14412 14415 0
37 -14411 14414 0
c ((aux984 + aux986 - aux989)<=0)
14408 -14419 0
14409 -14420 0
14402 -14419 0
14402 14408 -14420 0
14402 14409 -14422 0
14403 -14420 0
14403 14408 -14422 0
14403 14409 -14424 0
c (0<=(aux984 + aux986 - aux989))
-14409 14424 0
-14408 14422 0
-14403 14424 0
-14403 -14409 14422 0
-14403 -14408 14420 0
-14402 14422 0
-14402 -14409 14420 0
-14402 -14408 14419 0
c (( - aux990 + SATLiteral(8) + SATLiteral(128))<=0)
-128 -14426 0
-8 -14426 0
-8 -128 -14427 0
c (0<=( - aux990 + SATLiteral(8) + SATLiteral(128)))
128 14427 0
8 14427 0
8 128 14426 0
c (( - aux991 + SATLiteral(23) + SATLiteral(113))<=0)
-113 -14429 0
-23 -14429 0
-23 -113 -14430 0
c (0<=( - aux991 + SATLiteral(23) + SATLiteral(113)))
113 14430 0
23 14430 0
23 113 14429 0
c (( - aux992 + SATLiteral(53) + SATLiteral(98))<=0)
-98 -14432 0
-53 -14432 0
-53 -98 -14433 0
c (0<=( - aux992 + SATLiteral(53) + SATLiteral(98)))
98 14433 0
53 14433 0
53 98 14432 0
c (( - aux993 + SATLiteral(68) + SATLiteral(83))<=0)
-83 -14435 0
-68 -14435 0
-68 -83 -14436 0
c (0<=( - aux993 + SATLiteral(68) + SATLiteral(83)))
83 14436 0
68 14436 0
68 83 14435 0
c ((aux993 - aux994 + SATLiteral(38))<=0)
14435 -14438 0
14436 -14439 0
-38 -14438 0
-38 14435 -14439 0
-38 14436 -14441 0
c (0<=(aux993 - aux994 + SATLiteral(38)))
-14436 14441 0
-14435 14439 0
38 14441 0
38 -14436 14439 0
38 -14435 14438 0
c ((aux990 + aux992 - aux995)<=0)
14432 -14443 0
14433 -14444 0
14426 -14443 0
14426 14432 -14444 0
14426 14433 -14446 0
14427 -14444 0
14427 14432 -14446 0
14427 14433 -14448 0
c (0<=(aux990 + aux992 - aux995))
-14433 14448 0
-14432 14446 0
-14427 14448 0
-14427 -14433 14446 0
-14427 -14432 14444 0
-14426 14446 0
-14426 -14433 14444 0
-14426 -14432 14443 0
c (( - aux996 + SATLiteral(9) + SATLiteral(129))<=0)
-129 -14450 0
-9 -14450 0
-9 -129 -14451 0
c (0<=( - aux996 + SATLiteral(9) + SATLiteral(129)))
129 14451 0
9 14451 0
9 129 14450 0
c (( - aux997 + SATLiteral(24) + SATLiteral(114))<=0)
-114 -14453 0
-24 -14453 0
-24 -114 -14454 0
c (0<=( - aux997 + SATLiteral(24) + SATLiteral(114)))
114 14454 0
24 14454 0
24 114 14453 0
c (( - aux998 + SATLiteral(54) + SATLiteral(99))<=0)
-99 -14456 0
-54 -14456 0
-54 -99 -14457 0
c (0<=( - aux998 + SATLiteral(54) + SATLiteral(99)))
99 14457 0
54 14457 0
54 99 14456 0
c (( - aux999 + SATLiteral(69) + SATLiteral(84))<=0)
-84 -14459 0
-69 -14459 0
-69 -84 -14460 0
c (0<=( - aux999 + SATLiteral(69) + SATLiteral(84)))
84 14460 0
69 14460 0
69 84 14459 0
c ((aux999 - aux1000 + SATLiteral(39))<=0)
14459 -14462 0
14460 -14463 0
-39 -14462 0
-39 14459 -14463 0
-39 14460 -14465 0
c (0<=(aux999 - aux1000 + SATLiteral(39)))
-14460 14465 0
-14459 14463 0
39 14465 0
39 -14460 14463 0
39 -14459 14462 0
c ((aux996 + aux998 - aux1001)<=0)
14456 -14467 0
14457 -14468 0
14450 -14467 0
14450 14456 -14468 0
14450 14457 -14470 0
14451 -14468 0
14451 14456 -14470 0
14451 14457 -14472 0
c (0<=(aux996 + aux998 - aux1001))
-14457 14472 0
-14456 14470 0
-14451 14472 0
-14451 -14457 14470 0
-14451 -14456 14468 0
-14450 14470 0
-14450 -14457 14468 0
-14450 -14456 14467 0
c (( - aux1002 + SATLiteral(10) + SATLiteral(130))<=0)
-130 -14474 0
-10 -14474 0
-10 -130 -14475 0
c (0<=( - aux1002 + SATLiteral(10) + SATLiteral(130)))
130 14475 0
10 14475 0
10 130 14474 0
c (( - aux1003 + SATLiteral(25) + SATLiteral(115))<=0)
-115 -14477 0
-25 -14477 0
-25 -115 -14478 0
c (0<=( - aux1003 + SATLiteral(25) + SATLiteral(115)))
115 14478 0
25 14478 0
25 115 14477 0
c (( - aux1004 + SATLiteral(55) + SATLiteral(100))<=0)
-100 -14480 0
-55 -14480 0
-55 -100 -14481 0
c (0<=( - aux1004 + SATLiteral(55) + SATLiteral(100)))
100 14481 0
55 14481 0
55 100 14480 0
c (( - aux1005 + SATLiteral(70) + SATLiteral(85))<=0)
-85 -14483 0
-70 -14483 0
-70 -85 -14484 0
c (0<=( - aux1005 + SATLiteral(70) + SATLiteral(85)))
85 14484 0
70 14484 0
70 85 14483 0
c ((aux1005 - aux1006 + SATLiteral(40))<=0)
14483 -14486 0
14484 -14487 0
-40 -14486 0
-40 14483 -14487 0
-40 14484 -14489 0
c (0<=(aux1005 - aux1006 + SATLiteral(40)))
-14484 14489 0
-14483 14487 0
40 14489 0
40 -14484 14487 0
40 -14483 14486 0
c ((aux1002 + aux1004 - aux1007)<=0)
14480 -14491 0
14481 -14492 0
14474 -14491 0
14474 14480 -14492 0
14474 14481 -14494 0
14475 -14492 0
14475 14480 -14494 0
14475 14481 -14496 0
c (0<=(aux1002 + aux1004 - aux1007))
-14481 14496 0
-14480 14494 0
-14475 14496 0
-14475 -14481 14494 0
-14475 -14480 14492 0
-14474 14494 0
-14474 -14481 14492 0
-14474 -14480 14491 0
c ((SATLiteral(137) + SATLiteral(257) - aux1008)<=0)
-257 -14498 0
-137 -14498 0
-137 -257 -14499 0
c (0<=(SATLiteral(137) + SATLiteral(257) - aux1008))
257 14499 0
137 14499 0
137 257 14498 0
c ((SATLiteral(152) + SATLiteral(242) - aux1009)<=0)
-242 -14501 0
-152 -14501 0
-152 -242 -14502 0
c (0<=(SATLiteral(152) + SATLiteral(242) - aux1009))
242 14502 0
152 14502 0
152 242 14501 0
c ((SATLiteral(182) + SATLiteral(227) - aux1010)<=0)
-227 -14504 0
-182 -14504 0
-182 -227 -14505 0
c (0<=(SATLiteral(182) + SATLiteral(227) - aux1010))
227 14505 0
182 14505 0
182 227 14504 0
c ((SATLiteral(197) + SATLiteral(212) - aux1011)<=0)
-212 -14507 0
-197 -14507 0
-197 -212 -14508 0
c (0<=(SATLiteral(197) + SATLiteral(212) - aux1011))
212 14508 0
197 14508 0
197 212 14507 0
c ((SATLiteral(167) + aux1011 - aux1012)<=0)
14507 -14510 0
14508 -14511 0
-167 -14510 0
-167 14507 -14511 0
-167 14508 -14513 0
c (0<=(SATLiteral(167) + aux1011 - aux1012))
-14508 14513 0
-14507 14511 0
167 14513 0
167 -14508 14511 0
167 -14507 14510 0
c ((aux1008 + aux1010 - aux1013)<=0)
14504 -14515 0
14505 -14516 0
14498 -14515 0
14498 14504 -14516 0
14498 14505 -14518 0
14499 -14516 0
14499 14504 -14518 0
14499 14505 -14520 0
c (0<=(aux1008 + aux1010 - aux1013))
-14505 14520 0
-14504 14518 0
-14499 14520 0
-14499 -14505 14518 0
-14499 -14504 14516 0
-14498 14518 0
-14498 -14505 14516 0
-14498 -14504 14515 0
c ((SATLiteral(138) + SATLiteral(258) - aux1014)<=0)
-258 -14522 0
-138 -14522 0
-138 -258 -14523 0
c (0<=(SATLiteral(138) + SATLiteral(258) - aux1014))
258 14523 0
138 14523 0
138 258 14522 0
c ((SATLiteral(153) + SATLiteral(243) - aux1015)<=0)
-243 -14525 0
-153 -14525 0
-153 -243 -14526 0
c (0<=(SATLiteral(153) + SATLiteral(243) - aux1015))
243 14526 0
153 14526 0
153 243 14525 0
c ((SATLiteral(183) + SATLiteral(228) - aux1016)<=0)
-228 -14528 0
-183 -14528 0
-183 -228 -14529 0
c (0<=(SATLiteral(183) + SATLiteral(228) - aux1016))
228 14529 0
183 14529 0
183 228 14528 0
c ((SATLiteral(198) + SATLiteral(213) - aux1017)<=0)
-213 -14531 0
-198 -14531 0
-198 -213 -14532 0
c (0<=(SATLiteral(198) + SATLiteral(213) - aux1017))
213 14532 0
198 14532 0
198 213 14531 0
c ((SATLiteral(168) + aux1017 - aux1018)<=0)
14531 -14534 0
14532 -14535 0
-168 -14534 0
-168 14531 -14535 0
-168 14532 -14537 0
c (0<=(SATLiteral(168) + aux1017 - aux1018))
-14532 14537 0
-14531 14535 0
168 14537 0
168 -14532 14535 0
168 -14531 14534 0
c ((aux1014 + aux1016 - aux1019)<=0)
14528 -14539 0
14529 -14540 0
14522 -14539 0
14522 14528 -14540 0
14522 14529 -14542 0
14523 -14540 0
14523 14528 -14542 0
14523 14529 -14544 0
c (0<=(aux1014 + aux1016 - aux1019))
-14529 14544 0
-14528 14542 0
-14523 14544 0
-14523 -14529 14542 0
-14523 -14528 14540 0
-14522 14542 0
-14522 -14529 14540 0
-14522 -14528 14539 0
c ((SATLiteral(139) + SATLiteral(259) - aux1020)<=0)
-259 -14546 0
-139 -14546 0
-139 -259 -14547 0
c (0<=(SATLiteral(139) + SATLiteral(259) - aux1020))
259 14547 0
139 14547 0
139 259 14546 0
c ((SATLiteral(154) + SATLiteral(244) - aux1021)<=0)
-244 -14549 0
-154 -14549 0
-154 -244 -14550 0
c (0<=(SATLiteral(154) + SATLiteral(244) - aux1021))
244 14550 0
154 14550 0
154 244 14549 0
c ((SATLiteral(184) + SATLiteral(229) - aux1022)<=0)
-229 -14552 0
-184 -14552 0
-184 -229 -14553 0
c (0<=(SATLiteral(184) + SATLiteral(229) - aux1022))
229 14553 0
184 14553 0
184 229 14552 0
c ((SATLiteral(199) + SATLiteral(214) - aux1023)<=0)
-214 -14555 0
-199 -14555 0
-199 -214 -14556 0
c (0<=(SATLiteral(199) + SATLiteral(214) - aux1023))
214 14556 0
199 14556 0
199 214 14555 0
c ((SATLiteral(169) + aux1023 - aux1024)<=0)
14555 -14558 0
14556 -14559 0
-169 -14558 0
-169 14555 -14559 0
-169 14556 -14561 0
c (0<=(SATLiteral(169) + aux1023 - aux1024))
-14556 14561 0
-14555 14559 0
169 14561 0
169 -14556 14559 0
169 -14555 14558 0
c ((aux1020 + aux1022 - aux1025)<=0)
14552 -14563 0
14553 -14564 0
14546 -14563 0
14546 14552 -14564 0
14546 14553 -14566 0
14547 -14564 0
14547 14552 -14566 0
14547 14553 -14568 0
c (0<=(aux1020 + aux1022 - aux1025))
-14553 14568 0
-14552 14566 0
-14547 14568 0
-14547 -14553 14566 0
-14547 -14552 14564 0
-14546 14566 0
-14546 -14553 14564 0
-14546 -14552 14563 0
c ((SATLiteral(140) + SATLiteral(260) - aux1026)<=0)
-260 -14570 0
-140 -14570 0
-140 -260 -14571 0
c (0<=(SATLiteral(140) + SATLiteral(260) - aux1026))
260 14571 0
140 14571 0
140 260 14570 0
c ((SATLiteral(155) + SATLiteral(245) - aux1027)<=0)
-245 -14573 0
-155 -14573 0
-155 -245 -14574 0
c (0<=(SATLiteral(155) + SATLiteral(245) - aux1027))
245 14574 0
155 14574 0
155 245 14573 0
c ((SATLiteral(185) + SATLiteral(230) - aux1028)<=0)
-230 -14576 0
-185 -14576 0
-185 -230 -14577 0
c (0<=(SATLiteral(185) + SATLiteral(230) - aux1028))
230 14577 0
185 14577 0
185 230 14576 0
c ((SATLiteral(200) + SATLiteral(215) - aux1029)<=0)
-215 -14579 0
-200 -14579 0
-200 -215 -14580 0
c (0<=(SATLiteral(200) + SATLiteral(215) - aux1029))
215 14580 0
200 14580 0
200 215 14579 0
c ((SATLiteral(170) + aux1029 - aux1030)<=0)
14579 -14582 0
14580 -14583 0
-170 -14582 0
-170 14579 -14583 0
-170 14580 -14585 0
c (0<=(SATLiteral(170) + aux1029 - aux1030))
-14580 14585 0
-14579 14583 0
170 14585 0
170 -14580 14583 0
170 -14579 14582 0
c ((aux1026 + aux1028 - aux1031)<=0)
14576 -14587 0
14577 -14588 0
14570 -14587 0
14570 14576 -14588 0
14570 14577 -14590 0
14571 -14588 0
14571 14576 -14590 0
14571 14577 -14592 0
c (0<=(aux1026 + aux1028 - aux1031))
-14577 14592 0
-14576 14590 0
-14571 14592 0
-14571 -14577 14590 0
-14571 -14576 14588 0
-14570 14590 0
-14570 -14577 14588 0
-14570 -14576 14587 0
c ((SATLiteral(141) + SATLiteral(261) - aux1032)<=0)
-261 -14594 0
-141 -14594 0
-141 -261 -14595 0
c (0<=(SATLiteral(141) + SATLiteral(261) - aux1032))
261 14595 0
141 14595 0
141 261 14594 0
c ((SATLiteral(156) + SATLiteral(246) - aux1033)<=0)
-246 -14597 0
-156 -14597 0
-156 -246 -14598 0
c (0<=(SATLiteral(156) + SATLiteral(246) - aux1033))
246 14598 0
156 14598 0
156 246 14597 0
c ((SATLiteral(186) + SATLiteral(231) - aux1034)<=0)
-231 -14600 0
-186 -14600 0
-186 -231 -14601 0
c (0<=(SATLiteral(186) + SATLiteral(231) - aux1034))
231 14601 0
186 14601 0
186 231 14600 0
c ((SATLiteral(201) + SATLiteral(216) - aux1035)<=0)
-216 -14603 0
-201 -14603 0
-201 -216 -14604 0
c (0<=(SATLiteral(201) + SATLiteral(216) - aux1035))
216 14604 0
201 14604 0
201 216 14603 0
c ((SATLiteral(171) + aux1035 - aux1036)<=0)
14603 -14606 0
14604 -14607 0
-171 -14606 0
-171 14603 -14607 0
-171 14604 -14609 0
c (0<=(SATLiteral(171) + aux1035 - aux1036))
-14604 14609 0
-14603 14607 0
171 14609 0
171 -14604 14607 0
171 -14603 14606 0
c ((aux1032 + aux1034 - aux1037)<=0)
14600 -14611 0
14601 -14612 0
14594 -14611 0
14594 14600 -14612 0
14594 14601 -14614 0
14595 -14612 0
14595 14600 -14614 0
14595 14601 -14616 0
c (0<=(aux1032 + aux1034 - aux1037))
-14601 14616 0
-14600 14614 0
-14595 14616 0
-14595 -14601 14614 0
-14595 -14600 14612 0
-14594 14614 0
-14594 -14601 14612 0
-14594 -14600 14611 0
c ((SATLiteral(142) + SATLiteral(262) - aux1038)<=0)
-262 -14618 0
-142 -14618 0
-142 -262 -14619 0
c (0<=(SATLiteral(142) + SATLiteral(262) - aux1038))
262 14619 0
142 14619 0
142 262 14618 0
c ((SATLiteral(157) + SATLiteral(247) - aux1039)<=0)
-247 -14621 0
-157 -14621 0
-157 -247 -14622 0
c (0<=(SATLiteral(157) + SATLiteral(247) - aux1039))
247 14622 0
157 14622 0
157 247 14621 0
c ((SATLiteral(187) + SATLiteral(232) - aux1040)<=0)
-232 -14624 0
-187 -14624 0
-187 -232 -14625 0
c (0<=(SATLiteral(187) + SATLiteral(232) - aux1040))
232 14625 0
187 14625 0
187 232 14624 0
c ((SATLiteral(202) + SATLiteral(217) - aux1041)<=0)
-217 -14627 0
-202 -14627 0
-202 -217 -14628 0
c (0<=(SATLiteral(202) + SATLiteral(217) - aux1041))
217 14628 0
202 14628 0
202 217 14627 0
c ((SATLiteral(172) + aux1041 - aux1042)<=0)
14627 -14630 0
14628 -14631 0
-172 -14630 0
-172 14627 -14631 0
-172 14628 -14633 0
c (0<=(SATLiteral(172) + aux1041 - aux1042))
-14628 14633 0
-14627 14631 0
172 14633 0
172 -14628 14631 0
172 -14627 14630 0
c ((aux1038 + aux1040 - aux1043)<=0)
14624 -14635 0
14625 -14636 0
14618 -14635 0
14618 14624 -14636 0
14618 14625 -14638 0
14619 -14636 0
14619 14624 -14638 0
14619 14625 -14640 0
c (0<=(aux1038 + aux1040 - aux1043))
-14625 14640 0
-14624 14638 0
-14619 14640 0
-14619 -14625 14638 0
-14619 -14624 14636 0
-14618 14638 0
-14618 -14625 14636 0
-14618 -14624 14635 0
c ((SATLiteral(143) + SATLiteral(263) - aux1044)<=0)
-263 -14642 0
-143 -14642 0
-143 -263 -14643 0
c (0<=(SATLiteral(143) + SATLiteral(263) - aux1044))
263 14643 0
143 14643 0
143 263 14642 0
c ((SATLiteral(158) + SATLiteral(248) - aux1045)<=0)
-248 -14645 0
-158 -14645 0
-158 -248 -14646 0
c (0<=(SATLiteral(158) + SATLiteral(248) - aux1045))
248 14646 0
158 14646 0
158 248 14645 0
c ((SATLiteral(188) + SATLiteral(233) - aux1046)<=0)
-233 -14648 0
-188 -14648 0
-188 -233 -14649 0
c (0<=(SATLiteral(188) + SATLiteral(233) - aux1046))
233 14649 0
188 14649 0
188 233 14648 0
c ((SATLiteral(203) + SATLiteral(218) - aux1047)<=0)
-218 -14651 0
-203 -14651 0
-203 -218 -14652 0
c (0<=(SATLiteral(203) + SATLiteral(218) - aux1047))
218 14652 0
203 14652 0
203 218 14651 0
c ((SATLiteral(173) + aux1047 - aux1048)<=0)
14651 -14654 0
14652 -14655 0
-173 -14654 0
-173 14651 -14655 0
-173 14652 -14657 0
c (0<=(SATLiteral(173) + aux1047 - aux1048))
-14652 14657 0
-14651 14655 0
173 14657 0
173 -14652 14655 0
173 -14651 14654 0
c ((aux1044 + aux1046 - aux1049)<=0)
14648 -14659 0
14649 -14660 0
14642 -14659 0
14642 14648 -14660 0
14642 14649 -14662 0
14643 -14660 0
14643 14648 -14662 0
14643 14649 -14664 0
c (0<=(aux1044 + aux1046 - aux1049))
-14649 14664 0
-14648 14662 0
-14643 14664 0
-14643 -14649 14662 0
-14643 -14648 14660 0
-14642 14662 0
-14642 -14649 14660 0
-14642 -14648 14659 0
c ((SATLiteral(144) + SATLiteral(264) - aux1050)<=0)
-264 -14666 0
-144 -14666 0
-144 -264 -14667 0
c (0<=(SATLiteral(144) + SATLiteral(264) - aux1050))
264 14667 0
144 14667 0
144 264 14666 0
c ((SATLiteral(159) + SATLiteral(249) - aux1051)<=0)
-249 -14669 0
-159 -14669 0
-159 -249 -14670 0
c (0<=(SATLiteral(159) + SATLiteral(249) - aux1051))
249 14670 0
159 14670 0
159 249 14669 0
c ((SATLiteral(189) + SATLiteral(234) - aux1052)<=0)
-234 -14672 0
-189 -14672 0
-189 -234 -14673 0
c (0<=(SATLiteral(189) + SATLiteral(234) - aux1052))
234 14673 0
189 14673 0
189 234 14672 0
c ((SATLiteral(204) + SATLiteral(219) - aux1053)<=0)
-219 -14675 0
-204 -14675 0
-204 -219 -14676 0
c (0<=(SATLiteral(204) + SATLiteral(219) - aux1053))
219 14676 0
204 14676 0
204 219 14675 0
c ((SATLiteral(174) + aux1053 - aux1054)<=0)
14675 -14678 0
14676 -14679 0
-174 -14678 0
-174 14675 -14679 0
-174 14676 -14681 0
c (0<=(SATLiteral(174) + aux1053 - aux1054))
-14676 14681 0
-14675 14679 0
174 14681 0
174 -14676 14679 0
174 -14675 14678 0
c ((aux1050 + aux1052 - aux1055)<=0)
14672 -14683 0
14673 -14684 0
14666 -14683 0
14666 14672 -14684 0
14666 14673 -14686 0
14667 -14684 0
14667 14672 -14686 0
14667 14673 -14688 0
c (0<=(aux1050 + aux1052 - aux1055))
-14673 14688 0
-14672 14686 0
-14667 14688 0
-14667 -14673 14686 0
-14667 -14672 14684 0
-14666 14686 0
-14666 -14673 14684 0
-14666 -14672 14683 0
c ((SATLiteral(145) + SATLiteral(265) - aux1056)<=0)
-265 -14690 0
-145 -14690 0
-145 -265 -14691 0
c (0<=(SATLiteral(145) + SATLiteral(265) - aux1056))
265 14691 0
145 14691 0
145 265 14690 0
c ((SATLiteral(160) + SATLiteral(250) - aux1057)<=0)
-250 -14693 0
-160 -14693 0
-160 -250 -14694 0
c (0<=(SATLiteral(160) + SATLiteral(250) - aux1057))
250 14694 0
160 14694 0
160 250 14693 0
c ((SATLiteral(190) + SATLiteral(235) - aux1058)<=0)
-235 -14696 0
-190 -14696 0
-190 -235 -14697 0
c (0<=(SATLiteral(190) + SATLiteral(235) - aux1058))
235 14697 0
190 14697 0
190 235 14696 0
c ((SATLiteral(205) + SATLiteral(220) - aux1059)<=0)
-220 -14699 0
-205 -14699 0
-205 -220 -14700 0
c (0<=(SATLiteral(205) + SATLiteral(220) - aux1059))
220 14700 0
205 14700 0
205 220 14699 0
c ((SATLiteral(175) + aux1059 - aux1060)<=0)
14699 -14702 0
14700 -14703 0
-175 -14702 0
-175 14699 -14703 0
-175 14700 -14705 0
c (0<=(SATLiteral(175) + aux1059 - aux1060))
-14700 14705 0
-14699 14703 0
175 14705 0
175 -14700 14703 0
175 -14699 14702 0
c ((aux1056 + aux1058 - aux1061)<=0)
14696 -14707 0
14697 -14708 0
14690 -14707 0
14690 14696 -14708 0
14690 14697 -14710 0
14691 -14708 0
14691 14696 -14710 0
14691 14697 -14712 0
c (0<=(aux1056 + aux1058 - aux1061))
-14697 14712 0
-14696 14710 0
-14691 14712 0
-14691 -14697 14710 0
-14691 -14696 14708 0
-14690 14710 0
-14690 -14697 14708 0
-14690 -14696 14707 0
c (( - aux1062 + SATLiteral(272) + SATLiteral(392))<=0)
-392 -14714 0
-272 -14714 0
-272 -392 -14715 0
c (0<=( - aux1062 + SATLiteral(272) + SATLiteral(392)))
392 14715 0
272 14715 0
272 392 14714 0
c (( - aux1063 + SATLiteral(287) + SATLiteral(377))<=0)
-377 -14717 0
-287 -14717 0
-287 -377 -14718 0
c (0<=( - aux1063 + SATLiteral(287) + SATLiteral(377)))
377 14718 0
287 14718 0
287 377 14717 0
c (( - aux1064 + SATLiteral(317) + SATLiteral(362))<=0)
-362 -14720 0
-317 -14720 0
-317 -362 -14721 0
c (0<=( - aux1064 + SATLiteral(317) + SATLiteral(362)))
362 14721 0
317 14721 0
317 362 14720 0
c (( - aux1065 + SATLiteral(332) + SATLiteral(347))<=0)
-347 -14723 0
-332 -14723 0
-332 -347 -14724 0
c (0<=( - aux1065 + SATLiteral(332) + SATLiteral(347)))
347 14724 0
332 14724 0
332 347 14723 0
c ((aux1065 - aux1066 + SATLiteral(302))<=0)
14723 -14726 0
14724 -14727 0
-302 -14726 0
-302 14723 -14727 0
-302 14724 -14729 0
c (0<=(aux1065 - aux1066 + SATLiteral(302)))
-14724 14729 0
-14723 14727 0
302 14729 0
302 -14724 14727 0
302 -14723 14726 0
c ((aux1062 + aux1064 - aux1067)<=0)
14720 -14731 0
14721 -14732 0
14714 -14731 0
14714 14720 -14732 0
14714 14721 -14734 0
14715 -14732 0
14715 14720 -14734 0
14715 14721 -14736 0
c (0<=(aux1062 + aux1064 - aux1067))
-14721 14736 0
-14720 14734 0
-14715 14736 0
-14715 -14721 14734 0
-14715 -14720 14732 0
-14714 14734 0
-14714 -14721 14732 0
-14714 -14720 14731 0
c (( - aux1068 + SATLiteral(273) + SATLiteral(393))<=0)
-393 -14738 0
-273 -14738 0
-273 -393 -14739 0
c (0<=( - aux1068 + SATLiteral(273) + SATLiteral(393)))
393 14739 0
273 14739 0
273 393 14738 0
c (( - aux1069 + SATLiteral(288) + SATLiteral(378))<=0)
-378 -14741 0
-288 -14741 0
-288 -378 -14742 0
c (0<=( - aux1069 + SATLiteral(288) + SATLiteral(378)))
378 14742 0
288 14742 0
288 378 14741 0
c (( - aux1070 + SATLiteral(318) + SATLiteral(363))<=0)
-363 -14744 0
-318 -14744 0
-318 -363 -14745 0
c (0<=( - aux1070 + SATLiteral(318) + SATLiteral(363)))
363 14745 0
318 14745 0
318 363 14744 0
c (( - aux1071 + SATLiteral(333) + SATLiteral(348))<=0)
-348 -14747 0
-333 -14747 0
-333 -348 -14748 0
c (0<=( - aux1071 + SATLiteral(333) + SATLiteral(348)))
348 14748 0
333 14748 0
333 348 14747 0
c ((aux1071 - aux1072 + SATLiteral(303))<=0)
14747 -14750 0
14748 -14751 0
-303 -14750 0
-303 14747 -14751 0
-303 14748 -14753 0
c (0<=(aux1071 - aux1072 + SATLiteral(303)))
-14748 14753 0
-14747 14751 0
303 14753 0
303 -14748 14751 0
303 -14747 14750 0
c ((aux1068 + aux1070 - aux1073)<=0)
14744 -14755 0
14745 -14756 0
14738 -14755 0
14738 14744 -14756 0
14738 14745 -14758 0
14739 -14756 0
14739 14744 -14758 0
14739 14745 -14760 0
c (0<=(aux1068 + aux1070 - aux1073))
-14745 14760 0
-14744 14758 0
-14739 14760 0
-14739 -14745 14758 0
-14739 -14744 14756 0
-14738 14758 0
-14738 -14745 14756 0
-14738 -14744 14755 0
c (( - aux1074 + SATLiteral(274) + SATLiteral(394))<=0)
-394 -14762 0
-274 -14762 0
-274 -394 -14763 0
c (0<=( - aux1074 + SATLiteral(274) + SATLiteral(394)))
394 14763 0
274 14763 0
274 394 14762 0
c (( - aux1075 + SATLiteral(289) + SATLiteral(379))<=0)
-379 -14765 0
-289 -14765 0
-289 -379 -14766 0
c (0<=( - aux1075 + SATLiteral(289) + SATLiteral(379)))
379 14766 0
289 14766 0
289 379 14765 0
c (( - aux1076 + SATLiteral(319) + SATLiteral(364))<=0)
-364 -14768 0
-319 -14768 0
-319 -364 -14769 0
c (0<=( - aux1076 + SATLiteral(319) + SATLiteral(364)))
364 14769 0
319 14769 0
319 364 14768 0
c (( - aux1077 + SATLiteral(334) + SATLiteral(349))<=0)
-349 -14771 0
-334 -14771 0
-334 -349 -14772 0
c (0<=( - aux1077 + SATLiteral(334) + SATLiteral(349)))
349 14772 0
334 14772 0
334 349 14771 0
c ((aux1077 - aux1078 + SATLiteral(304))<=0)
14771 -14774 0
14772 -14775 0
-304 -14774 0
-304 14771 -14775 0
-304 14772 -14777 0
c (0<=(aux1077 - aux1078 + SATLiteral(304)))
-14772 14777 0
-14771 14775 0
304 14777 0
304 -14772 14775 0
304 -14771 14774 0
c ((aux1074 + aux1076 - aux1079)<=0)
14768 -14779 0
14769 -14780 0
14762 -14779 0
14762 14768 -14780 0
14762 14769 -14782 0
14763 -14780 0
14763 14768 -14782 0
14763 14769 -14784 0
c (0<=(aux1074 + aux1076 - aux1079))
-14769 14784 0
-14768 14782 0
-14763 14784 0
-14763 -14769 14782 0
-14763 -14768 14780 0
-14762 14782 0
-14762 -14769 14780 0
-14762 -14768 14779 0
c (( - aux1080 + SATLiteral(275) + SATLiteral(395))<=0)
-395 -14786 0
-275 -14786 0
-275 -395 -14787 0
c (0<=( - aux1080 + SATLiteral(275) + SATLiteral(395)))
395 14787 0
275 14787 0
275 395 14786 0
c (( - aux1081 + SATLiteral(290) + SATLiteral(380))<=0)
-380 -14789 0
-290 -14789 0
-290 -380 -14790 0
c (0<=( - aux1081 + SATLiteral(290) + SATLiteral(380)))
380 14790 0
290 14790 0
290 380 14789 0
c (( - aux1082 + SATLiteral(320) + SATLiteral(365))<=0)
-365 -14792 0
-320 -14792 0
-320 -365 -14793 0
c (0<=( - aux1082 + SATLiteral(320) + SATLiteral(365)))
365 14793 0
320 14793 0
320 365 14792 0
c (( - aux1083 + SATLiteral(335) + SATLiteral(350))<=0)
-350 -14795 0
-335 -14795 0
-335 -350 -14796 0
c (0<=( - aux1083 + SATLiteral(335) + SATLiteral(350)))
350 14796 0
335 14796 0
335 350 14795 0
c ((aux1083 - aux1084 + SATLiteral(305))<=0)
14795 -14798 0
14796 -14799 0
-305 -14798 0
-305 14795 -14799 0
-305 14796 -14801 0
c (0<=(aux1083 - aux1084 + SATLiteral(305)))
-14796 14801 0
-14795 14799 0
305 14801 0
305 -14796 14799 0
305 -14795 14798 0
c ((aux1080 + aux1082 - aux1085)<=0)
14792 -14803 0
14793 -14804 0
14786 -14803 0
14786 14792 -14804 0
14786 14793 -14806 0
14787 -14804 0
14787 14792 -14806 0
14787 14793 -14808 0
c (0<=(aux1080 + aux1082 - aux1085))
-14793 14808 0
-14792 14806 0
-14787 14808 0
-14787 -14793 14806 0
-14787 -14792 14804 0
-14786 14806 0
-14786 -14793 14804 0
-14786 -14792 14803 0
c (( - aux1086 + SATLiteral(276) + SATLiteral(396))<=0)
-396 -14810 0
-276 -14810 0
-276 -396 -14811 0
c (0<=( - aux1086 + SATLiteral(276) + SATLiteral(396)))
396 14811 0
276 14811 0
276 396 14810 0
c (( - aux1087 + SATLiteral(291) + SATLiteral(381))<=0)
-381 -14813 0
-291 -14813 0
-291 -381 -14814 0
c (0<=( - aux1087 + SATLiteral(291) + SATLiteral(381)))
381 14814 0
291 14814 0
291 381 14813 0
c (( - aux1088 + SATLiteral(321) + SATLiteral(366))<=0)
-366 -14816 0
-321 -14816 0
-321 -366 -14817 0
c (0<=( - aux1088 + SATLiteral(321) + SATLiteral(366)))
366 14817 0
321 14817 0
321 366 14816 0
c (( - aux1089 + SATLiteral(336) + SATLiteral(351))<=0)
-351 -14819 0
-336 -14819 0
-336 -351 -14820 0
c (0<=( - aux1089 + SATLiteral(336) + SATLiteral(351)))
351 14820 0
336 14820 0
336 351 14819 0
c ((aux1089 - aux1090 + SATLiteral(306))<=0)
14819 -14822 0
14820 -14823 0
-306 -14822 0
-306 14819 -14823 0
-306 14820 -14825 0
c (0<=(aux1089 - aux1090 + SATLiteral(306)))
-14820 14825 0
-14819 14823 0
306 14825 0
306 -14820 14823 0
306 -14819 14822 0
c ((aux1086 + aux1088 - aux1091)<=0)
14816 -14827 0
14817 -14828 0
14810 -14827 0
14810 14816 -14828 0
14810 14817 -14830 0
14811 -14828 0
14811 14816 -14830 0
14811 14817 -14832 0
c (0<=(aux1086 + aux1088 - aux1091))
-14817 14832 0
-14816 14830 0
-14811 14832 0
-14811 -14817 14830 0
-14811 -14816 14828 0
-14810 14830 0
-14810 -14817 14828 0
-14810 -14816 14827 0
c (( - aux1092 + SATLiteral(277) + SATLiteral(397))<=0)
-397 -14834 0
-277 -14834 0
-277 -397 -14835 0
c (0<=( - aux1092 + SATLiteral(277) + SATLiteral(397)))
397 14835 0
277 14835 0
277 397 14834 0
c (( - aux1093 + SATLiteral(292) + SATLiteral(382))<=0)
-382 -14837 0
-292 -14837 0
-292 -382 -14838 0
c (0<=( - aux1093 + SATLiteral(292) + SATLiteral(382)))
382 14838 0
292 14838 0
292 382 14837 0
c (( - aux1094 + SATLiteral(322) + SATLiteral(367))<=0)
-367 -14840 0
-322 -14840 0
-322 -367 -14841 0
c (0<=( - aux1094 + SATLiteral(322) + SATLiteral(367)))
367 14841 0
322 14841 0
322 367 14840 0
c (( - aux1095 + SATLiteral(337) + SATLiteral(352))<=0)
-352 -14843 0
-337 -14843 0
-337 -352 -14844 0
c (0<=( - aux1095 + SATLiteral(337) + SATLiteral(352)))
352 14844 0
337 14844 0
337 352 14843 0
c ((aux1095 - aux1096 + SATLiteral(307))<=0)
14843 -14846 0
14844 -14847 0
-307 -14846 0
-307 14843 -14847 0
-307 14844 -14849 0
c (0<=(aux1095 - aux1096 + SATLiteral(307)))
-14844 14849 0
-14843 14847 0
307 14849 0
307 -14844 14847 0
307 -14843 14846 0
c ((aux1092 + aux1094 - aux1097)<=0)
14840 -14851 0
14841 -14852 0
14834 -14851 0
14834 14840 -14852 0
14834 14841 -14854 0
14835 -14852 0
14835 14840 -14854 0
14835 14841 -14856 0
c (0<=(aux1092 + aux1094 - aux1097))
-14841 14856 0
-14840 14854 0
-14835 14856 0
-14835 -14841 14854 0
-14835 -14840 14852 0
-14834 14854 0
-14834 -14841 14852 0
-14834 -14840 14851 0
c (( - aux1098 + SATLiteral(278) + SATLiteral(398))<=0)
-398 -14858 0
-278 -14858 0
-278 -398 -14859 0
c (0<=( - aux1098 + SATLiteral(278) + SATLiteral(398)))
398 14859 0
278 14859 0
278 398 14858 0
c (( - aux1099 + SATLiteral(293) + SATLiteral(383))<=0)
-383 -14861 0
-293 -14861 0
-293 -383 -14862 0
c (0<=( - aux1099 + SATLiteral(293) + SATLiteral(383)))
383 14862 0
293 14862 0
293 383 14861 0
c (( - aux1100 + SATLiteral(323) + SATLiteral(368))<=0)
-368 -14864 0
-323 -14864 0
-323 -368 -14865 0
c (0<=( - aux1100 + SATLiteral(323) + SATLiteral(368)))
368 14865 0
323 14865 0
323 368 14864 0
c (( - aux1101 + SATLiteral(338) + SATLiteral(353))<=0)
-353 -14867 0
-338 -14867 0
-338 -353 -14868 0
c (0<=( - aux1101 + SATLiteral(338) + SATLiteral(353)))
353 14868 0
338 14868 0
338 353 14867 0
c ((aux1101 - aux1102 + SATLiteral(308))<=0)
14867 -14870 0
14868 -14871 0
-308 -14870 0
-308 14867 -14871 0
-308 14868 -14873 0
c (0<=(aux1101 - aux1102 + SATLiteral(308)))
-14868 14873 0
-14867 14871 0
308 14873 0
308 -14868 14871 0
308 -14867 14870 0
c ((aux1098 + aux1100 - aux1103)<=0)
14864 -14875 0
14865 -14876 0
14858 -14875 0
14858 14864 -14876 0
14858 14865 -14878 0
14859 -14876 0
14859 14864 -14878 0
14859 14865 -14880 0
c (0<=(aux1098 + aux1100 - aux1103))
-14865 14880 0
-14864 14878 0
-14859 14880 0
-14859 -14865 14878 0
-14859 -14864 14876 0
-14858 14878 0
-14858 -14865 14876 0
-14858 -14864 14875 0
c (( - aux1104 + SATLiteral(279) + SATLiteral(399))<=0)
-399 -14882 0
-279 -14882 0
-279 -399 -14883 0
c (0<=( - aux1104 + SATLiteral(279) + SATLiteral(399)))
399 14883 0
279 14883 0
279 399 14882 0
c (( - aux1105 + SATLiteral(294) + SATLiteral(384))<=0)
-384 -14885 0
-294 -14885 0
-294 -384 -14886 0
c (0<=( - aux1105 + SATLiteral(294) + SATLiteral(384)))
384 14886 0
294 14886 0
294 384 14885 0
c (( - aux1106 + SATLiteral(324) + SATLiteral(369))<=0)
-369 -14888 0
-324 -14888 0
-324 -369 -14889 0
c (0<=( - aux1106 + SATLiteral(324) + SATLiteral(369)))
369 14889 0
324 14889 0
324 369 14888 0
c (( - aux1107 + SATLiteral(339) + SATLiteral(354))<=0)
-354 -14891 0
-339 -14891 0
-339 -354 -14892 0
c (0<=( - aux1107 + SATLiteral(339) + SATLiteral(354)))
354 14892 0
339 14892 0
339 354 14891 0
c ((aux1107 - aux1108 + SATLiteral(309))<=0)
14891 -14894 0
14892 -14895 0
-309 -14894 0
-309 14891 -14895 0
-309 14892 -14897 0
c (0<=(aux1107 - aux1108 + SATLiteral(309)))
-14892 14897 0
-14891 14895 0
309 14897 0
309 -14892 14895 0
309 -14891 14894 0
c ((aux1104 + aux1106 - aux1109)<=0)
14888 -14899 0
14889 -14900 0
14882 -14899 0
14882 14888 -14900 0
14882 14889 -14902 0
14883 -14900 0
14883 14888 -14902 0
14883 14889 -14904 0
c (0<=(aux1104 + aux1106 - aux1109))
-14889 14904 0
-14888 14902 0
-14883 14904 0
-14883 -14889 14902 0
-14883 -14888 14900 0
-14882 14902 0
-14882 -14889 14900 0
-14882 -14888 14899 0
c (( - aux1110 + SATLiteral(280) + SATLiteral(400))<=0)
-400 -14906 0
-280 -14906 0
-280 -400 -14907 0
c (0<=( - aux1110 + SATLiteral(280) + SATLiteral(400)))
400 14907 0
280 14907 0
280 400 14906 0
c (( - aux1111 + SATLiteral(295) + SATLiteral(385))<=0)
-385 -14909 0
-295 -14909 0
-295 -385 -14910 0
c (0<=( - aux1111 + SATLiteral(295) + SATLiteral(385)))
385 14910 0
295 14910 0
295 385 14909 0
c (( - aux1112 + SATLiteral(325) + SATLiteral(370))<=0)
-370 -14912 0
-325 -14912 0
-325 -370 -14913 0
c (0<=( - aux1112 + SATLiteral(325) + SATLiteral(370)))
370 14913 0
325 14913 0
325 370 14912 0
c (( - aux1113 + SATLiteral(340) + SATLiteral(355))<=0)
-355 -14915 0
-340 -14915 0
-340 -355 -14916 0
c (0<=( - aux1113 + SATLiteral(340) + SATLiteral(355)))
355 14916 0
340 14916 0
340 355 14915 0
c ((aux1113 - aux1114 + SATLiteral(310))<=0)
14915 -14918 0
14916 -14919 0
-310 -14918 0
-310 14915 -14919 0
-310 14916 -14921 0
c (0<=(aux1113 - aux1114 + SATLiteral(310)))
-14916 14921 0
-14915 14919 0
310 14921 0
310 -14916 14919 0
310 -14915 14918 0
c ((aux1110 + aux1112 - aux1115)<=0)
14912 -14923 0
14913 -14924 0
14906 -14923 0
14906 14912 -14924 0
14906 14913 -14926 0
14907 -14924 0
14907 14912 -14926 0
14907 14913 -14928 0
c (0<=(aux1110 + aux1112 - aux1115))
-14913 14928 0
-14912 14926 0
-14907 14928 0
-14907 -14913 14926 0
-14907 -14912 14924 0
-14906 14926 0
-14906 -14913 14924 0
-14906 -14912 14923 0
c ((SATLiteral(407) + SATLiteral(527) - aux1116)<=0)
-527 -14930 0
-407 -14930 0
-407 -527 -14931 0
c (0<=(SATLiteral(407) + SATLiteral(527) - aux1116))
527 14931 0
407 14931 0
407 527 14930 0
c ((SATLiteral(422) + SATLiteral(512) - aux1117)<=0)
-512 -14933 0
-422 -14933 0
-422 -512 -14934 0
c (0<=(SATLiteral(422) + SATLiteral(512) - aux1117))
512 14934 0
422 14934 0
422 512 14933 0
c ((SATLiteral(452) + SATLiteral(497) - aux1118)<=0)
-497 -14936 0
-452 -14936 0
-452 -497 -14937 0
c (0<=(SATLiteral(452) + SATLiteral(497) - aux1118))
497 14937 0
452 14937 0
452 497 14936 0
c ((SATLiteral(467) + SATLiteral(482) - aux1119)<=0)
-482 -14939 0
-467 -14939 0
-467 -482 -14940 0
c (0<=(SATLiteral(467) + SATLiteral(482) - aux1119))
482 14940 0
467 14940 0
467 482 14939 0
c ((SATLiteral(437) + aux1119 - aux1120)<=0)
14939 -14942 0
14940 -14943 0
-437 -14942 0
-437 14939 -14943 0
-437 14940 -14945 0
c (0<=(SATLiteral(437) + aux1119 - aux1120))
-14940 14945 0
-14939 14943 0
437 14945 0
437 -14940 14943 0
437 -14939 14942 0
c ((aux1116 + aux1118 - aux1121)<=0)
14936 -14947 0
14937 -14948 0
14930 -14947 0
14930 14936 -14948 0
14930 14937 -14950 0
14931 -14948 0
14931 14936 -14950 0
14931 14937 -14952 0
c (0<=(aux1116 + aux1118 - aux1121))
-14937 14952 0
-14936 14950 0
-14931 14952 0
-14931 -14937 14950 0
-14931 -14936 14948 0
-14930 14950 0
-14930 -14937 14948 0
-14930 -14936 14947 0
c ((SATLiteral(408) + SATLiteral(528) - aux1122)<=0)
-528 -14954 0
-408 -14954 0
-408 -528 -14955 0
c (0<=(SATLiteral(408) + SATLiteral(528) - aux1122))
528 14955 0
408 14955 0
408 528 14954 0
c ((SATLiteral(423) + SATLiteral(513) - aux1123)<=0)
-513 -14957 0
-423 -14957 0
-423 -513 -14958 0
c (0<=(SATLiteral(423) + SATLiteral(513) - aux1123))
513 14958 0
423 14958 0
423 513 14957 0
c ((SATLiteral(453) + SATLiteral(498) - aux1124)<=0)
-498 -14960 0
-453 -14960 0
-453 -498 -14961 0
c (0<=(SATLiteral(453) + SATLiteral(498) - aux1124))
498 14961 0
453 14961 0
453 498 14960 0
c ((SATLiteral(468) + SATLiteral(483) - aux1125)<=0)
-483 -14963 0
-468 -14963 0
-468 -483 -14964 0
c (0<=(SATLiteral(468) + SATLiteral(483) - aux1125))
483 14964 0
468 14964 0
468 483 14963 0
c ((SATLiteral(438) + aux1125 - aux1126)<=0)
14963 -14966 0
14964 -14967 0
-438 -14966 0
-438 14963 -14967 0
-438 14964 -14969 0
c (0<=(SATLiteral(438) + aux1125 - aux1126))
-14964 14969 0
-14963 14967 0
438 14969 0
438 -14964 14967 0
438 -14963 14966 0
c ((aux1122 + aux1124 - aux1127)<=0)
14960 -14971 0
14961 -14972 0
14954 -14971 0
14954 14960 -14972 0
14954 14961 -14974 0
14955 -14972 0
14955 14960 -14974 0
14955 14961 -14976 0
c (0<=(aux1122 + aux1124 - aux1127))
-14961 14976 0
-14960 14974 0
-14955 14976 0
-14955 -14961 14974 0
-14955 -14960 14972 0
-14954 14974 0
-14954 -14961 14972 0
-14954 -14960 14971 0
c ((SATLiteral(409) + SATLiteral(529) - aux1128)<=0)
-529 -14978 0
-409 -14978 0
-409 -529 -14979 0
c (0<=(SATLiteral(409) + SATLiteral(529) - aux1128))
529 14979 0
409 14979 0
409 529 14978 0
c ((SATLiteral(424) + SATLiteral(514) - aux1129)<=0)
-514 -14981 0
-424 -14981 0
-424 -514 -14982 0
c (0<=(SATLiteral(424) + SATLiteral(514) - aux1129))
514 14982 0
424 14982 0
424 514 14981 0
c ((SATLiteral(454) + SATLiteral(499) - aux1130)<=0)
-499 -14984 0
-454 -14984 0
-454 -499 -14985 0
c (0<=(SATLiteral(454) + SATLiteral(499) - aux1130))
499 14985 0
454 14985 0
454 499 14984 0
c ((SATLiteral(469) + SATLiteral(484) - aux1131)<=0)
-484 -14987 0
-469 -14987 0
-469 -484 -14988 0
c (0<=(SATLiteral(469) + SATLiteral(484) - aux1131))
484 14988 0
469 14988 0
469 484 14987 0
c ((SATLiteral(439) + aux1131 - aux1132)<=0)
14987 -14990 0
14988 -14991 0
-439 -14990 0
-439 14987 -14991 0
-439 14988 -14993 0
c (0<=(SATLiteral(439) + aux1131 - aux1132))
-14988 14993 0
-14987 14991 0
439 14993 0
439 -14988 14991 0
439 -14987 14990 0
c ((aux1128 + aux1130 - aux1133)<=0)
14984 -14995 0
14985 -14996 0
14978 -14995 0
14978 14984 -14996 0
14978 14985 -14998 0
14979 -14996 0
14979 14984 -14998 0
14979 14985 -15000 0
c (0<=(aux1128 + aux1130 - aux1133))
-14985 15000 0
-14984 14998 0
-14979 15000 0
-14979 -14985 14998 0
-14979 -14984 14996 0
-14978 14998 0
-14978 -14985 14996 0
-14978 -14984 14995 0
c ((SATLiteral(410) + SATLiteral(530) - aux1134)<=0)
-530 -15002 0
-410 -15002 0
-410 -530 -15003 0
c (0<=(SATLiteral(410) + SATLiteral(530) - aux1134))
530 15003 0
410 15003 0
410 530 15002 0
c ((SATLiteral(425) + SATLiteral(515) - aux1135)<=0)
-515 -15005 0
-425 -15005 0
-425 -515 -15006 0
c (0<=(SATLiteral(425) + SATLiteral(515) - aux1135))
515 15006 0
425 15006 0
425 515 15005 0
c ((SATLiteral(455) + SATLiteral(500) - aux1136)<=0)
-500 -15008 0
-455 -15008 0
-455 -500 -15009 0
c (0<=(SATLiteral(455) + SATLiteral(500) - aux1136))
500 15009 0
455 15009 0
455 500 15008 0
c ((SATLiteral(470) + SATLiteral(485) - aux1137)<=0)
-485 -15011 0
-470 -15011 0
-470 -485 -15012 0
c (0<=(SATLiteral(470) + SATLiteral(485) - aux1137))
485 15012 0
470 15012 0
470 485 15011 0
c ((SATLiteral(440) + aux1137 - aux1138)<=0)
15011 -15014 0
15012 -15015 0
-440 -15014 0
-440 15011 -15015 0
-440 15012 -15017 0
c (0<=(SATLiteral(440) + aux1137 - aux1138))
-15012 15017 0
-15011 15015 0
440 15017 0
440 -15012 15015 0
440 -15011 15014 0
c ((aux1134 + aux1136 - aux1139)<=0)
15008 -15019 0
15009 -15020 0
15002 -15019 0
15002 15008 -15020 0
15002 15009 -15022 0
15003 -15020 0
15003 15008 -15022 0
15003 15009 -15024 0
c (0<=(aux1134 + aux1136 - aux1139))
-15009 15024 0
-15008 15022 0
-15003 15024 0
-15003 -15009 15022 0
-15003 -15008 15020 0
-15002 15022 0
-15002 -15009 15020 0
-15002 -15008 15019 0
c ((SATLiteral(411) + SATLiteral(531) - aux1140)<=0)
-531 -15026 0
-411 -15026 0
-411 -531 -15027 0
c (0<=(SATLiteral(411) + SATLiteral(531) - aux1140))
531 15027 0
411 15027 0
411 531 15026 0
c ((SATLiteral(426) + SATLiteral(516) - aux1141)<=0)
-516 -15029 0
-426 -15029 0
-426 -516 -15030 0
c (0<=(SATLiteral(426) + SATLiteral(516) - aux1141))
516 15030 0
426 15030 0
426 516 15029 0
c ((SATLiteral(456) + SATLiteral(501) - aux1142)<=0)
-501 -15032 0
-456 -15032 0
-456 -501 -15033 0
c (0<=(SATLiteral(456) + SATLiteral(501) - aux1142))
501 15033 0
456 15033 0
456 501 15032 0
c ((SATLiteral(471) + SATLiteral(486) - aux1143)<=0)
-486 -15035 0
-471 -15035 0
-471 -486 -15036 0
c (0<=(SATLiteral(471) + SATLiteral(486) - aux1143))
486 15036 0
471 15036 0
471 486 15035 0
c ((SATLiteral(441) + aux1143 - aux1144)<=0)
15035 -15038 0
15036 -15039 0
-441 -15038 0
-441 15035 -15039 0
-441 15036 -15041 0
c (0<=(SATLiteral(441) + aux1143 - aux1144))
-15036 15041 0
-15035 15039 0
441 15041 0
441 -15036 15039 0
441 -15035 15038 0
c ((aux1140 + aux1142 - aux1145)<=0)
15032 -15043 0
15033 -15044 0
15026 -15043 0
15026 15032 -15044 0
15026 15033 -15046 0
15027 -15044 0
15027 15032 -15046 0
15027 15033 -15048 0
c (0<=(aux1140 + aux1142 - aux1145))
-15033 15048 0
-15032 15046 0
-15027 15048 0
-15027 -15033 15046 0
-15027 -15032 15044 0
-15026 15046 0
-15026 -15033 15044 0
-15026 -15032 15043 0
c ((SATLiteral(412) + SATLiteral(532) - aux1146)<=0)
-532 -15050 0
-412 -15050 0
-412 -532 -15051 0
c (0<=(SATLiteral(412) + SATLiteral(532) - aux1146))
532 15051 0
412 15051 0
412 532 15050 0
c ((SATLiteral(427) + SATLiteral(517) - aux1147)<=0)
-517 -15053 0
-427 -15053 0
-427 -517 -15054 0
c (0<=(SATLiteral(427) + SATLiteral(517) - aux1147))
517 15054 0
427 15054 0
427 517 15053 0
c ((SATLiteral(457) + SATLiteral(502) - aux1148)<=0)
-502 -15056 0
-457 -15056 0
-457 -502 -15057 0
c (0<=(SATLiteral(457) + SATLiteral(502) - aux1148))
502 15057 0
457 15057 0
457 502 15056 0
c ((SATLiteral(472) + SATLiteral(487) - aux1149)<=0)
-487 -15059 0
-472 -15059 0
-472 -487 -15060 0
c (0<=(SATLiteral(472) + SATLiteral(487) - aux1149))
487 15060 0
472 15060 0
472 487 15059 0
c ((SATLiteral(442) + aux1149 - aux1150)<=0)
15059 -15062 0
15060 -15063 0
-442 -15062 0
-442 15059 -15063 0
-442 15060 -15065 0
c (0<=(SATLiteral(442) + aux1149 - aux1150))
-15060 15065 0
-15059 15063 0
442 15065 0
442 -15060 15063 0
442 -15059 15062 0
c ((aux1146 + aux1148 - aux1151)<=0)
15056 -15067 0
15057 -15068 0
15050 -15067 0
15050 15056 -15068 0
15050 15057 -15070 0
15051 -15068 0
15051 15056 -15070 0
15051 15057 -15072 0
c (0<=(aux1146 + aux1148 - aux1151))
-15057 15072 0
-15056 15070 0
-15051 15072 0
-15051 -15057 15070 0
-15051 -15056 15068 0
-15050 15070 0
-15050 -15057 15068 0
-15050 -15056 15067 0
c ((SATLiteral(413) + SATLiteral(533) - aux1152)<=0)
-533 -15074 0
-413 -15074 0
-413 -533 -15075 0
c (0<=(SATLiteral(413) + SATLiteral(533) - aux1152))
533 15075 0
413 15075 0
413 533 15074 0
c ((SATLiteral(428) + SATLiteral(518) - aux1153)<=0)
-518 -15077 0
-428 -15077 0
-428 -518 -15078 0
c (0<=(SATLiteral(428) + SATLiteral(518) - aux1153))
518 15078 0
428 15078 0
428 518 15077 0
c ((SATLiteral(458) + SATLiteral(503) - aux1154)<=0)
-503 -15080 0
-458 -15080 0
-458 -503 -15081 0
c (0<=(SATLiteral(458) + SATLiteral(503) - aux1154))
503 15081 0
458 15081 0
458 503 15080 0
c ((SATLiteral(473) + SATLiteral(488) - aux1155)<=0)
-488 -15083 0
-473 -15083 0
-473 -488 -15084 0
c (0<=(SATLiteral(473) + SATLiteral(488) - aux1155))
488 15084 0
473 15084 0
473 488 15083 0
c ((SATLiteral(443) + aux1155 - aux1156)<=0)
15083 -15086 0
15084 -15087 0
-443 -15086 0
-443 15083 -15087 0
-443 15084 -15089 0
c (0<=(SATLiteral(443) + aux1155 - aux1156))
-15084 15089 0
-15083 15087 0
443 15089 0
443 -15084 15087 0
443 -15083 15086 0
c ((aux1152 + aux1154 - aux1157)<=0)
15080 -15091 0
15081 -15092 0
15074 -15091 0
15074 15080 -15092 0
15074 15081 -15094 0
15075 -15092 0
15075 15080 -15094 0
15075 15081 -15096 0
c (0<=(aux1152 + aux1154 - aux1157))
-15081 15096 0
-15080 15094 0
-15075 15096 0
-15075 -15081 15094 0
-15075 -15080 15092 0
-15074 15094 0
-15074 -15081 15092 0
-15074 -15080 15091 0
c ((SATLiteral(414) + SATLiteral(534) - aux1158)<=0)
-534 -15098 0
-414 -15098 0
-414 -534 -15099 0
c (0<=(SATLiteral(414) + SATLiteral(534) - aux1158))
534 15099 0
414 15099 0
414 534 15098 0
c ((SATLiteral(429) + SATLiteral(519) - aux1159)<=0)
-519 -15101 0
-429 -15101 0
-429 -519 -15102 0
c (0<=(SATLiteral(429) + SATLiteral(519) - aux1159))
519 15102 0
429 15102 0
429 519 15101 0
c ((SATLiteral(459) + SATLiteral(504) - aux1160)<=0)
-504 -15104 0
-459 -15104 0
-459 -504 -15105 0
c (0<=(SATLiteral(459) + SATLiteral(504) - aux1160))
504 15105 0
459 15105 0
459 504 15104 0
c ((SATLiteral(474) + SATLiteral(489) - aux1161)<=0)
-489 -15107 0
-474 -15107 0
-474 -489 -15108 0
c (0<=(SATLiteral(474) + SATLiteral(489) - aux1161))
489 15108 0
474 15108 0
474 489 15107 0
c ((SATLiteral(444) + aux1161 - aux1162)<=0)
15107 -15110 0
15108 -15111 0
-444 -15110 0
-444 15107 -15111 0
-444 15108 -15113 0
c (0<=(SATLiteral(444) + aux1161 - aux1162))
-15108 15113 0
-15107 15111 0
444 15113 0
444 -15108 15111 0
444 -15107 15110 0
c ((aux1158 + aux1160 - aux1163)<=0)
15104 -15115 0
15105 -15116 0
15098 -15115 0
15098 15104 -15116 0
15098 15105 -15118 0
15099 -15116 0
15099 15104 -15118 0
15099 15105 -15120 0
c (0<=(aux1158 + aux1160 - aux1163))
-15105 15120 0
-15104 15118 0
-15099 15120 0
-15099 -15105 15118 0
-15099 -15104 15116 0
-15098 15118 0
-15098 -15105 15116 0
-15098 -15104 15115 0
c ((SATLiteral(415) + SATLiteral(535) - aux1164)<=0)
-535 -15122 0
-415 -15122 0
-415 -535 -15123 0
c (0<=(SATLiteral(415) + SATLiteral(535) - aux1164))
535 15123 0
415 15123 0
415 535 15122 0
c ((SATLiteral(430) + SATLiteral(520) - aux1165)<=0)
-520 -15125 0
-430 -15125 0
-430 -520 -15126 0
c (0<=(SATLiteral(430) + SATLiteral(520) - aux1165))
520 15126 0
430 15126 0
430 520 15125 0
c ((SATLiteral(460) + SATLiteral(505) - aux1166)<=0)
-505 -15128 0
-460 -15128 0
-460 -505 -15129 0
c (0<=(SATLiteral(460) + SATLiteral(505) - aux1166))
505 15129 0
460 15129 0
460 505 15128 0
c ((SATLiteral(475) + SATLiteral(490) - aux1167)<=0)
-490 -15131 0
-475 -15131 0
-475 -490 -15132 0
c (0<=(SATLiteral(475) + SATLiteral(490) - aux1167))
490 15132 0
475 15132 0
475 490 15131 0
c ((SATLiteral(445) + aux1167 - aux1168)<=0)
15131 -15134 0
15132 -15135 0
-445 -15134 0
-445 15131 -15135 0
-445 15132 -15137 0
c (0<=(SATLiteral(445) + aux1167 - aux1168))
-15132 15137 0
-15131 15135 0
445 15137 0
445 -15132 15135 0
445 -15131 15134 0
c ((aux1164 + aux1166 - aux1169)<=0)
15128 -15139 0
15129 -15140 0
15122 -15139 0
15122 15128 -15140 0
15122 15129 -15142 0
15123 -15140 0
15123 15128 -15142 0
15123 15129 -15144 0
c (0<=(aux1164 + aux1166 - aux1169))
-15129 15144 0
-15128 15142 0
-15123 15144 0
-15123 -15129 15142 0
-15123 -15128 15140 0
-15122 15142 0
-15122 -15129 15140 0
-15122 -15128 15139 0
c (( - aux1170 + SATLiteral(542) + SATLiteral(662))<=0)
-662 -15146 0
-542 -15146 0
-542 -662 -15147 0
c (0<=( - aux1170 + SATLiteral(542) + SATLiteral(662)))
662 15147 0
542 15147 0
542 662 15146 0
c (( - aux1171 + SATLiteral(557) + SATLiteral(647))<=0)
-647 -15149 0
-557 -15149 0
-557 -647 -15150 0
c (0<=( - aux1171 + SATLiteral(557) + SATLiteral(647)))
647 15150 0
557 15150 0
557 647 15149 0
c (( - aux1172 + SATLiteral(587) + SATLiteral(632))<=0)
-632 -15152 0
-587 -15152 0
-587 -632 -15153 0
c (0<=( - aux1172 + SATLiteral(587) + SATLiteral(632)))
632 15153 0
587 15153 0
587 632 15152 0
c (( - aux1173 + SATLiteral(602) + SATLiteral(617))<=0)
-617 -15155 0
-602 -15155 0
-602 -617 -15156 0
c (0<=( - aux1173 + SATLiteral(602) + SATLiteral(617)))
617 15156 0
602 15156 0
602 617 15155 0
c ((aux1173 - aux1174 + SATLiteral(572))<=0)
15155 -15158 0
15156 -15159 0
-572 -15158 0
-572 15155 -15159 0
-572 15156 -15161 0
c (0<=(aux1173 - aux1174 + SATLiteral(572)))
-15156 15161 0
-15155 15159 0
572 15161 0
572 -15156 15159 0
572 -15155 15158 0
c ((aux1170 + aux1172 - aux1175)<=0)
15152 -15163 0
15153 -15164 0
15146 -15163 0
15146 15152 -15164 0
15146 15153 -15166 0
15147 -15164 0
15147 15152 -15166 0
15147 15153 -15168 0
c (0<=(aux1170 + aux1172 - aux1175))
-15153 15168 0
-15152 15166 0
-15147 15168 0
-15147 -15153 15166 0
-15147 -15152 15164 0
-15146 15166 0
-15146 -15153 15164 0
-15146 -15152 15163 0
c (( - aux1176 + SATLiteral(543) + SATLiteral(663))<=0)
-663 -15170 0
-543 -15170 0
-543 -663 -15171 0
c (0<=( - aux1176 + SATLiteral(543) + SATLiteral(663)))
663 15171 0
543 15171 0
543 663 15170 0
c (( - aux1177 + SATLiteral(558) + SATLiteral(648))<=0)
-648 -15173 0
-558 -15173 0
-558 -648 -15174 0
c (0<=( - aux1177 + SATLiteral(558) + SATLiteral(648)))
648 15174 0
558 15174 0
558 648 15173 0
c (( - aux1178 + SATLiteral(588) + SATLiteral(633))<=0)
-633 -15176 0
-588 -15176 0
-588 -633 -15177 0
c (0<=( - aux1178 + SATLiteral(588) + SATLiteral(633)))
633 15177 0
588 15177 0
588 633 15176 0
c (( - aux1179 + SATLiteral(603) + SATLiteral(618))<=0)
-618 -15179 0
-603 -15179 0
-603 -618 -15180 0
c (0<=( - aux1179 + SATLiteral(603) + SATLiteral(618)))
618 15180 0
603 15180 0
603 618 15179 0
c ((aux1179 - aux1180 + SATLiteral(573))<=0)
15179 -15182 0
15180 -15183 0
-573 -15182 0
-573 15179 -15183 0
-573 15180 -15185 0
c (0<=(aux1179 - aux1180 + SATLiteral(573)))
-15180 15185 0
-15179 15183 0
573 15185 0
573 -15180 15183 0
573 -15179 15182 0
c ((aux1176 + aux1178 - aux1181)<=0)
15176 -15187 0
15177 -15188 0
15170 -15187 0
15170 15176 -15188 0
15170 15177 -15190 0
15171 -15188 0
15171 15176 -15190 0
15171 15177 -15192 0
c (0<=(aux1176 + aux1178 - aux1181))
-15177 15192 0
-15176 15190 0
-15171 15192 0
-15171 -15177 15190 0
-15171 -15176 15188 0
-15170 15190 0
-15170 -15177 15188 0
-15170 -15176 15187 0
c (( - aux1182 + SATLiteral(544) + SATLiteral(664))<=0)
-664 -15194 0
-544 -15194 0
-544 -664 -15195 0
c (0<=( - aux1182 + SATLiteral(544) + SATLiteral(664)))
664 15195 0
544 15195 0
544 664 15194 0
c (( - aux1183 + SATLiteral(559) + SATLiteral(649))<=0)
-649 -15197 0
-559 -15197 0
-559 -649 -15198 0
c (0<=( - aux1183 + SATLiteral(559) + SATLiteral(649)))
649 15198 0
559 15198 0
559 649 15197 0
c (( - aux1184 + SATLiteral(589) + SATLiteral(634))<=0)
-634 -15200 0
-589 -15200 0
-589 -634 -15201 0
c (0<=( - aux1184 + SATLiteral(589) + SATLiteral(634)))
634 15201 0
589 15201 0
589 634 15200 0
c (( - aux1185 + SATLiteral(604) + SATLiteral(619))<=0)
-619 -15203 0
-604 -15203 0
-604 -619 -15204 0
c (0<=( - aux1185 + SATLiteral(604) + SATLiteral(619)))
619 15204 0
604 15204 0
604 619 15203 0
c ((aux1185 - aux1186 + SATLiteral(574))<=0)
15203 -15206 0
15204 -15207 0
-574 -15206 0
-574 15203 -15207 0
-574 15204 -15209 0
c (0<=(aux1185 - aux1186 + SATLiteral(574)))
-15204 15209 0
-15203 15207 0
574 15209 0
574 -15204 15207 0
574 -15203 15206 0
c ((aux1182 + aux1184 - aux1187)<=0)
15200 -15211 0
15201 -15212 0
15194 -15211 0
15194 15200 -15212 0
15194 15201 -15214 0
15195 -15212 0
15195 15200 -15214 0
15195 15201 -15216 0
c (0<=(aux1182 + aux1184 - aux1187))
-15201 15216 0
-15200 15214 0
-15195 15216 0
-15195 -15201 15214 0
-15195 -15200 15212 0
-15194 15214 0
-15194 -15201 15212 0
-15194 -15200 15211 0
c (( - aux1188 + SATLiteral(545) + SATLiteral(665))<=0)
-665 -15218 0
-545 -15218 0
-545 -665 -15219 0
c (0<=( - aux1188 + SATLiteral(545) + SATLiteral(665)))
665 15219 0
545 15219 0
545 665 15218 0
c (( - aux1189 + SATLiteral(560) + SATLiteral(650))<=0)
-650 -15221 0
-560 -15221 0
-560 -650 -15222 0
c (0<=( - aux1189 + SATLiteral(560) + SATLiteral(650)))
650 15222 0
560 15222 0
560 650 15221 0
c (( - aux1190 + SATLiteral(590) + SATLiteral(635))<=0)
-635 -15224 0
-590 -15224 0
-590 -635 -15225 0
c (0<=( - aux1190 + SATLiteral(590) + SATLiteral(635)))
635 15225 0
590 15225 0
590 635 15224 0
c (( - aux1191 + SATLiteral(605) + SATLiteral(620))<=0)
-620 -15227 0
-605 -15227 0
-605 -620 -15228 0
c (0<=( - aux1191 + SATLiteral(605) + SATLiteral(620)))
620 15228 0
605 15228 0
605 620 15227 0
c ((aux1191 - aux1192 + SATLiteral(575))<=0)
15227 -15230 0
15228 -15231 0
-575 -15230 0
-575 15227 -15231 0
-575 15228 -15233 0
c (0<=(aux1191 - aux1192 + SATLiteral(575)))
-15228 15233 0
-15227 15231 0
575 15233 0
575 -15228 15231 0
575 -15227 15230 0
c ((aux1188 + aux1190 - aux1193)<=0)
15224 -15235 0
15225 -15236 0
15218 -15235 0
15218 15224 -15236 0
15218 15225 -15238 0
15219 -15236 0
15219 15224 -15238 0
15219 15225 -15240 0
c (0<=(aux1188 + aux1190 - aux1193))
-15225 15240 0
-15224 15238 0
-15219 15240 0
-15219 -15225 15238 0
-15219 -15224 15236 0
-15218 15238 0
-15218 -15225 15236 0
-15218 -15224 15235 0
c (( - aux1194 + SATLiteral(546) + SATLiteral(666))<=0)
-666 -15242 0
-546 -15242 0
-546 -666 -15243 0
c (0<=( - aux1194 + SATLiteral(546) + SATLiteral(666)))
666 15243 0
546 15243 0
546 666 15242 0
c (( - aux1195 + SATLiteral(561) + SATLiteral(651))<=0)
-651 -15245 0
-561 -15245 0
-561 -651 -15246 0
c (0<=( - aux1195 + SATLiteral(561) + SATLiteral(651)))
651 15246 0
561 15246 0
561 651 15245 0
c (( - aux1196 + SATLiteral(591) + SATLiteral(636))<=0)
-636 -15248 0
-591 -15248 0
-591 -636 -15249 0
c (0<=( - aux1196 + SATLiteral(591) + SATLiteral(636)))
636 15249 0
591 15249 0
591 636 15248 0
c (( - aux1197 + SATLiteral(606) + SATLiteral(621))<=0)
-621 -15251 0
-606 -15251 0
-606 -621 -15252 0
c (0<=( - aux1197 + SATLiteral(606) + SATLiteral(621)))
621 15252 0
606 15252 0
606 621 15251 0
c ((aux1197 - aux1198 + SATLiteral(576))<=0)
15251 -15254 0
15252 -15255 0
-576 -15254 0
-576 15251 -15255 0
-576 15252 -15257 0
c (0<=(aux1197 - aux1198 + SATLiteral(576)))
-15252 15257 0
-15251 15255 0
576 15257 0
576 -15252 15255 0
576 -15251 15254 0
c ((aux1194 + aux1196 - aux1199)<=0)
15248 -15259 0
15249 -15260 0
15242 -15259 0
15242 15248 -15260 0
15242 15249 -15262 0
15243 -15260 0
15243 15248 -15262 0
15243 15249 -15264 0
c (0<=(aux1194 + aux1196 - aux1199))
-15249 15264 0
-15248 15262 0
-15243 15264 0
-15243 -15249 15262 0
-15243 -15248 15260 0
-15242 15262 0
-15242 -15249 15260 0
-15242 -15248 15259 0
c (( - aux1200 + SATLiteral(547) + SATLiteral(667))<=0)
-667 -15266 0
-547 -15266 0
-547 -667 -15267 0
c (0<=( - aux1200 + SATLiteral(547) + SATLiteral(667)))
667 15267 0
547 15267 0
547 667 15266 0
c (( - aux1201 + SATLiteral(562) + SATLiteral(652))<=0)
-652 -15269 0
-562 -15269 0
-562 -652 -15270 0
c (0<=( - aux1201 + SATLiteral(562) + SATLiteral(652)))
652 15270 0
562 15270 0
562 652 15269 0
c (( - aux1202 + SATLiteral(592) + SATLiteral(637))<=0)
-637 -15272 0
-592 -15272 0
-592 -637 -15273 0
c (0<=( - aux1202 + SATLiteral(592) + SATLiteral(637)))
637 15273 0
592 15273 0
592 637 15272 0
c (( - aux1203 + SATLiteral(607) + SATLiteral(622))<=0)
-622 -15275 0
-607 -15275 0
-607 -622 -15276 0
c (0<=( - aux1203 + SATLiteral(607) + SATLiteral(622)))
622 15276 0
607 15276 0
607 622 15275 0
c ((aux1203 - aux1204 + SATLiteral(577))<=0)
15275 -15278 0
15276 -15279 0
-577 -15278 0
-577 15275 -15279 0
-577 15276 -15281 0
c (0<=(aux1203 - aux1204 + SATLiteral(577)))
-15276 15281 0
-15275 15279 0
577 15281 0
577 -15276 15279 0
577 -15275 15278 0
c ((aux1200 + aux1202 - aux1205)<=0)
15272 -15283 0
15273 -15284 0
15266 -15283 0
15266 15272 -15284 0
15266 15273 -15286 0
15267 -15284 0
15267 15272 -15286 0
15267 15273 -15288 0
c (0<=(aux1200 + aux1202 - aux1205))
-15273 15288 0
-15272 15286 0
-15267 15288 0
-15267 -15273 15286 0
-15267 -15272 15284 0
-15266 15286 0
-15266 -15273 15284 0
-15266 -15272 15283 0
c (( - aux1206 + SATLiteral(548) + SATLiteral(668))<=0)
-668 -15290 0
-548 -15290 0
-548 -668 -15291 0
c (0<=( - aux1206 + SATLiteral(548) + SATLiteral(668)))
668 15291 0
548 15291 0
548 668 15290 0
c (( - aux1207 + SATLiteral(563) + SATLiteral(653))<=0)
-653 -15293 0
-563 -15293 0
-563 -653 -15294 0
c (0<=( - aux1207 + SATLiteral(563) + SATLiteral(653)))
653 15294 0
563 15294 0
563 653 15293 0
c (( - aux1208 + SATLiteral(593) + SATLiteral(638))<=0)
-638 -15296 0
-593 -15296 0
-593 -638 -15297 0
c (0<=( - aux1208 + SATLiteral(593) + SATLiteral(638)))
638 15297 0
593 15297 0
593 638 15296 0
c (( - aux1209 + SATLiteral(608) + SATLiteral(623))<=0)
-623 -15299 0
-608 -15299 0
-608 -623 -15300 0
c (0<=( - aux1209 + SATLiteral(608) + SATLiteral(623)))
623 15300 0
608 15300 0
608 623 15299 0
c ((aux1209 - aux1210 + SATLiteral(578))<=0)
15299 -15302 0
15300 -15303 0
-578 -15302 0
-578 15299 -15303 0
-578 15300 -15305 0
c (0<=(aux1209 - aux1210 + SATLiteral(578)))
-15300 15305 0
-15299 15303 0
578 15305 0
578 -15300 15303 0
578 -15299 15302 0
c ((aux1206 + aux1208 - aux1211)<=0)
15296 -15307 0
15297 -15308 0
15290 -15307 0
15290 15296 -15308 0
15290 15297 -15310 0
15291 -15308 0
15291 15296 -15310 0
15291 15297 -15312 0
c (0<=(aux1206 + aux1208 - aux1211))
-15297 15312 0
-15296 15310 0
-15291 15312 0
-15291 -15297 15310 0
-15291 -15296 15308 0
-15290 15310 0
-15290 -15297 15308 0
-15290 -15296 15307 0
c (( - aux1212 + SATLiteral(549) + SATLiteral(669))<=0)
-669 -15314 0
-549 -15314 0
-549 -669 -15315 0
c (0<=( - aux1212 + SATLiteral(549) + SATLiteral(669)))
669 15315 0
549 15315 0
549 669 15314 0
c (( - aux1213 + SATLiteral(564) + SATLiteral(654))<=0)
-654 -15317 0
-564 -15317 0
-564 -654 -15318 0
c (0<=( - aux1213 + SATLiteral(564) + SATLiteral(654)))
654 15318 0
564 15318 0
564 654 15317 0
c (( - aux1214 + SATLiteral(594) + SATLiteral(639))<=0)
-639 -15320 0
-594 -15320 0
-594 -639 -15321 0
c (0<=( - aux1214 + SATLiteral(594) + SATLiteral(639)))
639 15321 0
594 15321 0
594 639 15320 0
c (( - aux1215 + SATLiteral(609) + SATLiteral(624))<=0)
-624 -15323 0
-609 -15323 0
-609 -624 -15324 0
c (0<=( - aux1215 + SATLiteral(609) + SATLiteral(624)))
624 15324 0
609 15324 0
609 624 15323 0
c ((aux1215 - aux1216 + SATLiteral(579))<=0)
15323 -15326 0
15324 -15327 0
-579 -15326 0
-579 15323 -15327 0
-579 15324 -15329 0
c (0<=(aux1215 - aux1216 + SATLiteral(579)))
-15324 15329 0
-15323 15327 0
579 15329 0
579 -15324 15327 0
579 -15323 15326 0
c ((aux1212 + aux1214 - aux1217)<=0)
15320 -15331 0
15321 -15332 0
15314 -15331 0
15314 15320 -15332 0
15314 15321 -15334 0
15315 -15332 0
15315 15320 -15334 0
15315 15321 -15336 0
c (0<=(aux1212 + aux1214 - aux1217))
-15321 15336 0
-15320 15334 0
-15315 15336 0
-15315 -15321 15334 0
-15315 -15320 15332 0
-15314 15334 0
-15314 -15321 15332 0
-15314 -15320 15331 0
c (( - aux1218 + SATLiteral(550) + SATLiteral(670))<=0)
-670 -15338 0
-550 -15338 0
-550 -670 -15339 0
c (0<=( - aux1218 + SATLiteral(550) + SATLiteral(670)))
670 15339 0
550 15339 0
550 670 15338 0
c (( - aux1219 + SATLiteral(565) + SATLiteral(655))<=0)
-655 -15341 0
-565 -15341 0
-565 -655 -15342 0
c (0<=( - aux1219 + SATLiteral(565) + SATLiteral(655)))
655 15342 0
565 15342 0
565 655 15341 0
c (( - aux1220 + SATLiteral(595) + SATLiteral(640))<=0)
-640 -15344 0
-595 -15344 0
-595 -640 -15345 0
c (0<=( - aux1220 + SATLiteral(595) + SATLiteral(640)))
640 15345 0
595 15345 0
595 640 15344 0
c (( - aux1221 + SATLiteral(610) + SATLiteral(625))<=0)
-625 -15347 0
-610 -15347 0
-610 -625 -15348 0
c (0<=( - aux1221 + SATLiteral(610) + SATLiteral(625)))
625 15348 0
610 15348 0
610 625 15347 0
c ((aux1221 - aux1222 + SATLiteral(580))<=0)
15347 -15350 0
15348 -15351 0
-580 -15350 0
-580 15347 -15351 0
-580 15348 -15353 0
c (0<=(aux1221 - aux1222 + SATLiteral(580)))
-15348 15353 0
-15347 15351 0
580 15353 0
580 -15348 15351 0
580 -15347 15350 0
c ((aux1218 + aux1220 - aux1223)<=0)
15344 -15355 0
15345 -15356 0
15338 -15355 0
15338 15344 -15356 0
15338 15345 -15358 0
15339 -15356 0
15339 15344 -15358 0
15339 15345 -15360 0
c (0<=(aux1218 + aux1220 - aux1223))
-15345 15360 0
-15344 15358 0
-15339 15360 0
-15339 -15345 15358 0
-15339 -15344 15356 0
-15338 15358 0
-15338 -15345 15356 0
-15338 -15344 15355 0
c (( - aux1224 + SATLiteral(677) + SATLiteral(797))<=0)
-797 -15362 0
-677 -15362 0
-677 -797 -15363 0
c (0<=( - aux1224 + SATLiteral(677) + SATLiteral(797)))
797 15363 0
677 15363 0
677 797 15362 0
c (( - aux1225 + SATLiteral(692) + SATLiteral(782))<=0)
-782 -15365 0
-692 -15365 0
-692 -782 -15366 0
c (0<=( - aux1225 + SATLiteral(692) + SATLiteral(782)))
782 15366 0
692 15366 0
692 782 15365 0
c (( - aux1226 + SATLiteral(722) + SATLiteral(767))<=0)
-767 -15368 0
-722 -15368 0
-722 -767 -15369 0
c (0<=( - aux1226 + SATLiteral(722) + SATLiteral(767)))
767 15369 0
722 15369 0
722 767 15368 0
c (( - aux1227 + SATLiteral(737) + SATLiteral(752))<=0)
-752 -15371 0
-737 -15371 0
-737 -752 -15372 0
c (0<=( - aux1227 + SATLiteral(737) + SATLiteral(752)))
752 15372 0
737 15372 0
737 752 15371 0
c ((aux1227 - aux1228 + SATLiteral(707))<=0)
15371 -15374 0
15372 -15375 0
-707 -15374 0
-707 15371 -15375 0
-707 15372 -15377 0
c (0<=(aux1227 - aux1228 + SATLiteral(707)))
-15372 15377 0
-15371 15375 0
707 15377 0
707 -15372 15375 0
707 -15371 15374 0
c ((aux1224 + aux1226 - aux1229)<=0)
15368 -15379 0
15369 -15380 0
15362 -15379 0
15362 15368 -15380 0
15362 15369 -15382 0
15363 -15380 0
15363 15368 -15382 0
15363 15369 -15384 0
c (0<=(aux1224 + aux1226 - aux1229))
-15369 15384 0
-15368 15382 0
-15363 15384 0
-15363 -15369 15382 0
-15363 -15368 15380 0
-15362 15382 0
-15362 -15369 15380 0
-15362 -15368 15379 0
c (( - aux1230 + SATLiteral(678) + SATLiteral(798))<=0)
-798 -15386 0
-678 -15386 0
-678 -798 -15387 0
c (0<=( - aux1230 + SATLiteral(678) + SATLiteral(798)))
798 15387 0
678 15387 0
678 798 15386 0
c (( - aux1231 + SATLiteral(693) + SATLiteral(783))<=0)
-783 -15389 0
-693 -15389 0
-693 -783 -15390 0
c (0<=( - aux1231 + SATLiteral(693) + SATLiteral(783)))
783 15390 0
693 15390 0
693 783 15389 0
c (( - aux1232 + SATLiteral(723) + SATLiteral(768))<=0)
-768 -15392 0
-723 -15392 0
-723 -768 -15393 0
c (0<=( - aux1232 + SATLiteral(723) + SATLiteral(768)))
768 15393 0
723 15393 0
723 768 15392 0
c (( - aux1233 + SATLiteral(738) + SATLiteral(753))<=0)
-753 -15395 0
-738 -15395 0
-738 -753 -15396 0
c (0<=( - aux1233 + SATLiteral(738) + SATLiteral(753)))
753 15396 0
738 15396 0
738 753 15395 0
c ((aux1233 - aux1234 + SATLiteral(708))<=0)
15395 -15398 0
15396 -15399 0
-708 -15398 0
-708 15395 -15399 0
-708 15396 -15401 0
c (0<=(aux1233 - aux1234 + SATLiteral(708)))
-15396 15401 0
-15395 15399 0
708 15401 0
708 -15396 15399 0
708 -15395 15398 0
c ((aux1230 + aux1232 - aux1235)<=0)
15392 -15403 0
15393 -15404 0
15386 -15403 0
15386 15392 -15404 0
15386 15393 -15406 0
15387 -15404 0
15387 15392 -15406 0
15387 15393 -15408 0
c (0<=(aux1230 + aux1232 - aux1235))
-15393 15408 0
-15392 15406 0
-15387 15408 0
-15387 -15393 15406 0
-15387 -15392 15404 0
-15386 15406 0
-15386 -15393 15404 0
-15386 -15392 15403 0
c (( - aux1236 + SATLiteral(679) + SATLiteral(799))<=0)
-799 -15410 0
-679 -15410 0
-679 -799 -15411 0
c (0<=( - aux1236 + SATLiteral(679) + SATLiteral(799)))
799 15411 0
679 15411 0
679 799 15410 0
c (( - aux1237 + SATLiteral(694) + SATLiteral(784))<=0)
-784 -15413 0
-694 -15413 0
-694 -784 -15414 0
c (0<=( - aux1237 + SATLiteral(694) + SATLiteral(784)))
784 15414 0
694 15414 0
694 784 15413 0
c (( - aux1238 + SATLiteral(724) + SATLiteral(769))<=0)
-769 -15416 0
-724 -15416 0
-724 -769 -15417 0
c (0<=( - aux1238 + SATLiteral(724) + SATLiteral(769)))
769 15417 0
724 15417 0
724 769 15416 0
c (( - aux1239 + SATLiteral(739) + SATLiteral(754))<=0)
-754 -15419 0
-739 -15419 0
-739 -754 -15420 0
c (0<=( - aux1239 + SATLiteral(739) + SATLiteral(754)))
754 15420 0
739 15420 0
739 754 15419 0
c ((aux1239 - aux1240 + SATLiteral(709))<=0)
15419 -15422 0
15420 -15423 0
-709 -15422 0
-709 15419 -15423 0
-709 15420 -15425 0
c (0<=(aux1239 - aux1240 + SATLiteral(709)))
-15420 15425 0
-15419 15423 0
709 15425 0
709 -15420 15423 0
709 -15419 15422 0
c ((aux1236 + aux1238 - aux1241)<=0)
15416 -15427 0
15417 -15428 0
15410 -15427 0
15410 15416 -15428 0
15410 15417 -15430 0
15411 -15428 0
15411 15416 -15430 0
15411 15417 -15432 0
c (0<=(aux1236 + aux1238 - aux1241))
-15417 15432 0
-15416 15430 0
-15411 15432 0
-15411 -15417 15430 0
-15411 -15416 15428 0
-15410 15430 0
-15410 -15417 15428 0
-15410 -15416 15427 0
c (( - aux1242 + SATLiteral(680) + SATLiteral(800))<=0)
-800 -15434 0
-680 -15434 0
-680 -800 -15435 0
c (0<=( - aux1242 + SATLiteral(680) + SATLiteral(800)))
800 15435 0
680 15435 0
680 800 15434 0
c (( - aux1243 + SATLiteral(695) + SATLiteral(785))<=0)
-785 -15437 0
-695 -15437 0
-695 -785 -15438 0
c (0<=( - aux1243 + SATLiteral(695) + SATLiteral(785)))
785 15438 0
695 15438 0
695 785 15437 0
c (( - aux1244 + SATLiteral(725) + SATLiteral(770))<=0)
-770 -15440 0
-725 -15440 0
-725 -770 -15441 0
c (0<=( - aux1244 + SATLiteral(725) + SATLiteral(770)))
770 15441 0
725 15441 0
725 770 15440 0
c (( - aux1245 + SATLiteral(740) + SATLiteral(755))<=0)
-755 -15443 0
-740 -15443 0
-740 -755 -15444 0
c (0<=( - aux1245 + SATLiteral(740) + SATLiteral(755)))
755 15444 0
740 15444 0
740 755 15443 0
c ((aux1245 - aux1246 + SATLiteral(710))<=0)
15443 -15446 0
15444 -15447 0
-710 -15446 0
-710 15443 -15447 0
-710 15444 -15449 0
c (0<=(aux1245 - aux1246 + SATLiteral(710)))
-15444 15449 0
-15443 15447 0
710 15449 0
710 -15444 15447 0
710 -15443 15446 0
c ((aux1242 + aux1244 - aux1247)<=0)
15440 -15451 0
15441 -15452 0
15434 -15451 0
15434 15440 -15452 0
15434 15441 -15454 0
15435 -15452 0
15435 15440 -15454 0
15435 15441 -15456 0
c (0<=(aux1242 + aux1244 - aux1247))
-15441 15456 0
-15440 15454 0
-15435 15456 0
-15435 -15441 15454 0
-15435 -15440 15452 0
-15434 15454 0
-15434 -15441 15452 0
-15434 -15440 15451 0
c (( - aux1248 + SATLiteral(681) + SATLiteral(801))<=0)
-801 -15458 0
-681 -15458 0
-681 -801 -15459 0
c (0<=( - aux1248 + SATLiteral(681) + SATLiteral(801)))
801 15459 0
681 15459 0
681 801 15458 0
c (( - aux1249 + SATLiteral(696) + SATLiteral(786))<=0)
-786 -15461 0
-696 -15461 0
-696 -786 -15462 0
c (0<=( - aux1249 + SATLiteral(696) + SATLiteral(786)))
786 15462 0
696 15462 0
696 786 15461 0
c (( - aux1250 + SATLiteral(726) + SATLiteral(771))<=0)
-771 -15464 0
-726 -15464 0
-726 -771 -15465 0
c (0<=( - aux1250 + SATLiteral(726) + SATLiteral(771)))
771 15465 0
726 15465 0
726 771 15464 0
c (( - aux1251 + SATLiteral(741) + SATLiteral(756))<=0)
-756 -15467 0
-741 -15467 0
-741 -756 -15468 0
c (0<=( - aux1251 + SATLiteral(741) + SATLiteral(756)))
756 15468 0
741 15468 0
741 756 15467 0
c ((aux1251 - aux1252 + SATLiteral(711))<=0)
15467 -15470 0
15468 -15471 0
-711 -15470 0
-711 15467 -15471 0
-711 15468 -15473 0
c (0<=(aux1251 - aux1252 + SATLiteral(711)))
-15468 15473 0
-15467 15471 0
711 15473 0
711 -15468 15471 0
711 -15467 15470 0
c ((aux1248 + aux1250 - aux1253)<=0)
15464 -15475 0
15465 -15476 0
15458 -15475 0
15458 15464 -15476 0
15458 15465 -15478 0
15459 -15476 0
15459 15464 -15478 0
15459 15465 -15480 0
c (0<=(aux1248 + aux1250 - aux1253))
-15465 15480 0
-15464 15478 0
-15459 15480 0
-15459 -15465 15478 0
-15459 -15464 15476 0
-15458 15478 0
-15458 -15465 15476 0
-15458 -15464 15475 0
c (( - aux1254 + SATLiteral(682) + SATLiteral(802))<=0)
-802 -15482 0
-682 -15482 0
-682 -802 -15483 0
c (0<=( - aux1254 + SATLiteral(682) + SATLiteral(802)))
802 15483 0
682 15483 0
682 802 15482 0
c (( - aux1255 + SATLiteral(697) + SATLiteral(787))<=0)
-787 -15485 0
-697 -15485 0
-697 -787 -15486 0
c (0<=( - aux1255 + SATLiteral(697) + SATLiteral(787)))
787 15486 0
697 15486 0
697 787 15485 0
c (( - aux1256 + SATLiteral(727) + SATLiteral(772))<=0)
-772 -15488 0
-727 -15488 0
-727 -772 -15489 0
c (0<=( - aux1256 + SATLiteral(727) + SATLiteral(772)))
772 15489 0
727 15489 0
727 772 15488 0
c (( - aux1257 + SATLiteral(742) + SATLiteral(757))<=0)
-757 -15491 0
-742 -15491 0
-742 -757 -15492 0
c (0<=( - aux1257 + SATLiteral(742) + SATLiteral(757)))
757 15492 0
742 15492 0
742 757 15491 0
c ((aux1257 - aux1258 + SATLiteral(712))<=0)
15491 -15494 0
15492 -15495 0
-712 -15494 0
-712 15491 -15495 0
-712 15492 -15497 0
c (0<=(aux1257 - aux1258 + SATLiteral(712)))
-15492 15497 0
-15491 15495 0
712 15497 0
712 -15492 15495 0
712 -15491 15494 0
c ((aux1254 + aux1256 - aux1259)<=0)
15488 -15499 0
15489 -15500 0
15482 -15499 0
15482 15488 -15500 0
15482 15489 -15502 0
15483 -15500 0
15483 15488 -15502 0
15483 15489 -15504 0
c (0<=(aux1254 + aux1256 - aux1259))
-15489 15504 0
-15488 15502 0
-15483 15504 0
-15483 -15489 15502 0
-15483 -15488 15500 0
-15482 15502 0
-15482 -15489 15500 0
-15482 -15488 15499 0
c (( - aux1260 + SATLiteral(683) + SATLiteral(803))<=0)
-803 -15506 0
-683 -15506 0
-683 -803 -15507 0
c (0<=( - aux1260 + SATLiteral(683) + SATLiteral(803)))
803 15507 0
683 15507 0
683 803 15506 0
c (( - aux1261 + SATLiteral(698) + SATLiteral(788))<=0)
-788 -15509 0
-698 -15509 0
-698 -788 -15510 0
c (0<=( - aux1261 + SATLiteral(698) + SATLiteral(788)))
788 15510 0
698 15510 0
698 788 15509 0
c (( - aux1262 + SATLiteral(728) + SATLiteral(773))<=0)
-773 -15512 0
-728 -15512 0
-728 -773 -15513 0
c (0<=( - aux1262 + SATLiteral(728) + SATLiteral(773)))
773 15513 0
728 15513 0
728 773 15512 0
c (( - aux1263 + SATLiteral(743) + SATLiteral(758))<=0)
-758 -15515 0
-743 -15515 0
-743 -758 -15516 0
c (0<=( - aux1263 + SATLiteral(743) + SATLiteral(758)))
758 15516 0
743 15516 0
743 758 15515 0
c ((aux1263 - aux1264 + SATLiteral(713))<=0)
15515 -15518 0
15516 -15519 0
-713 -15518 0
-713 15515 -15519 0
-713 15516 -15521 0
c (0<=(aux1263 - aux1264 + SATLiteral(713)))
-15516 15521 0
-15515 15519 0
713 15521 0
713 -15516 15519 0
713 -15515 15518 0
c ((aux1260 + aux1262 - aux1265)<=0)
15512 -15523 0
15513 -15524 0
15506 -15523 0
15506 15512 -15524 0
15506 15513 -15526 0
15507 -15524 0
15507 15512 -15526 0
15507 15513 -15528 0
c (0<=(aux1260 + aux1262 - aux1265))
-15513 15528 0
-15512 15526 0
-15507 15528 0
-15507 -15513 15526 0
-15507 -15512 15524 0
-15506 15526 0
-15506 -15513 15524 0
-15506 -15512 15523 0
c (( - aux1266 + SATLiteral(684) + SATLiteral(804))<=0)
-804 -15530 0
-684 -15530 0
-684 -804 -15531 0
c (0<=( - aux1266 + SATLiteral(684) + SATLiteral(804)))
804 15531 0
684 15531 0
684 804 15530 0
c (( - aux1267 + SATLiteral(699) + SATLiteral(789))<=0)
-789 -15533 0
-699 -15533 0
-699 -789 -15534 0
c (0<=( - aux1267 + SATLiteral(699) + SATLiteral(789)))
789 15534 0
699 15534 0
699 789 15533 0
c (( - aux1268 + SATLiteral(729) + SATLiteral(774))<=0)
-774 -15536 0
-729 -15536 0
-729 -774 -15537 0
c (0<=( - aux1268 + SATLiteral(729) + SATLiteral(774)))
774 15537 0
729 15537 0
729 774 15536 0
c (( - aux1269 + SATLiteral(744) + SATLiteral(759))<=0)
-759 -15539 0
-744 -15539 0
-744 -759 -15540 0
c (0<=( - aux1269 + SATLiteral(744) + SATLiteral(759)))
759 15540 0
744 15540 0
744 759 15539 0
c ((aux1269 - aux1270 + SATLiteral(714))<=0)
15539 -15542 0
15540 -15543 0
-714 -15542 0
-714 15539 -15543 0
-714 15540 -15545 0
c (0<=(aux1269 - aux1270 + SATLiteral(714)))
-15540 15545 0
-15539 15543 0
714 15545 0
714 -15540 15543 0
714 -15539 15542 0
c ((aux1266 + aux1268 - aux1271)<=0)
15536 -15547 0
15537 -15548 0
15530 -15547 0
15530 15536 -15548 0
15530 15537 -15550 0
15531 -15548 0
15531 15536 -15550 0
15531 15537 -15552 0
c (0<=(aux1266 + aux1268 - aux1271))
-15537 15552 0
-15536 15550 0
-15531 15552 0
-15531 -15537 15550 0
-15531 -15536 15548 0
-15530 15550 0
-15530 -15537 15548 0
-15530 -15536 15547 0
c (( - aux1272 + SATLiteral(685) + SATLiteral(805))<=0)
-805 -15554 0
-685 -15554 0
-685 -805 -15555 0
c (0<=( - aux1272 + SATLiteral(685) + SATLiteral(805)))
805 15555 0
685 15555 0
685 805 15554 0
c (( - aux1273 + SATLiteral(700) + SATLiteral(790))<=0)
-790 -15557 0
-700 -15557 0
-700 -790 -15558 0
c (0<=( - aux1273 + SATLiteral(700) + SATLiteral(790)))
790 15558 0
700 15558 0
700 790 15557 0
c (( - aux1274 + SATLiteral(730) + SATLiteral(775))<=0)
-775 -15560 0
-730 -15560 0
-730 -775 -15561 0
c (0<=( - aux1274 + SATLiteral(730) + SATLiteral(775)))
775 15561 0
730 15561 0
730 775 15560 0
c (( - aux1275 + SATLiteral(745) + SATLiteral(760))<=0)
-760 -15563 0
-745 -15563 0
-745 -760 -15564 0
c (0<=( - aux1275 + SATLiteral(745) + SATLiteral(760)))
760 15564 0
745 15564 0
745 760 15563 0
c ((aux1275 - aux1276 + SATLiteral(715))<=0)
15563 -15566 0
15564 -15567 0
-715 -15566 0
-715 15563 -15567 0
-715 15564 -15569 0
c (0<=(aux1275 - aux1276 + SATLiteral(715)))
-15564 15569 0
-15563 15567 0
715 15569 0
715 -15564 15567 0
715 -15563 15566 0
c ((aux1272 + aux1274 - aux1277)<=0)
15560 -15571 0
15561 -15572 0
15554 -15571 0
15554 15560 -15572 0
15554 15561 -15574 0
15555 -15572 0
15555 15560 -15574 0
15555 15561 -15576 0
c (0<=(aux1272 + aux1274 - aux1277))
-15561 15576 0
-15560 15574 0
-15555 15576 0
-15555 -15561 15574 0
-15555 -15560 15572 0
-15554 15574 0
-15554 -15561 15572 0
-15554 -15560 15571 0
c ((SATLiteral(812) + SATLiteral(932) - aux1278)<=0)
-932 -15578 0
-812 -15578 0
-812 -932 -15579 0
c (0<=(SATLiteral(812) + SATLiteral(932) - aux1278))
932 15579 0
812 15579 0
812 932 15578 0
c ((SATLiteral(827) + SATLiteral(917) - aux1279)<=0)
-917 -15581 0
-827 -15581 0
-827 -917 -15582 0
c (0<=(SATLiteral(827) + SATLiteral(917) - aux1279))
917 15582 0
827 15582 0
827 917 15581 0
c ((SATLiteral(857) + SATLiteral(902) - aux1280)<=0)
-902 -15584 0
-857 -15584 0
-857 -902 -15585 0
c (0<=(SATLiteral(857) + SATLiteral(902) - aux1280))
902 15585 0
857 15585 0
857 902 15584 0
c ((SATLiteral(872) + SATLiteral(887) - aux1281)<=0)
-887 -15587 0
-872 -15587 0
-872 -887 -15588 0
c (0<=(SATLiteral(872) + SATLiteral(887) - aux1281))
887 15588 0
872 15588 0
872 887 15587 0
c ((SATLiteral(842) + aux1281 - aux1282)<=0)
15587 -15590 0
15588 -15591 0
-842 -15590 0
-842 15587 -15591 0
-842 15588 -15593 0
c (0<=(SATLiteral(842) + aux1281 - aux1282))
-15588 15593 0
-15587 15591 0
842 15593 0
842 -15588 15591 0
842 -15587 15590 0
c ((aux1278 + aux1280 - aux1283)<=0)
15584 -15595 0
15585 -15596 0
15578 -15595 0
15578 15584 -15596 0
15578 15585 -15598 0
15579 -15596 0
15579 15584 -15598 0
15579 15585 -15600 0
c (0<=(aux1278 + aux1280 - aux1283))
-15585 15600 0
-15584 15598 0
-15579 15600 0
-15579 -15585 15598 0
-15579 -15584 15596 0
-15578 15598 0
-15578 -15585 15596 0
-15578 -15584 15595 0
c ((SATLiteral(813) + SATLiteral(933) - aux1284)<=0)
-933 -15602 0
-813 -15602 0
-813 -933 -15603 0
c (0<=(SATLiteral(813) + SATLiteral(933) - aux1284))
933 15603 0
813 15603 0
813 933 15602 0
c ((SATLiteral(828) + SATLiteral(918) - aux1285)<=0)
-918 -15605 0
-828 -15605 0
-828 -918 -15606 0
c (0<=(SATLiteral(828) + SATLiteral(918) - aux1285))
918 15606 0
828 15606 0
828 918 15605 0
c ((SATLiteral(858) + SATLiteral(903) - aux1286)<=0)
-903 -15608 0
-858 -15608 0
-858 -903 -15609 0
c (0<=(SATLiteral(858) + SATLiteral(903) - aux1286))
903 15609 0
858 15609 0
858 903 15608 0
c ((SATLiteral(873) + SATLiteral(888) - aux1287)<=0)
-888 -15611 0
-873 -15611 0
-873 -888 -15612 0
c (0<=(SATLiteral(873) + SATLiteral(888) - aux1287))
888 15612 0
873 15612 0
873 888 15611 0
c ((SATLiteral(843) + aux1287 - aux1288)<=0)
15611 -15614 0
15612 -15615 0
-843 -15614 0
-843 15611 -15615 0
-843 15612 -15617 0
c (0<=(SATLiteral(843) + aux1287 - aux1288))
-15612 15617 0
-15611 15615 0
843 15617 0
843 -15612 15615 0
843 -15611 15614 0
c ((aux1284 + aux1286 - aux1289)<=0)
15608 -15619 0
15609 -15620 0
15602 -15619 0
15602 15608 -15620 0
15602 15609 -15622 0
15603 -15620 0
15603 15608 -15622 0
15603 15609 -15624 0
c (0<=(aux1284 + aux1286 - aux1289))
-15609 15624 0
-15608 15622 0
-15603 15624 0
-15603 -15609 15622 0
-15603 -15608 15620 0
-15602 15622 0
-15602 -15609 15620 0
-15602 -15608 15619 0
c ((SATLiteral(814) + SATLiteral(934) - aux1290)<=0)
-934 -15626 0
-814 -15626 0
-814 -934 -15627 0
c (0<=(SATLiteral(814) + SATLiteral(934) - aux1290))
934 15627 0
814 15627 0
814 934 15626 0
c ((SATLiteral(829) + SATLiteral(919) - aux1291)<=0)
-919 -15629 0
-829 -15629 0
-829 -919 -15630 0
c (0<=(SATLiteral(829) + SATLiteral(919) - aux1291))
919 15630 0
829 15630 0
829 919 15629 0
c ((SATLiteral(859) + SATLiteral(904) - aux1292)<=0)
-904 -15632 0
-859 -15632 0
-859 -904 -15633 0
c (0<=(SATLiteral(859) + SATLiteral(904) - aux1292))
904 15633 0
859 15633 0
859 904 15632 0
c ((SATLiteral(874) + SATLiteral(889) - aux1293)<=0)
-889 -15635 0
-874 -15635 0
-874 -889 -15636 0
c (0<=(SATLiteral(874) + SATLiteral(889) - aux1293))
889 15636 0
874 15636 0
874 889 15635 0
c ((SATLiteral(844) + aux1293 - aux1294)<=0)
15635 -15638 0
15636 -15639 0
-844 -15638 0
-844 15635 -15639 0
-844 15636 -15641 0
c (0<=(SATLiteral(844) + aux1293 - aux1294))
-15636 15641 0
-15635 15639 0
844 15641 0
844 -15636 15639 0
844 -15635 15638 0
c ((aux1290 + aux1292 - aux1295)<=0)
15632 -15643 0
15633 -15644 0
15626 -15643 0
15626 15632 -15644 0
15626 15633 -15646 0
15627 -15644 0
15627 15632 -15646 0
15627 15633 -15648 0
c (0<=(aux1290 + aux1292 - aux1295))
-15633 15648 0
-15632 15646 0
-15627 15648 0
-15627 -15633 15646 0
-15627 -15632 15644 0
-15626 15646 0
-15626 -15633 15644 0
-15626 -15632 15643 0
c ((SATLiteral(815) + SATLiteral(935) - aux1296)<=0)
-935 -15650 0
-815 -15650 0
-815 -935 -15651 0
c (0<=(SATLiteral(815) + SATLiteral(935) - aux1296))
935 15651 0
815 15651 0
815 935 15650 0
c ((SATLiteral(830) + SATLiteral(920) - aux1297)<=0)
-920 -15653 0
-830 -15653 0
-830 -920 -15654 0
c (0<=(SATLiteral(830) + SATLiteral(920) - aux1297))
920 15654 0
830 15654 0
830 920 15653 0
c ((SATLiteral(860) + SATLiteral(905) - aux1298)<=0)
-905 -15656 0
-860 -15656 0
-860 -905 -15657 0
c (0<=(SATLiteral(860) + SATLiteral(905) - aux1298))
905 15657 0
860 15657 0
860 905 15656 0
c ((SATLiteral(875) + SATLiteral(890) - aux1299)<=0)
-890 -15659 0
-875 -15659 0
-875 -890 -15660 0
c (0<=(SATLiteral(875) + SATLiteral(890) - aux1299))
890 15660 0
875 15660 0
875 890 15659 0
c ((SATLiteral(845) + aux1299 - aux1300)<=0)
15659 -15662 0
15660 -15663 0
-845 -15662 0
-845 15659 -15663 0
-845 15660 -15665 0
c (0<=(SATLiteral(845) + aux1299 - aux1300))
-15660 15665 0
-15659 15663 0
845 15665 0
845 -15660 15663 0
845 -15659 15662 0
c ((aux1296 + aux1298 - aux1301)<=0)
15656 -15667 0
15657 -15668 0
15650 -15667 0
15650 15656 -15668 0
15650 15657 -15670 0
15651 -15668 0
15651 15656 -15670 0
15651 15657 -15672 0
c (0<=(aux1296 + aux1298 - aux1301))
-15657 15672 0
-15656 15670 0
-15651 15672 0
-15651 -15657 15670 0
-15651 -15656 15668 0
-15650 15670 0
-15650 -15657 15668 0
-15650 -15656 15667 0
c ((SATLiteral(816) + SATLiteral(936) - aux1302)<=0)
-936 -15674 0
-816 -15674 0
-816 -936 -15675 0
c (0<=(SATLiteral(816) + SATLiteral(936) - aux1302))
936 15675 0
816 15675 0
816 936 15674 0
c ((SATLiteral(831) + SATLiteral(921) - aux1303)<=0)
-921 -15677 0
-831 -15677 0
-831 -921 -15678 0
c (0<=(SATLiteral(831) + SATLiteral(921) - aux1303))
921 15678 0
831 15678 0
831 921 15677 0
c ((SATLiteral(861) + SATLiteral(906) - aux1304)<=0)
-906 -15680 0
-861 -15680 0
-861 -906 -15681 0
c (0<=(SATLiteral(861) + SATLiteral(906) - aux1304))
906 15681 0
861 15681 0
861 906 15680 0
c ((SATLiteral(876) + SATLiteral(891) - aux1305)<=0)
-891 -15683 0
-876 -15683 0
-876 -891 -15684 0
c (0<=(SATLiteral(876) + SATLiteral(891) - aux1305))
891 15684 0
876 15684 0
876 891 15683 0
c ((SATLiteral(846) + aux1305 - aux1306)<=0)
15683 -15686 0
15684 -15687 0
-846 -15686 0
-846 15683 -15687 0
-846 15684 -15689 0
c (0<=(SATLiteral(846) + aux1305 - aux1306))
-15684 15689 0
-15683 15687 0
846 15689 0
846 -15684 15687 0
846 -15683 15686 0
c ((aux1302 + aux1304 - aux1307)<=0)
15680 -15691 0
15681 -15692 0
15674 -15691 0
15674 15680 -15692 0
15674 15681 -15694 0
15675 -15692 0
15675 15680 -15694 0
15675 15681 -15696 0
c (0<=(aux1302 + aux1304 - aux1307))
-15681 15696 0
-15680 15694 0
-15675 15696 0
-15675 -15681 15694 0
-15675 -15680 15692 0
-15674 15694 0
-15674 -15681 15692 0
-15674 -15680 15691 0
c ((SATLiteral(817) + SATLiteral(937) - aux1308)<=0)
-937 -15698 0
-817 -15698 0
-817 -937 -15699 0
c (0<=(SATLiteral(817) + SATLiteral(937) - aux1308))
937 15699 0
817 15699 0
817 937 15698 0
c ((SATLiteral(832) + SATLiteral(922) - aux1309)<=0)
-922 -15701 0
-832 -15701 0
-832 -922 -15702 0
c (0<=(SATLiteral(832) + SATLiteral(922) - aux1309))
922 15702 0
832 15702 0
832 922 15701 0
c ((SATLiteral(862) + SATLiteral(907) - aux1310)<=0)
-907 -15704 0
-862 -15704 0
-862 -907 -15705 0
c (0<=(SATLiteral(862) + SATLiteral(907) - aux1310))
907 15705 0
862 15705 0
862 907 15704 0
c ((SATLiteral(877) + SATLiteral(892) - aux1311)<=0)
-892 -15707 0
-877 -15707 0
-877 -892 -15708 0
c (0<=(SATLiteral(877) + SATLiteral(892) - aux1311))
892 15708 0
877 15708 0
877 892 15707 0
c ((SATLiteral(847) + aux1311 - aux1312)<=0)
15707 -15710 0
15708 -15711 0
-847 -15710 0
-847 15707 -15711 0
-847 15708 -15713 0
c (0<=(SATLiteral(847) + aux1311 - aux1312))
-15708 15713 0
-15707 15711 0
847 15713 0
847 -15708 15711 0
847 -15707 15710 0
c ((aux1308 + aux1310 - aux1313)<=0)
15704 -15715 0
15705 -15716 0
15698 -15715 0
15698 15704 -15716 0
15698 15705 -15718 0
15699 -15716 0
15699 15704 -15718 0
15699 15705 -15720 0
c (0<=(aux1308 + aux1310 - aux1313))
-15705 15720 0
-15704 15718 0
-15699 15720 0
-15699 -15705 15718 0
-15699 -15704 15716 0
-15698 15718 0
-15698 -15705 15716 0
-15698 -15704 15715 0
c ((SATLiteral(818) + SATLiteral(938) - aux1314)<=0)
-938 -15722 0
-818 -15722 0
-818 -938 -15723 0
c (0<=(SATLiteral(818) + SATLiteral(938) - aux1314))
938 15723 0
818 15723 0
818 938 15722 0
c ((SATLiteral(833) + SATLiteral(923) - aux1315)<=0)
-923 -15725 0
-833 -15725 0
-833 -923 -15726 0
c (0<=(SATLiteral(833) + SATLiteral(923) - aux1315))
923 15726 0
833 15726 0
833 923 15725 0
c ((SATLiteral(863) + SATLiteral(908) - aux1316)<=0)
-908 -15728 0
-863 -15728 0
-863 -908 -15729 0
c (0<=(SATLiteral(863) + SATLiteral(908) - aux1316))
908 15729 0
863 15729 0
863 908 15728 0
c ((SATLiteral(878) + SATLiteral(893) - aux1317)<=0)
-893 -15731 0
-878 -15731 0
-878 -893 -15732 0
c (0<=(SATLiteral(878) + SATLiteral(893) - aux1317))
893 15732 0
878 15732 0
878 893 15731 0
c ((SATLiteral(848) + aux1317 - aux1318)<=0)
15731 -15734 0
15732 -15735 0
-848 -15734 0
-848 15731 -15735 0
-848 15732 -15737 0
c (0<=(SATLiteral(848) + aux1317 - aux1318))
-15732 15737 0
-15731 15735 0
848 15737 0
848 -15732 15735 0
848 -15731 15734 0
c ((aux1314 + aux1316 - aux1319)<=0)
15728 -15739 0
15729 -15740 0
15722 -15739 0
15722 15728 -15740 0
15722 15729 -15742 0
15723 -15740 0
15723 15728 -15742 0
15723 15729 -15744 0
c (0<=(aux1314 + aux1316 - aux1319))
-15729 15744 0
-15728 15742 0
-15723 15744 0
-15723 -15729 15742 0
-15723 -15728 15740 0
-15722 15742 0
-15722 -15729 15740 0
-15722 -15728 15739 0
c ((SATLiteral(819) + SATLiteral(939) - aux1320)<=0)
-939 -15746 0
-819 -15746 0
-819 -939 -15747 0
c (0<=(SATLiteral(819) + SATLiteral(939) - aux1320))
939 15747 0
819 15747 0
819 939 15746 0
c ((SATLiteral(834) + SATLiteral(924) - aux1321)<=0)
-924 -15749 0
-834 -15749 0
-834 -924 -15750 0
c (0<=(SATLiteral(834) + SATLiteral(924) - aux1321))
924 15750 0
834 15750 0
834 924 15749 0
c ((SATLiteral(864) + SATLiteral(909) - aux1322)<=0)
-909 -15752 0
-864 -15752 0
-864 -909 -15753 0
c (0<=(SATLiteral(864) + SATLiteral(909) - aux1322))
909 15753 0
864 15753 0
864 909 15752 0
c ((SATLiteral(879) + SATLiteral(894) - aux1323)<=0)
-894 -15755 0
-879 -15755 0
-879 -894 -15756 0
c (0<=(SATLiteral(879) + SATLiteral(894) - aux1323))
894 15756 0
879 15756 0
879 894 15755 0
c ((SATLiteral(849) + aux1323 - aux1324)<=0)
15755 -15758 0
15756 -15759 0
-849 -15758 0
-849 15755 -15759 0
-849 15756 -15761 0
c (0<=(SATLiteral(849) + aux1323 - aux1324))
-15756 15761 0
-15755 15759 0
849 15761 0
849 -15756 15759 0
849 -15755 15758 0
c ((aux1320 + aux1322 - aux1325)<=0)
15752 -15763 0
15753 -15764 0
15746 -15763 0
15746 15752 -15764 0
15746 15753 -15766 0
15747 -15764 0
15747 15752 -15766 0
15747 15753 -15768 0
c (0<=(aux1320 + aux1322 - aux1325))
-15753 15768 0
-15752 15766 0
-15747 15768 0
-15747 -15753 15766 0
-15747 -15752 15764 0
-15746 15766 0
-15746 -15753 15764 0
-15746 -15752 15763 0
c ((SATLiteral(820) + SATLiteral(940) - aux1326)<=0)
-940 -15770 0
-820 -15770 0
-820 -940 -15771 0
c (0<=(SATLiteral(820) + SATLiteral(940) - aux1326))
940 15771 0
820 15771 0
820 940 15770 0
c ((SATLiteral(835) + SATLiteral(925) - aux1327)<=0)
-925 -15773 0
-835 -15773 0
-835 -925 -15774 0
c (0<=(SATLiteral(835) + SATLiteral(925) - aux1327))
925 15774 0
835 15774 0
835 925 15773 0
c ((SATLiteral(865) + SATLiteral(910) - aux1328)<=0)
-910 -15776 0
-865 -15776 0
-865 -910 -15777 0
c (0<=(SATLiteral(865) + SATLiteral(910) - aux1328))
910 15777 0
865 15777 0
865 910 15776 0
c ((SATLiteral(880) + SATLiteral(895) - aux1329)<=0)
-895 -15779 0
-880 -15779 0
-880 -895 -15780 0
c (0<=(SATLiteral(880) + SATLiteral(895) - aux1329))
895 15780 0
880 15780 0
880 895 15779 0
c ((SATLiteral(850) + aux1329 - aux1330)<=0)
15779 -15782 0
15780 -15783 0
-850 -15782 0
-850 15779 -15783 0
-850 15780 -15785 0
c (0<=(SATLiteral(850) + aux1329 - aux1330))
-15780 15785 0
-15779 15783 0
850 15785 0
850 -15780 15783 0
850 -15779 15782 0
c ((aux1326 + aux1328 - aux1331)<=0)
15776 -15787 0
15777 -15788 0
15770 -15787 0
15770 15776 -15788 0
15770 15777 -15790 0
15771 -15788 0
15771 15776 -15790 0
15771 15777 -15792 0
c (0<=(aux1326 + aux1328 - aux1331))
-15777 15792 0
-15776 15790 0
-15771 15792 0
-15771 -15777 15790 0
-15771 -15776 15788 0
-15770 15790 0
-15770 -15777 15788 0
-15770 -15776 15787 0
c (( - aux1332 + SATLiteral(947) + SATLiteral(1067))<=0)
-1067 -15794 0
-947 -15794 0
-947 -1067 -15795 0
c (0<=( - aux1332 + SATLiteral(947) + SATLiteral(1067)))
1067 15795 0
947 15795 0
947 1067 15794 0
c (( - aux1333 + SATLiteral(962) + SATLiteral(1052))<=0)
-1052 -15797 0
-962 -15797 0
-962 -1052 -15798 0
c (0<=( - aux1333 + SATLiteral(962) + SATLiteral(1052)))
1052 15798 0
962 15798 0
962 1052 15797 0
c (( - aux1334 + SATLiteral(992) + SATLiteral(1037))<=0)
-1037 -15800 0
-992 -15800 0
-992 -1037 -15801 0
c (0<=( - aux1334 + SATLiteral(992) + SATLiteral(1037)))
1037 15801 0
992 15801 0
992 1037 15800 0
c (( - aux1335 + SATLiteral(1007) + SATLiteral(1022))<=0)
-1022 -15803 0
-1007 -15803 0
-1007 -1022 -15804 0
c (0<=( - aux1335 + SATLiteral(1007) + SATLiteral(1022)))
1022 15804 0
1007 15804 0
1007 1022 15803 0
c ((aux1335 - aux1336 + SATLiteral(977))<=0)
15803 -15806 0
15804 -15807 0
-977 -15806 0
-977 15803 -15807 0
-977 15804 -15809 0
c (0<=(aux1335 - aux1336 + SATLiteral(977)))
-15804 15809 0
-15803 15807 0
977 15809 0
977 -15804 15807 0
977 -15803 15806 0
c ((aux1332 + aux1334 - aux1337)<=0)
15800 -15811 0
15801 -15812 0
15794 -15811 0
15794 15800 -15812 0
15794 15801 -15814 0
15795 -15812 0
15795 15800 -15814 0
15795 15801 -15816 0
c (0<=(aux1332 + aux1334 - aux1337))
-15801 15816 0
-15800 15814 0
-15795 15816 0
-15795 -15801 15814 0
-15795 -15800 15812 0
-15794 15814 0
-15794 -15801 15812 0
-15794 -15800 15811 0
c (( - aux1338 + SATLiteral(948) + SATLiteral(1068))<=0)
-1068 -15818 0
-948 -15818 0
-948 -1068 -15819 0
c (0<=( - aux1338 + SATLiteral(948) + SATLiteral(1068)))
1068 15819 0
948 15819 0
948 1068 15818 0
c (( - aux1339 + SATLiteral(963) + SATLiteral(1053))<=0)
-1053 -15821 0
-963 -15821 0
-963 -1053 -15822 0
c (0<=( - aux1339 + SATLiteral(963) + SATLiteral(1053)))
1053 15822 0
963 15822 0
963 1053 15821 0
c (( - aux1340 + SATLiteral(993) + SATLiteral(1038))<=0)
-1038 -15824 0
-993 -15824 0
-993 -1038 -15825 0
c (0<=( - aux1340 + SATLiteral(993) + SATLiteral(1038)))
1038 15825 0
993 15825 0
993 1038 15824 0
c (( - aux1341 + SATLiteral(1008) + SATLiteral(1023))<=0)
-1023 -15827 0
-1008 -15827 0
-1008 -1023 -15828 0
c (0<=( - aux1341 + SATLiteral(1008) + SATLiteral(1023)))
1023 15828 0
1008 15828 0
1008 1023 15827 0
c ((aux1341 - aux1342 + SATLiteral(978))<=0)
15827 -15830 0
15828 -15831 0
-978 -15830 0
-978 15827 -15831 0
-978 15828 -15833 0
c (0<=(aux1341 - aux1342 + SATLiteral(978)))
-15828 15833 0
-15827 15831 0
978 15833 0
978 -15828 15831 0
978 -15827 15830 0
c ((aux1338 + aux1340 - aux1343)<=0)
15824 -15835 0
15825 -15836 0
15818 -15835 0
15818 15824 -15836 0
15818 15825 -15838 0
15819 -15836 0
15819 15824 -15838 0
15819 15825 -15840 0
c (0<=(aux1338 + aux1340 - aux1343))
-15825 15840 0
-15824 15838 0
-15819 15840 0
-15819 -15825 15838 0
-15819 -15824 15836 0
-15818 15838 0
-15818 -15825 15836 0
-15818 -15824 15835 0
c (( - aux1344 + SATLiteral(949) + SATLiteral(1069))<=0)
-1069 -15842 0
-949 -15842 0
-949 -1069 -15843 0
c (0<=( - aux1344 + SATLiteral(949) + SATLiteral(1069)))
1069 15843 0
949 15843 0
949 1069 15842 0
c (( - aux1345 + SATLiteral(964) + SATLiteral(1054))<=0)
-1054 -15845 0
-964 -15845 0
-964 -1054 -15846 0
c (0<=( - aux1345 + SATLiteral(964) + SATLiteral(1054)))
1054 15846 0
964 15846 0
964 1054 15845 0
c (( - aux1346 + SATLiteral(994) + SATLiteral(1039))<=0)
-1039 -15848 0
-994 -15848 0
-994 -1039 -15849 0
c (0<=( - aux1346 + SATLiteral(994) + SATLiteral(1039)))
1039 15849 0
994 15849 0
994 1039 15848 0
c (( - aux1347 + SATLiteral(1009) + SATLiteral(1024))<=0)
-1024 -15851 0
-1009 -15851 0
-1009 -1024 -15852 0
c (0<=( - aux1347 + SATLiteral(1009) + SATLiteral(1024)))
1024 15852 0
1009 15852 0
1009 1024 15851 0
c ((aux1347 - aux1348 + SATLiteral(979))<=0)
15851 -15854 0
15852 -15855 0
-979 -15854 0
-979 15851 -15855 0
-979 15852 -15857 0
c (0<=(aux1347 - aux1348 + SATLiteral(979)))
-15852 15857 0
-15851 15855 0
979 15857 0
979 -15852 15855 0
979 -15851 15854 0
c ((aux1344 + aux1346 - aux1349)<=0)
15848 -15859 0
15849 -15860 0
15842 -15859 0
15842 15848 -15860 0
15842 15849 -15862 0
15843 -15860 0
15843 15848 -15862 0
15843 15849 -15864 0
c (0<=(aux1344 + aux1346 - aux1349))
-15849 15864 0
-15848 15862 0
-15843 15864 0
-15843 -15849 15862 0
-15843 -15848 15860 0
-15842 15862 0
-15842 -15849 15860 0
-15842 -15848 15859 0
c (( - aux1350 + SATLiteral(950) + SATLiteral(1070))<=0)
-1070 -15866 0
-950 -15866 0
-950 -1070 -15867 0
c (0<=( - aux1350 + SATLiteral(950) + SATLiteral(1070)))
1070 15867 0
950 15867 0
950 1070 15866 0
c (( - aux1351 + SATLiteral(965) + SATLiteral(1055))<=0)
-1055 -15869 0
-965 -15869 0
-965 -1055 -15870 0
c (0<=( - aux1351 + SATLiteral(965) + SATLiteral(1055)))
1055 15870 0
965 15870 0
965 1055 15869 0
c (( - aux1352 + SATLiteral(995) + SATLiteral(1040))<=0)
-1040 -15872 0
-995 -15872 0
-995 -1040 -15873 0
c (0<=( - aux1352 + SATLiteral(995) + SATLiteral(1040)))
1040 15873 0
995 15873 0
995 1040 15872 0
c (( - aux1353 + SATLiteral(1010) + SATLiteral(1025))<=0)
-1025 -15875 0
-1010 -15875 0
-1010 -1025 -15876 0
c (0<=( - aux1353 + SATLiteral(1010) + SATLiteral(1025)))
1025 15876 0
1010 15876 0
1010 1025 15875 0
c ((aux1353 - aux1354 + SATLiteral(980))<=0)
15875 -15878 0
15876 -15879 0
-980 -15878 0
-980 15875 -15879 0
-980 15876 -15881 0
c (0<=(aux1353 - aux1354 + SATLiteral(980)))
-15876 15881 0
-15875 15879 0
980 15881 0
980 -15876 15879 0
980 -15875 15878 0
c ((aux1350 + aux1352 - aux1355)<=0)
15872 -15883 0
15873 -15884 0
15866 -15883 0
15866 15872 -15884 0
15866 15873 -15886 0
15867 -15884 0
15867 15872 -15886 0
15867 15873 -15888 0
c (0<=(aux1350 + aux1352 - aux1355))
-15873 15888 0
-15872 15886 0
-15867 15888 0
-15867 -15873 15886 0
-15867 -15872 15884 0
-15866 15886 0
-15866 -15873 15884 0
-15866 -15872 15883 0
c (( - aux1356 + SATLiteral(951) + SATLiteral(1071))<=0)
-1071 -15890 0
-951 -15890 0
-951 -1071 -15891 0
c (0<=( - aux1356 + SATLiteral(951) + SATLiteral(1071)))
1071 15891 0
951 15891 0
951 1071 15890 0
c (( - aux1357 + SATLiteral(966) + SATLiteral(1056))<=0)
-1056 -15893 0
-966 -15893 0
-966 -1056 -15894 0
c (0<=( - aux1357 + SATLiteral(966) + SATLiteral(1056)))
1056 15894 0
966 15894 0
966 1056 15893 0
c (( - aux1358 + SATLiteral(996) + SATLiteral(1041))<=0)
-1041 -15896 0
-996 -15896 0
-996 -1041 -15897 0
c (0<=( - aux1358 + SATLiteral(996) + SATLiteral(1041)))
1041 15897 0
996 15897 0
996 1041 15896 0
c (( - aux1359 + SATLiteral(1011) + SATLiteral(1026))<=0)
-1026 -15899 0
-1011 -15899 0
-1011 -1026 -15900 0
c (0<=( - aux1359 + SATLiteral(1011) + SATLiteral(1026)))
1026 15900 0
1011 15900 0
1011 1026 15899 0
c ((aux1359 - aux1360 + SATLiteral(981))<=0)
15899 -15902 0
15900 -15903 0
-981 -15902 0
-981 15899 -15903 0
-981 15900 -15905 0
c (0<=(aux1359 - aux1360 + SATLiteral(981)))
-15900 15905 0
-15899 15903 0
981 15905 0
981 -15900 15903 0
981 -15899 15902 0
c ((aux1356 + aux1358 - aux1361)<=0)
15896 -15907 0
15897 -15908 0
15890 -15907 0
15890 15896 -15908 0
15890 15897 -15910 0
15891 -15908 0
15891 15896 -15910 0
15891 15897 -15912 0
c (0<=(aux1356 + aux1358 - aux1361))
-15897 15912 0
-15896 15910 0
-15891 15912 0
-15891 -15897 15910 0
-15891 -15896 15908 0
-15890 15910 0
-15890 -15897 15908 0
-15890 -15896 15907 0
c (( - aux1362 + SATLiteral(952) + SATLiteral(1072))<=0)
-1072 -15914 0
-952 -15914 0
-952 -1072 -15915 0
c (0<=( - aux1362 + SATLiteral(952) + SATLiteral(1072)))
1072 15915 0
952 15915 0
952 1072 15914 0
c (( - aux1363 + SATLiteral(967) + SATLiteral(1057))<=0)
-1057 -15917 0
-967 -15917 0
-967 -1057 -15918 0
c (0<=( - aux1363 + SATLiteral(967) + SATLiteral(1057)))
1057 15918 0
967 15918 0
967 1057 15917 0
c (( - aux1364 + SATLiteral(997) + SATLiteral(1042))<=0)
-1042 -15920 0
-997 -15920 0
-997 -1042 -15921 0
c (0<=( - aux1364 + SATLiteral(997) + SATLiteral(1042)))
1042 15921 0
997 15921 0
997 1042 15920 0
c (( - aux1365 + SATLiteral(1012) + SATLiteral(1027))<=0)
-1027 -15923 0
-1012 -15923 0
-1012 -1027 -15924 0
c (0<=( - aux1365 + SATLiteral(1012) + SATLiteral(1027)))
1027 15924 0
1012 15924 0
1012 1027 15923 0
c ((aux1365 - aux1366 + SATLiteral(982))<=0)
15923 -15926 0
15924 -15927 0
-982 -15926 0
-982 15923 -15927 0
-982 15924 -15929 0
c (0<=(aux1365 - aux1366 + SATLiteral(982)))
-15924 15929 0
-15923 15927 0
982 15929 0
982 -15924 15927 0
982 -15923 15926 0
c ((aux1362 + aux1364 - aux1367)<=0)
15920 -15931 0
15921 -15932 0
15914 -15931 0
15914 15920 -15932 0
15914 15921 -15934 0
15915 -15932 0
15915 15920 -15934 0
15915 15921 -15936 0
c (0<=(aux1362 + aux1364 - aux1367))
-15921 15936 0
-15920 15934 0
-15915 15936 0
-15915 -15921 15934 0
-15915 -15920 15932 0
-15914 15934 0
-15914 -15921 15932 0
-15914 -15920 15931 0
c (( - aux1368 + SATLiteral(953) + SATLiteral(1073))<=0)
-1073 -15938 0
-953 -15938 0
-953 -1073 -15939 0
c (0<=( - aux1368 + SATLiteral(953) + SATLiteral(1073)))
1073 15939 0
953 15939 0
953 1073 15938 0
c (( - aux1369 + SATLiteral(968) + SATLiteral(1058))<=0)
-1058 -15941 0
-968 -15941 0
-968 -1058 -15942 0
c (0<=( - aux1369 + SATLiteral(968) + SATLiteral(1058)))
1058 15942 0
968 15942 0
968 1058 15941 0
c (( - aux1370 + SATLiteral(998) + SATLiteral(1043))<=0)
-1043 -15944 0
-998 -15944 0
-998 -1043 -15945 0
c (0<=( - aux1370 + SATLiteral(998) + SATLiteral(1043)))
1043 15945 0
998 15945 0
998 1043 15944 0
c (( - aux1371 + SATLiteral(1013) + SATLiteral(1028))<=0)
-1028 -15947 0
-1013 -15947 0
-1013 -1028 -15948 0
c (0<=( - aux1371 + SATLiteral(1013) + SATLiteral(1028)))
1028 15948 0
1013 15948 0
1013 1028 15947 0
c ((aux1371 - aux1372 + SATLiteral(983))<=0)
15947 -15950 0
15948 -15951 0
-983 -15950 0
-983 15947 -15951 0
-983 15948 -15953 0
c (0<=(aux1371 - aux1372 + SATLiteral(983)))
-15948 15953 0
-15947 15951 0
983 15953 0
983 -15948 15951 0
983 -15947 15950 0
c ((aux1368 + aux1370 - aux1373)<=0)
15944 -15955 0
15945 -15956 0
15938 -15955 0
15938 15944 -15956 0
15938 15945 -15958 0
15939 -15956 0
15939 15944 -15958 0
15939 15945 -15960 0
c (0<=(aux1368 + aux1370 - aux1373))
-15945 15960 0
-15944 15958 0
-15939 15960 0
-15939 -15945 15958 0
-15939 -15944 15956 0
-15938 15958 0
-15938 -15945 15956 0
-15938 -15944 15955 0
c (( - aux1374 + SATLiteral(954) + SATLiteral(1074))<=0)
-1074 -15962 0
-954 -15962 0
-954 -1074 -15963 0
c (0<=( - aux1374 + SATLiteral(954) + SATLiteral(1074)))
1074 15963 0
954 15963 0
954 1074 15962 0
c (( - aux1375 + SATLiteral(969) + SATLiteral(1059))<=0)
-1059 -15965 0
-969 -15965 0
-969 -1059 -15966 0
c (0<=( - aux1375 + SATLiteral(969) + SATLiteral(1059)))
1059 15966 0
969 15966 0
969 1059 15965 0
c (( - aux1376 + SATLiteral(999) + SATLiteral(1044))<=0)
-1044 -15968 0
-999 -15968 0
-999 -1044 -15969 0
c (0<=( - aux1376 + SATLiteral(999) + SATLiteral(1044)))
1044 15969 0
999 15969 0
999 1044 15968 0
c (( - aux1377 + SATLiteral(1014) + SATLiteral(1029))<=0)
-1029 -15971 0
-1014 -15971 0
-1014 -1029 -15972 0
c (0<=( - aux1377 + SATLiteral(1014) + SATLiteral(1029)))
1029 15972 0
1014 15972 0
1014 1029 15971 0
c ((aux1377 - aux1378 + SATLiteral(984))<=0)
15971 -15974 0
15972 -15975 0
-984 -15974 0
-984 15971 -15975 0
-984 15972 -15977 0
c (0<=(aux1377 - aux1378 + SATLiteral(984)))
-15972 15977 0
-15971 15975 0
984 15977 0
984 -15972 15975 0
984 -15971 15974 0
c ((aux1374 + aux1376 - aux1379)<=0)
15968 -15979 0
15969 -15980 0
15962 -15979 0
15962 15968 -15980 0
15962 15969 -15982 0
15963 -15980 0
15963 15968 -15982 0
15963 15969 -15984 0
c (0<=(aux1374 + aux1376 - aux1379))
-15969 15984 0
-15968 15982 0
-15963 15984 0
-15963 -15969 15982 0
-15963 -15968 15980 0
-15962 15982 0
-15962 -15969 15980 0
-15962 -15968 15979 0
c (( - aux1380 + SATLiteral(955) + SATLiteral(1075))<=0)
-1075 -15986 0
-955 -15986 0
-955 -1075 -15987 0
c (0<=( - aux1380 + SATLiteral(955) + SATLiteral(1075)))
1075 15987 0
955 15987 0
955 1075 15986 0
c (( - aux1381 + SATLiteral(970) + SATLiteral(1060))<=0)
-1060 -15989 0
-970 -15989 0
-970 -1060 -15990 0
c (0<=( - aux1381 + SATLiteral(970) + SATLiteral(1060)))
1060 15990 0
970 15990 0
970 1060 15989 0
c (( - aux1382 + SATLiteral(1000) + SATLiteral(1045))<=0)
-1045 -15992 0
-1000 -15992 0
-1000 -1045 -15993 0
c (0<=( - aux1382 + SATLiteral(1000) + SATLiteral(1045)))
1045 15993 0
1000 15993 0
1000 1045 15992 0
c (( - aux1383 + SATLiteral(1015) + SATLiteral(1030))<=0)
-1030 -15995 0
-1015 -15995 0
-1015 -1030 -15996 0
c (0<=( - aux1383 + SATLiteral(1015) + SATLiteral(1030)))
1030 15996 0
1015 15996 0
1015 1030 15995 0
c ((aux1383 - aux1384 + SATLiteral(985))<=0)
15995 -15998 0
15996 -15999 0
-985 -15998 0
-985 15995 -15999 0
-985 15996 -16001 0
c (0<=(aux1383 - aux1384 + SATLiteral(985)))
-15996 16001 0
-15995 15999 0
985 16001 0
985 -15996 15999 0
985 -15995 15998 0
c ((aux1380 + aux1382 - aux1385)<=0)
15992 -16003 0
15993 -16004 0
15986 -16003 0
15986 15992 -16004 0
15986 15993 -16006 0
15987 -16004 0
15987 15992 -16006 0
15987 15993 -16008 0
c (0<=(aux1380 + aux1382 - aux1385))
-15993 16008 0
-15992 16006 0
-15987 16008 0
-15987 -15993 16006 0
-15987 -15992 16004 0
-15986 16006 0
-15986 -15993 16004 0
-15986 -15992 16003 0
c ((SATLiteral(1082) + SATLiteral(1202) - aux1386)<=0)
-1202 -16010 0
-1082 -16010 0
-1082 -1202 -16011 0
c (0<=(SATLiteral(1082) + SATLiteral(1202) - aux1386))
1202 16011 0
1082 16011 0
1082 1202 16010 0
c ((SATLiteral(1097) + SATLiteral(1187) - aux1387)<=0)
-1187 -16013 0
-1097 -16013 0
-1097 -1187 -16014 0
c (0<=(SATLiteral(1097) + SATLiteral(1187) - aux1387))
1187 16014 0
1097 16014 0
1097 1187 16013 0
c ((SATLiteral(1127) + SATLiteral(1172) - aux1388)<=0)
-1172 -16016 0
-1127 -16016 0
-1127 -1172 -16017 0
c (0<=(SATLiteral(1127) + SATLiteral(1172) - aux1388))
1172 16017 0
1127 16017 0
1127 1172 16016 0
c ((SATLiteral(1142) + SATLiteral(1157) - aux1389)<=0)
-1157 -16019 0
-1142 -16019 0
-1142 -1157 -16020 0
c (0<=(SATLiteral(1142) + SATLiteral(1157) - aux1389))
1157 16020 0
1142 16020 0
1142 1157 16019 0
c ((SATLiteral(1112) + aux1389 - aux1390)<=0)
16019 -16022 0
16020 -16023 0
-1112 -16022 0
-1112 16019 -16023 0
-1112 16020 -16025 0
c (0<=(SATLiteral(1112) + aux1389 - aux1390))
-16020 16025 0
-16019 16023 0
1112 16025 0
1112 -16020 16023 0
1112 -16019 16022 0
c ((aux1386 + aux1388 - aux1391)<=0)
16016 -16027 0
16017 -16028 0
16010 -16027 0
16010 16016 -16028 0
16010 16017 -16030 0
16011 -16028 0
16011 16016 -16030 0
16011 16017 -16032 0
c (0<=(aux1386 + aux1388 - aux1391))
-16017 16032 0
-16016 16030 0
-16011 16032 0
-16011 -16017 16030 0
-16011 -16016 16028 0
-16010 16030 0
-16010 -16017 16028 0
-16010 -16016 16027 0
c ((SATLiteral(1083) + SATLiteral(1203) - aux1392)<=0)
-1203 -16034 0
-1083 -16034 0
-1083 -1203 -16035 0
c (0<=(SATLiteral(1083) + SATLiteral(1203) - aux1392))
1203 16035 0
1083 16035 0
1083 1203 16034 0
c ((SATLiteral(1098) + SATLiteral(1188) - aux1393)<=0)
-1188 -16037 0
-1098 -16037 0
-1098 -1188 -16038 0
c (0<=(SATLiteral(1098) + SATLiteral(1188) - aux1393))
1188 16038 0
1098 16038 0
1098 1188 16037 0
c ((SATLiteral(1128) + SATLiteral(1173) - aux1394)<=0)
-1173 -16040 0
-1128 -16040 0
-1128 -1173 -16041 0
c (0<=(SATLiteral(1128) + SATLiteral(1173) - aux1394))
1173 16041 0
1128 16041 0
1128 1173 16040 0
c ((SATLiteral(1143) + SATLiteral(1158) - aux1395)<=0)
-1158 -16043 0
-1143 -16043 0
-1143 -1158 -16044 0
c (0<=(SATLiteral(1143) + SATLiteral(1158) - aux1395))
1158 16044 0
1143 16044 0
1143 1158 16043 0
c ((SATLiteral(1113) + aux1395 - aux1396)<=0)
16043 -16046 0
16044 -16047 0
-1113 -16046 0
-1113 16043 -16047 0
-1113 16044 -16049 0
c (0<=(SATLiteral(1113) + aux1395 - aux1396))
-16044 16049 0
-16043 16047 0
1113 16049 0
1113 -16044 16047 0
1113 -16043 16046 0
c ((aux1392 + aux1394 - aux1397)<=0)
16040 -16051 0
16041 -16052 0
16034 -16051 0
16034 16040 -16052 0
16034 16041 -16054 0
16035 -16052 0
16035 16040 -16054 0
16035 16041 -16056 0
c (0<=(aux1392 + aux1394 - aux1397))
-16041 16056 0
-16040 16054 0
-16035 16056 0
-16035 -16041 16054 0
-16035 -16040 16052 0
-16034 16054 0
-16034 -16041 16052 0
-16034 -16040 16051 0
c ((SATLiteral(1084) + SATLiteral(1204) - aux1398)<=0)
-1204 -16058 0
-1084 -16058 0
-1084 -1204 -16059 0
c (0<=(SATLiteral(1084) + SATLiteral(1204) - aux1398))
1204 16059 0
1084 16059 0
1084 1204 16058 0
c ((SATLiteral(1099) + SATLiteral(1189) - aux1399)<=0)
-1189 -16061 0
-1099 -16061 0
-1099 -1189 -16062 0
c (0<=(SATLiteral(1099) + SATLiteral(1189) - aux1399))
1189 16062 0
1099 16062 0
1099 1189 16061 0
c ((SATLiteral(1129) + SATLiteral(1174) - aux1400)<=0)
-1174 -16064 0
-1129 -16064 0
-1129 -1174 -16065 0
c (0<=(SATLiteral(1129) + SATLiteral(1174) - aux1400))
1174 16065 0
1129 16065 0
1129 1174 16064 0
c ((SATLiteral(1144) + SATLiteral(1159) - aux1401)<=0)
-1159 -16067 0
-1144 -16067 0
-1144 -1159 -16068 0
c (0<=(SATLiteral(1144) + SATLiteral(1159) - aux1401))
1159 16068 0
1144 16068 0
1144 1159 16067 0
c ((SATLiteral(1114) + aux1401 - aux1402)<=0)
16067 -16070 0
16068 -16071 0
-1114 -16070 0
-1114 16067 -16071 0
-1114 16068 -16073 0
c (0<=(SATLiteral(1114) + aux1401 - aux1402))
-16068 16073 0
-16067 16071 0
1114 16073 0
1114 -16068 16071 0
1114 -16067 16070 0
c ((aux1398 + aux1400 - aux1403)<=0)
16064 -16075 0
16065 -16076 0
16058 -16075 0
16058 16064 -16076 0
16058 16065 -16078 0
16059 -16076 0
16059 16064 -16078 0
16059 16065 -16080 0
c (0<=(aux1398 + aux1400 - aux1403))
-16065 16080 0
-16064 16078 0
-16059 16080 0
-16059 -16065 16078 0
-16059 -16064 16076 0
-16058 16078 0
-16058 -16065 16076 0
-16058 -16064 16075 0
c ((SATLiteral(1085) + SATLiteral(1205) - aux1404)<=0)
-1205 -16082 0
-1085 -16082 0
-1085 -1205 -16083 0
c (0<=(SATLiteral(1085) + SATLiteral(1205) - aux1404))
1205 16083 0
1085 16083 0
1085 1205 16082 0
c ((SATLiteral(1100) + SATLiteral(1190) - aux1405)<=0)
-1190 -16085 0
-1100 -16085 0
-1100 -1190 -16086 0
c (0<=(SATLiteral(1100) + SATLiteral(1190) - aux1405))
1190 16086 0
1100 16086 0
1100 1190 16085 0
c ((SATLiteral(1130) + SATLiteral(1175) - aux1406)<=0)
-1175 -16088 0
-1130 -16088 0
-1130 -1175 -16089 0
c (0<=(SATLiteral(1130) + SATLiteral(1175) - aux1406))
1175 16089 0
1130 16089 0
1130 1175 16088 0
c ((SATLiteral(1145) + SATLiteral(1160) - aux1407)<=0)
-1160 -16091 0
-1145 -16091 0
-1145 -1160 -16092 0
c (0<=(SATLiteral(1145) + SATLiteral(1160) - aux1407))
1160 16092 0
1145 16092 0
1145 1160 16091 0
c ((SATLiteral(1115) + aux1407 - aux1408)<=0)
16091 -16094 0
16092 -16095 0
-1115 -16094 0
-1115 16091 -16095 0
-1115 16092 -16097 0
c (0<=(SATLiteral(1115) + aux1407 - aux1408))
-16092 16097 0
-16091 16095 0
1115 16097 0
1115 -16092 16095 0
1115 -16091 16094 0
c ((aux1404 + aux1406 - aux1409)<=0)
16088 -16099 0
16089 -16100 0
16082 -16099 0
16082 16088 -16100 0
16082 16089 -16102 0
16083 -16100 0
16083 16088 -16102 0
16083 16089 -16104 0
c (0<=(aux1404 + aux1406 - aux1409))
-16089 16104 0
-16088 16102 0
-16083 16104 0
-16083 -16089 16102 0
-16083 -16088 16100 0
-16082 16102 0
-16082 -16089 16100 0
-16082 -16088 16099 0
c ((SATLiteral(1086) + SATLiteral(1206) - aux1410)<=0)
-1206 -16106 0
-1086 -16106 0
-1086 -1206 -16107 0
c (0<=(SATLiteral(1086) + SATLiteral(1206) - aux1410))
1206 16107 0
1086 16107 0
1086 1206 16106 0
c ((SATLiteral(1101) + SATLiteral(1191) - aux1411)<=0)
-1191 -16109 0
-1101 -16109 0
-1101 -1191 -16110 0
c (0<=(SATLiteral(1101) + SATLiteral(1191) - aux1411))
1191 16110 0
1101 16110 0
1101 1191 16109 0
c ((SATLiteral(1131) + SATLiteral(1176) - aux1412)<=0)
-1176 -16112 0
-1131 -16112 0
-1131 -1176 -16113 0
c (0<=(SATLiteral(1131) + SATLiteral(1176) - aux1412))
1176 16113 0
1131 16113 0
1131 1176 16112 0
c ((SATLiteral(1146) + SATLiteral(1161) - aux1413)<=0)
-1161 -16115 0
-1146 -16115 0
-1146 -1161 -16116 0
c (0<=(SATLiteral(1146) + SATLiteral(1161) - aux1413))
1161 16116 0
1146 16116 0
1146 1161 16115 0
c ((SATLiteral(1116) + aux1413 - aux1414)<=0)
16115 -16118 0
16116 -16119 0
-1116 -16118 0
-1116 16115 -16119 0
-1116 16116 -16121 0
c (0<=(SATLiteral(1116) + aux1413 - aux1414))
-16116 16121 0
-16115 16119 0
1116 16121 0
1116 -16116 16119 0
1116 -16115 16118 0
c ((aux1410 + aux1412 - aux1415)<=0)
16112 -16123 0
16113 -16124 0
16106 -16123 0
16106 16112 -16124 0
16106 16113 -16126 0
16107 -16124 0
16107 16112 -16126 0
16107 16113 -16128 0
c (0<=(aux1410 + aux1412 - aux1415))
-16113 16128 0
-16112 16126 0
-16107 16128 0
-16107 -16113 16126 0
-16107 -16112 16124 0
-16106 16126 0
-16106 -16113 16124 0
-16106 -16112 16123 0
c ((SATLiteral(1087) + SATLiteral(1207) - aux1416)<=0)
-1207 -16130 0
-1087 -16130 0
-1087 -1207 -16131 0
c (0<=(SATLiteral(1087) + SATLiteral(1207) - aux1416))
1207 16131 0
1087 16131 0
1087 1207 16130 0
c ((SATLiteral(1102) + SATLiteral(1192) - aux1417)<=0)
-1192 -16133 0
-1102 -16133 0
-1102 -1192 -16134 0
c (0<=(SATLiteral(1102) + SATLiteral(1192) - aux1417))
1192 16134 0
1102 16134 0
1102 1192 16133 0
c ((SATLiteral(1132) + SATLiteral(1177) - aux1418)<=0)
-1177 -16136 0
-1132 -16136 0
-1132 -1177 -16137 0
c (0<=(SATLiteral(1132) + SATLiteral(1177) - aux1418))
1177 16137 0
1132 16137 0
1132 1177 16136 0
c ((SATLiteral(1147) + SATLiteral(1162) - aux1419)<=0)
-1162 -16139 0
-1147 -16139 0
-1147 -1162 -16140 0
c (0<=(SATLiteral(1147) + SATLiteral(1162) - aux1419))
1162 16140 0
1147 16140 0
1147 1162 16139 0
c ((SATLiteral(1117) + aux1419 - aux1420)<=0)
16139 -16142 0
16140 -16143 0
-1117 -16142 0
-1117 16139 -16143 0
-1117 16140 -16145 0
c (0<=(SATLiteral(1117) + aux1419 - aux1420))
-16140 16145 0
-16139 16143 0
1117 16145 0
1117 -16140 16143 0
1117 -16139 16142 0
c ((aux1416 + aux1418 - aux1421)<=0)
16136 -16147 0
16137 -16148 0
16130 -16147 0
16130 16136 -16148 0
16130 16137 -16150 0
16131 -16148 0
16131 16136 -16150 0
16131 16137 -16152 0
c (0<=(aux1416 + aux1418 - aux1421))
-16137 16152 0
-16136 16150 0
-16131 16152 0
-16131 -16137 16150 0
-16131 -16136 16148 0
-16130 16150 0
-16130 -16137 16148 0
-16130 -16136 16147 0
c ((SATLiteral(1088) + SATLiteral(1208) - aux1422)<=0)
-1208 -16154 0
-1088 -16154 0
-1088 -1208 -16155 0
c (0<=(SATLiteral(1088) + SATLiteral(1208) - aux1422))
1208 16155 0
1088 16155 0
1088 1208 16154 0
c ((SATLiteral(1103) + SATLiteral(1193) - aux1423)<=0)
-1193 -16157 0
-1103 -16157 0
-1103 -1193 -16158 0
c (0<=(SATLiteral(1103) + SATLiteral(1193) - aux1423))
1193 16158 0
1103 16158 0
1103 1193 16157 0
c ((SATLiteral(1133) + SATLiteral(1178) - aux1424)<=0)
-1178 -16160 0
-1133 -16160 0
-1133 -1178 -16161 0
c (0<=(SATLiteral(1133) + SATLiteral(1178) - aux1424))
1178 16161 0
1133 16161 0
1133 1178 16160 0
c ((SATLiteral(1148) + SATLiteral(1163) - aux1425)<=0)
-1163 -16163 0
-1148 -16163 0
-1148 -1163 -16164 0
c (0<=(SATLiteral(1148) + SATLiteral(1163) - aux1425))
1163 16164 0
1148 16164 0
1148 1163 16163 0
c ((SATLiteral(1118) + aux1425 - aux1426)<=0)
16163 -16166 0
16164 -16167 0
-1118 -16166 0
-1118 16163 -16167 0
-1118 16164 -16169 0
c (0<=(SATLiteral(1118) + aux1425 - aux1426))
-16164 16169 0
-16163 16167 0
1118 16169 0
1118 -16164 16167 0
1118 -16163 16166 0
c ((aux1422 + aux1424 - aux1427)<=0)
16160 -16171 0
16161 -16172 0
16154 -16171 0
16154 16160 -16172 0
16154 16161 -16174 0
16155 -16172 0
16155 16160 -16174 0
16155 16161 -16176 0
c (0<=(aux1422 + aux1424 - aux1427))
-16161 16176 0
-16160 16174 0
-16155 16176 0
-16155 -16161 16174 0
-16155 -16160 16172 0
-16154 16174 0
-16154 -16161 16172 0
-16154 -16160 16171 0
c ((SATLiteral(1089) + SATLiteral(1209) - aux1428)<=0)
-1209 -16178 0
-1089 -16178 0
-1089 -1209 -16179 0
c (0<=(SATLiteral(1089) + SATLiteral(1209) - aux1428))
1209 16179 0
1089 16179 0
1089 1209 16178 0
c ((SATLiteral(1104) + SATLiteral(1194) - aux1429)<=0)
-1194 -16181 0
-1104 -16181 0
-1104 -1194 -16182 0
c (0<=(SATLiteral(1104) + SATLiteral(1194) - aux1429))
1194 16182 0
1104 16182 0
1104 1194 16181 0
c ((SATLiteral(1134) + SATLiteral(1179) - aux1430)<=0)
-1179 -16184 0
-1134 -16184 0
-1134 -1179 -16185 0
c (0<=(SATLiteral(1134) + SATLiteral(1179) - aux1430))
1179 16185 0
1134 16185 0
1134 1179 16184 0
c ((SATLiteral(1149) + SATLiteral(1164) - aux1431)<=0)
-1164 -16187 0
-1149 -16187 0
-1149 -1164 -16188 0
c (0<=(SATLiteral(1149) + SATLiteral(1164) - aux1431))
1164 16188 0
1149 16188 0
1149 1164 16187 0
c ((SATLiteral(1119) + aux1431 - aux1432)<=0)
16187 -16190 0
16188 -16191 0
-1119 -16190 0
-1119 16187 -16191 0
-1119 16188 -16193 0
c (0<=(SATLiteral(1119) + aux1431 - aux1432))
-16188 16193 0
-16187 16191 0
1119 16193 0
1119 -16188 16191 0
1119 -16187 16190 0
c ((aux1428 + aux1430 - aux1433)<=0)
16184 -16195 0
16185 -16196 0
16178 -16195 0
16178 16184 -16196 0
16178 16185 -16198 0
16179 -16196 0
16179 16184 -16198 0
16179 16185 -16200 0
c (0<=(aux1428 + aux1430 - aux1433))
-16185 16200 0
-16184 16198 0
-16179 16200 0
-16179 -16185 16198 0
-16179 -16184 16196 0
-16178 16198 0
-16178 -16185 16196 0
-16178 -16184 16195 0
c ((SATLiteral(1090) + SATLiteral(1210) - aux1434)<=0)
-1210 -16202 0
-1090 -16202 0
-1090 -1210 -16203 0
c (0<=(SATLiteral(1090) + SATLiteral(1210) - aux1434))
1210 16203 0
1090 16203 0
1090 1210 16202 0
c ((SATLiteral(1105) + SATLiteral(1195) - aux1435)<=0)
-1195 -16205 0
-1105 -16205 0
-1105 -1195 -16206 0
c (0<=(SATLiteral(1105) + SATLiteral(1195) - aux1435))
1195 16206 0
1105 16206 0
1105 1195 16205 0
c ((SATLiteral(1135) + SATLiteral(1180) - aux1436)<=0)
-1180 -16208 0
-1135 -16208 0
-1135 -1180 -16209 0
c (0<=(SATLiteral(1135) + SATLiteral(1180) - aux1436))
1180 16209 0
1135 16209 0
1135 1180 16208 0
c ((SATLiteral(1150) + SATLiteral(1165) - aux1437)<=0)
-1165 -16211 0
-1150 -16211 0
-1150 -1165 -16212 0
c (0<=(SATLiteral(1150) + SATLiteral(1165) - aux1437))
1165 16212 0
1150 16212 0
1150 1165 16211 0
c ((SATLiteral(1120) + aux1437 - aux1438)<=0)
16211 -16214 0
16212 -16215 0
-1120 -16214 0
-1120 16211 -16215 0
-1120 16212 -16217 0
c (0<=(SATLiteral(1120) + aux1437 - aux1438))
-16212 16217 0
-16211 16215 0
1120 16217 0
1120 -16212 16215 0
1120 -16211 16214 0
c ((aux1434 + aux1436 - aux1439)<=0)
16208 -16219 0
16209 -16220 0
16202 -16219 0
16202 16208 -16220 0
16202 16209 -16222 0
16203 -16220 0
16203 16208 -16222 0
16203 16209 -16224 0
c (0<=(aux1434 + aux1436 - aux1439))
-16209 16224 0
-16208 16222 0
-16203 16224 0
-16203 -16209 16222 0
-16203 -16208 16220 0
-16202 16222 0
-16202 -16209 16220 0
-16202 -16208 16219 0
c ((SATLiteral(137) - aux1440 + SATLiteral(32))<=0)
-32 -16226 0
-137 -16226 0
-137 -32 -16227 0
c (0<=(SATLiteral(137) - aux1440 + SATLiteral(32)))
32 16227 0
137 16227 0
137 32 16226 0
c ((SATLiteral(152) - aux1441 + SATLiteral(17))<=0)
-17 -16229 0
-152 -16229 0
-152 -17 -16230 0
c (0<=(SATLiteral(152) - aux1441 + SATLiteral(17)))
17 16230 0
152 16230 0
152 17 16229 0
c (( - aux1442 + SATLiteral(272) + SATLiteral(2))<=0)
-2 -16232 0
-272 -16232 0
-272 -2 -16233 0
c (0<=( - aux1442 + SATLiteral(272) + SATLiteral(2)))
2 16233 0
272 16233 0
272 2 16232 0
c (( - aux1443 + SATLiteral(287) + SATLiteral(302))<=0)
-302 -16235 0
-287 -16235 0
-287 -302 -16236 0
c (0<=( - aux1443 + SATLiteral(287) + SATLiteral(302)))
302 16236 0
287 16236 0
287 302 16235 0
c ((SATLiteral(167) + aux1443 - aux1444)<=0)
16235 -16238 0
16236 -16239 0
-167 -16238 0
-167 16235 -16239 0
-167 16236 -16241 0
c (0<=(SATLiteral(167) + aux1443 - aux1444))
-16236 16241 0
-16235 16239 0
167 16241 0
167 -16236 16239 0
167 -16235 16238 0
c ((aux1440 + aux1442 - aux1445)<=0)
16232 -16243 0
16233 -16244 0
16226 -16243 0
16226 16232 -16244 0
16226 16233 -16246 0
16227 -16244 0
16227 16232 -16246 0
16227 16233 -16248 0
c (0<=(aux1440 + aux1442 - aux1445))
-16233 16248 0
-16232 16246 0
-16227 16248 0
-16227 -16233 16246 0
-16227 -16232 16244 0
-16226 16246 0
-16226 -16233 16244 0
-16226 -16232 16243 0
c ((SATLiteral(138) - aux1446 + SATLiteral(33))<=0)
-33 -16250 0
-138 -16250 0
-138 -33 -16251 0
c (0<=(SATLiteral(138) - aux1446 + SATLiteral(33)))
33 16251 0
138 16251 0
138 33 16250 0
c ((SATLiteral(153) - aux1447 + SATLiteral(18))<=0)
-18 -16253 0
-153 -16253 0
-153 -18 -16254 0
c (0<=(SATLiteral(153) - aux1447 + SATLiteral(18)))
18 16254 0
153 16254 0
153 18 16253 0
c (( - aux1448 + SATLiteral(273) + SATLiteral(3))<=0)
-3 -16256 0
-273 -16256 0
-273 -3 -16257 0
c (0<=( - aux1448 + SATLiteral(273) + SATLiteral(3)))
3 16257 0
273 16257 0
273 3 16256 0
c (( - aux1449 + SATLiteral(288) + SATLiteral(303))<=0)
-303 -16259 0
-288 -16259 0
-288 -303 -16260 0
c (0<=( - aux1449 + SATLiteral(288) + SATLiteral(303)))
303 16260 0
288 16260 0
288 303 16259 0
c ((SATLiteral(168) + aux1449 - aux1450)<=0)
16259 -16262 0
16260 -16263 0
-168 -16262 0
-168 16259 -16263 0
-168 16260 -16265 0
c (0<=(SATLiteral(168) + aux1449 - aux1450))
-16260 16265 0
-16259 16263 0
168 16265 0
168 -16260 16263 0
168 -16259 16262 0
c ((aux1446 + aux1448 - aux1451)<=0)
16256 -16267 0
16257 -16268 0
16250 -16267 0
16250 16256 -16268 0
16250 16257 -16270 0
16251 -16268 0
16251 16256 -16270 0
16251 16257 -16272 0
c (0<=(aux1446 + aux1448 - aux1451))
-16257 16272 0
-16256 16270 0
-16251 16272 0
-16251 -16257 16270 0
-16251 -16256 16268 0
-16250 16270 0
-16250 -16257 16268 0
-16250 -16256 16267 0
c ((SATLiteral(139) - aux1452 + SATLiteral(34))<=0)
-34 -16274 0
-139 -16274 0
-139 -34 -16275 0
c (0<=(SATLiteral(139) - aux1452 + SATLiteral(34)))
34 16275 0
139 16275 0
139 34 16274 0
c ((SATLiteral(154) - aux1453 + SATLiteral(19))<=0)
-19 -16277 0
-154 -16277 0
-154 -19 -16278 0
c (0<=(SATLiteral(154) - aux1453 + SATLiteral(19)))
19 16278 0
154 16278 0
154 19 16277 0
c (( - aux1454 + SATLiteral(274) + SATLiteral(4))<=0)
-4 -16280 0
-274 -16280 0
-274 -4 -16281 0
c (0<=( - aux1454 + SATLiteral(274) + SATLiteral(4)))
4 16281 0
274 16281 0
274 4 16280 0
c (( - aux1455 + SATLiteral(289) + SATLiteral(304))<=0)
-304 -16283 0
-289 -16283 0
-289 -304 -16284 0
c (0<=( - aux1455 + SATLiteral(289) + SATLiteral(304)))
304 16284 0
289 16284 0
289 304 16283 0
c ((SATLiteral(169) + aux1455 - aux1456)<=0)
16283 -16286 0
16284 -16287 0
-169 -16286 0
-169 16283 -16287 0
-169 16284 -16289 0
c (0<=(SATLiteral(169) + aux1455 - aux1456))
-16284 16289 0
-16283 16287 0
169 16289 0
169 -16284 16287 0
169 -16283 16286 0
c ((aux1452 + aux1454 - aux1457)<=0)
16280 -16291 0
16281 -16292 0
16274 -16291 0
16274 16280 -16292 0
16274 16281 -16294 0
16275 -16292 0
16275 16280 -16294 0
16275 16281 -16296 0
c (0<=(aux1452 + aux1454 - aux1457))
-16281 16296 0
-16280 16294 0
-16275 16296 0
-16275 -16281 16294 0
-16275 -16280 16292 0
-16274 16294 0
-16274 -16281 16292 0
-16274 -16280 16291 0
c ((SATLiteral(140) - aux1458 + SATLiteral(35))<=0)
-35 -16298 0
-140 -16298 0
-140 -35 -16299 0
c (0<=(SATLiteral(140) - aux1458 + SATLiteral(35)))
35 16299 0
140 16299 0
140 35 16298 0
c ((SATLiteral(155) - aux1459 + SATLiteral(20))<=0)
-20 -16301 0
-155 -16301 0
-155 -20 -16302 0
c (0<=(SATLiteral(155) - aux1459 + SATLiteral(20)))
20 16302 0
155 16302 0
155 20 16301 0
c (( - aux1460 + SATLiteral(275) + SATLiteral(5))<=0)
-5 -16304 0
-275 -16304 0
-275 -5 -16305 0
c (0<=( - aux1460 + SATLiteral(275) + SATLiteral(5)))
5 16305 0
275 16305 0
275 5 16304 0
c (( - aux1461 + SATLiteral(290) + SATLiteral(305))<=0)
-305 -16307 0
-290 -16307 0
-290 -305 -16308 0
c (0<=( - aux1461 + SATLiteral(290) + SATLiteral(305)))
305 16308 0
290 16308 0
290 305 16307 0
c ((SATLiteral(170) + aux1461 - aux1462)<=0)
16307 -16310 0
16308 -16311 0
-170 -16310 0
-170 16307 -16311 0
-170 16308 -16313 0
c (0<=(SATLiteral(170) + aux1461 - aux1462))
-16308 16313 0
-16307 16311 0
170 16313 0
170 -16308 16311 0
170 -16307 16310 0
c ((aux1458 + aux1460 - aux1463)<=0)
16304 -16315 0
16305 -16316 0
16298 -16315 0
16298 16304 -16316 0
16298 16305 -16318 0
16299 -16316 0
16299 16304 -16318 0
16299 16305 -16320 0
c (0<=(aux1458 + aux1460 - aux1463))
-16305 16320 0
-16304 16318 0
-16299 16320 0
-16299 -16305 16318 0
-16299 -16304 16316 0
-16298 16318 0
-16298 -16305 16316 0
-16298 -16304 16315 0
c ((SATLiteral(141) - aux1464 + SATLiteral(36))<=0)
-36 -16322 0
-141 -16322 0
-141 -36 -16323 0
c (0<=(SATLiteral(141) - aux1464 + SATLiteral(36)))
36 16323 0
141 16323 0
141 36 16322 0
c ((SATLiteral(156) - aux1465 + SATLiteral(21))<=0)
-21 -16325 0
-156 -16325 0
-156 -21 -16326 0
c (0<=(SATLiteral(156) - aux1465 + SATLiteral(21)))
21 16326 0
156 16326 0
156 21 16325 0
c (( - aux1466 + SATLiteral(276) + SATLiteral(6))<=0)
-6 -16328 0
-276 -16328 0
-276 -6 -16329 0
c (0<=( - aux1466 + SATLiteral(276) + SATLiteral(6)))
6 16329 0
276 16329 0
276 6 16328 0
c (( - aux1467 + SATLiteral(291) + SATLiteral(306))<=0)
-306 -16331 0
-291 -16331 0
-291 -306 -16332 0
c (0<=( - aux1467 + SATLiteral(291) + SATLiteral(306)))
306 16332 0
291 16332 0
291 306 16331 0
c ((SATLiteral(171) + aux1467 - aux1468)<=0)
16331 -16334 0
16332 -16335 0
-171 -16334 0
-171 16331 -16335 0
-171 16332 -16337 0
c (0<=(SATLiteral(171) + aux1467 - aux1468))
-16332 16337 0
-16331 16335 0
171 16337 0
171 -16332 16335 0
171 -16331 16334 0
c ((aux1464 + aux1466 - aux1469)<=0)
16328 -16339 0
16329 -16340 0
16322 -16339 0
16322 16328 -16340 0
16322 16329 -16342 0
16323 -16340 0
16323 16328 -16342 0
16323 16329 -16344 0
c (0<=(aux1464 + aux1466 - aux1469))
-16329 16344 0
-16328 16342 0
-16323 16344 0
-16323 -16329 16342 0
-16323 -16328 16340 0
-16322 16342 0
-16322 -16329 16340 0
-16322 -16328 16339 0
c ((SATLiteral(142) - aux1470 + SATLiteral(37))<=0)
-37 -16346 0
-142 -16346 0
-142 -37 -16347 0
c (0<=(SATLiteral(142) - aux1470 + SATLiteral(37)))
37 16347 0
142 16347 0
142 37 16346 0
c ((SATLiteral(157) - aux1471 + SATLiteral(22))<=0)
-22 -16349 0
-157 -16349 0
-157 -22 -16350 0
c (0<=(SATLiteral(157) - aux1471 + SATLiteral(22)))
22 16350 0
157 16350 0
157 22 16349 0
c (( - aux1472 + SATLiteral(277) + SATLiteral(7))<=0)
-7 -16352 0
-277 -16352 0
-277 -7 -16353 0
c (0<=( - aux1472 + SATLiteral(277) + SATLiteral(7)))
7 16353 0
277 16353 0
277 7 16352 0
c (( - aux1473 + SATLiteral(292) + SATLiteral(307))<=0)
-307 -16355 0
-292 -16355 0
-292 -307 -16356 0
c (0<=( - aux1473 + SATLiteral(292) + SATLiteral(307)))
307 16356 0
292 16356 0
292 307 16355 0
c ((SATLiteral(172) + aux1473 - aux1474)<=0)
16355 -16358 0
16356 -16359 0
-172 -16358 0
-172 16355 -16359 0
-172 16356 -16361 0
c (0<=(SATLiteral(172) + aux1473 - aux1474))
-16356 16361 0
-16355 16359 0
172 16361 0
172 -16356 16359 0
172 -16355 16358 0
c ((aux1470 + aux1472 - aux1475)<=0)
16352 -16363 0
16353 -16364 0
16346 -16363 0
16346 16352 -16364 0
16346 16353 -16366 0
16347 -16364 0
16347 16352 -16366 0
16347 16353 -16368 0
c (0<=(aux1470 + aux1472 - aux1475))
-16353 16368 0
-16352 16366 0
-16347 16368 0
-16347 -16353 16366 0
-16347 -16352 16364 0
-16346 16366 0
-16346 -16353 16364 0
-16346 -16352 16363 0
c ((SATLiteral(143) - aux1476 + SATLiteral(38))<=0)
-38 -16370 0
-143 -16370 0
-143 -38 -16371 0
c (0<=(SATLiteral(143) - aux1476 + SATLiteral(38)))
38 16371 0
143 16371 0
143 38 16370 0
c ((SATLiteral(158) - aux1477 + SATLiteral(23))<=0)
-23 -16373 0
-158 -16373 0
-158 -23 -16374 0
c (0<=(SATLiteral(158) - aux1477 + SATLiteral(23)))
23 16374 0
158 16374 0
158 23 16373 0
c (( - aux1478 + SATLiteral(278) + SATLiteral(8))<=0)
-8 -16376 0
-278 -16376 0
-278 -8 -16377 0
c (0<=( - aux1478 + SATLiteral(278) + SATLiteral(8)))
8 16377 0
278 16377 0
278 8 16376 0
c (( - aux1479 + SATLiteral(293) + SATLiteral(308))<=0)
-308 -16379 0
-293 -16379 0
-293 -308 -16380 0
c (0<=( - aux1479 + SATLiteral(293) + SATLiteral(308)))
308 16380 0
293 16380 0
293 308 16379 0
c ((SATLiteral(173) + aux1479 - aux1480)<=0)
16379 -16382 0
16380 -16383 0
-173 -16382 0
-173 16379 -16383 0
-173 16380 -16385 0
c (0<=(SATLiteral(173) + aux1479 - aux1480))
-16380 16385 0
-16379 16383 0
173 16385 0
173 -16380 16383 0
173 -16379 16382 0
c ((aux1476 + aux1478 - aux1481)<=0)
16376 -16387 0
16377 -16388 0
16370 -16387 0
16370 16376 -16388 0
16370 16377 -16390 0
16371 -16388 0
16371 16376 -16390 0
16371 16377 -16392 0
c (0<=(aux1476 + aux1478 - aux1481))
-16377 16392 0
-16376 16390 0
-16371 16392 0
-16371 -16377 16390 0
-16371 -16376 16388 0
-16370 16390 0
-16370 -16377 16388 0
-16370 -16376 16387 0
c ((SATLiteral(144) - aux1482 + SATLiteral(39))<=0)
-39 -16394 0
-144 -16394 0
-144 -39 -16395 0
c (0<=(SATLiteral(144) - aux1482 + SATLiteral(39)))
39 16395 0
144 16395 0
144 39 16394 0
c ((SATLiteral(159) - aux1483 + SATLiteral(24))<=0)
-24 -16397 0
-159 -16397 0
-159 -24 -16398 0
c (0<=(SATLiteral(159) - aux1483 + SATLiteral(24)))
24 16398 0
159 16398 0
159 24 16397 0
c (( - aux1484 + SATLiteral(279) + SATLiteral(9))<=0)
-9 -16400 0
-279 -16400 0
-279 -9 -16401 0
c (0<=( - aux1484 + SATLiteral(279) + SATLiteral(9)))
9 16401 0
279 16401 0
279 9 16400 0
c (( - aux1485 + SATLiteral(294) + SATLiteral(309))<=0)
-309 -16403 0
-294 -16403 0
-294 -309 -16404 0
c (0<=( - aux1485 + SATLiteral(294) + SATLiteral(309)))
309 16404 0
294 16404 0
294 309 16403 0
c ((SATLiteral(174) + aux1485 - aux1486)<=0)
16403 -16406 0
16404 -16407 0
-174 -16406 0
-174 16403 -16407 0
-174 16404 -16409 0
c (0<=(SATLiteral(174) + aux1485 - aux1486))
-16404 16409 0
-16403 16407 0
174 16409 0
174 -16404 16407 0
174 -16403 16406 0
c ((aux1482 + aux1484 - aux1487)<=0)
16400 -16411 0
16401 -16412 0
16394 -16411 0
16394 16400 -16412 0
16394 16401 -16414 0
16395 -16412 0
16395 16400 -16414 0
16395 16401 -16416 0
c (0<=(aux1482 + aux1484 - aux1487))
-16401 16416 0
-16400 16414 0
-16395 16416 0
-16395 -16401 16414 0
-16395 -16400 16412 0
-16394 16414 0
-16394 -16401 16412 0
-16394 -16400 16411 0
c ((SATLiteral(145) - aux1488 + SATLiteral(40))<=0)
-40 -16418 0
-145 -16418 0
-145 -40 -16419 0
c (0<=(SATLiteral(145) - aux1488 + SATLiteral(40)))
40 16419 0
145 16419 0
145 40 16418 0
c ((SATLiteral(160) - aux1489 + SATLiteral(25))<=0)
-25 -16421 0
-160 -16421 0
-160 -25 -16422 0
c (0<=(SATLiteral(160) - aux1489 + SATLiteral(25)))
25 16422 0
160 16422 0
160 25 16421 0
c (( - aux1490 + SATLiteral(280) + SATLiteral(10))<=0)
-10 -16424 0
-280 -16424 0
-280 -10 -16425 0
c (0<=( - aux1490 + SATLiteral(280) + SATLiteral(10)))
10 16425 0
280 16425 0
280 10 16424 0
c (( - aux1491 + SATLiteral(295) + SATLiteral(310))<=0)
-310 -16427 0
-295 -16427 0
-295 -310 -16428 0
c (0<=( - aux1491 + SATLiteral(295) + SATLiteral(310)))
310 16428 0
295 16428 0
295 310 16427 0
c ((SATLiteral(175) + aux1491 - aux1492)<=0)
16427 -16430 0
16428 -16431 0
-175 -16430 0
-175 16427 -16431 0
-175 16428 -16433 0
c (0<=(SATLiteral(175) + aux1491 - aux1492))
-16428 16433 0
-16427 16431 0
175 16433 0
175 -16428 16431 0
175 -16427 16430 0
c ((aux1488 + aux1490 - aux1493)<=0)
16424 -16435 0
16425 -16436 0
16418 -16435 0
16418 16424 -16436 0
16418 16425 -16438 0
16419 -16436 0
16419 16424 -16438 0
16419 16425 -16440 0
c (0<=(aux1488 + aux1490 - aux1493))
-16425 16440 0
-16424 16438 0
-16419 16440 0
-16419 -16425 16438 0
-16419 -16424 16436 0
-16418 16438 0
-16418 -16425 16436 0
-16418 -16424 16435 0
c ((SATLiteral(182) - aux1494 + SATLiteral(77))<=0)
-77 -16442 0
-182 -16442 0
-182 -77 -16443 0
c (0<=(SATLiteral(182) - aux1494 + SATLiteral(77)))
77 16443 0
182 16443 0
182 77 16442 0
c ((SATLiteral(197) - aux1495 + SATLiteral(62))<=0)
-62 -16445 0
-197 -16445 0
-197 -62 -16446 0
c (0<=(SATLiteral(197) - aux1495 + SATLiteral(62)))
62 16446 0
197 16446 0
197 62 16445 0
c (( - aux1496 + SATLiteral(317) + SATLiteral(47))<=0)
-47 -16448 0
-317 -16448 0
-317 -47 -16449 0
c (0<=( - aux1496 + SATLiteral(317) + SATLiteral(47)))
47 16449 0
317 16449 0
317 47 16448 0
c (( - aux1497 + SATLiteral(332) + SATLiteral(347))<=0)
-347 -16451 0
-332 -16451 0
-332 -347 -16452 0
c (0<=( - aux1497 + SATLiteral(332) + SATLiteral(347)))
347 16452 0
332 16452 0
332 347 16451 0
c ((SATLiteral(212) + aux1497 - aux1498)<=0)
16451 -16454 0
16452 -16455 0
-212 -16454 0
-212 16451 -16455 0
-212 16452 -16457 0
c (0<=(SATLiteral(212) + aux1497 - aux1498))
-16452 16457 0
-16451 16455 0
212 16457 0
212 -16452 16455 0
212 -16451 16454 0
c ((aux1494 + aux1496 - aux1499)<=0)
16448 -16459 0
16449 -16460 0
16442 -16459 0
16442 16448 -16460 0
16442 16449 -16462 0
16443 -16460 0
16443 16448 -16462 0
16443 16449 -16464 0
c (0<=(aux1494 + aux1496 - aux1499))
-16449 16464 0
-16448 16462 0
-16443 16464 0
-16443 -16449 16462 0
-16443 -16448 16460 0
-16442 16462 0
-16442 -16449 16460 0
-16442 -16448 16459 0
c ((SATLiteral(183) - aux1500 + SATLiteral(78))<=0)
-78 -16466 0
-183 -16466 0
-183 -78 -16467 0
c (0<=(SATLiteral(183) - aux1500 + SATLiteral(78)))
78 16467 0
183 16467 0
183 78 16466 0
c ((SATLiteral(198) - aux1501 + SATLiteral(63))<=0)
-63 -16469 0
-198 -16469 0
-198 -63 -16470 0
c (0<=(SATLiteral(198) - aux1501 + SATLiteral(63)))
63 16470 0
198 16470 0
198 63 16469 0
c (( - aux1502 + SATLiteral(318) + SATLiteral(48))<=0)
-48 -16472 0
-318 -16472 0
-318 -48 -16473 0
c (0<=( - aux1502 + SATLiteral(318) + SATLiteral(48)))
48 16473 0
318 16473 0
318 48 16472 0
c (( - aux1503 + SATLiteral(333) + SATLiteral(348))<=0)
-348 -16475 0
-333 -16475 0
-333 -348 -16476 0
c (0<=( - aux1503 + SATLiteral(333) + SATLiteral(348)))
348 16476 0
333 16476 0
333 348 16475 0
c ((SATLiteral(213) + aux1503 - aux1504)<=0)
16475 -16478 0
16476 -16479 0
-213 -16478 0
-213 16475 -16479 0
-213 16476 -16481 0
c (0<=(SATLiteral(213) + aux1503 - aux1504))
-16476 16481 0
-16475 16479 0
213 16481 0
213 -16476 16479 0
213 -16475 16478 0
c ((aux1500 + aux1502 - aux1505)<=0)
16472 -16483 0
16473 -16484 0
16466 -16483 0
16466 16472 -16484 0
16466 16473 -16486 0
16467 -16484 0
16467 16472 -16486 0
16467 16473 -16488 0
c (0<=(aux1500 + aux1502 - aux1505))
-16473 16488 0
-16472 16486 0
-16467 16488 0
-16467 -16473 16486 0
-16467 -16472 16484 0
-16466 16486 0
-16466 -16473 16484 0
-16466 -16472 16483 0
c ((SATLiteral(184) - aux1506 + SATLiteral(79))<=0)
-79 -16490 0
-184 -16490 0
-184 -79 -16491 0
c (0<=(SATLiteral(184) - aux1506 + SATLiteral(79)))
79 16491 0
184 16491 0
184 79 16490 0
c ((SATLiteral(199) - aux1507 + SATLiteral(64))<=0)
-64 -16493 0
-199 -16493 0
-199 -64 -16494 0
c (0<=(SATLiteral(199) - aux1507 + SATLiteral(64)))
64 16494 0
199 16494 0
199 64 16493 0
c (( - aux1508 + SATLiteral(319) + SATLiteral(49))<=0)
-49 -16496 0
-319 -16496 0
-319 -49 -16497 0
c (0<=( - aux1508 + SATLiteral(319) + SATLiteral(49)))
49 16497 0
319 16497 0
319 49 16496 0
c (( - aux1509 + SATLiteral(334) + SATLiteral(349))<=0)
-349 -16499 0
-334 -16499 0
-334 -349 -16500 0
c (0<=( - aux1509 + SATLiteral(334) + SATLiteral(349)))
349 16500 0
334 16500 0
334 349 16499 0
c ((SATLiteral(214) + aux1509 - aux1510)<=0)
16499 -16502 0
16500 -16503 0
-214 -16502 0
-214 16499 -16503 0
-214 16500 -16505 0
c (0<=(SATLiteral(214) + aux1509 - aux1510))
-16500 16505 0
-16499 16503 0
214 16505 0
214 -16500 16503 0
214 -16499 16502 0
c ((aux1506 + aux1508 - aux1511)<=0)
16496 -16507 0
16497 -16508 0
16490 -16507 0
16490 16496 -16508 0
16490 16497 -16510 0
16491 -16508 0
16491 16496 -16510 0
16491 16497 -16512 0
c (0<=(aux1506 + aux1508 - aux1511))
-16497 16512 0
-16496 16510 0
-16491 16512 0
-16491 -16497 16510 0
-16491 -16496 16508 0
-16490 16510 0
-16490 -16497 16508 0
-16490 -16496 16507 0
c ((SATLiteral(185) - aux1512 + SATLiteral(80))<=0)
-80 -16514 0
-185 -16514 0
-185 -80 -16515 0
c (0<=(SATLiteral(185) - aux1512 + SATLiteral(80)))
80 16515 0
185 16515 0
185 80 16514 0
c ((SATLiteral(200) - aux1513 + SATLiteral(65))<=0)
-65 -16517 0
-200 -16517 0
-200 -65 -16518 0
c (0<=(SATLiteral(200) - aux1513 + SATLiteral(65)))
65 16518 0
200 16518 0
200 65 16517 0
c (( - aux1514 + SATLiteral(320) + SATLiteral(50))<=0)
-50 -16520 0
-320 -16520 0
-320 -50 -16521 0
c (0<=( - aux1514 + SATLiteral(320) + SATLiteral(50)))
50 16521 0
320 16521 0
320 50 16520 0
c (( - aux1515 + SATLiteral(335) + SATLiteral(350))<=0)
-350 -16523 0
-335 -16523 0
-335 -350 -16524 0
c (0<=( - aux1515 + SATLiteral(335) + SATLiteral(350)))
350 16524 0
335 16524 0
335 350 16523 0
c ((SATLiteral(215) + aux1515 - aux1516)<=0)
16523 -16526 0
16524 -16527 0
-215 -16526 0
-215 16523 -16527 0
-215 16524 -16529 0
c (0<=(SATLiteral(215) + aux1515 - aux1516))
-16524 16529 0
-16523 16527 0
215 16529 0
215 -16524 16527 0
215 -16523 16526 0
c ((aux1512 + aux1514 - aux1517)<=0)
16520 -16531 0
16521 -16532 0
16514 -16531 0
16514 16520 -16532 0
16514 16521 -16534 0
16515 -16532 0
16515 16520 -16534 0
16515 16521 -16536 0
c (0<=(aux1512 + aux1514 - aux1517))
-16521 16536 0
-16520 16534 0
-16515 16536 0
-16515 -16521 16534 0
-16515 -16520 16532 0
-16514 16534 0
-16514 -16521 16532 0
-16514 -16520 16531 0
c ((SATLiteral(186) - aux1518 + SATLiteral(81))<=0)
-81 -16538 0
-186 -16538 0
-186 -81 -16539 0
c (0<=(SATLiteral(186) - aux1518 + SATLiteral(81)))
81 16539 0
186 16539 0
186 81 16538 0
c ((SATLiteral(201) - aux1519 + SATLiteral(66))<=0)
-66 -16541 0
-201 -16541 0
-201 -66 -16542 0
c (0<=(SATLiteral(201) - aux1519 + SATLiteral(66)))
66 16542 0
201 16542 0
201 66 16541 0
c (( - aux1520 + SATLiteral(321) + SATLiteral(51))<=0)
-51 -16544 0
-321 -16544 0
-321 -51 -16545 0
c (0<=( - aux1520 + SATLiteral(321) + SATLiteral(51)))
51 16545 0
321 16545 0
321 51 16544 0
c (( - aux1521 + SATLiteral(336) + SATLiteral(351))<=0)
-351 -16547 0
-336 -16547 0
-336 -351 -16548 0
c (0<=( - aux1521 + SATLiteral(336) + SATLiteral(351)))
351 16548 0
336 16548 0
336 351 16547 0
c ((SATLiteral(216) + aux1521 - aux1522)<=0)
16547 -16550 0
16548 -16551 0
-216 -16550 0
-216 16547 -16551 0
-216 16548 -16553 0
c (0<=(SATLiteral(216) + aux1521 - aux1522))
-16548 16553 0
-16547 16551 0
216 16553 0
216 -16548 16551 0
216 -16547 16550 0
c ((aux1518 + aux1520 - aux1523)<=0)
16544 -16555 0
16545 -16556 0
16538 -16555 0
16538 16544 -16556 0
16538 16545 -16558 0
16539 -16556 0
16539 16544 -16558 0
16539 16545 -16560 0
c (0<=(aux1518 + aux1520 - aux1523))
-16545 16560 0
-16544 16558 0
-16539 16560 0
-16539 -16545 16558 0
-16539 -16544 16556 0
-16538 16558 0
-16538 -16545 16556 0
-16538 -16544 16555 0
c ((SATLiteral(187) - aux1524 + SATLiteral(82))<=0)
-82 -16562 0
-187 -16562 0
-187 -82 -16563 0
c (0<=(SATLiteral(187) - aux1524 + SATLiteral(82)))
82 16563 0
187 16563 0
187 82 16562 0
c ((SATLiteral(202) - aux1525 + SATLiteral(67))<=0)
-67 -16565 0
-202 -16565 0
-202 -67 -16566 0
c (0<=(SATLiteral(202) - aux1525 + SATLiteral(67)))
67 16566 0
202 16566 0
202 67 16565 0
c (( - aux1526 + SATLiteral(322) + SATLiteral(52))<=0)
-52 -16568 0
-322 -16568 0
-322 -52 -16569 0
c (0<=( - aux1526 + SATLiteral(322) + SATLiteral(52)))
52 16569 0
322 16569 0
322 52 16568 0
c (( - aux1527 + SATLiteral(337) + SATLiteral(352))<=0)
-352 -16571 0
-337 -16571 0
-337 -352 -16572 0
c (0<=( - aux1527 + SATLiteral(337) + SATLiteral(352)))
352 16572 0
337 16572 0
337 352 16571 0
c ((SATLiteral(217) + aux1527 - aux1528)<=0)
16571 -16574 0
16572 -16575 0
-217 -16574 0
-217 16571 -16575 0
-217 16572 -16577 0
c (0<=(SATLiteral(217) + aux1527 - aux1528))
-16572 16577 0
-16571 16575 0
217 16577 0
217 -16572 16575 0
217 -16571 16574 0
c ((aux1524 + aux1526 - aux1529)<=0)
16568 -16579 0
16569 -16580 0
16562 -16579 0
16562 16568 -16580 0
16562 16569 -16582 0
16563 -16580 0
16563 16568 -16582 0
16563 16569 -16584 0
c (0<=(aux1524 + aux1526 - aux1529))
-16569 16584 0
-16568 16582 0
-16563 16584 0
-16563 -16569 16582 0
-16563 -16568 16580 0
-16562 16582 0
-16562 -16569 16580 0
-16562 -16568 16579 0
c ((SATLiteral(188) - aux1530 + SATLiteral(83))<=0)
-83 -16586 0
-188 -16586 0
-188 -83 -16587 0
c (0<=(SATLiteral(188) - aux1530 + SATLiteral(83)))
83 16587 0
188 16587 0
188 83 16586 0
c ((SATLiteral(203) - aux1531 + SATLiteral(68))<=0)
-68 -16589 0
-203 -16589 0
-203 -68 -16590 0
c (0<=(SATLiteral(203) - aux1531 + SATLiteral(68)))
68 16590 0
203 16590 0
203 68 16589 0
c (( - aux1532 + SATLiteral(323) + SATLiteral(53))<=0)
-53 -16592 0
-323 -16592 0
-323 -53 -16593 0
c (0<=( - aux1532 + SATLiteral(323) + SATLiteral(53)))
53 16593 0
323 16593 0
323 53 16592 0
c (( - aux1533 + SATLiteral(338) + SATLiteral(353))<=0)
-353 -16595 0
-338 -16595 0
-338 -353 -16596 0
c (0<=( - aux1533 + SATLiteral(338) + SATLiteral(353)))
353 16596 0
338 16596 0
338 353 16595 0
c ((SATLiteral(218) + aux1533 - aux1534)<=0)
16595 -16598 0
16596 -16599 0
-218 -16598 0
-218 16595 -16599 0
-218 16596 -16601 0
c (0<=(SATLiteral(218) + aux1533 - aux1534))
-16596 16601 0
-16595 16599 0
218 16601 0
218 -16596 16599 0
218 -16595 16598 0
c ((aux1530 + aux1532 - aux1535)<=0)
16592 -16603 0
16593 -16604 0
16586 -16603 0
16586 16592 -16604 0
16586 16593 -16606 0
16587 -16604 0
16587 16592 -16606 0
16587 16593 -16608 0
c (0<=(aux1530 + aux1532 - aux1535))
-16593 16608 0
-16592 16606 0
-16587 16608 0
-16587 -16593 16606 0
-16587 -16592 16604 0
-16586 16606 0
-16586 -16593 16604 0
-16586 -16592 16603 0
c ((SATLiteral(189) - aux1536 + SATLiteral(84))<=0)
-84 -16610 0
-189 -16610 0
-189 -84 -16611 0
c (0<=(SATLiteral(189) - aux1536 + SATLiteral(84)))
84 16611 0
189 16611 0
189 84 16610 0
c ((SATLiteral(204) - aux1537 + SATLiteral(69))<=0)
-69 -16613 0
-204 -16613 0
-204 -69 -16614 0
c (0<=(SATLiteral(204) - aux1537 + SATLiteral(69)))
69 16614 0
204 16614 0
204 69 16613 0
c (( - aux1538 + SATLiteral(324) + SATLiteral(54))<=0)
-54 -16616 0
-324 -16616 0
-324 -54 -16617 0
c (0<=( - aux1538 + SATLiteral(324) + SATLiteral(54)))
54 16617 0
324 16617 0
324 54 16616 0
c (( - aux1539 + SATLiteral(339) + SATLiteral(354))<=0)
-354 -16619 0
-339 -16619 0
-339 -354 -16620 0
c (0<=( - aux1539 + SATLiteral(339) + SATLiteral(354)))
354 16620 0
339 16620 0
339 354 16619 0
c ((SATLiteral(219) + aux1539 - aux1540)<=0)
16619 -16622 0
16620 -16623 0
-219 -16622 0
-219 16619 -16623 0
-219 16620 -16625 0
c (0<=(SATLiteral(219) + aux1539 - aux1540))
-16620 16625 0
-16619 16623 0
219 16625 0
219 -16620 16623 0
219 -16619 16622 0
c ((aux1536 + aux1538 - aux1541)<=0)
16616 -16627 0
16617 -16628 0
16610 -16627 0
16610 16616 -16628 0
16610 16617 -16630 0
16611 -16628 0
16611 16616 -16630 0
16611 16617 -16632 0
c (0<=(aux1536 + aux1538 - aux1541))
-16617 16632 0
-16616 16630 0
-16611 16632 0
-16611 -16617 16630 0
-16611 -16616 16628 0
-16610 16630 0
-16610 -16617 16628 0
-16610 -16616 16627 0
c ((SATLiteral(190) - aux1542 + SATLiteral(85))<=0)
-85 -16634 0
-190 -16634 0
-190 -85 -16635 0
c (0<=(SATLiteral(190) - aux1542 + SATLiteral(85)))
85 16635 0
190 16635 0
190 85 16634 0
c ((SATLiteral(205) - aux1543 + SATLiteral(70))<=0)
-70 -16637 0
-205 -16637 0
-205 -70 -16638 0
c (0<=(SATLiteral(205) - aux1543 + SATLiteral(70)))
70 16638 0
205 16638 0
205 70 16637 0
c (( - aux1544 + SATLiteral(325) + SATLiteral(55))<=0)
-55 -16640 0
-325 -16640 0
-325 -55 -16641 0
c (0<=( - aux1544 + SATLiteral(325) + SATLiteral(55)))
55 16641 0
325 16641 0
325 55 16640 0
c (( - aux1545 + SATLiteral(340) + SATLiteral(355))<=0)
-355 -16643 0
-340 -16643 0
-340 -355 -16644 0
c (0<=( - aux1545 + SATLiteral(340) + SATLiteral(355)))
355 16644 0
340 16644 0
340 355 16643 0
c ((SATLiteral(220) + aux1545 - aux1546)<=0)
16643 -16646 0
16644 -16647 0
-220 -16646 0
-220 16643 -16647 0
-220 16644 -16649 0
c (0<=(SATLiteral(220) + aux1545 - aux1546))
-16644 16649 0
-16643 16647 0
220 16649 0
220 -16644 16647 0
220 -16643 16646 0
c ((aux1542 + aux1544 - aux1547)<=0)
16640 -16651 0
16641 -16652 0
16634 -16651 0
16634 16640 -16652 0
16634 16641 -16654 0
16635 -16652 0
16635 16640 -16654 0
16635 16641 -16656 0
c (0<=(aux1542 + aux1544 - aux1547))
-16641 16656 0
-16640 16654 0
-16635 16656 0
-16635 -16641 16654 0
-16635 -16640 16652 0
-16634 16654 0
-16634 -16641 16652 0
-16634 -16640 16651 0
c ((SATLiteral(227) - aux1548 + SATLiteral(122))<=0)
-122 -16658 0
-227 -16658 0
-227 -122 -16659 0
c (0<=(SATLiteral(227) - aux1548 + SATLiteral(122)))
122 16659 0
227 16659 0
227 122 16658 0
c ((SATLiteral(242) - aux1549 + SATLiteral(107))<=0)
-107 -16661 0
-242 -16661 0
-242 -107 -16662 0
c (0<=(SATLiteral(242) - aux1549 + SATLiteral(107)))
107 16662 0
242 16662 0
242 107 16661 0
c (( - aux1550 + SATLiteral(362) + SATLiteral(92))<=0)
-92 -16664 0
-362 -16664 0
-362 -92 -16665 0
c (0<=( - aux1550 + SATLiteral(362) + SATLiteral(92)))
92 16665 0
362 16665 0
362 92 16664 0
c (( - aux1551 + SATLiteral(377) + SATLiteral(392))<=0)
-392 -16667 0
-377 -16667 0
-377 -392 -16668 0
c (0<=( - aux1551 + SATLiteral(377) + SATLiteral(392)))
392 16668 0
377 16668 0
377 392 16667 0
c ((SATLiteral(257) + aux1551 - aux1552)<=0)
16667 -16670 0
16668 -16671 0
-257 -16670 0
-257 16667 -16671 0
-257 16668 -16673 0
c (0<=(SATLiteral(257) + aux1551 - aux1552))
-16668 16673 0
-16667 16671 0
257 16673 0
257 -16668 16671 0
257 -16667 16670 0
c ((aux1548 + aux1550 - aux1553)<=0)
16664 -16675 0
16665 -16676 0
16658 -16675 0
16658 16664 -16676 0
16658 16665 -16678 0
16659 -16676 0
16659 16664 -16678 0
16659 16665 -16680 0
c (0<=(aux1548 + aux1550 - aux1553))
-16665 16680 0
-16664 16678 0
-16659 16680 0
-16659 -16665 16678 0
-16659 -16664 16676 0
-16658 16678 0
-16658 -16665 16676 0
-16658 -16664 16675 0
c ((SATLiteral(228) - aux1554 + SATLiteral(123))<=0)
-123 -16682 0
-228 -16682 0
-228 -123 -16683 0
c (0<=(SATLiteral(228) - aux1554 + SATLiteral(123)))
123 16683 0
228 16683 0
228 123 16682 0
c ((SATLiteral(243) - aux1555 + SATLiteral(108))<=0)
-108 -16685 0
-243 -16685 0
-243 -108 -16686 0
c (0<=(SATLiteral(243) - aux1555 + SATLiteral(108)))
108 16686 0
243 16686 0
243 108 16685 0
c (( - aux1556 + SATLiteral(363) + SATLiteral(93))<=0)
-93 -16688 0
-363 -16688 0
-363 -93 -16689 0
c (0<=( - aux1556 + SATLiteral(363) + SATLiteral(93)))
93 16689 0
363 16689 0
363 93 16688 0
c (( - aux1557 + SATLiteral(378) + SATLiteral(393))<=0)
-393 -16691 0
-378 -16691 0
-378 -393 -16692 0
c (0<=( - aux1557 + SATLiteral(378) + SATLiteral(393)))
393 16692 0
378 16692 0
378 393 16691 0
c ((SATLiteral(258) + aux1557 - aux1558)<=0)
16691 -16694 0
16692 -16695 0
-258 -16694 0
-258 16691 -16695 0
-258 16692 -16697 0
c (0<=(SATLiteral(258) + aux1557 - aux1558))
-16692 16697 0
-16691 16695 0
258 16697 0
258 -16692 16695 0
258 -16691 16694 0
c ((aux1554 + aux1556 - aux1559)<=0)
16688 -16699 0
16689 -16700 0
16682 -16699 0
16682 16688 -16700 0
16682 16689 -16702 0
16683 -16700 0
16683 16688 -16702 0
16683 16689 -16704 0
c (0<=(aux1554 + aux1556 - aux1559))
-16689 16704 0
-16688 16702 0
-16683 16704 0
-16683 -16689 16702 0
-16683 -16688 16700 0
-16682 16702 0
-16682 -16689 16700 0
-16682 -16688 16699 0
c ((SATLiteral(229) - aux1560 + SATLiteral(124))<=0)
-124 -16706 0
-229 -16706 0
-229 -124 -16707 0
c (0<=(SATLiteral(229) - aux1560 + SATLiteral(124)))
124 16707 0
229 16707 0
229 124 16706 0
c ((SATLiteral(244) - aux1561 + SATLiteral(109))<=0)
-109 -16709 0
-244 -16709 0
-244 -109 -16710 0
c (0<=(SATLiteral(244) - aux1561 + SATLiteral(109)))
109 16710 0
244 16710 0
244 109 16709 0
c (( - aux1562 + SATLiteral(364) + SATLiteral(94))<=0)
-94 -16712 0
-364 -16712 0
-364 -94 -16713 0
c (0<=( - aux1562 + SATLiteral(364) + SATLiteral(94)))
94 16713 0
364 16713 0
364 94 16712 0
c (( - aux1563 + SATLiteral(379) + SATLiteral(394))<=0)
-394 -16715 0
-379 -16715 0
-379 -394 -16716 0
c (0<=( - aux1563 + SATLiteral(379) + SATLiteral(394)))
394 16716 0
379 16716 0
379 394 16715 0
c ((SATLiteral(259) + aux1563 - aux1564)<=0)
16715 -16718 0
16716 -16719 0
-259 -16718 0
-259 16715 -16719 0
-259 16716 -16721 0
c (0<=(SATLiteral(259) + aux1563 - aux1564))
-16716 16721 0
-16715 16719 0
259 16721 0
259 -16716 16719 0
259 -16715 16718 0
c ((aux1560 + aux1562 - aux1565)<=0)
16712 -16723 0
16713 -16724 0
16706 -16723 0
16706 16712 -16724 0
16706 16713 -16726 0
16707 -16724 0
16707 16712 -16726 0
16707 16713 -16728 0
c (0<=(aux1560 + aux1562 - aux1565))
-16713 16728 0
-16712 16726 0
-16707 16728 0
-16707 -16713 16726 0
-16707 -16712 16724 0
-16706 16726 0
-16706 -16713 16724 0
-16706 -16712 16723 0
c ((SATLiteral(230) - aux1566 + SATLiteral(125))<=0)
-125 -16730 0
-230 -16730 0
-230 -125 -16731 0
c (0<=(SATLiteral(230) - aux1566 + SATLiteral(125)))
125 16731 0
230 16731 0
230 125 16730 0
c ((SATLiteral(245) - aux1567 + SATLiteral(110))<=0)
-110 -16733 0
-245 -16733 0
-245 -110 -16734 0
c (0<=(SATLiteral(245) - aux1567 + SATLiteral(110)))
110 16734 0
245 16734 0
245 110 16733 0
c (( - aux1568 + SATLiteral(365) + SATLiteral(95))<=0)
-95 -16736 0
-365 -16736 0
-365 -95 -16737 0
c (0<=( - aux1568 + SATLiteral(365) + SATLiteral(95)))
95 16737 0
365 16737 0
365 95 16736 0
c (( - aux1569 + SATLiteral(380) + SATLiteral(395))<=0)
-395 -16739 0
-380 -16739 0
-380 -395 -16740 0
c (0<=( - aux1569 + SATLiteral(380) + SATLiteral(395)))
395 16740 0
380 16740 0
380 395 16739 0
c ((SATLiteral(260) + aux1569 - aux1570)<=0)
16739 -16742 0
16740 -16743 0
-260 -16742 0
-260 16739 -16743 0
-260 16740 -16745 0
c (0<=(SATLiteral(260) + aux1569 - aux1570))
-16740 16745 0
-16739 16743 0
260 16745 0
260 -16740 16743 0
260 -16739 16742 0
c ((aux1566 + aux1568 - aux1571)<=0)
16736 -16747 0
16737 -16748 0
16730 -16747 0
16730 16736 -16748 0
16730 16737 -16750 0
16731 -16748 0
16731 16736 -16750 0
16731 16737 -16752 0
c (0<=(aux1566 + aux1568 - aux1571))
-16737 16752 0
-16736 16750 0
-16731 16752 0
-16731 -16737 16750 0
-16731 -16736 16748 0
-16730 16750 0
-16730 -16737 16748 0
-16730 -16736 16747 0
c ((SATLiteral(231) - aux1572 + SATLiteral(126))<=0)
-126 -16754 0
-231 -16754 0
-231 -126 -16755 0
c (0<=(SATLiteral(231) - aux1572 + SATLiteral(126)))
126 16755 0
231 16755 0
231 126 16754 0
c ((SATLiteral(246) - aux1573 + SATLiteral(111))<=0)
-111 -16757 0
-246 -16757 0
-246 -111 -16758 0
c (0<=(SATLiteral(246) - aux1573 + SATLiteral(111)))
111 16758 0
246 16758 0
246 111 16757 0
c (( - aux1574 + SATLiteral(366) + SATLiteral(96))<=0)
-96 -16760 0
-366 -16760 0
-366 -96 -16761 0
c (0<=( - aux1574 + SATLiteral(366) + SATLiteral(96)))
96 16761 0
366 16761 0
366 96 16760 0
c (( - aux1575 + SATLiteral(381) + SATLiteral(396))<=0)
-396 -16763 0
-381 -16763 0
-381 -396 -16764 0
c (0<=( - aux1575 + SATLiteral(381) + SATLiteral(396)))
396 16764 0
381 16764 0
381 396 16763 0
c ((SATLiteral(261) + aux1575 - aux1576)<=0)
16763 -16766 0
16764 -16767 0
-261 -16766 0
-261 16763 -16767 0
-261 16764 -16769 0
c (0<=(SATLiteral(261) + aux1575 - aux1576))
-16764 16769 0
-16763 16767 0
261 16769 0
261 -16764 16767 0
261 -16763 16766 0
c ((aux1572 + aux1574 - aux1577)<=0)
16760 -16771 0
16761 -16772 0
16754 -16771 0
16754 16760 -16772 0
16754 16761 -16774 0
16755 -16772 0
16755 16760 -16774 0
16755 16761 -16776 0
c (0<=(aux1572 + aux1574 - aux1577))
-16761 16776 0
-16760 16774 0
-16755 16776 0
-16755 -16761 16774 0
-16755 -16760 16772 0
-16754 16774 0
-16754 -16761 16772 0
-16754 -16760 16771 0
c ((SATLiteral(232) - aux1578 + SATLiteral(127))<=0)
-127 -16778 0
-232 -16778 0
-232 -127 -16779 0
c (0<=(SATLiteral(232) - aux1578 + SATLiteral(127)))
127 16779 0
232 16779 0
232 127 16778 0
c ((SATLiteral(247) - aux1579 + SATLiteral(112))<=0)
-112 -16781 0
-247 -16781 0
-247 -112 -16782 0
c (0<=(SATLiteral(247) - aux1579 + SATLiteral(112)))
112 16782 0
247 16782 0
247 112 16781 0
c (( - aux1580 + SATLiteral(367) + SATLiteral(97))<=0)
-97 -16784 0
-367 -16784 0
-367 -97 -16785 0
c (0<=( - aux1580 + SATLiteral(367) + SATLiteral(97)))
97 16785 0
367 16785 0
367 97 16784 0
c (( - aux1581 + SATLiteral(382) + SATLiteral(397))<=0)
-397 -16787 0
-382 -16787 0
-382 -397 -16788 0
c (0<=( - aux1581 + SATLiteral(382) + SATLiteral(397)))
397 16788 0
382 16788 0
382 397 16787 0
c ((SATLiteral(262) + aux1581 - aux1582)<=0)
16787 -16790 0
16788 -16791 0
-262 -16790 0
-262 16787 -16791 0
-262 16788 -16793 0
c (0<=(SATLiteral(262) + aux1581 - aux1582))
-16788 16793 0
-16787 16791 0
262 16793 0
262 -16788 16791 0
262 -16787 16790 0
c ((aux1578 + aux1580 - aux1583)<=0)
16784 -16795 0
16785 -16796 0
16778 -16795 0
16778 16784 -16796 0
16778 16785 -16798 0
16779 -16796 0
16779 16784 -16798 0
16779 16785 -16800 0
c (0<=(aux1578 + aux1580 - aux1583))
-16785 16800 0
-16784 16798 0
-16779 16800 0
-16779 -16785 16798 0
-16779 -16784 16796 0
-16778 16798 0
-16778 -16785 16796 0
-16778 -16784 16795 0
c ((SATLiteral(233) - aux1584 + SATLiteral(128))<=0)
-128 -16802 0
-233 -16802 0
-233 -128 -16803 0
c (0<=(SATLiteral(233) - aux1584 + SATLiteral(128)))
128 16803 0
233 16803 0
233 128 16802 0
c ((SATLiteral(248) - aux1585 + SATLiteral(113))<=0)
-113 -16805 0
-248 -16805 0
-248 -113 -16806 0
c (0<=(SATLiteral(248) - aux1585 + SATLiteral(113)))
113 16806 0
248 16806 0
248 113 16805 0
c (( - aux1586 + SATLiteral(368) + SATLiteral(98))<=0)
-98 -16808 0
-368 -16808 0
-368 -98 -16809 0
c (0<=( - aux1586 + SATLiteral(368) + SATLiteral(98)))
98 16809 0
368 16809 0
368 98 16808 0
c (( - aux1587 + SATLiteral(383) + SATLiteral(398))<=0)
-398 -16811 0
-383 -16811 0
-383 -398 -16812 0
c (0<=( - aux1587 + SATLiteral(383) + SATLiteral(398)))
398 16812 0
383 16812 0
383 398 16811 0
c ((SATLiteral(263) + aux1587 - aux1588)<=0)
16811 -16814 0
16812 -16815 0
-263 -16814 0
-263 16811 -16815 0
-263 16812 -16817 0
c (0<=(SATLiteral(263) + aux1587 - aux1588))
-16812 16817 0
-16811 16815 0
263 16817 0
263 -16812 16815 0
263 -16811 16814 0
c ((aux1584 + aux1586 - aux1589)<=0)
16808 -16819 0
16809 -16820 0
16802 -16819 0
16802 16808 -16820 0
16802 16809 -16822 0
16803 -16820 0
16803 16808 -16822 0
16803 16809 -16824 0
c (0<=(aux1584 + aux1586 - aux1589))
-16809 16824 0
-16808 16822 0
-16803 16824 0
-16803 -16809 16822 0
-16803 -16808 16820 0
-16802 16822 0
-16802 -16809 16820 0
-16802 -16808 16819 0
c ((SATLiteral(234) - aux1590 + SATLiteral(129))<=0)
-129 -16826 0
-234 -16826 0
-234 -129 -16827 0
c (0<=(SATLiteral(234) - aux1590 + SATLiteral(129)))
129 16827 0
234 16827 0
234 129 16826 0
c ((SATLiteral(249) - aux1591 + SATLiteral(114))<=0)
-114 -16829 0
-249 -16829 0
-249 -114 -16830 0
c (0<=(SATLiteral(249) - aux1591 + SATLiteral(114)))
114 16830 0
249 16830 0
249 114 16829 0
c (( - aux1592 + SATLiteral(369) + SATLiteral(99))<=0)
-99 -16832 0
-369 -16832 0
-369 -99 -16833 0
c (0<=( - aux1592 + SATLiteral(369) + SATLiteral(99)))
99 16833 0
369 16833 0
369 99 16832 0
c (( - aux1593 + SATLiteral(384) + SATLiteral(399))<=0)
-399 -16835 0
-384 -16835 0
-384 -399 -16836 0
c (0<=( - aux1593 + SATLiteral(384) + SATLiteral(399)))
399 16836 0
384 16836 0
384 399 16835 0
c ((SATLiteral(264) + aux1593 - aux1594)<=0)
16835 -16838 0
16836 -16839 0
-264 -16838 0
-264 16835 -16839 0
-264 16836 -16841 0
c (0<=(SATLiteral(264) + aux1593 - aux1594))
-16836 16841 0
-16835 16839 0
264 16841 0
264 -16836 16839 0
264 -16835 16838 0
c ((aux1590 + aux1592 - aux1595)<=0)
16832 -16843 0
16833 -16844 0
16826 -16843 0
16826 16832 -16844 0
16826 16833 -16846 0
16827 -16844 0
16827 16832 -16846 0
16827 16833 -16848 0
c (0<=(aux1590 + aux1592 - aux1595))
-16833 16848 0
-16832 16846 0
-16827 16848 0
-16827 -16833 16846 0
-16827 -16832 16844 0
-16826 16846 0
-16826 -16833 16844 0
-16826 -16832 16843 0
c ((SATLiteral(235) - aux1596 + SATLiteral(130))<=0)
-130 -16850 0
-235 -16850 0
-235 -130 -16851 0
c (0<=(SATLiteral(235) - aux1596 + SATLiteral(130)))
130 16851 0
235 16851 0
235 130 16850 0
c ((SATLiteral(250) - aux1597 + SATLiteral(115))<=0)
-115 -16853 0
-250 -16853 0
-250 -115 -16854 0
c (0<=(SATLiteral(250) - aux1597 + SATLiteral(115)))
115 16854 0
250 16854 0
250 115 16853 0
c (( - aux1598 + SATLiteral(370) + SATLiteral(100))<=0)
-100 -16856 0
-370 -16856 0
-370 -100 -16857 0
c (0<=( - aux1598 + SATLiteral(370) + SATLiteral(100)))
100 16857 0
370 16857 0
370 100 16856 0
c (( - aux1599 + SATLiteral(385) + SATLiteral(400))<=0)
-400 -16859 0
-385 -16859 0
-385 -400 -16860 0
c (0<=( - aux1599 + SATLiteral(385) + SATLiteral(400)))
400 16860 0
385 16860 0
385 400 16859 0
c ((SATLiteral(265) + aux1599 - aux1600)<=0)
16859 -16862 0
16860 -16863 0
-265 -16862 0
-265 16859 -16863 0
-265 16860 -16865 0
c (0<=(SATLiteral(265) + aux1599 - aux1600))
-16860 16865 0
-16859 16863 0
265 16865 0
265 -16860 16863 0
265 -16859 16862 0
c ((aux1596 + aux1598 - aux1601)<=0)
16856 -16867 0
16857 -16868 0
16850 -16867 0
16850 16856 -16868 0
16850 16857 -16870 0
16851 -16868 0
16851 16856 -16870 0
16851 16857 -16872 0
c (0<=(aux1596 + aux1598 - aux1601))
-16857 16872 0
-16856 16870 0
-16851 16872 0
-16851 -16857 16870 0
-16851 -16856 16868 0
-16850 16870 0
-16850 -16857 16868 0
-16850 -16856 16867 0
c ((SATLiteral(407) - aux1602 + SATLiteral(707))<=0)
-707 -16874 0
-407 -16874 0
-407 -707 -16875 0
c (0<=(SATLiteral(407) - aux1602 + SATLiteral(707)))
707 16875 0
407 16875 0
407 707 16874 0
c ((SATLiteral(422) - aux1603 + SATLiteral(692))<=0)
-692 -16877 0
-422 -16877 0
-422 -692 -16878 0
c (0<=(SATLiteral(422) - aux1603 + SATLiteral(692)))
692 16878 0
422 16878 0
422 692 16877 0
c (( - aux1604 + SATLiteral(542) + SATLiteral(677))<=0)
-677 -16880 0
-542 -16880 0
-542 -677 -16881 0
c (0<=( - aux1604 + SATLiteral(542) + SATLiteral(677)))
677 16881 0
542 16881 0
542 677 16880 0
c (( - aux1605 + SATLiteral(557) + SATLiteral(572))<=0)
-572 -16883 0
-557 -16883 0
-557 -572 -16884 0
c (0<=( - aux1605 + SATLiteral(557) + SATLiteral(572)))
572 16884 0
557 16884 0
557 572 16883 0
c ((SATLiteral(437) + aux1605 - aux1606)<=0)
16883 -16886 0
16884 -16887 0
-437 -16886 0
-437 16883 -16887 0
-437 16884 -16889 0
c (0<=(SATLiteral(437) + aux1605 - aux1606))
-16884 16889 0
-16883 16887 0
437 16889 0
437 -16884 16887 0
437 -16883 16886 0
c ((aux1602 + aux1604 - aux1607)<=0)
16880 -16891 0
16881 -16892 0
16874 -16891 0
16874 16880 -16892 0
16874 16881 -16894 0
16875 -16892 0
16875 16880 -16894 0
16875 16881 -16896 0
c (0<=(aux1602 + aux1604 - aux1607))
-16881 16896 0
-16880 16894 0
-16875 16896 0
-16875 -16881 16894 0
-16875 -16880 16892 0
-16874 16894 0
-16874 -16881 16892 0
-16874 -16880 16891 0
c ((SATLiteral(408) - aux1608 + SATLiteral(708))<=0)
-708 -16898 0
-408 -16898 0
-408 -708 -16899 0
c (0<=(SATLiteral(408) - aux1608 + SATLiteral(708)))
708 16899 0
408 16899 0
408 708 16898 0
c ((SATLiteral(423) - aux1609 + SATLiteral(693))<=0)
-693 -16901 0
-423 -16901 0
-423 -693 -16902 0
c (0<=(SATLiteral(423) - aux1609 + SATLiteral(693)))
693 16902 0
423 16902 0
423 693 16901 0
c (( - aux1610 + SATLiteral(543) + SATLiteral(678))<=0)
-678 -16904 0
-543 -16904 0
-543 -678 -16905 0
c (0<=( - aux1610 + SATLiteral(543) + SATLiteral(678)))
678 16905 0
543 16905 0
543 678 16904 0
c (( - aux1611 + SATLiteral(558) + SATLiteral(573))<=0)
-573 -16907 0
-558 -16907 0
-558 -573 -16908 0
c (0<=( - aux1611 + SATLiteral(558) + SATLiteral(573)))
573 16908 0
558 16908 0
558 573 16907 0
c ((SATLiteral(438) + aux1611 - aux1612)<=0)
16907 -16910 0
16908 -16911 0
-438 -16910 0
-438 16907 -16911 0
-438 16908 -16913 0
c (0<=(SATLiteral(438) + aux1611 - aux1612))
-16908 16913 0
-16907 16911 0
438 16913 0
438 -16908 16911 0
438 -16907 16910 0
c ((aux1608 + aux1610 - aux1613)<=0)
16904 -16915 0
16905 -16916 0
16898 -16915 0
16898 16904 -16916 0
16898 16905 -16918 0
16899 -16916 0
16899 16904 -16918 0
16899 16905 -16920 0
c (0<=(aux1608 + aux1610 - aux1613))
-16905 16920 0
-16904 16918 0
-16899 16920 0
-16899 -16905 16918 0
-16899 -16904 16916 0
-16898 16918 0
-16898 -16905 16916 0
-16898 -16904 16915 0
c ((SATLiteral(409) - aux1614 + SATLiteral(709))<=0)
-709 -16922 0
-409 -16922 0
-409 -709 -16923 0
c (0<=(SATLiteral(409) - aux1614 + SATLiteral(709)))
709 16923 0
409 16923 0
409 709 16922 0
c ((SATLiteral(424) - aux1615 + SATLiteral(694))<=0)
-694 -16925 0
-424 -16925 0
-424 -694 -16926 0
c (0<=(SATLiteral(424) - aux1615 + SATLiteral(694)))
694 16926 0
424 16926 0
424 694 16925 0
c (( - aux1616 + SATLiteral(544) + SATLiteral(679))<=0)
-679 -16928 0
-544 -16928 0
-544 -679 -16929 0
c (0<=( - aux1616 + SATLiteral(544) + SATLiteral(679)))
679 16929 0
544 16929 0
544 679 16928 0
c (( - aux1617 + SATLiteral(559) + SATLiteral(574))<=0)
-574 -16931 0
-559 -16931 0
-559 -574 -16932 0
c (0<=( - aux1617 + SATLiteral(559) + SATLiteral(574)))
574 16932 0
559 16932 0
559 574 16931 0
c ((SATLiteral(439) + aux1617 - aux1618)<=0)
16931 -16934 0
16932 -16935 0
-439 -16934 0
-439 16931 -16935 0
-439 16932 -16937 0
c (0<=(SATLiteral(439) + aux1617 - aux1618))
-16932 16937 0
-16931 16935 0
439 16937 0
439 -16932 16935 0
439 -16931 16934 0
c ((aux1614 + aux1616 - aux1619)<=0)
16928 -16939 0
16929 -16940 0
16922 -16939 0
16922 16928 -16940 0
16922 16929 -16942 0
16923 -16940 0
16923 16928 -16942 0
16923 16929 -16944 0
c (0<=(aux1614 + aux1616 - aux1619))
-16929 16944 0
-16928 16942 0
-16923 16944 0
-16923 -16929 16942 0
-16923 -16928 16940 0
-16922 16942 0
-16922 -16929 16940 0
-16922 -16928 16939 0
c ((SATLiteral(410) - aux1620 + SATLiteral(710))<=0)
-710 -16946 0
-410 -16946 0
-410 -710 -16947 0
c (0<=(SATLiteral(410) - aux1620 + SATLiteral(710)))
710 16947 0
410 16947 0
410 710 16946 0
c ((SATLiteral(425) - aux1621 + SATLiteral(695))<=0)
-695 -16949 0
-425 -16949 0
-425 -695 -16950 0
c (0<=(SATLiteral(425) - aux1621 + SATLiteral(695)))
695 16950 0
425 16950 0
425 695 16949 0
c (( - aux1622 + SATLiteral(545) + SATLiteral(680))<=0)
-680 -16952 0
-545 -16952 0
-545 -680 -16953 0
c (0<=( - aux1622 + SATLiteral(545) + SATLiteral(680)))
680 16953 0
545 16953 0
545 680 16952 0
c (( - aux1623 + SATLiteral(560) + SATLiteral(575))<=0)
-575 -16955 0
-560 -16955 0
-560 -575 -16956 0
c (0<=( - aux1623 + SATLiteral(560) + SATLiteral(575)))
575 16956 0
560 16956 0
560 575 16955 0
c ((SATLiteral(440) + aux1623 - aux1624)<=0)
16955 -16958 0
16956 -16959 0
-440 -16958 0
-440 16955 -16959 0
-440 16956 -16961 0
c (0<=(SATLiteral(440) + aux1623 - aux1624))
-16956 16961 0
-16955 16959 0
440 16961 0
440 -16956 16959 0
440 -16955 16958 0
c ((aux1620 + aux1622 - aux1625)<=0)
16952 -16963 0
16953 -16964 0
16946 -16963 0
16946 16952 -16964 0
16946 16953 -16966 0
16947 -16964 0
16947 16952 -16966 0
16947 16953 -16968 0
c (0<=(aux1620 + aux1622 - aux1625))
-16953 16968 0
-16952 16966 0
-16947 16968 0
-16947 -16953 16966 0
-16947 -16952 16964 0
-16946 16966 0
-16946 -16953 16964 0
-16946 -16952 16963 0
c ((SATLiteral(411) - aux1626 + SATLiteral(711))<=0)
-711 -16970 0
-411 -16970 0
-411 -711 -16971 0
c (0<=(SATLiteral(411) - aux1626 + SATLiteral(711)))
711 16971 0
411 16971 0
411 711 16970 0
c ((SATLiteral(426) - aux1627 + SATLiteral(696))<=0)
-696 -16973 0
-426 -16973 0
-426 -696 -16974 0
c (0<=(SATLiteral(426) - aux1627 + SATLiteral(696)))
696 16974 0
426 16974 0
426 696 16973 0
c (( - aux1628 + SATLiteral(546) + SATLiteral(681))<=0)
-681 -16976 0
-546 -16976 0
-546 -681 -16977 0
c (0<=( - aux1628 + SATLiteral(546) + SATLiteral(681)))
681 16977 0
546 16977 0
546 681 16976 0
c (( - aux1629 + SATLiteral(561) + SATLiteral(576))<=0)
-576 -16979 0
-561 -16979 0
-561 -576 -16980 0
c (0<=( - aux1629 + SATLiteral(561) + SATLiteral(576)))
576 16980 0
561 16980 0
561 576 16979 0
c ((SATLiteral(441) + aux1629 - aux1630)<=0)
16979 -16982 0
16980 -16983 0
-441 -16982 0
-441 16979 -16983 0
-441 16980 -16985 0
c (0<=(SATLiteral(441) + aux1629 - aux1630))
-16980 16985 0
-16979 16983 0
441 16985 0
441 -16980 16983 0
441 -16979 16982 0
c ((aux1626 + aux1628 - aux1631)<=0)
16976 -16987 0
16977 -16988 0
16970 -16987 0
16970 16976 -16988 0
16970 16977 -16990 0
16971 -16988 0
16971 16976 -16990 0
16971 16977 -16992 0
c (0<=(aux1626 + aux1628 - aux1631))
-16977 16992 0
-16976 16990 0
-16971 16992 0
-16971 -16977 16990 0
-16971 -16976 16988 0
-16970 16990 0
-16970 -16977 16988 0
-16970 -16976 16987 0
c ((SATLiteral(412) - aux1632 + SATLiteral(712))<=0)
-712 -16994 0
-412 -16994 0
-412 -712 -16995 0
c (0<=(SATLiteral(412) - aux1632 + SATLiteral(712)))
712 16995 0
412 16995 0
412 712 16994 0
c ((SATLiteral(427) - aux1633 + SATLiteral(697))<=0)
-697 -16997 0
-427 -16997 0
-427 -697 -16998 0
c (0<=(SATLiteral(427) - aux1633 + SATLiteral(697)))
697 16998 0
427 16998 0
427 697 16997 0
c (( - aux1634 + SATLiteral(547) + SATLiteral(682))<=0)
-682 -17000 0
-547 -17000 0
-547 -682 -17001 0
c (0<=( - aux1634 + SATLiteral(547) + SATLiteral(682)))
682 17001 0
547 17001 0
547 682 17000 0
c (( - aux1635 + SATLiteral(562) + SATLiteral(577))<=0)
-577 -17003 0
-562 -17003 0
-562 -577 -17004 0
c (0<=( - aux1635 + SATLiteral(562) + SATLiteral(577)))
577 17004 0
562 17004 0
562 577 17003 0
c ((SATLiteral(442) + aux1635 - aux1636)<=0)
17003 -17006 0
17004 -17007 0
-442 -17006 0
-442 17003 -17007 0
-442 17004 -17009 0
c (0<=(SATLiteral(442) + aux1635 - aux1636))
-17004 17009 0
-17003 17007 0
442 17009 0
442 -17004 17007 0
442 -17003 17006 0
c ((aux1632 + aux1634 - aux1637)<=0)
17000 -17011 0
17001 -17012 0
16994 -17011 0
16994 17000 -17012 0
16994 17001 -17014 0
16995 -17012 0
16995 17000 -17014 0
16995 17001 -17016 0
c (0<=(aux1632 + aux1634 - aux1637))
-17001 17016 0
-17000 17014 0
-16995 17016 0
-16995 -17001 17014 0
-16995 -17000 17012 0
-16994 17014 0
-16994 -17001 17012 0
-16994 -17000 17011 0
c ((SATLiteral(413) - aux1638 + SATLiteral(713))<=0)
-713 -17018 0
-413 -17018 0
-413 -713 -17019 0
c (0<=(SATLiteral(413) - aux1638 + SATLiteral(713)))
713 17019 0
413 17019 0
413 713 17018 0
c ((SATLiteral(428) - aux1639 + SATLiteral(698))<=0)
-698 -17021 0
-428 -17021 0
-428 -698 -17022 0
c (0<=(SATLiteral(428) - aux1639 + SATLiteral(698)))
698 17022 0
428 17022 0
428 698 17021 0
c (( - aux1640 + SATLiteral(548) + SATLiteral(683))<=0)
-683 -17024 0
-548 -17024 0
-548 -683 -17025 0
c (0<=( - aux1640 + SATLiteral(548) + SATLiteral(683)))
683 17025 0
548 17025 0
548 683 17024 0
c (( - aux1641 + SATLiteral(563) + SATLiteral(578))<=0)
-578 -17027 0
-563 -17027 0
-563 -578 -17028 0
c (0<=( - aux1641 + SATLiteral(563) + SATLiteral(578)))
578 17028 0
563 17028 0
563 578 17027 0
c ((SATLiteral(443) + aux1641 - aux1642)<=0)
17027 -17030 0
17028 -17031 0
-443 -17030 0
-443 17027 -17031 0
-443 17028 -17033 0
c (0<=(SATLiteral(443) + aux1641 - aux1642))
-17028 17033 0
-17027 17031 0
443 17033 0
443 -17028 17031 0
443 -17027 17030 0
c ((aux1638 + aux1640 - aux1643)<=0)
17024 -17035 0
17025 -17036 0
17018 -17035 0
17018 17024 -17036 0
17018 17025 -17038 0
17019 -17036 0
17019 17024 -17038 0
17019 17025 -17040 0
c (0<=(aux1638 + aux1640 - aux1643))
-17025 17040 0
-17024 17038 0
-17019 17040 0
-17019 -17025 17038 0
-17019 -17024 17036 0
-17018 17038 0
-17018 -17025 17036 0
-17018 -17024 17035 0
c ((SATLiteral(414) - aux1644 + SATLiteral(714))<=0)
-714 -17042 0
-414 -17042 0
-414 -714 -17043 0
c (0<=(SATLiteral(414) - aux1644 + SATLiteral(714)))
714 17043 0
414 17043 0
414 714 17042 0
c ((SATLiteral(429) - aux1645 + SATLiteral(699))<=0)
-699 -17045 0
-429 -17045 0
-429 -699 -17046 0
c (0<=(SATLiteral(429) - aux1645 + SATLiteral(699)))
699 17046 0
429 17046 0
429 699 17045 0
c (( - aux1646 + SATLiteral(549) + SATLiteral(684))<=0)
-684 -17048 0
-549 -17048 0
-549 -684 -17049 0
c (0<=( - aux1646 + SATLiteral(549) + SATLiteral(684)))
684 17049 0
549 17049 0
549 684 17048 0
c (( - aux1647 + SATLiteral(564) + SATLiteral(579))<=0)
-579 -17051 0
-564 -17051 0
-564 -579 -17052 0
c (0<=( - aux1647 + SATLiteral(564) + SATLiteral(579)))
579 17052 0
564 17052 0
564 579 17051 0
c ((SATLiteral(444) + aux1647 - aux1648)<=0)
17051 -17054 0
17052 -17055 0
-444 -17054 0
-444 17051 -17055 0
-444 17052 -17057 0
c (0<=(SATLiteral(444) + aux1647 - aux1648))
-17052 17057 0
-17051 17055 0
444 17057 0
444 -17052 17055 0
444 -17051 17054 0
c ((aux1644 + aux1646 - aux1649)<=0)
17048 -17059 0
17049 -17060 0
17042 -17059 0
17042 17048 -17060 0
17042 17049 -17062 0
17043 -17060 0
17043 17048 -17062 0
17043 17049 -17064 0
c (0<=(aux1644 + aux1646 - aux1649))
-17049 17064 0
-17048 17062 0
-17043 17064 0
-17043 -17049 17062 0
-17043 -17048 17060 0
-17042 17062 0
-17042 -17049 17060 0
-17042 -17048 17059 0
c ((SATLiteral(415) - aux1650 + SATLiteral(715))<=0)
-715 -17066 0
-415 -17066 0
-415 -715 -17067 0
c (0<=(SATLiteral(415) - aux1650 + SATLiteral(715)))
715 17067 0
415 17067 0
415 715 17066 0
c ((SATLiteral(430) - aux1651 + SATLiteral(700))<=0)
-700 -17069 0
-430 -17069 0
-430 -700 -17070 0
c (0<=(SATLiteral(430) - aux1651 + SATLiteral(700)))
700 17070 0
430 17070 0
430 700 17069 0
c (( - aux1652 + SATLiteral(550) + SATLiteral(685))<=0)
-685 -17072 0
-550 -17072 0
-550 -685 -17073 0
c (0<=( - aux1652 + SATLiteral(550) + SATLiteral(685)))
685 17073 0
550 17073 0
550 685 17072 0
c (( - aux1653 + SATLiteral(565) + SATLiteral(580))<=0)
-580 -17075 0
-565 -17075 0
-565 -580 -17076 0
c (0<=( - aux1653 + SATLiteral(565) + SATLiteral(580)))
580 17076 0
565 17076 0
565 580 17075 0
c ((SATLiteral(445) + aux1653 - aux1654)<=0)
17075 -17078 0
17076 -17079 0
-445 -17078 0
-445 17075 -17079 0
-445 17076 -17081 0
c (0<=(SATLiteral(445) + aux1653 - aux1654))
-17076 17081 0
-17075 17079 0
445 17081 0
445 -17076 17079 0
445 -17075 17078 0
c ((aux1650 + aux1652 - aux1655)<=0)
17072 -17083 0
17073 -17084 0
17066 -17083 0
17066 17072 -17084 0
17066 17073 -17086 0
17067 -17084 0
17067 17072 -17086 0
17067 17073 -17088 0
c (0<=(aux1650 + aux1652 - aux1655))
-17073 17088 0
-17072 17086 0
-17067 17088 0
-17067 -17073 17086 0
-17067 -17072 17084 0
-17066 17086 0
-17066 -17073 17084 0
-17066 -17072 17083 0
c ((SATLiteral(452) - aux1656 + SATLiteral(752))<=0)
-752 -17090 0
-452 -17090 0
-452 -752 -17091 0
c (0<=(SATLiteral(452) - aux1656 + SATLiteral(752)))
752 17091 0
452 17091 0
452 752 17090 0
c ((SATLiteral(467) - aux1657 + SATLiteral(737))<=0)
-737 -17093 0
-467 -17093 0
-467 -737 -17094 0
c (0<=(SATLiteral(467) - aux1657 + SATLiteral(737)))
737 17094 0
467 17094 0
467 737 17093 0
c (( - aux1658 + SATLiteral(587) + SATLiteral(722))<=0)
-722 -17096 0
-587 -17096 0
-587 -722 -17097 0
c (0<=( - aux1658 + SATLiteral(587) + SATLiteral(722)))
722 17097 0
587 17097 0
587 722 17096 0
c (( - aux1659 + SATLiteral(602) + SATLiteral(617))<=0)
-617 -17099 0
-602 -17099 0
-602 -617 -17100 0
c (0<=( - aux1659 + SATLiteral(602) + SATLiteral(617)))
617 17100 0
602 17100 0
602 617 17099 0
c ((SATLiteral(482) + aux1659 - aux1660)<=0)
17099 -17102 0
17100 -17103 0
-482 -17102 0
-482 17099 -17103 0
-482 17100 -17105 0
c (0<=(SATLiteral(482) + aux1659 - aux1660))
-17100 17105 0
-17099 17103 0
482 17105 0
482 -17100 17103 0
482 -17099 17102 0
c ((aux1656 + aux1658 - aux1661)<=0)
17096 -17107 0
17097 -17108 0
17090 -17107 0
17090 17096 -17108 0
17090 17097 -17110 0
17091 -17108 0
17091 17096 -17110 0
17091 17097 -17112 0
c (0<=(aux1656 + aux1658 - aux1661))
-17097 17112 0
-17096 17110 0
-17091 17112 0
-17091 -17097 17110 0
-17091 -17096 17108 0
-17090 17110 0
-17090 -17097 17108 0
-17090 -17096 17107 0
c ((SATLiteral(453) - aux1662 + SATLiteral(753))<=0)
-753 -17114 0
-453 -17114 0
-453 -753 -17115 0
c (0<=(SATLiteral(453) - aux1662 + SATLiteral(753)))
753 17115 0
453 17115 0
453 753 17114 0
c ((SATLiteral(468) - aux1663 + SATLiteral(738))<=0)
-738 -17117 0
-468 -17117 0
-468 -738 -17118 0
c (0<=(SATLiteral(468) - aux1663 + SATLiteral(738)))
738 17118 0
468 17118 0
468 738 17117 0
c (( - aux1664 + SATLiteral(588) + SATLiteral(723))<=0)
-723 -17120 0
-588 -17120 0
-588 -723 -17121 0
c (0<=( - aux1664 + SATLiteral(588) + SATLiteral(723)))
723 17121 0
588 17121 0
588 723 17120 0
c (( - aux1665 + SATLiteral(603) + SATLiteral(618))<=0)
-618 -17123 0
-603 -17123 0
-603 -618 -17124 0
c (0<=( - aux1665 + SATLiteral(603) + SATLiteral(618)))
618 17124 0
603 17124 0
603 618 17123 0
c ((SATLiteral(483) + aux1665 - aux1666)<=0)
17123 -17126 0
17124 -17127 0
-483 -17126 0
-483 17123 -17127 0
-483 17124 -17129 0
c (0<=(SATLiteral(483) + aux1665 - aux1666))
-17124 17129 0
-17123 17127 0
483 17129 0
483 -17124 17127 0
483 -17123 17126 0
c ((aux1662 + aux1664 - aux1667)<=0)
17120 -17131 0
17121 -17132 0
17114 -17131 0
17114 17120 -17132 0
17114 17121 -17134 0
17115 -17132 0
17115 17120 -17134 0
17115 17121 -17136 0
c (0<=(aux1662 + aux1664 - aux1667))
-17121 17136 0
-17120 17134 0
-17115 17136 0
-17115 -17121 17134 0
-17115 -17120 17132 0
-17114 17134 0
-17114 -17121 17132 0
-17114 -17120 17131 0
c ((SATLiteral(454) - aux1668 + SATLiteral(754))<=0)
-754 -17138 0
-454 -17138 0
-454 -754 -17139 0
c (0<=(SATLiteral(454) - aux1668 + SATLiteral(754)))
754 17139 0
454 17139 0
454 754 17138 0
c ((SATLiteral(469) - aux1669 + SATLiteral(739))<=0)
-739 -17141 0
-469 -17141 0
-469 -739 -17142 0
c (0<=(SATLiteral(469) - aux1669 + SATLiteral(739)))
739 17142 0
469 17142 0
469 739 17141 0
c (( - aux1670 + SATLiteral(589) + SATLiteral(724))<=0)
-724 -17144 0
-589 -17144 0
-589 -724 -17145 0
c (0<=( - aux1670 + SATLiteral(589) + SATLiteral(724)))
724 17145 0
589 17145 0
589 724 17144 0
c (( - aux1671 + SATLiteral(604) + SATLiteral(619))<=0)
-619 -17147 0
-604 -17147 0
-604 -619 -17148 0
c (0<=( - aux1671 + SATLiteral(604) + SATLiteral(619)))
619 17148 0
604 17148 0
604 619 17147 0
c ((SATLiteral(484) + aux1671 - aux1672)<=0)
17147 -17150 0
17148 -17151 0
-484 -17150 0
-484 17147 -17151 0
-484 17148 -17153 0
c (0<=(SATLiteral(484) + aux1671 - aux1672))
-17148 17153 0
-17147 17151 0
484 17153 0
484 -17148 17151 0
484 -17147 17150 0
c ((aux1668 + aux1670 - aux1673)<=0)
17144 -17155 0
17145 -17156 0
17138 -17155 0
17138 17144 -17156 0
17138 17145 -17158 0
17139 -17156 0
17139 17144 -17158 0
17139 17145 -17160 0
c (0<=(aux1668 + aux1670 - aux1673))
-17145 17160 0
-17144 17158 0
-17139 17160 0
-17139 -17145 17158 0
-17139 -17144 17156 0
-17138 17158 0
-17138 -17145 17156 0
-17138 -17144 17155 0
c ((SATLiteral(455) - aux1674 + SATLiteral(755))<=0)
-755 -17162 0
-455 -17162 0
-455 -755 -17163 0
c (0<=(SATLiteral(455) - aux1674 + SATLiteral(755)))
755 17163 0
455 17163 0
455 755 17162 0
c ((SATLiteral(470) - aux1675 + SATLiteral(740))<=0)
-740 -17165 0
-470 -17165 0
-470 -740 -17166 0
c (0<=(SATLiteral(470) - aux1675 + SATLiteral(740)))
740 17166 0
470 17166 0
470 740 17165 0
c (( - aux1676 + SATLiteral(590) + SATLiteral(725))<=0)
-725 -17168 0
-590 -17168 0
-590 -725 -17169 0
c (0<=( - aux1676 + SATLiteral(590) + SATLiteral(725)))
725 17169 0
590 17169 0
590 725 17168 0
c (( - aux1677 + SATLiteral(605) + SATLiteral(620))<=0)
-620 -17171 0
-605 -17171 0
-605 -620 -17172 0
c (0<=( - aux1677 + SATLiteral(605) + SATLiteral(620)))
620 17172 0
605 17172 0
605 620 17171 0
c ((SATLiteral(485) + aux1677 - aux1678)<=0)
17171 -17174 0
17172 -17175 0
-485 -17174 0
-485 17171 -17175 0
-485 17172 -17177 0
c (0<=(SATLiteral(485) + aux1677 - aux1678))
-17172 17177 0
-17171 17175 0
485 17177 0
485 -17172 17175 0
485 -17171 17174 0
c ((aux1674 + aux1676 - aux1679)<=0)
17168 -17179 0
17169 -17180 0
17162 -17179 0
17162 17168 -17180 0
17162 17169 -17182 0
17163 -17180 0
17163 17168 -17182 0
17163 17169 -17184 0
c (0<=(aux1674 + aux1676 - aux1679))
-17169 17184 0
-17168 17182 0
-17163 17184 0
-17163 -17169 17182 0
-17163 -17168 17180 0
-17162 17182 0
-17162 -17169 17180 0
-17162 -17168 17179 0
c ((SATLiteral(456) - aux1680 + SATLiteral(756))<=0)
-756 -17186 0
-456 -17186 0
-456 -756 -17187 0
c (0<=(SATLiteral(456) - aux1680 + SATLiteral(756)))
756 17187 0
456 17187 0
456 756 17186 0
c ((SATLiteral(471) - aux1681 + SATLiteral(741))<=0)
-741 -17189 0
-471 -17189 0
-471 -741 -17190 0
c (0<=(SATLiteral(471) - aux1681 + SATLiteral(741)))
741 17190 0
471 17190 0
471 741 17189 0
c (( - aux1682 + SATLiteral(591) + SATLiteral(726))<=0)
-726 -17192 0
-591 -17192 0
-591 -726 -17193 0
c (0<=( - aux1682 + SATLiteral(591) + SATLiteral(726)))
726 17193 0
591 17193 0
591 726 17192 0
c (( - aux1683 + SATLiteral(606) + SATLiteral(621))<=0)
-621 -17195 0
-606 -17195 0
-606 -621 -17196 0
c (0<=( - aux1683 + SATLiteral(606) + SATLiteral(621)))
621 17196 0
606 17196 0
606 621 17195 0
c ((SATLiteral(486) + aux1683 - aux1684)<=0)
17195 -17198 0
17196 -17199 0
-486 -17198 0
-486 17195 -17199 0
-486 17196 -17201 0
c (0<=(SATLiteral(486) + aux1683 - aux1684))
-17196 17201 0
-17195 17199 0
486 17201 0
486 -17196 17199 0
486 -17195 17198 0
c ((aux1680 + aux1682 - aux1685)<=0)
17192 -17203 0
17193 -17204 0
17186 -17203 0
17186 17192 -17204 0
17186 17193 -17206 0
17187 -17204 0
17187 17192 -17206 0
17187 17193 -17208 0
c (0<=(aux1680 + aux1682 - aux1685))
-17193 17208 0
-17192 17206 0
-17187 17208 0
-17187 -17193 17206 0
-17187 -17192 17204 0
-17186 17206 0
-17186 -17193 17204 0
-17186 -17192 17203 0
c ((SATLiteral(457) - aux1686 + SATLiteral(757))<=0)
-757 -17210 0
-457 -17210 0
-457 -757 -17211 0
c (0<=(SATLiteral(457) - aux1686 + SATLiteral(757)))
757 17211 0
457 17211 0
457 757 17210 0
c ((SATLiteral(472) - aux1687 + SATLiteral(742))<=0)
-742 -17213 0
-472 -17213 0
-472 -742 -17214 0
c (0<=(SATLiteral(472) - aux1687 + SATLiteral(742)))
742 17214 0
472 17214 0
472 742 17213 0
c (( - aux1688 + SATLiteral(592) + SATLiteral(727))<=0)
-727 -17216 0
-592 -17216 0
-592 -727 -17217 0
c (0<=( - aux1688 + SATLiteral(592) + SATLiteral(727)))
727 17217 0
592 17217 0
592 727 17216 0
c (( - aux1689 + SATLiteral(607) + SATLiteral(622))<=0)
-622 -17219 0
-607 -17219 0
-607 -622 -17220 0
c (0<=( - aux1689 + SATLiteral(607) + SATLiteral(622)))
622 17220 0
607 17220 0
607 622 17219 0
c ((SATLiteral(487) + aux1689 - aux1690)<=0)
17219 -17222 0
17220 -17223 0
-487 -17222 0
-487 17219 -17223 0
-487 17220 -17225 0
c (0<=(SATLiteral(487) + aux1689 - aux1690))
-17220 17225 0
-17219 17223 0
487 17225 0
487 -17220 17223 0
487 -17219 17222 0
c ((aux1686 + aux1688 - aux1691)<=0)
17216 -17227 0
17217 -17228 0
17210 -17227 0
17210 17216 -17228 0
17210 17217 -17230 0
17211 -17228 0
17211 17216 -17230 0
17211 17217 -17232 0
c (0<=(aux1686 + aux1688 - aux1691))
-17217 17232 0
-17216 17230 0
-17211 17232 0
-17211 -17217 17230 0
-17211 -17216 17228 0
-17210 17230 0
-17210 -17217 17228 0
-17210 -17216 17227 0
c ((SATLiteral(458) - aux1692 + SATLiteral(758))<=0)
-758 -17234 0
-458 -17234 0
-458 -758 -17235 0
c (0<=(SATLiteral(458) - aux1692 + SATLiteral(758)))
758 17235 0
458 17235 0
458 758 17234 0
c ((SATLiteral(473) - aux1693 + SATLiteral(743))<=0)
-743 -17237 0
-473 -17237 0
-473 -743 -17238 0
c (0<=(SATLiteral(473) - aux1693 + SATLiteral(743)))
743 17238 0
473 17238 0
473 743 17237 0
c (( - aux1694 + SATLiteral(593) + SATLiteral(728))<=0)
-728 -17240 0
-593 -17240 0
-593 -728 -17241 0
c (0<=( - aux1694 + SATLiteral(593) + SATLiteral(728)))
728 17241 0
593 17241 0
593 728 17240 0
c (( - aux1695 + SATLiteral(608) + SATLiteral(623))<=0)
-623 -17243 0
-608 -17243 0
-608 -623 -17244 0
c (0<=( - aux1695 + SATLiteral(608) + SATLiteral(623)))
623 17244 0
608 17244 0
608 623 17243 0
c ((SATLiteral(488) + aux1695 - aux1696)<=0)
17243 -17246 0
17244 -17247 0
-488 -17246 0
-488 17243 -17247 0
-488 17244 -17249 0
c (0<=(SATLiteral(488) + aux1695 - aux1696))
-17244 17249 0
-17243 17247 0
488 17249 0
488 -17244 17247 0
488 -17243 17246 0
c ((aux1692 + aux1694 - aux1697)<=0)
17240 -17251 0
17241 -17252 0
17234 -17251 0
17234 17240 -17252 0
17234 17241 -17254 0
17235 -17252 0
17235 17240 -17254 0
17235 17241 -17256 0
c (0<=(aux1692 + aux1694 - aux1697))
-17241 17256 0
-17240 17254 0
-17235 17256 0
-17235 -17241 17254 0
-17235 -17240 17252 0
-17234 17254 0
-17234 -17241 17252 0
-17234 -17240 17251 0
c ((SATLiteral(459) - aux1698 + SATLiteral(759))<=0)
-759 -17258 0
-459 -17258 0
-459 -759 -17259 0
c (0<=(SATLiteral(459) - aux1698 + SATLiteral(759)))
759 17259 0
459 17259 0
459 759 17258 0
c ((SATLiteral(474) - aux1699 + SATLiteral(744))<=0)
-744 -17261 0
-474 -17261 0
-474 -744 -17262 0
c (0<=(SATLiteral(474) - aux1699 + SATLiteral(744)))
744 17262 0
474 17262 0
474 744 17261 0
c (( - aux1700 + SATLiteral(594) + SATLiteral(729))<=0)
-729 -17264 0
-594 -17264 0
-594 -729 -17265 0
c (0<=( - aux1700 + SATLiteral(594) + SATLiteral(729)))
729 17265 0
594 17265 0
594 729 17264 0
c (( - aux1701 + SATLiteral(609) + SATLiteral(624))<=0)
-624 -17267 0
-609 -17267 0
-609 -624 -17268 0
c (0<=( - aux1701 + SATLiteral(609) + SATLiteral(624)))
624 17268 0
609 17268 0
609 624 17267 0
c ((SATLiteral(489) + aux1701 - aux1702)<=0)
17267 -17270 0
17268 -17271 0
-489 -17270 0
-489 17267 -17271 0
-489 17268 -17273 0
c (0<=(SATLiteral(489) + aux1701 - aux1702))
-17268 17273 0
-17267 17271 0
489 17273 0
489 -17268 17271 0
489 -17267 17270 0
c ((aux1698 + aux1700 - aux1703)<=0)
17264 -17275 0
17265 -17276 0
17258 -17275 0
17258 17264 -17276 0
17258 17265 -17278 0
17259 -17276 0
17259 17264 -17278 0
17259 17265 -17280 0
c (0<=(aux1698 + aux1700 - aux1703))
-17265 17280 0
-17264 17278 0
-17259 17280 0
-17259 -17265 17278 0
-17259 -17264 17276 0
-17258 17278 0
-17258 -17265 17276 0
-17258 -17264 17275 0
c ((SATLiteral(460) - aux1704 + SATLiteral(760))<=0)
-760 -17282 0
-460 -17282 0
-460 -760 -17283 0
c (0<=(SATLiteral(460) - aux1704 + SATLiteral(760)))
760 17283 0
460 17283 0
460 760 17282 0
c ((SATLiteral(475) - aux1705 + SATLiteral(745))<=0)
-745 -17285 0
-475 -17285 0
-475 -745 -17286 0
c (0<=(SATLiteral(475) - aux1705 + SATLiteral(745)))
745 17286 0
475 17286 0
475 745 17285 0
c (( - aux1706 + SATLiteral(595) + SATLiteral(730))<=0)
-730 -17288 0
-595 -17288 0
-595 -730 -17289 0
c (0<=( - aux1706 + SATLiteral(595) + SATLiteral(730)))
730 17289 0
595 17289 0
595 730 17288 0
c (( - aux1707 + SATLiteral(610) + SATLiteral(625))<=0)
-625 -17291 0
-610 -17291 0
-610 -625 -17292 0
c (0<=( - aux1707 + SATLiteral(610) + SATLiteral(625)))
625 17292 0
610 17292 0
610 625 17291 0
c ((SATLiteral(490) + aux1707 - aux1708)<=0)
17291 -17294 0
17292 -17295 0
-490 -17294 0
-490 17291 -17295 0
-490 17292 -17297 0
c (0<=(SATLiteral(490) + aux1707 - aux1708))
-17292 17297 0
-17291 17295 0
490 17297 0
490 -17292 17295 0
490 -17291 17294 0
c ((aux1704 + aux1706 - aux1709)<=0)
17288 -17299 0
17289 -17300 0
17282 -17299 0
17282 17288 -17300 0
17282 17289 -17302 0
17283 -17300 0
17283 17288 -17302 0
17283 17289 -17304 0
c (0<=(aux1704 + aux1706 - aux1709))
-17289 17304 0
-17288 17302 0
-17283 17304 0
-17283 -17289 17302 0
-17283 -17288 17300 0
-17282 17302 0
-17282 -17289 17300 0
-17282 -17288 17299 0
c ((SATLiteral(497) - aux1710 + SATLiteral(797))<=0)
-797 -17306 0
-497 -17306 0
-497 -797 -17307 0
c (0<=(SATLiteral(497) - aux1710 + SATLiteral(797)))
797 17307 0
497 17307 0
497 797 17306 0
c ((SATLiteral(512) - aux1711 + SATLiteral(782))<=0)
-782 -17309 0
-512 -17309 0
-512 -782 -17310 0
c (0<=(SATLiteral(512) - aux1711 + SATLiteral(782)))
782 17310 0
512 17310 0
512 782 17309 0
c (( - aux1712 + SATLiteral(632) + SATLiteral(767))<=0)
-767 -17312 0
-632 -17312 0
-632 -767 -17313 0
c (0<=( - aux1712 + SATLiteral(632) + SATLiteral(767)))
767 17313 0
632 17313 0
632 767 17312 0
c (( - aux1713 + SATLiteral(647) + SATLiteral(662))<=0)
-662 -17315 0
-647 -17315 0
-647 -662 -17316 0
c (0<=( - aux1713 + SATLiteral(647) + SATLiteral(662)))
662 17316 0
647 17316 0
647 662 17315 0
c ((SATLiteral(527) + aux1713 - aux1714)<=0)
17315 -17318 0
17316 -17319 0
-527 -17318 0
-527 17315 -17319 0
-527 17316 -17321 0
c (0<=(SATLiteral(527) + aux1713 - aux1714))
-17316 17321 0
-17315 17319 0
527 17321 0
527 -17316 17319 0
527 -17315 17318 0
c ((aux1710 + aux1712 - aux1715)<=0)
17312 -17323 0
17313 -17324 0
17306 -17323 0
17306 17312 -17324 0
17306 17313 -17326 0
17307 -17324 0
17307 17312 -17326 0
17307 17313 -17328 0
c (0<=(aux1710 + aux1712 - aux1715))
-17313 17328 0
-17312 17326 0
-17307 17328 0
-17307 -17313 17326 0
-17307 -17312 17324 0
-17306 17326 0
-17306 -17313 17324 0
-17306 -17312 17323 0
c ((SATLiteral(498) - aux1716 + SATLiteral(798))<=0)
-798 -17330 0
-498 -17330 0
-498 -798 -17331 0
c (0<=(SATLiteral(498) - aux1716 + SATLiteral(798)))
798 17331 0
498 17331 0
498 798 17330 0
c ((SATLiteral(513) - aux1717 + SATLiteral(783))<=0)
-783 -17333 0
-513 -17333 0
-513 -783 -17334 0
c (0<=(SATLiteral(513) - aux1717 + SATLiteral(783)))
783 17334 0
513 17334 0
513 783 17333 0
c (( - aux1718 + SATLiteral(633) + SATLiteral(768))<=0)
-768 -17336 0
-633 -17336 0
-633 -768 -17337 0
c (0<=( - aux1718 + SATLiteral(633) + SATLiteral(768)))
768 17337 0
633 17337 0
633 768 17336 0
c (( - aux1719 + SATLiteral(648) + SATLiteral(663))<=0)
-663 -17339 0
-648 -17339 0
-648 -663 -17340 0
c (0<=( - aux1719 + SATLiteral(648) + SATLiteral(663)))
663 17340 0
648 17340 0
648 663 17339 0
c ((SATLiteral(528) + aux1719 - aux1720)<=0)
17339 -17342 0
17340 -17343 0
-528 -17342 0
-528 17339 -17343 0
-528 17340 -17345 0
c (0<=(SATLiteral(528) + aux1719 - aux1720))
-17340 17345 0
-17339 17343 0
528 17345 0
528 -17340 17343 0
528 -17339 17342 0
c ((aux1716 + aux1718 - aux1721)<=0)
17336 -17347 0
17337 -17348 0
17330 -17347 0
17330 17336 -17348 0
17330 17337 -17350 0
17331 -17348 0
17331 17336 -17350 0
17331 17337 -17352 0
c (0<=(aux1716 + aux1718 - aux1721))
-17337 17352 0
-17336 17350 0
-17331 17352 0
-17331 -17337 17350 0
-17331 -17336 17348 0
-17330 17350 0
-17330 -17337 17348 0
-17330 -17336 17347 0
c ((SATLiteral(499) - aux1722 + SATLiteral(799))<=0)
-799 -17354 0
-499 -17354 0
-499 -799 -17355 0
c (0<=(SATLiteral(499) - aux1722 + SATLiteral(799)))
799 17355 0
499 17355 0
499 799 17354 0
c ((SATLiteral(514) - aux1723 + SATLiteral(784))<=0)
-784 -17357 0
-514 -17357 0
-514 -784 -17358 0
c (0<=(SATLiteral(514) - aux1723 + SATLiteral(784)))
784 17358 0
514 17358 0
514 784 17357 0
c (( - aux1724 + SATLiteral(634) + SATLiteral(769))<=0)
-769 -17360 0
-634 -17360 0
-634 -769 -17361 0
c (0<=( - aux1724 + SATLiteral(634) + SATLiteral(769)))
769 17361 0
634 17361 0
634 769 17360 0
c (( - aux1725 + SATLiteral(649) + SATLiteral(664))<=0)
-664 -17363 0
-649 -17363 0
-649 -664 -17364 0
c (0<=( - aux1725 + SATLiteral(649) + SATLiteral(664)))
664 17364 0
649 17364 0
649 664 17363 0
c ((SATLiteral(529) + aux1725 - aux1726)<=0)
17363 -17366 0
17364 -17367 0
-529 -17366 0
-529 17363 -17367 0
-529 17364 -17369 0
c (0<=(SATLiteral(529) + aux1725 - aux1726))
-17364 17369 0
-17363 17367 0
529 17369 0
529 -17364 17367 0
529 -17363 17366 0
c ((aux1722 + aux1724 - aux1727)<=0)
17360 -17371 0
17361 -17372 0
17354 -17371 0
17354 17360 -17372 0
17354 17361 -17374 0
17355 -17372 0
17355 17360 -17374 0
17355 17361 -17376 0
c (0<=(aux1722 + aux1724 - aux1727))
-17361 17376 0
-17360 17374 0
-17355 17376 0
-17355 -17361 17374 0
-17355 -17360 17372 0
-17354 17374 0
-17354 -17361 17372 0
-17354 -17360 17371 0
c ((SATLiteral(500) - aux1728 + SATLiteral(800))<=0)
-800 -17378 0
-500 -17378 0
-500 -800 -17379 0
c (0<=(SATLiteral(500) - aux1728 + SATLiteral(800)))
800 17379 0
500 17379 0
500 800 17378 0
c ((SATLiteral(515) - aux1729 + SATLiteral(785))<=0)
-785 -17381 0
-515 -17381 0
-515 -785 -17382 0
c (0<=(SATLiteral(515) - aux1729 + SATLiteral(785)))
785 17382 0
515 17382 0
515 785 17381 0
c (( - aux1730 + SATLiteral(635) + SATLiteral(770))<=0)
-770 -17384 0
-635 -17384 0
-635 -770 -17385 0
c (0<=( - aux1730 + SATLiteral(635) + SATLiteral(770)))
770 17385 0
635 17385 0
635 770 17384 0
c (( - aux1731 + SATLiteral(650) + SATLiteral(665))<=0)
-665 -17387 0
-650 -17387 0
-650 -665 -17388 0
c (0<=( - aux1731 + SATLiteral(650) + SATLiteral(665)))
665 17388 0
650 17388 0
650 665 17387 0
c ((SATLiteral(530) + aux1731 - aux1732)<=0)
17387 -17390 0
17388 -17391 0
-530 -17390 0
-530 17387 -17391 0
-530 17388 -17393 0
c (0<=(SATLiteral(530) + aux1731 - aux1732))
-17388 17393 0
-17387 17391 0
530 17393 0
530 -17388 17391 0
530 -17387 17390 0
c ((aux1728 + aux1730 - aux1733)<=0)
17384 -17395 0
17385 -17396 0
17378 -17395 0
17378 17384 -17396 0
17378 17385 -17398 0
17379 -17396 0
17379 17384 -17398 0
17379 17385 -17400 0
c (0<=(aux1728 + aux1730 - aux1733))
-17385 17400 0
-17384 17398 0
-17379 17400 0
-17379 -17385 17398 0
-17379 -17384 17396 0
-17378 17398 0
-17378 -17385 17396 0
-17378 -17384 17395 0
c ((SATLiteral(501) - aux1734 + SATLiteral(801))<=0)
-801 -17402 0
-501 -17402 0
-501 -801 -17403 0
c (0<=(SATLiteral(501) - aux1734 + SATLiteral(801)))
801 17403 0
501 17403 0
501 801 17402 0
c ((SATLiteral(516) - aux1735 + SATLiteral(786))<=0)
-786 -17405 0
-516 -17405 0
-516 -786 -17406 0
c (0<=(SATLiteral(516) - aux1735 + SATLiteral(786)))
786 17406 0
516 17406 0
516 786 17405 0
c (( - aux1736 + SATLiteral(636) + SATLiteral(771))<=0)
-771 -17408 0
-636 -17408 0
-636 -771 -17409 0
c (0<=( - aux1736 + SATLiteral(636) + SATLiteral(771)))
771 17409 0
636 17409 0
636 771 17408 0
c (( - aux1737 + SATLiteral(651) + SATLiteral(666))<=0)
-666 -17411 0
-651 -17411 0
-651 -666 -17412 0
c (0<=( - aux1737 + SATLiteral(651) + SATLiteral(666)))
666 17412 0
651 17412 0
651 666 17411 0
c ((SATLiteral(531) + aux1737 - aux1738)<=0)
17411 -17414 0
17412 -17415 0
-531 -17414 0
-531 17411 -17415 0
-531 17412 -17417 0
c (0<=(SATLiteral(531) + aux1737 - aux1738))
-17412 17417 0
-17411 17415 0
531 17417 0
531 -17412 17415 0
531 -17411 17414 0
c ((aux1734 + aux1736 - aux1739)<=0)
17408 -17419 0
17409 -17420 0
17402 -17419 0
17402 17408 -17420 0
17402 17409 -17422 0
17403 -17420 0
17403 17408 -17422 0
17403 17409 -17424 0
c (0<=(aux1734 + aux1736 - aux1739))
-17409 17424 0
-17408 17422 0
-17403 17424 0
-17403 -17409 17422 0
-17403 -17408 17420 0
-17402 17422 0
-17402 -17409 17420 0
-17402 -17408 17419 0
c ((SATLiteral(502) - aux1740 + SATLiteral(802))<=0)
-802 -17426 0
-502 -17426 0
-502 -802 -17427 0
c (0<=(SATLiteral(502) - aux1740 + SATLiteral(802)))
802 17427 0
502 17427 0
502 802 17426 0
c ((SATLiteral(517) - aux1741 + SATLiteral(787))<=0)
-787 -17429 0
-517 -17429 0
-517 -787 -17430 0
c (0<=(SATLiteral(517) - aux1741 + SATLiteral(787)))
787 17430 0
517 17430 0
517 787 17429 0
c (( - aux1742 + SATLiteral(637) + SATLiteral(772))<=0)
-772 -17432 0
-637 -17432 0
-637 -772 -17433 0
c (0<=( - aux1742 + SATLiteral(637) + SATLiteral(772)))
772 17433 0
637 17433 0
637 772 17432 0
c (( - aux1743 + SATLiteral(652) + SATLiteral(667))<=0)
-667 -17435 0
-652 -17435 0
-652 -667 -17436 0
c (0<=( - aux1743 + SATLiteral(652) + SATLiteral(667)))
667 17436 0
652 17436 0
652 667 17435 0
c ((SATLiteral(532) + aux1743 - aux1744)<=0)
17435 -17438 0
17436 -17439 0
-532 -17438 0
-532 17435 -17439 0
-532 17436 -17441 0
c (0<=(SATLiteral(532) + aux1743 - aux1744))
-17436 17441 0
-17435 17439 0
532 17441 0
532 -17436 17439 0
532 -17435 17438 0
c ((aux1740 + aux1742 - aux1745)<=0)
17432 -17443 0
17433 -17444 0
17426 -17443 0
17426 17432 -17444 0
17426 17433 -17446 0
17427 -17444 0
17427 17432 -17446 0
17427 17433 -17448 0
c (0<=(aux1740 + aux1742 - aux1745))
-17433 17448 0
-17432 17446 0
-17427 17448 0
-17427 -17433 17446 0
-17427 -17432 17444 0
-17426 17446 0
-17426 -17433 17444 0
-17426 -17432 17443 0
c ((SATLiteral(503) - aux1746 + SATLiteral(803))<=0)
-803 -17450 0
-503 -17450 0
-503 -803 -17451 0
c (0<=(SATLiteral(503) - aux1746 + SATLiteral(803)))
803 17451 0
503 17451 0
503 803 17450 0
c ((SATLiteral(518) - aux1747 + SATLiteral(788))<=0)
-788 -17453 0
-518 -17453 0
-518 -788 -17454 0
c (0<=(SATLiteral(518) - aux1747 + SATLiteral(788)))
788 17454 0
518 17454 0
518 788 17453 0
c (( - aux1748 + SATLiteral(638) + SATLiteral(773))<=0)
-773 -17456 0
-638 -17456 0
-638 -773 -17457 0
c (0<=( - aux1748 + SATLiteral(638) + SATLiteral(773)))
773 17457 0
638 17457 0
638 773 17456 0
c (( - aux1749 + SATLiteral(653) + SATLiteral(668))<=0)
-668 -17459 0
-653 -17459 0
-653 -668 -17460 0
c (0<=( - aux1749 + SATLiteral(653) + SATLiteral(668)))
668 17460 0
653 17460 0
653 668 17459 0
c ((SATLiteral(533) + aux1749 - aux1750)<=0)
17459 -17462 0
17460 -17463 0
-533 -17462 0
-533 17459 -17463 0
-533 17460 -17465 0
c (0<=(SATLiteral(533) + aux1749 - aux1750))
-17460 17465 0
-17459 17463 0
533 17465 0
533 -17460 17463 0
533 -17459 17462 0
c ((aux1746 + aux1748 - aux1751)<=0)
17456 -17467 0
17457 -17468 0
17450 -17467 0
17450 17456 -17468 0
17450 17457 -17470 0
17451 -17468 0
17451 17456 -17470 0
17451 17457 -17472 0
c (0<=(aux1746 + aux1748 - aux1751))
-17457 17472 0
-17456 17470 0
-17451 17472 0
-17451 -17457 17470 0
-17451 -17456 17468 0
-17450 17470 0
-17450 -17457 17468 0
-17450 -17456 17467 0
c ((SATLiteral(504) - aux1752 + SATLiteral(804))<=0)
-804 -17474 0
-504 -17474 0
-504 -804 -17475 0
c (0<=(SATLiteral(504) - aux1752 + SATLiteral(804)))
804 17475 0
504 17475 0
504 804 17474 0
c ((SATLiteral(519) - aux1753 + SATLiteral(789))<=0)
-789 -17477 0
-519 -17477 0
-519 -789 -17478 0
c (0<=(SATLiteral(519) - aux1753 + SATLiteral(789)))
789 17478 0
519 17478 0
519 789 17477 0
c (( - aux1754 + SATLiteral(639) + SATLiteral(774))<=0)
-774 -17480 0
-639 -17480 0
-639 -774 -17481 0
c (0<=( - aux1754 + SATLiteral(639) + SATLiteral(774)))
774 17481 0
639 17481 0
639 774 17480 0
c (( - aux1755 + SATLiteral(654) + SATLiteral(669))<=0)
-669 -17483 0
-654 -17483 0
-654 -669 -17484 0
c (0<=( - aux1755 + SATLiteral(654) + SATLiteral(669)))
669 17484 0
654 17484 0
654 669 17483 0
c ((SATLiteral(534) + aux1755 - aux1756)<=0)
17483 -17486 0
17484 -17487 0
-534 -17486 0
-534 17483 -17487 0
-534 17484 -17489 0
c (0<=(SATLiteral(534) + aux1755 - aux1756))
-17484 17489 0
-17483 17487 0
534 17489 0
534 -17484 17487 0
534 -17483 17486 0
c ((aux1752 + aux1754 - aux1757)<=0)
17480 -17491 0
17481 -17492 0
17474 -17491 0
17474 17480 -17492 0
17474 17481 -17494 0
17475 -17492 0
17475 17480 -17494 0
17475 17481 -17496 0
c (0<=(aux1752 + aux1754 - aux1757))
-17481 17496 0
-17480 17494 0
-17475 17496 0
-17475 -17481 17494 0
-17475 -17480 17492 0
-17474 17494 0
-17474 -17481 17492 0
-17474 -17480 17491 0
c ((SATLiteral(505) - aux1758 + SATLiteral(805))<=0)
-805 -17498 0
-505 -17498 0
-505 -805 -17499 0
c (0<=(SATLiteral(505) - aux1758 + SATLiteral(805)))
805 17499 0
505 17499 0
505 805 17498 0
c ((SATLiteral(520) - aux1759 + SATLiteral(790))<=0)
-790 -17501 0
-520 -17501 0
-520 -790 -17502 0
c (0<=(SATLiteral(520) - aux1759 + SATLiteral(790)))
790 17502 0
520 17502 0
520 790 17501 0
c (( - aux1760 + SATLiteral(640) + SATLiteral(775))<=0)
-775 -17504 0
-640 -17504 0
-640 -775 -17505 0
c (0<=( - aux1760 + SATLiteral(640) + SATLiteral(775)))
775 17505 0
640 17505 0
640 775 17504 0
c (( - aux1761 + SATLiteral(655) + SATLiteral(670))<=0)
-670 -17507 0
-655 -17507 0
-655 -670 -17508 0
c (0<=( - aux1761 + SATLiteral(655) + SATLiteral(670)))
670 17508 0
655 17508 0
655 670 17507 0
c ((SATLiteral(535) + aux1761 - aux1762)<=0)
17507 -17510 0
17508 -17511 0
-535 -17510 0
-535 17507 -17511 0
-535 17508 -17513 0
c (0<=(SATLiteral(535) + aux1761 - aux1762))
-17508 17513 0
-17507 17511 0
535 17513 0
535 -17508 17511 0
535 -17507 17510 0
c ((aux1758 + aux1760 - aux1763)<=0)
17504 -17515 0
17505 -17516 0
17498 -17515 0
17498 17504 -17516 0
17498 17505 -17518 0
17499 -17516 0
17499 17504 -17518 0
17499 17505 -17520 0
c (0<=(aux1758 + aux1760 - aux1763))
-17505 17520 0
-17504 17518 0
-17499 17520 0
-17499 -17505 17518 0
-17499 -17504 17516 0
-17498 17518 0
-17498 -17505 17516 0
-17498 -17504 17515 0
c ((SATLiteral(1082) - aux1764 + SATLiteral(977))<=0)
-977 -17522 0
-1082 -17522 0
-1082 -977 -17523 0
c (0<=(SATLiteral(1082) - aux1764 + SATLiteral(977)))
977 17523 0
1082 17523 0
1082 977 17522 0
c ((SATLiteral(1097) - aux1765 + SATLiteral(962))<=0)
-962 -17525 0
-1097 -17525 0
-1097 -962 -17526 0
c (0<=(SATLiteral(1097) - aux1765 + SATLiteral(962)))
962 17526 0
1097 17526 0
1097 962 17525 0
c ((SATLiteral(812) - aux1766 + SATLiteral(947))<=0)
-947 -17528 0
-812 -17528 0
-812 -947 -17529 0
c (0<=(SATLiteral(812) - aux1766 + SATLiteral(947)))
947 17529 0
812 17529 0
812 947 17528 0
c ((SATLiteral(827) + SATLiteral(842) - aux1767)<=0)
-842 -17531 0
-827 -17531 0
-827 -842 -17532 0
c (0<=(SATLiteral(827) + SATLiteral(842) - aux1767))
842 17532 0
827 17532 0
827 842 17531 0
c ((SATLiteral(1112) + aux1767 - aux1768)<=0)
17531 -17534 0
17532 -17535 0
-1112 -17534 0
-1112 17531 -17535 0
-1112 17532 -17537 0
c (0<=(SATLiteral(1112) + aux1767 - aux1768))
-17532 17537 0
-17531 17535 0
1112 17537 0
1112 -17532 17535 0
1112 -17531 17534 0
c ((aux1764 + aux1766 - aux1769)<=0)
17528 -17539 0
17529 -17540 0
17522 -17539 0
17522 17528 -17540 0
17522 17529 -17542 0
17523 -17540 0
17523 17528 -17542 0
17523 17529 -17544 0
c (0<=(aux1764 + aux1766 - aux1769))
-17529 17544 0
-17528 17542 0
-17523 17544 0
-17523 -17529 17542 0
-17523 -17528 17540 0
-17522 17542 0
-17522 -17529 17540 0
-17522 -17528 17539 0
c ((SATLiteral(1083) - aux1770 + SATLiteral(978))<=0)
-978 -17546 0
-1083 -17546 0
-1083 -978 -17547 0
c (0<=(SATLiteral(1083) - aux1770 + SATLiteral(978)))
978 17547 0
1083 17547 0
1083 978 17546 0
c ((SATLiteral(1098) - aux1771 + SATLiteral(963))<=0)
-963 -17549 0
-1098 -17549 0
-1098 -963 -17550 0
c (0<=(SATLiteral(1098) - aux1771 + SATLiteral(963)))
963 17550 0
1098 17550 0
1098 963 17549 0
c ((SATLiteral(813) - aux1772 + SATLiteral(948))<=0)
-948 -17552 0
-813 -17552 0
-813 -948 -17553 0
c (0<=(SATLiteral(813) - aux1772 + SATLiteral(948)))
948 17553 0
813 17553 0
813 948 17552 0
c ((SATLiteral(828) + SATLiteral(843) - aux1773)<=0)
-843 -17555 0
-828 -17555 0
-828 -843 -17556 0
c (0<=(SATLiteral(828) + SATLiteral(843) - aux1773))
843 17556 0
828 17556 0
828 843 17555 0
c ((SATLiteral(1113) + aux1773 - aux1774)<=0)
17555 -17558 0
17556 -17559 0
-1113 -17558 0
-1113 17555 -17559 0
-1113 17556 -17561 0
c (0<=(SATLiteral(1113) + aux1773 - aux1774))
-17556 17561 0
-17555 17559 0
1113 17561 0
1113 -17556 17559 0
1113 -17555 17558 0
c ((aux1770 + aux1772 - aux1775)<=0)
17552 -17563 0
17553 -17564 0
17546 -17563 0
17546 17552 -17564 0
17546 17553 -17566 0
17547 -17564 0
17547 17552 -17566 0
17547 17553 -17568 0
c (0<=(aux1770 + aux1772 - aux1775))
-17553 17568 0
-17552 17566 0
-17547 17568 0
-17547 -17553 17566 0
-17547 -17552 17564 0
-17546 17566 0
-17546 -17553 17564 0
-17546 -17552 17563 0
c ((SATLiteral(1084) - aux1776 + SATLiteral(979))<=0)
-979 -17570 0
-1084 -17570 0
-1084 -979 -17571 0
c (0<=(SATLiteral(1084) - aux1776 + SATLiteral(979)))
979 17571 0
1084 17571 0
1084 979 17570 0
c ((SATLiteral(1099) - aux1777 + SATLiteral(964))<=0)
-964 -17573 0
-1099 -17573 0
-1099 -964 -17574 0
c (0<=(SATLiteral(1099) - aux1777 + SATLiteral(964)))
964 17574 0
1099 17574 0
1099 964 17573 0
c ((SATLiteral(814) - aux1778 + SATLiteral(949))<=0)
-949 -17576 0
-814 -17576 0
-814 -949 -17577 0
c (0<=(SATLiteral(814) - aux1778 + SATLiteral(949)))
949 17577 0
814 17577 0
814 949 17576 0
c ((SATLiteral(829) + SATLiteral(844) - aux1779)<=0)
-844 -17579 0
-829 -17579 0
-829 -844 -17580 0
c (0<=(SATLiteral(829) + SATLiteral(844) - aux1779))
844 17580 0
829 17580 0
829 844 17579 0
c ((SATLiteral(1114) + aux1779 - aux1780)<=0)
17579 -17582 0
17580 -17583 0
-1114 -17582 0
-1114 17579 -17583 0
-1114 17580 -17585 0
c (0<=(SATLiteral(1114) + aux1779 - aux1780))
-17580 17585 0
-17579 17583 0
1114 17585 0
1114 -17580 17583 0
1114 -17579 17582 0
c ((aux1776 + aux1778 - aux1781)<=0)
17576 -17587 0
17577 -17588 0
17570 -17587 0
17570 17576 -17588 0
17570 17577 -17590 0
17571 -17588 0
17571 17576 -17590 0
17571 17577 -17592 0
c (0<=(aux1776 + aux1778 - aux1781))
-17577 17592 0
-17576 17590 0
-17571 17592 0
-17571 -17577 17590 0
-17571 -17576 17588 0
-17570 17590 0
-17570 -17577 17588 0
-17570 -17576 17587 0
c ((SATLiteral(1085) - aux1782 + SATLiteral(980))<=0)
-980 -17594 0
-1085 -17594 0
-1085 -980 -17595 0
c (0<=(SATLiteral(1085) - aux1782 + SATLiteral(980)))
980 17595 0
1085 17595 0
1085 980 17594 0
c ((SATLiteral(1100) - aux1783 + SATLiteral(965))<=0)
-965 -17597 0
-1100 -17597 0
-1100 -965 -17598 0
c (0<=(SATLiteral(1100) - aux1783 + SATLiteral(965)))
965 17598 0
1100 17598 0
1100 965 17597 0
c ((SATLiteral(815) - aux1784 + SATLiteral(950))<=0)
-950 -17600 0
-815 -17600 0
-815 -950 -17601 0
c (0<=(SATLiteral(815) - aux1784 + SATLiteral(950)))
950 17601 0
815 17601 0
815 950 17600 0
c ((SATLiteral(830) + SATLiteral(845) - aux1785)<=0)
-845 -17603 0
-830 -17603 0
-830 -845 -17604 0
c (0<=(SATLiteral(830) + SATLiteral(845) - aux1785))
845 17604 0
830 17604 0
830 845 17603 0
c ((SATLiteral(1115) + aux1785 - aux1786)<=0)
17603 -17606 0
17604 -17607 0
-1115 -17606 0
-1115 17603 -17607 0
-1115 17604 -17609 0
c (0<=(SATLiteral(1115) + aux1785 - aux1786))
-17604 17609 0
-17603 17607 0
1115 17609 0
1115 -17604 17607 0
1115 -17603 17606 0
c ((aux1782 + aux1784 - aux1787)<=0)
17600 -17611 0
17601 -17612 0
17594 -17611 0
17594 17600 -17612 0
17594 17601 -17614 0
17595 -17612 0
17595 17600 -17614 0
17595 17601 -17616 0
c (0<=(aux1782 + aux1784 - aux1787))
-17601 17616 0
-17600 17614 0
-17595 17616 0
-17595 -17601 17614 0
-17595 -17600 17612 0
-17594 17614 0
-17594 -17601 17612 0
-17594 -17600 17611 0
c ((SATLiteral(1086) - aux1788 + SATLiteral(981))<=0)
-981 -17618 0
-1086 -17618 0
-1086 -981 -17619 0
c (0<=(SATLiteral(1086) - aux1788 + SATLiteral(981)))
981 17619 0
1086 17619 0
1086 981 17618 0
c ((SATLiteral(1101) - aux1789 + SATLiteral(966))<=0)
-966 -17621 0
-1101 -17621 0
-1101 -966 -17622 0
c (0<=(SATLiteral(1101) - aux1789 + SATLiteral(966)))
966 17622 0
1101 17622 0
1101 966 17621 0
c ((SATLiteral(816) - aux1790 + SATLiteral(951))<=0)
-951 -17624 0
-816 -17624 0
-816 -951 -17625 0
c (0<=(SATLiteral(816) - aux1790 + SATLiteral(951)))
951 17625 0
816 17625 0
816 951 17624 0
c ((SATLiteral(831) + SATLiteral(846) - aux1791)<=0)
-846 -17627 0
-831 -17627 0
-831 -846 -17628 0
c (0<=(SATLiteral(831) + SATLiteral(846) - aux1791))
846 17628 0
831 17628 0
831 846 17627 0
c ((SATLiteral(1116) + aux1791 - aux1792)<=0)
17627 -17630 0
17628 -17631 0
-1116 -17630 0
-1116 17627 -17631 0
-1116 17628 -17633 0
c (0<=(SATLiteral(1116) + aux1791 - aux1792))
-17628 17633 0
-17627 17631 0
1116 17633 0
1116 -17628 17631 0
1116 -17627 17630 0
c ((aux1788 + aux1790 - aux1793)<=0)
17624 -17635 0
17625 -17636 0
17618 -17635 0
17618 17624 -17636 0
17618 17625 -17638 0
17619 -17636 0
17619 17624 -17638 0
17619 17625 -17640 0
c (0<=(aux1788 + aux1790 - aux1793))
-17625 17640 0
-17624 17638 0
-17619 17640 0
-17619 -17625 17638 0
-17619 -17624 17636 0
-17618 17638 0
-17618 -17625 17636 0
-17618 -17624 17635 0
c ((SATLiteral(1087) - aux1794 + SATLiteral(982))<=0)
-982 -17642 0
-1087 -17642 0
-1087 -982 -17643 0
c (0<=(SATLiteral(1087) - aux1794 + SATLiteral(982)))
982 17643 0
1087 17643 0
1087 982 17642 0
c ((SATLiteral(1102) - aux1795 + SATLiteral(967))<=0)
-967 -17645 0
-1102 -17645 0
-1102 -967 -17646 0
c (0<=(SATLiteral(1102) - aux1795 + SATLiteral(967)))
967 17646 0
1102 17646 0
1102 967 17645 0
c ((SATLiteral(817) - aux1796 + SATLiteral(952))<=0)
-952 -17648 0
-817 -17648 0
-817 -952 -17649 0
c (0<=(SATLiteral(817) - aux1796 + SATLiteral(952)))
952 17649 0
817 17649 0
817 952 17648 0
c ((SATLiteral(832) + SATLiteral(847) - aux1797)<=0)
-847 -17651 0
-832 -17651 0
-832 -847 -17652 0
c (0<=(SATLiteral(832) + SATLiteral(847) - aux1797))
847 17652 0
832 17652 0
832 847 17651 0
c ((SATLiteral(1117) + aux1797 - aux1798)<=0)
17651 -17654 0
17652 -17655 0
-1117 -17654 0
-1117 17651 -17655 0
-1117 17652 -17657 0
c (0<=(SATLiteral(1117) + aux1797 - aux1798))
-17652 17657 0
-17651 17655 0
1117 17657 0
1117 -17652 17655 0
1117 -17651 17654 0
c ((aux1794 + aux1796 - aux1799)<=0)
17648 -17659 0
17649 -17660 0
17642 -17659 0
17642 17648 -17660 0
17642 17649 -17662 0
17643 -17660 0
17643 17648 -17662 0
17643 17649 -17664 0
c (0<=(aux1794 + aux1796 - aux1799))
-17649 17664 0
-17648 17662 0
-17643 17664 0
-17643 -17649 17662 0
-17643 -17648 17660 0
-17642 17662 0
-17642 -17649 17660 0
-17642 -17648 17659 0
c ((SATLiteral(1088) - aux1800 + SATLiteral(983))<=0)
-983 -17666 0
-1088 -17666 0
-1088 -983 -17667 0
c (0<=(SATLiteral(1088) - aux1800 + SATLiteral(983)))
983 17667 0
1088 17667 0
1088 983 17666 0
c ((SATLiteral(1103) - aux1801 + SATLiteral(968))<=0)
-968 -17669 0
-1103 -17669 0
-1103 -968 -17670 0
c (0<=(SATLiteral(1103) - aux1801 + SATLiteral(968)))
968 17670 0
1103 17670 0
1103 968 17669 0
c ((SATLiteral(818) - aux1802 + SATLiteral(953))<=0)
-953 -17672 0
-818 -17672 0
-818 -953 -17673 0
c (0<=(SATLiteral(818) - aux1802 + SATLiteral(953)))
953 17673 0
818 17673 0
818 953 17672 0
c ((SATLiteral(833) + SATLiteral(848) - aux1803)<=0)
-848 -17675 0
-833 -17675 0
-833 -848 -17676 0
c (0<=(SATLiteral(833) + SATLiteral(848) - aux1803))
848 17676 0
833 17676 0
833 848 17675 0
c ((SATLiteral(1118) + aux1803 - aux1804)<=0)
17675 -17678 0
17676 -17679 0
-1118 -17678 0
-1118 17675 -17679 0
-1118 17676 -17681 0
c (0<=(SATLiteral(1118) + aux1803 - aux1804))
-17676 17681 0
-17675 17679 0
1118 17681 0
1118 -17676 17679 0
1118 -17675 17678 0
c ((aux1800 + aux1802 - aux1805)<=0)
17672 -17683 0
17673 -17684 0
17666 -17683 0
17666 17672 -17684 0
17666 17673 -17686 0
17667 -17684 0
17667 17672 -17686 0
17667 17673 -17688 0
c (0<=(aux1800 + aux1802 - aux1805))
-17673 17688 0
-17672 17686 0
-17667 17688 0
-17667 -17673 17686 0
-17667 -17672 17684 0
-17666 17686 0
-17666 -17673 17684 0
-17666 -17672 17683 0
c ((SATLiteral(1089) - aux1806 + SATLiteral(984))<=0)
-984 -17690 0
-1089 -17690 0
-1089 -984 -17691 0
c (0<=(SATLiteral(1089) - aux1806 + SATLiteral(984)))
984 17691 0
1089 17691 0
1089 984 17690 0
c ((SATLiteral(1104) - aux1807 + SATLiteral(969))<=0)
-969 -17693 0
-1104 -17693 0
-1104 -969 -17694 0
c (0<=(SATLiteral(1104) - aux1807 + SATLiteral(969)))
969 17694 0
1104 17694 0
1104 969 17693 0
c ((SATLiteral(819) - aux1808 + SATLiteral(954))<=0)
-954 -17696 0
-819 -17696 0
-819 -954 -17697 0
c (0<=(SATLiteral(819) - aux1808 + SATLiteral(954)))
954 17697 0
819 17697 0
819 954 17696 0
c ((SATLiteral(834) + SATLiteral(849) - aux1809)<=0)
-849 -17699 0
-834 -17699 0
-834 -849 -17700 0
c (0<=(SATLiteral(834) + SATLiteral(849) - aux1809))
849 17700 0
834 17700 0
834 849 17699 0
c ((SATLiteral(1119) + aux1809 - aux1810)<=0)
17699 -17702 0
17700 -17703 0
-1119 -17702 0
-1119 17699 -17703 0
-1119 17700 -17705 0
c (0<=(SATLiteral(1119) + aux1809 - aux1810))
-17700 17705 0
-17699 17703 0
1119 17705 0
1119 -17700 17703 0
1119 -17699 17702 0
c ((aux1806 + aux1808 - aux1811)<=0)
17696 -17707 0
17697 -17708 0
17690 -17707 0
17690 17696 -17708 0
17690 17697 -17710 0
17691 -17708 0
17691 17696 -17710 0
17691 17697 -17712 0
c (0<=(aux1806 + aux1808 - aux1811))
-17697 17712 0
-17696 17710 0
-17691 17712 0
-17691 -17697 17710 0
-17691 -17696 17708 0
-17690 17710 0
-17690 -17697 17708 0
-17690 -17696 17707 0
c ((SATLiteral(1090) - aux1812 + SATLiteral(985))<=0)
-985 -17714 0
-1090 -17714 0
-1090 -985 -17715 0
c (0<=(SATLiteral(1090) - aux1812 + SATLiteral(985)))
985 17715 0
1090 17715 0
1090 985 17714 0
c ((SATLiteral(1105) - aux1813 + SATLiteral(970))<=0)
-970 -17717 0
-1105 -17717 0
-1105 -970 -17718 0
c (0<=(SATLiteral(1105) - aux1813 + SATLiteral(970)))
970 17718 0
1105 17718 0
1105 970 17717 0
c ((SATLiteral(820) - aux1814 + SATLiteral(955))<=0)
-955 -17720 0
-820 -17720 0
-820 -955 -17721 0
c (0<=(SATLiteral(820) - aux1814 + SATLiteral(955)))
955 17721 0
820 17721 0
820 955 17720 0
c ((SATLiteral(835) + SATLiteral(850) - aux1815)<=0)
-850 -17723 0
-835 -17723 0
-835 -850 -17724 0
c (0<=(SATLiteral(835) + SATLiteral(850) - aux1815))
850 17724 0
835 17724 0
835 850 17723 0
c ((SATLiteral(1120) + aux1815 - aux1816)<=0)
17723 -17726 0
17724 -17727 0
-1120 -17726 0
-1120 17723 -17727 0
-1120 17724 -17729 0
c (0<=(SATLiteral(1120) + aux1815 - aux1816))
-17724 17729 0
-17723 17727 0
1120 17729 0
1120 -17724 17727 0
1120 -17723 17726 0
c ((aux1812 + aux1814 - aux1817)<=0)
17720 -17731 0
17721 -17732 0
17714 -17731 0
17714 17720 -17732 0
17714 17721 -17734 0
17715 -17732 0
17715 17720 -17734 0
17715 17721 -17736 0
c (0<=(aux1812 + aux1814 - aux1817))
-17721 17736 0
-17720 17734 0
-17715 17736 0
-17715 -17721 17734 0
-17715 -17720 17732 0
-17714 17734 0
-17714 -17721 17732 0
-17714 -17720 17731 0
c ((SATLiteral(1127) - aux1818 + SATLiteral(1022))<=0)
-1022 -17738 0
-1127 -17738 0
-1127 -1022 -17739 0
c (0<=(SATLiteral(1127) - aux1818 + SATLiteral(1022)))
1022 17739 0
1127 17739 0
1127 1022 17738 0
c ((SATLiteral(1142) - aux1819 + SATLiteral(1007))<=0)
-1007 -17741 0
-1142 -17741 0
-1142 -1007 -17742 0
c (0<=(SATLiteral(1142) - aux1819 + SATLiteral(1007)))
1007 17742 0
1142 17742 0
1142 1007 17741 0
c ((SATLiteral(857) - aux1820 + SATLiteral(992))<=0)
-992 -17744 0
-857 -17744 0
-857 -992 -17745 0
c (0<=(SATLiteral(857) - aux1820 + SATLiteral(992)))
992 17745 0
857 17745 0
857 992 17744 0
c ((SATLiteral(872) + SATLiteral(887) - aux1821)<=0)
-887 -17747 0
-872 -17747 0
-872 -887 -17748 0
c (0<=(SATLiteral(872) + SATLiteral(887) - aux1821))
887 17748 0
872 17748 0
872 887 17747 0
c ((SATLiteral(1157) + aux1821 - aux1822)<=0)
17747 -17750 0
17748 -17751 0
-1157 -17750 0
-1157 17747 -17751 0
-1157 17748 -17753 0
c (0<=(SATLiteral(1157) + aux1821 - aux1822))
-17748 17753 0
-17747 17751 0
1157 17753 0
1157 -17748 17751 0
1157 -17747 17750 0
c ((aux1818 + aux1820 - aux1823)<=0)
17744 -17755 0
17745 -17756 0
17738 -17755 0
17738 17744 -17756 0
17738 17745 -17758 0
17739 -17756 0
17739 17744 -17758 0
17739 17745 -17760 0
c (0<=(aux1818 + aux1820 - aux1823))
-17745 17760 0
-17744 17758 0
-17739 17760 0
-17739 -17745 17758 0
-17739 -17744 17756 0
-17738 17758 0
-17738 -17745 17756 0
-17738 -17744 17755 0
c ((SATLiteral(1128) - aux1824 + SATLiteral(1023))<=0)
-1023 -17762 0
-1128 -17762 0
-1128 -1023 -17763 0
c (0<=(SATLiteral(1128) - aux1824 + SATLiteral(1023)))
1023 17763 0
1128 17763 0
1128 1023 17762 0
c ((SATLiteral(1143) - aux1825 + SATLiteral(1008))<=0)
-1008 -17765 0
-1143 -17765 0
-1143 -1008 -17766 0
c (0<=(SATLiteral(1143) - aux1825 + SATLiteral(1008)))
1008 17766 0
1143 17766 0
1143 1008 17765 0
c ((SATLiteral(858) - aux1826 + SATLiteral(993))<=0)
-993 -17768 0
-858 -17768 0
-858 -993 -17769 0
c (0<=(SATLiteral(858) - aux1826 + SATLiteral(993)))
993 17769 0
858 17769 0
858 993 17768 0
c ((SATLiteral(873) + SATLiteral(888) - aux1827)<=0)
-888 -17771 0
-873 -17771 0
-873 -888 -17772 0
c (0<=(SATLiteral(873) + SATLiteral(888) - aux1827))
888 17772 0
873 17772 0
873 888 17771 0
c ((SATLiteral(1158) + aux1827 - aux1828)<=0)
17771 -17774 0
17772 -17775 0
-1158 -17774 0
-1158 17771 -17775 0
-1158 17772 -17777 0
c (0<=(SATLiteral(1158) + aux1827 - aux1828))
-17772 17777 0
-17771 17775 0
1158 17777 0
1158 -17772 17775 0
1158 -17771 17774 0
c ((aux1824 + aux1826 - aux1829)<=0)
17768 -17779 0
17769 -17780 0
17762 -17779 0
17762 17768 -17780 0
17762 17769 -17782 0
17763 -17780 0
17763 17768 -17782 0
17763 17769 -17784 0
c (0<=(aux1824 + aux1826 - aux1829))
-17769 17784 0
-17768 17782 0
-17763 17784 0
-17763 -17769 17782 0
-17763 -17768 17780 0
-17762 17782 0
-17762 -17769 17780 0
-17762 -17768 17779 0
c ((SATLiteral(1129) - aux1830 + SATLiteral(1024))<=0)
-1024 -17786 0
-1129 -17786 0
-1129 -1024 -17787 0
c (0<=(SATLiteral(1129) - aux1830 + SATLiteral(1024)))
1024 17787 0
1129 17787 0
1129 1024 17786 0
c ((SATLiteral(1144) - aux1831 + SATLiteral(1009))<=0)
-1009 -17789 0
-1144 -17789 0
-1144 -1009 -17790 0
c (0<=(SATLiteral(1144) - aux1831 + SATLiteral(1009)))
1009 17790 0
1144 17790 0
1144 1009 17789 0
c ((SATLiteral(859) - aux1832 + SATLiteral(994))<=0)
-994 -17792 0
-859 -17792 0
-859 -994 -17793 0
c (0<=(SATLiteral(859) - aux1832 + SATLiteral(994)))
994 17793 0
859 17793 0
859 994 17792 0
c ((SATLiteral(874) + SATLiteral(889) - aux1833)<=0)
-889 -17795 0
-874 -17795 0
-874 -889 -17796 0
c (0<=(SATLiteral(874) + SATLiteral(889) - aux1833))
889 17796 0
874 17796 0
874 889 17795 0
c ((SATLiteral(1159) + aux1833 - aux1834)<=0)
17795 -17798 0
17796 -17799 0
-1159 -17798 0
-1159 17795 -17799 0
-1159 17796 -17801 0
c (0<=(SATLiteral(1159) + aux1833 - aux1834))
-17796 17801 0
-17795 17799 0
1159 17801 0
1159 -17796 17799 0
1159 -17795 17798 0
c ((aux1830 + aux1832 - aux1835)<=0)
17792 -17803 0
17793 -17804 0
17786 -17803 0
17786 17792 -17804 0
17786 17793 -17806 0
17787 -17804 0
17787 17792 -17806 0
17787 17793 -17808 0
c (0<=(aux1830 + aux1832 - aux1835))
-17793 17808 0
-17792 17806 0
-17787 17808 0
-17787 -17793 17806 0
-17787 -17792 17804 0
-17786 17806 0
-17786 -17793 17804 0
-17786 -17792 17803 0
c ((SATLiteral(1130) - aux1836 + SATLiteral(1025))<=0)
-1025 -17810 0
-1130 -17810 0
-1130 -1025 -17811 0
c (0<=(SATLiteral(1130) - aux1836 + SATLiteral(1025)))
1025 17811 0
1130 17811 0
1130 1025 17810 0
c ((SATLiteral(1145) - aux1837 + SATLiteral(1010))<=0)
-1010 -17813 0
-1145 -17813 0
-1145 -1010 -17814 0
c (0<=(SATLiteral(1145) - aux1837 + SATLiteral(1010)))
1010 17814 0
1145 17814 0
1145 1010 17813 0
c ((SATLiteral(860) - aux1838 + SATLiteral(995))<=0)
-995 -17816 0
-860 -17816 0
-860 -995 -17817 0
c (0<=(SATLiteral(860) - aux1838 + SATLiteral(995)))
995 17817 0
860 17817 0
860 995 17816 0
c ((SATLiteral(875) + SATLiteral(890) - aux1839)<=0)
-890 -17819 0
-875 -17819 0
-875 -890 -17820 0
c (0<=(SATLiteral(875) + SATLiteral(890) - aux1839))
890 17820 0
875 17820 0
875 890 17819 0
c ((SATLiteral(1160) + aux1839 - aux1840)<=0)
17819 -17822 0
17820 -17823 0
-1160 -17822 0
-1160 17819 -17823 0
-1160 17820 -17825 0
c (0<=(SATLiteral(1160) + aux1839 - aux1840))
-17820 17825 0
-17819 17823 0
1160 17825 0
1160 -17820 17823 0
1160 -17819 17822 0
c ((aux1836 + aux1838 - aux1841)<=0)
17816 -17827 0
17817 -17828 0
17810 -17827 0
17810 17816 -17828 0
17810 17817 -17830 0
17811 -17828 0
17811 17816 -17830 0
17811 17817 -17832 0
c (0<=(aux1836 + aux1838 - aux1841))
-17817 17832 0
-17816 17830 0
-17811 17832 0
-17811 -17817 17830 0
-17811 -17816 17828 0
-17810 17830 0
-17810 -17817 17828 0
-17810 -17816 17827 0
c ((SATLiteral(1131) - aux1842 + SATLiteral(1026))<=0)
-1026 -17834 0
-1131 -17834 0
-1131 -1026 -17835 0
c (0<=(SATLiteral(1131) - aux1842 + SATLiteral(1026)))
1026 17835 0
1131 17835 0
1131 1026 17834 0
c ((SATLiteral(1146) - aux1843 + SATLiteral(1011))<=0)
-1011 -17837 0
-1146 -17837 0
-1146 -1011 -17838 0
c (0<=(SATLiteral(1146) - aux1843 + SATLiteral(1011)))
1011 17838 0
1146 17838 0
1146 1011 17837 0
c ((SATLiteral(861) - aux1844 + SATLiteral(996))<=0)
-996 -17840 0
-861 -17840 0
-861 -996 -17841 0
c (0<=(SATLiteral(861) - aux1844 + SATLiteral(996)))
996 17841 0
861 17841 0
861 996 17840 0
c ((SATLiteral(876) + SATLiteral(891) - aux1845)<=0)
-891 -17843 0
-876 -17843 0
-876 -891 -17844 0
c (0<=(SATLiteral(876) + SATLiteral(891) - aux1845))
891 17844 0
876 17844 0
876 891 17843 0
c ((SATLiteral(1161) + aux1845 - aux1846)<=0)
17843 -17846 0
17844 -17847 0
-1161 -17846 0
-1161 17843 -17847 0
-1161 17844 -17849 0
c (0<=(SATLiteral(1161) + aux1845 - aux1846))
-17844 17849 0
-17843 17847 0
1161 17849 0
1161 -17844 17847 0
1161 -17843 17846 0
c ((aux1842 + aux1844 - aux1847)<=0)
17840 -17851 0
17841 -17852 0
17834 -17851 0
17834 17840 -17852 0
17834 17841 -17854 0
17835 -17852 0
17835 17840 -17854 0
17835 17841 -17856 0
c (0<=(aux1842 + aux1844 - aux1847))
-17841 17856 0
-17840 17854 0
-17835 17856 0
-17835 -17841 17854 0
-17835 -17840 17852 0
-17834 17854 0
-17834 -17841 17852 0
-17834 -17840 17851 0
c ((SATLiteral(1132) - aux1848 + SATLiteral(1027))<=0)
-1027 -17858 0
-1132 -17858 0
-1132 -1027 -17859 0
c (0<=(SATLiteral(1132) - aux1848 + SATLiteral(1027)))
1027 17859 0
1132 17859 0
1132 1027 17858 0
c ((SATLiteral(1147) - aux1849 + SATLiteral(1012))<=0)
-1012 -17861 0
-1147 -17861 0
-1147 -1012 -17862 0
c (0<=(SATLiteral(1147) - aux1849 + SATLiteral(1012)))
1012 17862 0
1147 17862 0
1147 1012 17861 0
c ((SATLiteral(862) - aux1850 + SATLiteral(997))<=0)
-997 -17864 0
-862 -17864 0
-862 -997 -17865 0
c (0<=(SATLiteral(862) - aux1850 + SATLiteral(997)))
997 17865 0
862 17865 0
862 997 17864 0
c ((SATLiteral(877) + SATLiteral(892) - aux1851)<=0)
-892 -17867 0
-877 -17867 0
-877 -892 -17868 0
c (0<=(SATLiteral(877) + SATLiteral(892) - aux1851))
892 17868 0
877 17868 0
877 892 17867 0
c ((SATLiteral(1162) + aux1851 - aux1852)<=0)
17867 -17870 0
17868 -17871 0
-1162 -17870 0
-1162 17867 -17871 0
-1162 17868 -17873 0
c (0<=(SATLiteral(1162) + aux1851 - aux1852))
-17868 17873 0
-17867 17871 0
1162 17873 0
1162 -17868 17871 0
1162 -17867 17870 0
c ((aux1848 + aux1850 - aux1853)<=0)
17864 -17875 0
17865 -17876 0
17858 -17875 0
17858 17864 -17876 0
17858 17865 -17878 0
17859 -17876 0
17859 17864 -17878 0
17859 17865 -17880 0
c (0<=(aux1848 + aux1850 - aux1853))
-17865 17880 0
-17864 17878 0
-17859 17880 0
-17859 -17865 17878 0
-17859 -17864 17876 0
-17858 17878 0
-17858 -17865 17876 0
-17858 -17864 17875 0
c ((SATLiteral(1133) - aux1854 + SATLiteral(1028))<=0)
-1028 -17882 0
-1133 -17882 0
-1133 -1028 -17883 0
c (0<=(SATLiteral(1133) - aux1854 + SATLiteral(1028)))
1028 17883 0
1133 17883 0
1133 1028 17882 0
c ((SATLiteral(1148) - aux1855 + SATLiteral(1013))<=0)
-1013 -17885 0
-1148 -17885 0
-1148 -1013 -17886 0
c (0<=(SATLiteral(1148) - aux1855 + SATLiteral(1013)))
1013 17886 0
1148 17886 0
1148 1013 17885 0
c ((SATLiteral(863) - aux1856 + SATLiteral(998))<=0)
-998 -17888 0
-863 -17888 0
-863 -998 -17889 0
c (0<=(SATLiteral(863) - aux1856 + SATLiteral(998)))
998 17889 0
863 17889 0
863 998 17888 0
c ((SATLiteral(878) + SATLiteral(893) - aux1857)<=0)
-893 -17891 0
-878 -17891 0
-878 -893 -17892 0
c (0<=(SATLiteral(878) + SATLiteral(893) - aux1857))
893 17892 0
878 17892 0
878 893 17891 0
c ((SATLiteral(1163) + aux1857 - aux1858)<=0)
17891 -17894 0
17892 -17895 0
-1163 -17894 0
-1163 17891 -17895 0
-1163 17892 -17897 0
c (0<=(SATLiteral(1163) + aux1857 - aux1858))
-17892 17897 0
-17891 17895 0
1163 17897 0
1163 -17892 17895 0
1163 -17891 17894 0
c ((aux1854 + aux1856 - aux1859)<=0)
17888 -17899 0
17889 -17900 0
17882 -17899 0
17882 17888 -17900 0
17882 17889 -17902 0
17883 -17900 0
17883 17888 -17902 0
17883 17889 -17904 0
c (0<=(aux1854 + aux1856 - aux1859))
-17889 17904 0
-17888 17902 0
-17883 17904 0
-17883 -17889 17902 0
-17883 -17888 17900 0
-17882 17902 0
-17882 -17889 17900 0
-17882 -17888 17899 0
c ((SATLiteral(1134) - aux1860 + SATLiteral(1029))<=0)
-1029 -17906 0
-1134 -17906 0
-1134 -1029 -17907 0
c (0<=(SATLiteral(1134) - aux1860 + SATLiteral(1029)))
1029 17907 0
1134 17907 0
1134 1029 17906 0
c ((SATLiteral(1149) - aux1861 + SATLiteral(1014))<=0)
-1014 -17909 0
-1149 -17909 0
-1149 -1014 -17910 0
c (0<=(SATLiteral(1149) - aux1861 + SATLiteral(1014)))
1014 17910 0
1149 17910 0
1149 1014 17909 0
c ((SATLiteral(864) - aux1862 + SATLiteral(999))<=0)
-999 -17912 0
-864 -17912 0
-864 -999 -17913 0
c (0<=(SATLiteral(864) - aux1862 + SATLiteral(999)))
999 17913 0
864 17913 0
864 999 17912 0
c ((SATLiteral(879) + SATLiteral(894) - aux1863)<=0)
-894 -17915 0
-879 -17915 0
-879 -894 -17916 0
c (0<=(SATLiteral(879) + SATLiteral(894) - aux1863))
894 17916 0
879 17916 0
879 894 17915 0
c ((SATLiteral(1164) + aux1863 - aux1864)<=0)
17915 -17918 0
17916 -17919 0
-1164 -17918 0
-1164 17915 -17919 0
-1164 17916 -17921 0
c (0<=(SATLiteral(1164) + aux1863 - aux1864))
-17916 17921 0
-17915 17919 0
1164 17921 0
1164 -17916 17919 0
1164 -17915 17918 0
c ((aux1860 + aux1862 - aux1865)<=0)
17912 -17923 0
17913 -17924 0
17906 -17923 0
17906 17912 -17924 0
17906 17913 -17926 0
17907 -17924 0
17907 17912 -17926 0
17907 17913 -17928 0
c (0<=(aux1860 + aux1862 - aux1865))
-17913 17928 0
-17912 17926 0
-17907 17928 0
-17907 -17913 17926 0
-17907 -17912 17924 0
-17906 17926 0
-17906 -17913 17924 0
-17906 -17912 17923 0
c ((SATLiteral(1135) - aux1866 + SATLiteral(1030))<=0)
-1030 -17930 0
-1135 -17930 0
-1135 -1030 -17931 0
c (0<=(SATLiteral(1135) - aux1866 + SATLiteral(1030)))
1030 17931 0
1135 17931 0
1135 1030 17930 0
c ((SATLiteral(1150) - aux1867 + SATLiteral(1015))<=0)
-1015 -17933 0
-1150 -17933 0
-1150 -1015 -17934 0
c (0<=(SATLiteral(1150) - aux1867 + SATLiteral(1015)))
1015 17934 0
1150 17934 0
1150 1015 17933 0
c ((SATLiteral(865) - aux1868 + SATLiteral(1000))<=0)
-1000 -17936 0
-865 -17936 0
-865 -1000 -17937 0
c (0<=(SATLiteral(865) - aux1868 + SATLiteral(1000)))
1000 17937 0
865 17937 0
865 1000 17936 0
c ((SATLiteral(880) + SATLiteral(895) - aux1869)<=0)
-895 -17939 0
-880 -17939 0
-880 -895 -17940 0
c (0<=(SATLiteral(880) + SATLiteral(895) - aux1869))
895 17940 0
880 17940 0
880 895 17939 0
c ((SATLiteral(1165) + aux1869 - aux1870)<=0)
17939 -17942 0
17940 -17943 0
-1165 -17942 0
-1165 17939 -17943 0
-1165 17940 -17945 0
c (0<=(SATLiteral(1165) + aux1869 - aux1870))
-17940 17945 0
-17939 17943 0
1165 17945 0
1165 -17940 17943 0
1165 -17939 17942 0
c ((aux1866 + aux1868 - aux1871)<=0)
17936 -17947 0
17937 -17948 0
17930 -17947 0
17930 17936 -17948 0
17930 17937 -17950 0
17931 -17948 0
17931 17936 -17950 0
17931 17937 -17952 0
c (0<=(aux1866 + aux1868 - aux1871))
-17937 17952 0
-17936 17950 0
-17931 17952 0
-17931 -17937 17950 0
-17931 -17936 17948 0
-17930 17950 0
-17930 -17937 17948 0
-17930 -17936 17947 0
c ((SATLiteral(1172) - aux1872 + SATLiteral(1067))<=0)
-1067 -17954 0
-1172 -17954 0
-1172 -1067 -17955 0
c (0<=(SATLiteral(1172) - aux1872 + SATLiteral(1067)))
1067 17955 0
1172 17955 0
1172 1067 17954 0
c ((SATLiteral(1187) - aux1873 + SATLiteral(1052))<=0)
-1052 -17957 0
-1187 -17957 0
-1187 -1052 -17958 0
c (0<=(SATLiteral(1187) - aux1873 + SATLiteral(1052)))
1052 17958 0
1187 17958 0
1187 1052 17957 0
c ((SATLiteral(902) - aux1874 + SATLiteral(1037))<=0)
-1037 -17960 0
-902 -17960 0
-902 -1037 -17961 0
c (0<=(SATLiteral(902) - aux1874 + SATLiteral(1037)))
1037 17961 0
902 17961 0
902 1037 17960 0
c ((SATLiteral(917) + SATLiteral(932) - aux1875)<=0)
-932 -17963 0
-917 -17963 0
-917 -932 -17964 0
c (0<=(SATLiteral(917) + SATLiteral(932) - aux1875))
932 17964 0
917 17964 0
917 932 17963 0
c ((SATLiteral(1202) + aux1875 - aux1876)<=0)
17963 -17966 0
17964 -17967 0
-1202 -17966 0
-1202 17963 -17967 0
-1202 17964 -17969 0
c (0<=(SATLiteral(1202) + aux1875 - aux1876))
-17964 17969 0
-17963 17967 0
1202 17969 0
1202 -17964 17967 0
1202 -17963 17966 0
c ((aux1872 + aux1874 - aux1877)<=0)
17960 -17971 0
17961 -17972 0
17954 -17971 0
17954 17960 -17972 0
17954 17961 -17974 0
17955 -17972 0
17955 17960 -17974 0
17955 17961 -17976 0
c (0<=(aux1872 + aux1874 - aux1877))
-17961 17976 0
-17960 17974 0
-17955 17976 0
-17955 -17961 17974 0
-17955 -17960 17972 0
-17954 17974 0
-17954 -17961 17972 0
-17954 -17960 17971 0
c ((SATLiteral(1173) - aux1878 + SATLiteral(1068))<=0)
-1068 -17978 0
-1173 -17978 0
-1173 -1068 -17979 0
c (0<=(SATLiteral(1173) - aux1878 + SATLiteral(1068)))
1068 17979 0
1173 17979 0
1173 1068 17978 0
c ((SATLiteral(1188) - aux1879 + SATLiteral(1053))<=0)
-1053 -17981 0
-1188 -17981 0
-1188 -1053 -17982 0
c (0<=(SATLiteral(1188) - aux1879 + SATLiteral(1053)))
1053 17982 0
1188 17982 0
1188 1053 17981 0
c ((SATLiteral(903) - aux1880 + SATLiteral(1038))<=0)
-1038 -17984 0
-903 -17984 0
-903 -1038 -17985 0
c (0<=(SATLiteral(903) - aux1880 + SATLiteral(1038)))
1038 17985 0
903 17985 0
903 1038 17984 0
c ((SATLiteral(918) + SATLiteral(933) - aux1881)<=0)
-933 -17987 0
-918 -17987 0
-918 -933 -17988 0
c (0<=(SATLiteral(918) + SATLiteral(933) - aux1881))
933 17988 0
918 17988 0
918 933 17987 0
c ((SATLiteral(1203) + aux1881 - aux1882)<=0)
17987 -17990 0
17988 -17991 0
-1203 -17990 0
-1203 17987 -17991 0
-1203 17988 -17993 0
c (0<=(SATLiteral(1203) + aux1881 - aux1882))
-17988 17993 0
-17987 17991 0
1203 17993 0
1203 -17988 17991 0
1203 -17987 17990 0
c ((aux1878 + aux1880 - aux1883)<=0)
17984 -17995 0
17985 -17996 0
17978 -17995 0
17978 17984 -17996 0
17978 17985 -17998 0
17979 -17996 0
17979 17984 -17998 0
17979 17985 -18000 0
c (0<=(aux1878 + aux1880 - aux1883))
-17985 18000 0
-17984 17998 0
-17979 18000 0
-17979 -17985 17998 0
-17979 -17984 17996 0
-17978 17998 0
-17978 -17985 17996 0
-17978 -17984 17995 0
c ((SATLiteral(1174) - aux1884 + SATLiteral(1069))<=0)
-1069 -18002 0
-1174 -18002 0
-1174 -1069 -18003 0
c (0<=(SATLiteral(1174) - aux1884 + SATLiteral(1069)))
1069 18003 0
1174 18003 0
1174 1069 18002 0
c ((SATLiteral(1189) - aux1885 + SATLiteral(1054))<=0)
-1054 -18005 0
-1189 -18005 0
-1189 -1054 -18006 0
c (0<=(SATLiteral(1189) - aux1885 + SATLiteral(1054)))
1054 18006 0
1189 18006 0
1189 1054 18005 0
c ((SATLiteral(904) - aux1886 + SATLiteral(1039))<=0)
-1039 -18008 0
-904 -18008 0
-904 -1039 -18009 0
c (0<=(SATLiteral(904) - aux1886 + SATLiteral(1039)))
1039 18009 0
904 18009 0
904 1039 18008 0
c ((SATLiteral(919) + SATLiteral(934) - aux1887)<=0)
-934 -18011 0
-919 -18011 0
-919 -934 -18012 0
c (0<=(SATLiteral(919) + SATLiteral(934) - aux1887))
934 18012 0
919 18012 0
919 934 18011 0
c ((SATLiteral(1204) + aux1887 - aux1888)<=0)
18011 -18014 0
18012 -18015 0
-1204 -18014 0
-1204 18011 -18015 0
-1204 18012 -18017 0
c (0<=(SATLiteral(1204) + aux1887 - aux1888))
-18012 18017 0
-18011 18015 0
1204 18017 0
1204 -18012 18015 0
1204 -18011 18014 0
c ((aux1884 + aux1886 - aux1889)<=0)
18008 -18019 0
18009 -18020 0
18002 -18019 0
18002 18008 -18020 0
18002 18009 -18022 0
18003 -18020 0
18003 18008 -18022 0
18003 18009 -18024 0
c (0<=(aux1884 + aux1886 - aux1889))
-18009 18024 0
-18008 18022 0
-18003 18024 0
-18003 -18009 18022 0
-18003 -18008 18020 0
-18002 18022 0
-18002 -18009 18020 0
-18002 -18008 18019 0
c ((SATLiteral(1175) - aux1890 + SATLiteral(1070))<=0)
-1070 -18026 0
-1175 -18026 0
-1175 -1070 -18027 0
c (0<=(SATLiteral(1175) - aux1890 + SATLiteral(1070)))
1070 18027 0
1175 18027 0
1175 1070 18026 0
c ((SATLiteral(1190) - aux1891 + SATLiteral(1055))<=0)
-1055 -18029 0
-1190 -18029 0
-1190 -1055 -18030 0
c (0<=(SATLiteral(1190) - aux1891 + SATLiteral(1055)))
1055 18030 0
1190 18030 0
1190 1055 18029 0
c ((SATLiteral(905) - aux1892 + SATLiteral(1040))<=0)
-1040 -18032 0
-905 -18032 0
-905 -1040 -18033 0
c (0<=(SATLiteral(905) - aux1892 + SATLiteral(1040)))
1040 18033 0
905 18033 0
905 1040 18032 0
c ((SATLiteral(920) + SATLiteral(935) - aux1893)<=0)
-935 -18035 0
-920 -18035 0
-920 -935 -18036 0
c (0<=(SATLiteral(920) + SATLiteral(935) - aux1893))
935 18036 0
920 18036 0
920 935 18035 0
c ((SATLiteral(1205) + aux1893 - aux1894)<=0)
18035 -18038 0
18036 -18039 0
-1205 -18038 0
-1205 18035 -18039 0
-1205 18036 -18041 0
c (0<=(SATLiteral(1205) + aux1893 - aux1894))
-18036 18041 0
-18035 18039 0
1205 18041 0
1205 -18036 18039 0
1205 -18035 18038 0
c ((aux1890 + aux1892 - aux1895)<=0)
18032 -18043 0
18033 -18044 0
18026 -18043 0
18026 18032 -18044 0
18026 18033 -18046 0
18027 -18044 0
18027 18032 -18046 0
18027 18033 -18048 0
c (0<=(aux1890 + aux1892 - aux1895))
-18033 18048 0
-18032 18046 0
-18027 18048 0
-18027 -18033 18046 0
-18027 -18032 18044 0
-18026 18046 0
-18026 -18033 18044 0
-18026 -18032 18043 0
c ((SATLiteral(1176) - aux1896 + SATLiteral(1071))<=0)
-1071 -18050 0
-1176 -18050 0
-1176 -1071 -18051 0
c (0<=(SATLiteral(1176) - aux1896 + SATLiteral(1071)))
1071 18051 0
1176 18051 0
1176 1071 18050 0
c ((SATLiteral(1191) - aux1897 + SATLiteral(1056))<=0)
-1056 -18053 0
-1191 -18053 0
-1191 -1056 -18054 0
c (0<=(SATLiteral(1191) - aux1897 + SATLiteral(1056)))
1056 18054 0
1191 18054 0
1191 1056 18053 0
c ((SATLiteral(906) - aux1898 + SATLiteral(1041))<=0)
-1041 -18056 0
-906 -18056 0
-906 -1041 -18057 0
c (0<=(SATLiteral(906) - aux1898 + SATLiteral(1041)))
1041 18057 0
906 18057 0
906 1041 18056 0
c ((SATLiteral(921) + SATLiteral(936) - aux1899)<=0)
-936 -18059 0
-921 -18059 0
-921 -936 -18060 0
c (0<=(SATLiteral(921) + SATLiteral(936) - aux1899))
936 18060 0
921 18060 0
921 936 18059 0
c ((SATLiteral(1206) + aux1899 - aux1900)<=0)
18059 -18062 0
18060 -18063 0
-1206 -18062 0
-1206 18059 -18063 0
-1206 18060 -18065 0
c (0<=(SATLiteral(1206) + aux1899 - aux1900))
-18060 18065 0
-18059 18063 0
1206 18065 0
1206 -18060 18063 0
1206 -18059 18062 0
c ((aux1896 + aux1898 - aux1901)<=0)
18056 -18067 0
18057 -18068 0
18050 -18067 0
18050 18056 -18068 0
18050 18057 -18070 0
18051 -18068 0
18051 18056 -18070 0
18051 18057 -18072 0
c (0<=(aux1896 + aux1898 - aux1901))
-18057 18072 0
-18056 18070 0
-18051 18072 0
-18051 -18057 18070 0
-18051 -18056 18068 0
-18050 18070 0
-18050 -18057 18068 0
-18050 -18056 18067 0
c ((SATLiteral(1177) - aux1902 + SATLiteral(1072))<=0)
-1072 -18074 0
-1177 -18074 0
-1177 -1072 -18075 0
c (0<=(SATLiteral(1177) - aux1902 + SATLiteral(1072)))
1072 18075 0
1177 18075 0
1177 1072 18074 0
c ((SATLiteral(1192) - aux1903 + SATLiteral(1057))<=0)
-1057 -18077 0
-1192 -18077 0
-1192 -1057 -18078 0
c (0<=(SATLiteral(1192) - aux1903 + SATLiteral(1057)))
1057 18078 0
1192 18078 0
1192 1057 18077 0
c ((SATLiteral(907) - aux1904 + SATLiteral(1042))<=0)
-1042 -18080 0
-907 -18080 0
-907 -1042 -18081 0
c (0<=(SATLiteral(907) - aux1904 + SATLiteral(1042)))
1042 18081 0
907 18081 0
907 1042 18080 0
c ((SATLiteral(922) + SATLiteral(937) - aux1905)<=0)
-937 -18083 0
-922 -18083 0
-922 -937 -18084 0
c (0<=(SATLiteral(922) + SATLiteral(937) - aux1905))
937 18084 0
922 18084 0
922 937 18083 0
c ((SATLiteral(1207) + aux1905 - aux1906)<=0)
18083 -18086 0
18084 -18087 0
-1207 -18086 0
-1207 18083 -18087 0
-1207 18084 -18089 0
c (0<=(SATLiteral(1207) + aux1905 - aux1906))
-18084 18089 0
-18083 18087 0
1207 18089 0
1207 -18084 18087 0
1207 -18083 18086 0
c ((aux1902 + aux1904 - aux1907)<=0)
18080 -18091 0
18081 -18092 0
18074 -18091 0
18074 18080 -18092 0
18074 18081 -18094 0
18075 -18092 0
18075 18080 -18094 0
18075 18081 -18096 0
c (0<=(aux1902 + aux1904 - aux1907))
-18081 18096 0
-18080 18094 0
-18075 18096 0
-18075 -18081 18094 0
-18075 -18080 18092 0
-18074 18094 0
-18074 -18081 18092 0
-18074 -18080 18091 0
c ((SATLiteral(1178) - aux1908 + SATLiteral(1073))<=0)
-1073 -18098 0
-1178 -18098 0
-1178 -1073 -18099 0
c (0<=(SATLiteral(1178) - aux1908 + SATLiteral(1073)))
1073 18099 0
1178 18099 0
1178 1073 18098 0
c ((SATLiteral(1193) - aux1909 + SATLiteral(1058))<=0)
-1058 -18101 0
-1193 -18101 0
-1193 -1058 -18102 0
c (0<=(SATLiteral(1193) - aux1909 + SATLiteral(1058)))
1058 18102 0
1193 18102 0
1193 1058 18101 0
c ((SATLiteral(908) - aux1910 + SATLiteral(1043))<=0)
-1043 -18104 0
-908 -18104 0
-908 -1043 -18105 0
c (0<=(SATLiteral(908) - aux1910 + SATLiteral(1043)))
1043 18105 0
908 18105 0
908 1043 18104 0
c ((SATLiteral(923) + SATLiteral(938) - aux1911)<=0)
-938 -18107 0
-923 -18107 0
-923 -938 -18108 0
c (0<=(SATLiteral(923) + SATLiteral(938) - aux1911))
938 18108 0
923 18108 0
923 938 18107 0
c ((SATLiteral(1208) + aux1911 - aux1912)<=0)
18107 -18110 0
18108 -18111 0
-1208 -18110 0
-1208 18107 -18111 0
-1208 18108 -18113 0
c (0<=(SATLiteral(1208) + aux1911 - aux1912))
-18108 18113 0
-18107 18111 0
1208 18113 0
1208 -18108 18111 0
1208 -18107 18110 0
c ((aux1908 + aux1910 - aux1913)<=0)
18104 -18115 0
18105 -18116 0
18098 -18115 0
18098 18104 -18116 0
18098 18105 -18118 0
18099 -18116 0
18099 18104 -18118 0
18099 18105 -18120 0
c (0<=(aux1908 + aux1910 - aux1913))
-18105 18120 0
-18104 18118 0
-18099 18120 0
-18099 -18105 18118 0
-18099 -18104 18116 0
-18098 18118 0
-18098 -18105 18116 0
-18098 -18104 18115 0
c ((SATLiteral(1179) - aux1914 + SATLiteral(1074))<=0)
-1074 -18122 0
-1179 -18122 0
-1179 -1074 -18123 0
c (0<=(SATLiteral(1179) - aux1914 + SATLiteral(1074)))
1074 18123 0
1179 18123 0
1179 1074 18122 0
c ((SATLiteral(1194) - aux1915 + SATLiteral(1059))<=0)
-1059 -18125 0
-1194 -18125 0
-1194 -1059 -18126 0
c (0<=(SATLiteral(1194) - aux1915 + SATLiteral(1059)))
1059 18126 0
1194 18126 0
1194 1059 18125 0
c ((SATLiteral(909) - aux1916 + SATLiteral(1044))<=0)
-1044 -18128 0
-909 -18128 0
-909 -1044 -18129 0
c (0<=(SATLiteral(909) - aux1916 + SATLiteral(1044)))
1044 18129 0
909 18129 0
909 1044 18128 0
c ((SATLiteral(924) + SATLiteral(939) - aux1917)<=0)
-939 -18131 0
-924 -18131 0
-924 -939 -18132 0
c (0<=(SATLiteral(924) + SATLiteral(939) - aux1917))
939 18132 0
924 18132 0
924 939 18131 0
c ((SATLiteral(1209) + aux1917 - aux1918)<=0)
18131 -18134 0
18132 -18135 0
-1209 -18134 0
-1209 18131 -18135 0
-1209 18132 -18137 0
c (0<=(SATLiteral(1209) + aux1917 - aux1918))
-18132 18137 0
-18131 18135 0
1209 18137 0
1209 -18132 18135 0
1209 -18131 18134 0
c ((aux1914 + aux1916 - aux1919)<=0)
18128 -18139 0
18129 -18140 0
18122 -18139 0
18122 18128 -18140 0
18122 18129 -18142 0
18123 -18140 0
18123 18128 -18142 0
18123 18129 -18144 0
c (0<=(aux1914 + aux1916 - aux1919))
-18129 18144 0
-18128 18142 0
-18123 18144 0
-18123 -18129 18142 0
-18123 -18128 18140 0
-18122 18142 0
-18122 -18129 18140 0
-18122 -18128 18139 0
c ((SATLiteral(1180) - aux1920 + SATLiteral(1075))<=0)
-1075 -18146 0
-1180 -18146 0
-1180 -1075 -18147 0
c (0<=(SATLiteral(1180) - aux1920 + SATLiteral(1075)))
1075 18147 0
1180 18147 0
1180 1075 18146 0
c ((SATLiteral(1195) - aux1921 + SATLiteral(1060))<=0)
-1060 -18149 0
-1195 -18149 0
-1195 -1060 -18150 0
c (0<=(SATLiteral(1195) - aux1921 + SATLiteral(1060)))
1060 18150 0
1195 18150 0
1195 1060 18149 0
c ((SATLiteral(910) - aux1922 + SATLiteral(1045))<=0)
-1045 -18152 0
-910 -18152 0
-910 -1045 -18153 0
c (0<=(SATLiteral(910) - aux1922 + SATLiteral(1045)))
1045 18153 0
910 18153 0
910 1045 18152 0
c ((SATLiteral(925) + SATLiteral(940) - aux1923)<=0)
-940 -18155 0
-925 -18155 0
-925 -940 -18156 0
c (0<=(SATLiteral(925) + SATLiteral(940) - aux1923))
940 18156 0
925 18156 0
925 940 18155 0
c ((SATLiteral(1210) + aux1923 - aux1924)<=0)
18155 -18158 0
18156 -18159 0
-1210 -18158 0
-1210 18155 -18159 0
-1210 18156 -18161 0
c (0<=(SATLiteral(1210) + aux1923 - aux1924))
-18156 18161 0
-18155 18159 0
1210 18161 0
1210 -18156 18159 0
1210 -18155 18158 0
c ((aux1920 + aux1922 - aux1925)<=0)
18152 -18163 0
18153 -18164 0
18146 -18163 0
18146 18152 -18164 0
18146 18153 -18166 0
18147 -18164 0
18147 18152 -18166 0
18147 18153 -18168 0
c (0<=(aux1920 + aux1922 - aux1925))
-18153 18168 0
-18152 18166 0
-18147 18168 0
-18147 -18153 18166 0
-18147 -18152 18164 0
-18146 18166 0
-18146 -18153 18164 0
-18146 -18152 18163 0
